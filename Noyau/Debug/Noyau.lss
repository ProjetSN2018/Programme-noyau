
Noyau.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006c1c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00086c1c  00086c1c  00016c1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000f40  20070000  00086c24  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000005c8  20070f40  00087b64  00020f40  2**2
                  ALLOC
  4 .stack        00002000  20071508  0008812c  00020f40  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020f40  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020f69  2**0
                  CONTENTS, READONLY
  7 .debug_info   000195db  00000000  00000000  00020fc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003d36  00000000  00000000  0003a59d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004c0d  00000000  00000000  0003e2d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ac8  00000000  00000000  00042ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009a0  00000000  00000000  000439a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001b1df  00000000  00000000  00044348  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00012a19  00000000  00000000  0005f527  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00064f60  00000000  00000000  00071f40  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002410  00000000  00000000  000d6ea0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	08 35 07 20 55 1a 08 00 51 1a 08 00 51 1a 08 00     .5. U...Q...Q...
   80010:	51 1a 08 00 51 1a 08 00 51 1a 08 00 00 00 00 00     Q...Q...Q.......
	...
   8002c:	51 1a 08 00 51 1a 08 00 00 00 00 00 51 1a 08 00     Q...Q.......Q...
   8003c:	51 1a 08 00 51 1a 08 00 51 1a 08 00 a1 07 08 00     Q...Q...Q.......
   8004c:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...
   8005c:	51 1a 08 00 51 1a 08 00 51 1a 08 00 00 00 00 00     Q...Q...Q.......
   8006c:	c5 18 08 00 d9 18 08 00 ed 18 08 00 01 19 08 00     ................
	...
   80084:	79 10 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     y...Q...Q...Q...
   80094:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...
   800a4:	00 00 00 00 51 1a 08 00 f5 12 08 00 51 1a 08 00     ....Q.......Q...
   800b4:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...
   800c4:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...
   800d4:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...
   800e4:	51 1a 08 00 51 1a 08 00 51 1a 08 00 51 1a 08 00     Q...Q...Q...Q...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070f40 	.word	0x20070f40
   80110:	00000000 	.word	0x00000000
   80114:	00086c24 	.word	0x00086c24

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00086c24 	.word	0x00086c24
   80154:	20070f44 	.word	0x20070f44
   80158:	00086c24 	.word	0x00086c24
   8015c:	00000000 	.word	0x00000000

00080160 <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
   80160:	b921      	cbnz	r1, 8016c <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
   80162:	6843      	ldr	r3, [r0, #4]
   80164:	f023 0301 	bic.w	r3, r3, #1
   80168:	6043      	str	r3, [r0, #4]
   8016a:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
   8016c:	6843      	ldr	r3, [r0, #4]
   8016e:	f043 0301 	orr.w	r3, r3, #1
   80172:	6043      	str	r3, [r0, #4]
   80174:	4770      	bx	lr

00080176 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
   80176:	6201      	str	r1, [r0, #32]
   80178:	4770      	bx	lr

0008017a <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
   8017a:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
   8017c:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   8017e:	6884      	ldr	r4, [r0, #8]
   80180:	42a5      	cmp	r5, r4
   80182:	d003      	beq.n	8018c <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
   80184:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   80186:	6884      	ldr	r4, [r0, #8]
   80188:	42ac      	cmp	r4, r5
   8018a:	d1fb      	bne.n	80184 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
   8018c:	b161      	cbz	r1, 801a8 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8018e:	f3c4 5001 	ubfx	r0, r4, #20, #2
   80192:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80196:	f3c4 4003 	ubfx	r0, r4, #16, #4
   8019a:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
   8019e:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
   801a2:	bf18      	it	ne
   801a4:	300c      	addne	r0, #12
   801a6:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
   801a8:	b142      	cbz	r2, 801bc <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
   801aa:	f3c4 3102 	ubfx	r1, r4, #12, #3
   801ae:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   801b2:	f3c4 2003 	ubfx	r0, r4, #8, #4
   801b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   801ba:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
   801bc:	b143      	cbz	r3, 801d0 <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   801be:	f3c4 1202 	ubfx	r2, r4, #4, #3
   801c2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   801c6:	f004 040f 	and.w	r4, r4, #15
   801ca:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   801ce:	601c      	str	r4, [r3, #0]
	}
}
   801d0:	bc30      	pop	{r4, r5}
   801d2:	4770      	bx	lr

000801d4 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
   801d4:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
   801d6:	6844      	ldr	r4, [r0, #4]
   801d8:	f014 0f01 	tst.w	r4, #1
   801dc:	d005      	beq.n	801ea <rtc_set_time+0x16>
		if (ul_hour > 12) {
   801de:	290c      	cmp	r1, #12
   801e0:	d93d      	bls.n	8025e <rtc_set_time+0x8a>
			ul_hour -= 12;
   801e2:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
   801e4:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   801e8:	e000      	b.n	801ec <rtc_set_time+0x18>
	uint32_t ul_time = 0;
   801ea:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   801ec:	4c1d      	ldr	r4, [pc, #116]	; (80264 <rtc_set_time+0x90>)
   801ee:	fba4 5603 	umull	r5, r6, r4, r3
   801f2:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
   801f4:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   801f8:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   801fc:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
   80200:	fba4 6502 	umull	r6, r5, r4, r2
   80204:	08ed      	lsrs	r5, r5, #3
   80206:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
   8020a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8020e:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   80212:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80216:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
   80218:	fba4 4201 	umull	r4, r2, r4, r1
   8021c:	08d2      	lsrs	r2, r2, #3
   8021e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
   80222:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80226:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   8022a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   8022e:	6983      	ldr	r3, [r0, #24]
   80230:	f013 0f04 	tst.w	r3, #4
   80234:	d0fb      	beq.n	8022e <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
   80236:	6803      	ldr	r3, [r0, #0]
   80238:	f043 0301 	orr.w	r3, r3, #1
   8023c:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   8023e:	6983      	ldr	r3, [r0, #24]
   80240:	f013 0f01 	tst.w	r3, #1
   80244:	d0fb      	beq.n	8023e <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80246:	2301      	movs	r3, #1
   80248:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
   8024a:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
   8024c:	6803      	ldr	r3, [r0, #0]
   8024e:	f023 0301 	bic.w	r3, r3, #1
   80252:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
   80254:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80256:	f000 0001 	and.w	r0, r0, #1
   8025a:	bcf0      	pop	{r4, r5, r6, r7}
   8025c:	4770      	bx	lr
	uint32_t ul_time = 0;
   8025e:	2700      	movs	r7, #0
   80260:	e7c4      	b.n	801ec <rtc_set_time+0x18>
   80262:	bf00      	nop
   80264:	cccccccd 	.word	0xcccccccd

00080268 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
   80268:	b4f0      	push	{r4, r5, r6, r7}
   8026a:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
   8026c:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   8026e:	68c4      	ldr	r4, [r0, #12]
   80270:	42a5      	cmp	r5, r4
   80272:	d003      	beq.n	8027c <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
   80274:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   80276:	68c4      	ldr	r4, [r0, #12]
   80278:	42ac      	cmp	r4, r5
   8027a:	d1fb      	bne.n	80274 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
   8027c:	b199      	cbz	r1, 802a6 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8027e:	f3c4 3003 	ubfx	r0, r4, #12, #4
   80282:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80286:	f3c4 2703 	ubfx	r7, r4, #8, #4
   8028a:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8028e:	f3c4 1002 	ubfx	r0, r4, #4, #3
   80292:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80296:	f004 000f 	and.w	r0, r4, #15
   8029a:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8029e:	2564      	movs	r5, #100	; 0x64
   802a0:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
   802a4:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
   802a6:	b142      	cbz	r2, 802ba <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802a8:	f3c4 5000 	ubfx	r0, r4, #20, #1
   802ac:	0081      	lsls	r1, r0, #2
   802ae:	4408      	add	r0, r1
   802b0:	f3c4 4103 	ubfx	r1, r4, #16, #4
   802b4:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   802b8:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
   802ba:	b143      	cbz	r3, 802ce <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802bc:	f3c4 7201 	ubfx	r2, r4, #28, #2
   802c0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   802c4:	f3c4 6103 	ubfx	r1, r4, #24, #4
   802c8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   802cc:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
   802ce:	b116      	cbz	r6, 802d6 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
   802d0:	f3c4 5442 	ubfx	r4, r4, #21, #3
   802d4:	6034      	str	r4, [r6, #0]
	}
}
   802d6:	bcf0      	pop	{r4, r5, r6, r7}
   802d8:	4770      	bx	lr
	...

000802dc <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
   802dc:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802de:	4d2a      	ldr	r5, [pc, #168]	; (80388 <rtc_set_date+0xac>)
   802e0:	fba5 4603 	umull	r4, r6, r5, r3
   802e4:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
   802e6:	9c03      	ldr	r4, [sp, #12]
   802e8:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802ea:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
   802ee:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   802f2:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802f6:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
   802fa:	fba5 6402 	umull	r6, r4, r5, r2
   802fe:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80300:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
   80304:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80308:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8030c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
   80310:	4b1e      	ldr	r3, [pc, #120]	; (8038c <rtc_set_date+0xb0>)
   80312:	fba3 4301 	umull	r4, r3, r3, r1
   80316:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80318:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
   8031c:	4b1c      	ldr	r3, [pc, #112]	; (80390 <rtc_set_date+0xb4>)
   8031e:	fba3 4301 	umull	r4, r3, r3, r1
   80322:	095b      	lsrs	r3, r3, #5
   80324:	fba5 6403 	umull	r6, r4, r5, r3
   80328:	08e4      	lsrs	r4, r4, #3
   8032a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8032e:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80332:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
   80334:	fba5 4301 	umull	r4, r3, r5, r1
   80338:	08db      	lsrs	r3, r3, #3
   8033a:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   8033e:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80342:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
   80346:	fba5 1503 	umull	r1, r5, r5, r3
   8034a:	08ed      	lsrs	r5, r5, #3
   8034c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80350:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80354:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   80358:	6983      	ldr	r3, [r0, #24]
   8035a:	f013 0f04 	tst.w	r3, #4
   8035e:	d0fb      	beq.n	80358 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
   80360:	6803      	ldr	r3, [r0, #0]
   80362:	f043 0302 	orr.w	r3, r3, #2
   80366:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   80368:	6983      	ldr	r3, [r0, #24]
   8036a:	f013 0f01 	tst.w	r3, #1
   8036e:	d0fb      	beq.n	80368 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80370:	2301      	movs	r3, #1
   80372:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
   80374:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
   80376:	6803      	ldr	r3, [r0, #0]
   80378:	f023 0302 	bic.w	r3, r3, #2
   8037c:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
   8037e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80380:	f000 0002 	and.w	r0, r0, #2
   80384:	bc70      	pop	{r4, r5, r6}
   80386:	4770      	bx	lr
   80388:	cccccccd 	.word	0xcccccccd
   8038c:	10624dd3 	.word	0x10624dd3
   80390:	51eb851f 	.word	0x51eb851f

00080394 <Menu>:
	int iIndexY;
}menuParam;
 

int Menu(int sc, ...)
{
   80394:	b40f      	push	{r0, r1, r2, r3}
   80396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8039a:	b082      	sub	sp, #8
   8039c:	9908      	ldr	r1, [sp, #32]

	switch(sc)
   8039e:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   803a2:	2b04      	cmp	r3, #4
   803a4:	f200 808e 	bhi.w	804c4 <Menu+0x130>
   803a8:	e8df f003 	tbb	[pc, r3]
   803ac:	8c766503 	.word	0x8c766503
   803b0:	7b          	.byte	0x7b
   803b1:	00          	.byte	0x00
	{
	case MENU_NEW:
		tabl[0][0] = "Bonjours,			\r";
   803b2:	4b47      	ldr	r3, [pc, #284]	; (804d0 <Menu+0x13c>)
   803b4:	4a47      	ldr	r2, [pc, #284]	; (804d4 <Menu+0x140>)
   803b6:	601a      	str	r2, [r3, #0]
		tabl[0][1] = "Comment			\r";
   803b8:	4a47      	ldr	r2, [pc, #284]	; (804d8 <Menu+0x144>)
   803ba:	605a      	str	r2, [r3, #4]
		tabl[0][2] = "aller				\r";
   803bc:	4a47      	ldr	r2, [pc, #284]	; (804dc <Menu+0x148>)
   803be:	609a      	str	r2, [r3, #8]
		tabl[0][3] = "vous?				\r";
   803c0:	4a47      	ldr	r2, [pc, #284]	; (804e0 <Menu+0x14c>)
   803c2:	60da      	str	r2, [r3, #12]
		tabl[1][0] = "Bionjourno,		\r";
   803c4:	4a47      	ldr	r2, [pc, #284]	; (804e4 <Menu+0x150>)
   803c6:	611a      	str	r2, [r3, #16]
		tabl[1][1] = "Beve				\r";
   803c8:	4a47      	ldr	r2, [pc, #284]	; (804e8 <Menu+0x154>)
   803ca:	615a      	str	r2, [r3, #20]
		tabl[1][2] = "la				\r";
   803cc:	4a47      	ldr	r2, [pc, #284]	; (804ec <Menu+0x158>)
   803ce:	619a      	str	r2, [r3, #24]
		tabl[1][3] = "aqua!!!!			\r";
   803d0:	4a47      	ldr	r2, [pc, #284]	; (804f0 <Menu+0x15c>)
   803d2:	61da      	str	r2, [r3, #28]
		tabl[2][0] = "Hello,			\r";
   803d4:	4a47      	ldr	r2, [pc, #284]	; (804f4 <Menu+0x160>)
   803d6:	621a      	str	r2, [r3, #32]
		tabl[2][1] = "How				\r";
   803d8:	4a47      	ldr	r2, [pc, #284]	; (804f8 <Menu+0x164>)
   803da:	625a      	str	r2, [r3, #36]	; 0x24
		tabl[2][2] = "are				\r";
   803dc:	4a47      	ldr	r2, [pc, #284]	; (804fc <Menu+0x168>)
   803de:	629a      	str	r2, [r3, #40]	; 0x28
		tabl[2][3] = "you??				\r";
   803e0:	4a47      	ldr	r2, [pc, #284]	; (80500 <Menu+0x16c>)
   803e2:	62da      	str	r2, [r3, #44]	; 0x2c
		tabl[3][0] = "Konichiwa,		\r";
   803e4:	4a47      	ldr	r2, [pc, #284]	; (80504 <Menu+0x170>)
   803e6:	631a      	str	r2, [r3, #48]	; 0x30
		tabl[3][1] = "Mitsubishi		\r";
   803e8:	4a47      	ldr	r2, [pc, #284]	; (80508 <Menu+0x174>)
   803ea:	635a      	str	r2, [r3, #52]	; 0x34
		tabl[3][2] = "sushi				\r";
   803ec:	4a47      	ldr	r2, [pc, #284]	; (8050c <Menu+0x178>)
   803ee:	639a      	str	r2, [r3, #56]	; 0x38
		tabl[3][3] = "Nagasaki			\r";
   803f0:	4a47      	ldr	r2, [pc, #284]	; (80510 <Menu+0x17c>)
   803f2:	63da      	str	r2, [r3, #60]	; 0x3c


		menuParam.iIndexX = 0;
   803f4:	4b47      	ldr	r3, [pc, #284]	; (80514 <Menu+0x180>)
   803f6:	2500      	movs	r5, #0
   803f8:	601d      	str	r5, [r3, #0]
		menuParam.iIndexY = 0;
   803fa:	605d      	str	r5, [r3, #4]
		//////////////////////////////////////INTERRUPT PIN/////////////////////////////
		pmc_enable_periph_clk(ID_PIOA);
   803fc:	200b      	movs	r0, #11
   803fe:	4b46      	ldr	r3, [pc, #280]	; (80518 <Menu+0x184>)
   80400:	4798      	blx	r3
		pio_set_output(PIOA, PIO_PA23, LOW, DISABLE, ENABLE);
   80402:	4c46      	ldr	r4, [pc, #280]	; (8051c <Menu+0x188>)
   80404:	2601      	movs	r6, #1
   80406:	9600      	str	r6, [sp, #0]
   80408:	462b      	mov	r3, r5
   8040a:	462a      	mov	r2, r5
   8040c:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
   80410:	4620      	mov	r0, r4
   80412:	4d43      	ldr	r5, [pc, #268]	; (80520 <Menu+0x18c>)
   80414:	47a8      	blx	r5
		
		
		
		pio_set_input(PIOA, PIO_PA24, PIO_PULLUP);
   80416:	4632      	mov	r2, r6
   80418:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
   8041c:	4620      	mov	r0, r4
   8041e:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8054c <Menu+0x1b8>
   80422:	47c0      	blx	r8
		pio_handler_set(PIOA, ID_PIOA, PIO_PA24, PIO_IT_FALL_EDGE, ButtonSelect_ISR_Handler);
   80424:	4b3f      	ldr	r3, [pc, #252]	; (80524 <Menu+0x190>)
   80426:	9300      	str	r3, [sp, #0]
   80428:	2350      	movs	r3, #80	; 0x50
   8042a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   8042e:	210b      	movs	r1, #11
   80430:	4620      	mov	r0, r4
   80432:	4f3d      	ldr	r7, [pc, #244]	; (80528 <Menu+0x194>)
   80434:	47b8      	blx	r7
		pio_enable_interrupt(PIOA, PIO_PA24);
   80436:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
   8043a:	4620      	mov	r0, r4
   8043c:	4d3b      	ldr	r5, [pc, #236]	; (8052c <Menu+0x198>)
   8043e:	47a8      	blx	r5
		
		pio_set_input(PIOA, PIO_PA16, PIO_PULLUP);
   80440:	4632      	mov	r2, r6
   80442:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   80446:	4620      	mov	r0, r4
   80448:	47c0      	blx	r8
		pio_handler_set(PIOA, ID_PIOA, PIO_PA16, PIO_IT_FALL_EDGE, ButtonSwitch_ISR_Handler);
   8044a:	4b39      	ldr	r3, [pc, #228]	; (80530 <Menu+0x19c>)
   8044c:	9300      	str	r3, [sp, #0]
   8044e:	2350      	movs	r3, #80	; 0x50
   80450:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   80454:	210b      	movs	r1, #11
   80456:	4620      	mov	r0, r4
   80458:	47b8      	blx	r7
		pio_enable_interrupt(PIOA, PIO_PA16);
   8045a:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   8045e:	4620      	mov	r0, r4
   80460:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80462:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80466:	4b33      	ldr	r3, [pc, #204]	; (80534 <Menu+0x1a0>)
   80468:	601a      	str	r2, [r3, #0]
		break;
	default:
		Error(ERR_MENU_SWITCH_BAD_SC, sc);
	}
	return 0;
}
   8046a:	2000      	movs	r0, #0
   8046c:	b002      	add	sp, #8
   8046e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   80472:	b004      	add	sp, #16
   80474:	4770      	bx	lr
		pio_toggle_pin(PIO_PA23_IDX);
   80476:	2017      	movs	r0, #23
   80478:	4b2f      	ldr	r3, [pc, #188]	; (80538 <Menu+0x1a4>)
   8047a:	4798      	blx	r3
		menuParam.iIndexY = 0;
   8047c:	4b25      	ldr	r3, [pc, #148]	; (80514 <Menu+0x180>)
   8047e:	2200      	movs	r2, #0
   80480:	605a      	str	r2, [r3, #4]
		menuParam.iIndexX++;
   80482:	681b      	ldr	r3, [r3, #0]
   80484:	3301      	adds	r3, #1
		if(menuParam.iIndexX >=4) menuParam.iIndexX = 0;
   80486:	2b03      	cmp	r3, #3
   80488:	dc02      	bgt.n	80490 <Menu+0xfc>
		menuParam.iIndexX++;
   8048a:	4a22      	ldr	r2, [pc, #136]	; (80514 <Menu+0x180>)
   8048c:	6013      	str	r3, [r2, #0]
   8048e:	e7ec      	b.n	8046a <Menu+0xd6>
		if(menuParam.iIndexX >=4) menuParam.iIndexX = 0;
   80490:	2200      	movs	r2, #0
   80492:	4b20      	ldr	r3, [pc, #128]	; (80514 <Menu+0x180>)
   80494:	601a      	str	r2, [r3, #0]
   80496:	e7e8      	b.n	8046a <Menu+0xd6>
		menuParam.iIndexY++;
   80498:	4a1e      	ldr	r2, [pc, #120]	; (80514 <Menu+0x180>)
   8049a:	6853      	ldr	r3, [r2, #4]
   8049c:	3301      	adds	r3, #1
   8049e:	6053      	str	r3, [r2, #4]
		break;
   804a0:	e7e3      	b.n	8046a <Menu+0xd6>
		sprintf(buf, tabl[menuParam.iIndexX][menuParam.iIndexY]);
   804a2:	4a1c      	ldr	r2, [pc, #112]	; (80514 <Menu+0x180>)
   804a4:	6811      	ldr	r1, [r2, #0]
   804a6:	6853      	ldr	r3, [r2, #4]
   804a8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
   804ac:	4c23      	ldr	r4, [pc, #140]	; (8053c <Menu+0x1a8>)
   804ae:	4a08      	ldr	r2, [pc, #32]	; (804d0 <Menu+0x13c>)
   804b0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
   804b4:	4620      	mov	r0, r4
   804b6:	4b22      	ldr	r3, [pc, #136]	; (80540 <Menu+0x1ac>)
   804b8:	4798      	blx	r3
		Putstr(buf);
   804ba:	4621      	mov	r1, r4
   804bc:	2067      	movs	r0, #103	; 0x67
   804be:	4b21      	ldr	r3, [pc, #132]	; (80544 <Menu+0x1b0>)
   804c0:	4798      	blx	r3
		break;
   804c2:	e7d2      	b.n	8046a <Menu+0xd6>
		Error(ERR_MENU_SWITCH_BAD_SC, sc);
   804c4:	4b20      	ldr	r3, [pc, #128]	; (80548 <Menu+0x1b4>)
   804c6:	681b      	ldr	r3, [r3, #0]
   804c8:	2010      	movs	r0, #16
   804ca:	4798      	blx	r3
   804cc:	e7cd      	b.n	8046a <Menu+0xd6>
   804ce:	bf00      	nop
   804d0:	2007101c 	.word	0x2007101c
   804d4:	000866b0 	.word	0x000866b0
   804d8:	000866c0 	.word	0x000866c0
   804dc:	000866cc 	.word	0x000866cc
   804e0:	000866d8 	.word	0x000866d8
   804e4:	000866e4 	.word	0x000866e4
   804e8:	000866f4 	.word	0x000866f4
   804ec:	00086700 	.word	0x00086700
   804f0:	00086708 	.word	0x00086708
   804f4:	00086718 	.word	0x00086718
   804f8:	00086724 	.word	0x00086724
   804fc:	00086730 	.word	0x00086730
   80500:	0008673c 	.word	0x0008673c
   80504:	00086748 	.word	0x00086748
   80508:	00086758 	.word	0x00086758
   8050c:	00086768 	.word	0x00086768
   80510:	00086774 	.word	0x00086774
   80514:	20071014 	.word	0x20071014
   80518:	000819fd 	.word	0x000819fd
   8051c:	400e0e00 	.word	0x400e0e00
   80520:	000815e5 	.word	0x000815e5
   80524:	00080571 	.word	0x00080571
   80528:	00081855 	.word	0x00081855
   8052c:	00081639 	.word	0x00081639
   80530:	00080551 	.word	0x00080551
   80534:	e000e100 	.word	0xe000e100
   80538:	00081679 	.word	0x00081679
   8053c:	200713e0 	.word	0x200713e0
   80540:	00081d31 	.word	0x00081d31
   80544:	00080ee1 	.word	0x00080ee1
   80548:	20070538 	.word	0x20070538
   8054c:	000815b3 	.word	0x000815b3

00080550 <ButtonSwitch_ISR_Handler>:

void ButtonSwitch_ISR_Handler()
{
   80550:	b510      	push	{r4, lr}
   80552:	b082      	sub	sp, #8
	PushTask(Menu,MENU_SWITCH_BUTTON,0,0);
   80554:	2300      	movs	r3, #0
   80556:	9300      	str	r3, [sp, #0]
   80558:	2265      	movs	r2, #101	; 0x65
   8055a:	4903      	ldr	r1, [pc, #12]	; (80568 <ButtonSwitch_ISR_Handler+0x18>)
   8055c:	2066      	movs	r0, #102	; 0x66
   8055e:	4c03      	ldr	r4, [pc, #12]	; (8056c <ButtonSwitch_ISR_Handler+0x1c>)
   80560:	47a0      	blx	r4
}
   80562:	b002      	add	sp, #8
   80564:	bd10      	pop	{r4, pc}
   80566:	bf00      	nop
   80568:	00080395 	.word	0x00080395
   8056c:	000810f9 	.word	0x000810f9

00080570 <ButtonSelect_ISR_Handler>:

void ButtonSelect_ISR_Handler()
{
   80570:	b510      	push	{r4, lr}
   80572:	b082      	sub	sp, #8
	PushTask(Menu, MENU_SELECT_BUTTON,0,0);
   80574:	2300      	movs	r3, #0
   80576:	9300      	str	r3, [sp, #0]
   80578:	2266      	movs	r2, #102	; 0x66
   8057a:	4903      	ldr	r1, [pc, #12]	; (80588 <ButtonSelect_ISR_Handler+0x18>)
   8057c:	4610      	mov	r0, r2
   8057e:	4c03      	ldr	r4, [pc, #12]	; (8058c <ButtonSelect_ISR_Handler+0x1c>)
   80580:	47a0      	blx	r4
   80582:	b002      	add	sp, #8
   80584:	bd10      	pop	{r4, pc}
   80586:	bf00      	nop
   80588:	00080395 	.word	0x00080395
   8058c:	000810f9 	.word	0x000810f9

00080590 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80590:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80592:	0189      	lsls	r1, r1, #6
   80594:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80596:	2402      	movs	r4, #2
   80598:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8059a:	f04f 31ff 	mov.w	r1, #4294967295
   8059e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   805a0:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   805a2:	605a      	str	r2, [r3, #4]
}
   805a4:	bc10      	pop	{r4}
   805a6:	4770      	bx	lr

000805a8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   805a8:	0189      	lsls	r1, r1, #6
   805aa:	2305      	movs	r3, #5
   805ac:	5043      	str	r3, [r0, r1]
   805ae:	4770      	bx	lr

000805b0 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   805b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   805b4:	614a      	str	r2, [r1, #20]
   805b6:	4770      	bx	lr

000805b8 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   805b8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   805bc:	61ca      	str	r2, [r1, #28]
   805be:	4770      	bx	lr

000805c0 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   805c0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   805c4:	624a      	str	r2, [r1, #36]	; 0x24
   805c6:	4770      	bx	lr

000805c8 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   805c8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   805cc:	6a08      	ldr	r0, [r1, #32]
}
   805ce:	4770      	bx	lr

000805d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
   805d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
   805d2:	010b      	lsls	r3, r1, #4
   805d4:	4293      	cmp	r3, r2
   805d6:	d914      	bls.n	80602 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   805d8:	00c9      	lsls	r1, r1, #3
   805da:	084b      	lsrs	r3, r1, #1
   805dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
   805e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
   805e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   805e6:	1e5c      	subs	r4, r3, #1
   805e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   805ec:	428c      	cmp	r4, r1
   805ee:	d901      	bls.n	805f4 <usart_set_async_baudrate+0x24>
		return 1;
   805f0:	2001      	movs	r0, #1
   805f2:	e017      	b.n	80624 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
   805f4:	6841      	ldr	r1, [r0, #4]
   805f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
   805fa:	6041      	str	r1, [r0, #4]
   805fc:	e00c      	b.n	80618 <usart_set_async_baudrate+0x48>
		return 1;
   805fe:	2001      	movs	r0, #1
   80600:	e010      	b.n	80624 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   80602:	0859      	lsrs	r1, r3, #1
   80604:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   80608:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
   8060c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   8060e:	1e5c      	subs	r4, r3, #1
   80610:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   80614:	428c      	cmp	r4, r1
   80616:	d8f2      	bhi.n	805fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
   80618:	0412      	lsls	r2, r2, #16
   8061a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
   8061e:	431a      	orrs	r2, r3
   80620:	6202      	str	r2, [r0, #32]

	return 0;
   80622:	2000      	movs	r0, #0
}
   80624:	bc10      	pop	{r4}
   80626:	4770      	bx	lr

00080628 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   80628:	4b08      	ldr	r3, [pc, #32]	; (8064c <usart_reset+0x24>)
   8062a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
   8062e:	2300      	movs	r3, #0
   80630:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
   80632:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   80634:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   80636:	2388      	movs	r3, #136	; 0x88
   80638:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8063a:	2324      	movs	r3, #36	; 0x24
   8063c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
   8063e:	f44f 7380 	mov.w	r3, #256	; 0x100
   80642:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
   80644:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   80648:	6003      	str	r3, [r0, #0]
   8064a:	4770      	bx	lr
   8064c:	55534100 	.word	0x55534100

00080650 <usart_init_rs232>:
{
   80650:	b570      	push	{r4, r5, r6, lr}
   80652:	4605      	mov	r5, r0
   80654:	460c      	mov	r4, r1
   80656:	4616      	mov	r6, r2
	usart_reset(p_usart);
   80658:	4b0f      	ldr	r3, [pc, #60]	; (80698 <usart_init_rs232+0x48>)
   8065a:	4798      	blx	r3
	ul_reg_val = 0;
   8065c:	2200      	movs	r2, #0
   8065e:	4b0f      	ldr	r3, [pc, #60]	; (8069c <usart_init_rs232+0x4c>)
   80660:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
   80662:	b1a4      	cbz	r4, 8068e <usart_init_rs232+0x3e>
   80664:	4632      	mov	r2, r6
   80666:	6821      	ldr	r1, [r4, #0]
   80668:	4628      	mov	r0, r5
   8066a:	4b0d      	ldr	r3, [pc, #52]	; (806a0 <usart_init_rs232+0x50>)
   8066c:	4798      	blx	r3
   8066e:	4602      	mov	r2, r0
   80670:	b978      	cbnz	r0, 80692 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80672:	6863      	ldr	r3, [r4, #4]
   80674:	68a1      	ldr	r1, [r4, #8]
   80676:	430b      	orrs	r3, r1
   80678:	6921      	ldr	r1, [r4, #16]
   8067a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
   8067c:	68e1      	ldr	r1, [r4, #12]
   8067e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80680:	4906      	ldr	r1, [pc, #24]	; (8069c <usart_init_rs232+0x4c>)
   80682:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
   80684:	6869      	ldr	r1, [r5, #4]
   80686:	430b      	orrs	r3, r1
   80688:	606b      	str	r3, [r5, #4]
}
   8068a:	4610      	mov	r0, r2
   8068c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
   8068e:	2201      	movs	r2, #1
   80690:	e7fb      	b.n	8068a <usart_init_rs232+0x3a>
   80692:	2201      	movs	r2, #1
   80694:	e7f9      	b.n	8068a <usart_init_rs232+0x3a>
   80696:	bf00      	nop
   80698:	00080629 	.word	0x00080629
   8069c:	20070f5c 	.word	0x20070f5c
   806a0:	000805d1 	.word	0x000805d1

000806a4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   806a4:	2340      	movs	r3, #64	; 0x40
   806a6:	6003      	str	r3, [r0, #0]
   806a8:	4770      	bx	lr

000806aa <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
   806aa:	2310      	movs	r3, #16
   806ac:	6003      	str	r3, [r0, #0]
   806ae:	4770      	bx	lr

000806b0 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
   806b0:	6081      	str	r1, [r0, #8]
   806b2:	4770      	bx	lr

000806b4 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
   806b4:	60c1      	str	r1, [r0, #12]
   806b6:	4770      	bx	lr

000806b8 <usart_get_status>:
	return p_usart->US_CSR;
   806b8:	6940      	ldr	r0, [r0, #20]
}
   806ba:	4770      	bx	lr

000806bc <CRC16MODBUSFRAME>:
unsigned int CRC16MODBUSFRAME (unsigned char *nData, unsigned int wLength)
{
    unsigned char  nTemp;
    unsigned int  wCRCWord = 0xFFFF;

    while (wLength--)
   806bc:	b189      	cbz	r1, 806e2 <CRC16MODBUSFRAME+0x26>
{
   806be:	b410      	push	{r4}
   806c0:	1841      	adds	r1, r0, r1
    while (wLength--)
   806c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
    {
        nTemp = *nData++ ^ wCRCWord;
        wCRCWord >>= 8;
        wCRCWord ^= wCRCTable[nTemp];
   806c6:	4c09      	ldr	r4, [pc, #36]	; (806ec <CRC16MODBUSFRAME+0x30>)
        nTemp = *nData++ ^ wCRCWord;
   806c8:	f810 3b01 	ldrb.w	r3, [r0], #1
   806cc:	4053      	eors	r3, r2
        wCRCWord ^= wCRCTable[nTemp];
   806ce:	b2db      	uxtb	r3, r3
   806d0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   806d4:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
    while (wLength--)
   806d8:	4281      	cmp	r1, r0
   806da:	d1f5      	bne.n	806c8 <CRC16MODBUSFRAME+0xc>
    }
    return wCRCWord;
}
   806dc:	4610      	mov	r0, r2
   806de:	bc10      	pop	{r4}
   806e0:	4770      	bx	lr
    unsigned int  wCRCWord = 0xFFFF;
   806e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
}
   806e6:	4610      	mov	r0, r2
   806e8:	4770      	bx	lr
   806ea:	bf00      	nop
   806ec:	20070138 	.word	0x20070138

000806f0 <ErrorLed>:
 #include "../Headers/appli.h"

 t_ptf32 pErrorFunc = ErrorLed;

 uint32_t ErrorLed(uint32_t err, ...)
 {
   806f0:	b40f      	push	{r0, r1, r2, r3}
   806f2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   806f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(LED0_GPIO);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   806f8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80798 <ErrorLed+0xa8>
   806fc:	fba8 2803 	umull	r2, r8, r8, r3
   80700:	ea4f 08d8 	mov.w	r8, r8, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   80704:	eb08 0a88 	add.w	sl, r8, r8, lsl #2
   80708:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(LED0_GPIO);
   8070c:	253b      	movs	r5, #59	; 0x3b
		delay_ms(2000);
   8070e:	4c1c      	ldr	r4, [pc, #112]	; (80780 <ErrorLed+0x90>)
		delay_ms(500);
   80710:	f8df b088 	ldr.w	fp, [pc, #136]	; 8079c <ErrorLed+0xac>
   80714:	e001      	b.n	8071a <ErrorLed+0x2a>
			gpio_set_pin_high(LED0_GPIO);
			delay_ms(200);
			gpio_set_pin_low(LED0_GPIO);
			delay_ms(200);
		}
		delay_ms(1000);
   80716:	481b      	ldr	r0, [pc, #108]	; (80784 <ErrorLed+0x94>)
   80718:	47a0      	blx	r4
		gpio_set_pin_high(LED0_GPIO);
   8071a:	4628      	mov	r0, r5
   8071c:	4b1a      	ldr	r3, [pc, #104]	; (80788 <ErrorLed+0x98>)
   8071e:	4798      	blx	r3
		delay_ms(2000);
   80720:	481a      	ldr	r0, [pc, #104]	; (8078c <ErrorLed+0x9c>)
   80722:	47a0      	blx	r4
		gpio_set_pin_low(LED0_GPIO);
   80724:	4628      	mov	r0, r5
   80726:	4b1a      	ldr	r3, [pc, #104]	; (80790 <ErrorLed+0xa0>)
   80728:	4798      	blx	r3
		delay_ms(500);
   8072a:	4658      	mov	r0, fp
   8072c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8072e:	f1b8 0f00 	cmp.w	r8, #0
   80732:	d00f      	beq.n	80754 <ErrorLed+0x64>
   80734:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80736:	f8df 9050 	ldr.w	r9, [pc, #80]	; 80788 <ErrorLed+0x98>
			delay_ms(200);
   8073a:	4f16      	ldr	r7, [pc, #88]	; (80794 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   8073c:	4628      	mov	r0, r5
   8073e:	47c8      	blx	r9
			delay_ms(200);
   80740:	4638      	mov	r0, r7
   80742:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80744:	4628      	mov	r0, r5
   80746:	4b12      	ldr	r3, [pc, #72]	; (80790 <ErrorLed+0xa0>)
   80748:	4798      	blx	r3
			delay_ms(200);
   8074a:	4638      	mov	r0, r7
   8074c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8074e:	3601      	adds	r6, #1
   80750:	4546      	cmp	r6, r8
   80752:	d1f3      	bne.n	8073c <ErrorLed+0x4c>
		delay_ms(500);
   80754:	4658      	mov	r0, fp
   80756:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80758:	f1ba 0f00 	cmp.w	sl, #0
   8075c:	d0db      	beq.n	80716 <ErrorLed+0x26>
   8075e:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80760:	f8df 9024 	ldr.w	r9, [pc, #36]	; 80788 <ErrorLed+0x98>
			delay_ms(200);
   80764:	4f0b      	ldr	r7, [pc, #44]	; (80794 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   80766:	4628      	mov	r0, r5
   80768:	47c8      	blx	r9
			delay_ms(200);
   8076a:	4638      	mov	r0, r7
   8076c:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   8076e:	4628      	mov	r0, r5
   80770:	4b07      	ldr	r3, [pc, #28]	; (80790 <ErrorLed+0xa0>)
   80772:	4798      	blx	r3
			delay_ms(200);
   80774:	4638      	mov	r0, r7
   80776:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80778:	3601      	adds	r6, #1
   8077a:	4556      	cmp	r6, sl
   8077c:	d1f3      	bne.n	80766 <ErrorLed+0x76>
   8077e:	e7ca      	b.n	80716 <ErrorLed+0x26>
   80780:	20070001 	.word	0x20070001
   80784:	005b8d80 	.word	0x005b8d80
   80788:	00081645 	.word	0x00081645
   8078c:	00b71b00 	.word	0x00b71b00
   80790:	0008165f 	.word	0x0008165f
   80794:	00124f80 	.word	0x00124f80
   80798:	cccccccd 	.word	0xcccccccd
   8079c:	002dc6c0 	.word	0x002dc6c0

000807a0 <RTC_Handler>:
	return 0;
 }


 void RTC_Handler(void )
 {
   807a0:	b510      	push	{r4, lr}
   807a2:	b082      	sub	sp, #8
	PushTask(Shell,_SHELL_PROMPT,0,0);
   807a4:	2300      	movs	r3, #0
   807a6:	9300      	str	r3, [sp, #0]
   807a8:	2204      	movs	r2, #4
   807aa:	4903      	ldr	r1, [pc, #12]	; (807b8 <RTC_Handler+0x18>)
   807ac:	2066      	movs	r0, #102	; 0x66
   807ae:	4c03      	ldr	r4, [pc, #12]	; (807bc <RTC_Handler+0x1c>)
   807b0:	47a0      	blx	r4
 }
   807b2:	b002      	add	sp, #8
   807b4:	bd10      	pop	{r4, pc}
   807b6:	bf00      	nop
   807b8:	00080865 	.word	0x00080865
   807bc:	000810f9 	.word	0x000810f9

000807c0 <__RTCdayByDate>:
 uint8_t __RTCdayByDate(uint32_t date, uint32_t month, uint32_t centYear)
 {
	uint8_t  D; //Day of the week
#define y   centYear
	//Mike Keith algorithme ----------------------------------------------------------------//
	if(month>=3)
   807c0:	2902      	cmp	r1, #2
   807c2:	d824      	bhi.n	8080e <__RTCdayByDate+0x4e>
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
	}
	else
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + (y-1)/4 - (y-1)/100 + (y-1)/400 ) % 7 + 1;
   807c4:	1e53      	subs	r3, r2, #1
   807c6:	3204      	adds	r2, #4
   807c8:	4410      	add	r0, r2
   807ca:	eb00 0093 	add.w	r0, r0, r3, lsr #2
   807ce:	4a22      	ldr	r2, [pc, #136]	; (80858 <__RTCdayByDate+0x98>)
   807d0:	fba2 2303 	umull	r2, r3, r2, r3
   807d4:	eb00 10d3 	add.w	r0, r0, r3, lsr #7
   807d8:	eba0 1053 	sub.w	r0, r0, r3, lsr #5
   807dc:	b289      	uxth	r1, r1
   807de:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   807e2:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   807e6:	4b1d      	ldr	r3, [pc, #116]	; (8085c <__RTCdayByDate+0x9c>)
   807e8:	fb83 2301 	smull	r2, r3, r3, r1
   807ec:	17c9      	asrs	r1, r1, #31
   807ee:	ebc1 0163 	rsb	r1, r1, r3, asr #1
   807f2:	4408      	add	r0, r1
   807f4:	4b1a      	ldr	r3, [pc, #104]	; (80860 <__RTCdayByDate+0xa0>)
   807f6:	fba3 2300 	umull	r2, r3, r3, r0
   807fa:	1ac2      	subs	r2, r0, r3
   807fc:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   80800:	089b      	lsrs	r3, r3, #2
   80802:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   80806:	1ac0      	subs	r0, r0, r3
   80808:	3001      	adds	r0, #1
   8080a:	b2c0      	uxtb	r0, r0
	}
#undef y
	return D; //Normaly 1 to 7 !!!!
 }
   8080c:	4770      	bx	lr
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
   8080e:	1c93      	adds	r3, r2, #2
   80810:	4418      	add	r0, r3
   80812:	eb00 0092 	add.w	r0, r0, r2, lsr #2
   80816:	4b10      	ldr	r3, [pc, #64]	; (80858 <__RTCdayByDate+0x98>)
   80818:	fba3 3202 	umull	r3, r2, r3, r2
   8081c:	eb00 10d2 	add.w	r0, r0, r2, lsr #7
   80820:	eba0 1252 	sub.w	r2, r0, r2, lsr #5
   80824:	b289      	uxth	r1, r1
   80826:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   8082a:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   8082e:	480b      	ldr	r0, [pc, #44]	; (8085c <__RTCdayByDate+0x9c>)
   80830:	fb80 3001 	smull	r3, r0, r0, r1
   80834:	17c9      	asrs	r1, r1, #31
   80836:	ebc1 0160 	rsb	r1, r1, r0, asr #1
   8083a:	440a      	add	r2, r1
   8083c:	4808      	ldr	r0, [pc, #32]	; (80860 <__RTCdayByDate+0xa0>)
   8083e:	fba0 3002 	umull	r3, r0, r0, r2
   80842:	1a13      	subs	r3, r2, r0
   80844:	eb00 0053 	add.w	r0, r0, r3, lsr #1
   80848:	0880      	lsrs	r0, r0, #2
   8084a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   8084e:	1a10      	subs	r0, r2, r0
   80850:	3001      	adds	r0, #1
   80852:	b2c0      	uxtb	r0, r0
   80854:	4770      	bx	lr
   80856:	bf00      	nop
   80858:	51eb851f 	.word	0x51eb851f
   8085c:	38e38e39 	.word	0x38e38e39
   80860:	24924925 	.word	0x24924925

00080864 <Shell>:
 {
   80864:	b40f      	push	{r0, r1, r2, r3}
   80866:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8086a:	b087      	sub	sp, #28
	switch(sc)
   8086c:	990e      	ldr	r1, [sp, #56]	; 0x38
   8086e:	2902      	cmp	r1, #2
   80870:	f000 8153 	beq.w	80b1a <Shell+0x2b6>
   80874:	d944      	bls.n	80900 <Shell+0x9c>
   80876:	2904      	cmp	r1, #4
   80878:	f000 81a2 	beq.w	80bc0 <Shell+0x35c>
   8087c:	2964      	cmp	r1, #100	; 0x64
   8087e:	f040 81ec 	bne.w	80c5a <Shell+0x3f6>
		gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80882:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80886:	203b      	movs	r0, #59	; 0x3b
   80888:	4bb2      	ldr	r3, [pc, #712]	; (80b54 <Shell+0x2f0>)
   8088a:	4798      	blx	r3
		gpio_set_pin_low(LED0_GPIO);
   8088c:	203b      	movs	r0, #59	; 0x3b
   8088e:	4bb2      	ldr	r3, [pc, #712]	; (80b58 <Shell+0x2f4>)
   80890:	4798      	blx	r3
		PushTask(Shellcom,SHELLCOM_NEW, 0, 0);
   80892:	2400      	movs	r4, #0
   80894:	9400      	str	r4, [sp, #0]
   80896:	4623      	mov	r3, r4
   80898:	2264      	movs	r2, #100	; 0x64
   8089a:	49b0      	ldr	r1, [pc, #704]	; (80b5c <Shell+0x2f8>)
   8089c:	2066      	movs	r0, #102	; 0x66
   8089e:	4db0      	ldr	r5, [pc, #704]	; (80b60 <Shell+0x2fc>)
   808a0:	47a8      	blx	r5
		state = IDLE;
   808a2:	4bb0      	ldr	r3, [pc, #704]	; (80b64 <Shell+0x300>)
   808a4:	701c      	strb	r4, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   808a6:	2002      	movs	r0, #2
   808a8:	4baf      	ldr	r3, [pc, #700]	; (80b68 <Shell+0x304>)
   808aa:	4798      	blx	r3
		rtc_set_hour_mode(RTC, 0);
   808ac:	4eaf      	ldr	r6, [pc, #700]	; (80b6c <Shell+0x308>)
   808ae:	4621      	mov	r1, r4
   808b0:	4630      	mov	r0, r6
   808b2:	4baf      	ldr	r3, [pc, #700]	; (80b70 <Shell+0x30c>)
   808b4:	4798      	blx	r3
		rtc_set_time(RTC, 1, 2, 3);
   808b6:	2303      	movs	r3, #3
   808b8:	2202      	movs	r2, #2
   808ba:	2101      	movs	r1, #1
   808bc:	4630      	mov	r0, r6
   808be:	4fad      	ldr	r7, [pc, #692]	; (80b74 <Shell+0x310>)
   808c0:	47b8      	blx	r7
		rtc_enable_interrupt(RTC, RTC_IER_SECEN);
   808c2:	2104      	movs	r1, #4
   808c4:	4630      	mov	r0, r6
   808c6:	4bac      	ldr	r3, [pc, #688]	; (80b78 <Shell+0x314>)
   808c8:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   808ca:	4fac      	ldr	r7, [pc, #688]	; (80b7c <Shell+0x318>)
   808cc:	9400      	str	r4, [sp, #0]
   808ce:	4623      	mov	r3, r4
   808d0:	2202      	movs	r2, #2
   808d2:	4639      	mov	r1, r7
   808d4:	2066      	movs	r0, #102	; 0x66
   808d6:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,500);
   808d8:	f44f 76fa 	mov.w	r6, #500	; 0x1f4
   808dc:	9600      	str	r6, [sp, #0]
   808de:	4623      	mov	r3, r4
   808e0:	2204      	movs	r2, #4
   808e2:	4639      	mov	r1, r7
   808e4:	2066      	movs	r0, #102	; 0x66
   808e6:	47a8      	blx	r5
		PushTask(Appli, APPLI_NEW, 0, 500);
   808e8:	9600      	str	r6, [sp, #0]
   808ea:	4623      	mov	r3, r4
   808ec:	2264      	movs	r2, #100	; 0x64
   808ee:	49a4      	ldr	r1, [pc, #656]	; (80b80 <Shell+0x31c>)
   808f0:	2066      	movs	r0, #102	; 0x66
   808f2:	47a8      	blx	r5
 }
   808f4:	2000      	movs	r0, #0
   808f6:	b007      	add	sp, #28
   808f8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   808fc:	b004      	add	sp, #16
   808fe:	4770      	bx	lr
	switch(sc)
   80900:	2901      	cmp	r1, #1
   80902:	f040 81aa 	bne.w	80c5a <Shell+0x3f6>
		switch(state)
   80906:	4b97      	ldr	r3, [pc, #604]	; (80b64 <Shell+0x300>)
   80908:	781b      	ldrb	r3, [r3, #0]
   8090a:	2b06      	cmp	r3, #6
   8090c:	f200 80ff 	bhi.w	80b0e <Shell+0x2aa>
   80910:	a201      	add	r2, pc, #4	; (adr r2, 80918 <Shell+0xb4>)
   80912:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80916:	bf00      	nop
   80918:	00080935 	.word	0x00080935
   8091c:	000809cd 	.word	0x000809cd
   80920:	00080a71 	.word	0x00080a71
   80924:	000808f5 	.word	0x000808f5
   80928:	000808f5 	.word	0x000808f5
   8092c:	000808f5 	.word	0x000808f5
   80930:	000808f5 	.word	0x000808f5
			switch(_kbhitChar)
   80934:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   80936:	b2ec      	uxtb	r4, r5
   80938:	f1a4 0308 	sub.w	r3, r4, #8
   8093c:	2b18      	cmp	r3, #24
   8093e:	d835      	bhi.n	809ac <Shell+0x148>
   80940:	a201      	add	r2, pc, #4	; (adr r2, 80948 <Shell+0xe4>)
   80942:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80946:	bf00      	nop
   80948:	000808f5 	.word	0x000808f5
   8094c:	000808f5 	.word	0x000808f5
   80950:	000808f5 	.word	0x000808f5
   80954:	000809ad 	.word	0x000809ad
   80958:	000809ad 	.word	0x000809ad
   8095c:	000808f5 	.word	0x000808f5
   80960:	000809ad 	.word	0x000809ad
   80964:	000809ad 	.word	0x000809ad
   80968:	000809ad 	.word	0x000809ad
   8096c:	000809ad 	.word	0x000809ad
   80970:	000809ad 	.word	0x000809ad
   80974:	000809ad 	.word	0x000809ad
   80978:	000809ad 	.word	0x000809ad
   8097c:	000809ad 	.word	0x000809ad
   80980:	000809ad 	.word	0x000809ad
   80984:	000809ad 	.word	0x000809ad
   80988:	000809ad 	.word	0x000809ad
   8098c:	000809ad 	.word	0x000809ad
   80990:	000809ad 	.word	0x000809ad
   80994:	000808f5 	.word	0x000808f5
   80998:	000809ad 	.word	0x000809ad
   8099c:	000809ad 	.word	0x000809ad
   809a0:	000809ad 	.word	0x000809ad
   809a4:	000809ad 	.word	0x000809ad
   809a8:	000808f5 	.word	0x000808f5
				Putstr("\r\n>");
   809ac:	4975      	ldr	r1, [pc, #468]	; (80b84 <Shell+0x320>)
   809ae:	2067      	movs	r0, #103	; 0x67
   809b0:	4f6a      	ldr	r7, [pc, #424]	; (80b5c <Shell+0x2f8>)
   809b2:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   809b4:	4e6b      	ldr	r6, [pc, #428]	; (80b64 <Shell+0x300>)
   809b6:	4b74      	ldr	r3, [pc, #464]	; (80b88 <Shell+0x324>)
   809b8:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   809ba:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   809be:	2501      	movs	r5, #1
   809c0:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   809c2:	4621      	mov	r1, r4
   809c4:	2066      	movs	r0, #102	; 0x66
   809c6:	47b8      	blx	r7
				state = EDITION;
   809c8:	7035      	strb	r5, [r6, #0]
				break;
   809ca:	e793      	b.n	808f4 <Shell+0x90>
			switch(_kbhitChar)
   809cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   809ce:	b2d1      	uxtb	r1, r2
   809d0:	f1a1 0308 	sub.w	r3, r1, #8
   809d4:	2b13      	cmp	r3, #19
   809d6:	d83a      	bhi.n	80a4e <Shell+0x1ea>
   809d8:	a001      	add	r0, pc, #4	; (adr r0, 809e0 <Shell+0x17c>)
   809da:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   809de:	bf00      	nop
   809e0:	000808f5 	.word	0x000808f5
   809e4:	000808f5 	.word	0x000808f5
   809e8:	000808f5 	.word	0x000808f5
   809ec:	00080a4f 	.word	0x00080a4f
   809f0:	00080a4f 	.word	0x00080a4f
   809f4:	00080a31 	.word	0x00080a31
   809f8:	00080a4f 	.word	0x00080a4f
   809fc:	00080a4f 	.word	0x00080a4f
   80a00:	00080a4f 	.word	0x00080a4f
   80a04:	00080a4f 	.word	0x00080a4f
   80a08:	00080a4f 	.word	0x00080a4f
   80a0c:	00080a4f 	.word	0x00080a4f
   80a10:	00080a4f 	.word	0x00080a4f
   80a14:	00080a4f 	.word	0x00080a4f
   80a18:	00080a4f 	.word	0x00080a4f
   80a1c:	00080a4f 	.word	0x00080a4f
   80a20:	00080a4f 	.word	0x00080a4f
   80a24:	00080a4f 	.word	0x00080a4f
   80a28:	00080a4f 	.word	0x00080a4f
   80a2c:	000808f5 	.word	0x000808f5
				*pEdit++ = '\0';
   80a30:	4a4c      	ldr	r2, [pc, #304]	; (80b64 <Shell+0x300>)
   80a32:	6891      	ldr	r1, [r2, #8]
   80a34:	1c4b      	adds	r3, r1, #1
   80a36:	6093      	str	r3, [r2, #8]
   80a38:	2300      	movs	r3, #0
   80a3a:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   80a3c:	2102      	movs	r1, #2
   80a3e:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   80a40:	9300      	str	r3, [sp, #0]
   80a42:	2201      	movs	r2, #1
   80a44:	494d      	ldr	r1, [pc, #308]	; (80b7c <Shell+0x318>)
   80a46:	2066      	movs	r0, #102	; 0x66
   80a48:	4c45      	ldr	r4, [pc, #276]	; (80b60 <Shell+0x2fc>)
   80a4a:	47a0      	blx	r4
				break;
   80a4c:	e752      	b.n	808f4 <Shell+0x90>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   80a4e:	4b45      	ldr	r3, [pc, #276]	; (80b64 <Shell+0x300>)
   80a50:	68db      	ldr	r3, [r3, #12]
   80a52:	2bfd      	cmp	r3, #253	; 0xfd
   80a54:	f63f af4e 	bhi.w	808f4 <Shell+0x90>
					*pEdit++ = _kbhitChar;
   80a58:	4b42      	ldr	r3, [pc, #264]	; (80b64 <Shell+0x300>)
   80a5a:	6898      	ldr	r0, [r3, #8]
   80a5c:	1c44      	adds	r4, r0, #1
   80a5e:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   80a60:	7002      	strb	r2, [r0, #0]
					nbChar++;
   80a62:	68da      	ldr	r2, [r3, #12]
   80a64:	3201      	adds	r2, #1
   80a66:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   80a68:	2066      	movs	r0, #102	; 0x66
   80a6a:	4b3c      	ldr	r3, [pc, #240]	; (80b5c <Shell+0x2f8>)
   80a6c:	4798      	blx	r3
   80a6e:	e741      	b.n	808f4 <Shell+0x90>
			Putstr("\r\n>>>");
   80a70:	4946      	ldr	r1, [pc, #280]	; (80b8c <Shell+0x328>)
   80a72:	2067      	movs	r0, #103	; 0x67
   80a74:	4c39      	ldr	r4, [pc, #228]	; (80b5c <Shell+0x2f8>)
   80a76:	47a0      	blx	r4
			Putstr(shellBuf);
   80a78:	4d45      	ldr	r5, [pc, #276]	; (80b90 <Shell+0x32c>)
   80a7a:	4629      	mov	r1, r5
   80a7c:	2067      	movs	r0, #103	; 0x67
   80a7e:	47a0      	blx	r4
			Putstr("\r\n");
   80a80:	4944      	ldr	r1, [pc, #272]	; (80b94 <Shell+0x330>)
   80a82:	2067      	movs	r0, #103	; 0x67
   80a84:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   80a86:	4944      	ldr	r1, [pc, #272]	; (80b98 <Shell+0x334>)
   80a88:	4628      	mov	r0, r5
   80a8a:	4b44      	ldr	r3, [pc, #272]	; (80b9c <Shell+0x338>)
   80a8c:	4798      	blx	r3
   80a8e:	4607      	mov	r7, r0
   80a90:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   80a92:	b918      	cbnz	r0, 80a9c <Shell+0x238>
			state = IDLE;
   80a94:	2200      	movs	r2, #0
   80a96:	4b33      	ldr	r3, [pc, #204]	; (80b64 <Shell+0x300>)
   80a98:	701a      	strb	r2, [r3, #0]
			break;
   80a9a:	e72b      	b.n	808f4 <Shell+0x90>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   80a9c:	4b40      	ldr	r3, [pc, #256]	; (80ba0 <Shell+0x33c>)
   80a9e:	4798      	blx	r3
   80aa0:	4601      	mov	r1, r0
   80aa2:	4638      	mov	r0, r7
   80aa4:	4b3f      	ldr	r3, [pc, #252]	; (80ba4 <Shell+0x340>)
   80aa6:	4798      	blx	r3
   80aa8:	b285      	uxth	r5, r0
   80aaa:	4b2e      	ldr	r3, [pc, #184]	; (80b64 <Shell+0x300>)
   80aac:	821d      	strh	r5, [r3, #16]
				k = 0;
   80aae:	2300      	movs	r3, #0
   80ab0:	9305      	str	r3, [sp, #20]
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   80ab2:	4b3d      	ldr	r3, [pc, #244]	; (80ba8 <Shell+0x344>)
   80ab4:	881b      	ldrh	r3, [r3, #0]
   80ab6:	b1db      	cbz	r3, 80af0 <Shell+0x28c>
   80ab8:	429d      	cmp	r5, r3
   80aba:	d01b      	beq.n	80af4 <Shell+0x290>
   80abc:	2301      	movs	r3, #1
   80abe:	4e3a      	ldr	r6, [pc, #232]	; (80ba8 <Shell+0x344>)
   80ac0:	e000      	b.n	80ac4 <Shell+0x260>
   80ac2:	4623      	mov	r3, r4
   80ac4:	f836 1033 	ldrh.w	r1, [r6, r3, lsl #3]
   80ac8:	b121      	cbz	r1, 80ad4 <Shell+0x270>
   80aca:	1c5c      	adds	r4, r3, #1
   80acc:	428d      	cmp	r5, r1
   80ace:	d1f8      	bne.n	80ac2 <Shell+0x25e>
   80ad0:	9305      	str	r3, [sp, #20]
   80ad2:	e000      	b.n	80ad6 <Shell+0x272>
   80ad4:	9305      	str	r3, [sp, #20]
				if(_cmdEntries[k].pCmdFunc)
   80ad6:	4934      	ldr	r1, [pc, #208]	; (80ba8 <Shell+0x344>)
   80ad8:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   80adc:	685c      	ldr	r4, [r3, #4]
   80ade:	b15c      	cbz	r4, 80af8 <Shell+0x294>
					_cmdEntries[k].pCmdFunc(0, shellBuf + strlen(pToken) + 1);
   80ae0:	4638      	mov	r0, r7
   80ae2:	4b2f      	ldr	r3, [pc, #188]	; (80ba0 <Shell+0x33c>)
   80ae4:	4798      	blx	r3
   80ae6:	4928      	ldr	r1, [pc, #160]	; (80b88 <Shell+0x324>)
   80ae8:	4401      	add	r1, r0
   80aea:	2000      	movs	r0, #0
   80aec:	47a0      	blx	r4
   80aee:	e7d1      	b.n	80a94 <Shell+0x230>
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   80af0:	2300      	movs	r3, #0
   80af2:	e7f0      	b.n	80ad6 <Shell+0x272>
   80af4:	2300      	movs	r3, #0
   80af6:	e7ee      	b.n	80ad6 <Shell+0x272>
					sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80af8:	4c2c      	ldr	r4, [pc, #176]	; (80bac <Shell+0x348>)
   80afa:	b282      	uxth	r2, r0
   80afc:	492c      	ldr	r1, [pc, #176]	; (80bb0 <Shell+0x34c>)
   80afe:	4620      	mov	r0, r4
   80b00:	4b2c      	ldr	r3, [pc, #176]	; (80bb4 <Shell+0x350>)
   80b02:	4798      	blx	r3
					Putstr(buf);
   80b04:	4621      	mov	r1, r4
   80b06:	2067      	movs	r0, #103	; 0x67
   80b08:	4b14      	ldr	r3, [pc, #80]	; (80b5c <Shell+0x2f8>)
   80b0a:	4798      	blx	r3
   80b0c:	e7c2      	b.n	80a94 <Shell+0x230>
			Putch(_kbhitChar);
   80b0e:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   80b12:	2066      	movs	r0, #102	; 0x66
   80b14:	4b11      	ldr	r3, [pc, #68]	; (80b5c <Shell+0x2f8>)
   80b16:	4798      	blx	r3
			break;
   80b18:	e6ec      	b.n	808f4 <Shell+0x90>
		k++; if(flashSequ[k]==0) k=0;
   80b1a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   80b1c:	3401      	adds	r4, #1
   80b1e:	940f      	str	r4, [sp, #60]	; 0x3c
   80b20:	4b25      	ldr	r3, [pc, #148]	; (80bb8 <Shell+0x354>)
   80b22:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80b26:	b133      	cbz	r3, 80b36 <Shell+0x2d2>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80b28:	f014 0f01 	tst.w	r4, #1
   80b2c:	d004      	beq.n	80b38 <Shell+0x2d4>
		else gpio_set_pin_low(LED0_GPIO);
   80b2e:	203b      	movs	r0, #59	; 0x3b
   80b30:	4b09      	ldr	r3, [pc, #36]	; (80b58 <Shell+0x2f4>)
   80b32:	4798      	blx	r3
   80b34:	e003      	b.n	80b3e <Shell+0x2da>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80b36:	2400      	movs	r4, #0
   80b38:	203b      	movs	r0, #59	; 0x3b
   80b3a:	4b20      	ldr	r3, [pc, #128]	; (80bbc <Shell+0x358>)
   80b3c:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   80b3e:	4b1e      	ldr	r3, [pc, #120]	; (80bb8 <Shell+0x354>)
   80b40:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80b44:	9300      	str	r3, [sp, #0]
   80b46:	4623      	mov	r3, r4
   80b48:	2202      	movs	r2, #2
   80b4a:	490c      	ldr	r1, [pc, #48]	; (80b7c <Shell+0x318>)
   80b4c:	2066      	movs	r0, #102	; 0x66
   80b4e:	4c04      	ldr	r4, [pc, #16]	; (80b60 <Shell+0x2fc>)
   80b50:	47a0      	blx	r4
		break;
   80b52:	e6cf      	b.n	808f4 <Shell+0x90>
   80b54:	00081699 	.word	0x00081699
   80b58:	0008165f 	.word	0x0008165f
   80b5c:	00080ee1 	.word	0x00080ee1
   80b60:	000810f9 	.word	0x000810f9
   80b64:	2007105c 	.word	0x2007105c
   80b68:	000819fd 	.word	0x000819fd
   80b6c:	400e1a60 	.word	0x400e1a60
   80b70:	00080161 	.word	0x00080161
   80b74:	000801d5 	.word	0x000801d5
   80b78:	00080177 	.word	0x00080177
   80b7c:	00080865 	.word	0x00080865
   80b80:	00081315 	.word	0x00081315
   80b84:	00086784 	.word	0x00086784
   80b88:	20071071 	.word	0x20071071
   80b8c:	00086788 	.word	0x00086788
   80b90:	20071070 	.word	0x20071070
   80b94:	00086790 	.word	0x00086790
   80b98:	00086794 	.word	0x00086794
   80b9c:	00081dd9 	.word	0x00081dd9
   80ba0:	00081d7d 	.word	0x00081d7d
   80ba4:	000806bd 	.word	0x000806bd
   80ba8:	000868a8 	.word	0x000868a8
   80bac:	200713e0 	.word	0x200713e0
   80bb0:	00086798 	.word	0x00086798
   80bb4:	00081d31 	.word	0x00081d31
   80bb8:	000867d8 	.word	0x000867d8
   80bbc:	00081645 	.word	0x00081645
		if(state==IDLE)
   80bc0:	4b28      	ldr	r3, [pc, #160]	; (80c64 <Shell+0x400>)
   80bc2:	781b      	ldrb	r3, [r3, #0]
   80bc4:	b14b      	cbz	r3, 80bda <Shell+0x376>
		PushTask(Shell,_SHELL_PROMPT,0,300);
   80bc6:	f44f 7396 	mov.w	r3, #300	; 0x12c
   80bca:	9300      	str	r3, [sp, #0]
   80bcc:	2300      	movs	r3, #0
   80bce:	2204      	movs	r2, #4
   80bd0:	4925      	ldr	r1, [pc, #148]	; (80c68 <Shell+0x404>)
   80bd2:	2066      	movs	r0, #102	; 0x66
   80bd4:	4c25      	ldr	r4, [pc, #148]	; (80c6c <Shell+0x408>)
   80bd6:	47a0      	blx	r4
		break;
   80bd8:	e68c      	b.n	808f4 <Shell+0x90>
			rtc_get_date(RTC, &yr, &mm, &dd, &wk);
   80bda:	4e25      	ldr	r6, [pc, #148]	; (80c70 <Shell+0x40c>)
   80bdc:	af02      	add	r7, sp, #8
   80bde:	9700      	str	r7, [sp, #0]
   80be0:	ab03      	add	r3, sp, #12
   80be2:	aa04      	add	r2, sp, #16
   80be4:	a905      	add	r1, sp, #20
   80be6:	4630      	mov	r0, r6
   80be8:	4c22      	ldr	r4, [pc, #136]	; (80c74 <Shell+0x410>)
   80bea:	47a0      	blx	r4
			day = __RTCdayByDate(dd, mm, yr/100);
   80bec:	f8dd 800c 	ldr.w	r8, [sp, #12]
   80bf0:	9d04      	ldr	r5, [sp, #16]
   80bf2:	f8dd 9014 	ldr.w	r9, [sp, #20]
   80bf6:	4a20      	ldr	r2, [pc, #128]	; (80c78 <Shell+0x414>)
   80bf8:	fba2 3209 	umull	r3, r2, r2, r9
   80bfc:	0952      	lsrs	r2, r2, #5
   80bfe:	4629      	mov	r1, r5
   80c00:	4640      	mov	r0, r8
   80c02:	4b1e      	ldr	r3, [pc, #120]	; (80c7c <Shell+0x418>)
   80c04:	4798      	blx	r3
			sprintf(buf,"\r%s %02d %s %02d", daysOfWeek[day - 3], dd, months[mm-1], yr);
   80c06:	3803      	subs	r0, #3
   80c08:	4b1d      	ldr	r3, [pc, #116]	; (80c80 <Shell+0x41c>)
   80c0a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
   80c0e:	4c1d      	ldr	r4, [pc, #116]	; (80c84 <Shell+0x420>)
   80c10:	f8cd 9004 	str.w	r9, [sp, #4]
   80c14:	3d01      	subs	r5, #1
   80c16:	4b1c      	ldr	r3, [pc, #112]	; (80c88 <Shell+0x424>)
   80c18:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
   80c1c:	9300      	str	r3, [sp, #0]
   80c1e:	4643      	mov	r3, r8
   80c20:	491a      	ldr	r1, [pc, #104]	; (80c8c <Shell+0x428>)
   80c22:	4620      	mov	r0, r4
   80c24:	f8df 807c 	ldr.w	r8, [pc, #124]	; 80ca4 <Shell+0x440>
   80c28:	47c0      	blx	r8
			Putstr(buf);
   80c2a:	4621      	mov	r1, r4
   80c2c:	2067      	movs	r0, #103	; 0x67
   80c2e:	4d18      	ldr	r5, [pc, #96]	; (80c90 <Shell+0x42c>)
   80c30:	47a8      	blx	r5
			rtc_get_time(RTC, &hh, &mn, &sec);
   80c32:	463b      	mov	r3, r7
   80c34:	aa03      	add	r2, sp, #12
   80c36:	a904      	add	r1, sp, #16
   80c38:	4630      	mov	r0, r6
   80c3a:	4e16      	ldr	r6, [pc, #88]	; (80c94 <Shell+0x430>)
   80c3c:	47b0      	blx	r6
			sprintf(buf, "	%02d:%02d:%02d ", hh, mn, sec);
   80c3e:	9b02      	ldr	r3, [sp, #8]
   80c40:	9300      	str	r3, [sp, #0]
   80c42:	9b03      	ldr	r3, [sp, #12]
   80c44:	9a04      	ldr	r2, [sp, #16]
   80c46:	4914      	ldr	r1, [pc, #80]	; (80c98 <Shell+0x434>)
   80c48:	4620      	mov	r0, r4
   80c4a:	47c0      	blx	r8
			Putstr(buf);
   80c4c:	4621      	mov	r1, r4
   80c4e:	2067      	movs	r0, #103	; 0x67
   80c50:	47a8      	blx	r5
			Menu(MENU_PROMPT);
   80c52:	2068      	movs	r0, #104	; 0x68
   80c54:	4b11      	ldr	r3, [pc, #68]	; (80c9c <Shell+0x438>)
   80c56:	4798      	blx	r3
   80c58:	e7b5      	b.n	80bc6 <Shell+0x362>
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   80c5a:	4b11      	ldr	r3, [pc, #68]	; (80ca0 <Shell+0x43c>)
   80c5c:	681b      	ldr	r3, [r3, #0]
   80c5e:	200e      	movs	r0, #14
   80c60:	4798      	blx	r3
   80c62:	e647      	b.n	808f4 <Shell+0x90>
   80c64:	2007105c 	.word	0x2007105c
   80c68:	00080865 	.word	0x00080865
   80c6c:	000810f9 	.word	0x000810f9
   80c70:	400e1a60 	.word	0x400e1a60
   80c74:	00080269 	.word	0x00080269
   80c78:	51eb851f 	.word	0x51eb851f
   80c7c:	000807c1 	.word	0x000807c1
   80c80:	2007053c 	.word	0x2007053c
   80c84:	200713e0 	.word	0x200713e0
   80c88:	20070558 	.word	0x20070558
   80c8c:	000867b0 	.word	0x000867b0
   80c90:	00080ee1 	.word	0x00080ee1
   80c94:	0008017b 	.word	0x0008017b
   80c98:	000867c4 	.word	0x000867c4
   80c9c:	00080395 	.word	0x00080395
   80ca0:	20070538 	.word	0x20070538
   80ca4:	00081d31 	.word	0x00081d31

00080ca8 <_cmd_set>:


uint32_t u1, u2, u3, u4;

void _cmd_set(uint32_t sc, void* pParam)
{
   80ca8:	b510      	push	{r4, lr}
   80caa:	b082      	sub	sp, #8
   80cac:	4608      	mov	r0, r1
	uint16_t crc;
#define pToken sc
	pToken = (uint32_t)strtok(pParam, " \r\n");
   80cae:	4940      	ldr	r1, [pc, #256]	; (80db0 <_cmd_set+0x108>)
   80cb0:	4b40      	ldr	r3, [pc, #256]	; (80db4 <_cmd_set+0x10c>)
   80cb2:	4798      	blx	r3
	if(pToken)
   80cb4:	b908      	cbnz	r0, 80cba <_cmd_set+0x12>
#undef pToken
	}
	

	
}
   80cb6:	b002      	add	sp, #8
   80cb8:	bd10      	pop	{r4, pc}
   80cba:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   80cbc:	4b3e      	ldr	r3, [pc, #248]	; (80db8 <_cmd_set+0x110>)
   80cbe:	4798      	blx	r3
   80cc0:	4601      	mov	r1, r0
   80cc2:	4620      	mov	r0, r4
   80cc4:	4b3d      	ldr	r3, [pc, #244]	; (80dbc <_cmd_set+0x114>)
   80cc6:	4798      	blx	r3
   80cc8:	b282      	uxth	r2, r0
		switch(crc)
   80cca:	f247 3327 	movw	r3, #29479	; 0x7327
   80cce:	429a      	cmp	r2, r3
   80cd0:	d00d      	beq.n	80cee <_cmd_set+0x46>
   80cd2:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   80cd6:	429a      	cmp	r2, r3
   80cd8:	d034      	beq.n	80d44 <_cmd_set+0x9c>
			sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80cda:	4c39      	ldr	r4, [pc, #228]	; (80dc0 <_cmd_set+0x118>)
   80cdc:	4939      	ldr	r1, [pc, #228]	; (80dc4 <_cmd_set+0x11c>)
   80cde:	4620      	mov	r0, r4
   80ce0:	4b39      	ldr	r3, [pc, #228]	; (80dc8 <_cmd_set+0x120>)
   80ce2:	4798      	blx	r3
			Putstr(buf);
   80ce4:	4621      	mov	r1, r4
   80ce6:	2067      	movs	r0, #103	; 0x67
   80ce8:	4b38      	ldr	r3, [pc, #224]	; (80dcc <_cmd_set+0x124>)
   80cea:	4798      	blx	r3
}
   80cec:	e7e3      	b.n	80cb6 <_cmd_set+0xe>
			pToken = strtok(NULL, " : \r\n");
   80cee:	4938      	ldr	r1, [pc, #224]	; (80dd0 <_cmd_set+0x128>)
   80cf0:	2000      	movs	r0, #0
   80cf2:	4b30      	ldr	r3, [pc, #192]	; (80db4 <_cmd_set+0x10c>)
   80cf4:	4798      	blx	r3
			if(pToken) hh = atoi(pToken);
   80cf6:	b9b0      	cbnz	r0, 80d26 <_cmd_set+0x7e>
			pToken = strtok(NULL, " : \r\n");
   80cf8:	4935      	ldr	r1, [pc, #212]	; (80dd0 <_cmd_set+0x128>)
   80cfa:	2000      	movs	r0, #0
   80cfc:	4b2d      	ldr	r3, [pc, #180]	; (80db4 <_cmd_set+0x10c>)
   80cfe:	4798      	blx	r3
			if(pToken) mn = atoi(pToken);
   80d00:	b9b0      	cbnz	r0, 80d30 <_cmd_set+0x88>
			pToken = strtok(NULL, " : \r\n");
   80d02:	4933      	ldr	r1, [pc, #204]	; (80dd0 <_cmd_set+0x128>)
   80d04:	2000      	movs	r0, #0
   80d06:	4b2b      	ldr	r3, [pc, #172]	; (80db4 <_cmd_set+0x10c>)
   80d08:	4798      	blx	r3
			if(pToken) sec = atoi(pToken);
   80d0a:	b9b0      	cbnz	r0, 80d3a <_cmd_set+0x92>
			rtc_set_time(RTC, hh, mn, sec);
   80d0c:	4b31      	ldr	r3, [pc, #196]	; (80dd4 <_cmd_set+0x12c>)
   80d0e:	681b      	ldr	r3, [r3, #0]
   80d10:	4a31      	ldr	r2, [pc, #196]	; (80dd8 <_cmd_set+0x130>)
   80d12:	6812      	ldr	r2, [r2, #0]
   80d14:	4931      	ldr	r1, [pc, #196]	; (80ddc <_cmd_set+0x134>)
   80d16:	6809      	ldr	r1, [r1, #0]
   80d18:	4831      	ldr	r0, [pc, #196]	; (80de0 <_cmd_set+0x138>)
   80d1a:	4c32      	ldr	r4, [pc, #200]	; (80de4 <_cmd_set+0x13c>)
   80d1c:	47a0      	blx	r4
			gpio_set_pin_high(PIO_PA16_IDX);
   80d1e:	2010      	movs	r0, #16
   80d20:	4b31      	ldr	r3, [pc, #196]	; (80de8 <_cmd_set+0x140>)
   80d22:	4798      	blx	r3
			break;
   80d24:	e7c7      	b.n	80cb6 <_cmd_set+0xe>
			if(pToken) hh = atoi(pToken);
   80d26:	4b31      	ldr	r3, [pc, #196]	; (80dec <_cmd_set+0x144>)
   80d28:	4798      	blx	r3
   80d2a:	4b2c      	ldr	r3, [pc, #176]	; (80ddc <_cmd_set+0x134>)
   80d2c:	6018      	str	r0, [r3, #0]
   80d2e:	e7e3      	b.n	80cf8 <_cmd_set+0x50>
			if(pToken) mn = atoi(pToken);
   80d30:	4b2e      	ldr	r3, [pc, #184]	; (80dec <_cmd_set+0x144>)
   80d32:	4798      	blx	r3
   80d34:	4b28      	ldr	r3, [pc, #160]	; (80dd8 <_cmd_set+0x130>)
   80d36:	6018      	str	r0, [r3, #0]
   80d38:	e7e3      	b.n	80d02 <_cmd_set+0x5a>
			if(pToken) sec = atoi(pToken);
   80d3a:	4b2c      	ldr	r3, [pc, #176]	; (80dec <_cmd_set+0x144>)
   80d3c:	4798      	blx	r3
   80d3e:	4b25      	ldr	r3, [pc, #148]	; (80dd4 <_cmd_set+0x12c>)
   80d40:	6018      	str	r0, [r3, #0]
   80d42:	e7e3      	b.n	80d0c <_cmd_set+0x64>
			pToken = strtok(NULL, " : \r\n");
   80d44:	4922      	ldr	r1, [pc, #136]	; (80dd0 <_cmd_set+0x128>)
   80d46:	2000      	movs	r0, #0
   80d48:	4b1a      	ldr	r3, [pc, #104]	; (80db4 <_cmd_set+0x10c>)
   80d4a:	4798      	blx	r3
			if(pToken) yr = atoi(pToken);
   80d4c:	b9d8      	cbnz	r0, 80d86 <_cmd_set+0xde>
			pToken = strtok(NULL, " : \r\n");
   80d4e:	4920      	ldr	r1, [pc, #128]	; (80dd0 <_cmd_set+0x128>)
   80d50:	2000      	movs	r0, #0
   80d52:	4b18      	ldr	r3, [pc, #96]	; (80db4 <_cmd_set+0x10c>)
   80d54:	4798      	blx	r3
			if(pToken) mm = atoi(pToken);
   80d56:	b9d8      	cbnz	r0, 80d90 <_cmd_set+0xe8>
			pToken = strtok(NULL, " : \r\n");
   80d58:	491d      	ldr	r1, [pc, #116]	; (80dd0 <_cmd_set+0x128>)
   80d5a:	2000      	movs	r0, #0
   80d5c:	4b15      	ldr	r3, [pc, #84]	; (80db4 <_cmd_set+0x10c>)
   80d5e:	4798      	blx	r3
			if(pToken) dd = atoi(pToken);
   80d60:	b9d8      	cbnz	r0, 80d9a <_cmd_set+0xf2>
			pToken = strtok(NULL, " : \r\n");
   80d62:	491b      	ldr	r1, [pc, #108]	; (80dd0 <_cmd_set+0x128>)
   80d64:	2000      	movs	r0, #0
   80d66:	4b13      	ldr	r3, [pc, #76]	; (80db4 <_cmd_set+0x10c>)
   80d68:	4798      	blx	r3
			if(pToken) wk = atoi(pToken);
   80d6a:	b9d8      	cbnz	r0, 80da4 <_cmd_set+0xfc>
			rtc_set_date(RTC, yr, mm, dd, wk);
   80d6c:	4b19      	ldr	r3, [pc, #100]	; (80dd4 <_cmd_set+0x12c>)
   80d6e:	681b      	ldr	r3, [r3, #0]
   80d70:	4a19      	ldr	r2, [pc, #100]	; (80dd8 <_cmd_set+0x130>)
   80d72:	6812      	ldr	r2, [r2, #0]
   80d74:	4919      	ldr	r1, [pc, #100]	; (80ddc <_cmd_set+0x134>)
   80d76:	6809      	ldr	r1, [r1, #0]
   80d78:	481d      	ldr	r0, [pc, #116]	; (80df0 <_cmd_set+0x148>)
   80d7a:	6800      	ldr	r0, [r0, #0]
   80d7c:	9000      	str	r0, [sp, #0]
   80d7e:	4818      	ldr	r0, [pc, #96]	; (80de0 <_cmd_set+0x138>)
   80d80:	4c1c      	ldr	r4, [pc, #112]	; (80df4 <_cmd_set+0x14c>)
   80d82:	47a0      	blx	r4
			break;
   80d84:	e797      	b.n	80cb6 <_cmd_set+0xe>
			if(pToken) yr = atoi(pToken);
   80d86:	4b19      	ldr	r3, [pc, #100]	; (80dec <_cmd_set+0x144>)
   80d88:	4798      	blx	r3
   80d8a:	4b14      	ldr	r3, [pc, #80]	; (80ddc <_cmd_set+0x134>)
   80d8c:	6018      	str	r0, [r3, #0]
   80d8e:	e7de      	b.n	80d4e <_cmd_set+0xa6>
			if(pToken) mm = atoi(pToken);
   80d90:	4b16      	ldr	r3, [pc, #88]	; (80dec <_cmd_set+0x144>)
   80d92:	4798      	blx	r3
   80d94:	4b10      	ldr	r3, [pc, #64]	; (80dd8 <_cmd_set+0x130>)
   80d96:	6018      	str	r0, [r3, #0]
   80d98:	e7de      	b.n	80d58 <_cmd_set+0xb0>
			if(pToken) dd = atoi(pToken);
   80d9a:	4b14      	ldr	r3, [pc, #80]	; (80dec <_cmd_set+0x144>)
   80d9c:	4798      	blx	r3
   80d9e:	4b0d      	ldr	r3, [pc, #52]	; (80dd4 <_cmd_set+0x12c>)
   80da0:	6018      	str	r0, [r3, #0]
   80da2:	e7de      	b.n	80d62 <_cmd_set+0xba>
			if(pToken) wk = atoi(pToken);
   80da4:	4b11      	ldr	r3, [pc, #68]	; (80dec <_cmd_set+0x144>)
   80da6:	4798      	blx	r3
   80da8:	4b11      	ldr	r3, [pc, #68]	; (80df0 <_cmd_set+0x148>)
   80daa:	6018      	str	r0, [r3, #0]
   80dac:	e7de      	b.n	80d6c <_cmd_set+0xc4>
   80dae:	bf00      	nop
   80db0:	00086794 	.word	0x00086794
   80db4:	00081dd9 	.word	0x00081dd9
   80db8:	00081d7d 	.word	0x00081d7d
   80dbc:	000806bd 	.word	0x000806bd
   80dc0:	200713e0 	.word	0x200713e0
   80dc4:	00086798 	.word	0x00086798
   80dc8:	00081d31 	.word	0x00081d31
   80dcc:	00080ee1 	.word	0x00080ee1
   80dd0:	000868c8 	.word	0x000868c8
   80dd4:	2007118c 	.word	0x2007118c
   80dd8:	20071180 	.word	0x20071180
   80ddc:	20071184 	.word	0x20071184
   80de0:	400e1a60 	.word	0x400e1a60
   80de4:	000801d5 	.word	0x000801d5
   80de8:	00081645 	.word	0x00081645
   80dec:	00081c3d 	.word	0x00081c3d
   80df0:	20071188 	.word	0x20071188
   80df4:	000802dd 	.word	0x000802dd

00080df8 <_cmd_show>:

void _cmd_show(uint32_t sc, void* pParam)
 {
   80df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80dfa:	4b1b      	ldr	r3, [pc, #108]	; (80e68 <_cmd_show+0x70>)
   80dfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	if(ioport_get_pin_level(PIO_PC23_IDX))
   80dfe:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80e02:	d118      	bne.n	80e36 <_cmd_show+0x3e>
		ioport_set_pin_level(PIO_PC23_IDX,0);
		Putstr(buf);
	}
	else
	{
	sprintf(buf, "L'etat de la broche etait bas \r\n");
   80e04:	4e19      	ldr	r6, [pc, #100]	; (80e6c <_cmd_show+0x74>)
   80e06:	4c1a      	ldr	r4, [pc, #104]	; (80e70 <_cmd_show+0x78>)
   80e08:	f106 0720 	add.w	r7, r6, #32
   80e0c:	4635      	mov	r5, r6
   80e0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80e10:	6020      	str	r0, [r4, #0]
   80e12:	6061      	str	r1, [r4, #4]
   80e14:	60a2      	str	r2, [r4, #8]
   80e16:	60e3      	str	r3, [r4, #12]
   80e18:	462e      	mov	r6, r5
   80e1a:	3410      	adds	r4, #16
   80e1c:	42bd      	cmp	r5, r7
   80e1e:	d1f5      	bne.n	80e0c <_cmd_show+0x14>
   80e20:	782b      	ldrb	r3, [r5, #0]
   80e22:	7023      	strb	r3, [r4, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80e24:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80e28:	4b0f      	ldr	r3, [pc, #60]	; (80e68 <_cmd_show+0x70>)
   80e2a:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(PIO_PC23_IDX,1);
	Putstr(buf);
   80e2c:	4910      	ldr	r1, [pc, #64]	; (80e70 <_cmd_show+0x78>)
   80e2e:	2067      	movs	r0, #103	; 0x67
   80e30:	4b10      	ldr	r3, [pc, #64]	; (80e74 <_cmd_show+0x7c>)
   80e32:	4798      	blx	r3
   80e34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		sprintf(buf, "L'etat de la broche etait haut \r\n");
   80e36:	4e10      	ldr	r6, [pc, #64]	; (80e78 <_cmd_show+0x80>)
   80e38:	4c0d      	ldr	r4, [pc, #52]	; (80e70 <_cmd_show+0x78>)
   80e3a:	f106 0720 	add.w	r7, r6, #32
   80e3e:	4635      	mov	r5, r6
   80e40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80e42:	6020      	str	r0, [r4, #0]
   80e44:	6061      	str	r1, [r4, #4]
   80e46:	60a2      	str	r2, [r4, #8]
   80e48:	60e3      	str	r3, [r4, #12]
   80e4a:	462e      	mov	r6, r5
   80e4c:	3410      	adds	r4, #16
   80e4e:	42bd      	cmp	r5, r7
   80e50:	d1f5      	bne.n	80e3e <_cmd_show+0x46>
   80e52:	882b      	ldrh	r3, [r5, #0]
   80e54:	8023      	strh	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80e56:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80e5a:	4b03      	ldr	r3, [pc, #12]	; (80e68 <_cmd_show+0x70>)
   80e5c:	635a      	str	r2, [r3, #52]	; 0x34
		Putstr(buf);
   80e5e:	4904      	ldr	r1, [pc, #16]	; (80e70 <_cmd_show+0x78>)
   80e60:	2067      	movs	r0, #103	; 0x67
   80e62:	4b04      	ldr	r3, [pc, #16]	; (80e74 <_cmd_show+0x7c>)
   80e64:	4798      	blx	r3
   80e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80e68:	400e1200 	.word	0x400e1200
   80e6c:	000868f4 	.word	0x000868f4
   80e70:	200713e0 	.word	0x200713e0
   80e74:	00080ee1 	.word	0x00080ee1
   80e78:	000868d0 	.word	0x000868d0

00080e7c <_cmd_menu>:
	//sprintf(buf, "Hello!!! \r\n");
	//Putstr(buf);
 }

 void _cmd_menu(uint32_t sc, void* pParam)
 {
   80e7c:	b510      	push	{r4, lr}
   80e7e:	4608      	mov	r0, r1
	uint16_t crc;
#define pToken sc
	pToken = (uint32_t)strtok(pParam, " \r\n");
   80e80:	4911      	ldr	r1, [pc, #68]	; (80ec8 <_cmd_menu+0x4c>)
   80e82:	4b12      	ldr	r3, [pc, #72]	; (80ecc <_cmd_menu+0x50>)
   80e84:	4798      	blx	r3
	if(pToken)
   80e86:	b900      	cbnz	r0, 80e8a <_cmd_menu+0xe>
   80e88:	bd10      	pop	{r4, pc}
   80e8a:	4604      	mov	r4, r0
	{
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   80e8c:	4b10      	ldr	r3, [pc, #64]	; (80ed0 <_cmd_menu+0x54>)
   80e8e:	4798      	blx	r3
   80e90:	4601      	mov	r1, r0
   80e92:	4620      	mov	r0, r4
   80e94:	4b0f      	ldr	r3, [pc, #60]	; (80ed4 <_cmd_menu+0x58>)
   80e96:	4798      	blx	r3
		switch(crc)
   80e98:	b280      	uxth	r0, r0
   80e9a:	f648 0362 	movw	r3, #34914	; 0x8862
   80e9e:	4298      	cmp	r0, r3
   80ea0:	d007      	beq.n	80eb2 <_cmd_menu+0x36>
   80ea2:	f648 338b 	movw	r3, #35723	; 0x8b8b
   80ea6:	4298      	cmp	r0, r3
   80ea8:	d107      	bne.n	80eba <_cmd_menu+0x3e>
		{
		case 0x8B8B:			//switch
			Menu(MENU_SWITCH_BUTTON);
   80eaa:	2065      	movs	r0, #101	; 0x65
   80eac:	4b0a      	ldr	r3, [pc, #40]	; (80ed8 <_cmd_menu+0x5c>)
   80eae:	4798      	blx	r3
			break;
   80eb0:	bd10      	pop	{r4, pc}
		case 0x8862:			//select
			Menu(MENU_SELECT_BUTTON);
   80eb2:	2066      	movs	r0, #102	; 0x66
   80eb4:	4b08      	ldr	r3, [pc, #32]	; (80ed8 <_cmd_menu+0x5c>)
   80eb6:	4798      	blx	r3
			break;	
   80eb8:	bd10      	pop	{r4, pc}
		default:
			Error(ERR_SHELL_CMD_MENU_SWITCH_BAD_SC, sc);
   80eba:	4b08      	ldr	r3, [pc, #32]	; (80edc <_cmd_menu+0x60>)
   80ebc:	681b      	ldr	r3, [r3, #0]
   80ebe:	4621      	mov	r1, r4
   80ec0:	2013      	movs	r0, #19
   80ec2:	4798      	blx	r3
		}
#undef pToken
	}
	

 }
   80ec4:	e7e0      	b.n	80e88 <_cmd_menu+0xc>
   80ec6:	bf00      	nop
   80ec8:	00086794 	.word	0x00086794
   80ecc:	00081dd9 	.word	0x00081dd9
   80ed0:	00081d7d 	.word	0x00081d7d
   80ed4:	000806bd 	.word	0x000806bd
   80ed8:	00080395 	.word	0x00080395
   80edc:	20070538 	.word	0x20070538

00080ee0 <Shellcom>:




 uint32_t Shellcom(uint32_t sc , ...)
 {
   80ee0:	b40f      	push	{r0, r1, r2, r3}
   80ee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(sc)
   80ee4:	9906      	ldr	r1, [sp, #24]
   80ee6:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   80eea:	2b05      	cmp	r3, #5
   80eec:	f200 80a2 	bhi.w	81034 <Shellcom+0x154>
   80ef0:	e8df f003 	tbb	[pc, r3]
   80ef4:	2376a045 	.word	0x2376a045
   80ef8:	7103      	.short	0x7103
#undef _pStr
		break;
	case SHELLCOM_PUTSTRLEN:
#define _pStr pa1
#define _len  pa2
	while(_len)
   80efa:	9d08      	ldr	r5, [sp, #32]
   80efc:	2d00      	cmp	r5, #0
   80efe:	d06a      	beq.n	80fd6 <Shellcom+0xf6>
	{
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80f00:	4c4f      	ldr	r4, [pc, #316]	; (81040 <Shellcom+0x160>)
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80f02:	4e50      	ldr	r6, [pc, #320]	; (81044 <Shellcom+0x164>)
   80f04:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80f08:	6823      	ldr	r3, [r4, #0]
   80f0a:	1c5a      	adds	r2, r3, #1
   80f0c:	6022      	str	r2, [r4, #0]
   80f0e:	9a07      	ldr	r2, [sp, #28]
   80f10:	1c51      	adds	r1, r2, #1
   80f12:	9107      	str	r1, [sp, #28]
   80f14:	7812      	ldrb	r2, [r2, #0]
   80f16:	701a      	strb	r2, [r3, #0]
   80f18:	3d01      	subs	r5, #1
   80f1a:	9508      	str	r5, [sp, #32]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80f1c:	6823      	ldr	r3, [r4, #0]
   80f1e:	42b3      	cmp	r3, r6
   80f20:	bf28      	it	cs
   80f22:	6027      	strcs	r7, [r4, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80f24:	6822      	ldr	r2, [r4, #0]
   80f26:	6863      	ldr	r3, [r4, #4]
   80f28:	429a      	cmp	r2, r3
   80f2a:	d07d      	beq.n	81028 <Shellcom+0x148>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80f2c:	2102      	movs	r1, #2
   80f2e:	4846      	ldr	r0, [pc, #280]	; (81048 <Shellcom+0x168>)
   80f30:	4b46      	ldr	r3, [pc, #280]	; (8104c <Shellcom+0x16c>)
   80f32:	4798      	blx	r3
	while(_len)
   80f34:	2d00      	cmp	r5, #0
   80f36:	d1e7      	bne.n	80f08 <Shellcom+0x28>
   80f38:	e04d      	b.n	80fd6 <Shellcom+0xf6>
		while(*(char*)_pStr)
   80f3a:	9d07      	ldr	r5, [sp, #28]
   80f3c:	462a      	mov	r2, r5
   80f3e:	782b      	ldrb	r3, [r5, #0]
   80f40:	2b00      	cmp	r3, #0
   80f42:	d048      	beq.n	80fd6 <Shellcom+0xf6>
   80f44:	3501      	adds	r5, #1
			*pTxWrite++ = *(char*)_pStr++;
   80f46:	4c3e      	ldr	r4, [pc, #248]	; (81040 <Shellcom+0x160>)
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80f48:	4e3e      	ldr	r6, [pc, #248]	; (81044 <Shellcom+0x164>)
   80f4a:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
			*pTxWrite++ = *(char*)_pStr++;
   80f4e:	6823      	ldr	r3, [r4, #0]
   80f50:	1c59      	adds	r1, r3, #1
   80f52:	6021      	str	r1, [r4, #0]
   80f54:	9507      	str	r5, [sp, #28]
   80f56:	7812      	ldrb	r2, [r2, #0]
   80f58:	701a      	strb	r2, [r3, #0]
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80f5a:	6823      	ldr	r3, [r4, #0]
   80f5c:	42b3      	cmp	r3, r6
   80f5e:	bf28      	it	cs
   80f60:	6027      	strcs	r7, [r4, #0]
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80f62:	6822      	ldr	r2, [r4, #0]
   80f64:	6863      	ldr	r3, [r4, #4]
   80f66:	429a      	cmp	r2, r3
   80f68:	d058      	beq.n	8101c <Shellcom+0x13c>
			usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80f6a:	2102      	movs	r1, #2
   80f6c:	4836      	ldr	r0, [pc, #216]	; (81048 <Shellcom+0x168>)
   80f6e:	4b37      	ldr	r3, [pc, #220]	; (8104c <Shellcom+0x16c>)
   80f70:	4798      	blx	r3
		while(*(char*)_pStr)
   80f72:	462a      	mov	r2, r5
   80f74:	f815 3b01 	ldrb.w	r3, [r5], #1
   80f78:	2b00      	cmp	r3, #0
   80f7a:	d1e8      	bne.n	80f4e <Shellcom+0x6e>
   80f7c:	e02b      	b.n	80fd6 <Shellcom+0xf6>
		pTxWrite = pTxRead = shellcomTxBuf;
   80f7e:	4b30      	ldr	r3, [pc, #192]	; (81040 <Shellcom+0x160>)
   80f80:	4a33      	ldr	r2, [pc, #204]	; (81050 <Shellcom+0x170>)
   80f82:	605a      	str	r2, [r3, #4]
   80f84:	601a      	str	r2, [r3, #0]
   80f86:	2011      	movs	r0, #17
   80f88:	4c32      	ldr	r4, [pc, #200]	; (81054 <Shellcom+0x174>)
   80f8a:	47a0      	blx	r4
		usart_init_rs232(USART_SERIAL, &usart_console_settings,	sysclk_get_cpu_hz());
   80f8c:	4d2e      	ldr	r5, [pc, #184]	; (81048 <Shellcom+0x168>)
   80f8e:	4a32      	ldr	r2, [pc, #200]	; (81058 <Shellcom+0x178>)
   80f90:	4932      	ldr	r1, [pc, #200]	; (8105c <Shellcom+0x17c>)
   80f92:	4628      	mov	r0, r5
   80f94:	4b32      	ldr	r3, [pc, #200]	; (81060 <Shellcom+0x180>)
   80f96:	4798      	blx	r3
		gpio_configure_pin(USART_SERIAL_TXD_IDX,USART_SERIAL_TXD_FLAGS);
   80f98:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80f9c:	200b      	movs	r0, #11
   80f9e:	4e31      	ldr	r6, [pc, #196]	; (81064 <Shellcom+0x184>)
   80fa0:	47b0      	blx	r6
		gpio_configure_pin(USART_SERIAL_RXD_IDX,USART_SERIAL_RXD_FLAGS);
   80fa2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80fa6:	200a      	movs	r0, #10
   80fa8:	47b0      	blx	r6
		usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
   80faa:	2101      	movs	r1, #1
   80fac:	4628      	mov	r0, r5
   80fae:	4b27      	ldr	r3, [pc, #156]	; (8104c <Shellcom+0x16c>)
   80fb0:	4798      	blx	r3
   80fb2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80fb6:	4b2c      	ldr	r3, [pc, #176]	; (81068 <Shellcom+0x188>)
   80fb8:	601a      	str	r2, [r3, #0]
		usart_enable_tx(USART_SERIAL);
   80fba:	4628      	mov	r0, r5
   80fbc:	4b2b      	ldr	r3, [pc, #172]	; (8106c <Shellcom+0x18c>)
   80fbe:	4798      	blx	r3
		usart_enable_rx(USART_SERIAL);
   80fc0:	4628      	mov	r0, r5
   80fc2:	4b2b      	ldr	r3, [pc, #172]	; (81070 <Shellcom+0x190>)
   80fc4:	4798      	blx	r3
   80fc6:	200b      	movs	r0, #11
   80fc8:	47a0      	blx	r4
   80fca:	200c      	movs	r0, #12
   80fcc:	47a0      	blx	r4
   80fce:	200d      	movs	r0, #13
   80fd0:	47a0      	blx	r4
   80fd2:	200e      	movs	r0, #14
   80fd4:	47a0      	blx	r4
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80fd6:	2000      	movs	r0, #0
   80fd8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80fdc:	b004      	add	sp, #16
   80fde:	4770      	bx	lr
		*pTxWrite++ = _ch;
   80fe0:	4b17      	ldr	r3, [pc, #92]	; (81040 <Shellcom+0x160>)
   80fe2:	681a      	ldr	r2, [r3, #0]
   80fe4:	1c51      	adds	r1, r2, #1
   80fe6:	6019      	str	r1, [r3, #0]
   80fe8:	9907      	ldr	r1, [sp, #28]
   80fea:	7011      	strb	r1, [r2, #0]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80fec:	681a      	ldr	r2, [r3, #0]
   80fee:	4b15      	ldr	r3, [pc, #84]	; (81044 <Shellcom+0x164>)
   80ff0:	429a      	cmp	r2, r3
   80ff2:	d303      	bcc.n	80ffc <Shellcom+0x11c>
   80ff4:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80ff8:	4b11      	ldr	r3, [pc, #68]	; (81040 <Shellcom+0x160>)
   80ffa:	601a      	str	r2, [r3, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80ffc:	4b10      	ldr	r3, [pc, #64]	; (81040 <Shellcom+0x160>)
   80ffe:	681a      	ldr	r2, [r3, #0]
   81000:	685b      	ldr	r3, [r3, #4]
   81002:	429a      	cmp	r2, r3
   81004:	d004      	beq.n	81010 <Shellcom+0x130>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   81006:	2102      	movs	r1, #2
   81008:	480f      	ldr	r0, [pc, #60]	; (81048 <Shellcom+0x168>)
   8100a:	4b10      	ldr	r3, [pc, #64]	; (8104c <Shellcom+0x16c>)
   8100c:	4798      	blx	r3
		break;
   8100e:	e7e2      	b.n	80fd6 <Shellcom+0xf6>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   81010:	4b18      	ldr	r3, [pc, #96]	; (81074 <Shellcom+0x194>)
   81012:	681b      	ldr	r3, [r3, #0]
   81014:	2166      	movs	r1, #102	; 0x66
   81016:	2017      	movs	r0, #23
   81018:	4798      	blx	r3
   8101a:	e7f4      	b.n	81006 <Shellcom+0x126>
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   8101c:	4b15      	ldr	r3, [pc, #84]	; (81074 <Shellcom+0x194>)
   8101e:	681b      	ldr	r3, [r3, #0]
   81020:	2167      	movs	r1, #103	; 0x67
   81022:	2017      	movs	r0, #23
   81024:	4798      	blx	r3
   81026:	e7a0      	b.n	80f6a <Shellcom+0x8a>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   81028:	4b12      	ldr	r3, [pc, #72]	; (81074 <Shellcom+0x194>)
   8102a:	681b      	ldr	r3, [r3, #0]
   8102c:	2167      	movs	r1, #103	; 0x67
   8102e:	2017      	movs	r0, #23
   81030:	4798      	blx	r3
   81032:	e77b      	b.n	80f2c <Shellcom+0x4c>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
   81034:	4b0f      	ldr	r3, [pc, #60]	; (81074 <Shellcom+0x194>)
   81036:	681b      	ldr	r3, [r3, #0]
   81038:	200d      	movs	r0, #13
   8103a:	4798      	blx	r3
   8103c:	e7cb      	b.n	80fd6 <Shellcom+0xf6>
   8103e:	bf00      	nop
   81040:	20071190 	.word	0x20071190
   81044:	20071298 	.word	0x20071298
   81048:	40098000 	.word	0x40098000
   8104c:	000806b1 	.word	0x000806b1
   81050:	20071198 	.word	0x20071198
   81054:	000819fd 	.word	0x000819fd
   81058:	0501bd00 	.word	0x0501bd00
   8105c:	00086918 	.word	0x00086918
   81060:	00080651 	.word	0x00080651
   81064:	00081699 	.word	0x00081699
   81068:	e000e100 	.word	0xe000e100
   8106c:	000806a5 	.word	0x000806a5
   81070:	000806ab 	.word	0x000806ab
   81074:	20070538 	.word	0x20070538

00081078 <USART0_Handler>:
	 _SHELL_KBHIT = 1,
 };

 
 void USART0_Handler()
 {
   81078:	b530      	push	{r4, r5, lr}
   8107a:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
   8107c:	4817      	ldr	r0, [pc, #92]	; (810dc <USART0_Handler+0x64>)
   8107e:	4b18      	ldr	r3, [pc, #96]	; (810e0 <USART0_Handler+0x68>)
   81080:	4798      	blx	r3
   81082:	4604      	mov	r4, r0

	if(dw_status & US_CSR_RXRDY)
   81084:	f010 0f01 	tst.w	r0, #1
   81088:	d116      	bne.n	810b8 <USART0_Handler+0x40>
	{
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
	}

	if(dw_status & US_CSR_TXRDY)
   8108a:	f014 0f02 	tst.w	r4, #2
   8108e:	d011      	beq.n	810b4 <USART0_Handler+0x3c>
	{
				
		if(pTxRead!=pTxWrite)
   81090:	4a14      	ldr	r2, [pc, #80]	; (810e4 <USART0_Handler+0x6c>)
   81092:	6853      	ldr	r3, [r2, #4]
   81094:	6812      	ldr	r2, [r2, #0]
   81096:	4293      	cmp	r3, r2
   81098:	d01a      	beq.n	810d0 <USART0_Handler+0x58>
		{
			USART_SERIAL->US_THR = US_THR_TXCHR(*pTxRead++);
   8109a:	1c5a      	adds	r2, r3, #1
   8109c:	4911      	ldr	r1, [pc, #68]	; (810e4 <USART0_Handler+0x6c>)
   8109e:	604a      	str	r2, [r1, #4]
   810a0:	7819      	ldrb	r1, [r3, #0]
   810a2:	4b0e      	ldr	r3, [pc, #56]	; (810dc <USART0_Handler+0x64>)
   810a4:	61d9      	str	r1, [r3, #28]
			if(pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxRead = shellcomTxBuf;
   810a6:	4b10      	ldr	r3, [pc, #64]	; (810e8 <USART0_Handler+0x70>)
   810a8:	429a      	cmp	r2, r3
   810aa:	d303      	bcc.n	810b4 <USART0_Handler+0x3c>
   810ac:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   810b0:	4b0c      	ldr	r3, [pc, #48]	; (810e4 <USART0_Handler+0x6c>)
   810b2:	605a      	str	r2, [r3, #4]
		else
		{
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
		}
	}
 }
   810b4:	b003      	add	sp, #12
   810b6:	bd30      	pop	{r4, r5, pc}
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
   810b8:	4b08      	ldr	r3, [pc, #32]	; (810dc <USART0_Handler+0x64>)
   810ba:	699b      	ldr	r3, [r3, #24]
   810bc:	2200      	movs	r2, #0
   810be:	9200      	str	r2, [sp, #0]
   810c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
   810c4:	2201      	movs	r2, #1
   810c6:	4909      	ldr	r1, [pc, #36]	; (810ec <USART0_Handler+0x74>)
   810c8:	2066      	movs	r0, #102	; 0x66
   810ca:	4d09      	ldr	r5, [pc, #36]	; (810f0 <USART0_Handler+0x78>)
   810cc:	47a8      	blx	r5
   810ce:	e7dc      	b.n	8108a <USART0_Handler+0x12>
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
   810d0:	2102      	movs	r1, #2
   810d2:	4802      	ldr	r0, [pc, #8]	; (810dc <USART0_Handler+0x64>)
   810d4:	4b07      	ldr	r3, [pc, #28]	; (810f4 <USART0_Handler+0x7c>)
   810d6:	4798      	blx	r3
 }
   810d8:	e7ec      	b.n	810b4 <USART0_Handler+0x3c>
   810da:	bf00      	nop
   810dc:	40098000 	.word	0x40098000
   810e0:	000806b9 	.word	0x000806b9
   810e4:	20071190 	.word	0x20071190
   810e8:	20071298 	.word	0x20071298
   810ec:	00080865 	.word	0x00080865
   810f0:	000810f9 	.word	0x000810f9
   810f4:	000806b5 	.word	0x000806b5

000810f8 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   810f8:	b40f      	push	{r0, r1, r2, r3}
   810fa:	b5f0      	push	{r4, r5, r6, r7, lr}
   810fc:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   810fe:	9908      	ldr	r1, [sp, #32]
   81100:	2964      	cmp	r1, #100	; 0x64
   81102:	d024      	beq.n	8114e <Taskman+0x56>
   81104:	d917      	bls.n	81136 <Taskman+0x3e>
   81106:	2966      	cmp	r1, #102	; 0x66
   81108:	d067      	beq.n	811da <Taskman+0xe2>
   8110a:	2967      	cmp	r1, #103	; 0x67
   8110c:	f040 80c8 	bne.w	812a0 <Taskman+0x1a8>
#undef _delay
#undef k
		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   81110:	4a66      	ldr	r2, [pc, #408]	; (812ac <Taskman+0x1b4>)
   81112:	6853      	ldr	r3, [r2, #4]
   81114:	6812      	ldr	r2, [r2, #0]
   81116:	4293      	cmp	r3, r2
   81118:	d059      	beq.n	811ce <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   8111a:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   8111c:	6858      	ldr	r0, [r3, #4]
   8111e:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   81120:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   81122:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   81124:	4c62      	ldr	r4, [pc, #392]	; (812b0 <Taskman+0x1b8>)
   81126:	42a3      	cmp	r3, r4
   81128:	f0c0 80a3 	bcc.w	81272 <Taskman+0x17a>
   8112c:	4c61      	ldr	r4, [pc, #388]	; (812b4 <Taskman+0x1bc>)
   8112e:	4b5f      	ldr	r3, [pc, #380]	; (812ac <Taskman+0x1b4>)
   81130:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   81132:	4790      	blx	r2
   81134:	e04b      	b.n	811ce <Taskman+0xd6>
	switch(sc)
   81136:	2901      	cmp	r1, #1
   81138:	f040 80b2 	bne.w	812a0 <Taskman+0x1a8>
		}
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   8113c:	2002      	movs	r0, #2
   8113e:	4b5e      	ldr	r3, [pc, #376]	; (812b8 <Taskman+0x1c0>)
   81140:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   81142:	2500      	movs	r5, #0
   81144:	9508      	str	r5, [sp, #32]
   81146:	4c5d      	ldr	r4, [pc, #372]	; (812bc <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   81148:	462f      	mov	r7, r5
   8114a:	2666      	movs	r6, #102	; 0x66
   8114c:	e099      	b.n	81282 <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   8114e:	4b57      	ldr	r3, [pc, #348]	; (812ac <Taskman+0x1b4>)
   81150:	4a58      	ldr	r2, [pc, #352]	; (812b4 <Taskman+0x1bc>)
   81152:	601a      	str	r2, [r3, #0]
   81154:	605a      	str	r2, [r3, #4]
   81156:	4b59      	ldr	r3, [pc, #356]	; (812bc <Taskman+0x1c4>)
   81158:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   8115c:	2200      	movs	r2, #0
   8115e:	60da      	str	r2, [r3, #12]
   81160:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   81162:	428b      	cmp	r3, r1
   81164:	d1fb      	bne.n	8115e <Taskman+0x66>
		base->PIO_PUDR = mask;
   81166:	4b56      	ldr	r3, [pc, #344]	; (812c0 <Taskman+0x1c8>)
   81168:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   8116c:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_MDDR = mask;
   8116e:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   81170:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   81172:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   81176:	6f19      	ldr	r1, [r3, #112]	; 0x70
   81178:	4311      	orrs	r1, r2
   8117a:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   8117c:	605a      	str	r2, [r3, #4]
   8117e:	201b      	movs	r0, #27
   81180:	4b50      	ldr	r3, [pc, #320]	; (812c4 <Taskman+0x1cc>)
   81182:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   81184:	4c50      	ldr	r4, [pc, #320]	; (812c8 <Taskman+0x1d0>)
   81186:	4a51      	ldr	r2, [pc, #324]	; (812cc <Taskman+0x1d4>)
   81188:	2100      	movs	r1, #0
   8118a:	4620      	mov	r0, r4
   8118c:	4b50      	ldr	r3, [pc, #320]	; (812d0 <Taskman+0x1d8>)
   8118e:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   81190:	f44f 7224 	mov.w	r2, #656	; 0x290
   81194:	2100      	movs	r1, #0
   81196:	4620      	mov	r0, r4
   81198:	4b4e      	ldr	r3, [pc, #312]	; (812d4 <Taskman+0x1dc>)
   8119a:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   8119c:	f240 12cb 	movw	r2, #459	; 0x1cb
   811a0:	2100      	movs	r1, #0
   811a2:	4620      	mov	r0, r4
   811a4:	4b4c      	ldr	r3, [pc, #304]	; (812d8 <Taskman+0x1e0>)
   811a6:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   811a8:	2100      	movs	r1, #0
   811aa:	4620      	mov	r0, r4
   811ac:	4b4b      	ldr	r3, [pc, #300]	; (812dc <Taskman+0x1e4>)
   811ae:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   811b0:	4b4b      	ldr	r3, [pc, #300]	; (812e0 <Taskman+0x1e8>)
   811b2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   811b6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   811ba:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   811be:	2100      	movs	r1, #0
   811c0:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   811c4:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   811c6:	2204      	movs	r2, #4
   811c8:	4620      	mov	r0, r4
   811ca:	4b46      	ldr	r3, [pc, #280]	; (812e4 <Taskman+0x1ec>)
   811cc:	4798      	blx	r3
 }
   811ce:	2000      	movs	r0, #0
   811d0:	b003      	add	sp, #12
   811d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   811d6:	b004      	add	sp, #16
   811d8:	4770      	bx	lr
		cpu_irq_enter_critical();
   811da:	4b43      	ldr	r3, [pc, #268]	; (812e8 <Taskman+0x1f0>)
   811dc:	4798      	blx	r3
		if(_delay)
   811de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   811e0:	b34d      	cbz	r5, 81236 <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   811e2:	2300      	movs	r3, #0
   811e4:	9308      	str	r3, [sp, #32]
   811e6:	4b35      	ldr	r3, [pc, #212]	; (812bc <Taskman+0x1c4>)
   811e8:	68db      	ldr	r3, [r3, #12]
   811ea:	b1ab      	cbz	r3, 81218 <Taskman+0x120>
   811ec:	2301      	movs	r3, #1
   811ee:	9308      	str	r3, [sp, #32]
   811f0:	4a32      	ldr	r2, [pc, #200]	; (812bc <Taskman+0x1c4>)
   811f2:	2000      	movs	r0, #0
   811f4:	461c      	mov	r4, r3
   811f6:	69d1      	ldr	r1, [r2, #28]
   811f8:	b159      	cbz	r1, 81212 <Taskman+0x11a>
   811fa:	3301      	adds	r3, #1
   811fc:	3210      	adds	r2, #16
   811fe:	4620      	mov	r0, r4
   81200:	2b0a      	cmp	r3, #10
   81202:	d1f8      	bne.n	811f6 <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   81204:	4b39      	ldr	r3, [pc, #228]	; (812ec <Taskman+0x1f4>)
   81206:	681b      	ldr	r3, [r3, #0]
   81208:	2100      	movs	r1, #0
   8120a:	2016      	movs	r0, #22
   8120c:	4798      	blx	r3
   8120e:	230a      	movs	r3, #10
   81210:	e002      	b.n	81218 <Taskman+0x120>
   81212:	b970      	cbnz	r0, 81232 <Taskman+0x13a>
   81214:	2b0a      	cmp	r3, #10
   81216:	d0f5      	beq.n	81204 <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   81218:	4928      	ldr	r1, [pc, #160]	; (812bc <Taskman+0x1c4>)
   8121a:	011b      	lsls	r3, r3, #4
   8121c:	18ca      	adds	r2, r1, r3
   8121e:	9809      	ldr	r0, [sp, #36]	; 0x24
   81220:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   81222:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81224:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   81226:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81228:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   8122a:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   8122c:	4b30      	ldr	r3, [pc, #192]	; (812f0 <Taskman+0x1f8>)
   8122e:	4798      	blx	r3
		break;
   81230:	e7cd      	b.n	811ce <Taskman+0xd6>
   81232:	9308      	str	r3, [sp, #32]
   81234:	e7ee      	b.n	81214 <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   81236:	4b1d      	ldr	r3, [pc, #116]	; (812ac <Taskman+0x1b4>)
   81238:	681a      	ldr	r2, [r3, #0]
   8123a:	9909      	ldr	r1, [sp, #36]	; 0x24
   8123c:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   8123e:	681b      	ldr	r3, [r3, #0]
   81240:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   81242:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   81244:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   81246:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   81248:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   8124a:	4a19      	ldr	r2, [pc, #100]	; (812b0 <Taskman+0x1b8>)
   8124c:	4293      	cmp	r3, r2
   8124e:	d20c      	bcs.n	8126a <Taskman+0x172>
			taskman.pPush++;
   81250:	4a16      	ldr	r2, [pc, #88]	; (812ac <Taskman+0x1b4>)
   81252:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   81254:	4b15      	ldr	r3, [pc, #84]	; (812ac <Taskman+0x1b4>)
   81256:	681a      	ldr	r2, [r3, #0]
   81258:	685b      	ldr	r3, [r3, #4]
   8125a:	429a      	cmp	r2, r3
   8125c:	d1e6      	bne.n	8122c <Taskman+0x134>
   8125e:	4b23      	ldr	r3, [pc, #140]	; (812ec <Taskman+0x1f4>)
   81260:	681b      	ldr	r3, [r3, #0]
   81262:	2100      	movs	r1, #0
   81264:	2015      	movs	r0, #21
   81266:	4798      	blx	r3
   81268:	e7e0      	b.n	8122c <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   8126a:	4a12      	ldr	r2, [pc, #72]	; (812b4 <Taskman+0x1bc>)
   8126c:	4b0f      	ldr	r3, [pc, #60]	; (812ac <Taskman+0x1b4>)
   8126e:	601a      	str	r2, [r3, #0]
   81270:	e7f0      	b.n	81254 <Taskman+0x15c>
			taskman.pPop++;
   81272:	4c0e      	ldr	r4, [pc, #56]	; (812ac <Taskman+0x1b4>)
   81274:	6063      	str	r3, [r4, #4]
   81276:	e75c      	b.n	81132 <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   81278:	3501      	adds	r5, #1
   8127a:	9508      	str	r5, [sp, #32]
   8127c:	3410      	adds	r4, #16
   8127e:	2d0a      	cmp	r5, #10
   81280:	d0a5      	beq.n	811ce <Taskman+0xd6>
			if(dTasks[k].delay)
   81282:	68e3      	ldr	r3, [r4, #12]
   81284:	2b00      	cmp	r3, #0
   81286:	d0f7      	beq.n	81278 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   81288:	3b01      	subs	r3, #1
   8128a:	60e3      	str	r3, [r4, #12]
   8128c:	2b00      	cmp	r3, #0
   8128e:	d1f3      	bne.n	81278 <Taskman+0x180>
					PushTask(
   81290:	68a3      	ldr	r3, [r4, #8]
   81292:	6862      	ldr	r2, [r4, #4]
   81294:	6821      	ldr	r1, [r4, #0]
   81296:	9700      	str	r7, [sp, #0]
   81298:	4630      	mov	r0, r6
   8129a:	f7ff ff2d 	bl	810f8 <Taskman>
   8129e:	e7eb      	b.n	81278 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   812a0:	4b12      	ldr	r3, [pc, #72]	; (812ec <Taskman+0x1f4>)
   812a2:	681b      	ldr	r3, [r3, #0]
   812a4:	200b      	movs	r0, #11
   812a6:	4798      	blx	r3
	return 0;
   812a8:	e791      	b.n	811ce <Taskman+0xd6>
   812aa:	bf00      	nop
   812ac:	20071338 	.word	0x20071338
   812b0:	20071338 	.word	0x20071338
   812b4:	20071298 	.word	0x20071298
   812b8:	00081679 	.word	0x00081679
   812bc:	20071340 	.word	0x20071340
   812c0:	400e1000 	.word	0x400e1000
   812c4:	000819fd 	.word	0x000819fd
   812c8:	40080000 	.word	0x40080000
   812cc:	0009c003 	.word	0x0009c003
   812d0:	00080591 	.word	0x00080591
   812d4:	000805b9 	.word	0x000805b9
   812d8:	000805b1 	.word	0x000805b1
   812dc:	000805a9 	.word	0x000805a9
   812e0:	e000e100 	.word	0xe000e100
   812e4:	000805c1 	.word	0x000805c1
   812e8:	0008148d 	.word	0x0008148d
   812ec:	20070538 	.word	0x20070538
   812f0:	000814c9 	.word	0x000814c9

000812f4 <TC0_Handler>:
 {
   812f4:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   812f6:	2100      	movs	r1, #0
   812f8:	4803      	ldr	r0, [pc, #12]	; (81308 <TC0_Handler+0x14>)
   812fa:	4b04      	ldr	r3, [pc, #16]	; (8130c <TC0_Handler+0x18>)
   812fc:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   812fe:	2001      	movs	r0, #1
   81300:	4b03      	ldr	r3, [pc, #12]	; (81310 <TC0_Handler+0x1c>)
   81302:	4798      	blx	r3
   81304:	bd08      	pop	{r3, pc}
   81306:	bf00      	nop
   81308:	40080000 	.word	0x40080000
   8130c:	000805c9 	.word	0x000805c9
   81310:	000810f9 	.word	0x000810f9

00081314 <Appli>:
	 100,500,100,500,100,2200,0
 };


uint32_t Appli(uint32_t sc,...)
{
   81314:	b40f      	push	{r0, r1, r2, r3}
   81316:	b510      	push	{r4, lr}
   81318:	b082      	sub	sp, #8
	switch(sc)
   8131a:	9904      	ldr	r1, [sp, #16]
   8131c:	2964      	cmp	r1, #100	; 0x64
   8131e:	d006      	beq.n	8132e <Appli+0x1a>
   81320:	2966      	cmp	r1, #102	; 0x66
   81322:	d01b      	beq.n	8135c <Appli+0x48>

#undef k
		break;

	default:
		Error(ERR_APPLI_SWITHC_BAD_SC, sc);
   81324:	4b1c      	ldr	r3, [pc, #112]	; (81398 <Appli+0x84>)
   81326:	681b      	ldr	r3, [r3, #0]
   81328:	200f      	movs	r0, #15
   8132a:	4798      	blx	r3
		break;
   8132c:	e011      	b.n	81352 <Appli+0x3e>
		gpio_configure_pin(PIO_PC1_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   8132e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81332:	2041      	movs	r0, #65	; 0x41
   81334:	4c19      	ldr	r4, [pc, #100]	; (8139c <Appli+0x88>)
   81336:	47a0      	blx	r4
		gpio_configure_pin(PIO_PC2_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   81338:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8133c:	2042      	movs	r0, #66	; 0x42
   8133e:	47a0      	blx	r4
		PushTask(Appli, APPLI_RUN, 0, 800);
   81340:	f44f 7348 	mov.w	r3, #800	; 0x320
   81344:	9300      	str	r3, [sp, #0]
   81346:	2300      	movs	r3, #0
   81348:	2266      	movs	r2, #102	; 0x66
   8134a:	4915      	ldr	r1, [pc, #84]	; (813a0 <Appli+0x8c>)
   8134c:	4610      	mov	r0, r2
   8134e:	4c15      	ldr	r4, [pc, #84]	; (813a4 <Appli+0x90>)
   81350:	47a0      	blx	r4
	}
   81352:	b002      	add	sp, #8
   81354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81358:	b004      	add	sp, #16
   8135a:	4770      	bx	lr
		k++; if(flashSequApp[k]==0) k=0;
   8135c:	9c05      	ldr	r4, [sp, #20]
   8135e:	3401      	adds	r4, #1
   81360:	9405      	str	r4, [sp, #20]
   81362:	4b11      	ldr	r3, [pc, #68]	; (813a8 <Appli+0x94>)
   81364:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   81368:	b133      	cbz	r3, 81378 <Appli+0x64>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   8136a:	f014 0f01 	tst.w	r4, #1
   8136e:	d004      	beq.n	8137a <Appli+0x66>
		else gpio_set_pin_low(PIO_PC1_IDX);
   81370:	2041      	movs	r0, #65	; 0x41
   81372:	4b0e      	ldr	r3, [pc, #56]	; (813ac <Appli+0x98>)
   81374:	4798      	blx	r3
   81376:	e003      	b.n	81380 <Appli+0x6c>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   81378:	2400      	movs	r4, #0
   8137a:	2041      	movs	r0, #65	; 0x41
   8137c:	4b0c      	ldr	r3, [pc, #48]	; (813b0 <Appli+0x9c>)
   8137e:	4798      	blx	r3
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
   81380:	4b09      	ldr	r3, [pc, #36]	; (813a8 <Appli+0x94>)
   81382:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   81386:	9300      	str	r3, [sp, #0]
   81388:	4623      	mov	r3, r4
   8138a:	2266      	movs	r2, #102	; 0x66
   8138c:	4904      	ldr	r1, [pc, #16]	; (813a0 <Appli+0x8c>)
   8138e:	4610      	mov	r0, r2
   81390:	4c04      	ldr	r4, [pc, #16]	; (813a4 <Appli+0x90>)
   81392:	47a0      	blx	r4
		break;
   81394:	e7dd      	b.n	81352 <Appli+0x3e>
   81396:	bf00      	nop
   81398:	20070538 	.word	0x20070538
   8139c:	00081699 	.word	0x00081699
   813a0:	00081315 	.word	0x00081315
   813a4:	000810f9 	.word	0x000810f9
   813a8:	00086930 	.word	0x00086930
   813ac:	0008165f 	.word	0x0008165f
   813b0:	00081645 	.word	0x00081645

000813b4 <main>:
void Prompt(uint32_t sc, uint32_t i);

char buf[256];

int main (void)
{
   813b4:	b500      	push	{lr}
   813b6:	b083      	sub	sp, #12
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   813b8:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   813ba:	f3bf 8f5f 	dmb	sy
	/* Insert system clock initialization code here (sysclk_init()). */

	cpu_irq_disable();
   813be:	4e12      	ldr	r6, [pc, #72]	; (81408 <main+0x54>)
   813c0:	2400      	movs	r4, #0
   813c2:	7034      	strb	r4, [r6, #0]
	sysclk_init();
   813c4:	4b11      	ldr	r3, [pc, #68]	; (8140c <main+0x58>)
   813c6:	4798      	blx	r3
	board_init();
   813c8:	4b11      	ldr	r3, [pc, #68]	; (81410 <main+0x5c>)
   813ca:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());
	//////////////////////////////////////////////////////////////////
	
	Taskman(TASKMAN_NEW);
   813cc:	2064      	movs	r0, #100	; 0x64
   813ce:	4d11      	ldr	r5, [pc, #68]	; (81414 <main+0x60>)
   813d0:	47a8      	blx	r5
		
	PushTask(Shell,SHELL_NEW, 0, 0);
   813d2:	9400      	str	r4, [sp, #0]
   813d4:	4623      	mov	r3, r4
   813d6:	2264      	movs	r2, #100	; 0x64
   813d8:	490f      	ldr	r1, [pc, #60]	; (81418 <main+0x64>)
   813da:	2066      	movs	r0, #102	; 0x66
   813dc:	47a8      	blx	r5
	PushTask(Menu, MENU_NEW,0 , 0);
   813de:	9400      	str	r4, [sp, #0]
   813e0:	4623      	mov	r3, r4
   813e2:	2264      	movs	r2, #100	; 0x64
   813e4:	490d      	ldr	r1, [pc, #52]	; (8141c <main+0x68>)
   813e6:	2066      	movs	r0, #102	; 0x66
   813e8:	47a8      	blx	r5

	Putstr("\r\n\n\tATMEL ATSAM3U STARTED\r\n\n");
   813ea:	490d      	ldr	r1, [pc, #52]	; (81420 <main+0x6c>)
   813ec:	2067      	movs	r0, #103	; 0x67
   813ee:	4b0d      	ldr	r3, [pc, #52]	; (81424 <main+0x70>)
   813f0:	4798      	blx	r3
	

	//PushTask(Sablier, SABLIER_NEW, 0, 0);
	//PushTask(Prompt, 0, 0, 800);
	
	cpu_irq_enable();
   813f2:	2301      	movs	r3, #1
   813f4:	7033      	strb	r3, [r6, #0]
   813f6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813fa:	b662      	cpsie	i
	
	for(;;)
	{
	

		PopTask();
   813fc:	2567      	movs	r5, #103	; 0x67
   813fe:	4c05      	ldr	r4, [pc, #20]	; (81414 <main+0x60>)
   81400:	4628      	mov	r0, r5
   81402:	47a0      	blx	r4
   81404:	e7fc      	b.n	81400 <main+0x4c>
   81406:	bf00      	nop
   81408:	20070588 	.word	0x20070588
   8140c:	00081429 	.word	0x00081429
   81410:	000814f5 	.word	0x000814f5
   81414:	000810f9 	.word	0x000810f9
   81418:	00080865 	.word	0x00080865
   8141c:	00080395 	.word	0x00080395
   81420:	0008694c 	.word	0x0008694c
   81424:	00080ee1 	.word	0x00080ee1

00081428 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   81428:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8142a:	480e      	ldr	r0, [pc, #56]	; (81464 <sysclk_init+0x3c>)
   8142c:	4b0e      	ldr	r3, [pc, #56]	; (81468 <sysclk_init+0x40>)
   8142e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   81430:	213e      	movs	r1, #62	; 0x3e
   81432:	2000      	movs	r0, #0
   81434:	4b0d      	ldr	r3, [pc, #52]	; (8146c <sysclk_init+0x44>)
   81436:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   81438:	4c0d      	ldr	r4, [pc, #52]	; (81470 <sysclk_init+0x48>)
   8143a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8143c:	2800      	cmp	r0, #0
   8143e:	d0fc      	beq.n	8143a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   81440:	4b0c      	ldr	r3, [pc, #48]	; (81474 <sysclk_init+0x4c>)
   81442:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   81444:	4a0c      	ldr	r2, [pc, #48]	; (81478 <sysclk_init+0x50>)
   81446:	4b0d      	ldr	r3, [pc, #52]	; (8147c <sysclk_init+0x54>)
   81448:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   8144a:	4c0d      	ldr	r4, [pc, #52]	; (81480 <sysclk_init+0x58>)
   8144c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   8144e:	2800      	cmp	r0, #0
   81450:	d0fc      	beq.n	8144c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   81452:	2010      	movs	r0, #16
   81454:	4b0b      	ldr	r3, [pc, #44]	; (81484 <sysclk_init+0x5c>)
   81456:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   81458:	4b0b      	ldr	r3, [pc, #44]	; (81488 <sysclk_init+0x60>)
   8145a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   8145c:	4801      	ldr	r0, [pc, #4]	; (81464 <sysclk_init+0x3c>)
   8145e:	4b02      	ldr	r3, [pc, #8]	; (81468 <sysclk_init+0x40>)
   81460:	4798      	blx	r3
   81462:	bd10      	pop	{r4, pc}
   81464:	0501bd00 	.word	0x0501bd00
   81468:	200700b1 	.word	0x200700b1
   8146c:	00081979 	.word	0x00081979
   81470:	000819cd 	.word	0x000819cd
   81474:	000819dd 	.word	0x000819dd
   81478:	200d3f01 	.word	0x200d3f01
   8147c:	400e0600 	.word	0x400e0600
   81480:	000819ed 	.word	0x000819ed
   81484:	00081915 	.word	0x00081915
   81488:	00081aed 	.word	0x00081aed

0008148c <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   8148c:	4b0b      	ldr	r3, [pc, #44]	; (814bc <cpu_irq_enter_critical+0x30>)
   8148e:	681b      	ldr	r3, [r3, #0]
   81490:	b92b      	cbnz	r3, 8149e <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81492:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   81496:	b13b      	cbz	r3, 814a8 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   81498:	2200      	movs	r2, #0
   8149a:	4b09      	ldr	r3, [pc, #36]	; (814c0 <cpu_irq_enter_critical+0x34>)
   8149c:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   8149e:	4a07      	ldr	r2, [pc, #28]	; (814bc <cpu_irq_enter_critical+0x30>)
   814a0:	6813      	ldr	r3, [r2, #0]
   814a2:	3301      	adds	r3, #1
   814a4:	6013      	str	r3, [r2, #0]
   814a6:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   814a8:	b672      	cpsid	i
   814aa:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   814ae:	2200      	movs	r2, #0
   814b0:	4b04      	ldr	r3, [pc, #16]	; (814c4 <cpu_irq_enter_critical+0x38>)
   814b2:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   814b4:	2201      	movs	r2, #1
   814b6:	4b02      	ldr	r3, [pc, #8]	; (814c0 <cpu_irq_enter_critical+0x34>)
   814b8:	701a      	strb	r2, [r3, #0]
   814ba:	e7f0      	b.n	8149e <cpu_irq_enter_critical+0x12>
   814bc:	20070f60 	.word	0x20070f60
   814c0:	20070f64 	.word	0x20070f64
   814c4:	20070588 	.word	0x20070588

000814c8 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   814c8:	4b07      	ldr	r3, [pc, #28]	; (814e8 <cpu_irq_leave_critical+0x20>)
   814ca:	681a      	ldr	r2, [r3, #0]
   814cc:	3a01      	subs	r2, #1
   814ce:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   814d0:	681b      	ldr	r3, [r3, #0]
   814d2:	b943      	cbnz	r3, 814e6 <cpu_irq_leave_critical+0x1e>
   814d4:	4b05      	ldr	r3, [pc, #20]	; (814ec <cpu_irq_leave_critical+0x24>)
   814d6:	781b      	ldrb	r3, [r3, #0]
   814d8:	b12b      	cbz	r3, 814e6 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   814da:	2201      	movs	r2, #1
   814dc:	4b04      	ldr	r3, [pc, #16]	; (814f0 <cpu_irq_leave_critical+0x28>)
   814de:	701a      	strb	r2, [r3, #0]
   814e0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   814e4:	b662      	cpsie	i
   814e6:	4770      	bx	lr
   814e8:	20070f60 	.word	0x20070f60
   814ec:	20070f64 	.word	0x20070f64
   814f0:	20070588 	.word	0x20070588

000814f4 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   814f4:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   814f6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   814fa:	4b16      	ldr	r3, [pc, #88]	; (81554 <board_init+0x60>)
   814fc:	605a      	str	r2, [r3, #4]
   814fe:	200b      	movs	r0, #11
   81500:	4c15      	ldr	r4, [pc, #84]	; (81558 <board_init+0x64>)
   81502:	47a0      	blx	r4
   81504:	200c      	movs	r0, #12
   81506:	47a0      	blx	r4
   81508:	200d      	movs	r0, #13
   8150a:	47a0      	blx	r4
   8150c:	200e      	movs	r0, #14
   8150e:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   81510:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81514:	203b      	movs	r0, #59	; 0x3b
   81516:	4c11      	ldr	r4, [pc, #68]	; (8155c <board_init+0x68>)
   81518:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8151a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8151e:	2055      	movs	r0, #85	; 0x55
   81520:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   81522:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81526:	2056      	movs	r0, #86	; 0x56
   81528:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   8152a:	490d      	ldr	r1, [pc, #52]	; (81560 <board_init+0x6c>)
   8152c:	2068      	movs	r0, #104	; 0x68
   8152e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   81530:	490c      	ldr	r1, [pc, #48]	; (81564 <board_init+0x70>)
   81532:	205c      	movs	r0, #92	; 0x5c
   81534:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   81536:	4a0c      	ldr	r2, [pc, #48]	; (81568 <board_init+0x74>)
   81538:	f44f 7140 	mov.w	r1, #768	; 0x300
   8153c:	480b      	ldr	r0, [pc, #44]	; (8156c <board_init+0x78>)
   8153e:	4b0c      	ldr	r3, [pc, #48]	; (81570 <board_init+0x7c>)
   81540:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   81542:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81546:	202b      	movs	r0, #43	; 0x2b
   81548:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   8154a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8154e:	202a      	movs	r0, #42	; 0x2a
   81550:	47a0      	blx	r4
   81552:	bd10      	pop	{r4, pc}
   81554:	400e1a50 	.word	0x400e1a50
   81558:	000819fd 	.word	0x000819fd
   8155c:	00081699 	.word	0x00081699
   81560:	28000079 	.word	0x28000079
   81564:	28000001 	.word	0x28000001
   81568:	08000001 	.word	0x08000001
   8156c:	400e0e00 	.word	0x400e0e00
   81570:	00081769 	.word	0x00081769

00081574 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   81574:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   81576:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8157a:	d016      	beq.n	815aa <pio_set_peripheral+0x36>
   8157c:	d80b      	bhi.n	81596 <pio_set_peripheral+0x22>
   8157e:	b149      	cbz	r1, 81594 <pio_set_peripheral+0x20>
   81580:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   81584:	d105      	bne.n	81592 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   81586:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   81588:	6f01      	ldr	r1, [r0, #112]	; 0x70
   8158a:	400b      	ands	r3, r1
   8158c:	ea23 0302 	bic.w	r3, r3, r2
   81590:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   81592:	6042      	str	r2, [r0, #4]
   81594:	4770      	bx	lr
	switch (ul_type) {
   81596:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8159a:	d0fb      	beq.n	81594 <pio_set_peripheral+0x20>
   8159c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   815a0:	d0f8      	beq.n	81594 <pio_set_peripheral+0x20>
   815a2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   815a6:	d1f4      	bne.n	81592 <pio_set_peripheral+0x1e>
   815a8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   815aa:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   815ac:	4313      	orrs	r3, r2
   815ae:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   815b0:	e7ef      	b.n	81592 <pio_set_peripheral+0x1e>

000815b2 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   815b2:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   815b4:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   815b8:	bf14      	ite	ne
   815ba:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   815bc:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   815be:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   815c2:	bf14      	ite	ne
   815c4:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   815c6:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   815c8:	f012 0f02 	tst.w	r2, #2
   815cc:	d107      	bne.n	815de <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   815ce:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   815d2:	bf18      	it	ne
   815d4:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   815d8:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   815da:	6001      	str	r1, [r0, #0]
   815dc:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   815de:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   815e2:	e7f9      	b.n	815d8 <pio_set_input+0x26>

000815e4 <pio_set_output>:
{
   815e4:	b410      	push	{r4}
   815e6:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   815e8:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   815ea:	b944      	cbnz	r4, 815fe <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   815ec:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   815ee:	b143      	cbz	r3, 81602 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   815f0:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   815f2:	b942      	cbnz	r2, 81606 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   815f4:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   815f6:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   815f8:	6001      	str	r1, [r0, #0]
}
   815fa:	bc10      	pop	{r4}
   815fc:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   815fe:	6641      	str	r1, [r0, #100]	; 0x64
   81600:	e7f5      	b.n	815ee <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   81602:	6541      	str	r1, [r0, #84]	; 0x54
   81604:	e7f5      	b.n	815f2 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   81606:	6301      	str	r1, [r0, #48]	; 0x30
   81608:	e7f5      	b.n	815f6 <pio_set_output+0x12>

0008160a <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
   8160a:	f012 0f10 	tst.w	r2, #16
   8160e:	d010      	beq.n	81632 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
   81610:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
   81614:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
   81618:	bf14      	ite	ne
   8161a:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
   8161e:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
   81622:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
   81626:	bf14      	ite	ne
   81628:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
   8162c:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   81630:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
   81632:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   81636:	4770      	bx	lr

00081638 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
   81638:	6401      	str	r1, [r0, #64]	; 0x40
   8163a:	4770      	bx	lr

0008163c <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8163c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8163e:	4770      	bx	lr

00081640 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   81640:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   81642:	4770      	bx	lr

00081644 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81644:	0943      	lsrs	r3, r0, #5
   81646:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8164a:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8164e:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81650:	f000 001f 	and.w	r0, r0, #31
   81654:	2201      	movs	r2, #1
   81656:	fa02 f000 	lsl.w	r0, r2, r0
   8165a:	6318      	str	r0, [r3, #48]	; 0x30
   8165c:	4770      	bx	lr

0008165e <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8165e:	0943      	lsrs	r3, r0, #5
   81660:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81664:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81668:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   8166a:	f000 001f 	and.w	r0, r0, #31
   8166e:	2201      	movs	r2, #1
   81670:	fa02 f000 	lsl.w	r0, r2, r0
   81674:	6358      	str	r0, [r3, #52]	; 0x34
   81676:	4770      	bx	lr

00081678 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81678:	0943      	lsrs	r3, r0, #5
   8167a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8167e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81682:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   81684:	6b99      	ldr	r1, [r3, #56]	; 0x38
   81686:	f000 021f 	and.w	r2, r0, #31
   8168a:	2001      	movs	r0, #1
   8168c:	4090      	lsls	r0, r2
   8168e:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81690:	bf14      	ite	ne
   81692:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81694:	6318      	streq	r0, [r3, #48]	; 0x30
   81696:	4770      	bx	lr

00081698 <pio_configure_pin>:
{
   81698:	b570      	push	{r4, r5, r6, lr}
   8169a:	b082      	sub	sp, #8
   8169c:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8169e:	0943      	lsrs	r3, r0, #5
   816a0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   816a4:	f203 7307 	addw	r3, r3, #1799	; 0x707
   816a8:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   816aa:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   816ae:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   816b2:	d031      	beq.n	81718 <pio_configure_pin+0x80>
   816b4:	d816      	bhi.n	816e4 <pio_configure_pin+0x4c>
   816b6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   816ba:	d01b      	beq.n	816f4 <pio_configure_pin+0x5c>
   816bc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   816c0:	d116      	bne.n	816f0 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   816c2:	f000 001f 	and.w	r0, r0, #31
   816c6:	2601      	movs	r6, #1
   816c8:	4086      	lsls	r6, r0
   816ca:	4632      	mov	r2, r6
   816cc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   816d0:	4620      	mov	r0, r4
   816d2:	4b22      	ldr	r3, [pc, #136]	; (8175c <pio_configure_pin+0xc4>)
   816d4:	4798      	blx	r3
	if (ul_pull_up_enable) {
   816d6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   816da:	bf14      	ite	ne
   816dc:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   816de:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   816e0:	2001      	movs	r0, #1
   816e2:	e017      	b.n	81714 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   816e4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   816e8:	d021      	beq.n	8172e <pio_configure_pin+0x96>
   816ea:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   816ee:	d01e      	beq.n	8172e <pio_configure_pin+0x96>
		return 0;
   816f0:	2000      	movs	r0, #0
   816f2:	e00f      	b.n	81714 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   816f4:	f000 001f 	and.w	r0, r0, #31
   816f8:	2601      	movs	r6, #1
   816fa:	4086      	lsls	r6, r0
   816fc:	4632      	mov	r2, r6
   816fe:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81702:	4620      	mov	r0, r4
   81704:	4b15      	ldr	r3, [pc, #84]	; (8175c <pio_configure_pin+0xc4>)
   81706:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81708:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8170c:	bf14      	ite	ne
   8170e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81710:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81712:	2001      	movs	r0, #1
}
   81714:	b002      	add	sp, #8
   81716:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   81718:	f000 011f 	and.w	r1, r0, #31
   8171c:	2601      	movs	r6, #1
   8171e:	462a      	mov	r2, r5
   81720:	fa06 f101 	lsl.w	r1, r6, r1
   81724:	4620      	mov	r0, r4
   81726:	4b0e      	ldr	r3, [pc, #56]	; (81760 <pio_configure_pin+0xc8>)
   81728:	4798      	blx	r3
	return 1;
   8172a:	4630      	mov	r0, r6
		break;
   8172c:	e7f2      	b.n	81714 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8172e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   81732:	f000 011f 	and.w	r1, r0, #31
   81736:	2601      	movs	r6, #1
   81738:	ea05 0306 	and.w	r3, r5, r6
   8173c:	9300      	str	r3, [sp, #0]
   8173e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   81742:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81746:	bf14      	ite	ne
   81748:	2200      	movne	r2, #0
   8174a:	2201      	moveq	r2, #1
   8174c:	fa06 f101 	lsl.w	r1, r6, r1
   81750:	4620      	mov	r0, r4
   81752:	4c04      	ldr	r4, [pc, #16]	; (81764 <pio_configure_pin+0xcc>)
   81754:	47a0      	blx	r4
	return 1;
   81756:	4630      	mov	r0, r6
		break;
   81758:	e7dc      	b.n	81714 <pio_configure_pin+0x7c>
   8175a:	bf00      	nop
   8175c:	00081575 	.word	0x00081575
   81760:	000815b3 	.word	0x000815b3
   81764:	000815e5 	.word	0x000815e5

00081768 <pio_configure_pin_group>:
{
   81768:	b570      	push	{r4, r5, r6, lr}
   8176a:	b082      	sub	sp, #8
   8176c:	4605      	mov	r5, r0
   8176e:	460e      	mov	r6, r1
   81770:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   81772:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   81776:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8177a:	d027      	beq.n	817cc <pio_configure_pin_group+0x64>
   8177c:	d811      	bhi.n	817a2 <pio_configure_pin_group+0x3a>
   8177e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   81782:	d016      	beq.n	817b2 <pio_configure_pin_group+0x4a>
   81784:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   81788:	d111      	bne.n	817ae <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   8178a:	460a      	mov	r2, r1
   8178c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81790:	4b19      	ldr	r3, [pc, #100]	; (817f8 <pio_configure_pin_group+0x90>)
   81792:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81794:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   81798:	bf14      	ite	ne
   8179a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8179c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8179e:	2001      	movs	r0, #1
   817a0:	e012      	b.n	817c8 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   817a2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   817a6:	d015      	beq.n	817d4 <pio_configure_pin_group+0x6c>
   817a8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   817ac:	d012      	beq.n	817d4 <pio_configure_pin_group+0x6c>
		return 0;
   817ae:	2000      	movs	r0, #0
   817b0:	e00a      	b.n	817c8 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   817b2:	460a      	mov	r2, r1
   817b4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   817b8:	4b0f      	ldr	r3, [pc, #60]	; (817f8 <pio_configure_pin_group+0x90>)
   817ba:	4798      	blx	r3
	if (ul_pull_up_enable) {
   817bc:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   817c0:	bf14      	ite	ne
   817c2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   817c4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   817c6:	2001      	movs	r0, #1
}
   817c8:	b002      	add	sp, #8
   817ca:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   817cc:	4b0b      	ldr	r3, [pc, #44]	; (817fc <pio_configure_pin_group+0x94>)
   817ce:	4798      	blx	r3
	return 1;
   817d0:	2001      	movs	r0, #1
		break;
   817d2:	e7f9      	b.n	817c8 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   817d4:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   817d8:	f004 0301 	and.w	r3, r4, #1
   817dc:	9300      	str	r3, [sp, #0]
   817de:	f3c4 0380 	ubfx	r3, r4, #2, #1
   817e2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   817e6:	bf14      	ite	ne
   817e8:	2200      	movne	r2, #0
   817ea:	2201      	moveq	r2, #1
   817ec:	4631      	mov	r1, r6
   817ee:	4628      	mov	r0, r5
   817f0:	4c03      	ldr	r4, [pc, #12]	; (81800 <pio_configure_pin_group+0x98>)
   817f2:	47a0      	blx	r4
	return 1;
   817f4:	2001      	movs	r0, #1
		break;
   817f6:	e7e7      	b.n	817c8 <pio_configure_pin_group+0x60>
   817f8:	00081575 	.word	0x00081575
   817fc:	000815b3 	.word	0x000815b3
   81800:	000815e5 	.word	0x000815e5

00081804 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   81804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81808:	4604      	mov	r4, r0
   8180a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   8180c:	4b0e      	ldr	r3, [pc, #56]	; (81848 <pio_handler_process+0x44>)
   8180e:	4798      	blx	r3
   81810:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   81812:	4620      	mov	r0, r4
   81814:	4b0d      	ldr	r3, [pc, #52]	; (8184c <pio_handler_process+0x48>)
   81816:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   81818:	4005      	ands	r5, r0
   8181a:	d013      	beq.n	81844 <pio_handler_process+0x40>
   8181c:	4c0c      	ldr	r4, [pc, #48]	; (81850 <pio_handler_process+0x4c>)
   8181e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   81822:	e003      	b.n	8182c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   81824:	42b4      	cmp	r4, r6
   81826:	d00d      	beq.n	81844 <pio_handler_process+0x40>
   81828:	3410      	adds	r4, #16
		while (status != 0) {
   8182a:	b15d      	cbz	r5, 81844 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   8182c:	6820      	ldr	r0, [r4, #0]
   8182e:	4540      	cmp	r0, r8
   81830:	d1f8      	bne.n	81824 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81832:	6861      	ldr	r1, [r4, #4]
   81834:	4229      	tst	r1, r5
   81836:	d0f5      	beq.n	81824 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81838:	68e3      	ldr	r3, [r4, #12]
   8183a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8183c:	6863      	ldr	r3, [r4, #4]
   8183e:	ea25 0503 	bic.w	r5, r5, r3
   81842:	e7ef      	b.n	81824 <pio_handler_process+0x20>
   81844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81848:	0008163d 	.word	0x0008163d
   8184c:	00081641 	.word	0x00081641
   81850:	20070f68 	.word	0x20070f68

00081854 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   81854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   81856:	4c18      	ldr	r4, [pc, #96]	; (818b8 <pio_handler_set+0x64>)
   81858:	6826      	ldr	r6, [r4, #0]
   8185a:	2e06      	cmp	r6, #6
   8185c:	d829      	bhi.n	818b2 <pio_handler_set+0x5e>
   8185e:	f04f 0c00 	mov.w	ip, #0
   81862:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   81864:	4f15      	ldr	r7, [pc, #84]	; (818bc <pio_handler_set+0x68>)
   81866:	e004      	b.n	81872 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
   81868:	3401      	adds	r4, #1
   8186a:	b2e4      	uxtb	r4, r4
   8186c:	46a4      	mov	ip, r4
   8186e:	42a6      	cmp	r6, r4
   81870:	d309      	bcc.n	81886 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
   81872:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   81874:	0125      	lsls	r5, r4, #4
   81876:	597d      	ldr	r5, [r7, r5]
   81878:	428d      	cmp	r5, r1
   8187a:	d1f5      	bne.n	81868 <pio_handler_set+0x14>
   8187c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   81880:	686d      	ldr	r5, [r5, #4]
   81882:	4295      	cmp	r5, r2
   81884:	d1f0      	bne.n	81868 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
   81886:	4d0d      	ldr	r5, [pc, #52]	; (818bc <pio_handler_set+0x68>)
   81888:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   8188c:	eb05 040e 	add.w	r4, r5, lr
   81890:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
   81894:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
   81896:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
   81898:	9906      	ldr	r1, [sp, #24]
   8189a:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
   8189c:	3601      	adds	r6, #1
   8189e:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
   818a0:	bf04      	itt	eq
   818a2:	4905      	ldreq	r1, [pc, #20]	; (818b8 <pio_handler_set+0x64>)
   818a4:	600e      	streq	r6, [r1, #0]
   818a6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   818a8:	461a      	mov	r2, r3
   818aa:	4b05      	ldr	r3, [pc, #20]	; (818c0 <pio_handler_set+0x6c>)
   818ac:	4798      	blx	r3

	return 0;
   818ae:	2000      	movs	r0, #0
   818b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
   818b2:	2001      	movs	r0, #1
}
   818b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   818b6:	bf00      	nop
   818b8:	20070fd8 	.word	0x20070fd8
   818bc:	20070f68 	.word	0x20070f68
   818c0:	0008160b 	.word	0x0008160b

000818c4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   818c4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   818c6:	210b      	movs	r1, #11
   818c8:	4801      	ldr	r0, [pc, #4]	; (818d0 <PIOA_Handler+0xc>)
   818ca:	4b02      	ldr	r3, [pc, #8]	; (818d4 <PIOA_Handler+0x10>)
   818cc:	4798      	blx	r3
   818ce:	bd08      	pop	{r3, pc}
   818d0:	400e0e00 	.word	0x400e0e00
   818d4:	00081805 	.word	0x00081805

000818d8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   818d8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   818da:	210c      	movs	r1, #12
   818dc:	4801      	ldr	r0, [pc, #4]	; (818e4 <PIOB_Handler+0xc>)
   818de:	4b02      	ldr	r3, [pc, #8]	; (818e8 <PIOB_Handler+0x10>)
   818e0:	4798      	blx	r3
   818e2:	bd08      	pop	{r3, pc}
   818e4:	400e1000 	.word	0x400e1000
   818e8:	00081805 	.word	0x00081805

000818ec <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   818ec:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   818ee:	210d      	movs	r1, #13
   818f0:	4801      	ldr	r0, [pc, #4]	; (818f8 <PIOC_Handler+0xc>)
   818f2:	4b02      	ldr	r3, [pc, #8]	; (818fc <PIOC_Handler+0x10>)
   818f4:	4798      	blx	r3
   818f6:	bd08      	pop	{r3, pc}
   818f8:	400e1200 	.word	0x400e1200
   818fc:	00081805 	.word	0x00081805

00081900 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   81900:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   81902:	210e      	movs	r1, #14
   81904:	4801      	ldr	r0, [pc, #4]	; (8190c <PIOD_Handler+0xc>)
   81906:	4b02      	ldr	r3, [pc, #8]	; (81910 <PIOD_Handler+0x10>)
   81908:	4798      	blx	r3
   8190a:	bd08      	pop	{r3, pc}
   8190c:	400e1400 	.word	0x400e1400
   81910:	00081805 	.word	0x00081805

00081914 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   81914:	4a17      	ldr	r2, [pc, #92]	; (81974 <pmc_switch_mck_to_pllack+0x60>)
   81916:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81918:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   8191c:	4318      	orrs	r0, r3
   8191e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81920:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81922:	f013 0f08 	tst.w	r3, #8
   81926:	d10a      	bne.n	8193e <pmc_switch_mck_to_pllack+0x2a>
   81928:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8192c:	4911      	ldr	r1, [pc, #68]	; (81974 <pmc_switch_mck_to_pllack+0x60>)
   8192e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81930:	f012 0f08 	tst.w	r2, #8
   81934:	d103      	bne.n	8193e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81936:	3b01      	subs	r3, #1
   81938:	d1f9      	bne.n	8192e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   8193a:	2001      	movs	r0, #1
   8193c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   8193e:	4a0d      	ldr	r2, [pc, #52]	; (81974 <pmc_switch_mck_to_pllack+0x60>)
   81940:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81942:	f023 0303 	bic.w	r3, r3, #3
   81946:	f043 0302 	orr.w	r3, r3, #2
   8194a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8194c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8194e:	f013 0f08 	tst.w	r3, #8
   81952:	d10a      	bne.n	8196a <pmc_switch_mck_to_pllack+0x56>
   81954:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81958:	4906      	ldr	r1, [pc, #24]	; (81974 <pmc_switch_mck_to_pllack+0x60>)
   8195a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8195c:	f012 0f08 	tst.w	r2, #8
   81960:	d105      	bne.n	8196e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81962:	3b01      	subs	r3, #1
   81964:	d1f9      	bne.n	8195a <pmc_switch_mck_to_pllack+0x46>
			return 1;
   81966:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81968:	4770      	bx	lr
	return 0;
   8196a:	2000      	movs	r0, #0
   8196c:	4770      	bx	lr
   8196e:	2000      	movs	r0, #0
   81970:	4770      	bx	lr
   81972:	bf00      	nop
   81974:	400e0600 	.word	0x400e0600

00081978 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81978:	b9c8      	cbnz	r0, 819ae <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8197a:	4a11      	ldr	r2, [pc, #68]	; (819c0 <pmc_switch_mainck_to_xtal+0x48>)
   8197c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   8197e:	0209      	lsls	r1, r1, #8
   81980:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81982:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   81986:	f023 0303 	bic.w	r3, r3, #3
   8198a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8198e:	f043 0301 	orr.w	r3, r3, #1
   81992:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81994:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   81996:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81998:	f013 0f01 	tst.w	r3, #1
   8199c:	d0fb      	beq.n	81996 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8199e:	4a08      	ldr	r2, [pc, #32]	; (819c0 <pmc_switch_mainck_to_xtal+0x48>)
   819a0:	6a13      	ldr	r3, [r2, #32]
   819a2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   819a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   819aa:	6213      	str	r3, [r2, #32]
   819ac:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   819ae:	4904      	ldr	r1, [pc, #16]	; (819c0 <pmc_switch_mainck_to_xtal+0x48>)
   819b0:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   819b2:	4a04      	ldr	r2, [pc, #16]	; (819c4 <pmc_switch_mainck_to_xtal+0x4c>)
   819b4:	401a      	ands	r2, r3
   819b6:	4b04      	ldr	r3, [pc, #16]	; (819c8 <pmc_switch_mainck_to_xtal+0x50>)
   819b8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   819ba:	620b      	str	r3, [r1, #32]
   819bc:	4770      	bx	lr
   819be:	bf00      	nop
   819c0:	400e0600 	.word	0x400e0600
   819c4:	fec8fffc 	.word	0xfec8fffc
   819c8:	01370002 	.word	0x01370002

000819cc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   819cc:	4b02      	ldr	r3, [pc, #8]	; (819d8 <pmc_osc_is_ready_mainck+0xc>)
   819ce:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   819d0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   819d4:	4770      	bx	lr
   819d6:	bf00      	nop
   819d8:	400e0600 	.word	0x400e0600

000819dc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   819dc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   819e0:	4b01      	ldr	r3, [pc, #4]	; (819e8 <pmc_disable_pllack+0xc>)
   819e2:	629a      	str	r2, [r3, #40]	; 0x28
   819e4:	4770      	bx	lr
   819e6:	bf00      	nop
   819e8:	400e0600 	.word	0x400e0600

000819ec <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   819ec:	4b02      	ldr	r3, [pc, #8]	; (819f8 <pmc_is_locked_pllack+0xc>)
   819ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   819f0:	f000 0002 	and.w	r0, r0, #2
   819f4:	4770      	bx	lr
   819f6:	bf00      	nop
   819f8:	400e0600 	.word	0x400e0600

000819fc <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   819fc:	282c      	cmp	r0, #44	; 0x2c
   819fe:	d81e      	bhi.n	81a3e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   81a00:	281f      	cmp	r0, #31
   81a02:	d80c      	bhi.n	81a1e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81a04:	4b11      	ldr	r3, [pc, #68]	; (81a4c <pmc_enable_periph_clk+0x50>)
   81a06:	699a      	ldr	r2, [r3, #24]
   81a08:	2301      	movs	r3, #1
   81a0a:	4083      	lsls	r3, r0
   81a0c:	4393      	bics	r3, r2
   81a0e:	d018      	beq.n	81a42 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   81a10:	2301      	movs	r3, #1
   81a12:	fa03 f000 	lsl.w	r0, r3, r0
   81a16:	4b0d      	ldr	r3, [pc, #52]	; (81a4c <pmc_enable_periph_clk+0x50>)
   81a18:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   81a1a:	2000      	movs	r0, #0
   81a1c:	4770      	bx	lr
		ul_id -= 32;
   81a1e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   81a20:	4b0a      	ldr	r3, [pc, #40]	; (81a4c <pmc_enable_periph_clk+0x50>)
   81a22:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   81a26:	2301      	movs	r3, #1
   81a28:	4083      	lsls	r3, r0
   81a2a:	4393      	bics	r3, r2
   81a2c:	d00b      	beq.n	81a46 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   81a2e:	2301      	movs	r3, #1
   81a30:	fa03 f000 	lsl.w	r0, r3, r0
   81a34:	4b05      	ldr	r3, [pc, #20]	; (81a4c <pmc_enable_periph_clk+0x50>)
   81a36:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   81a3a:	2000      	movs	r0, #0
   81a3c:	4770      	bx	lr
		return 1;
   81a3e:	2001      	movs	r0, #1
   81a40:	4770      	bx	lr
	return 0;
   81a42:	2000      	movs	r0, #0
   81a44:	4770      	bx	lr
   81a46:	2000      	movs	r0, #0
}
   81a48:	4770      	bx	lr
   81a4a:	bf00      	nop
   81a4c:	400e0600 	.word	0x400e0600

00081a50 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81a50:	e7fe      	b.n	81a50 <Dummy_Handler>
	...

00081a54 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   81a54:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   81a56:	4b1c      	ldr	r3, [pc, #112]	; (81ac8 <Reset_Handler+0x74>)
   81a58:	4a1c      	ldr	r2, [pc, #112]	; (81acc <Reset_Handler+0x78>)
   81a5a:	429a      	cmp	r2, r3
   81a5c:	d010      	beq.n	81a80 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   81a5e:	4b1c      	ldr	r3, [pc, #112]	; (81ad0 <Reset_Handler+0x7c>)
   81a60:	4a19      	ldr	r2, [pc, #100]	; (81ac8 <Reset_Handler+0x74>)
   81a62:	429a      	cmp	r2, r3
   81a64:	d20c      	bcs.n	81a80 <Reset_Handler+0x2c>
   81a66:	3b01      	subs	r3, #1
   81a68:	1a9b      	subs	r3, r3, r2
   81a6a:	f023 0303 	bic.w	r3, r3, #3
   81a6e:	3304      	adds	r3, #4
   81a70:	4413      	add	r3, r2
   81a72:	4916      	ldr	r1, [pc, #88]	; (81acc <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   81a74:	f851 0b04 	ldr.w	r0, [r1], #4
   81a78:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   81a7c:	429a      	cmp	r2, r3
   81a7e:	d1f9      	bne.n	81a74 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81a80:	4b14      	ldr	r3, [pc, #80]	; (81ad4 <Reset_Handler+0x80>)
   81a82:	4a15      	ldr	r2, [pc, #84]	; (81ad8 <Reset_Handler+0x84>)
   81a84:	429a      	cmp	r2, r3
   81a86:	d20a      	bcs.n	81a9e <Reset_Handler+0x4a>
   81a88:	3b01      	subs	r3, #1
   81a8a:	1a9b      	subs	r3, r3, r2
   81a8c:	f023 0303 	bic.w	r3, r3, #3
   81a90:	3304      	adds	r3, #4
   81a92:	4413      	add	r3, r2
		*pDest++ = 0;
   81a94:	2100      	movs	r1, #0
   81a96:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   81a9a:	4293      	cmp	r3, r2
   81a9c:	d1fb      	bne.n	81a96 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81a9e:	4b0f      	ldr	r3, [pc, #60]	; (81adc <Reset_Handler+0x88>)
   81aa0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   81aa4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81aa8:	490d      	ldr	r1, [pc, #52]	; (81ae0 <Reset_Handler+0x8c>)
   81aaa:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   81aac:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81ab0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   81ab4:	d203      	bcs.n	81abe <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   81ab6:	688b      	ldr	r3, [r1, #8]
   81ab8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81abc:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81abe:	4b09      	ldr	r3, [pc, #36]	; (81ae4 <Reset_Handler+0x90>)
   81ac0:	4798      	blx	r3

	/* Branch to main function */
	main();
   81ac2:	4b09      	ldr	r3, [pc, #36]	; (81ae8 <Reset_Handler+0x94>)
   81ac4:	4798      	blx	r3
   81ac6:	e7fe      	b.n	81ac6 <Reset_Handler+0x72>
   81ac8:	20070000 	.word	0x20070000
   81acc:	00086c24 	.word	0x00086c24
   81ad0:	20070f40 	.word	0x20070f40
   81ad4:	20071508 	.word	0x20071508
   81ad8:	20070f40 	.word	0x20070f40
   81adc:	00080000 	.word	0x00080000
   81ae0:	e000ed00 	.word	0xe000ed00
   81ae4:	00081c45 	.word	0x00081c45
   81ae8:	000813b5 	.word	0x000813b5

00081aec <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81aec:	4b3d      	ldr	r3, [pc, #244]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81aee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81af0:	f003 0303 	and.w	r3, r3, #3
   81af4:	2b03      	cmp	r3, #3
   81af6:	d80e      	bhi.n	81b16 <SystemCoreClockUpdate+0x2a>
   81af8:	e8df f003 	tbb	[pc, r3]
   81afc:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   81b00:	4b39      	ldr	r3, [pc, #228]	; (81be8 <SystemCoreClockUpdate+0xfc>)
   81b02:	695b      	ldr	r3, [r3, #20]
   81b04:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   81b08:	bf14      	ite	ne
   81b0a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   81b0e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   81b12:	4b36      	ldr	r3, [pc, #216]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b14:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   81b16:	4b33      	ldr	r3, [pc, #204]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81b1a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81b1e:	2b70      	cmp	r3, #112	; 0x70
   81b20:	d057      	beq.n	81bd2 <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81b22:	4b30      	ldr	r3, [pc, #192]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81b26:	4931      	ldr	r1, [pc, #196]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b28:	f3c2 1202 	ubfx	r2, r2, #4, #3
   81b2c:	680b      	ldr	r3, [r1, #0]
   81b2e:	40d3      	lsrs	r3, r2
   81b30:	600b      	str	r3, [r1, #0]
   81b32:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81b34:	4b2b      	ldr	r3, [pc, #172]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b36:	6a1b      	ldr	r3, [r3, #32]
   81b38:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81b3c:	d003      	beq.n	81b46 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81b3e:	4a2c      	ldr	r2, [pc, #176]	; (81bf0 <SystemCoreClockUpdate+0x104>)
   81b40:	4b2a      	ldr	r3, [pc, #168]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b42:	601a      	str	r2, [r3, #0]
   81b44:	e7e7      	b.n	81b16 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81b46:	4a2b      	ldr	r2, [pc, #172]	; (81bf4 <SystemCoreClockUpdate+0x108>)
   81b48:	4b28      	ldr	r3, [pc, #160]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b4a:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81b4c:	4b25      	ldr	r3, [pc, #148]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b4e:	6a1b      	ldr	r3, [r3, #32]
   81b50:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81b54:	2b10      	cmp	r3, #16
   81b56:	d005      	beq.n	81b64 <SystemCoreClockUpdate+0x78>
   81b58:	2b20      	cmp	r3, #32
   81b5a:	d1dc      	bne.n	81b16 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   81b5c:	4a24      	ldr	r2, [pc, #144]	; (81bf0 <SystemCoreClockUpdate+0x104>)
   81b5e:	4b23      	ldr	r3, [pc, #140]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b60:	601a      	str	r2, [r3, #0]
				break;
   81b62:	e7d8      	b.n	81b16 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   81b64:	4a24      	ldr	r2, [pc, #144]	; (81bf8 <SystemCoreClockUpdate+0x10c>)
   81b66:	4b21      	ldr	r3, [pc, #132]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b68:	601a      	str	r2, [r3, #0]
				break;
   81b6a:	e7d4      	b.n	81b16 <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81b6c:	4b1d      	ldr	r3, [pc, #116]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b6e:	6a1b      	ldr	r3, [r3, #32]
   81b70:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81b74:	d00c      	beq.n	81b90 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81b76:	4a1e      	ldr	r2, [pc, #120]	; (81bf0 <SystemCoreClockUpdate+0x104>)
   81b78:	4b1c      	ldr	r3, [pc, #112]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b7a:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   81b7c:	4b19      	ldr	r3, [pc, #100]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81b80:	f003 0303 	and.w	r3, r3, #3
   81b84:	2b02      	cmp	r3, #2
   81b86:	d016      	beq.n	81bb6 <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   81b88:	4a1c      	ldr	r2, [pc, #112]	; (81bfc <SystemCoreClockUpdate+0x110>)
   81b8a:	4b18      	ldr	r3, [pc, #96]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b8c:	601a      	str	r2, [r3, #0]
   81b8e:	e7c2      	b.n	81b16 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81b90:	4a18      	ldr	r2, [pc, #96]	; (81bf4 <SystemCoreClockUpdate+0x108>)
   81b92:	4b16      	ldr	r3, [pc, #88]	; (81bec <SystemCoreClockUpdate+0x100>)
   81b94:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81b96:	4b13      	ldr	r3, [pc, #76]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81b98:	6a1b      	ldr	r3, [r3, #32]
   81b9a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81b9e:	2b10      	cmp	r3, #16
   81ba0:	d005      	beq.n	81bae <SystemCoreClockUpdate+0xc2>
   81ba2:	2b20      	cmp	r3, #32
   81ba4:	d1ea      	bne.n	81b7c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   81ba6:	4a12      	ldr	r2, [pc, #72]	; (81bf0 <SystemCoreClockUpdate+0x104>)
   81ba8:	4b10      	ldr	r3, [pc, #64]	; (81bec <SystemCoreClockUpdate+0x100>)
   81baa:	601a      	str	r2, [r3, #0]
				break;
   81bac:	e7e6      	b.n	81b7c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   81bae:	4a12      	ldr	r2, [pc, #72]	; (81bf8 <SystemCoreClockUpdate+0x10c>)
   81bb0:	4b0e      	ldr	r3, [pc, #56]	; (81bec <SystemCoreClockUpdate+0x100>)
   81bb2:	601a      	str	r2, [r3, #0]
				break;
   81bb4:	e7e2      	b.n	81b7c <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81bb6:	4a0b      	ldr	r2, [pc, #44]	; (81be4 <SystemCoreClockUpdate+0xf8>)
   81bb8:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81bba:	6a92      	ldr	r2, [r2, #40]	; 0x28
   81bbc:	480b      	ldr	r0, [pc, #44]	; (81bec <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81bbe:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81bc2:	6803      	ldr	r3, [r0, #0]
   81bc4:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81bc8:	b2d2      	uxtb	r2, r2
   81bca:	fbb3 f3f2 	udiv	r3, r3, r2
   81bce:	6003      	str	r3, [r0, #0]
   81bd0:	e7a1      	b.n	81b16 <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81bd2:	4a06      	ldr	r2, [pc, #24]	; (81bec <SystemCoreClockUpdate+0x100>)
   81bd4:	6813      	ldr	r3, [r2, #0]
   81bd6:	490a      	ldr	r1, [pc, #40]	; (81c00 <SystemCoreClockUpdate+0x114>)
   81bd8:	fba1 1303 	umull	r1, r3, r1, r3
   81bdc:	085b      	lsrs	r3, r3, #1
   81bde:	6013      	str	r3, [r2, #0]
   81be0:	4770      	bx	lr
   81be2:	bf00      	nop
   81be4:	400e0600 	.word	0x400e0600
   81be8:	400e1a10 	.word	0x400e1a10
   81bec:	2007058c 	.word	0x2007058c
   81bf0:	00b71b00 	.word	0x00b71b00
   81bf4:	003d0900 	.word	0x003d0900
   81bf8:	007a1200 	.word	0x007a1200
   81bfc:	0e4e1c00 	.word	0x0e4e1c00
   81c00:	aaaaaaab 	.word	0xaaaaaaab

00081c04 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81c04:	4b0a      	ldr	r3, [pc, #40]	; (81c30 <_sbrk+0x2c>)
   81c06:	681b      	ldr	r3, [r3, #0]
   81c08:	b153      	cbz	r3, 81c20 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   81c0a:	4b09      	ldr	r3, [pc, #36]	; (81c30 <_sbrk+0x2c>)
   81c0c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81c0e:	181a      	adds	r2, r3, r0
   81c10:	4908      	ldr	r1, [pc, #32]	; (81c34 <_sbrk+0x30>)
   81c12:	4291      	cmp	r1, r2
   81c14:	db08      	blt.n	81c28 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   81c16:	4610      	mov	r0, r2
   81c18:	4a05      	ldr	r2, [pc, #20]	; (81c30 <_sbrk+0x2c>)
   81c1a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81c1c:	4618      	mov	r0, r3
   81c1e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   81c20:	4a05      	ldr	r2, [pc, #20]	; (81c38 <_sbrk+0x34>)
   81c22:	4b03      	ldr	r3, [pc, #12]	; (81c30 <_sbrk+0x2c>)
   81c24:	601a      	str	r2, [r3, #0]
   81c26:	e7f0      	b.n	81c0a <_sbrk+0x6>
		return (caddr_t) -1;	
   81c28:	f04f 30ff 	mov.w	r0, #4294967295
}
   81c2c:	4770      	bx	lr
   81c2e:	bf00      	nop
   81c30:	20070fdc 	.word	0x20070fdc
   81c34:	20087ffc 	.word	0x20087ffc
   81c38:	20073508 	.word	0x20073508

00081c3c <atoi>:
   81c3c:	220a      	movs	r2, #10
   81c3e:	2100      	movs	r1, #0
   81c40:	f000 b998 	b.w	81f74 <strtol>

00081c44 <__libc_init_array>:
   81c44:	b570      	push	{r4, r5, r6, lr}
   81c46:	4e0f      	ldr	r6, [pc, #60]	; (81c84 <__libc_init_array+0x40>)
   81c48:	4d0f      	ldr	r5, [pc, #60]	; (81c88 <__libc_init_array+0x44>)
   81c4a:	1b76      	subs	r6, r6, r5
   81c4c:	10b6      	asrs	r6, r6, #2
   81c4e:	bf18      	it	ne
   81c50:	2400      	movne	r4, #0
   81c52:	d005      	beq.n	81c60 <__libc_init_array+0x1c>
   81c54:	3401      	adds	r4, #1
   81c56:	f855 3b04 	ldr.w	r3, [r5], #4
   81c5a:	4798      	blx	r3
   81c5c:	42a6      	cmp	r6, r4
   81c5e:	d1f9      	bne.n	81c54 <__libc_init_array+0x10>
   81c60:	4e0a      	ldr	r6, [pc, #40]	; (81c8c <__libc_init_array+0x48>)
   81c62:	4d0b      	ldr	r5, [pc, #44]	; (81c90 <__libc_init_array+0x4c>)
   81c64:	f004 ffc8 	bl	86bf8 <_init>
   81c68:	1b76      	subs	r6, r6, r5
   81c6a:	10b6      	asrs	r6, r6, #2
   81c6c:	bf18      	it	ne
   81c6e:	2400      	movne	r4, #0
   81c70:	d006      	beq.n	81c80 <__libc_init_array+0x3c>
   81c72:	3401      	adds	r4, #1
   81c74:	f855 3b04 	ldr.w	r3, [r5], #4
   81c78:	4798      	blx	r3
   81c7a:	42a6      	cmp	r6, r4
   81c7c:	d1f9      	bne.n	81c72 <__libc_init_array+0x2e>
   81c7e:	bd70      	pop	{r4, r5, r6, pc}
   81c80:	bd70      	pop	{r4, r5, r6, pc}
   81c82:	bf00      	nop
   81c84:	00086c04 	.word	0x00086c04
   81c88:	00086c04 	.word	0x00086c04
   81c8c:	00086c0c 	.word	0x00086c0c
   81c90:	00086c04 	.word	0x00086c04

00081c94 <memset>:
   81c94:	b470      	push	{r4, r5, r6}
   81c96:	0786      	lsls	r6, r0, #30
   81c98:	d046      	beq.n	81d28 <memset+0x94>
   81c9a:	1e54      	subs	r4, r2, #1
   81c9c:	2a00      	cmp	r2, #0
   81c9e:	d041      	beq.n	81d24 <memset+0x90>
   81ca0:	b2ca      	uxtb	r2, r1
   81ca2:	4603      	mov	r3, r0
   81ca4:	e002      	b.n	81cac <memset+0x18>
   81ca6:	f114 34ff 	adds.w	r4, r4, #4294967295
   81caa:	d33b      	bcc.n	81d24 <memset+0x90>
   81cac:	f803 2b01 	strb.w	r2, [r3], #1
   81cb0:	079d      	lsls	r5, r3, #30
   81cb2:	d1f8      	bne.n	81ca6 <memset+0x12>
   81cb4:	2c03      	cmp	r4, #3
   81cb6:	d92e      	bls.n	81d16 <memset+0x82>
   81cb8:	b2cd      	uxtb	r5, r1
   81cba:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81cbe:	2c0f      	cmp	r4, #15
   81cc0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81cc4:	d919      	bls.n	81cfa <memset+0x66>
   81cc6:	4626      	mov	r6, r4
   81cc8:	f103 0210 	add.w	r2, r3, #16
   81ccc:	3e10      	subs	r6, #16
   81cce:	2e0f      	cmp	r6, #15
   81cd0:	f842 5c10 	str.w	r5, [r2, #-16]
   81cd4:	f842 5c0c 	str.w	r5, [r2, #-12]
   81cd8:	f842 5c08 	str.w	r5, [r2, #-8]
   81cdc:	f842 5c04 	str.w	r5, [r2, #-4]
   81ce0:	f102 0210 	add.w	r2, r2, #16
   81ce4:	d8f2      	bhi.n	81ccc <memset+0x38>
   81ce6:	f1a4 0210 	sub.w	r2, r4, #16
   81cea:	f022 020f 	bic.w	r2, r2, #15
   81cee:	f004 040f 	and.w	r4, r4, #15
   81cf2:	3210      	adds	r2, #16
   81cf4:	2c03      	cmp	r4, #3
   81cf6:	4413      	add	r3, r2
   81cf8:	d90d      	bls.n	81d16 <memset+0x82>
   81cfa:	461e      	mov	r6, r3
   81cfc:	4622      	mov	r2, r4
   81cfe:	3a04      	subs	r2, #4
   81d00:	2a03      	cmp	r2, #3
   81d02:	f846 5b04 	str.w	r5, [r6], #4
   81d06:	d8fa      	bhi.n	81cfe <memset+0x6a>
   81d08:	1f22      	subs	r2, r4, #4
   81d0a:	f022 0203 	bic.w	r2, r2, #3
   81d0e:	3204      	adds	r2, #4
   81d10:	4413      	add	r3, r2
   81d12:	f004 0403 	and.w	r4, r4, #3
   81d16:	b12c      	cbz	r4, 81d24 <memset+0x90>
   81d18:	b2c9      	uxtb	r1, r1
   81d1a:	441c      	add	r4, r3
   81d1c:	f803 1b01 	strb.w	r1, [r3], #1
   81d20:	429c      	cmp	r4, r3
   81d22:	d1fb      	bne.n	81d1c <memset+0x88>
   81d24:	bc70      	pop	{r4, r5, r6}
   81d26:	4770      	bx	lr
   81d28:	4614      	mov	r4, r2
   81d2a:	4603      	mov	r3, r0
   81d2c:	e7c2      	b.n	81cb4 <memset+0x20>
   81d2e:	bf00      	nop

00081d30 <sprintf>:
   81d30:	b40e      	push	{r1, r2, r3}
   81d32:	4601      	mov	r1, r0
   81d34:	b5f0      	push	{r4, r5, r6, r7, lr}
   81d36:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81d3a:	f44f 7702 	mov.w	r7, #520	; 0x208
   81d3e:	f64f 76ff 	movw	r6, #65535	; 0xffff
   81d42:	b09c      	sub	sp, #112	; 0x70
   81d44:	ac21      	add	r4, sp, #132	; 0x84
   81d46:	f854 2b04 	ldr.w	r2, [r4], #4
   81d4a:	4b0b      	ldr	r3, [pc, #44]	; (81d78 <sprintf+0x48>)
   81d4c:	9102      	str	r1, [sp, #8]
   81d4e:	9106      	str	r1, [sp, #24]
   81d50:	6818      	ldr	r0, [r3, #0]
   81d52:	a902      	add	r1, sp, #8
   81d54:	4623      	mov	r3, r4
   81d56:	9401      	str	r4, [sp, #4]
   81d58:	f8ad 7014 	strh.w	r7, [sp, #20]
   81d5c:	9504      	str	r5, [sp, #16]
   81d5e:	9507      	str	r5, [sp, #28]
   81d60:	f8ad 6016 	strh.w	r6, [sp, #22]
   81d64:	f000 f91c 	bl	81fa0 <_svfprintf_r>
   81d68:	2200      	movs	r2, #0
   81d6a:	9b02      	ldr	r3, [sp, #8]
   81d6c:	701a      	strb	r2, [r3, #0]
   81d6e:	b01c      	add	sp, #112	; 0x70
   81d70:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81d74:	b003      	add	sp, #12
   81d76:	4770      	bx	lr
   81d78:	20070590 	.word	0x20070590

00081d7c <strlen>:
   81d7c:	f020 0103 	bic.w	r1, r0, #3
   81d80:	f010 0003 	ands.w	r0, r0, #3
   81d84:	f1c0 0000 	rsb	r0, r0, #0
   81d88:	f851 3b04 	ldr.w	r3, [r1], #4
   81d8c:	f100 0c04 	add.w	ip, r0, #4
   81d90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81d94:	f06f 0200 	mvn.w	r2, #0
   81d98:	bf1c      	itt	ne
   81d9a:	fa22 f20c 	lsrne.w	r2, r2, ip
   81d9e:	4313      	orrne	r3, r2
   81da0:	f04f 0c01 	mov.w	ip, #1
   81da4:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81da8:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81dac:	eba3 020c 	sub.w	r2, r3, ip
   81db0:	ea22 0203 	bic.w	r2, r2, r3
   81db4:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81db8:	bf04      	itt	eq
   81dba:	f851 3b04 	ldreq.w	r3, [r1], #4
   81dbe:	3004      	addeq	r0, #4
   81dc0:	d0f4      	beq.n	81dac <strlen+0x30>
   81dc2:	f1c2 0100 	rsb	r1, r2, #0
   81dc6:	ea02 0201 	and.w	r2, r2, r1
   81dca:	fab2 f282 	clz	r2, r2
   81dce:	f1c2 021f 	rsb	r2, r2, #31
   81dd2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81dd6:	4770      	bx	lr

00081dd8 <strtok>:
   81dd8:	4a02      	ldr	r2, [pc, #8]	; (81de4 <strtok+0xc>)
   81dda:	2301      	movs	r3, #1
   81ddc:	6812      	ldr	r2, [r2, #0]
   81dde:	325c      	adds	r2, #92	; 0x5c
   81de0:	f000 b802 	b.w	81de8 <__strtok_r>
   81de4:	20070590 	.word	0x20070590

00081de8 <__strtok_r>:
   81de8:	b4f0      	push	{r4, r5, r6, r7}
   81dea:	b318      	cbz	r0, 81e34 <__strtok_r+0x4c>
   81dec:	4607      	mov	r7, r0
   81dee:	460d      	mov	r5, r1
   81df0:	f817 6b01 	ldrb.w	r6, [r7], #1
   81df4:	e001      	b.n	81dfa <__strtok_r+0x12>
   81df6:	42a6      	cmp	r6, r4
   81df8:	d017      	beq.n	81e2a <__strtok_r+0x42>
   81dfa:	f815 4b01 	ldrb.w	r4, [r5], #1
   81dfe:	2c00      	cmp	r4, #0
   81e00:	d1f9      	bne.n	81df6 <__strtok_r+0xe>
   81e02:	b1e6      	cbz	r6, 81e3e <__strtok_r+0x56>
   81e04:	460c      	mov	r4, r1
   81e06:	f817 5b01 	ldrb.w	r5, [r7], #1
   81e0a:	e001      	b.n	81e10 <__strtok_r+0x28>
   81e0c:	2b00      	cmp	r3, #0
   81e0e:	d0f9      	beq.n	81e04 <__strtok_r+0x1c>
   81e10:	f814 3b01 	ldrb.w	r3, [r4], #1
   81e14:	429d      	cmp	r5, r3
   81e16:	d1f9      	bne.n	81e0c <__strtok_r+0x24>
   81e18:	b155      	cbz	r5, 81e30 <__strtok_r+0x48>
   81e1a:	2300      	movs	r3, #0
   81e1c:	f807 3c01 	strb.w	r3, [r7, #-1]
   81e20:	4606      	mov	r6, r0
   81e22:	6017      	str	r7, [r2, #0]
   81e24:	4630      	mov	r0, r6
   81e26:	bcf0      	pop	{r4, r5, r6, r7}
   81e28:	4770      	bx	lr
   81e2a:	b153      	cbz	r3, 81e42 <__strtok_r+0x5a>
   81e2c:	4638      	mov	r0, r7
   81e2e:	e7dd      	b.n	81dec <__strtok_r+0x4>
   81e30:	462f      	mov	r7, r5
   81e32:	e7f5      	b.n	81e20 <__strtok_r+0x38>
   81e34:	6810      	ldr	r0, [r2, #0]
   81e36:	2800      	cmp	r0, #0
   81e38:	d1d8      	bne.n	81dec <__strtok_r+0x4>
   81e3a:	4606      	mov	r6, r0
   81e3c:	e7f2      	b.n	81e24 <__strtok_r+0x3c>
   81e3e:	6016      	str	r6, [r2, #0]
   81e40:	e7f0      	b.n	81e24 <__strtok_r+0x3c>
   81e42:	6017      	str	r7, [r2, #0]
   81e44:	4606      	mov	r6, r0
   81e46:	7003      	strb	r3, [r0, #0]
   81e48:	e7ec      	b.n	81e24 <__strtok_r+0x3c>
   81e4a:	bf00      	nop

00081e4c <_strtol_l.isra.0>:
   81e4c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81e50:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81e54:	460f      	mov	r7, r1
   81e56:	4680      	mov	r8, r0
   81e58:	4616      	mov	r6, r2
   81e5a:	461d      	mov	r5, r3
   81e5c:	468a      	mov	sl, r1
   81e5e:	e000      	b.n	81e62 <_strtol_l.isra.0+0x16>
   81e60:	46a2      	mov	sl, r4
   81e62:	4654      	mov	r4, sl
   81e64:	4648      	mov	r0, r9
   81e66:	f814 bb01 	ldrb.w	fp, [r4], #1
   81e6a:	f002 faf9 	bl	84460 <__locale_ctype_ptr_l>
   81e6e:	4458      	add	r0, fp
   81e70:	7842      	ldrb	r2, [r0, #1]
   81e72:	f012 0208 	ands.w	r2, r2, #8
   81e76:	d1f3      	bne.n	81e60 <_strtol_l.isra.0+0x14>
   81e78:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   81e7c:	d04f      	beq.n	81f1e <_strtol_l.isra.0+0xd2>
   81e7e:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   81e82:	bf04      	itt	eq
   81e84:	f894 b000 	ldrbeq.w	fp, [r4]
   81e88:	f10a 0402 	addeq.w	r4, sl, #2
   81e8c:	b11d      	cbz	r5, 81e96 <_strtol_l.isra.0+0x4a>
   81e8e:	2d10      	cmp	r5, #16
   81e90:	d056      	beq.n	81f40 <_strtol_l.isra.0+0xf4>
   81e92:	46ac      	mov	ip, r5
   81e94:	e004      	b.n	81ea0 <_strtol_l.isra.0+0x54>
   81e96:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81e9a:	d060      	beq.n	81f5e <_strtol_l.isra.0+0x112>
   81e9c:	250a      	movs	r5, #10
   81e9e:	46ac      	mov	ip, r5
   81ea0:	2a00      	cmp	r2, #0
   81ea2:	bf0c      	ite	eq
   81ea4:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   81ea8:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   81eac:	2100      	movs	r1, #0
   81eae:	fbb9 fefc 	udiv	lr, r9, ip
   81eb2:	4608      	mov	r0, r1
   81eb4:	fb0c 9a1e 	mls	sl, ip, lr, r9
   81eb8:	e005      	b.n	81ec6 <_strtol_l.isra.0+0x7a>
   81eba:	d029      	beq.n	81f10 <_strtol_l.isra.0+0xc4>
   81ebc:	2101      	movs	r1, #1
   81ebe:	fb0c 3000 	mla	r0, ip, r0, r3
   81ec2:	f814 bb01 	ldrb.w	fp, [r4], #1
   81ec6:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   81eca:	2b09      	cmp	r3, #9
   81ecc:	d905      	bls.n	81eda <_strtol_l.isra.0+0x8e>
   81ece:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   81ed2:	2b19      	cmp	r3, #25
   81ed4:	d80b      	bhi.n	81eee <_strtol_l.isra.0+0xa2>
   81ed6:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   81eda:	429d      	cmp	r5, r3
   81edc:	dd0f      	ble.n	81efe <_strtol_l.isra.0+0xb2>
   81ede:	f1b1 3fff 	cmp.w	r1, #4294967295
   81ee2:	d0ee      	beq.n	81ec2 <_strtol_l.isra.0+0x76>
   81ee4:	4586      	cmp	lr, r0
   81ee6:	d2e8      	bcs.n	81eba <_strtol_l.isra.0+0x6e>
   81ee8:	f04f 31ff 	mov.w	r1, #4294967295
   81eec:	e7e9      	b.n	81ec2 <_strtol_l.isra.0+0x76>
   81eee:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   81ef2:	2b19      	cmp	r3, #25
   81ef4:	d803      	bhi.n	81efe <_strtol_l.isra.0+0xb2>
   81ef6:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   81efa:	429d      	cmp	r5, r3
   81efc:	dcef      	bgt.n	81ede <_strtol_l.isra.0+0x92>
   81efe:	1c4b      	adds	r3, r1, #1
   81f00:	d013      	beq.n	81f2a <_strtol_l.isra.0+0xde>
   81f02:	b102      	cbz	r2, 81f06 <_strtol_l.isra.0+0xba>
   81f04:	4240      	negs	r0, r0
   81f06:	b146      	cbz	r6, 81f1a <_strtol_l.isra.0+0xce>
   81f08:	b9c1      	cbnz	r1, 81f3c <_strtol_l.isra.0+0xf0>
   81f0a:	6037      	str	r7, [r6, #0]
   81f0c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81f10:	459a      	cmp	sl, r3
   81f12:	dad3      	bge.n	81ebc <_strtol_l.isra.0+0x70>
   81f14:	f04f 31ff 	mov.w	r1, #4294967295
   81f18:	e7d3      	b.n	81ec2 <_strtol_l.isra.0+0x76>
   81f1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81f1e:	f894 b000 	ldrb.w	fp, [r4]
   81f22:	2201      	movs	r2, #1
   81f24:	f10a 0402 	add.w	r4, sl, #2
   81f28:	e7b0      	b.n	81e8c <_strtol_l.isra.0+0x40>
   81f2a:	2322      	movs	r3, #34	; 0x22
   81f2c:	f8c8 3000 	str.w	r3, [r8]
   81f30:	b1ee      	cbz	r6, 81f6e <_strtol_l.isra.0+0x122>
   81f32:	1e67      	subs	r7, r4, #1
   81f34:	4648      	mov	r0, r9
   81f36:	6037      	str	r7, [r6, #0]
   81f38:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81f3c:	4681      	mov	r9, r0
   81f3e:	e7f8      	b.n	81f32 <_strtol_l.isra.0+0xe6>
   81f40:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81f44:	d1a5      	bne.n	81e92 <_strtol_l.isra.0+0x46>
   81f46:	7823      	ldrb	r3, [r4, #0]
   81f48:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81f4c:	2b58      	cmp	r3, #88	; 0x58
   81f4e:	d1a0      	bne.n	81e92 <_strtol_l.isra.0+0x46>
   81f50:	f04f 0c10 	mov.w	ip, #16
   81f54:	f894 b001 	ldrb.w	fp, [r4, #1]
   81f58:	4665      	mov	r5, ip
   81f5a:	3402      	adds	r4, #2
   81f5c:	e7a0      	b.n	81ea0 <_strtol_l.isra.0+0x54>
   81f5e:	7823      	ldrb	r3, [r4, #0]
   81f60:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81f64:	2b58      	cmp	r3, #88	; 0x58
   81f66:	d0f3      	beq.n	81f50 <_strtol_l.isra.0+0x104>
   81f68:	2508      	movs	r5, #8
   81f6a:	46ac      	mov	ip, r5
   81f6c:	e798      	b.n	81ea0 <_strtol_l.isra.0+0x54>
   81f6e:	4648      	mov	r0, r9
   81f70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00081f74 <strtol>:
   81f74:	4b08      	ldr	r3, [pc, #32]	; (81f98 <strtol+0x24>)
   81f76:	b570      	push	{r4, r5, r6, lr}
   81f78:	681d      	ldr	r5, [r3, #0]
   81f7a:	4e08      	ldr	r6, [pc, #32]	; (81f9c <strtol+0x28>)
   81f7c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   81f7e:	b082      	sub	sp, #8
   81f80:	2c00      	cmp	r4, #0
   81f82:	bf08      	it	eq
   81f84:	4634      	moveq	r4, r6
   81f86:	4613      	mov	r3, r2
   81f88:	9400      	str	r4, [sp, #0]
   81f8a:	460a      	mov	r2, r1
   81f8c:	4601      	mov	r1, r0
   81f8e:	4628      	mov	r0, r5
   81f90:	f7ff ff5c 	bl	81e4c <_strtol_l.isra.0>
   81f94:	b002      	add	sp, #8
   81f96:	bd70      	pop	{r4, r5, r6, pc}
   81f98:	20070590 	.word	0x20070590
   81f9c:	200709c4 	.word	0x200709c4

00081fa0 <_svfprintf_r>:
   81fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81fa4:	b0c3      	sub	sp, #268	; 0x10c
   81fa6:	460c      	mov	r4, r1
   81fa8:	910b      	str	r1, [sp, #44]	; 0x2c
   81faa:	4692      	mov	sl, r2
   81fac:	930f      	str	r3, [sp, #60]	; 0x3c
   81fae:	900c      	str	r0, [sp, #48]	; 0x30
   81fb0:	f002 fa5a 	bl	84468 <_localeconv_r>
   81fb4:	6803      	ldr	r3, [r0, #0]
   81fb6:	4618      	mov	r0, r3
   81fb8:	931a      	str	r3, [sp, #104]	; 0x68
   81fba:	f7ff fedf 	bl	81d7c <strlen>
   81fbe:	89a3      	ldrh	r3, [r4, #12]
   81fc0:	9019      	str	r0, [sp, #100]	; 0x64
   81fc2:	0619      	lsls	r1, r3, #24
   81fc4:	d503      	bpl.n	81fce <_svfprintf_r+0x2e>
   81fc6:	6923      	ldr	r3, [r4, #16]
   81fc8:	2b00      	cmp	r3, #0
   81fca:	f001 8035 	beq.w	83038 <_svfprintf_r+0x1098>
   81fce:	2300      	movs	r3, #0
   81fd0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81fd4:	46c8      	mov	r8, r9
   81fd6:	9315      	str	r3, [sp, #84]	; 0x54
   81fd8:	9313      	str	r3, [sp, #76]	; 0x4c
   81fda:	9314      	str	r3, [sp, #80]	; 0x50
   81fdc:	9318      	str	r3, [sp, #96]	; 0x60
   81fde:	931b      	str	r3, [sp, #108]	; 0x6c
   81fe0:	9309      	str	r3, [sp, #36]	; 0x24
   81fe2:	9316      	str	r3, [sp, #88]	; 0x58
   81fe4:	9317      	str	r3, [sp, #92]	; 0x5c
   81fe6:	9327      	str	r3, [sp, #156]	; 0x9c
   81fe8:	9326      	str	r3, [sp, #152]	; 0x98
   81fea:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81fee:	f89a 3000 	ldrb.w	r3, [sl]
   81ff2:	4654      	mov	r4, sl
   81ff4:	b1eb      	cbz	r3, 82032 <_svfprintf_r+0x92>
   81ff6:	2b25      	cmp	r3, #37	; 0x25
   81ff8:	d102      	bne.n	82000 <_svfprintf_r+0x60>
   81ffa:	e01a      	b.n	82032 <_svfprintf_r+0x92>
   81ffc:	2b25      	cmp	r3, #37	; 0x25
   81ffe:	d003      	beq.n	82008 <_svfprintf_r+0x68>
   82000:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   82004:	2b00      	cmp	r3, #0
   82006:	d1f9      	bne.n	81ffc <_svfprintf_r+0x5c>
   82008:	eba4 050a 	sub.w	r5, r4, sl
   8200c:	b18d      	cbz	r5, 82032 <_svfprintf_r+0x92>
   8200e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82010:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82012:	3301      	adds	r3, #1
   82014:	442a      	add	r2, r5
   82016:	2b07      	cmp	r3, #7
   82018:	f8c8 a000 	str.w	sl, [r8]
   8201c:	f8c8 5004 	str.w	r5, [r8, #4]
   82020:	9227      	str	r2, [sp, #156]	; 0x9c
   82022:	9326      	str	r3, [sp, #152]	; 0x98
   82024:	f300 808a 	bgt.w	8213c <_svfprintf_r+0x19c>
   82028:	f108 0808 	add.w	r8, r8, #8
   8202c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8202e:	442b      	add	r3, r5
   82030:	9309      	str	r3, [sp, #36]	; 0x24
   82032:	7823      	ldrb	r3, [r4, #0]
   82034:	2b00      	cmp	r3, #0
   82036:	f000 8089 	beq.w	8214c <_svfprintf_r+0x1ac>
   8203a:	2300      	movs	r3, #0
   8203c:	f04f 30ff 	mov.w	r0, #4294967295
   82040:	461a      	mov	r2, r3
   82042:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82046:	4619      	mov	r1, r3
   82048:	930d      	str	r3, [sp, #52]	; 0x34
   8204a:	469b      	mov	fp, r3
   8204c:	7863      	ldrb	r3, [r4, #1]
   8204e:	f104 0a01 	add.w	sl, r4, #1
   82052:	900a      	str	r0, [sp, #40]	; 0x28
   82054:	f10a 0a01 	add.w	sl, sl, #1
   82058:	f1a3 0020 	sub.w	r0, r3, #32
   8205c:	2858      	cmp	r0, #88	; 0x58
   8205e:	f200 83b7 	bhi.w	827d0 <_svfprintf_r+0x830>
   82062:	e8df f010 	tbh	[pc, r0, lsl #1]
   82066:	034c      	.short	0x034c
   82068:	03b503b5 	.word	0x03b503b5
   8206c:	03b50354 	.word	0x03b50354
   82070:	03b503b5 	.word	0x03b503b5
   82074:	03b503b5 	.word	0x03b503b5
   82078:	005903b5 	.word	0x005903b5
   8207c:	03b50359 	.word	0x03b50359
   82080:	02140066 	.word	0x02140066
   82084:	022f03b5 	.word	0x022f03b5
   82088:	03a503a5 	.word	0x03a503a5
   8208c:	03a503a5 	.word	0x03a503a5
   82090:	03a503a5 	.word	0x03a503a5
   82094:	03a503a5 	.word	0x03a503a5
   82098:	03b503a5 	.word	0x03b503a5
   8209c:	03b503b5 	.word	0x03b503b5
   820a0:	03b503b5 	.word	0x03b503b5
   820a4:	03b503b5 	.word	0x03b503b5
   820a8:	03b503b5 	.word	0x03b503b5
   820ac:	028b03b5 	.word	0x028b03b5
   820b0:	03b502d3 	.word	0x03b502d3
   820b4:	03b502d3 	.word	0x03b502d3
   820b8:	03b503b5 	.word	0x03b503b5
   820bc:	031b03b5 	.word	0x031b03b5
   820c0:	03b503b5 	.word	0x03b503b5
   820c4:	03b50320 	.word	0x03b50320
   820c8:	03b503b5 	.word	0x03b503b5
   820cc:	03b503b5 	.word	0x03b503b5
   820d0:	03b50234 	.word	0x03b50234
   820d4:	024b03b5 	.word	0x024b03b5
   820d8:	03b503b5 	.word	0x03b503b5
   820dc:	03b503b5 	.word	0x03b503b5
   820e0:	03b503b5 	.word	0x03b503b5
   820e4:	03b503b5 	.word	0x03b503b5
   820e8:	03b503b5 	.word	0x03b503b5
   820ec:	039e0276 	.word	0x039e0276
   820f0:	02d302d3 	.word	0x02d302d3
   820f4:	036302d3 	.word	0x036302d3
   820f8:	03b5039e 	.word	0x03b5039e
   820fc:	036803b5 	.word	0x036803b5
   82100:	037503b5 	.word	0x037503b5
   82104:	038c01dd 	.word	0x038c01dd
   82108:	03b5035e 	.word	0x03b5035e
   8210c:	03b501f2 	.word	0x03b501f2
   82110:	03b50087 	.word	0x03b50087
   82114:	033203b5 	.word	0x033203b5
   82118:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8211a:	6823      	ldr	r3, [r4, #0]
   8211c:	4618      	mov	r0, r3
   8211e:	930d      	str	r3, [sp, #52]	; 0x34
   82120:	4623      	mov	r3, r4
   82122:	2800      	cmp	r0, #0
   82124:	f103 0304 	add.w	r3, r3, #4
   82128:	930f      	str	r3, [sp, #60]	; 0x3c
   8212a:	da04      	bge.n	82136 <_svfprintf_r+0x196>
   8212c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8212e:	425b      	negs	r3, r3
   82130:	930d      	str	r3, [sp, #52]	; 0x34
   82132:	f04b 0b04 	orr.w	fp, fp, #4
   82136:	f89a 3000 	ldrb.w	r3, [sl]
   8213a:	e78b      	b.n	82054 <_svfprintf_r+0xb4>
   8213c:	aa25      	add	r2, sp, #148	; 0x94
   8213e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82140:	980c      	ldr	r0, [sp, #48]	; 0x30
   82142:	f003 f831 	bl	851a8 <__ssprint_r>
   82146:	b940      	cbnz	r0, 8215a <_svfprintf_r+0x1ba>
   82148:	46c8      	mov	r8, r9
   8214a:	e76f      	b.n	8202c <_svfprintf_r+0x8c>
   8214c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8214e:	b123      	cbz	r3, 8215a <_svfprintf_r+0x1ba>
   82150:	980c      	ldr	r0, [sp, #48]	; 0x30
   82152:	aa25      	add	r2, sp, #148	; 0x94
   82154:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82156:	f003 f827 	bl	851a8 <__ssprint_r>
   8215a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8215c:	899b      	ldrh	r3, [r3, #12]
   8215e:	f013 0f40 	tst.w	r3, #64	; 0x40
   82162:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82164:	bf18      	it	ne
   82166:	f04f 33ff 	movne.w	r3, #4294967295
   8216a:	9309      	str	r3, [sp, #36]	; 0x24
   8216c:	9809      	ldr	r0, [sp, #36]	; 0x24
   8216e:	b043      	add	sp, #268	; 0x10c
   82170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82174:	f01b 0f20 	tst.w	fp, #32
   82178:	9311      	str	r3, [sp, #68]	; 0x44
   8217a:	f040 81af 	bne.w	824dc <_svfprintf_r+0x53c>
   8217e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82180:	f01b 0f10 	tst.w	fp, #16
   82184:	4613      	mov	r3, r2
   82186:	f040 859a 	bne.w	82cbe <_svfprintf_r+0xd1e>
   8218a:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8218e:	f000 8596 	beq.w	82cbe <_svfprintf_r+0xd1e>
   82192:	2500      	movs	r5, #0
   82194:	2301      	movs	r3, #1
   82196:	8814      	ldrh	r4, [r2, #0]
   82198:	3204      	adds	r2, #4
   8219a:	920f      	str	r2, [sp, #60]	; 0x3c
   8219c:	2200      	movs	r2, #0
   8219e:	4617      	mov	r7, r2
   821a0:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   821a4:	990a      	ldr	r1, [sp, #40]	; 0x28
   821a6:	1c4a      	adds	r2, r1, #1
   821a8:	f000 8210 	beq.w	825cc <_svfprintf_r+0x62c>
   821ac:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   821b0:	9207      	str	r2, [sp, #28]
   821b2:	ea54 0205 	orrs.w	r2, r4, r5
   821b6:	f040 820f 	bne.w	825d8 <_svfprintf_r+0x638>
   821ba:	2900      	cmp	r1, #0
   821bc:	f040 8431 	bne.w	82a22 <_svfprintf_r+0xa82>
   821c0:	2b00      	cmp	r3, #0
   821c2:	f040 8539 	bne.w	82c38 <_svfprintf_r+0xc98>
   821c6:	f01b 0301 	ands.w	r3, fp, #1
   821ca:	930e      	str	r3, [sp, #56]	; 0x38
   821cc:	f000 8662 	beq.w	82e94 <_svfprintf_r+0xef4>
   821d0:	2330      	movs	r3, #48	; 0x30
   821d2:	ae42      	add	r6, sp, #264	; 0x108
   821d4:	f806 3d41 	strb.w	r3, [r6, #-65]!
   821d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   821da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   821dc:	4293      	cmp	r3, r2
   821de:	bfb8      	it	lt
   821e0:	4613      	movlt	r3, r2
   821e2:	9308      	str	r3, [sp, #32]
   821e4:	2300      	movs	r3, #0
   821e6:	9312      	str	r3, [sp, #72]	; 0x48
   821e8:	b117      	cbz	r7, 821f0 <_svfprintf_r+0x250>
   821ea:	9b08      	ldr	r3, [sp, #32]
   821ec:	3301      	adds	r3, #1
   821ee:	9308      	str	r3, [sp, #32]
   821f0:	9b07      	ldr	r3, [sp, #28]
   821f2:	f013 0302 	ands.w	r3, r3, #2
   821f6:	9310      	str	r3, [sp, #64]	; 0x40
   821f8:	d002      	beq.n	82200 <_svfprintf_r+0x260>
   821fa:	9b08      	ldr	r3, [sp, #32]
   821fc:	3302      	adds	r3, #2
   821fe:	9308      	str	r3, [sp, #32]
   82200:	9b07      	ldr	r3, [sp, #28]
   82202:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   82206:	f040 8310 	bne.w	8282a <_svfprintf_r+0x88a>
   8220a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8220c:	9a08      	ldr	r2, [sp, #32]
   8220e:	eba3 0b02 	sub.w	fp, r3, r2
   82212:	f1bb 0f00 	cmp.w	fp, #0
   82216:	f340 8308 	ble.w	8282a <_svfprintf_r+0x88a>
   8221a:	f1bb 0f10 	cmp.w	fp, #16
   8221e:	f340 87b2 	ble.w	83186 <_svfprintf_r+0x11e6>
   82222:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82224:	4643      	mov	r3, r8
   82226:	4621      	mov	r1, r4
   82228:	46a8      	mov	r8, r5
   8222a:	2710      	movs	r7, #16
   8222c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8222e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82230:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82232:	e006      	b.n	82242 <_svfprintf_r+0x2a2>
   82234:	f1ab 0b10 	sub.w	fp, fp, #16
   82238:	f1bb 0f10 	cmp.w	fp, #16
   8223c:	f103 0308 	add.w	r3, r3, #8
   82240:	dd18      	ble.n	82274 <_svfprintf_r+0x2d4>
   82242:	3201      	adds	r2, #1
   82244:	48ab      	ldr	r0, [pc, #684]	; (824f4 <_svfprintf_r+0x554>)
   82246:	3110      	adds	r1, #16
   82248:	2a07      	cmp	r2, #7
   8224a:	9127      	str	r1, [sp, #156]	; 0x9c
   8224c:	9226      	str	r2, [sp, #152]	; 0x98
   8224e:	e883 0081 	stmia.w	r3, {r0, r7}
   82252:	ddef      	ble.n	82234 <_svfprintf_r+0x294>
   82254:	aa25      	add	r2, sp, #148	; 0x94
   82256:	4629      	mov	r1, r5
   82258:	4620      	mov	r0, r4
   8225a:	f002 ffa5 	bl	851a8 <__ssprint_r>
   8225e:	2800      	cmp	r0, #0
   82260:	f47f af7b 	bne.w	8215a <_svfprintf_r+0x1ba>
   82264:	f1ab 0b10 	sub.w	fp, fp, #16
   82268:	f1bb 0f10 	cmp.w	fp, #16
   8226c:	464b      	mov	r3, r9
   8226e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82270:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82272:	dce6      	bgt.n	82242 <_svfprintf_r+0x2a2>
   82274:	4645      	mov	r5, r8
   82276:	460c      	mov	r4, r1
   82278:	4698      	mov	r8, r3
   8227a:	3201      	adds	r2, #1
   8227c:	4b9d      	ldr	r3, [pc, #628]	; (824f4 <_svfprintf_r+0x554>)
   8227e:	445c      	add	r4, fp
   82280:	2a07      	cmp	r2, #7
   82282:	9427      	str	r4, [sp, #156]	; 0x9c
   82284:	9226      	str	r2, [sp, #152]	; 0x98
   82286:	e888 0808 	stmia.w	r8, {r3, fp}
   8228a:	f300 82c3 	bgt.w	82814 <_svfprintf_r+0x874>
   8228e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82292:	f108 0808 	add.w	r8, r8, #8
   82296:	b187      	cbz	r7, 822ba <_svfprintf_r+0x31a>
   82298:	2101      	movs	r1, #1
   8229a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8229c:	440c      	add	r4, r1
   8229e:	440b      	add	r3, r1
   822a0:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   822a4:	2b07      	cmp	r3, #7
   822a6:	9427      	str	r4, [sp, #156]	; 0x9c
   822a8:	9326      	str	r3, [sp, #152]	; 0x98
   822aa:	f8c8 1004 	str.w	r1, [r8, #4]
   822ae:	f8c8 2000 	str.w	r2, [r8]
   822b2:	f300 83cd 	bgt.w	82a50 <_svfprintf_r+0xab0>
   822b6:	f108 0808 	add.w	r8, r8, #8
   822ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
   822bc:	b17b      	cbz	r3, 822de <_svfprintf_r+0x33e>
   822be:	2102      	movs	r1, #2
   822c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   822c2:	440c      	add	r4, r1
   822c4:	3301      	adds	r3, #1
   822c6:	aa1e      	add	r2, sp, #120	; 0x78
   822c8:	2b07      	cmp	r3, #7
   822ca:	9427      	str	r4, [sp, #156]	; 0x9c
   822cc:	9326      	str	r3, [sp, #152]	; 0x98
   822ce:	f8c8 1004 	str.w	r1, [r8, #4]
   822d2:	f8c8 2000 	str.w	r2, [r8]
   822d6:	f300 8411 	bgt.w	82afc <_svfprintf_r+0xb5c>
   822da:	f108 0808 	add.w	r8, r8, #8
   822de:	2d80      	cmp	r5, #128	; 0x80
   822e0:	f000 8304 	beq.w	828ec <_svfprintf_r+0x94c>
   822e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   822e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   822e8:	1a9f      	subs	r7, r3, r2
   822ea:	2f00      	cmp	r7, #0
   822ec:	dd37      	ble.n	8235e <_svfprintf_r+0x3be>
   822ee:	2f10      	cmp	r7, #16
   822f0:	f340 8679 	ble.w	82fe6 <_svfprintf_r+0x1046>
   822f4:	4d80      	ldr	r5, [pc, #512]	; (824f8 <_svfprintf_r+0x558>)
   822f6:	4642      	mov	r2, r8
   822f8:	4621      	mov	r1, r4
   822fa:	46b0      	mov	r8, r6
   822fc:	f04f 0b10 	mov.w	fp, #16
   82300:	462e      	mov	r6, r5
   82302:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82304:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82306:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82308:	e004      	b.n	82314 <_svfprintf_r+0x374>
   8230a:	3f10      	subs	r7, #16
   8230c:	2f10      	cmp	r7, #16
   8230e:	f102 0208 	add.w	r2, r2, #8
   82312:	dd15      	ble.n	82340 <_svfprintf_r+0x3a0>
   82314:	3301      	adds	r3, #1
   82316:	3110      	adds	r1, #16
   82318:	2b07      	cmp	r3, #7
   8231a:	9127      	str	r1, [sp, #156]	; 0x9c
   8231c:	9326      	str	r3, [sp, #152]	; 0x98
   8231e:	e882 0840 	stmia.w	r2, {r6, fp}
   82322:	ddf2      	ble.n	8230a <_svfprintf_r+0x36a>
   82324:	aa25      	add	r2, sp, #148	; 0x94
   82326:	4629      	mov	r1, r5
   82328:	4620      	mov	r0, r4
   8232a:	f002 ff3d 	bl	851a8 <__ssprint_r>
   8232e:	2800      	cmp	r0, #0
   82330:	f47f af13 	bne.w	8215a <_svfprintf_r+0x1ba>
   82334:	3f10      	subs	r7, #16
   82336:	2f10      	cmp	r7, #16
   82338:	464a      	mov	r2, r9
   8233a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   8233c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8233e:	dce9      	bgt.n	82314 <_svfprintf_r+0x374>
   82340:	4635      	mov	r5, r6
   82342:	460c      	mov	r4, r1
   82344:	4646      	mov	r6, r8
   82346:	4690      	mov	r8, r2
   82348:	3301      	adds	r3, #1
   8234a:	443c      	add	r4, r7
   8234c:	2b07      	cmp	r3, #7
   8234e:	9427      	str	r4, [sp, #156]	; 0x9c
   82350:	9326      	str	r3, [sp, #152]	; 0x98
   82352:	e888 00a0 	stmia.w	r8, {r5, r7}
   82356:	f300 8370 	bgt.w	82a3a <_svfprintf_r+0xa9a>
   8235a:	f108 0808 	add.w	r8, r8, #8
   8235e:	9b07      	ldr	r3, [sp, #28]
   82360:	05df      	lsls	r7, r3, #23
   82362:	f100 8264 	bmi.w	8282e <_svfprintf_r+0x88e>
   82366:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82368:	990e      	ldr	r1, [sp, #56]	; 0x38
   8236a:	3301      	adds	r3, #1
   8236c:	440c      	add	r4, r1
   8236e:	2b07      	cmp	r3, #7
   82370:	9427      	str	r4, [sp, #156]	; 0x9c
   82372:	f8c8 6000 	str.w	r6, [r8]
   82376:	f8c8 1004 	str.w	r1, [r8, #4]
   8237a:	9326      	str	r3, [sp, #152]	; 0x98
   8237c:	f300 83b3 	bgt.w	82ae6 <_svfprintf_r+0xb46>
   82380:	f108 0808 	add.w	r8, r8, #8
   82384:	9b07      	ldr	r3, [sp, #28]
   82386:	075b      	lsls	r3, r3, #29
   82388:	d53b      	bpl.n	82402 <_svfprintf_r+0x462>
   8238a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8238c:	9a08      	ldr	r2, [sp, #32]
   8238e:	1a9d      	subs	r5, r3, r2
   82390:	2d00      	cmp	r5, #0
   82392:	dd36      	ble.n	82402 <_svfprintf_r+0x462>
   82394:	2d10      	cmp	r5, #16
   82396:	f340 8721 	ble.w	831dc <_svfprintf_r+0x123c>
   8239a:	2610      	movs	r6, #16
   8239c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8239e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   823a0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   823a4:	e004      	b.n	823b0 <_svfprintf_r+0x410>
   823a6:	3d10      	subs	r5, #16
   823a8:	2d10      	cmp	r5, #16
   823aa:	f108 0808 	add.w	r8, r8, #8
   823ae:	dd16      	ble.n	823de <_svfprintf_r+0x43e>
   823b0:	3301      	adds	r3, #1
   823b2:	4a50      	ldr	r2, [pc, #320]	; (824f4 <_svfprintf_r+0x554>)
   823b4:	3410      	adds	r4, #16
   823b6:	2b07      	cmp	r3, #7
   823b8:	9427      	str	r4, [sp, #156]	; 0x9c
   823ba:	9326      	str	r3, [sp, #152]	; 0x98
   823bc:	e888 0044 	stmia.w	r8, {r2, r6}
   823c0:	ddf1      	ble.n	823a6 <_svfprintf_r+0x406>
   823c2:	aa25      	add	r2, sp, #148	; 0x94
   823c4:	4659      	mov	r1, fp
   823c6:	4638      	mov	r0, r7
   823c8:	f002 feee 	bl	851a8 <__ssprint_r>
   823cc:	2800      	cmp	r0, #0
   823ce:	f47f aec4 	bne.w	8215a <_svfprintf_r+0x1ba>
   823d2:	3d10      	subs	r5, #16
   823d4:	2d10      	cmp	r5, #16
   823d6:	46c8      	mov	r8, r9
   823d8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823da:	9b26      	ldr	r3, [sp, #152]	; 0x98
   823dc:	dce8      	bgt.n	823b0 <_svfprintf_r+0x410>
   823de:	3301      	adds	r3, #1
   823e0:	4a44      	ldr	r2, [pc, #272]	; (824f4 <_svfprintf_r+0x554>)
   823e2:	442c      	add	r4, r5
   823e4:	2b07      	cmp	r3, #7
   823e6:	9427      	str	r4, [sp, #156]	; 0x9c
   823e8:	9326      	str	r3, [sp, #152]	; 0x98
   823ea:	e888 0024 	stmia.w	r8, {r2, r5}
   823ee:	dd08      	ble.n	82402 <_svfprintf_r+0x462>
   823f0:	aa25      	add	r2, sp, #148	; 0x94
   823f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823f4:	980c      	ldr	r0, [sp, #48]	; 0x30
   823f6:	f002 fed7 	bl	851a8 <__ssprint_r>
   823fa:	2800      	cmp	r0, #0
   823fc:	f47f aead 	bne.w	8215a <_svfprintf_r+0x1ba>
   82400:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82402:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82404:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82406:	9908      	ldr	r1, [sp, #32]
   82408:	428a      	cmp	r2, r1
   8240a:	bfac      	ite	ge
   8240c:	189b      	addge	r3, r3, r2
   8240e:	185b      	addlt	r3, r3, r1
   82410:	9309      	str	r3, [sp, #36]	; 0x24
   82412:	2c00      	cmp	r4, #0
   82414:	f040 82fb 	bne.w	82a0e <_svfprintf_r+0xa6e>
   82418:	2300      	movs	r3, #0
   8241a:	46c8      	mov	r8, r9
   8241c:	9326      	str	r3, [sp, #152]	; 0x98
   8241e:	e5e6      	b.n	81fee <_svfprintf_r+0x4e>
   82420:	9311      	str	r3, [sp, #68]	; 0x44
   82422:	f01b 0320 	ands.w	r3, fp, #32
   82426:	f040 8145 	bne.w	826b4 <_svfprintf_r+0x714>
   8242a:	f01b 0210 	ands.w	r2, fp, #16
   8242e:	f040 8466 	bne.w	82cfe <_svfprintf_r+0xd5e>
   82432:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   82436:	f000 8462 	beq.w	82cfe <_svfprintf_r+0xd5e>
   8243a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8243c:	4613      	mov	r3, r2
   8243e:	460a      	mov	r2, r1
   82440:	3204      	adds	r2, #4
   82442:	880c      	ldrh	r4, [r1, #0]
   82444:	2500      	movs	r5, #0
   82446:	920f      	str	r2, [sp, #60]	; 0x3c
   82448:	e6a8      	b.n	8219c <_svfprintf_r+0x1fc>
   8244a:	2500      	movs	r5, #0
   8244c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8244e:	9311      	str	r3, [sp, #68]	; 0x44
   82450:	6816      	ldr	r6, [r2, #0]
   82452:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   82456:	1d14      	adds	r4, r2, #4
   82458:	2e00      	cmp	r6, #0
   8245a:	f000 86cd 	beq.w	831f8 <_svfprintf_r+0x1258>
   8245e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82460:	1c53      	adds	r3, r2, #1
   82462:	f000 861b 	beq.w	8309c <_svfprintf_r+0x10fc>
   82466:	4629      	mov	r1, r5
   82468:	4630      	mov	r0, r6
   8246a:	f002 fac7 	bl	849fc <memchr>
   8246e:	2800      	cmp	r0, #0
   82470:	f000 870d 	beq.w	8328e <_svfprintf_r+0x12ee>
   82474:	1b83      	subs	r3, r0, r6
   82476:	950a      	str	r5, [sp, #40]	; 0x28
   82478:	930e      	str	r3, [sp, #56]	; 0x38
   8247a:	940f      	str	r4, [sp, #60]	; 0x3c
   8247c:	f8cd b01c 	str.w	fp, [sp, #28]
   82480:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82484:	9308      	str	r3, [sp, #32]
   82486:	9512      	str	r5, [sp, #72]	; 0x48
   82488:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8248c:	e6ac      	b.n	821e8 <_svfprintf_r+0x248>
   8248e:	f89a 3000 	ldrb.w	r3, [sl]
   82492:	f10a 0401 	add.w	r4, sl, #1
   82496:	2b2a      	cmp	r3, #42	; 0x2a
   82498:	f000 87c2 	beq.w	83420 <_svfprintf_r+0x1480>
   8249c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   824a0:	2809      	cmp	r0, #9
   824a2:	46a2      	mov	sl, r4
   824a4:	f200 8718 	bhi.w	832d8 <_svfprintf_r+0x1338>
   824a8:	2300      	movs	r3, #0
   824aa:	461c      	mov	r4, r3
   824ac:	f81a 3b01 	ldrb.w	r3, [sl], #1
   824b0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   824b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   824b8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   824bc:	2809      	cmp	r0, #9
   824be:	d9f5      	bls.n	824ac <_svfprintf_r+0x50c>
   824c0:	940a      	str	r4, [sp, #40]	; 0x28
   824c2:	e5c9      	b.n	82058 <_svfprintf_r+0xb8>
   824c4:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   824c8:	f89a 3000 	ldrb.w	r3, [sl]
   824cc:	e5c2      	b.n	82054 <_svfprintf_r+0xb4>
   824ce:	f04b 0b10 	orr.w	fp, fp, #16
   824d2:	f01b 0f20 	tst.w	fp, #32
   824d6:	9311      	str	r3, [sp, #68]	; 0x44
   824d8:	f43f ae51 	beq.w	8217e <_svfprintf_r+0x1de>
   824dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   824de:	3407      	adds	r4, #7
   824e0:	f024 0307 	bic.w	r3, r4, #7
   824e4:	f103 0208 	add.w	r2, r3, #8
   824e8:	e9d3 4500 	ldrd	r4, r5, [r3]
   824ec:	920f      	str	r2, [sp, #60]	; 0x3c
   824ee:	2301      	movs	r3, #1
   824f0:	e654      	b.n	8219c <_svfprintf_r+0x1fc>
   824f2:	bf00      	nop
   824f4:	000869b4 	.word	0x000869b4
   824f8:	000869c4 	.word	0x000869c4
   824fc:	9311      	str	r3, [sp, #68]	; 0x44
   824fe:	2a00      	cmp	r2, #0
   82500:	f040 87ad 	bne.w	8345e <_svfprintf_r+0x14be>
   82504:	4bbe      	ldr	r3, [pc, #760]	; (82800 <_svfprintf_r+0x860>)
   82506:	f01b 0f20 	tst.w	fp, #32
   8250a:	9318      	str	r3, [sp, #96]	; 0x60
   8250c:	f040 80e7 	bne.w	826de <_svfprintf_r+0x73e>
   82510:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82512:	f01b 0f10 	tst.w	fp, #16
   82516:	4613      	mov	r3, r2
   82518:	f040 83d8 	bne.w	82ccc <_svfprintf_r+0xd2c>
   8251c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82520:	f000 83d4 	beq.w	82ccc <_svfprintf_r+0xd2c>
   82524:	2500      	movs	r5, #0
   82526:	3304      	adds	r3, #4
   82528:	8814      	ldrh	r4, [r2, #0]
   8252a:	930f      	str	r3, [sp, #60]	; 0x3c
   8252c:	f01b 0f01 	tst.w	fp, #1
   82530:	f000 80e3 	beq.w	826fa <_svfprintf_r+0x75a>
   82534:	ea54 0305 	orrs.w	r3, r4, r5
   82538:	f000 80df 	beq.w	826fa <_svfprintf_r+0x75a>
   8253c:	2330      	movs	r3, #48	; 0x30
   8253e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82542:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   82546:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   8254a:	f04b 0b02 	orr.w	fp, fp, #2
   8254e:	2302      	movs	r3, #2
   82550:	e624      	b.n	8219c <_svfprintf_r+0x1fc>
   82552:	2201      	movs	r2, #1
   82554:	9311      	str	r3, [sp, #68]	; 0x44
   82556:	2300      	movs	r3, #0
   82558:	4611      	mov	r1, r2
   8255a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8255c:	9208      	str	r2, [sp, #32]
   8255e:	6802      	ldr	r2, [r0, #0]
   82560:	461f      	mov	r7, r3
   82562:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82566:	930a      	str	r3, [sp, #40]	; 0x28
   82568:	9312      	str	r3, [sp, #72]	; 0x48
   8256a:	1d03      	adds	r3, r0, #4
   8256c:	f8cd b01c 	str.w	fp, [sp, #28]
   82570:	910e      	str	r1, [sp, #56]	; 0x38
   82572:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82576:	930f      	str	r3, [sp, #60]	; 0x3c
   82578:	ae28      	add	r6, sp, #160	; 0xa0
   8257a:	e639      	b.n	821f0 <_svfprintf_r+0x250>
   8257c:	9311      	str	r3, [sp, #68]	; 0x44
   8257e:	2a00      	cmp	r2, #0
   82580:	f040 8784 	bne.w	8348c <_svfprintf_r+0x14ec>
   82584:	f04b 0b10 	orr.w	fp, fp, #16
   82588:	f01b 0f20 	tst.w	fp, #32
   8258c:	f040 8475 	bne.w	82e7a <_svfprintf_r+0xeda>
   82590:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82592:	f01b 0f10 	tst.w	fp, #16
   82596:	4613      	mov	r3, r2
   82598:	f040 839d 	bne.w	82cd6 <_svfprintf_r+0xd36>
   8259c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   825a0:	f000 8399 	beq.w	82cd6 <_svfprintf_r+0xd36>
   825a4:	f9b2 4000 	ldrsh.w	r4, [r2]
   825a8:	3304      	adds	r3, #4
   825aa:	17e5      	asrs	r5, r4, #31
   825ac:	930f      	str	r3, [sp, #60]	; 0x3c
   825ae:	4622      	mov	r2, r4
   825b0:	462b      	mov	r3, r5
   825b2:	2a00      	cmp	r2, #0
   825b4:	f173 0300 	sbcs.w	r3, r3, #0
   825b8:	f2c0 8398 	blt.w	82cec <_svfprintf_r+0xd4c>
   825bc:	990a      	ldr	r1, [sp, #40]	; 0x28
   825be:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   825c2:	1c4a      	adds	r2, r1, #1
   825c4:	f04f 0301 	mov.w	r3, #1
   825c8:	f47f adf0 	bne.w	821ac <_svfprintf_r+0x20c>
   825cc:	ea54 0205 	orrs.w	r2, r4, r5
   825d0:	f000 8229 	beq.w	82a26 <_svfprintf_r+0xa86>
   825d4:	f8cd b01c 	str.w	fp, [sp, #28]
   825d8:	2b01      	cmp	r3, #1
   825da:	f000 830e 	beq.w	82bfa <_svfprintf_r+0xc5a>
   825de:	2b02      	cmp	r3, #2
   825e0:	f040 829c 	bne.w	82b1c <_svfprintf_r+0xb7c>
   825e4:	464e      	mov	r6, r9
   825e6:	9818      	ldr	r0, [sp, #96]	; 0x60
   825e8:	0923      	lsrs	r3, r4, #4
   825ea:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   825ee:	0929      	lsrs	r1, r5, #4
   825f0:	f004 020f 	and.w	r2, r4, #15
   825f4:	460d      	mov	r5, r1
   825f6:	461c      	mov	r4, r3
   825f8:	5c83      	ldrb	r3, [r0, r2]
   825fa:	f806 3d01 	strb.w	r3, [r6, #-1]!
   825fe:	ea54 0305 	orrs.w	r3, r4, r5
   82602:	d1f1      	bne.n	825e8 <_svfprintf_r+0x648>
   82604:	eba9 0306 	sub.w	r3, r9, r6
   82608:	930e      	str	r3, [sp, #56]	; 0x38
   8260a:	e5e5      	b.n	821d8 <_svfprintf_r+0x238>
   8260c:	9311      	str	r3, [sp, #68]	; 0x44
   8260e:	2a00      	cmp	r2, #0
   82610:	f040 8738 	bne.w	83484 <_svfprintf_r+0x14e4>
   82614:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82616:	f01b 0f08 	tst.w	fp, #8
   8261a:	f104 0407 	add.w	r4, r4, #7
   8261e:	f000 84cf 	beq.w	82fc0 <_svfprintf_r+0x1020>
   82622:	f024 0307 	bic.w	r3, r4, #7
   82626:	f103 0208 	add.w	r2, r3, #8
   8262a:	920f      	str	r2, [sp, #60]	; 0x3c
   8262c:	681a      	ldr	r2, [r3, #0]
   8262e:	685b      	ldr	r3, [r3, #4]
   82630:	9215      	str	r2, [sp, #84]	; 0x54
   82632:	9314      	str	r3, [sp, #80]	; 0x50
   82634:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82636:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82638:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   8263c:	4628      	mov	r0, r5
   8263e:	4621      	mov	r1, r4
   82640:	f04f 32ff 	mov.w	r2, #4294967295
   82644:	4b6f      	ldr	r3, [pc, #444]	; (82804 <_svfprintf_r+0x864>)
   82646:	f003 fe6d 	bl	86324 <__aeabi_dcmpun>
   8264a:	2800      	cmp	r0, #0
   8264c:	f040 8434 	bne.w	82eb8 <_svfprintf_r+0xf18>
   82650:	4628      	mov	r0, r5
   82652:	4621      	mov	r1, r4
   82654:	f04f 32ff 	mov.w	r2, #4294967295
   82658:	4b6a      	ldr	r3, [pc, #424]	; (82804 <_svfprintf_r+0x864>)
   8265a:	f003 fe45 	bl	862e8 <__aeabi_dcmple>
   8265e:	2800      	cmp	r0, #0
   82660:	f040 842a 	bne.w	82eb8 <_svfprintf_r+0xf18>
   82664:	a815      	add	r0, sp, #84	; 0x54
   82666:	c80d      	ldmia	r0, {r0, r2, r3}
   82668:	9914      	ldr	r1, [sp, #80]	; 0x50
   8266a:	f003 fe33 	bl	862d4 <__aeabi_dcmplt>
   8266e:	2800      	cmp	r0, #0
   82670:	f040 85d4 	bne.w	8321c <_svfprintf_r+0x127c>
   82674:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82678:	2303      	movs	r3, #3
   8267a:	461a      	mov	r2, r3
   8267c:	9308      	str	r3, [sp, #32]
   8267e:	2300      	movs	r3, #0
   82680:	4e61      	ldr	r6, [pc, #388]	; (82808 <_svfprintf_r+0x868>)
   82682:	4619      	mov	r1, r3
   82684:	930a      	str	r3, [sp, #40]	; 0x28
   82686:	4b61      	ldr	r3, [pc, #388]	; (8280c <_svfprintf_r+0x86c>)
   82688:	920e      	str	r2, [sp, #56]	; 0x38
   8268a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8268c:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   82690:	9007      	str	r0, [sp, #28]
   82692:	9112      	str	r1, [sp, #72]	; 0x48
   82694:	2a47      	cmp	r2, #71	; 0x47
   82696:	bfd8      	it	le
   82698:	461e      	movle	r6, r3
   8269a:	e5a5      	b.n	821e8 <_svfprintf_r+0x248>
   8269c:	f04b 0b08 	orr.w	fp, fp, #8
   826a0:	f89a 3000 	ldrb.w	r3, [sl]
   826a4:	e4d6      	b.n	82054 <_svfprintf_r+0xb4>
   826a6:	f04b 0b10 	orr.w	fp, fp, #16
   826aa:	9311      	str	r3, [sp, #68]	; 0x44
   826ac:	f01b 0320 	ands.w	r3, fp, #32
   826b0:	f43f aebb 	beq.w	8242a <_svfprintf_r+0x48a>
   826b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   826b6:	3407      	adds	r4, #7
   826b8:	f024 0307 	bic.w	r3, r4, #7
   826bc:	f103 0208 	add.w	r2, r3, #8
   826c0:	e9d3 4500 	ldrd	r4, r5, [r3]
   826c4:	920f      	str	r2, [sp, #60]	; 0x3c
   826c6:	2300      	movs	r3, #0
   826c8:	e568      	b.n	8219c <_svfprintf_r+0x1fc>
   826ca:	9311      	str	r3, [sp, #68]	; 0x44
   826cc:	2a00      	cmp	r2, #0
   826ce:	f040 86c2 	bne.w	83456 <_svfprintf_r+0x14b6>
   826d2:	4b4f      	ldr	r3, [pc, #316]	; (82810 <_svfprintf_r+0x870>)
   826d4:	f01b 0f20 	tst.w	fp, #32
   826d8:	9318      	str	r3, [sp, #96]	; 0x60
   826da:	f43f af19 	beq.w	82510 <_svfprintf_r+0x570>
   826de:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   826e0:	f01b 0f01 	tst.w	fp, #1
   826e4:	f104 0407 	add.w	r4, r4, #7
   826e8:	f024 0307 	bic.w	r3, r4, #7
   826ec:	f103 0208 	add.w	r2, r3, #8
   826f0:	920f      	str	r2, [sp, #60]	; 0x3c
   826f2:	e9d3 4500 	ldrd	r4, r5, [r3]
   826f6:	f47f af1d 	bne.w	82534 <_svfprintf_r+0x594>
   826fa:	2302      	movs	r3, #2
   826fc:	e54e      	b.n	8219c <_svfprintf_r+0x1fc>
   826fe:	f89a 3000 	ldrb.w	r3, [sl]
   82702:	2900      	cmp	r1, #0
   82704:	f47f aca6 	bne.w	82054 <_svfprintf_r+0xb4>
   82708:	2201      	movs	r2, #1
   8270a:	2120      	movs	r1, #32
   8270c:	e4a2      	b.n	82054 <_svfprintf_r+0xb4>
   8270e:	f04b 0b01 	orr.w	fp, fp, #1
   82712:	f89a 3000 	ldrb.w	r3, [sl]
   82716:	e49d      	b.n	82054 <_svfprintf_r+0xb4>
   82718:	f89a 3000 	ldrb.w	r3, [sl]
   8271c:	2201      	movs	r2, #1
   8271e:	212b      	movs	r1, #43	; 0x2b
   82720:	e498      	b.n	82054 <_svfprintf_r+0xb4>
   82722:	f04b 0b20 	orr.w	fp, fp, #32
   82726:	f89a 3000 	ldrb.w	r3, [sl]
   8272a:	e493      	b.n	82054 <_svfprintf_r+0xb4>
   8272c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   82730:	f89a 3000 	ldrb.w	r3, [sl]
   82734:	e48e      	b.n	82054 <_svfprintf_r+0xb4>
   82736:	f89a 3000 	ldrb.w	r3, [sl]
   8273a:	2b6c      	cmp	r3, #108	; 0x6c
   8273c:	bf03      	ittte	eq
   8273e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   82742:	f04b 0b20 	orreq.w	fp, fp, #32
   82746:	f10a 0a01 	addeq.w	sl, sl, #1
   8274a:	f04b 0b10 	orrne.w	fp, fp, #16
   8274e:	e481      	b.n	82054 <_svfprintf_r+0xb4>
   82750:	2a00      	cmp	r2, #0
   82752:	f040 867c 	bne.w	8344e <_svfprintf_r+0x14ae>
   82756:	f01b 0f20 	tst.w	fp, #32
   8275a:	f040 8452 	bne.w	83002 <_svfprintf_r+0x1062>
   8275e:	f01b 0f10 	tst.w	fp, #16
   82762:	f040 8438 	bne.w	82fd6 <_svfprintf_r+0x1036>
   82766:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8276a:	f000 8434 	beq.w	82fd6 <_svfprintf_r+0x1036>
   8276e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82770:	6813      	ldr	r3, [r2, #0]
   82772:	3204      	adds	r2, #4
   82774:	920f      	str	r2, [sp, #60]	; 0x3c
   82776:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   8277a:	801a      	strh	r2, [r3, #0]
   8277c:	e437      	b.n	81fee <_svfprintf_r+0x4e>
   8277e:	2378      	movs	r3, #120	; 0x78
   82780:	2230      	movs	r2, #48	; 0x30
   82782:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82784:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   82788:	9311      	str	r3, [sp, #68]	; 0x44
   8278a:	1d03      	adds	r3, r0, #4
   8278c:	930f      	str	r3, [sp, #60]	; 0x3c
   8278e:	4b20      	ldr	r3, [pc, #128]	; (82810 <_svfprintf_r+0x870>)
   82790:	6804      	ldr	r4, [r0, #0]
   82792:	9318      	str	r3, [sp, #96]	; 0x60
   82794:	f04b 0b02 	orr.w	fp, fp, #2
   82798:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   8279c:	2500      	movs	r5, #0
   8279e:	2302      	movs	r3, #2
   827a0:	e4fc      	b.n	8219c <_svfprintf_r+0x1fc>
   827a2:	9311      	str	r3, [sp, #68]	; 0x44
   827a4:	2a00      	cmp	r2, #0
   827a6:	f43f aeef 	beq.w	82588 <_svfprintf_r+0x5e8>
   827aa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   827ae:	e6eb      	b.n	82588 <_svfprintf_r+0x5e8>
   827b0:	2000      	movs	r0, #0
   827b2:	4604      	mov	r4, r0
   827b4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   827b8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   827bc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   827c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   827c4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   827c8:	2809      	cmp	r0, #9
   827ca:	d9f5      	bls.n	827b8 <_svfprintf_r+0x818>
   827cc:	940d      	str	r4, [sp, #52]	; 0x34
   827ce:	e443      	b.n	82058 <_svfprintf_r+0xb8>
   827d0:	9311      	str	r3, [sp, #68]	; 0x44
   827d2:	2a00      	cmp	r2, #0
   827d4:	f040 864a 	bne.w	8346c <_svfprintf_r+0x14cc>
   827d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   827da:	2a00      	cmp	r2, #0
   827dc:	f43f acb6 	beq.w	8214c <_svfprintf_r+0x1ac>
   827e0:	2300      	movs	r3, #0
   827e2:	2101      	movs	r1, #1
   827e4:	461f      	mov	r7, r3
   827e6:	9108      	str	r1, [sp, #32]
   827e8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   827ec:	f8cd b01c 	str.w	fp, [sp, #28]
   827f0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   827f4:	930a      	str	r3, [sp, #40]	; 0x28
   827f6:	9312      	str	r3, [sp, #72]	; 0x48
   827f8:	910e      	str	r1, [sp, #56]	; 0x38
   827fa:	ae28      	add	r6, sp, #160	; 0xa0
   827fc:	e4f8      	b.n	821f0 <_svfprintf_r+0x250>
   827fe:	bf00      	nop
   82800:	00086980 	.word	0x00086980
   82804:	7fefffff 	.word	0x7fefffff
   82808:	00086974 	.word	0x00086974
   8280c:	00086970 	.word	0x00086970
   82810:	00086994 	.word	0x00086994
   82814:	aa25      	add	r2, sp, #148	; 0x94
   82816:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82818:	980c      	ldr	r0, [sp, #48]	; 0x30
   8281a:	f002 fcc5 	bl	851a8 <__ssprint_r>
   8281e:	2800      	cmp	r0, #0
   82820:	f47f ac9b 	bne.w	8215a <_svfprintf_r+0x1ba>
   82824:	46c8      	mov	r8, r9
   82826:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8282a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8282c:	e533      	b.n	82296 <_svfprintf_r+0x2f6>
   8282e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82830:	2b65      	cmp	r3, #101	; 0x65
   82832:	f340 809a 	ble.w	8296a <_svfprintf_r+0x9ca>
   82836:	a815      	add	r0, sp, #84	; 0x54
   82838:	c80d      	ldmia	r0, {r0, r2, r3}
   8283a:	9914      	ldr	r1, [sp, #80]	; 0x50
   8283c:	f003 fd40 	bl	862c0 <__aeabi_dcmpeq>
   82840:	2800      	cmp	r0, #0
   82842:	f000 8193 	beq.w	82b6c <_svfprintf_r+0xbcc>
   82846:	2101      	movs	r1, #1
   82848:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8284a:	4ab5      	ldr	r2, [pc, #724]	; (82b20 <_svfprintf_r+0xb80>)
   8284c:	440b      	add	r3, r1
   8284e:	440c      	add	r4, r1
   82850:	2b07      	cmp	r3, #7
   82852:	9427      	str	r4, [sp, #156]	; 0x9c
   82854:	9326      	str	r3, [sp, #152]	; 0x98
   82856:	f8c8 1004 	str.w	r1, [r8, #4]
   8285a:	f8c8 2000 	str.w	r2, [r8]
   8285e:	f300 83c6 	bgt.w	82fee <_svfprintf_r+0x104e>
   82862:	f108 0808 	add.w	r8, r8, #8
   82866:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82868:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8286a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8286c:	4293      	cmp	r3, r2
   8286e:	db03      	blt.n	82878 <_svfprintf_r+0x8d8>
   82870:	9b07      	ldr	r3, [sp, #28]
   82872:	07dd      	lsls	r5, r3, #31
   82874:	f57f ad86 	bpl.w	82384 <_svfprintf_r+0x3e4>
   82878:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8287a:	9919      	ldr	r1, [sp, #100]	; 0x64
   8287c:	3301      	adds	r3, #1
   8287e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   82880:	440c      	add	r4, r1
   82882:	2b07      	cmp	r3, #7
   82884:	f8c8 2000 	str.w	r2, [r8]
   82888:	f8c8 1004 	str.w	r1, [r8, #4]
   8288c:	9427      	str	r4, [sp, #156]	; 0x9c
   8288e:	9326      	str	r3, [sp, #152]	; 0x98
   82890:	f300 83c4 	bgt.w	8301c <_svfprintf_r+0x107c>
   82894:	f108 0808 	add.w	r8, r8, #8
   82898:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8289a:	1e5e      	subs	r6, r3, #1
   8289c:	2e00      	cmp	r6, #0
   8289e:	f77f ad71 	ble.w	82384 <_svfprintf_r+0x3e4>
   828a2:	2e10      	cmp	r6, #16
   828a4:	f340 8575 	ble.w	83392 <_svfprintf_r+0x13f2>
   828a8:	4622      	mov	r2, r4
   828aa:	2710      	movs	r7, #16
   828ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
   828ae:	4d9d      	ldr	r5, [pc, #628]	; (82b24 <_svfprintf_r+0xb84>)
   828b0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   828b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   828b6:	e005      	b.n	828c4 <_svfprintf_r+0x924>
   828b8:	f108 0808 	add.w	r8, r8, #8
   828bc:	3e10      	subs	r6, #16
   828be:	2e10      	cmp	r6, #16
   828c0:	f340 8225 	ble.w	82d0e <_svfprintf_r+0xd6e>
   828c4:	3301      	adds	r3, #1
   828c6:	3210      	adds	r2, #16
   828c8:	2b07      	cmp	r3, #7
   828ca:	9227      	str	r2, [sp, #156]	; 0x9c
   828cc:	9326      	str	r3, [sp, #152]	; 0x98
   828ce:	e888 00a0 	stmia.w	r8, {r5, r7}
   828d2:	ddf1      	ble.n	828b8 <_svfprintf_r+0x918>
   828d4:	aa25      	add	r2, sp, #148	; 0x94
   828d6:	4621      	mov	r1, r4
   828d8:	4658      	mov	r0, fp
   828da:	f002 fc65 	bl	851a8 <__ssprint_r>
   828de:	2800      	cmp	r0, #0
   828e0:	f47f ac3b 	bne.w	8215a <_svfprintf_r+0x1ba>
   828e4:	46c8      	mov	r8, r9
   828e6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   828e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   828ea:	e7e7      	b.n	828bc <_svfprintf_r+0x91c>
   828ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   828ee:	9a08      	ldr	r2, [sp, #32]
   828f0:	1a9f      	subs	r7, r3, r2
   828f2:	2f00      	cmp	r7, #0
   828f4:	f77f acf6 	ble.w	822e4 <_svfprintf_r+0x344>
   828f8:	2f10      	cmp	r7, #16
   828fa:	f340 84a8 	ble.w	8324e <_svfprintf_r+0x12ae>
   828fe:	4d89      	ldr	r5, [pc, #548]	; (82b24 <_svfprintf_r+0xb84>)
   82900:	4642      	mov	r2, r8
   82902:	4621      	mov	r1, r4
   82904:	46b0      	mov	r8, r6
   82906:	f04f 0b10 	mov.w	fp, #16
   8290a:	462e      	mov	r6, r5
   8290c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8290e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82910:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82912:	e004      	b.n	8291e <_svfprintf_r+0x97e>
   82914:	3f10      	subs	r7, #16
   82916:	2f10      	cmp	r7, #16
   82918:	f102 0208 	add.w	r2, r2, #8
   8291c:	dd15      	ble.n	8294a <_svfprintf_r+0x9aa>
   8291e:	3301      	adds	r3, #1
   82920:	3110      	adds	r1, #16
   82922:	2b07      	cmp	r3, #7
   82924:	9127      	str	r1, [sp, #156]	; 0x9c
   82926:	9326      	str	r3, [sp, #152]	; 0x98
   82928:	e882 0840 	stmia.w	r2, {r6, fp}
   8292c:	ddf2      	ble.n	82914 <_svfprintf_r+0x974>
   8292e:	aa25      	add	r2, sp, #148	; 0x94
   82930:	4629      	mov	r1, r5
   82932:	4620      	mov	r0, r4
   82934:	f002 fc38 	bl	851a8 <__ssprint_r>
   82938:	2800      	cmp	r0, #0
   8293a:	f47f ac0e 	bne.w	8215a <_svfprintf_r+0x1ba>
   8293e:	3f10      	subs	r7, #16
   82940:	2f10      	cmp	r7, #16
   82942:	464a      	mov	r2, r9
   82944:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82946:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82948:	dce9      	bgt.n	8291e <_svfprintf_r+0x97e>
   8294a:	4635      	mov	r5, r6
   8294c:	460c      	mov	r4, r1
   8294e:	4646      	mov	r6, r8
   82950:	4690      	mov	r8, r2
   82952:	3301      	adds	r3, #1
   82954:	443c      	add	r4, r7
   82956:	2b07      	cmp	r3, #7
   82958:	9427      	str	r4, [sp, #156]	; 0x9c
   8295a:	9326      	str	r3, [sp, #152]	; 0x98
   8295c:	e888 00a0 	stmia.w	r8, {r5, r7}
   82960:	f300 829e 	bgt.w	82ea0 <_svfprintf_r+0xf00>
   82964:	f108 0808 	add.w	r8, r8, #8
   82968:	e4bc      	b.n	822e4 <_svfprintf_r+0x344>
   8296a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8296c:	2b01      	cmp	r3, #1
   8296e:	f340 824f 	ble.w	82e10 <_svfprintf_r+0xe70>
   82972:	2301      	movs	r3, #1
   82974:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82976:	441c      	add	r4, r3
   82978:	441f      	add	r7, r3
   8297a:	2f07      	cmp	r7, #7
   8297c:	9427      	str	r4, [sp, #156]	; 0x9c
   8297e:	f8c8 6000 	str.w	r6, [r8]
   82982:	9726      	str	r7, [sp, #152]	; 0x98
   82984:	f8c8 3004 	str.w	r3, [r8, #4]
   82988:	f300 825f 	bgt.w	82e4a <_svfprintf_r+0xeaa>
   8298c:	f108 0808 	add.w	r8, r8, #8
   82990:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82992:	3701      	adds	r7, #1
   82994:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   82996:	4414      	add	r4, r2
   82998:	2f07      	cmp	r7, #7
   8299a:	9427      	str	r4, [sp, #156]	; 0x9c
   8299c:	9726      	str	r7, [sp, #152]	; 0x98
   8299e:	f8c8 3000 	str.w	r3, [r8]
   829a2:	f8c8 2004 	str.w	r2, [r8, #4]
   829a6:	f300 825c 	bgt.w	82e62 <_svfprintf_r+0xec2>
   829aa:	f108 0808 	add.w	r8, r8, #8
   829ae:	a815      	add	r0, sp, #84	; 0x54
   829b0:	c80d      	ldmia	r0, {r0, r2, r3}
   829b2:	9914      	ldr	r1, [sp, #80]	; 0x50
   829b4:	f003 fc84 	bl	862c0 <__aeabi_dcmpeq>
   829b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   829ba:	2800      	cmp	r0, #0
   829bc:	f040 8141 	bne.w	82c42 <_svfprintf_r+0xca2>
   829c0:	3b01      	subs	r3, #1
   829c2:	3701      	adds	r7, #1
   829c4:	3601      	adds	r6, #1
   829c6:	441c      	add	r4, r3
   829c8:	2f07      	cmp	r7, #7
   829ca:	f8c8 6000 	str.w	r6, [r8]
   829ce:	9726      	str	r7, [sp, #152]	; 0x98
   829d0:	9427      	str	r4, [sp, #156]	; 0x9c
   829d2:	f8c8 3004 	str.w	r3, [r8, #4]
   829d6:	f300 8166 	bgt.w	82ca6 <_svfprintf_r+0xd06>
   829da:	f108 0808 	add.w	r8, r8, #8
   829de:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   829e0:	3701      	adds	r7, #1
   829e2:	4414      	add	r4, r2
   829e4:	ab21      	add	r3, sp, #132	; 0x84
   829e6:	2f07      	cmp	r7, #7
   829e8:	9427      	str	r4, [sp, #156]	; 0x9c
   829ea:	9726      	str	r7, [sp, #152]	; 0x98
   829ec:	f8c8 2004 	str.w	r2, [r8, #4]
   829f0:	f8c8 3000 	str.w	r3, [r8]
   829f4:	f77f acc4 	ble.w	82380 <_svfprintf_r+0x3e0>
   829f8:	aa25      	add	r2, sp, #148	; 0x94
   829fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   829fc:	980c      	ldr	r0, [sp, #48]	; 0x30
   829fe:	f002 fbd3 	bl	851a8 <__ssprint_r>
   82a02:	2800      	cmp	r0, #0
   82a04:	f47f aba9 	bne.w	8215a <_svfprintf_r+0x1ba>
   82a08:	46c8      	mov	r8, r9
   82a0a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a0c:	e4ba      	b.n	82384 <_svfprintf_r+0x3e4>
   82a0e:	aa25      	add	r2, sp, #148	; 0x94
   82a10:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a12:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a14:	f002 fbc8 	bl	851a8 <__ssprint_r>
   82a18:	2800      	cmp	r0, #0
   82a1a:	f43f acfd 	beq.w	82418 <_svfprintf_r+0x478>
   82a1e:	f7ff bb9c 	b.w	8215a <_svfprintf_r+0x1ba>
   82a22:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82a26:	2b01      	cmp	r3, #1
   82a28:	f000 817e 	beq.w	82d28 <_svfprintf_r+0xd88>
   82a2c:	2b02      	cmp	r3, #2
   82a2e:	d171      	bne.n	82b14 <_svfprintf_r+0xb74>
   82a30:	f8cd b01c 	str.w	fp, [sp, #28]
   82a34:	2400      	movs	r4, #0
   82a36:	2500      	movs	r5, #0
   82a38:	e5d4      	b.n	825e4 <_svfprintf_r+0x644>
   82a3a:	aa25      	add	r2, sp, #148	; 0x94
   82a3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a3e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a40:	f002 fbb2 	bl	851a8 <__ssprint_r>
   82a44:	2800      	cmp	r0, #0
   82a46:	f47f ab88 	bne.w	8215a <_svfprintf_r+0x1ba>
   82a4a:	46c8      	mov	r8, r9
   82a4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a4e:	e486      	b.n	8235e <_svfprintf_r+0x3be>
   82a50:	aa25      	add	r2, sp, #148	; 0x94
   82a52:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a54:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a56:	f002 fba7 	bl	851a8 <__ssprint_r>
   82a5a:	2800      	cmp	r0, #0
   82a5c:	f47f ab7d 	bne.w	8215a <_svfprintf_r+0x1ba>
   82a60:	46c8      	mov	r8, r9
   82a62:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a64:	e429      	b.n	822ba <_svfprintf_r+0x31a>
   82a66:	2001      	movs	r0, #1
   82a68:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a6a:	4a2d      	ldr	r2, [pc, #180]	; (82b20 <_svfprintf_r+0xb80>)
   82a6c:	4403      	add	r3, r0
   82a6e:	4404      	add	r4, r0
   82a70:	2b07      	cmp	r3, #7
   82a72:	9427      	str	r4, [sp, #156]	; 0x9c
   82a74:	9326      	str	r3, [sp, #152]	; 0x98
   82a76:	f8c8 0004 	str.w	r0, [r8, #4]
   82a7a:	f8c8 2000 	str.w	r2, [r8]
   82a7e:	f340 82d8 	ble.w	83032 <_svfprintf_r+0x1092>
   82a82:	aa25      	add	r2, sp, #148	; 0x94
   82a84:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a86:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a88:	f002 fb8e 	bl	851a8 <__ssprint_r>
   82a8c:	2800      	cmp	r0, #0
   82a8e:	f47f ab64 	bne.w	8215a <_svfprintf_r+0x1ba>
   82a92:	46c8      	mov	r8, r9
   82a94:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82a96:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a98:	b929      	cbnz	r1, 82aa6 <_svfprintf_r+0xb06>
   82a9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82a9c:	b91b      	cbnz	r3, 82aa6 <_svfprintf_r+0xb06>
   82a9e:	9b07      	ldr	r3, [sp, #28]
   82aa0:	07d8      	lsls	r0, r3, #31
   82aa2:	f57f ac6f 	bpl.w	82384 <_svfprintf_r+0x3e4>
   82aa6:	9819      	ldr	r0, [sp, #100]	; 0x64
   82aa8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82aaa:	4602      	mov	r2, r0
   82aac:	3301      	adds	r3, #1
   82aae:	4422      	add	r2, r4
   82ab0:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   82ab2:	2b07      	cmp	r3, #7
   82ab4:	9227      	str	r2, [sp, #156]	; 0x9c
   82ab6:	f8c8 4000 	str.w	r4, [r8]
   82aba:	f8c8 0004 	str.w	r0, [r8, #4]
   82abe:	9326      	str	r3, [sp, #152]	; 0x98
   82ac0:	f300 8431 	bgt.w	83326 <_svfprintf_r+0x1386>
   82ac4:	f108 0808 	add.w	r8, r8, #8
   82ac8:	2900      	cmp	r1, #0
   82aca:	f2c0 8409 	blt.w	832e0 <_svfprintf_r+0x1340>
   82ace:	9913      	ldr	r1, [sp, #76]	; 0x4c
   82ad0:	3301      	adds	r3, #1
   82ad2:	188c      	adds	r4, r1, r2
   82ad4:	2b07      	cmp	r3, #7
   82ad6:	9427      	str	r4, [sp, #156]	; 0x9c
   82ad8:	9326      	str	r3, [sp, #152]	; 0x98
   82ada:	f8c8 6000 	str.w	r6, [r8]
   82ade:	f8c8 1004 	str.w	r1, [r8, #4]
   82ae2:	f77f ac4d 	ble.w	82380 <_svfprintf_r+0x3e0>
   82ae6:	aa25      	add	r2, sp, #148	; 0x94
   82ae8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82aea:	980c      	ldr	r0, [sp, #48]	; 0x30
   82aec:	f002 fb5c 	bl	851a8 <__ssprint_r>
   82af0:	2800      	cmp	r0, #0
   82af2:	f47f ab32 	bne.w	8215a <_svfprintf_r+0x1ba>
   82af6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82af8:	46c8      	mov	r8, r9
   82afa:	e443      	b.n	82384 <_svfprintf_r+0x3e4>
   82afc:	aa25      	add	r2, sp, #148	; 0x94
   82afe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b00:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b02:	f002 fb51 	bl	851a8 <__ssprint_r>
   82b06:	2800      	cmp	r0, #0
   82b08:	f47f ab27 	bne.w	8215a <_svfprintf_r+0x1ba>
   82b0c:	46c8      	mov	r8, r9
   82b0e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82b10:	f7ff bbe5 	b.w	822de <_svfprintf_r+0x33e>
   82b14:	2400      	movs	r4, #0
   82b16:	2500      	movs	r5, #0
   82b18:	f8cd b01c 	str.w	fp, [sp, #28]
   82b1c:	4649      	mov	r1, r9
   82b1e:	e004      	b.n	82b2a <_svfprintf_r+0xb8a>
   82b20:	000869b0 	.word	0x000869b0
   82b24:	000869c4 	.word	0x000869c4
   82b28:	4631      	mov	r1, r6
   82b2a:	08e2      	lsrs	r2, r4, #3
   82b2c:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   82b30:	08e8      	lsrs	r0, r5, #3
   82b32:	f004 0307 	and.w	r3, r4, #7
   82b36:	4605      	mov	r5, r0
   82b38:	4614      	mov	r4, r2
   82b3a:	3330      	adds	r3, #48	; 0x30
   82b3c:	ea54 0205 	orrs.w	r2, r4, r5
   82b40:	f801 3c01 	strb.w	r3, [r1, #-1]
   82b44:	f101 36ff 	add.w	r6, r1, #4294967295
   82b48:	d1ee      	bne.n	82b28 <_svfprintf_r+0xb88>
   82b4a:	9a07      	ldr	r2, [sp, #28]
   82b4c:	07d2      	lsls	r2, r2, #31
   82b4e:	f57f ad59 	bpl.w	82604 <_svfprintf_r+0x664>
   82b52:	2b30      	cmp	r3, #48	; 0x30
   82b54:	f43f ad56 	beq.w	82604 <_svfprintf_r+0x664>
   82b58:	2330      	movs	r3, #48	; 0x30
   82b5a:	3902      	subs	r1, #2
   82b5c:	f806 3c01 	strb.w	r3, [r6, #-1]
   82b60:	eba9 0301 	sub.w	r3, r9, r1
   82b64:	930e      	str	r3, [sp, #56]	; 0x38
   82b66:	460e      	mov	r6, r1
   82b68:	f7ff bb36 	b.w	821d8 <_svfprintf_r+0x238>
   82b6c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82b6e:	2900      	cmp	r1, #0
   82b70:	f77f af79 	ble.w	82a66 <_svfprintf_r+0xac6>
   82b74:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82b76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82b78:	4293      	cmp	r3, r2
   82b7a:	bfa8      	it	ge
   82b7c:	4613      	movge	r3, r2
   82b7e:	2b00      	cmp	r3, #0
   82b80:	461f      	mov	r7, r3
   82b82:	dd0b      	ble.n	82b9c <_svfprintf_r+0xbfc>
   82b84:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82b86:	443c      	add	r4, r7
   82b88:	3301      	adds	r3, #1
   82b8a:	2b07      	cmp	r3, #7
   82b8c:	9427      	str	r4, [sp, #156]	; 0x9c
   82b8e:	e888 00c0 	stmia.w	r8, {r6, r7}
   82b92:	9326      	str	r3, [sp, #152]	; 0x98
   82b94:	f300 82fb 	bgt.w	8318e <_svfprintf_r+0x11ee>
   82b98:	f108 0808 	add.w	r8, r8, #8
   82b9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82b9e:	2f00      	cmp	r7, #0
   82ba0:	bfa8      	it	ge
   82ba2:	1bdb      	subge	r3, r3, r7
   82ba4:	2b00      	cmp	r3, #0
   82ba6:	461f      	mov	r7, r3
   82ba8:	f340 80d7 	ble.w	82d5a <_svfprintf_r+0xdba>
   82bac:	2b10      	cmp	r3, #16
   82bae:	f340 8434 	ble.w	8341a <_svfprintf_r+0x147a>
   82bb2:	4dba      	ldr	r5, [pc, #744]	; (82e9c <_svfprintf_r+0xefc>)
   82bb4:	4642      	mov	r2, r8
   82bb6:	4621      	mov	r1, r4
   82bb8:	46b0      	mov	r8, r6
   82bba:	f04f 0b10 	mov.w	fp, #16
   82bbe:	462e      	mov	r6, r5
   82bc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82bc2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82bc4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82bc6:	e004      	b.n	82bd2 <_svfprintf_r+0xc32>
   82bc8:	3208      	adds	r2, #8
   82bca:	3f10      	subs	r7, #16
   82bcc:	2f10      	cmp	r7, #16
   82bce:	f340 80b5 	ble.w	82d3c <_svfprintf_r+0xd9c>
   82bd2:	3301      	adds	r3, #1
   82bd4:	3110      	adds	r1, #16
   82bd6:	2b07      	cmp	r3, #7
   82bd8:	9127      	str	r1, [sp, #156]	; 0x9c
   82bda:	9326      	str	r3, [sp, #152]	; 0x98
   82bdc:	e882 0840 	stmia.w	r2, {r6, fp}
   82be0:	ddf2      	ble.n	82bc8 <_svfprintf_r+0xc28>
   82be2:	aa25      	add	r2, sp, #148	; 0x94
   82be4:	4629      	mov	r1, r5
   82be6:	4620      	mov	r0, r4
   82be8:	f002 fade 	bl	851a8 <__ssprint_r>
   82bec:	2800      	cmp	r0, #0
   82bee:	f47f aab4 	bne.w	8215a <_svfprintf_r+0x1ba>
   82bf2:	464a      	mov	r2, r9
   82bf4:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82bf6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82bf8:	e7e7      	b.n	82bca <_svfprintf_r+0xc2a>
   82bfa:	2d00      	cmp	r5, #0
   82bfc:	bf08      	it	eq
   82bfe:	2c0a      	cmpeq	r4, #10
   82c00:	f0c0 8090 	bcc.w	82d24 <_svfprintf_r+0xd84>
   82c04:	464e      	mov	r6, r9
   82c06:	4620      	mov	r0, r4
   82c08:	4629      	mov	r1, r5
   82c0a:	220a      	movs	r2, #10
   82c0c:	2300      	movs	r3, #0
   82c0e:	f003 fbc7 	bl	863a0 <__aeabi_uldivmod>
   82c12:	3230      	adds	r2, #48	; 0x30
   82c14:	f806 2d01 	strb.w	r2, [r6, #-1]!
   82c18:	4620      	mov	r0, r4
   82c1a:	4629      	mov	r1, r5
   82c1c:	2300      	movs	r3, #0
   82c1e:	220a      	movs	r2, #10
   82c20:	f003 fbbe 	bl	863a0 <__aeabi_uldivmod>
   82c24:	4604      	mov	r4, r0
   82c26:	460d      	mov	r5, r1
   82c28:	ea54 0305 	orrs.w	r3, r4, r5
   82c2c:	d1eb      	bne.n	82c06 <_svfprintf_r+0xc66>
   82c2e:	eba9 0306 	sub.w	r3, r9, r6
   82c32:	930e      	str	r3, [sp, #56]	; 0x38
   82c34:	f7ff bad0 	b.w	821d8 <_svfprintf_r+0x238>
   82c38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c3a:	464e      	mov	r6, r9
   82c3c:	930e      	str	r3, [sp, #56]	; 0x38
   82c3e:	f7ff bacb 	b.w	821d8 <_svfprintf_r+0x238>
   82c42:	1e5e      	subs	r6, r3, #1
   82c44:	2e00      	cmp	r6, #0
   82c46:	f77f aeca 	ble.w	829de <_svfprintf_r+0xa3e>
   82c4a:	2e10      	cmp	r6, #16
   82c4c:	f340 83e3 	ble.w	83416 <_svfprintf_r+0x1476>
   82c50:	4622      	mov	r2, r4
   82c52:	f04f 0b10 	mov.w	fp, #16
   82c56:	4d91      	ldr	r5, [pc, #580]	; (82e9c <_svfprintf_r+0xefc>)
   82c58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82c5a:	e004      	b.n	82c66 <_svfprintf_r+0xcc6>
   82c5c:	3e10      	subs	r6, #16
   82c5e:	2e10      	cmp	r6, #16
   82c60:	f108 0808 	add.w	r8, r8, #8
   82c64:	dd15      	ble.n	82c92 <_svfprintf_r+0xcf2>
   82c66:	3701      	adds	r7, #1
   82c68:	3210      	adds	r2, #16
   82c6a:	2f07      	cmp	r7, #7
   82c6c:	9227      	str	r2, [sp, #156]	; 0x9c
   82c6e:	9726      	str	r7, [sp, #152]	; 0x98
   82c70:	e888 0820 	stmia.w	r8, {r5, fp}
   82c74:	ddf2      	ble.n	82c5c <_svfprintf_r+0xcbc>
   82c76:	aa25      	add	r2, sp, #148	; 0x94
   82c78:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c7a:	4620      	mov	r0, r4
   82c7c:	f002 fa94 	bl	851a8 <__ssprint_r>
   82c80:	2800      	cmp	r0, #0
   82c82:	f47f aa6a 	bne.w	8215a <_svfprintf_r+0x1ba>
   82c86:	3e10      	subs	r6, #16
   82c88:	2e10      	cmp	r6, #16
   82c8a:	46c8      	mov	r8, r9
   82c8c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c8e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82c90:	dce9      	bgt.n	82c66 <_svfprintf_r+0xcc6>
   82c92:	4614      	mov	r4, r2
   82c94:	3701      	adds	r7, #1
   82c96:	4434      	add	r4, r6
   82c98:	2f07      	cmp	r7, #7
   82c9a:	9427      	str	r4, [sp, #156]	; 0x9c
   82c9c:	9726      	str	r7, [sp, #152]	; 0x98
   82c9e:	e888 0060 	stmia.w	r8, {r5, r6}
   82ca2:	f77f ae9a 	ble.w	829da <_svfprintf_r+0xa3a>
   82ca6:	aa25      	add	r2, sp, #148	; 0x94
   82ca8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82caa:	980c      	ldr	r0, [sp, #48]	; 0x30
   82cac:	f002 fa7c 	bl	851a8 <__ssprint_r>
   82cb0:	2800      	cmp	r0, #0
   82cb2:	f47f aa52 	bne.w	8215a <_svfprintf_r+0x1ba>
   82cb6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82cb8:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82cba:	46c8      	mov	r8, r9
   82cbc:	e68f      	b.n	829de <_svfprintf_r+0xa3e>
   82cbe:	3204      	adds	r2, #4
   82cc0:	681c      	ldr	r4, [r3, #0]
   82cc2:	2500      	movs	r5, #0
   82cc4:	2301      	movs	r3, #1
   82cc6:	920f      	str	r2, [sp, #60]	; 0x3c
   82cc8:	f7ff ba68 	b.w	8219c <_svfprintf_r+0x1fc>
   82ccc:	681c      	ldr	r4, [r3, #0]
   82cce:	3304      	adds	r3, #4
   82cd0:	930f      	str	r3, [sp, #60]	; 0x3c
   82cd2:	2500      	movs	r5, #0
   82cd4:	e42a      	b.n	8252c <_svfprintf_r+0x58c>
   82cd6:	681c      	ldr	r4, [r3, #0]
   82cd8:	3304      	adds	r3, #4
   82cda:	17e5      	asrs	r5, r4, #31
   82cdc:	4622      	mov	r2, r4
   82cde:	930f      	str	r3, [sp, #60]	; 0x3c
   82ce0:	462b      	mov	r3, r5
   82ce2:	2a00      	cmp	r2, #0
   82ce4:	f173 0300 	sbcs.w	r3, r3, #0
   82ce8:	f6bf ac68 	bge.w	825bc <_svfprintf_r+0x61c>
   82cec:	272d      	movs	r7, #45	; 0x2d
   82cee:	4264      	negs	r4, r4
   82cf0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82cf4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82cf8:	2301      	movs	r3, #1
   82cfa:	f7ff ba53 	b.w	821a4 <_svfprintf_r+0x204>
   82cfe:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82d00:	2500      	movs	r5, #0
   82d02:	460a      	mov	r2, r1
   82d04:	3204      	adds	r2, #4
   82d06:	680c      	ldr	r4, [r1, #0]
   82d08:	920f      	str	r2, [sp, #60]	; 0x3c
   82d0a:	f7ff ba47 	b.w	8219c <_svfprintf_r+0x1fc>
   82d0e:	4614      	mov	r4, r2
   82d10:	3301      	adds	r3, #1
   82d12:	4434      	add	r4, r6
   82d14:	2b07      	cmp	r3, #7
   82d16:	9427      	str	r4, [sp, #156]	; 0x9c
   82d18:	9326      	str	r3, [sp, #152]	; 0x98
   82d1a:	e888 0060 	stmia.w	r8, {r5, r6}
   82d1e:	f77f ab2f 	ble.w	82380 <_svfprintf_r+0x3e0>
   82d22:	e6e0      	b.n	82ae6 <_svfprintf_r+0xb46>
   82d24:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82d28:	2301      	movs	r3, #1
   82d2a:	ae42      	add	r6, sp, #264	; 0x108
   82d2c:	3430      	adds	r4, #48	; 0x30
   82d2e:	f8cd b01c 	str.w	fp, [sp, #28]
   82d32:	f806 4d41 	strb.w	r4, [r6, #-65]!
   82d36:	930e      	str	r3, [sp, #56]	; 0x38
   82d38:	f7ff ba4e 	b.w	821d8 <_svfprintf_r+0x238>
   82d3c:	4635      	mov	r5, r6
   82d3e:	460c      	mov	r4, r1
   82d40:	4646      	mov	r6, r8
   82d42:	4690      	mov	r8, r2
   82d44:	3301      	adds	r3, #1
   82d46:	443c      	add	r4, r7
   82d48:	2b07      	cmp	r3, #7
   82d4a:	9427      	str	r4, [sp, #156]	; 0x9c
   82d4c:	9326      	str	r3, [sp, #152]	; 0x98
   82d4e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82d52:	f300 8246 	bgt.w	831e2 <_svfprintf_r+0x1242>
   82d56:	f108 0808 	add.w	r8, r8, #8
   82d5a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82d5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82d5e:	429a      	cmp	r2, r3
   82d60:	db45      	blt.n	82dee <_svfprintf_r+0xe4e>
   82d62:	9b07      	ldr	r3, [sp, #28]
   82d64:	07d9      	lsls	r1, r3, #31
   82d66:	d442      	bmi.n	82dee <_svfprintf_r+0xe4e>
   82d68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82d6a:	9812      	ldr	r0, [sp, #72]	; 0x48
   82d6c:	1a9a      	subs	r2, r3, r2
   82d6e:	1a1d      	subs	r5, r3, r0
   82d70:	4295      	cmp	r5, r2
   82d72:	bfa8      	it	ge
   82d74:	4615      	movge	r5, r2
   82d76:	2d00      	cmp	r5, #0
   82d78:	dd0e      	ble.n	82d98 <_svfprintf_r+0xdf8>
   82d7a:	9926      	ldr	r1, [sp, #152]	; 0x98
   82d7c:	4406      	add	r6, r0
   82d7e:	3101      	adds	r1, #1
   82d80:	442c      	add	r4, r5
   82d82:	2907      	cmp	r1, #7
   82d84:	f8c8 6000 	str.w	r6, [r8]
   82d88:	9427      	str	r4, [sp, #156]	; 0x9c
   82d8a:	f8c8 5004 	str.w	r5, [r8, #4]
   82d8e:	9126      	str	r1, [sp, #152]	; 0x98
   82d90:	f300 8216 	bgt.w	831c0 <_svfprintf_r+0x1220>
   82d94:	f108 0808 	add.w	r8, r8, #8
   82d98:	2d00      	cmp	r5, #0
   82d9a:	bfb4      	ite	lt
   82d9c:	4616      	movlt	r6, r2
   82d9e:	1b56      	subge	r6, r2, r5
   82da0:	2e00      	cmp	r6, #0
   82da2:	f77f aaef 	ble.w	82384 <_svfprintf_r+0x3e4>
   82da6:	2e10      	cmp	r6, #16
   82da8:	f340 82f3 	ble.w	83392 <_svfprintf_r+0x13f2>
   82dac:	4622      	mov	r2, r4
   82dae:	2710      	movs	r7, #16
   82db0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82db2:	4d3a      	ldr	r5, [pc, #232]	; (82e9c <_svfprintf_r+0xefc>)
   82db4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82db8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82dba:	e004      	b.n	82dc6 <_svfprintf_r+0xe26>
   82dbc:	f108 0808 	add.w	r8, r8, #8
   82dc0:	3e10      	subs	r6, #16
   82dc2:	2e10      	cmp	r6, #16
   82dc4:	dda3      	ble.n	82d0e <_svfprintf_r+0xd6e>
   82dc6:	3301      	adds	r3, #1
   82dc8:	3210      	adds	r2, #16
   82dca:	2b07      	cmp	r3, #7
   82dcc:	9227      	str	r2, [sp, #156]	; 0x9c
   82dce:	9326      	str	r3, [sp, #152]	; 0x98
   82dd0:	e888 00a0 	stmia.w	r8, {r5, r7}
   82dd4:	ddf2      	ble.n	82dbc <_svfprintf_r+0xe1c>
   82dd6:	aa25      	add	r2, sp, #148	; 0x94
   82dd8:	4621      	mov	r1, r4
   82dda:	4658      	mov	r0, fp
   82ddc:	f002 f9e4 	bl	851a8 <__ssprint_r>
   82de0:	2800      	cmp	r0, #0
   82de2:	f47f a9ba 	bne.w	8215a <_svfprintf_r+0x1ba>
   82de6:	46c8      	mov	r8, r9
   82de8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82dea:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82dec:	e7e8      	b.n	82dc0 <_svfprintf_r+0xe20>
   82dee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82df0:	9819      	ldr	r0, [sp, #100]	; 0x64
   82df2:	3301      	adds	r3, #1
   82df4:	991a      	ldr	r1, [sp, #104]	; 0x68
   82df6:	4404      	add	r4, r0
   82df8:	2b07      	cmp	r3, #7
   82dfa:	9427      	str	r4, [sp, #156]	; 0x9c
   82dfc:	f8c8 1000 	str.w	r1, [r8]
   82e00:	f8c8 0004 	str.w	r0, [r8, #4]
   82e04:	9326      	str	r3, [sp, #152]	; 0x98
   82e06:	f300 81cf 	bgt.w	831a8 <_svfprintf_r+0x1208>
   82e0a:	f108 0808 	add.w	r8, r8, #8
   82e0e:	e7ab      	b.n	82d68 <_svfprintf_r+0xdc8>
   82e10:	9b07      	ldr	r3, [sp, #28]
   82e12:	07da      	lsls	r2, r3, #31
   82e14:	f53f adad 	bmi.w	82972 <_svfprintf_r+0x9d2>
   82e18:	2301      	movs	r3, #1
   82e1a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82e1c:	441c      	add	r4, r3
   82e1e:	441f      	add	r7, r3
   82e20:	2f07      	cmp	r7, #7
   82e22:	9427      	str	r4, [sp, #156]	; 0x9c
   82e24:	f8c8 6000 	str.w	r6, [r8]
   82e28:	9726      	str	r7, [sp, #152]	; 0x98
   82e2a:	f8c8 3004 	str.w	r3, [r8, #4]
   82e2e:	f77f add4 	ble.w	829da <_svfprintf_r+0xa3a>
   82e32:	aa25      	add	r2, sp, #148	; 0x94
   82e34:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e36:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e38:	f002 f9b6 	bl	851a8 <__ssprint_r>
   82e3c:	2800      	cmp	r0, #0
   82e3e:	f47f a98c 	bne.w	8215a <_svfprintf_r+0x1ba>
   82e42:	46c8      	mov	r8, r9
   82e44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e46:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82e48:	e5c9      	b.n	829de <_svfprintf_r+0xa3e>
   82e4a:	aa25      	add	r2, sp, #148	; 0x94
   82e4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e4e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e50:	f002 f9aa 	bl	851a8 <__ssprint_r>
   82e54:	2800      	cmp	r0, #0
   82e56:	f47f a980 	bne.w	8215a <_svfprintf_r+0x1ba>
   82e5a:	46c8      	mov	r8, r9
   82e5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e5e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82e60:	e596      	b.n	82990 <_svfprintf_r+0x9f0>
   82e62:	aa25      	add	r2, sp, #148	; 0x94
   82e64:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e66:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e68:	f002 f99e 	bl	851a8 <__ssprint_r>
   82e6c:	2800      	cmp	r0, #0
   82e6e:	f47f a974 	bne.w	8215a <_svfprintf_r+0x1ba>
   82e72:	46c8      	mov	r8, r9
   82e74:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e76:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82e78:	e599      	b.n	829ae <_svfprintf_r+0xa0e>
   82e7a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82e7c:	3407      	adds	r4, #7
   82e7e:	f024 0407 	bic.w	r4, r4, #7
   82e82:	f104 0108 	add.w	r1, r4, #8
   82e86:	e9d4 2300 	ldrd	r2, r3, [r4]
   82e8a:	910f      	str	r1, [sp, #60]	; 0x3c
   82e8c:	4614      	mov	r4, r2
   82e8e:	461d      	mov	r5, r3
   82e90:	f7ff bb8f 	b.w	825b2 <_svfprintf_r+0x612>
   82e94:	464e      	mov	r6, r9
   82e96:	f7ff b99f 	b.w	821d8 <_svfprintf_r+0x238>
   82e9a:	bf00      	nop
   82e9c:	000869c4 	.word	0x000869c4
   82ea0:	aa25      	add	r2, sp, #148	; 0x94
   82ea2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ea4:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ea6:	f002 f97f 	bl	851a8 <__ssprint_r>
   82eaa:	2800      	cmp	r0, #0
   82eac:	f47f a955 	bne.w	8215a <_svfprintf_r+0x1ba>
   82eb0:	46c8      	mov	r8, r9
   82eb2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82eb4:	f7ff ba16 	b.w	822e4 <_svfprintf_r+0x344>
   82eb8:	9c15      	ldr	r4, [sp, #84]	; 0x54
   82eba:	4622      	mov	r2, r4
   82ebc:	4620      	mov	r0, r4
   82ebe:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82ec0:	4623      	mov	r3, r4
   82ec2:	4621      	mov	r1, r4
   82ec4:	f003 fa2e 	bl	86324 <__aeabi_dcmpun>
   82ec8:	2800      	cmp	r0, #0
   82eca:	f040 8273 	bne.w	833b4 <_svfprintf_r+0x1414>
   82ece:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ed0:	3301      	adds	r3, #1
   82ed2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82ed4:	f023 0320 	bic.w	r3, r3, #32
   82ed8:	930e      	str	r3, [sp, #56]	; 0x38
   82eda:	f000 819c 	beq.w	83216 <_svfprintf_r+0x1276>
   82ede:	2b47      	cmp	r3, #71	; 0x47
   82ee0:	f000 80d6 	beq.w	83090 <_svfprintf_r+0x10f0>
   82ee4:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   82ee8:	9307      	str	r3, [sp, #28]
   82eea:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82eec:	1e1f      	subs	r7, r3, #0
   82eee:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82ef0:	9308      	str	r3, [sp, #32]
   82ef2:	bfb7      	itett	lt
   82ef4:	463b      	movlt	r3, r7
   82ef6:	2300      	movge	r3, #0
   82ef8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82efc:	232d      	movlt	r3, #45	; 0x2d
   82efe:	9310      	str	r3, [sp, #64]	; 0x40
   82f00:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f02:	2b66      	cmp	r3, #102	; 0x66
   82f04:	f000 8190 	beq.w	83228 <_svfprintf_r+0x1288>
   82f08:	2b46      	cmp	r3, #70	; 0x46
   82f0a:	f000 80a4 	beq.w	83056 <_svfprintf_r+0x10b6>
   82f0e:	2002      	movs	r0, #2
   82f10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82f12:	a923      	add	r1, sp, #140	; 0x8c
   82f14:	2b45      	cmp	r3, #69	; 0x45
   82f16:	bf0a      	itet	eq
   82f18:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   82f1a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82f1c:	1c5d      	addeq	r5, r3, #1
   82f1e:	e88d 0021 	stmia.w	sp, {r0, r5}
   82f22:	9104      	str	r1, [sp, #16]
   82f24:	a820      	add	r0, sp, #128	; 0x80
   82f26:	a91f      	add	r1, sp, #124	; 0x7c
   82f28:	463b      	mov	r3, r7
   82f2a:	9003      	str	r0, [sp, #12]
   82f2c:	9a08      	ldr	r2, [sp, #32]
   82f2e:	9102      	str	r1, [sp, #8]
   82f30:	980c      	ldr	r0, [sp, #48]	; 0x30
   82f32:	f000 fb59 	bl	835e8 <_dtoa_r>
   82f36:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f38:	4606      	mov	r6, r0
   82f3a:	2b67      	cmp	r3, #103	; 0x67
   82f3c:	f040 81ba 	bne.w	832b4 <_svfprintf_r+0x1314>
   82f40:	f01b 0f01 	tst.w	fp, #1
   82f44:	f000 8223 	beq.w	8338e <_svfprintf_r+0x13ee>
   82f48:	1974      	adds	r4, r6, r5
   82f4a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82f4c:	9808      	ldr	r0, [sp, #32]
   82f4e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82f50:	4639      	mov	r1, r7
   82f52:	f003 f9b5 	bl	862c0 <__aeabi_dcmpeq>
   82f56:	2800      	cmp	r0, #0
   82f58:	f040 8124 	bne.w	831a4 <_svfprintf_r+0x1204>
   82f5c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82f5e:	42a3      	cmp	r3, r4
   82f60:	d206      	bcs.n	82f70 <_svfprintf_r+0xfd0>
   82f62:	2130      	movs	r1, #48	; 0x30
   82f64:	1c5a      	adds	r2, r3, #1
   82f66:	9223      	str	r2, [sp, #140]	; 0x8c
   82f68:	7019      	strb	r1, [r3, #0]
   82f6a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82f6c:	429c      	cmp	r4, r3
   82f6e:	d8f9      	bhi.n	82f64 <_svfprintf_r+0xfc4>
   82f70:	1b9b      	subs	r3, r3, r6
   82f72:	9313      	str	r3, [sp, #76]	; 0x4c
   82f74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82f76:	2b47      	cmp	r3, #71	; 0x47
   82f78:	f000 80a2 	beq.w	830c0 <_svfprintf_r+0x1120>
   82f7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f7e:	2b65      	cmp	r3, #101	; 0x65
   82f80:	f340 81a7 	ble.w	832d2 <_svfprintf_r+0x1332>
   82f84:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f86:	2b66      	cmp	r3, #102	; 0x66
   82f88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82f8a:	9312      	str	r3, [sp, #72]	; 0x48
   82f8c:	f000 8171 	beq.w	83272 <_svfprintf_r+0x12d2>
   82f90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82f92:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82f94:	4619      	mov	r1, r3
   82f96:	4291      	cmp	r1, r2
   82f98:	f300 815d 	bgt.w	83256 <_svfprintf_r+0x12b6>
   82f9c:	f01b 0f01 	tst.w	fp, #1
   82fa0:	f040 81f0 	bne.w	83384 <_svfprintf_r+0x13e4>
   82fa4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82fa8:	9308      	str	r3, [sp, #32]
   82faa:	2367      	movs	r3, #103	; 0x67
   82fac:	920e      	str	r2, [sp, #56]	; 0x38
   82fae:	9311      	str	r3, [sp, #68]	; 0x44
   82fb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82fb2:	2b00      	cmp	r3, #0
   82fb4:	d17d      	bne.n	830b2 <_svfprintf_r+0x1112>
   82fb6:	930a      	str	r3, [sp, #40]	; 0x28
   82fb8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82fbc:	f7ff b914 	b.w	821e8 <_svfprintf_r+0x248>
   82fc0:	f024 0407 	bic.w	r4, r4, #7
   82fc4:	6823      	ldr	r3, [r4, #0]
   82fc6:	9315      	str	r3, [sp, #84]	; 0x54
   82fc8:	6863      	ldr	r3, [r4, #4]
   82fca:	9314      	str	r3, [sp, #80]	; 0x50
   82fcc:	f104 0308 	add.w	r3, r4, #8
   82fd0:	930f      	str	r3, [sp, #60]	; 0x3c
   82fd2:	f7ff bb2f 	b.w	82634 <_svfprintf_r+0x694>
   82fd6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82fd8:	6813      	ldr	r3, [r2, #0]
   82fda:	3204      	adds	r2, #4
   82fdc:	920f      	str	r2, [sp, #60]	; 0x3c
   82fde:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82fe0:	601a      	str	r2, [r3, #0]
   82fe2:	f7ff b804 	b.w	81fee <_svfprintf_r+0x4e>
   82fe6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82fe8:	4daf      	ldr	r5, [pc, #700]	; (832a8 <_svfprintf_r+0x1308>)
   82fea:	f7ff b9ad 	b.w	82348 <_svfprintf_r+0x3a8>
   82fee:	aa25      	add	r2, sp, #148	; 0x94
   82ff0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ff2:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ff4:	f002 f8d8 	bl	851a8 <__ssprint_r>
   82ff8:	2800      	cmp	r0, #0
   82ffa:	f47f a8ae 	bne.w	8215a <_svfprintf_r+0x1ba>
   82ffe:	46c8      	mov	r8, r9
   83000:	e431      	b.n	82866 <_svfprintf_r+0x8c6>
   83002:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83004:	4613      	mov	r3, r2
   83006:	3304      	adds	r3, #4
   83008:	930f      	str	r3, [sp, #60]	; 0x3c
   8300a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8300c:	6811      	ldr	r1, [r2, #0]
   8300e:	17dd      	asrs	r5, r3, #31
   83010:	461a      	mov	r2, r3
   83012:	462b      	mov	r3, r5
   83014:	e9c1 2300 	strd	r2, r3, [r1]
   83018:	f7fe bfe9 	b.w	81fee <_svfprintf_r+0x4e>
   8301c:	aa25      	add	r2, sp, #148	; 0x94
   8301e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83020:	980c      	ldr	r0, [sp, #48]	; 0x30
   83022:	f002 f8c1 	bl	851a8 <__ssprint_r>
   83026:	2800      	cmp	r0, #0
   83028:	f47f a897 	bne.w	8215a <_svfprintf_r+0x1ba>
   8302c:	46c8      	mov	r8, r9
   8302e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83030:	e432      	b.n	82898 <_svfprintf_r+0x8f8>
   83032:	f108 0808 	add.w	r8, r8, #8
   83036:	e52f      	b.n	82a98 <_svfprintf_r+0xaf8>
   83038:	2140      	movs	r1, #64	; 0x40
   8303a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8303c:	f001 fa26 	bl	8448c <_malloc_r>
   83040:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83042:	6010      	str	r0, [r2, #0]
   83044:	6110      	str	r0, [r2, #16]
   83046:	2800      	cmp	r0, #0
   83048:	f000 8214 	beq.w	83474 <_svfprintf_r+0x14d4>
   8304c:	2340      	movs	r3, #64	; 0x40
   8304e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83050:	6153      	str	r3, [r2, #20]
   83052:	f7fe bfbc 	b.w	81fce <_svfprintf_r+0x2e>
   83056:	2003      	movs	r0, #3
   83058:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8305a:	a923      	add	r1, sp, #140	; 0x8c
   8305c:	e88d 0011 	stmia.w	sp, {r0, r4}
   83060:	9104      	str	r1, [sp, #16]
   83062:	a820      	add	r0, sp, #128	; 0x80
   83064:	a91f      	add	r1, sp, #124	; 0x7c
   83066:	9003      	str	r0, [sp, #12]
   83068:	9a08      	ldr	r2, [sp, #32]
   8306a:	463b      	mov	r3, r7
   8306c:	9102      	str	r1, [sp, #8]
   8306e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83070:	f000 faba 	bl	835e8 <_dtoa_r>
   83074:	4625      	mov	r5, r4
   83076:	4606      	mov	r6, r0
   83078:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8307a:	1974      	adds	r4, r6, r5
   8307c:	2b46      	cmp	r3, #70	; 0x46
   8307e:	f47f af64 	bne.w	82f4a <_svfprintf_r+0xfaa>
   83082:	7833      	ldrb	r3, [r6, #0]
   83084:	2b30      	cmp	r3, #48	; 0x30
   83086:	f000 8187 	beq.w	83398 <_svfprintf_r+0x13f8>
   8308a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   8308c:	442c      	add	r4, r5
   8308e:	e75c      	b.n	82f4a <_svfprintf_r+0xfaa>
   83090:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83092:	2b00      	cmp	r3, #0
   83094:	bf08      	it	eq
   83096:	2301      	moveq	r3, #1
   83098:	930a      	str	r3, [sp, #40]	; 0x28
   8309a:	e723      	b.n	82ee4 <_svfprintf_r+0xf44>
   8309c:	4630      	mov	r0, r6
   8309e:	950a      	str	r5, [sp, #40]	; 0x28
   830a0:	f7fe fe6c 	bl	81d7c <strlen>
   830a4:	940f      	str	r4, [sp, #60]	; 0x3c
   830a6:	900e      	str	r0, [sp, #56]	; 0x38
   830a8:	f8cd b01c 	str.w	fp, [sp, #28]
   830ac:	4603      	mov	r3, r0
   830ae:	f7ff b9e7 	b.w	82480 <_svfprintf_r+0x4e0>
   830b2:	272d      	movs	r7, #45	; 0x2d
   830b4:	2300      	movs	r3, #0
   830b6:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   830ba:	930a      	str	r3, [sp, #40]	; 0x28
   830bc:	f7ff b895 	b.w	821ea <_svfprintf_r+0x24a>
   830c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   830c2:	461a      	mov	r2, r3
   830c4:	9312      	str	r3, [sp, #72]	; 0x48
   830c6:	3303      	adds	r3, #3
   830c8:	db04      	blt.n	830d4 <_svfprintf_r+0x1134>
   830ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   830cc:	4619      	mov	r1, r3
   830ce:	4291      	cmp	r1, r2
   830d0:	f6bf af5e 	bge.w	82f90 <_svfprintf_r+0xff0>
   830d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   830d6:	3b02      	subs	r3, #2
   830d8:	9311      	str	r3, [sp, #68]	; 0x44
   830da:	9b12      	ldr	r3, [sp, #72]	; 0x48
   830dc:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   830e0:	3b01      	subs	r3, #1
   830e2:	2b00      	cmp	r3, #0
   830e4:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   830e8:	bfb4      	ite	lt
   830ea:	222d      	movlt	r2, #45	; 0x2d
   830ec:	222b      	movge	r2, #43	; 0x2b
   830ee:	931f      	str	r3, [sp, #124]	; 0x7c
   830f0:	bfb8      	it	lt
   830f2:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   830f4:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   830f8:	bfb8      	it	lt
   830fa:	f1c3 0301 	rsblt	r3, r3, #1
   830fe:	2b09      	cmp	r3, #9
   83100:	f340 811f 	ble.w	83342 <_svfprintf_r+0x13a2>
   83104:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   83108:	4601      	mov	r1, r0
   8310a:	4c68      	ldr	r4, [pc, #416]	; (832ac <_svfprintf_r+0x130c>)
   8310c:	e000      	b.n	83110 <_svfprintf_r+0x1170>
   8310e:	4611      	mov	r1, r2
   83110:	fb84 5203 	smull	r5, r2, r4, r3
   83114:	17dd      	asrs	r5, r3, #31
   83116:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   8311a:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   8311e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   83122:	3230      	adds	r2, #48	; 0x30
   83124:	2d09      	cmp	r5, #9
   83126:	f801 2c01 	strb.w	r2, [r1, #-1]
   8312a:	462b      	mov	r3, r5
   8312c:	f101 32ff 	add.w	r2, r1, #4294967295
   83130:	dced      	bgt.n	8310e <_svfprintf_r+0x116e>
   83132:	3330      	adds	r3, #48	; 0x30
   83134:	3902      	subs	r1, #2
   83136:	b2dc      	uxtb	r4, r3
   83138:	4288      	cmp	r0, r1
   8313a:	f802 4c01 	strb.w	r4, [r2, #-1]
   8313e:	f240 8192 	bls.w	83466 <_svfprintf_r+0x14c6>
   83142:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   83146:	4613      	mov	r3, r2
   83148:	e001      	b.n	8314e <_svfprintf_r+0x11ae>
   8314a:	f813 4b01 	ldrb.w	r4, [r3], #1
   8314e:	4283      	cmp	r3, r0
   83150:	f801 4b01 	strb.w	r4, [r1], #1
   83154:	d1f9      	bne.n	8314a <_svfprintf_r+0x11aa>
   83156:	3301      	adds	r3, #1
   83158:	1a9b      	subs	r3, r3, r2
   8315a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   8315e:	4413      	add	r3, r2
   83160:	aa21      	add	r2, sp, #132	; 0x84
   83162:	1a9b      	subs	r3, r3, r2
   83164:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83166:	931b      	str	r3, [sp, #108]	; 0x6c
   83168:	2a01      	cmp	r2, #1
   8316a:	4413      	add	r3, r2
   8316c:	930e      	str	r3, [sp, #56]	; 0x38
   8316e:	f340 8148 	ble.w	83402 <_svfprintf_r+0x1462>
   83172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83174:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83176:	4413      	add	r3, r2
   83178:	930e      	str	r3, [sp, #56]	; 0x38
   8317a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8317e:	9308      	str	r3, [sp, #32]
   83180:	2300      	movs	r3, #0
   83182:	9312      	str	r3, [sp, #72]	; 0x48
   83184:	e714      	b.n	82fb0 <_svfprintf_r+0x1010>
   83186:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83188:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8318a:	f7ff b876 	b.w	8227a <_svfprintf_r+0x2da>
   8318e:	aa25      	add	r2, sp, #148	; 0x94
   83190:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83192:	980c      	ldr	r0, [sp, #48]	; 0x30
   83194:	f002 f808 	bl	851a8 <__ssprint_r>
   83198:	2800      	cmp	r0, #0
   8319a:	f47e afde 	bne.w	8215a <_svfprintf_r+0x1ba>
   8319e:	46c8      	mov	r8, r9
   831a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   831a2:	e4fb      	b.n	82b9c <_svfprintf_r+0xbfc>
   831a4:	4623      	mov	r3, r4
   831a6:	e6e3      	b.n	82f70 <_svfprintf_r+0xfd0>
   831a8:	aa25      	add	r2, sp, #148	; 0x94
   831aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831ac:	980c      	ldr	r0, [sp, #48]	; 0x30
   831ae:	f001 fffb 	bl	851a8 <__ssprint_r>
   831b2:	2800      	cmp	r0, #0
   831b4:	f47e afd1 	bne.w	8215a <_svfprintf_r+0x1ba>
   831b8:	46c8      	mov	r8, r9
   831ba:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   831bc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   831be:	e5d3      	b.n	82d68 <_svfprintf_r+0xdc8>
   831c0:	aa25      	add	r2, sp, #148	; 0x94
   831c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831c4:	980c      	ldr	r0, [sp, #48]	; 0x30
   831c6:	f001 ffef 	bl	851a8 <__ssprint_r>
   831ca:	2800      	cmp	r0, #0
   831cc:	f47e afc5 	bne.w	8215a <_svfprintf_r+0x1ba>
   831d0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   831d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   831d4:	46c8      	mov	r8, r9
   831d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   831d8:	1a9a      	subs	r2, r3, r2
   831da:	e5dd      	b.n	82d98 <_svfprintf_r+0xdf8>
   831dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   831de:	f7ff b8fe 	b.w	823de <_svfprintf_r+0x43e>
   831e2:	aa25      	add	r2, sp, #148	; 0x94
   831e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831e6:	980c      	ldr	r0, [sp, #48]	; 0x30
   831e8:	f001 ffde 	bl	851a8 <__ssprint_r>
   831ec:	2800      	cmp	r0, #0
   831ee:	f47e afb4 	bne.w	8215a <_svfprintf_r+0x1ba>
   831f2:	46c8      	mov	r8, r9
   831f4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   831f6:	e5b0      	b.n	82d5a <_svfprintf_r+0xdba>
   831f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   831fa:	4637      	mov	r7, r6
   831fc:	2b06      	cmp	r3, #6
   831fe:	bf28      	it	cs
   83200:	2306      	movcs	r3, #6
   83202:	960a      	str	r6, [sp, #40]	; 0x28
   83204:	9612      	str	r6, [sp, #72]	; 0x48
   83206:	9308      	str	r3, [sp, #32]
   83208:	940f      	str	r4, [sp, #60]	; 0x3c
   8320a:	f8cd b01c 	str.w	fp, [sp, #28]
   8320e:	930e      	str	r3, [sp, #56]	; 0x38
   83210:	4e27      	ldr	r6, [pc, #156]	; (832b0 <_svfprintf_r+0x1310>)
   83212:	f7fe bfe9 	b.w	821e8 <_svfprintf_r+0x248>
   83216:	2306      	movs	r3, #6
   83218:	930a      	str	r3, [sp, #40]	; 0x28
   8321a:	e663      	b.n	82ee4 <_svfprintf_r+0xf44>
   8321c:	232d      	movs	r3, #45	; 0x2d
   8321e:	461f      	mov	r7, r3
   83220:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83224:	f7ff ba28 	b.w	82678 <_svfprintf_r+0x6d8>
   83228:	2003      	movs	r0, #3
   8322a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8322c:	a923      	add	r1, sp, #140	; 0x8c
   8322e:	e88d 0011 	stmia.w	sp, {r0, r4}
   83232:	9104      	str	r1, [sp, #16]
   83234:	a820      	add	r0, sp, #128	; 0x80
   83236:	a91f      	add	r1, sp, #124	; 0x7c
   83238:	9003      	str	r0, [sp, #12]
   8323a:	9a08      	ldr	r2, [sp, #32]
   8323c:	463b      	mov	r3, r7
   8323e:	9102      	str	r1, [sp, #8]
   83240:	980c      	ldr	r0, [sp, #48]	; 0x30
   83242:	f000 f9d1 	bl	835e8 <_dtoa_r>
   83246:	4625      	mov	r5, r4
   83248:	4606      	mov	r6, r0
   8324a:	1904      	adds	r4, r0, r4
   8324c:	e719      	b.n	83082 <_svfprintf_r+0x10e2>
   8324e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83250:	4d15      	ldr	r5, [pc, #84]	; (832a8 <_svfprintf_r+0x1308>)
   83252:	f7ff bb7e 	b.w	82952 <_svfprintf_r+0x9b2>
   83256:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83258:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8325a:	4413      	add	r3, r2
   8325c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8325e:	930e      	str	r3, [sp, #56]	; 0x38
   83260:	2a00      	cmp	r2, #0
   83262:	f340 80c7 	ble.w	833f4 <_svfprintf_r+0x1454>
   83266:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8326a:	9308      	str	r3, [sp, #32]
   8326c:	2367      	movs	r3, #103	; 0x67
   8326e:	9311      	str	r3, [sp, #68]	; 0x44
   83270:	e69e      	b.n	82fb0 <_svfprintf_r+0x1010>
   83272:	2b00      	cmp	r3, #0
   83274:	f340 80e1 	ble.w	8343a <_svfprintf_r+0x149a>
   83278:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8327a:	2a00      	cmp	r2, #0
   8327c:	f040 80b0 	bne.w	833e0 <_svfprintf_r+0x1440>
   83280:	f01b 0f01 	tst.w	fp, #1
   83284:	f040 80ac 	bne.w	833e0 <_svfprintf_r+0x1440>
   83288:	9308      	str	r3, [sp, #32]
   8328a:	930e      	str	r3, [sp, #56]	; 0x38
   8328c:	e690      	b.n	82fb0 <_svfprintf_r+0x1010>
   8328e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83290:	940f      	str	r4, [sp, #60]	; 0x3c
   83292:	9308      	str	r3, [sp, #32]
   83294:	930e      	str	r3, [sp, #56]	; 0x38
   83296:	900a      	str	r0, [sp, #40]	; 0x28
   83298:	f8cd b01c 	str.w	fp, [sp, #28]
   8329c:	9012      	str	r0, [sp, #72]	; 0x48
   8329e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   832a2:	f7fe bfa1 	b.w	821e8 <_svfprintf_r+0x248>
   832a6:	bf00      	nop
   832a8:	000869c4 	.word	0x000869c4
   832ac:	66666667 	.word	0x66666667
   832b0:	000869a8 	.word	0x000869a8
   832b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   832b6:	2b47      	cmp	r3, #71	; 0x47
   832b8:	f47f ae46 	bne.w	82f48 <_svfprintf_r+0xfa8>
   832bc:	f01b 0f01 	tst.w	fp, #1
   832c0:	f47f aeda 	bne.w	83078 <_svfprintf_r+0x10d8>
   832c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   832c6:	1b9b      	subs	r3, r3, r6
   832c8:	9313      	str	r3, [sp, #76]	; 0x4c
   832ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   832cc:	2b47      	cmp	r3, #71	; 0x47
   832ce:	f43f aef7 	beq.w	830c0 <_svfprintf_r+0x1120>
   832d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   832d4:	9312      	str	r3, [sp, #72]	; 0x48
   832d6:	e700      	b.n	830da <_svfprintf_r+0x113a>
   832d8:	2000      	movs	r0, #0
   832da:	900a      	str	r0, [sp, #40]	; 0x28
   832dc:	f7fe bebc 	b.w	82058 <_svfprintf_r+0xb8>
   832e0:	424f      	negs	r7, r1
   832e2:	3110      	adds	r1, #16
   832e4:	da35      	bge.n	83352 <_svfprintf_r+0x13b2>
   832e6:	2410      	movs	r4, #16
   832e8:	4d6a      	ldr	r5, [pc, #424]	; (83494 <_svfprintf_r+0x14f4>)
   832ea:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   832ee:	e004      	b.n	832fa <_svfprintf_r+0x135a>
   832f0:	f108 0808 	add.w	r8, r8, #8
   832f4:	3f10      	subs	r7, #16
   832f6:	2f10      	cmp	r7, #16
   832f8:	dd2c      	ble.n	83354 <_svfprintf_r+0x13b4>
   832fa:	3301      	adds	r3, #1
   832fc:	3210      	adds	r2, #16
   832fe:	2b07      	cmp	r3, #7
   83300:	9227      	str	r2, [sp, #156]	; 0x9c
   83302:	9326      	str	r3, [sp, #152]	; 0x98
   83304:	f8c8 5000 	str.w	r5, [r8]
   83308:	f8c8 4004 	str.w	r4, [r8, #4]
   8330c:	ddf0      	ble.n	832f0 <_svfprintf_r+0x1350>
   8330e:	aa25      	add	r2, sp, #148	; 0x94
   83310:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83312:	4658      	mov	r0, fp
   83314:	f001 ff48 	bl	851a8 <__ssprint_r>
   83318:	2800      	cmp	r0, #0
   8331a:	f47e af1e 	bne.w	8215a <_svfprintf_r+0x1ba>
   8331e:	46c8      	mov	r8, r9
   83320:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83322:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83324:	e7e6      	b.n	832f4 <_svfprintf_r+0x1354>
   83326:	aa25      	add	r2, sp, #148	; 0x94
   83328:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8332a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8332c:	f001 ff3c 	bl	851a8 <__ssprint_r>
   83330:	2800      	cmp	r0, #0
   83332:	f47e af12 	bne.w	8215a <_svfprintf_r+0x1ba>
   83336:	46c8      	mov	r8, r9
   83338:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8333a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8333c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8333e:	f7ff bbc3 	b.w	82ac8 <_svfprintf_r+0xb28>
   83342:	2230      	movs	r2, #48	; 0x30
   83344:	4413      	add	r3, r2
   83346:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   8334a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   8334e:	ab22      	add	r3, sp, #136	; 0x88
   83350:	e706      	b.n	83160 <_svfprintf_r+0x11c0>
   83352:	4d50      	ldr	r5, [pc, #320]	; (83494 <_svfprintf_r+0x14f4>)
   83354:	3301      	adds	r3, #1
   83356:	443a      	add	r2, r7
   83358:	2b07      	cmp	r3, #7
   8335a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8335e:	9227      	str	r2, [sp, #156]	; 0x9c
   83360:	9326      	str	r3, [sp, #152]	; 0x98
   83362:	f108 0808 	add.w	r8, r8, #8
   83366:	f77f abb2 	ble.w	82ace <_svfprintf_r+0xb2e>
   8336a:	aa25      	add	r2, sp, #148	; 0x94
   8336c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8336e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83370:	f001 ff1a 	bl	851a8 <__ssprint_r>
   83374:	2800      	cmp	r0, #0
   83376:	f47e aef0 	bne.w	8215a <_svfprintf_r+0x1ba>
   8337a:	46c8      	mov	r8, r9
   8337c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8337e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83380:	f7ff bba5 	b.w	82ace <_svfprintf_r+0xb2e>
   83384:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83386:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83388:	4413      	add	r3, r2
   8338a:	930e      	str	r3, [sp, #56]	; 0x38
   8338c:	e76b      	b.n	83266 <_svfprintf_r+0x12c6>
   8338e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83390:	e5ee      	b.n	82f70 <_svfprintf_r+0xfd0>
   83392:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83394:	4d3f      	ldr	r5, [pc, #252]	; (83494 <_svfprintf_r+0x14f4>)
   83396:	e4bb      	b.n	82d10 <_svfprintf_r+0xd70>
   83398:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8339a:	9808      	ldr	r0, [sp, #32]
   8339c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   8339e:	4639      	mov	r1, r7
   833a0:	f002 ff8e 	bl	862c0 <__aeabi_dcmpeq>
   833a4:	2800      	cmp	r0, #0
   833a6:	f47f ae70 	bne.w	8308a <_svfprintf_r+0x10ea>
   833aa:	f1c5 0501 	rsb	r5, r5, #1
   833ae:	951f      	str	r5, [sp, #124]	; 0x7c
   833b0:	442c      	add	r4, r5
   833b2:	e5ca      	b.n	82f4a <_svfprintf_r+0xfaa>
   833b4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   833b6:	4e38      	ldr	r6, [pc, #224]	; (83498 <_svfprintf_r+0x14f8>)
   833b8:	2b00      	cmp	r3, #0
   833ba:	bfbe      	ittt	lt
   833bc:	232d      	movlt	r3, #45	; 0x2d
   833be:	461f      	movlt	r7, r3
   833c0:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   833c4:	f04f 0303 	mov.w	r3, #3
   833c8:	461a      	mov	r2, r3
   833ca:	9308      	str	r3, [sp, #32]
   833cc:	f04f 0300 	mov.w	r3, #0
   833d0:	bfa8      	it	ge
   833d2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   833d6:	4619      	mov	r1, r3
   833d8:	930a      	str	r3, [sp, #40]	; 0x28
   833da:	4b30      	ldr	r3, [pc, #192]	; (8349c <_svfprintf_r+0x14fc>)
   833dc:	f7ff b954 	b.w	82688 <_svfprintf_r+0x6e8>
   833e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   833e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   833e4:	4413      	add	r3, r2
   833e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   833e8:	441a      	add	r2, r3
   833ea:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   833ee:	920e      	str	r2, [sp, #56]	; 0x38
   833f0:	9308      	str	r3, [sp, #32]
   833f2:	e5dd      	b.n	82fb0 <_svfprintf_r+0x1010>
   833f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   833f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   833f8:	f1c3 0301 	rsb	r3, r3, #1
   833fc:	441a      	add	r2, r3
   833fe:	4613      	mov	r3, r2
   83400:	e7c3      	b.n	8338a <_svfprintf_r+0x13ea>
   83402:	f01b 0301 	ands.w	r3, fp, #1
   83406:	9312      	str	r3, [sp, #72]	; 0x48
   83408:	f47f aeb3 	bne.w	83172 <_svfprintf_r+0x11d2>
   8340c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8340e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83412:	9308      	str	r3, [sp, #32]
   83414:	e5cc      	b.n	82fb0 <_svfprintf_r+0x1010>
   83416:	4d1f      	ldr	r5, [pc, #124]	; (83494 <_svfprintf_r+0x14f4>)
   83418:	e43c      	b.n	82c94 <_svfprintf_r+0xcf4>
   8341a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8341c:	4d1d      	ldr	r5, [pc, #116]	; (83494 <_svfprintf_r+0x14f4>)
   8341e:	e491      	b.n	82d44 <_svfprintf_r+0xda4>
   83420:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   83422:	f89a 3001 	ldrb.w	r3, [sl, #1]
   83426:	6828      	ldr	r0, [r5, #0]
   83428:	46a2      	mov	sl, r4
   8342a:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   8342e:	900a      	str	r0, [sp, #40]	; 0x28
   83430:	4628      	mov	r0, r5
   83432:	3004      	adds	r0, #4
   83434:	900f      	str	r0, [sp, #60]	; 0x3c
   83436:	f7fe be0d 	b.w	82054 <_svfprintf_r+0xb4>
   8343a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8343c:	b913      	cbnz	r3, 83444 <_svfprintf_r+0x14a4>
   8343e:	f01b 0f01 	tst.w	fp, #1
   83442:	d002      	beq.n	8344a <_svfprintf_r+0x14aa>
   83444:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83446:	3301      	adds	r3, #1
   83448:	e7cd      	b.n	833e6 <_svfprintf_r+0x1446>
   8344a:	2301      	movs	r3, #1
   8344c:	e71c      	b.n	83288 <_svfprintf_r+0x12e8>
   8344e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83452:	f7ff b980 	b.w	82756 <_svfprintf_r+0x7b6>
   83456:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8345a:	f7ff b93a 	b.w	826d2 <_svfprintf_r+0x732>
   8345e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83462:	f7ff b84f 	b.w	82504 <_svfprintf_r+0x564>
   83466:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   8346a:	e679      	b.n	83160 <_svfprintf_r+0x11c0>
   8346c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83470:	f7ff b9b2 	b.w	827d8 <_svfprintf_r+0x838>
   83474:	f04f 32ff 	mov.w	r2, #4294967295
   83478:	230c      	movs	r3, #12
   8347a:	9209      	str	r2, [sp, #36]	; 0x24
   8347c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8347e:	6013      	str	r3, [r2, #0]
   83480:	f7fe be74 	b.w	8216c <_svfprintf_r+0x1cc>
   83484:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83488:	f7ff b8c4 	b.w	82614 <_svfprintf_r+0x674>
   8348c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83490:	f7ff b878 	b.w	82584 <_svfprintf_r+0x5e4>
   83494:	000869c4 	.word	0x000869c4
   83498:	0008697c 	.word	0x0008697c
   8349c:	00086978 	.word	0x00086978

000834a0 <register_fini>:
   834a0:	4b02      	ldr	r3, [pc, #8]	; (834ac <register_fini+0xc>)
   834a2:	b113      	cbz	r3, 834aa <register_fini+0xa>
   834a4:	4802      	ldr	r0, [pc, #8]	; (834b0 <register_fini+0x10>)
   834a6:	f000 b805 	b.w	834b4 <atexit>
   834aa:	4770      	bx	lr
   834ac:	00000000 	.word	0x00000000
   834b0:	0008442d 	.word	0x0008442d

000834b4 <atexit>:
   834b4:	2300      	movs	r3, #0
   834b6:	4601      	mov	r1, r0
   834b8:	461a      	mov	r2, r3
   834ba:	4618      	mov	r0, r3
   834bc:	f001 befe 	b.w	852bc <__register_exitproc>

000834c0 <quorem>:
   834c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   834c4:	6903      	ldr	r3, [r0, #16]
   834c6:	690f      	ldr	r7, [r1, #16]
   834c8:	b083      	sub	sp, #12
   834ca:	429f      	cmp	r7, r3
   834cc:	f300 8088 	bgt.w	835e0 <quorem+0x120>
   834d0:	3f01      	subs	r7, #1
   834d2:	f101 0614 	add.w	r6, r1, #20
   834d6:	f100 0a14 	add.w	sl, r0, #20
   834da:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   834de:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   834e2:	3301      	adds	r3, #1
   834e4:	fbb2 f8f3 	udiv	r8, r2, r3
   834e8:	00bb      	lsls	r3, r7, #2
   834ea:	9300      	str	r3, [sp, #0]
   834ec:	eb06 0903 	add.w	r9, r6, r3
   834f0:	4453      	add	r3, sl
   834f2:	9301      	str	r3, [sp, #4]
   834f4:	f1b8 0f00 	cmp.w	r8, #0
   834f8:	d03b      	beq.n	83572 <quorem+0xb2>
   834fa:	2300      	movs	r3, #0
   834fc:	46b4      	mov	ip, r6
   834fe:	461c      	mov	r4, r3
   83500:	46d6      	mov	lr, sl
   83502:	f85c 2b04 	ldr.w	r2, [ip], #4
   83506:	f8de 5000 	ldr.w	r5, [lr]
   8350a:	fa1f fb82 	uxth.w	fp, r2
   8350e:	fb08 330b 	mla	r3, r8, fp, r3
   83512:	0c12      	lsrs	r2, r2, #16
   83514:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   83518:	fb08 bb02 	mla	fp, r8, r2, fp
   8351c:	b29a      	uxth	r2, r3
   8351e:	1aa2      	subs	r2, r4, r2
   83520:	b2ab      	uxth	r3, r5
   83522:	fa1f f48b 	uxth.w	r4, fp
   83526:	441a      	add	r2, r3
   83528:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   8352c:	eb04 4422 	add.w	r4, r4, r2, asr #16
   83530:	b292      	uxth	r2, r2
   83532:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   83536:	45e1      	cmp	r9, ip
   83538:	f84e 2b04 	str.w	r2, [lr], #4
   8353c:	ea4f 4424 	mov.w	r4, r4, asr #16
   83540:	ea4f 431b 	mov.w	r3, fp, lsr #16
   83544:	d2dd      	bcs.n	83502 <quorem+0x42>
   83546:	9b00      	ldr	r3, [sp, #0]
   83548:	f85a 3003 	ldr.w	r3, [sl, r3]
   8354c:	b98b      	cbnz	r3, 83572 <quorem+0xb2>
   8354e:	9c01      	ldr	r4, [sp, #4]
   83550:	1f23      	subs	r3, r4, #4
   83552:	459a      	cmp	sl, r3
   83554:	d20c      	bcs.n	83570 <quorem+0xb0>
   83556:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8355a:	b94b      	cbnz	r3, 83570 <quorem+0xb0>
   8355c:	f1a4 0308 	sub.w	r3, r4, #8
   83560:	e002      	b.n	83568 <quorem+0xa8>
   83562:	681a      	ldr	r2, [r3, #0]
   83564:	3b04      	subs	r3, #4
   83566:	b91a      	cbnz	r2, 83570 <quorem+0xb0>
   83568:	459a      	cmp	sl, r3
   8356a:	f107 37ff 	add.w	r7, r7, #4294967295
   8356e:	d3f8      	bcc.n	83562 <quorem+0xa2>
   83570:	6107      	str	r7, [r0, #16]
   83572:	4604      	mov	r4, r0
   83574:	f001 fd08 	bl	84f88 <__mcmp>
   83578:	2800      	cmp	r0, #0
   8357a:	db2d      	blt.n	835d8 <quorem+0x118>
   8357c:	4655      	mov	r5, sl
   8357e:	2300      	movs	r3, #0
   83580:	f108 0801 	add.w	r8, r8, #1
   83584:	f856 1b04 	ldr.w	r1, [r6], #4
   83588:	6828      	ldr	r0, [r5, #0]
   8358a:	b28a      	uxth	r2, r1
   8358c:	1a9a      	subs	r2, r3, r2
   8358e:	0c0b      	lsrs	r3, r1, #16
   83590:	b281      	uxth	r1, r0
   83592:	440a      	add	r2, r1
   83594:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83598:	eb03 4322 	add.w	r3, r3, r2, asr #16
   8359c:	b292      	uxth	r2, r2
   8359e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   835a2:	45b1      	cmp	r9, r6
   835a4:	f845 2b04 	str.w	r2, [r5], #4
   835a8:	ea4f 4323 	mov.w	r3, r3, asr #16
   835ac:	d2ea      	bcs.n	83584 <quorem+0xc4>
   835ae:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   835b2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   835b6:	b97a      	cbnz	r2, 835d8 <quorem+0x118>
   835b8:	1f1a      	subs	r2, r3, #4
   835ba:	4592      	cmp	sl, r2
   835bc:	d20b      	bcs.n	835d6 <quorem+0x116>
   835be:	f853 2c04 	ldr.w	r2, [r3, #-4]
   835c2:	b942      	cbnz	r2, 835d6 <quorem+0x116>
   835c4:	3b08      	subs	r3, #8
   835c6:	e002      	b.n	835ce <quorem+0x10e>
   835c8:	681a      	ldr	r2, [r3, #0]
   835ca:	3b04      	subs	r3, #4
   835cc:	b91a      	cbnz	r2, 835d6 <quorem+0x116>
   835ce:	459a      	cmp	sl, r3
   835d0:	f107 37ff 	add.w	r7, r7, #4294967295
   835d4:	d3f8      	bcc.n	835c8 <quorem+0x108>
   835d6:	6127      	str	r7, [r4, #16]
   835d8:	4640      	mov	r0, r8
   835da:	b003      	add	sp, #12
   835dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   835e0:	2000      	movs	r0, #0
   835e2:	b003      	add	sp, #12
   835e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000835e8 <_dtoa_r>:
   835e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   835ec:	6c05      	ldr	r5, [r0, #64]	; 0x40
   835ee:	b09b      	sub	sp, #108	; 0x6c
   835f0:	4604      	mov	r4, r0
   835f2:	4692      	mov	sl, r2
   835f4:	469b      	mov	fp, r3
   835f6:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   835f8:	b14d      	cbz	r5, 8360e <_dtoa_r+0x26>
   835fa:	2301      	movs	r3, #1
   835fc:	6c42      	ldr	r2, [r0, #68]	; 0x44
   835fe:	4629      	mov	r1, r5
   83600:	4093      	lsls	r3, r2
   83602:	60ab      	str	r3, [r5, #8]
   83604:	606a      	str	r2, [r5, #4]
   83606:	f001 fae7 	bl	84bd8 <_Bfree>
   8360a:	2300      	movs	r3, #0
   8360c:	6423      	str	r3, [r4, #64]	; 0x40
   8360e:	f1bb 0f00 	cmp.w	fp, #0
   83612:	465d      	mov	r5, fp
   83614:	db35      	blt.n	83682 <_dtoa_r+0x9a>
   83616:	2300      	movs	r3, #0
   83618:	6033      	str	r3, [r6, #0]
   8361a:	4b9d      	ldr	r3, [pc, #628]	; (83890 <_dtoa_r+0x2a8>)
   8361c:	43ab      	bics	r3, r5
   8361e:	d015      	beq.n	8364c <_dtoa_r+0x64>
   83620:	2200      	movs	r2, #0
   83622:	2300      	movs	r3, #0
   83624:	4650      	mov	r0, sl
   83626:	4659      	mov	r1, fp
   83628:	f002 fe4a 	bl	862c0 <__aeabi_dcmpeq>
   8362c:	4680      	mov	r8, r0
   8362e:	2800      	cmp	r0, #0
   83630:	d02d      	beq.n	8368e <_dtoa_r+0xa6>
   83632:	2301      	movs	r3, #1
   83634:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83636:	6013      	str	r3, [r2, #0]
   83638:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8363a:	2b00      	cmp	r3, #0
   8363c:	f000 80bd 	beq.w	837ba <_dtoa_r+0x1d2>
   83640:	4894      	ldr	r0, [pc, #592]	; (83894 <_dtoa_r+0x2ac>)
   83642:	6018      	str	r0, [r3, #0]
   83644:	3801      	subs	r0, #1
   83646:	b01b      	add	sp, #108	; 0x6c
   83648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8364c:	f242 730f 	movw	r3, #9999	; 0x270f
   83650:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83652:	6013      	str	r3, [r2, #0]
   83654:	f1ba 0f00 	cmp.w	sl, #0
   83658:	d10d      	bne.n	83676 <_dtoa_r+0x8e>
   8365a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   8365e:	b955      	cbnz	r5, 83676 <_dtoa_r+0x8e>
   83660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83662:	488d      	ldr	r0, [pc, #564]	; (83898 <_dtoa_r+0x2b0>)
   83664:	2b00      	cmp	r3, #0
   83666:	d0ee      	beq.n	83646 <_dtoa_r+0x5e>
   83668:	f100 0308 	add.w	r3, r0, #8
   8366c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   8366e:	6013      	str	r3, [r2, #0]
   83670:	b01b      	add	sp, #108	; 0x6c
   83672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83676:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83678:	4888      	ldr	r0, [pc, #544]	; (8389c <_dtoa_r+0x2b4>)
   8367a:	2b00      	cmp	r3, #0
   8367c:	d0e3      	beq.n	83646 <_dtoa_r+0x5e>
   8367e:	1cc3      	adds	r3, r0, #3
   83680:	e7f4      	b.n	8366c <_dtoa_r+0x84>
   83682:	2301      	movs	r3, #1
   83684:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   83688:	6033      	str	r3, [r6, #0]
   8368a:	46ab      	mov	fp, r5
   8368c:	e7c5      	b.n	8361a <_dtoa_r+0x32>
   8368e:	aa18      	add	r2, sp, #96	; 0x60
   83690:	ab19      	add	r3, sp, #100	; 0x64
   83692:	9201      	str	r2, [sp, #4]
   83694:	9300      	str	r3, [sp, #0]
   83696:	4652      	mov	r2, sl
   83698:	465b      	mov	r3, fp
   8369a:	4620      	mov	r0, r4
   8369c:	f001 fd1e 	bl	850dc <__d2b>
   836a0:	0d2b      	lsrs	r3, r5, #20
   836a2:	4681      	mov	r9, r0
   836a4:	d071      	beq.n	8378a <_dtoa_r+0x1a2>
   836a6:	4650      	mov	r0, sl
   836a8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   836ac:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   836b0:	9f18      	ldr	r7, [sp, #96]	; 0x60
   836b2:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   836b6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   836ba:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   836be:	2200      	movs	r2, #0
   836c0:	4b77      	ldr	r3, [pc, #476]	; (838a0 <_dtoa_r+0x2b8>)
   836c2:	f002 f9e1 	bl	85a88 <__aeabi_dsub>
   836c6:	a36c      	add	r3, pc, #432	; (adr r3, 83878 <_dtoa_r+0x290>)
   836c8:	e9d3 2300 	ldrd	r2, r3, [r3]
   836cc:	f002 fb90 	bl	85df0 <__aeabi_dmul>
   836d0:	a36b      	add	r3, pc, #428	; (adr r3, 83880 <_dtoa_r+0x298>)
   836d2:	e9d3 2300 	ldrd	r2, r3, [r3]
   836d6:	f002 f9d9 	bl	85a8c <__adddf3>
   836da:	e9cd 0102 	strd	r0, r1, [sp, #8]
   836de:	4630      	mov	r0, r6
   836e0:	f002 fb20 	bl	85d24 <__aeabi_i2d>
   836e4:	a368      	add	r3, pc, #416	; (adr r3, 83888 <_dtoa_r+0x2a0>)
   836e6:	e9d3 2300 	ldrd	r2, r3, [r3]
   836ea:	f002 fb81 	bl	85df0 <__aeabi_dmul>
   836ee:	4602      	mov	r2, r0
   836f0:	460b      	mov	r3, r1
   836f2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   836f6:	f002 f9c9 	bl	85a8c <__adddf3>
   836fa:	e9cd 0104 	strd	r0, r1, [sp, #16]
   836fe:	f002 fe27 	bl	86350 <__aeabi_d2iz>
   83702:	2200      	movs	r2, #0
   83704:	9002      	str	r0, [sp, #8]
   83706:	2300      	movs	r3, #0
   83708:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8370c:	f002 fde2 	bl	862d4 <__aeabi_dcmplt>
   83710:	2800      	cmp	r0, #0
   83712:	f040 816d 	bne.w	839f0 <_dtoa_r+0x408>
   83716:	9d02      	ldr	r5, [sp, #8]
   83718:	2d16      	cmp	r5, #22
   8371a:	f200 8157 	bhi.w	839cc <_dtoa_r+0x3e4>
   8371e:	4961      	ldr	r1, [pc, #388]	; (838a4 <_dtoa_r+0x2bc>)
   83720:	4652      	mov	r2, sl
   83722:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   83726:	465b      	mov	r3, fp
   83728:	e9d1 0100 	ldrd	r0, r1, [r1]
   8372c:	f002 fdf0 	bl	86310 <__aeabi_dcmpgt>
   83730:	2800      	cmp	r0, #0
   83732:	f000 81be 	beq.w	83ab2 <_dtoa_r+0x4ca>
   83736:	1e6b      	subs	r3, r5, #1
   83738:	9302      	str	r3, [sp, #8]
   8373a:	2300      	movs	r3, #0
   8373c:	930e      	str	r3, [sp, #56]	; 0x38
   8373e:	1bbf      	subs	r7, r7, r6
   83740:	1e7b      	subs	r3, r7, #1
   83742:	9308      	str	r3, [sp, #32]
   83744:	f100 814e 	bmi.w	839e4 <_dtoa_r+0x3fc>
   83748:	2300      	movs	r3, #0
   8374a:	930a      	str	r3, [sp, #40]	; 0x28
   8374c:	9b02      	ldr	r3, [sp, #8]
   8374e:	2b00      	cmp	r3, #0
   83750:	f2c0 813f 	blt.w	839d2 <_dtoa_r+0x3ea>
   83754:	9a08      	ldr	r2, [sp, #32]
   83756:	930d      	str	r3, [sp, #52]	; 0x34
   83758:	4611      	mov	r1, r2
   8375a:	4419      	add	r1, r3
   8375c:	2300      	movs	r3, #0
   8375e:	9108      	str	r1, [sp, #32]
   83760:	930c      	str	r3, [sp, #48]	; 0x30
   83762:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83764:	2b09      	cmp	r3, #9
   83766:	d82a      	bhi.n	837be <_dtoa_r+0x1d6>
   83768:	2b05      	cmp	r3, #5
   8376a:	f340 8658 	ble.w	8441e <_dtoa_r+0xe36>
   8376e:	2500      	movs	r5, #0
   83770:	3b04      	subs	r3, #4
   83772:	9324      	str	r3, [sp, #144]	; 0x90
   83774:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83776:	3b02      	subs	r3, #2
   83778:	2b03      	cmp	r3, #3
   8377a:	f200 863f 	bhi.w	843fc <_dtoa_r+0xe14>
   8377e:	e8df f013 	tbh	[pc, r3, lsl #1]
   83782:	03ce      	.short	0x03ce
   83784:	03d902c3 	.word	0x03d902c3
   83788:	045b      	.short	0x045b
   8378a:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8378c:	9e19      	ldr	r6, [sp, #100]	; 0x64
   8378e:	443e      	add	r6, r7
   83790:	f206 4332 	addw	r3, r6, #1074	; 0x432
   83794:	2b20      	cmp	r3, #32
   83796:	f340 8187 	ble.w	83aa8 <_dtoa_r+0x4c0>
   8379a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   8379e:	f206 4012 	addw	r0, r6, #1042	; 0x412
   837a2:	409d      	lsls	r5, r3
   837a4:	fa2a f000 	lsr.w	r0, sl, r0
   837a8:	4328      	orrs	r0, r5
   837aa:	f002 faab 	bl	85d04 <__aeabi_ui2d>
   837ae:	2301      	movs	r3, #1
   837b0:	3e01      	subs	r6, #1
   837b2:	9314      	str	r3, [sp, #80]	; 0x50
   837b4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   837b8:	e781      	b.n	836be <_dtoa_r+0xd6>
   837ba:	483b      	ldr	r0, [pc, #236]	; (838a8 <_dtoa_r+0x2c0>)
   837bc:	e743      	b.n	83646 <_dtoa_r+0x5e>
   837be:	2100      	movs	r1, #0
   837c0:	4620      	mov	r0, r4
   837c2:	6461      	str	r1, [r4, #68]	; 0x44
   837c4:	9125      	str	r1, [sp, #148]	; 0x94
   837c6:	f001 f9e1 	bl	84b8c <_Balloc>
   837ca:	f04f 33ff 	mov.w	r3, #4294967295
   837ce:	9307      	str	r3, [sp, #28]
   837d0:	930f      	str	r3, [sp, #60]	; 0x3c
   837d2:	2301      	movs	r3, #1
   837d4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   837d6:	9004      	str	r0, [sp, #16]
   837d8:	6420      	str	r0, [r4, #64]	; 0x40
   837da:	9224      	str	r2, [sp, #144]	; 0x90
   837dc:	930b      	str	r3, [sp, #44]	; 0x2c
   837de:	9b19      	ldr	r3, [sp, #100]	; 0x64
   837e0:	2b00      	cmp	r3, #0
   837e2:	f2c0 80d3 	blt.w	8398c <_dtoa_r+0x3a4>
   837e6:	9a02      	ldr	r2, [sp, #8]
   837e8:	2a0e      	cmp	r2, #14
   837ea:	f300 80cf 	bgt.w	8398c <_dtoa_r+0x3a4>
   837ee:	4b2d      	ldr	r3, [pc, #180]	; (838a4 <_dtoa_r+0x2bc>)
   837f0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   837f4:	e9d3 2300 	ldrd	r2, r3, [r3]
   837f8:	e9cd 2308 	strd	r2, r3, [sp, #32]
   837fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
   837fe:	2b00      	cmp	r3, #0
   83800:	f2c0 83b4 	blt.w	83f6c <_dtoa_r+0x984>
   83804:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   83808:	4650      	mov	r0, sl
   8380a:	462a      	mov	r2, r5
   8380c:	4633      	mov	r3, r6
   8380e:	4659      	mov	r1, fp
   83810:	f002 fc18 	bl	86044 <__aeabi_ddiv>
   83814:	f002 fd9c 	bl	86350 <__aeabi_d2iz>
   83818:	4680      	mov	r8, r0
   8381a:	f002 fa83 	bl	85d24 <__aeabi_i2d>
   8381e:	462a      	mov	r2, r5
   83820:	4633      	mov	r3, r6
   83822:	f002 fae5 	bl	85df0 <__aeabi_dmul>
   83826:	4602      	mov	r2, r0
   83828:	460b      	mov	r3, r1
   8382a:	4650      	mov	r0, sl
   8382c:	4659      	mov	r1, fp
   8382e:	f002 f92b 	bl	85a88 <__aeabi_dsub>
   83832:	9e07      	ldr	r6, [sp, #28]
   83834:	9f04      	ldr	r7, [sp, #16]
   83836:	f108 0530 	add.w	r5, r8, #48	; 0x30
   8383a:	2e01      	cmp	r6, #1
   8383c:	703d      	strb	r5, [r7, #0]
   8383e:	4602      	mov	r2, r0
   83840:	460b      	mov	r3, r1
   83842:	f107 0501 	add.w	r5, r7, #1
   83846:	d064      	beq.n	83912 <_dtoa_r+0x32a>
   83848:	2200      	movs	r2, #0
   8384a:	4b18      	ldr	r3, [pc, #96]	; (838ac <_dtoa_r+0x2c4>)
   8384c:	f002 fad0 	bl	85df0 <__aeabi_dmul>
   83850:	2200      	movs	r2, #0
   83852:	2300      	movs	r3, #0
   83854:	4606      	mov	r6, r0
   83856:	460f      	mov	r7, r1
   83858:	f002 fd32 	bl	862c0 <__aeabi_dcmpeq>
   8385c:	2800      	cmp	r0, #0
   8385e:	f040 8082 	bne.w	83966 <_dtoa_r+0x37e>
   83862:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83866:	f04f 0a00 	mov.w	sl, #0
   8386a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   8386e:	f04f 0b00 	mov.w	fp, #0
   83872:	940b      	str	r4, [sp, #44]	; 0x2c
   83874:	e029      	b.n	838ca <_dtoa_r+0x2e2>
   83876:	bf00      	nop
   83878:	636f4361 	.word	0x636f4361
   8387c:	3fd287a7 	.word	0x3fd287a7
   83880:	8b60c8b3 	.word	0x8b60c8b3
   83884:	3fc68a28 	.word	0x3fc68a28
   83888:	509f79fb 	.word	0x509f79fb
   8388c:	3fd34413 	.word	0x3fd34413
   83890:	7ff00000 	.word	0x7ff00000
   83894:	000869b1 	.word	0x000869b1
   83898:	000869d4 	.word	0x000869d4
   8389c:	000869e0 	.word	0x000869e0
   838a0:	3ff80000 	.word	0x3ff80000
   838a4:	00086a20 	.word	0x00086a20
   838a8:	000869b0 	.word	0x000869b0
   838ac:	40240000 	.word	0x40240000
   838b0:	2200      	movs	r2, #0
   838b2:	4b81      	ldr	r3, [pc, #516]	; (83ab8 <_dtoa_r+0x4d0>)
   838b4:	f002 fa9c 	bl	85df0 <__aeabi_dmul>
   838b8:	4652      	mov	r2, sl
   838ba:	465b      	mov	r3, fp
   838bc:	4606      	mov	r6, r0
   838be:	460f      	mov	r7, r1
   838c0:	f002 fcfe 	bl	862c0 <__aeabi_dcmpeq>
   838c4:	2800      	cmp	r0, #0
   838c6:	f040 83ba 	bne.w	8403e <_dtoa_r+0xa56>
   838ca:	4642      	mov	r2, r8
   838cc:	464b      	mov	r3, r9
   838ce:	4630      	mov	r0, r6
   838d0:	4639      	mov	r1, r7
   838d2:	f002 fbb7 	bl	86044 <__aeabi_ddiv>
   838d6:	f002 fd3b 	bl	86350 <__aeabi_d2iz>
   838da:	4604      	mov	r4, r0
   838dc:	f002 fa22 	bl	85d24 <__aeabi_i2d>
   838e0:	4642      	mov	r2, r8
   838e2:	464b      	mov	r3, r9
   838e4:	f002 fa84 	bl	85df0 <__aeabi_dmul>
   838e8:	4602      	mov	r2, r0
   838ea:	460b      	mov	r3, r1
   838ec:	4630      	mov	r0, r6
   838ee:	4639      	mov	r1, r7
   838f0:	f002 f8ca 	bl	85a88 <__aeabi_dsub>
   838f4:	f104 0630 	add.w	r6, r4, #48	; 0x30
   838f8:	f805 6b01 	strb.w	r6, [r5], #1
   838fc:	9e04      	ldr	r6, [sp, #16]
   838fe:	9f07      	ldr	r7, [sp, #28]
   83900:	1bae      	subs	r6, r5, r6
   83902:	42be      	cmp	r6, r7
   83904:	4602      	mov	r2, r0
   83906:	460b      	mov	r3, r1
   83908:	d1d2      	bne.n	838b0 <_dtoa_r+0x2c8>
   8390a:	46a0      	mov	r8, r4
   8390c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83910:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83912:	4610      	mov	r0, r2
   83914:	4619      	mov	r1, r3
   83916:	f002 f8b9 	bl	85a8c <__adddf3>
   8391a:	4606      	mov	r6, r0
   8391c:	460f      	mov	r7, r1
   8391e:	4602      	mov	r2, r0
   83920:	460b      	mov	r3, r1
   83922:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83926:	f002 fcd5 	bl	862d4 <__aeabi_dcmplt>
   8392a:	b948      	cbnz	r0, 83940 <_dtoa_r+0x358>
   8392c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83930:	4632      	mov	r2, r6
   83932:	463b      	mov	r3, r7
   83934:	f002 fcc4 	bl	862c0 <__aeabi_dcmpeq>
   83938:	b1a8      	cbz	r0, 83966 <_dtoa_r+0x37e>
   8393a:	f018 0f01 	tst.w	r8, #1
   8393e:	d012      	beq.n	83966 <_dtoa_r+0x37e>
   83940:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83944:	1e6b      	subs	r3, r5, #1
   83946:	9a04      	ldr	r2, [sp, #16]
   83948:	e004      	b.n	83954 <_dtoa_r+0x36c>
   8394a:	429a      	cmp	r2, r3
   8394c:	f000 8402 	beq.w	84154 <_dtoa_r+0xb6c>
   83950:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   83954:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   83958:	f103 0501 	add.w	r5, r3, #1
   8395c:	d0f5      	beq.n	8394a <_dtoa_r+0x362>
   8395e:	f108 0801 	add.w	r8, r8, #1
   83962:	f883 8000 	strb.w	r8, [r3]
   83966:	4649      	mov	r1, r9
   83968:	4620      	mov	r0, r4
   8396a:	f001 f935 	bl	84bd8 <_Bfree>
   8396e:	2200      	movs	r2, #0
   83970:	9b02      	ldr	r3, [sp, #8]
   83972:	702a      	strb	r2, [r5, #0]
   83974:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83976:	3301      	adds	r3, #1
   83978:	6013      	str	r3, [r2, #0]
   8397a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8397c:	2b00      	cmp	r3, #0
   8397e:	f000 839f 	beq.w	840c0 <_dtoa_r+0xad8>
   83982:	9804      	ldr	r0, [sp, #16]
   83984:	601d      	str	r5, [r3, #0]
   83986:	b01b      	add	sp, #108	; 0x6c
   83988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8398c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8398e:	2a00      	cmp	r2, #0
   83990:	d03e      	beq.n	83a10 <_dtoa_r+0x428>
   83992:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83994:	2a01      	cmp	r2, #1
   83996:	f340 8311 	ble.w	83fbc <_dtoa_r+0x9d4>
   8399a:	9b07      	ldr	r3, [sp, #28]
   8399c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8399e:	1e5f      	subs	r7, r3, #1
   839a0:	42ba      	cmp	r2, r7
   839a2:	f2c0 8390 	blt.w	840c6 <_dtoa_r+0xade>
   839a6:	1bd7      	subs	r7, r2, r7
   839a8:	9b07      	ldr	r3, [sp, #28]
   839aa:	2b00      	cmp	r3, #0
   839ac:	f2c0 848c 	blt.w	842c8 <_dtoa_r+0xce0>
   839b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   839b2:	9b07      	ldr	r3, [sp, #28]
   839b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   839b6:	2101      	movs	r1, #1
   839b8:	441a      	add	r2, r3
   839ba:	920a      	str	r2, [sp, #40]	; 0x28
   839bc:	9a08      	ldr	r2, [sp, #32]
   839be:	4620      	mov	r0, r4
   839c0:	441a      	add	r2, r3
   839c2:	9208      	str	r2, [sp, #32]
   839c4:	f001 f9a4 	bl	84d10 <__i2b>
   839c8:	4606      	mov	r6, r0
   839ca:	e023      	b.n	83a14 <_dtoa_r+0x42c>
   839cc:	2301      	movs	r3, #1
   839ce:	930e      	str	r3, [sp, #56]	; 0x38
   839d0:	e6b5      	b.n	8373e <_dtoa_r+0x156>
   839d2:	2300      	movs	r3, #0
   839d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   839d6:	930d      	str	r3, [sp, #52]	; 0x34
   839d8:	9b02      	ldr	r3, [sp, #8]
   839da:	1ad2      	subs	r2, r2, r3
   839dc:	425b      	negs	r3, r3
   839de:	920a      	str	r2, [sp, #40]	; 0x28
   839e0:	930c      	str	r3, [sp, #48]	; 0x30
   839e2:	e6be      	b.n	83762 <_dtoa_r+0x17a>
   839e4:	f1c7 0301 	rsb	r3, r7, #1
   839e8:	930a      	str	r3, [sp, #40]	; 0x28
   839ea:	2300      	movs	r3, #0
   839ec:	9308      	str	r3, [sp, #32]
   839ee:	e6ad      	b.n	8374c <_dtoa_r+0x164>
   839f0:	9d02      	ldr	r5, [sp, #8]
   839f2:	4628      	mov	r0, r5
   839f4:	f002 f996 	bl	85d24 <__aeabi_i2d>
   839f8:	4602      	mov	r2, r0
   839fa:	460b      	mov	r3, r1
   839fc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83a00:	f002 fc5e 	bl	862c0 <__aeabi_dcmpeq>
   83a04:	2800      	cmp	r0, #0
   83a06:	f47f ae86 	bne.w	83716 <_dtoa_r+0x12e>
   83a0a:	1e6b      	subs	r3, r5, #1
   83a0c:	9302      	str	r3, [sp, #8]
   83a0e:	e682      	b.n	83716 <_dtoa_r+0x12e>
   83a10:	ad0a      	add	r5, sp, #40	; 0x28
   83a12:	cde0      	ldmia	r5, {r5, r6, r7}
   83a14:	2d00      	cmp	r5, #0
   83a16:	dd0c      	ble.n	83a32 <_dtoa_r+0x44a>
   83a18:	9908      	ldr	r1, [sp, #32]
   83a1a:	2900      	cmp	r1, #0
   83a1c:	460b      	mov	r3, r1
   83a1e:	dd08      	ble.n	83a32 <_dtoa_r+0x44a>
   83a20:	42a9      	cmp	r1, r5
   83a22:	bfa8      	it	ge
   83a24:	462b      	movge	r3, r5
   83a26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83a28:	1aed      	subs	r5, r5, r3
   83a2a:	1ad2      	subs	r2, r2, r3
   83a2c:	1acb      	subs	r3, r1, r3
   83a2e:	920a      	str	r2, [sp, #40]	; 0x28
   83a30:	9308      	str	r3, [sp, #32]
   83a32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83a34:	b1d3      	cbz	r3, 83a6c <_dtoa_r+0x484>
   83a36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83a38:	2b00      	cmp	r3, #0
   83a3a:	f000 82b8 	beq.w	83fae <_dtoa_r+0x9c6>
   83a3e:	2f00      	cmp	r7, #0
   83a40:	dd10      	ble.n	83a64 <_dtoa_r+0x47c>
   83a42:	4631      	mov	r1, r6
   83a44:	463a      	mov	r2, r7
   83a46:	4620      	mov	r0, r4
   83a48:	f001 f9fe 	bl	84e48 <__pow5mult>
   83a4c:	464a      	mov	r2, r9
   83a4e:	4601      	mov	r1, r0
   83a50:	4606      	mov	r6, r0
   83a52:	4620      	mov	r0, r4
   83a54:	f001 f966 	bl	84d24 <__multiply>
   83a58:	4603      	mov	r3, r0
   83a5a:	4649      	mov	r1, r9
   83a5c:	4620      	mov	r0, r4
   83a5e:	4699      	mov	r9, r3
   83a60:	f001 f8ba 	bl	84bd8 <_Bfree>
   83a64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83a66:	1bda      	subs	r2, r3, r7
   83a68:	f040 82a2 	bne.w	83fb0 <_dtoa_r+0x9c8>
   83a6c:	2101      	movs	r1, #1
   83a6e:	4620      	mov	r0, r4
   83a70:	f001 f94e 	bl	84d10 <__i2b>
   83a74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83a76:	4680      	mov	r8, r0
   83a78:	2b00      	cmp	r3, #0
   83a7a:	dd1f      	ble.n	83abc <_dtoa_r+0x4d4>
   83a7c:	4601      	mov	r1, r0
   83a7e:	461a      	mov	r2, r3
   83a80:	4620      	mov	r0, r4
   83a82:	f001 f9e1 	bl	84e48 <__pow5mult>
   83a86:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83a88:	4680      	mov	r8, r0
   83a8a:	2b01      	cmp	r3, #1
   83a8c:	f340 8255 	ble.w	83f3a <_dtoa_r+0x952>
   83a90:	2300      	movs	r3, #0
   83a92:	930c      	str	r3, [sp, #48]	; 0x30
   83a94:	f8d8 3010 	ldr.w	r3, [r8, #16]
   83a98:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   83a9c:	6918      	ldr	r0, [r3, #16]
   83a9e:	f001 f8e7 	bl	84c70 <__hi0bits>
   83aa2:	f1c0 0020 	rsb	r0, r0, #32
   83aa6:	e013      	b.n	83ad0 <_dtoa_r+0x4e8>
   83aa8:	f1c3 0520 	rsb	r5, r3, #32
   83aac:	fa0a f005 	lsl.w	r0, sl, r5
   83ab0:	e67b      	b.n	837aa <_dtoa_r+0x1c2>
   83ab2:	900e      	str	r0, [sp, #56]	; 0x38
   83ab4:	e643      	b.n	8373e <_dtoa_r+0x156>
   83ab6:	bf00      	nop
   83ab8:	40240000 	.word	0x40240000
   83abc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83abe:	2b01      	cmp	r3, #1
   83ac0:	f340 8285 	ble.w	83fce <_dtoa_r+0x9e6>
   83ac4:	2300      	movs	r3, #0
   83ac6:	930c      	str	r3, [sp, #48]	; 0x30
   83ac8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83aca:	2001      	movs	r0, #1
   83acc:	2b00      	cmp	r3, #0
   83ace:	d1e1      	bne.n	83a94 <_dtoa_r+0x4ac>
   83ad0:	9a08      	ldr	r2, [sp, #32]
   83ad2:	4410      	add	r0, r2
   83ad4:	f010 001f 	ands.w	r0, r0, #31
   83ad8:	f000 80a1 	beq.w	83c1e <_dtoa_r+0x636>
   83adc:	f1c0 0320 	rsb	r3, r0, #32
   83ae0:	2b04      	cmp	r3, #4
   83ae2:	f340 8486 	ble.w	843f2 <_dtoa_r+0xe0a>
   83ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ae8:	f1c0 001c 	rsb	r0, r0, #28
   83aec:	4403      	add	r3, r0
   83aee:	930a      	str	r3, [sp, #40]	; 0x28
   83af0:	4613      	mov	r3, r2
   83af2:	4403      	add	r3, r0
   83af4:	4405      	add	r5, r0
   83af6:	9308      	str	r3, [sp, #32]
   83af8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83afa:	2b00      	cmp	r3, #0
   83afc:	dd05      	ble.n	83b0a <_dtoa_r+0x522>
   83afe:	4649      	mov	r1, r9
   83b00:	461a      	mov	r2, r3
   83b02:	4620      	mov	r0, r4
   83b04:	f001 f9f0 	bl	84ee8 <__lshift>
   83b08:	4681      	mov	r9, r0
   83b0a:	9b08      	ldr	r3, [sp, #32]
   83b0c:	2b00      	cmp	r3, #0
   83b0e:	dd05      	ble.n	83b1c <_dtoa_r+0x534>
   83b10:	4641      	mov	r1, r8
   83b12:	461a      	mov	r2, r3
   83b14:	4620      	mov	r0, r4
   83b16:	f001 f9e7 	bl	84ee8 <__lshift>
   83b1a:	4680      	mov	r8, r0
   83b1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83b1e:	2b00      	cmp	r3, #0
   83b20:	f040 8086 	bne.w	83c30 <_dtoa_r+0x648>
   83b24:	9b07      	ldr	r3, [sp, #28]
   83b26:	2b00      	cmp	r3, #0
   83b28:	f340 8264 	ble.w	83ff4 <_dtoa_r+0xa0c>
   83b2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83b2e:	2b00      	cmp	r3, #0
   83b30:	f000 8098 	beq.w	83c64 <_dtoa_r+0x67c>
   83b34:	2d00      	cmp	r5, #0
   83b36:	dd05      	ble.n	83b44 <_dtoa_r+0x55c>
   83b38:	4631      	mov	r1, r6
   83b3a:	462a      	mov	r2, r5
   83b3c:	4620      	mov	r0, r4
   83b3e:	f001 f9d3 	bl	84ee8 <__lshift>
   83b42:	4606      	mov	r6, r0
   83b44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83b46:	2b00      	cmp	r3, #0
   83b48:	f040 8336 	bne.w	841b8 <_dtoa_r+0xbd0>
   83b4c:	9608      	str	r6, [sp, #32]
   83b4e:	9b07      	ldr	r3, [sp, #28]
   83b50:	9a04      	ldr	r2, [sp, #16]
   83b52:	3b01      	subs	r3, #1
   83b54:	18d3      	adds	r3, r2, r3
   83b56:	930b      	str	r3, [sp, #44]	; 0x2c
   83b58:	4617      	mov	r7, r2
   83b5a:	f00a 0301 	and.w	r3, sl, #1
   83b5e:	46c2      	mov	sl, r8
   83b60:	f8dd b020 	ldr.w	fp, [sp, #32]
   83b64:	930c      	str	r3, [sp, #48]	; 0x30
   83b66:	4651      	mov	r1, sl
   83b68:	4648      	mov	r0, r9
   83b6a:	f7ff fca9 	bl	834c0 <quorem>
   83b6e:	4631      	mov	r1, r6
   83b70:	4605      	mov	r5, r0
   83b72:	4648      	mov	r0, r9
   83b74:	f001 fa08 	bl	84f88 <__mcmp>
   83b78:	465a      	mov	r2, fp
   83b7a:	9007      	str	r0, [sp, #28]
   83b7c:	4651      	mov	r1, sl
   83b7e:	4620      	mov	r0, r4
   83b80:	f001 fa1e 	bl	84fc0 <__mdiff>
   83b84:	68c2      	ldr	r2, [r0, #12]
   83b86:	4680      	mov	r8, r0
   83b88:	f105 0330 	add.w	r3, r5, #48	; 0x30
   83b8c:	2a00      	cmp	r2, #0
   83b8e:	f040 8229 	bne.w	83fe4 <_dtoa_r+0x9fc>
   83b92:	4601      	mov	r1, r0
   83b94:	4648      	mov	r0, r9
   83b96:	930a      	str	r3, [sp, #40]	; 0x28
   83b98:	f001 f9f6 	bl	84f88 <__mcmp>
   83b9c:	4641      	mov	r1, r8
   83b9e:	9008      	str	r0, [sp, #32]
   83ba0:	4620      	mov	r0, r4
   83ba2:	f001 f819 	bl	84bd8 <_Bfree>
   83ba6:	9a08      	ldr	r2, [sp, #32]
   83ba8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83baa:	b932      	cbnz	r2, 83bba <_dtoa_r+0x5d2>
   83bac:	9924      	ldr	r1, [sp, #144]	; 0x90
   83bae:	b921      	cbnz	r1, 83bba <_dtoa_r+0x5d2>
   83bb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83bb2:	2a00      	cmp	r2, #0
   83bb4:	f000 83ee 	beq.w	84394 <_dtoa_r+0xdac>
   83bb8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83bba:	9907      	ldr	r1, [sp, #28]
   83bbc:	2900      	cmp	r1, #0
   83bbe:	f2c0 829f 	blt.w	84100 <_dtoa_r+0xb18>
   83bc2:	d105      	bne.n	83bd0 <_dtoa_r+0x5e8>
   83bc4:	9924      	ldr	r1, [sp, #144]	; 0x90
   83bc6:	b919      	cbnz	r1, 83bd0 <_dtoa_r+0x5e8>
   83bc8:	990c      	ldr	r1, [sp, #48]	; 0x30
   83bca:	2900      	cmp	r1, #0
   83bcc:	f000 8298 	beq.w	84100 <_dtoa_r+0xb18>
   83bd0:	2a00      	cmp	r2, #0
   83bd2:	f300 8305 	bgt.w	841e0 <_dtoa_r+0xbf8>
   83bd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83bd8:	f107 0801 	add.w	r8, r7, #1
   83bdc:	4297      	cmp	r7, r2
   83bde:	703b      	strb	r3, [r7, #0]
   83be0:	4645      	mov	r5, r8
   83be2:	f000 830b 	beq.w	841fc <_dtoa_r+0xc14>
   83be6:	4649      	mov	r1, r9
   83be8:	2300      	movs	r3, #0
   83bea:	220a      	movs	r2, #10
   83bec:	4620      	mov	r0, r4
   83bee:	f000 fffd 	bl	84bec <__multadd>
   83bf2:	455e      	cmp	r6, fp
   83bf4:	4681      	mov	r9, r0
   83bf6:	4631      	mov	r1, r6
   83bf8:	f04f 0300 	mov.w	r3, #0
   83bfc:	f04f 020a 	mov.w	r2, #10
   83c00:	4620      	mov	r0, r4
   83c02:	f000 81e9 	beq.w	83fd8 <_dtoa_r+0x9f0>
   83c06:	f000 fff1 	bl	84bec <__multadd>
   83c0a:	4659      	mov	r1, fp
   83c0c:	4606      	mov	r6, r0
   83c0e:	2300      	movs	r3, #0
   83c10:	220a      	movs	r2, #10
   83c12:	4620      	mov	r0, r4
   83c14:	f000 ffea 	bl	84bec <__multadd>
   83c18:	4647      	mov	r7, r8
   83c1a:	4683      	mov	fp, r0
   83c1c:	e7a3      	b.n	83b66 <_dtoa_r+0x57e>
   83c1e:	201c      	movs	r0, #28
   83c20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83c22:	4405      	add	r5, r0
   83c24:	4403      	add	r3, r0
   83c26:	930a      	str	r3, [sp, #40]	; 0x28
   83c28:	9b08      	ldr	r3, [sp, #32]
   83c2a:	4403      	add	r3, r0
   83c2c:	9308      	str	r3, [sp, #32]
   83c2e:	e763      	b.n	83af8 <_dtoa_r+0x510>
   83c30:	4641      	mov	r1, r8
   83c32:	4648      	mov	r0, r9
   83c34:	f001 f9a8 	bl	84f88 <__mcmp>
   83c38:	2800      	cmp	r0, #0
   83c3a:	f6bf af73 	bge.w	83b24 <_dtoa_r+0x53c>
   83c3e:	9f02      	ldr	r7, [sp, #8]
   83c40:	4649      	mov	r1, r9
   83c42:	2300      	movs	r3, #0
   83c44:	220a      	movs	r2, #10
   83c46:	4620      	mov	r0, r4
   83c48:	3f01      	subs	r7, #1
   83c4a:	9702      	str	r7, [sp, #8]
   83c4c:	f000 ffce 	bl	84bec <__multadd>
   83c50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83c52:	4681      	mov	r9, r0
   83c54:	2b00      	cmp	r3, #0
   83c56:	f040 83b5 	bne.w	843c4 <_dtoa_r+0xddc>
   83c5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83c5c:	2b00      	cmp	r3, #0
   83c5e:	f340 83be 	ble.w	843de <_dtoa_r+0xdf6>
   83c62:	9307      	str	r3, [sp, #28]
   83c64:	f8dd a010 	ldr.w	sl, [sp, #16]
   83c68:	9f07      	ldr	r7, [sp, #28]
   83c6a:	4655      	mov	r5, sl
   83c6c:	e006      	b.n	83c7c <_dtoa_r+0x694>
   83c6e:	4649      	mov	r1, r9
   83c70:	2300      	movs	r3, #0
   83c72:	220a      	movs	r2, #10
   83c74:	4620      	mov	r0, r4
   83c76:	f000 ffb9 	bl	84bec <__multadd>
   83c7a:	4681      	mov	r9, r0
   83c7c:	4641      	mov	r1, r8
   83c7e:	4648      	mov	r0, r9
   83c80:	f7ff fc1e 	bl	834c0 <quorem>
   83c84:	3030      	adds	r0, #48	; 0x30
   83c86:	f805 0b01 	strb.w	r0, [r5], #1
   83c8a:	eba5 030a 	sub.w	r3, r5, sl
   83c8e:	42bb      	cmp	r3, r7
   83c90:	dbed      	blt.n	83c6e <_dtoa_r+0x686>
   83c92:	9b04      	ldr	r3, [sp, #16]
   83c94:	9a07      	ldr	r2, [sp, #28]
   83c96:	4682      	mov	sl, r0
   83c98:	2a01      	cmp	r2, #1
   83c9a:	bfac      	ite	ge
   83c9c:	189b      	addge	r3, r3, r2
   83c9e:	3301      	addlt	r3, #1
   83ca0:	f04f 0b00 	mov.w	fp, #0
   83ca4:	461d      	mov	r5, r3
   83ca6:	4649      	mov	r1, r9
   83ca8:	2201      	movs	r2, #1
   83caa:	4620      	mov	r0, r4
   83cac:	f001 f91c 	bl	84ee8 <__lshift>
   83cb0:	4641      	mov	r1, r8
   83cb2:	4681      	mov	r9, r0
   83cb4:	f001 f968 	bl	84f88 <__mcmp>
   83cb8:	2800      	cmp	r0, #0
   83cba:	f340 823f 	ble.w	8413c <_dtoa_r+0xb54>
   83cbe:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   83cc2:	1e6b      	subs	r3, r5, #1
   83cc4:	9904      	ldr	r1, [sp, #16]
   83cc6:	e004      	b.n	83cd2 <_dtoa_r+0x6ea>
   83cc8:	428b      	cmp	r3, r1
   83cca:	f000 81ae 	beq.w	8402a <_dtoa_r+0xa42>
   83cce:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   83cd2:	2a39      	cmp	r2, #57	; 0x39
   83cd4:	f103 0501 	add.w	r5, r3, #1
   83cd8:	d0f6      	beq.n	83cc8 <_dtoa_r+0x6e0>
   83cda:	3201      	adds	r2, #1
   83cdc:	701a      	strb	r2, [r3, #0]
   83cde:	4641      	mov	r1, r8
   83ce0:	4620      	mov	r0, r4
   83ce2:	f000 ff79 	bl	84bd8 <_Bfree>
   83ce6:	2e00      	cmp	r6, #0
   83ce8:	f43f ae3d 	beq.w	83966 <_dtoa_r+0x37e>
   83cec:	f1bb 0f00 	cmp.w	fp, #0
   83cf0:	d005      	beq.n	83cfe <_dtoa_r+0x716>
   83cf2:	45b3      	cmp	fp, r6
   83cf4:	d003      	beq.n	83cfe <_dtoa_r+0x716>
   83cf6:	4659      	mov	r1, fp
   83cf8:	4620      	mov	r0, r4
   83cfa:	f000 ff6d 	bl	84bd8 <_Bfree>
   83cfe:	4631      	mov	r1, r6
   83d00:	4620      	mov	r0, r4
   83d02:	f000 ff69 	bl	84bd8 <_Bfree>
   83d06:	e62e      	b.n	83966 <_dtoa_r+0x37e>
   83d08:	2300      	movs	r3, #0
   83d0a:	930b      	str	r3, [sp, #44]	; 0x2c
   83d0c:	9b02      	ldr	r3, [sp, #8]
   83d0e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83d10:	4413      	add	r3, r2
   83d12:	930f      	str	r3, [sp, #60]	; 0x3c
   83d14:	3301      	adds	r3, #1
   83d16:	2b01      	cmp	r3, #1
   83d18:	461f      	mov	r7, r3
   83d1a:	461e      	mov	r6, r3
   83d1c:	bfb8      	it	lt
   83d1e:	2701      	movlt	r7, #1
   83d20:	9307      	str	r3, [sp, #28]
   83d22:	2100      	movs	r1, #0
   83d24:	2f17      	cmp	r7, #23
   83d26:	6461      	str	r1, [r4, #68]	; 0x44
   83d28:	d90a      	bls.n	83d40 <_dtoa_r+0x758>
   83d2a:	2201      	movs	r2, #1
   83d2c:	2304      	movs	r3, #4
   83d2e:	005b      	lsls	r3, r3, #1
   83d30:	f103 0014 	add.w	r0, r3, #20
   83d34:	4287      	cmp	r7, r0
   83d36:	4611      	mov	r1, r2
   83d38:	f102 0201 	add.w	r2, r2, #1
   83d3c:	d2f7      	bcs.n	83d2e <_dtoa_r+0x746>
   83d3e:	6461      	str	r1, [r4, #68]	; 0x44
   83d40:	4620      	mov	r0, r4
   83d42:	f000 ff23 	bl	84b8c <_Balloc>
   83d46:	2e0e      	cmp	r6, #14
   83d48:	9004      	str	r0, [sp, #16]
   83d4a:	6420      	str	r0, [r4, #64]	; 0x40
   83d4c:	f63f ad47 	bhi.w	837de <_dtoa_r+0x1f6>
   83d50:	2d00      	cmp	r5, #0
   83d52:	f43f ad44 	beq.w	837de <_dtoa_r+0x1f6>
   83d56:	9902      	ldr	r1, [sp, #8]
   83d58:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   83d5c:	2900      	cmp	r1, #0
   83d5e:	f340 8203 	ble.w	84168 <_dtoa_r+0xb80>
   83d62:	4bb9      	ldr	r3, [pc, #740]	; (84048 <_dtoa_r+0xa60>)
   83d64:	f001 020f 	and.w	r2, r1, #15
   83d68:	110d      	asrs	r5, r1, #4
   83d6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83d6e:	06e9      	lsls	r1, r5, #27
   83d70:	e9d3 6700 	ldrd	r6, r7, [r3]
   83d74:	f140 81af 	bpl.w	840d6 <_dtoa_r+0xaee>
   83d78:	4bb4      	ldr	r3, [pc, #720]	; (8404c <_dtoa_r+0xa64>)
   83d7a:	4650      	mov	r0, sl
   83d7c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83d80:	4659      	mov	r1, fp
   83d82:	f002 f95f 	bl	86044 <__aeabi_ddiv>
   83d86:	f04f 0a03 	mov.w	sl, #3
   83d8a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   83d8e:	f005 050f 	and.w	r5, r5, #15
   83d92:	b18d      	cbz	r5, 83db8 <_dtoa_r+0x7d0>
   83d94:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8404c <_dtoa_r+0xa64>
   83d98:	07ea      	lsls	r2, r5, #31
   83d9a:	d509      	bpl.n	83db0 <_dtoa_r+0x7c8>
   83d9c:	e9d8 2300 	ldrd	r2, r3, [r8]
   83da0:	4630      	mov	r0, r6
   83da2:	4639      	mov	r1, r7
   83da4:	f002 f824 	bl	85df0 <__aeabi_dmul>
   83da8:	4606      	mov	r6, r0
   83daa:	460f      	mov	r7, r1
   83dac:	f10a 0a01 	add.w	sl, sl, #1
   83db0:	106d      	asrs	r5, r5, #1
   83db2:	f108 0808 	add.w	r8, r8, #8
   83db6:	d1ef      	bne.n	83d98 <_dtoa_r+0x7b0>
   83db8:	463b      	mov	r3, r7
   83dba:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   83dbe:	4632      	mov	r2, r6
   83dc0:	f002 f940 	bl	86044 <__aeabi_ddiv>
   83dc4:	4607      	mov	r7, r0
   83dc6:	4688      	mov	r8, r1
   83dc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83dca:	b143      	cbz	r3, 83dde <_dtoa_r+0x7f6>
   83dcc:	2200      	movs	r2, #0
   83dce:	4ba0      	ldr	r3, [pc, #640]	; (84050 <_dtoa_r+0xa68>)
   83dd0:	4638      	mov	r0, r7
   83dd2:	4641      	mov	r1, r8
   83dd4:	f002 fa7e 	bl	862d4 <__aeabi_dcmplt>
   83dd8:	2800      	cmp	r0, #0
   83dda:	f040 8287 	bne.w	842ec <_dtoa_r+0xd04>
   83dde:	4650      	mov	r0, sl
   83de0:	f001 ffa0 	bl	85d24 <__aeabi_i2d>
   83de4:	463a      	mov	r2, r7
   83de6:	4643      	mov	r3, r8
   83de8:	f002 f802 	bl	85df0 <__aeabi_dmul>
   83dec:	4b99      	ldr	r3, [pc, #612]	; (84054 <_dtoa_r+0xa6c>)
   83dee:	2200      	movs	r2, #0
   83df0:	f001 fe4c 	bl	85a8c <__adddf3>
   83df4:	9b07      	ldr	r3, [sp, #28]
   83df6:	4605      	mov	r5, r0
   83df8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83dfc:	2b00      	cmp	r3, #0
   83dfe:	f000 813f 	beq.w	84080 <_dtoa_r+0xa98>
   83e02:	9b02      	ldr	r3, [sp, #8]
   83e04:	9315      	str	r3, [sp, #84]	; 0x54
   83e06:	9b07      	ldr	r3, [sp, #28]
   83e08:	9312      	str	r3, [sp, #72]	; 0x48
   83e0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83e0c:	2b00      	cmp	r3, #0
   83e0e:	f000 81fb 	beq.w	84208 <_dtoa_r+0xc20>
   83e12:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83e14:	4b8c      	ldr	r3, [pc, #560]	; (84048 <_dtoa_r+0xa60>)
   83e16:	2000      	movs	r0, #0
   83e18:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83e1c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83e20:	498d      	ldr	r1, [pc, #564]	; (84058 <_dtoa_r+0xa70>)
   83e22:	f002 f90f 	bl	86044 <__aeabi_ddiv>
   83e26:	462a      	mov	r2, r5
   83e28:	4633      	mov	r3, r6
   83e2a:	f001 fe2d 	bl	85a88 <__aeabi_dsub>
   83e2e:	4682      	mov	sl, r0
   83e30:	468b      	mov	fp, r1
   83e32:	4638      	mov	r0, r7
   83e34:	4641      	mov	r1, r8
   83e36:	f002 fa8b 	bl	86350 <__aeabi_d2iz>
   83e3a:	4605      	mov	r5, r0
   83e3c:	f001 ff72 	bl	85d24 <__aeabi_i2d>
   83e40:	4602      	mov	r2, r0
   83e42:	460b      	mov	r3, r1
   83e44:	4638      	mov	r0, r7
   83e46:	4641      	mov	r1, r8
   83e48:	f001 fe1e 	bl	85a88 <__aeabi_dsub>
   83e4c:	3530      	adds	r5, #48	; 0x30
   83e4e:	fa5f f885 	uxtb.w	r8, r5
   83e52:	9d04      	ldr	r5, [sp, #16]
   83e54:	4606      	mov	r6, r0
   83e56:	460f      	mov	r7, r1
   83e58:	f885 8000 	strb.w	r8, [r5]
   83e5c:	4602      	mov	r2, r0
   83e5e:	460b      	mov	r3, r1
   83e60:	4650      	mov	r0, sl
   83e62:	4659      	mov	r1, fp
   83e64:	3501      	adds	r5, #1
   83e66:	f002 fa53 	bl	86310 <__aeabi_dcmpgt>
   83e6a:	2800      	cmp	r0, #0
   83e6c:	d154      	bne.n	83f18 <_dtoa_r+0x930>
   83e6e:	4632      	mov	r2, r6
   83e70:	463b      	mov	r3, r7
   83e72:	2000      	movs	r0, #0
   83e74:	4976      	ldr	r1, [pc, #472]	; (84050 <_dtoa_r+0xa68>)
   83e76:	f001 fe07 	bl	85a88 <__aeabi_dsub>
   83e7a:	4602      	mov	r2, r0
   83e7c:	460b      	mov	r3, r1
   83e7e:	4650      	mov	r0, sl
   83e80:	4659      	mov	r1, fp
   83e82:	f002 fa45 	bl	86310 <__aeabi_dcmpgt>
   83e86:	2800      	cmp	r0, #0
   83e88:	f040 8270 	bne.w	8436c <_dtoa_r+0xd84>
   83e8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83e8e:	2a01      	cmp	r2, #1
   83e90:	f000 8112 	beq.w	840b8 <_dtoa_r+0xad0>
   83e94:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e96:	9a04      	ldr	r2, [sp, #16]
   83e98:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83e9c:	4413      	add	r3, r2
   83e9e:	4699      	mov	r9, r3
   83ea0:	e00f      	b.n	83ec2 <_dtoa_r+0x8da>
   83ea2:	4632      	mov	r2, r6
   83ea4:	463b      	mov	r3, r7
   83ea6:	2000      	movs	r0, #0
   83ea8:	4969      	ldr	r1, [pc, #420]	; (84050 <_dtoa_r+0xa68>)
   83eaa:	f001 fded 	bl	85a88 <__aeabi_dsub>
   83eae:	4652      	mov	r2, sl
   83eb0:	465b      	mov	r3, fp
   83eb2:	f002 fa0f 	bl	862d4 <__aeabi_dcmplt>
   83eb6:	2800      	cmp	r0, #0
   83eb8:	f040 8256 	bne.w	84368 <_dtoa_r+0xd80>
   83ebc:	454d      	cmp	r5, r9
   83ebe:	f000 80f9 	beq.w	840b4 <_dtoa_r+0xacc>
   83ec2:	4650      	mov	r0, sl
   83ec4:	4659      	mov	r1, fp
   83ec6:	2200      	movs	r2, #0
   83ec8:	4b64      	ldr	r3, [pc, #400]	; (8405c <_dtoa_r+0xa74>)
   83eca:	f001 ff91 	bl	85df0 <__aeabi_dmul>
   83ece:	2200      	movs	r2, #0
   83ed0:	4b62      	ldr	r3, [pc, #392]	; (8405c <_dtoa_r+0xa74>)
   83ed2:	4682      	mov	sl, r0
   83ed4:	468b      	mov	fp, r1
   83ed6:	4630      	mov	r0, r6
   83ed8:	4639      	mov	r1, r7
   83eda:	f001 ff89 	bl	85df0 <__aeabi_dmul>
   83ede:	460f      	mov	r7, r1
   83ee0:	4606      	mov	r6, r0
   83ee2:	f002 fa35 	bl	86350 <__aeabi_d2iz>
   83ee6:	4680      	mov	r8, r0
   83ee8:	f001 ff1c 	bl	85d24 <__aeabi_i2d>
   83eec:	4602      	mov	r2, r0
   83eee:	460b      	mov	r3, r1
   83ef0:	4630      	mov	r0, r6
   83ef2:	4639      	mov	r1, r7
   83ef4:	f001 fdc8 	bl	85a88 <__aeabi_dsub>
   83ef8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83efc:	fa5f f888 	uxtb.w	r8, r8
   83f00:	f805 8b01 	strb.w	r8, [r5], #1
   83f04:	4652      	mov	r2, sl
   83f06:	465b      	mov	r3, fp
   83f08:	4606      	mov	r6, r0
   83f0a:	460f      	mov	r7, r1
   83f0c:	f002 f9e2 	bl	862d4 <__aeabi_dcmplt>
   83f10:	2800      	cmp	r0, #0
   83f12:	d0c6      	beq.n	83ea2 <_dtoa_r+0x8ba>
   83f14:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83f18:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83f1a:	9302      	str	r3, [sp, #8]
   83f1c:	e523      	b.n	83966 <_dtoa_r+0x37e>
   83f1e:	2300      	movs	r3, #0
   83f20:	930b      	str	r3, [sp, #44]	; 0x2c
   83f22:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83f24:	2b00      	cmp	r3, #0
   83f26:	f340 80dd 	ble.w	840e4 <_dtoa_r+0xafc>
   83f2a:	461f      	mov	r7, r3
   83f2c:	461e      	mov	r6, r3
   83f2e:	930f      	str	r3, [sp, #60]	; 0x3c
   83f30:	9307      	str	r3, [sp, #28]
   83f32:	e6f6      	b.n	83d22 <_dtoa_r+0x73a>
   83f34:	2301      	movs	r3, #1
   83f36:	930b      	str	r3, [sp, #44]	; 0x2c
   83f38:	e7f3      	b.n	83f22 <_dtoa_r+0x93a>
   83f3a:	f1ba 0f00 	cmp.w	sl, #0
   83f3e:	f47f ada7 	bne.w	83a90 <_dtoa_r+0x4a8>
   83f42:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83f46:	2b00      	cmp	r3, #0
   83f48:	f47f adbc 	bne.w	83ac4 <_dtoa_r+0x4dc>
   83f4c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83f50:	0d3f      	lsrs	r7, r7, #20
   83f52:	053f      	lsls	r7, r7, #20
   83f54:	2f00      	cmp	r7, #0
   83f56:	f000 820d 	beq.w	84374 <_dtoa_r+0xd8c>
   83f5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83f5c:	3301      	adds	r3, #1
   83f5e:	930a      	str	r3, [sp, #40]	; 0x28
   83f60:	9b08      	ldr	r3, [sp, #32]
   83f62:	3301      	adds	r3, #1
   83f64:	9308      	str	r3, [sp, #32]
   83f66:	2301      	movs	r3, #1
   83f68:	930c      	str	r3, [sp, #48]	; 0x30
   83f6a:	e5ad      	b.n	83ac8 <_dtoa_r+0x4e0>
   83f6c:	9b07      	ldr	r3, [sp, #28]
   83f6e:	2b00      	cmp	r3, #0
   83f70:	f73f ac48 	bgt.w	83804 <_dtoa_r+0x21c>
   83f74:	f040 8222 	bne.w	843bc <_dtoa_r+0xdd4>
   83f78:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83f7c:	2200      	movs	r2, #0
   83f7e:	4b38      	ldr	r3, [pc, #224]	; (84060 <_dtoa_r+0xa78>)
   83f80:	f001 ff36 	bl	85df0 <__aeabi_dmul>
   83f84:	4652      	mov	r2, sl
   83f86:	465b      	mov	r3, fp
   83f88:	f002 f9b8 	bl	862fc <__aeabi_dcmpge>
   83f8c:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83f90:	4646      	mov	r6, r8
   83f92:	2800      	cmp	r0, #0
   83f94:	d041      	beq.n	8401a <_dtoa_r+0xa32>
   83f96:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83f98:	9d04      	ldr	r5, [sp, #16]
   83f9a:	43db      	mvns	r3, r3
   83f9c:	9302      	str	r3, [sp, #8]
   83f9e:	4641      	mov	r1, r8
   83fa0:	4620      	mov	r0, r4
   83fa2:	f000 fe19 	bl	84bd8 <_Bfree>
   83fa6:	2e00      	cmp	r6, #0
   83fa8:	f43f acdd 	beq.w	83966 <_dtoa_r+0x37e>
   83fac:	e6a7      	b.n	83cfe <_dtoa_r+0x716>
   83fae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83fb0:	4649      	mov	r1, r9
   83fb2:	4620      	mov	r0, r4
   83fb4:	f000 ff48 	bl	84e48 <__pow5mult>
   83fb8:	4681      	mov	r9, r0
   83fba:	e557      	b.n	83a6c <_dtoa_r+0x484>
   83fbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
   83fbe:	2a00      	cmp	r2, #0
   83fc0:	f000 8188 	beq.w	842d4 <_dtoa_r+0xcec>
   83fc4:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83fc8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83fca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83fcc:	e4f2      	b.n	839b4 <_dtoa_r+0x3cc>
   83fce:	f1ba 0f00 	cmp.w	sl, #0
   83fd2:	f47f ad77 	bne.w	83ac4 <_dtoa_r+0x4dc>
   83fd6:	e7b4      	b.n	83f42 <_dtoa_r+0x95a>
   83fd8:	f000 fe08 	bl	84bec <__multadd>
   83fdc:	4647      	mov	r7, r8
   83fde:	4606      	mov	r6, r0
   83fe0:	4683      	mov	fp, r0
   83fe2:	e5c0      	b.n	83b66 <_dtoa_r+0x57e>
   83fe4:	4601      	mov	r1, r0
   83fe6:	4620      	mov	r0, r4
   83fe8:	9308      	str	r3, [sp, #32]
   83fea:	f000 fdf5 	bl	84bd8 <_Bfree>
   83fee:	2201      	movs	r2, #1
   83ff0:	9b08      	ldr	r3, [sp, #32]
   83ff2:	e5e2      	b.n	83bba <_dtoa_r+0x5d2>
   83ff4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83ff6:	2b02      	cmp	r3, #2
   83ff8:	f77f ad98 	ble.w	83b2c <_dtoa_r+0x544>
   83ffc:	9b07      	ldr	r3, [sp, #28]
   83ffe:	2b00      	cmp	r3, #0
   84000:	d1c9      	bne.n	83f96 <_dtoa_r+0x9ae>
   84002:	4641      	mov	r1, r8
   84004:	2205      	movs	r2, #5
   84006:	4620      	mov	r0, r4
   84008:	f000 fdf0 	bl	84bec <__multadd>
   8400c:	4601      	mov	r1, r0
   8400e:	4680      	mov	r8, r0
   84010:	4648      	mov	r0, r9
   84012:	f000 ffb9 	bl	84f88 <__mcmp>
   84016:	2800      	cmp	r0, #0
   84018:	ddbd      	ble.n	83f96 <_dtoa_r+0x9ae>
   8401a:	2331      	movs	r3, #49	; 0x31
   8401c:	9a02      	ldr	r2, [sp, #8]
   8401e:	9904      	ldr	r1, [sp, #16]
   84020:	3201      	adds	r2, #1
   84022:	9202      	str	r2, [sp, #8]
   84024:	700b      	strb	r3, [r1, #0]
   84026:	1c4d      	adds	r5, r1, #1
   84028:	e7b9      	b.n	83f9e <_dtoa_r+0x9b6>
   8402a:	2331      	movs	r3, #49	; 0x31
   8402c:	9a02      	ldr	r2, [sp, #8]
   8402e:	3201      	adds	r2, #1
   84030:	9202      	str	r2, [sp, #8]
   84032:	9a04      	ldr	r2, [sp, #16]
   84034:	7013      	strb	r3, [r2, #0]
   84036:	e652      	b.n	83cde <_dtoa_r+0x6f6>
   84038:	2301      	movs	r3, #1
   8403a:	930b      	str	r3, [sp, #44]	; 0x2c
   8403c:	e666      	b.n	83d0c <_dtoa_r+0x724>
   8403e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84042:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84044:	e48f      	b.n	83966 <_dtoa_r+0x37e>
   84046:	bf00      	nop
   84048:	00086a20 	.word	0x00086a20
   8404c:	000869f8 	.word	0x000869f8
   84050:	3ff00000 	.word	0x3ff00000
   84054:	401c0000 	.word	0x401c0000
   84058:	3fe00000 	.word	0x3fe00000
   8405c:	40240000 	.word	0x40240000
   84060:	40140000 	.word	0x40140000
   84064:	4650      	mov	r0, sl
   84066:	f001 fe5d 	bl	85d24 <__aeabi_i2d>
   8406a:	463a      	mov	r2, r7
   8406c:	4643      	mov	r3, r8
   8406e:	f001 febf 	bl	85df0 <__aeabi_dmul>
   84072:	2200      	movs	r2, #0
   84074:	4bc1      	ldr	r3, [pc, #772]	; (8437c <_dtoa_r+0xd94>)
   84076:	f001 fd09 	bl	85a8c <__adddf3>
   8407a:	4605      	mov	r5, r0
   8407c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84080:	4641      	mov	r1, r8
   84082:	2200      	movs	r2, #0
   84084:	4bbe      	ldr	r3, [pc, #760]	; (84380 <_dtoa_r+0xd98>)
   84086:	4638      	mov	r0, r7
   84088:	f001 fcfe 	bl	85a88 <__aeabi_dsub>
   8408c:	462a      	mov	r2, r5
   8408e:	4633      	mov	r3, r6
   84090:	4682      	mov	sl, r0
   84092:	468b      	mov	fp, r1
   84094:	f002 f93c 	bl	86310 <__aeabi_dcmpgt>
   84098:	4680      	mov	r8, r0
   8409a:	2800      	cmp	r0, #0
   8409c:	f040 8110 	bne.w	842c0 <_dtoa_r+0xcd8>
   840a0:	462a      	mov	r2, r5
   840a2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   840a6:	4650      	mov	r0, sl
   840a8:	4659      	mov	r1, fp
   840aa:	f002 f913 	bl	862d4 <__aeabi_dcmplt>
   840ae:	b118      	cbz	r0, 840b8 <_dtoa_r+0xad0>
   840b0:	4646      	mov	r6, r8
   840b2:	e770      	b.n	83f96 <_dtoa_r+0x9ae>
   840b4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   840b8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   840bc:	f7ff bb8f 	b.w	837de <_dtoa_r+0x1f6>
   840c0:	9804      	ldr	r0, [sp, #16]
   840c2:	f7ff bac0 	b.w	83646 <_dtoa_r+0x5e>
   840c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   840c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   840ca:	1afb      	subs	r3, r7, r3
   840cc:	441a      	add	r2, r3
   840ce:	970c      	str	r7, [sp, #48]	; 0x30
   840d0:	920d      	str	r2, [sp, #52]	; 0x34
   840d2:	2700      	movs	r7, #0
   840d4:	e468      	b.n	839a8 <_dtoa_r+0x3c0>
   840d6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   840da:	f04f 0a02 	mov.w	sl, #2
   840de:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   840e2:	e656      	b.n	83d92 <_dtoa_r+0x7aa>
   840e4:	2100      	movs	r1, #0
   840e6:	2301      	movs	r3, #1
   840e8:	4620      	mov	r0, r4
   840ea:	6461      	str	r1, [r4, #68]	; 0x44
   840ec:	9325      	str	r3, [sp, #148]	; 0x94
   840ee:	f000 fd4d 	bl	84b8c <_Balloc>
   840f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
   840f4:	9004      	str	r0, [sp, #16]
   840f6:	9307      	str	r3, [sp, #28]
   840f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
   840fa:	6420      	str	r0, [r4, #64]	; 0x40
   840fc:	930f      	str	r3, [sp, #60]	; 0x3c
   840fe:	e627      	b.n	83d50 <_dtoa_r+0x768>
   84100:	2a00      	cmp	r2, #0
   84102:	46d0      	mov	r8, sl
   84104:	f8cd b020 	str.w	fp, [sp, #32]
   84108:	469a      	mov	sl, r3
   8410a:	dd11      	ble.n	84130 <_dtoa_r+0xb48>
   8410c:	4649      	mov	r1, r9
   8410e:	2201      	movs	r2, #1
   84110:	4620      	mov	r0, r4
   84112:	f000 fee9 	bl	84ee8 <__lshift>
   84116:	4641      	mov	r1, r8
   84118:	4681      	mov	r9, r0
   8411a:	f000 ff35 	bl	84f88 <__mcmp>
   8411e:	2800      	cmp	r0, #0
   84120:	f340 8145 	ble.w	843ae <_dtoa_r+0xdc6>
   84124:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84128:	f000 8105 	beq.w	84336 <_dtoa_r+0xd4e>
   8412c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   84130:	46b3      	mov	fp, r6
   84132:	f887 a000 	strb.w	sl, [r7]
   84136:	1c7d      	adds	r5, r7, #1
   84138:	9e08      	ldr	r6, [sp, #32]
   8413a:	e5d0      	b.n	83cde <_dtoa_r+0x6f6>
   8413c:	d104      	bne.n	84148 <_dtoa_r+0xb60>
   8413e:	f01a 0f01 	tst.w	sl, #1
   84142:	d001      	beq.n	84148 <_dtoa_r+0xb60>
   84144:	e5bb      	b.n	83cbe <_dtoa_r+0x6d6>
   84146:	4615      	mov	r5, r2
   84148:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   8414c:	1e6a      	subs	r2, r5, #1
   8414e:	2b30      	cmp	r3, #48	; 0x30
   84150:	d0f9      	beq.n	84146 <_dtoa_r+0xb5e>
   84152:	e5c4      	b.n	83cde <_dtoa_r+0x6f6>
   84154:	2230      	movs	r2, #48	; 0x30
   84156:	9904      	ldr	r1, [sp, #16]
   84158:	700a      	strb	r2, [r1, #0]
   8415a:	9a02      	ldr	r2, [sp, #8]
   8415c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84160:	3201      	adds	r2, #1
   84162:	9202      	str	r2, [sp, #8]
   84164:	f7ff bbfb 	b.w	8395e <_dtoa_r+0x376>
   84168:	f000 80bb 	beq.w	842e2 <_dtoa_r+0xcfa>
   8416c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84170:	9b02      	ldr	r3, [sp, #8]
   84172:	f04f 0a02 	mov.w	sl, #2
   84176:	425d      	negs	r5, r3
   84178:	4b82      	ldr	r3, [pc, #520]	; (84384 <_dtoa_r+0xd9c>)
   8417a:	f005 020f 	and.w	r2, r5, #15
   8417e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84182:	e9d3 2300 	ldrd	r2, r3, [r3]
   84186:	f001 fe33 	bl	85df0 <__aeabi_dmul>
   8418a:	112d      	asrs	r5, r5, #4
   8418c:	4607      	mov	r7, r0
   8418e:	4688      	mov	r8, r1
   84190:	f43f ae1a 	beq.w	83dc8 <_dtoa_r+0x7e0>
   84194:	4e7c      	ldr	r6, [pc, #496]	; (84388 <_dtoa_r+0xda0>)
   84196:	07eb      	lsls	r3, r5, #31
   84198:	d509      	bpl.n	841ae <_dtoa_r+0xbc6>
   8419a:	e9d6 2300 	ldrd	r2, r3, [r6]
   8419e:	4638      	mov	r0, r7
   841a0:	4641      	mov	r1, r8
   841a2:	f001 fe25 	bl	85df0 <__aeabi_dmul>
   841a6:	4607      	mov	r7, r0
   841a8:	4688      	mov	r8, r1
   841aa:	f10a 0a01 	add.w	sl, sl, #1
   841ae:	106d      	asrs	r5, r5, #1
   841b0:	f106 0608 	add.w	r6, r6, #8
   841b4:	d1ef      	bne.n	84196 <_dtoa_r+0xbae>
   841b6:	e607      	b.n	83dc8 <_dtoa_r+0x7e0>
   841b8:	6871      	ldr	r1, [r6, #4]
   841ba:	4620      	mov	r0, r4
   841bc:	f000 fce6 	bl	84b8c <_Balloc>
   841c0:	4605      	mov	r5, r0
   841c2:	6933      	ldr	r3, [r6, #16]
   841c4:	f106 010c 	add.w	r1, r6, #12
   841c8:	3302      	adds	r3, #2
   841ca:	009a      	lsls	r2, r3, #2
   841cc:	300c      	adds	r0, #12
   841ce:	f000 fc5b 	bl	84a88 <memcpy>
   841d2:	4629      	mov	r1, r5
   841d4:	2201      	movs	r2, #1
   841d6:	4620      	mov	r0, r4
   841d8:	f000 fe86 	bl	84ee8 <__lshift>
   841dc:	9008      	str	r0, [sp, #32]
   841de:	e4b6      	b.n	83b4e <_dtoa_r+0x566>
   841e0:	2b39      	cmp	r3, #57	; 0x39
   841e2:	f8cd b020 	str.w	fp, [sp, #32]
   841e6:	46d0      	mov	r8, sl
   841e8:	f000 80a5 	beq.w	84336 <_dtoa_r+0xd4e>
   841ec:	f103 0a01 	add.w	sl, r3, #1
   841f0:	46b3      	mov	fp, r6
   841f2:	f887 a000 	strb.w	sl, [r7]
   841f6:	1c7d      	adds	r5, r7, #1
   841f8:	9e08      	ldr	r6, [sp, #32]
   841fa:	e570      	b.n	83cde <_dtoa_r+0x6f6>
   841fc:	465a      	mov	r2, fp
   841fe:	46d0      	mov	r8, sl
   84200:	46b3      	mov	fp, r6
   84202:	469a      	mov	sl, r3
   84204:	4616      	mov	r6, r2
   84206:	e54e      	b.n	83ca6 <_dtoa_r+0x6be>
   84208:	9812      	ldr	r0, [sp, #72]	; 0x48
   8420a:	495e      	ldr	r1, [pc, #376]	; (84384 <_dtoa_r+0xd9c>)
   8420c:	462a      	mov	r2, r5
   8420e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   84212:	4633      	mov	r3, r6
   84214:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   84218:	f001 fdea 	bl	85df0 <__aeabi_dmul>
   8421c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   84220:	4638      	mov	r0, r7
   84222:	4641      	mov	r1, r8
   84224:	f002 f894 	bl	86350 <__aeabi_d2iz>
   84228:	4605      	mov	r5, r0
   8422a:	f001 fd7b 	bl	85d24 <__aeabi_i2d>
   8422e:	4602      	mov	r2, r0
   84230:	460b      	mov	r3, r1
   84232:	4638      	mov	r0, r7
   84234:	4641      	mov	r1, r8
   84236:	f001 fc27 	bl	85a88 <__aeabi_dsub>
   8423a:	4606      	mov	r6, r0
   8423c:	9812      	ldr	r0, [sp, #72]	; 0x48
   8423e:	9a04      	ldr	r2, [sp, #16]
   84240:	3530      	adds	r5, #48	; 0x30
   84242:	2801      	cmp	r0, #1
   84244:	7015      	strb	r5, [r2, #0]
   84246:	460f      	mov	r7, r1
   84248:	f102 0501 	add.w	r5, r2, #1
   8424c:	d026      	beq.n	8429c <_dtoa_r+0xcb4>
   8424e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84250:	9a04      	ldr	r2, [sp, #16]
   84252:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   84256:	4413      	add	r3, r2
   84258:	f04f 0a00 	mov.w	sl, #0
   8425c:	4699      	mov	r9, r3
   8425e:	f8df b130 	ldr.w	fp, [pc, #304]	; 84390 <_dtoa_r+0xda8>
   84262:	4652      	mov	r2, sl
   84264:	465b      	mov	r3, fp
   84266:	4630      	mov	r0, r6
   84268:	4639      	mov	r1, r7
   8426a:	f001 fdc1 	bl	85df0 <__aeabi_dmul>
   8426e:	460f      	mov	r7, r1
   84270:	4606      	mov	r6, r0
   84272:	f002 f86d 	bl	86350 <__aeabi_d2iz>
   84276:	4680      	mov	r8, r0
   84278:	f001 fd54 	bl	85d24 <__aeabi_i2d>
   8427c:	4602      	mov	r2, r0
   8427e:	460b      	mov	r3, r1
   84280:	4630      	mov	r0, r6
   84282:	4639      	mov	r1, r7
   84284:	f001 fc00 	bl	85a88 <__aeabi_dsub>
   84288:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8428c:	f805 8b01 	strb.w	r8, [r5], #1
   84290:	454d      	cmp	r5, r9
   84292:	4606      	mov	r6, r0
   84294:	460f      	mov	r7, r1
   84296:	d1e4      	bne.n	84262 <_dtoa_r+0xc7a>
   84298:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   8429c:	2200      	movs	r2, #0
   8429e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   842a2:	4b3a      	ldr	r3, [pc, #232]	; (8438c <_dtoa_r+0xda4>)
   842a4:	f001 fbf2 	bl	85a8c <__adddf3>
   842a8:	4632      	mov	r2, r6
   842aa:	463b      	mov	r3, r7
   842ac:	f002 f812 	bl	862d4 <__aeabi_dcmplt>
   842b0:	2800      	cmp	r0, #0
   842b2:	d046      	beq.n	84342 <_dtoa_r+0xd5a>
   842b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   842b6:	9302      	str	r3, [sp, #8]
   842b8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   842bc:	f7ff bb42 	b.w	83944 <_dtoa_r+0x35c>
   842c0:	f04f 0800 	mov.w	r8, #0
   842c4:	4646      	mov	r6, r8
   842c6:	e6a8      	b.n	8401a <_dtoa_r+0xa32>
   842c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   842ca:	9a07      	ldr	r2, [sp, #28]
   842cc:	1a9d      	subs	r5, r3, r2
   842ce:	2300      	movs	r3, #0
   842d0:	f7ff bb70 	b.w	839b4 <_dtoa_r+0x3cc>
   842d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   842d6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   842d8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   842dc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   842de:	f7ff bb69 	b.w	839b4 <_dtoa_r+0x3cc>
   842e2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   842e6:	f04f 0a02 	mov.w	sl, #2
   842ea:	e56d      	b.n	83dc8 <_dtoa_r+0x7e0>
   842ec:	9b07      	ldr	r3, [sp, #28]
   842ee:	2b00      	cmp	r3, #0
   842f0:	f43f aeb8 	beq.w	84064 <_dtoa_r+0xa7c>
   842f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   842f6:	2b00      	cmp	r3, #0
   842f8:	f77f aede 	ble.w	840b8 <_dtoa_r+0xad0>
   842fc:	2200      	movs	r2, #0
   842fe:	4b24      	ldr	r3, [pc, #144]	; (84390 <_dtoa_r+0xda8>)
   84300:	4638      	mov	r0, r7
   84302:	4641      	mov	r1, r8
   84304:	f001 fd74 	bl	85df0 <__aeabi_dmul>
   84308:	4607      	mov	r7, r0
   8430a:	4688      	mov	r8, r1
   8430c:	f10a 0001 	add.w	r0, sl, #1
   84310:	f001 fd08 	bl	85d24 <__aeabi_i2d>
   84314:	463a      	mov	r2, r7
   84316:	4643      	mov	r3, r8
   84318:	f001 fd6a 	bl	85df0 <__aeabi_dmul>
   8431c:	2200      	movs	r2, #0
   8431e:	4b17      	ldr	r3, [pc, #92]	; (8437c <_dtoa_r+0xd94>)
   84320:	f001 fbb4 	bl	85a8c <__adddf3>
   84324:	9a02      	ldr	r2, [sp, #8]
   84326:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84328:	3a01      	subs	r2, #1
   8432a:	4605      	mov	r5, r0
   8432c:	9215      	str	r2, [sp, #84]	; 0x54
   8432e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84332:	9312      	str	r3, [sp, #72]	; 0x48
   84334:	e569      	b.n	83e0a <_dtoa_r+0x822>
   84336:	2239      	movs	r2, #57	; 0x39
   84338:	46b3      	mov	fp, r6
   8433a:	703a      	strb	r2, [r7, #0]
   8433c:	9e08      	ldr	r6, [sp, #32]
   8433e:	1c7d      	adds	r5, r7, #1
   84340:	e4bf      	b.n	83cc2 <_dtoa_r+0x6da>
   84342:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   84346:	2000      	movs	r0, #0
   84348:	4910      	ldr	r1, [pc, #64]	; (8438c <_dtoa_r+0xda4>)
   8434a:	f001 fb9d 	bl	85a88 <__aeabi_dsub>
   8434e:	4632      	mov	r2, r6
   84350:	463b      	mov	r3, r7
   84352:	f001 ffdd 	bl	86310 <__aeabi_dcmpgt>
   84356:	b908      	cbnz	r0, 8435c <_dtoa_r+0xd74>
   84358:	e6ae      	b.n	840b8 <_dtoa_r+0xad0>
   8435a:	4615      	mov	r5, r2
   8435c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84360:	1e6a      	subs	r2, r5, #1
   84362:	2b30      	cmp	r3, #48	; 0x30
   84364:	d0f9      	beq.n	8435a <_dtoa_r+0xd72>
   84366:	e5d7      	b.n	83f18 <_dtoa_r+0x930>
   84368:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   8436c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8436e:	9302      	str	r3, [sp, #8]
   84370:	f7ff bae8 	b.w	83944 <_dtoa_r+0x35c>
   84374:	970c      	str	r7, [sp, #48]	; 0x30
   84376:	f7ff bba7 	b.w	83ac8 <_dtoa_r+0x4e0>
   8437a:	bf00      	nop
   8437c:	401c0000 	.word	0x401c0000
   84380:	40140000 	.word	0x40140000
   84384:	00086a20 	.word	0x00086a20
   84388:	000869f8 	.word	0x000869f8
   8438c:	3fe00000 	.word	0x3fe00000
   84390:	40240000 	.word	0x40240000
   84394:	2b39      	cmp	r3, #57	; 0x39
   84396:	f8cd b020 	str.w	fp, [sp, #32]
   8439a:	46d0      	mov	r8, sl
   8439c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   843a0:	469a      	mov	sl, r3
   843a2:	d0c8      	beq.n	84336 <_dtoa_r+0xd4e>
   843a4:	f1bb 0f00 	cmp.w	fp, #0
   843a8:	f73f aec0 	bgt.w	8412c <_dtoa_r+0xb44>
   843ac:	e6c0      	b.n	84130 <_dtoa_r+0xb48>
   843ae:	f47f aebf 	bne.w	84130 <_dtoa_r+0xb48>
   843b2:	f01a 0f01 	tst.w	sl, #1
   843b6:	f43f aebb 	beq.w	84130 <_dtoa_r+0xb48>
   843ba:	e6b3      	b.n	84124 <_dtoa_r+0xb3c>
   843bc:	f04f 0800 	mov.w	r8, #0
   843c0:	4646      	mov	r6, r8
   843c2:	e5e8      	b.n	83f96 <_dtoa_r+0x9ae>
   843c4:	4631      	mov	r1, r6
   843c6:	2300      	movs	r3, #0
   843c8:	220a      	movs	r2, #10
   843ca:	4620      	mov	r0, r4
   843cc:	f000 fc0e 	bl	84bec <__multadd>
   843d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   843d2:	4606      	mov	r6, r0
   843d4:	2b00      	cmp	r3, #0
   843d6:	dd07      	ble.n	843e8 <_dtoa_r+0xe00>
   843d8:	9307      	str	r3, [sp, #28]
   843da:	f7ff bbab 	b.w	83b34 <_dtoa_r+0x54c>
   843de:	9b24      	ldr	r3, [sp, #144]	; 0x90
   843e0:	2b02      	cmp	r3, #2
   843e2:	dc1f      	bgt.n	84424 <_dtoa_r+0xe3c>
   843e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   843e6:	e43c      	b.n	83c62 <_dtoa_r+0x67a>
   843e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
   843ea:	2b02      	cmp	r3, #2
   843ec:	dc1a      	bgt.n	84424 <_dtoa_r+0xe3c>
   843ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   843f0:	e7f2      	b.n	843d8 <_dtoa_r+0xdf0>
   843f2:	f43f ab81 	beq.w	83af8 <_dtoa_r+0x510>
   843f6:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   843fa:	e411      	b.n	83c20 <_dtoa_r+0x638>
   843fc:	2500      	movs	r5, #0
   843fe:	4620      	mov	r0, r4
   84400:	6465      	str	r5, [r4, #68]	; 0x44
   84402:	4629      	mov	r1, r5
   84404:	f000 fbc2 	bl	84b8c <_Balloc>
   84408:	f04f 33ff 	mov.w	r3, #4294967295
   8440c:	9307      	str	r3, [sp, #28]
   8440e:	930f      	str	r3, [sp, #60]	; 0x3c
   84410:	2301      	movs	r3, #1
   84412:	9004      	str	r0, [sp, #16]
   84414:	9525      	str	r5, [sp, #148]	; 0x94
   84416:	6420      	str	r0, [r4, #64]	; 0x40
   84418:	930b      	str	r3, [sp, #44]	; 0x2c
   8441a:	f7ff b9e0 	b.w	837de <_dtoa_r+0x1f6>
   8441e:	2501      	movs	r5, #1
   84420:	f7ff b9a8 	b.w	83774 <_dtoa_r+0x18c>
   84424:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84426:	9307      	str	r3, [sp, #28]
   84428:	e5e8      	b.n	83ffc <_dtoa_r+0xa14>
   8442a:	bf00      	nop

0008442c <__libc_fini_array>:
   8442c:	b538      	push	{r3, r4, r5, lr}
   8442e:	4c0a      	ldr	r4, [pc, #40]	; (84458 <__libc_fini_array+0x2c>)
   84430:	4d0a      	ldr	r5, [pc, #40]	; (8445c <__libc_fini_array+0x30>)
   84432:	1b64      	subs	r4, r4, r5
   84434:	10a4      	asrs	r4, r4, #2
   84436:	d00a      	beq.n	8444e <__libc_fini_array+0x22>
   84438:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8443c:	3b01      	subs	r3, #1
   8443e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   84442:	3c01      	subs	r4, #1
   84444:	f855 3904 	ldr.w	r3, [r5], #-4
   84448:	4798      	blx	r3
   8444a:	2c00      	cmp	r4, #0
   8444c:	d1f9      	bne.n	84442 <__libc_fini_array+0x16>
   8444e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   84452:	f002 bbdb 	b.w	86c0c <_fini>
   84456:	bf00      	nop
   84458:	00086c1c 	.word	0x00086c1c
   8445c:	00086c18 	.word	0x00086c18

00084460 <__locale_ctype_ptr_l>:
   84460:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   84464:	4770      	bx	lr
   84466:	bf00      	nop

00084468 <_localeconv_r>:
   84468:	4a04      	ldr	r2, [pc, #16]	; (8447c <_localeconv_r+0x14>)
   8446a:	4b05      	ldr	r3, [pc, #20]	; (84480 <_localeconv_r+0x18>)
   8446c:	6812      	ldr	r2, [r2, #0]
   8446e:	6b50      	ldr	r0, [r2, #52]	; 0x34
   84470:	2800      	cmp	r0, #0
   84472:	bf08      	it	eq
   84474:	4618      	moveq	r0, r3
   84476:	30f0      	adds	r0, #240	; 0xf0
   84478:	4770      	bx	lr
   8447a:	bf00      	nop
   8447c:	20070590 	.word	0x20070590
   84480:	200709c4 	.word	0x200709c4

00084484 <__retarget_lock_acquire_recursive>:
   84484:	4770      	bx	lr
   84486:	bf00      	nop

00084488 <__retarget_lock_release_recursive>:
   84488:	4770      	bx	lr
   8448a:	bf00      	nop

0008448c <_malloc_r>:
   8448c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84490:	f101 060b 	add.w	r6, r1, #11
   84494:	2e16      	cmp	r6, #22
   84496:	b083      	sub	sp, #12
   84498:	4605      	mov	r5, r0
   8449a:	f240 809e 	bls.w	845da <_malloc_r+0x14e>
   8449e:	f036 0607 	bics.w	r6, r6, #7
   844a2:	f100 80bd 	bmi.w	84620 <_malloc_r+0x194>
   844a6:	42b1      	cmp	r1, r6
   844a8:	f200 80ba 	bhi.w	84620 <_malloc_r+0x194>
   844ac:	f000 fb62 	bl	84b74 <__malloc_lock>
   844b0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   844b4:	f0c0 8285 	bcc.w	849c2 <_malloc_r+0x536>
   844b8:	0a73      	lsrs	r3, r6, #9
   844ba:	f000 80b8 	beq.w	8462e <_malloc_r+0x1a2>
   844be:	2b04      	cmp	r3, #4
   844c0:	f200 816c 	bhi.w	8479c <_malloc_r+0x310>
   844c4:	09b3      	lsrs	r3, r6, #6
   844c6:	f103 0039 	add.w	r0, r3, #57	; 0x39
   844ca:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   844ce:	00c1      	lsls	r1, r0, #3
   844d0:	4fb8      	ldr	r7, [pc, #736]	; (847b4 <_malloc_r+0x328>)
   844d2:	4439      	add	r1, r7
   844d4:	684c      	ldr	r4, [r1, #4]
   844d6:	3908      	subs	r1, #8
   844d8:	42a1      	cmp	r1, r4
   844da:	d106      	bne.n	844ea <_malloc_r+0x5e>
   844dc:	e00c      	b.n	844f8 <_malloc_r+0x6c>
   844de:	2a00      	cmp	r2, #0
   844e0:	f280 80ab 	bge.w	8463a <_malloc_r+0x1ae>
   844e4:	68e4      	ldr	r4, [r4, #12]
   844e6:	42a1      	cmp	r1, r4
   844e8:	d006      	beq.n	844f8 <_malloc_r+0x6c>
   844ea:	6863      	ldr	r3, [r4, #4]
   844ec:	f023 0303 	bic.w	r3, r3, #3
   844f0:	1b9a      	subs	r2, r3, r6
   844f2:	2a0f      	cmp	r2, #15
   844f4:	ddf3      	ble.n	844de <_malloc_r+0x52>
   844f6:	4670      	mov	r0, lr
   844f8:	693c      	ldr	r4, [r7, #16]
   844fa:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 847c8 <_malloc_r+0x33c>
   844fe:	4574      	cmp	r4, lr
   84500:	f000 819e 	beq.w	84840 <_malloc_r+0x3b4>
   84504:	6863      	ldr	r3, [r4, #4]
   84506:	f023 0303 	bic.w	r3, r3, #3
   8450a:	1b9a      	subs	r2, r3, r6
   8450c:	2a0f      	cmp	r2, #15
   8450e:	f300 8183 	bgt.w	84818 <_malloc_r+0x38c>
   84512:	2a00      	cmp	r2, #0
   84514:	f8c7 e014 	str.w	lr, [r7, #20]
   84518:	f8c7 e010 	str.w	lr, [r7, #16]
   8451c:	f280 8091 	bge.w	84642 <_malloc_r+0x1b6>
   84520:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84524:	f080 8154 	bcs.w	847d0 <_malloc_r+0x344>
   84528:	2201      	movs	r2, #1
   8452a:	08db      	lsrs	r3, r3, #3
   8452c:	6879      	ldr	r1, [r7, #4]
   8452e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   84532:	4413      	add	r3, r2
   84534:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   84538:	fa02 f20c 	lsl.w	r2, r2, ip
   8453c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   84540:	430a      	orrs	r2, r1
   84542:	f1ac 0108 	sub.w	r1, ip, #8
   84546:	60e1      	str	r1, [r4, #12]
   84548:	f8c4 8008 	str.w	r8, [r4, #8]
   8454c:	607a      	str	r2, [r7, #4]
   8454e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   84552:	f8c8 400c 	str.w	r4, [r8, #12]
   84556:	2401      	movs	r4, #1
   84558:	1083      	asrs	r3, r0, #2
   8455a:	409c      	lsls	r4, r3
   8455c:	4294      	cmp	r4, r2
   8455e:	d87d      	bhi.n	8465c <_malloc_r+0x1d0>
   84560:	4214      	tst	r4, r2
   84562:	d106      	bne.n	84572 <_malloc_r+0xe6>
   84564:	f020 0003 	bic.w	r0, r0, #3
   84568:	0064      	lsls	r4, r4, #1
   8456a:	4214      	tst	r4, r2
   8456c:	f100 0004 	add.w	r0, r0, #4
   84570:	d0fa      	beq.n	84568 <_malloc_r+0xdc>
   84572:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   84576:	46cc      	mov	ip, r9
   84578:	4680      	mov	r8, r0
   8457a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8457e:	459c      	cmp	ip, r3
   84580:	d107      	bne.n	84592 <_malloc_r+0x106>
   84582:	e15f      	b.n	84844 <_malloc_r+0x3b8>
   84584:	2a00      	cmp	r2, #0
   84586:	f280 816d 	bge.w	84864 <_malloc_r+0x3d8>
   8458a:	68db      	ldr	r3, [r3, #12]
   8458c:	459c      	cmp	ip, r3
   8458e:	f000 8159 	beq.w	84844 <_malloc_r+0x3b8>
   84592:	6859      	ldr	r1, [r3, #4]
   84594:	f021 0103 	bic.w	r1, r1, #3
   84598:	1b8a      	subs	r2, r1, r6
   8459a:	2a0f      	cmp	r2, #15
   8459c:	ddf2      	ble.n	84584 <_malloc_r+0xf8>
   8459e:	68dc      	ldr	r4, [r3, #12]
   845a0:	f8d3 c008 	ldr.w	ip, [r3, #8]
   845a4:	f046 0801 	orr.w	r8, r6, #1
   845a8:	4628      	mov	r0, r5
   845aa:	441e      	add	r6, r3
   845ac:	f042 0501 	orr.w	r5, r2, #1
   845b0:	f8c3 8004 	str.w	r8, [r3, #4]
   845b4:	f8cc 400c 	str.w	r4, [ip, #12]
   845b8:	f8c4 c008 	str.w	ip, [r4, #8]
   845bc:	617e      	str	r6, [r7, #20]
   845be:	613e      	str	r6, [r7, #16]
   845c0:	f8c6 e00c 	str.w	lr, [r6, #12]
   845c4:	f8c6 e008 	str.w	lr, [r6, #8]
   845c8:	6075      	str	r5, [r6, #4]
   845ca:	505a      	str	r2, [r3, r1]
   845cc:	9300      	str	r3, [sp, #0]
   845ce:	f000 fad7 	bl	84b80 <__malloc_unlock>
   845d2:	9b00      	ldr	r3, [sp, #0]
   845d4:	f103 0408 	add.w	r4, r3, #8
   845d8:	e01e      	b.n	84618 <_malloc_r+0x18c>
   845da:	2910      	cmp	r1, #16
   845dc:	d820      	bhi.n	84620 <_malloc_r+0x194>
   845de:	f000 fac9 	bl	84b74 <__malloc_lock>
   845e2:	2610      	movs	r6, #16
   845e4:	2318      	movs	r3, #24
   845e6:	2002      	movs	r0, #2
   845e8:	4f72      	ldr	r7, [pc, #456]	; (847b4 <_malloc_r+0x328>)
   845ea:	443b      	add	r3, r7
   845ec:	685c      	ldr	r4, [r3, #4]
   845ee:	f1a3 0208 	sub.w	r2, r3, #8
   845f2:	4294      	cmp	r4, r2
   845f4:	f000 812f 	beq.w	84856 <_malloc_r+0x3ca>
   845f8:	6863      	ldr	r3, [r4, #4]
   845fa:	68e1      	ldr	r1, [r4, #12]
   845fc:	f023 0303 	bic.w	r3, r3, #3
   84600:	4423      	add	r3, r4
   84602:	685a      	ldr	r2, [r3, #4]
   84604:	68a6      	ldr	r6, [r4, #8]
   84606:	f042 0201 	orr.w	r2, r2, #1
   8460a:	60f1      	str	r1, [r6, #12]
   8460c:	4628      	mov	r0, r5
   8460e:	608e      	str	r6, [r1, #8]
   84610:	605a      	str	r2, [r3, #4]
   84612:	f000 fab5 	bl	84b80 <__malloc_unlock>
   84616:	3408      	adds	r4, #8
   84618:	4620      	mov	r0, r4
   8461a:	b003      	add	sp, #12
   8461c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84620:	2400      	movs	r4, #0
   84622:	230c      	movs	r3, #12
   84624:	4620      	mov	r0, r4
   84626:	602b      	str	r3, [r5, #0]
   84628:	b003      	add	sp, #12
   8462a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8462e:	2040      	movs	r0, #64	; 0x40
   84630:	f44f 7100 	mov.w	r1, #512	; 0x200
   84634:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   84638:	e74a      	b.n	844d0 <_malloc_r+0x44>
   8463a:	4423      	add	r3, r4
   8463c:	685a      	ldr	r2, [r3, #4]
   8463e:	68e1      	ldr	r1, [r4, #12]
   84640:	e7e0      	b.n	84604 <_malloc_r+0x178>
   84642:	4423      	add	r3, r4
   84644:	685a      	ldr	r2, [r3, #4]
   84646:	4628      	mov	r0, r5
   84648:	f042 0201 	orr.w	r2, r2, #1
   8464c:	605a      	str	r2, [r3, #4]
   8464e:	3408      	adds	r4, #8
   84650:	f000 fa96 	bl	84b80 <__malloc_unlock>
   84654:	4620      	mov	r0, r4
   84656:	b003      	add	sp, #12
   84658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8465c:	68bc      	ldr	r4, [r7, #8]
   8465e:	6863      	ldr	r3, [r4, #4]
   84660:	f023 0803 	bic.w	r8, r3, #3
   84664:	45b0      	cmp	r8, r6
   84666:	d304      	bcc.n	84672 <_malloc_r+0x1e6>
   84668:	eba8 0306 	sub.w	r3, r8, r6
   8466c:	2b0f      	cmp	r3, #15
   8466e:	f300 8085 	bgt.w	8477c <_malloc_r+0x2f0>
   84672:	f8df 9158 	ldr.w	r9, [pc, #344]	; 847cc <_malloc_r+0x340>
   84676:	4b50      	ldr	r3, [pc, #320]	; (847b8 <_malloc_r+0x32c>)
   84678:	f8d9 2000 	ldr.w	r2, [r9]
   8467c:	681b      	ldr	r3, [r3, #0]
   8467e:	3201      	adds	r2, #1
   84680:	4433      	add	r3, r6
   84682:	eb04 0a08 	add.w	sl, r4, r8
   84686:	f000 8154 	beq.w	84932 <_malloc_r+0x4a6>
   8468a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8468e:	330f      	adds	r3, #15
   84690:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   84694:	f02b 0b0f 	bic.w	fp, fp, #15
   84698:	4659      	mov	r1, fp
   8469a:	4628      	mov	r0, r5
   8469c:	f000 fd72 	bl	85184 <_sbrk_r>
   846a0:	1c41      	adds	r1, r0, #1
   846a2:	4602      	mov	r2, r0
   846a4:	f000 80fb 	beq.w	8489e <_malloc_r+0x412>
   846a8:	4582      	cmp	sl, r0
   846aa:	f200 80f6 	bhi.w	8489a <_malloc_r+0x40e>
   846ae:	4b43      	ldr	r3, [pc, #268]	; (847bc <_malloc_r+0x330>)
   846b0:	6819      	ldr	r1, [r3, #0]
   846b2:	4459      	add	r1, fp
   846b4:	6019      	str	r1, [r3, #0]
   846b6:	f000 814c 	beq.w	84952 <_malloc_r+0x4c6>
   846ba:	f8d9 0000 	ldr.w	r0, [r9]
   846be:	3001      	adds	r0, #1
   846c0:	bf1b      	ittet	ne
   846c2:	eba2 0a0a 	subne.w	sl, r2, sl
   846c6:	4451      	addne	r1, sl
   846c8:	f8c9 2000 	streq.w	r2, [r9]
   846cc:	6019      	strne	r1, [r3, #0]
   846ce:	f012 0107 	ands.w	r1, r2, #7
   846d2:	f000 8114 	beq.w	848fe <_malloc_r+0x472>
   846d6:	f1c1 0008 	rsb	r0, r1, #8
   846da:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   846de:	4402      	add	r2, r0
   846e0:	3108      	adds	r1, #8
   846e2:	eb02 090b 	add.w	r9, r2, fp
   846e6:	f3c9 090b 	ubfx	r9, r9, #0, #12
   846ea:	eba1 0909 	sub.w	r9, r1, r9
   846ee:	4649      	mov	r1, r9
   846f0:	4628      	mov	r0, r5
   846f2:	9301      	str	r3, [sp, #4]
   846f4:	9200      	str	r2, [sp, #0]
   846f6:	f000 fd45 	bl	85184 <_sbrk_r>
   846fa:	1c43      	adds	r3, r0, #1
   846fc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84700:	f000 8142 	beq.w	84988 <_malloc_r+0x4fc>
   84704:	1a80      	subs	r0, r0, r2
   84706:	4448      	add	r0, r9
   84708:	f040 0001 	orr.w	r0, r0, #1
   8470c:	6819      	ldr	r1, [r3, #0]
   8470e:	42bc      	cmp	r4, r7
   84710:	4449      	add	r1, r9
   84712:	60ba      	str	r2, [r7, #8]
   84714:	6019      	str	r1, [r3, #0]
   84716:	6050      	str	r0, [r2, #4]
   84718:	d017      	beq.n	8474a <_malloc_r+0x2be>
   8471a:	f1b8 0f0f 	cmp.w	r8, #15
   8471e:	f240 80fa 	bls.w	84916 <_malloc_r+0x48a>
   84722:	f04f 0c05 	mov.w	ip, #5
   84726:	6862      	ldr	r2, [r4, #4]
   84728:	f1a8 000c 	sub.w	r0, r8, #12
   8472c:	f020 0007 	bic.w	r0, r0, #7
   84730:	f002 0201 	and.w	r2, r2, #1
   84734:	eb04 0e00 	add.w	lr, r4, r0
   84738:	4302      	orrs	r2, r0
   8473a:	280f      	cmp	r0, #15
   8473c:	6062      	str	r2, [r4, #4]
   8473e:	f8ce c004 	str.w	ip, [lr, #4]
   84742:	f8ce c008 	str.w	ip, [lr, #8]
   84746:	f200 8116 	bhi.w	84976 <_malloc_r+0x4ea>
   8474a:	4b1d      	ldr	r3, [pc, #116]	; (847c0 <_malloc_r+0x334>)
   8474c:	68bc      	ldr	r4, [r7, #8]
   8474e:	681a      	ldr	r2, [r3, #0]
   84750:	4291      	cmp	r1, r2
   84752:	bf88      	it	hi
   84754:	6019      	strhi	r1, [r3, #0]
   84756:	4b1b      	ldr	r3, [pc, #108]	; (847c4 <_malloc_r+0x338>)
   84758:	681a      	ldr	r2, [r3, #0]
   8475a:	4291      	cmp	r1, r2
   8475c:	6862      	ldr	r2, [r4, #4]
   8475e:	bf88      	it	hi
   84760:	6019      	strhi	r1, [r3, #0]
   84762:	f022 0203 	bic.w	r2, r2, #3
   84766:	4296      	cmp	r6, r2
   84768:	eba2 0306 	sub.w	r3, r2, r6
   8476c:	d801      	bhi.n	84772 <_malloc_r+0x2e6>
   8476e:	2b0f      	cmp	r3, #15
   84770:	dc04      	bgt.n	8477c <_malloc_r+0x2f0>
   84772:	4628      	mov	r0, r5
   84774:	f000 fa04 	bl	84b80 <__malloc_unlock>
   84778:	2400      	movs	r4, #0
   8477a:	e74d      	b.n	84618 <_malloc_r+0x18c>
   8477c:	f046 0201 	orr.w	r2, r6, #1
   84780:	f043 0301 	orr.w	r3, r3, #1
   84784:	4426      	add	r6, r4
   84786:	6062      	str	r2, [r4, #4]
   84788:	4628      	mov	r0, r5
   8478a:	60be      	str	r6, [r7, #8]
   8478c:	3408      	adds	r4, #8
   8478e:	6073      	str	r3, [r6, #4]
   84790:	f000 f9f6 	bl	84b80 <__malloc_unlock>
   84794:	4620      	mov	r0, r4
   84796:	b003      	add	sp, #12
   84798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8479c:	2b14      	cmp	r3, #20
   8479e:	d970      	bls.n	84882 <_malloc_r+0x3f6>
   847a0:	2b54      	cmp	r3, #84	; 0x54
   847a2:	f200 80a2 	bhi.w	848ea <_malloc_r+0x45e>
   847a6:	0b33      	lsrs	r3, r6, #12
   847a8:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   847ac:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   847b0:	00c1      	lsls	r1, r0, #3
   847b2:	e68d      	b.n	844d0 <_malloc_r+0x44>
   847b4:	20070b30 	.word	0x20070b30
   847b8:	20071010 	.word	0x20071010
   847bc:	20070fe0 	.word	0x20070fe0
   847c0:	20071008 	.word	0x20071008
   847c4:	2007100c 	.word	0x2007100c
   847c8:	20070b38 	.word	0x20070b38
   847cc:	20070f38 	.word	0x20070f38
   847d0:	0a5a      	lsrs	r2, r3, #9
   847d2:	2a04      	cmp	r2, #4
   847d4:	d95b      	bls.n	8488e <_malloc_r+0x402>
   847d6:	2a14      	cmp	r2, #20
   847d8:	f200 80ae 	bhi.w	84938 <_malloc_r+0x4ac>
   847dc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   847e0:	00c9      	lsls	r1, r1, #3
   847e2:	325b      	adds	r2, #91	; 0x5b
   847e4:	eb07 0c01 	add.w	ip, r7, r1
   847e8:	5879      	ldr	r1, [r7, r1]
   847ea:	f1ac 0c08 	sub.w	ip, ip, #8
   847ee:	458c      	cmp	ip, r1
   847f0:	f000 8088 	beq.w	84904 <_malloc_r+0x478>
   847f4:	684a      	ldr	r2, [r1, #4]
   847f6:	f022 0203 	bic.w	r2, r2, #3
   847fa:	4293      	cmp	r3, r2
   847fc:	d273      	bcs.n	848e6 <_malloc_r+0x45a>
   847fe:	6889      	ldr	r1, [r1, #8]
   84800:	458c      	cmp	ip, r1
   84802:	d1f7      	bne.n	847f4 <_malloc_r+0x368>
   84804:	f8dc 300c 	ldr.w	r3, [ip, #12]
   84808:	687a      	ldr	r2, [r7, #4]
   8480a:	60e3      	str	r3, [r4, #12]
   8480c:	f8c4 c008 	str.w	ip, [r4, #8]
   84810:	609c      	str	r4, [r3, #8]
   84812:	f8cc 400c 	str.w	r4, [ip, #12]
   84816:	e69e      	b.n	84556 <_malloc_r+0xca>
   84818:	f046 0c01 	orr.w	ip, r6, #1
   8481c:	f042 0101 	orr.w	r1, r2, #1
   84820:	4426      	add	r6, r4
   84822:	f8c4 c004 	str.w	ip, [r4, #4]
   84826:	4628      	mov	r0, r5
   84828:	617e      	str	r6, [r7, #20]
   8482a:	613e      	str	r6, [r7, #16]
   8482c:	f8c6 e00c 	str.w	lr, [r6, #12]
   84830:	f8c6 e008 	str.w	lr, [r6, #8]
   84834:	6071      	str	r1, [r6, #4]
   84836:	50e2      	str	r2, [r4, r3]
   84838:	f000 f9a2 	bl	84b80 <__malloc_unlock>
   8483c:	3408      	adds	r4, #8
   8483e:	e6eb      	b.n	84618 <_malloc_r+0x18c>
   84840:	687a      	ldr	r2, [r7, #4]
   84842:	e688      	b.n	84556 <_malloc_r+0xca>
   84844:	f108 0801 	add.w	r8, r8, #1
   84848:	f018 0f03 	tst.w	r8, #3
   8484c:	f10c 0c08 	add.w	ip, ip, #8
   84850:	f47f ae93 	bne.w	8457a <_malloc_r+0xee>
   84854:	e02d      	b.n	848b2 <_malloc_r+0x426>
   84856:	68dc      	ldr	r4, [r3, #12]
   84858:	42a3      	cmp	r3, r4
   8485a:	bf08      	it	eq
   8485c:	3002      	addeq	r0, #2
   8485e:	f43f ae4b 	beq.w	844f8 <_malloc_r+0x6c>
   84862:	e6c9      	b.n	845f8 <_malloc_r+0x16c>
   84864:	461c      	mov	r4, r3
   84866:	4419      	add	r1, r3
   84868:	684a      	ldr	r2, [r1, #4]
   8486a:	68db      	ldr	r3, [r3, #12]
   8486c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   84870:	f042 0201 	orr.w	r2, r2, #1
   84874:	604a      	str	r2, [r1, #4]
   84876:	4628      	mov	r0, r5
   84878:	60f3      	str	r3, [r6, #12]
   8487a:	609e      	str	r6, [r3, #8]
   8487c:	f000 f980 	bl	84b80 <__malloc_unlock>
   84880:	e6ca      	b.n	84618 <_malloc_r+0x18c>
   84882:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   84886:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8488a:	00c1      	lsls	r1, r0, #3
   8488c:	e620      	b.n	844d0 <_malloc_r+0x44>
   8488e:	099a      	lsrs	r2, r3, #6
   84890:	f102 0139 	add.w	r1, r2, #57	; 0x39
   84894:	00c9      	lsls	r1, r1, #3
   84896:	3238      	adds	r2, #56	; 0x38
   84898:	e7a4      	b.n	847e4 <_malloc_r+0x358>
   8489a:	42bc      	cmp	r4, r7
   8489c:	d054      	beq.n	84948 <_malloc_r+0x4bc>
   8489e:	68bc      	ldr	r4, [r7, #8]
   848a0:	6862      	ldr	r2, [r4, #4]
   848a2:	f022 0203 	bic.w	r2, r2, #3
   848a6:	e75e      	b.n	84766 <_malloc_r+0x2da>
   848a8:	f859 3908 	ldr.w	r3, [r9], #-8
   848ac:	4599      	cmp	r9, r3
   848ae:	f040 8086 	bne.w	849be <_malloc_r+0x532>
   848b2:	f010 0f03 	tst.w	r0, #3
   848b6:	f100 30ff 	add.w	r0, r0, #4294967295
   848ba:	d1f5      	bne.n	848a8 <_malloc_r+0x41c>
   848bc:	687b      	ldr	r3, [r7, #4]
   848be:	ea23 0304 	bic.w	r3, r3, r4
   848c2:	607b      	str	r3, [r7, #4]
   848c4:	0064      	lsls	r4, r4, #1
   848c6:	429c      	cmp	r4, r3
   848c8:	f63f aec8 	bhi.w	8465c <_malloc_r+0x1d0>
   848cc:	2c00      	cmp	r4, #0
   848ce:	f43f aec5 	beq.w	8465c <_malloc_r+0x1d0>
   848d2:	421c      	tst	r4, r3
   848d4:	4640      	mov	r0, r8
   848d6:	f47f ae4c 	bne.w	84572 <_malloc_r+0xe6>
   848da:	0064      	lsls	r4, r4, #1
   848dc:	421c      	tst	r4, r3
   848de:	f100 0004 	add.w	r0, r0, #4
   848e2:	d0fa      	beq.n	848da <_malloc_r+0x44e>
   848e4:	e645      	b.n	84572 <_malloc_r+0xe6>
   848e6:	468c      	mov	ip, r1
   848e8:	e78c      	b.n	84804 <_malloc_r+0x378>
   848ea:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   848ee:	d815      	bhi.n	8491c <_malloc_r+0x490>
   848f0:	0bf3      	lsrs	r3, r6, #15
   848f2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   848f6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   848fa:	00c1      	lsls	r1, r0, #3
   848fc:	e5e8      	b.n	844d0 <_malloc_r+0x44>
   848fe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   84902:	e6ee      	b.n	846e2 <_malloc_r+0x256>
   84904:	2101      	movs	r1, #1
   84906:	687b      	ldr	r3, [r7, #4]
   84908:	1092      	asrs	r2, r2, #2
   8490a:	fa01 f202 	lsl.w	r2, r1, r2
   8490e:	431a      	orrs	r2, r3
   84910:	607a      	str	r2, [r7, #4]
   84912:	4663      	mov	r3, ip
   84914:	e779      	b.n	8480a <_malloc_r+0x37e>
   84916:	2301      	movs	r3, #1
   84918:	6053      	str	r3, [r2, #4]
   8491a:	e72a      	b.n	84772 <_malloc_r+0x2e6>
   8491c:	f240 5254 	movw	r2, #1364	; 0x554
   84920:	4293      	cmp	r3, r2
   84922:	d822      	bhi.n	8496a <_malloc_r+0x4de>
   84924:	0cb3      	lsrs	r3, r6, #18
   84926:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8492a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8492e:	00c1      	lsls	r1, r0, #3
   84930:	e5ce      	b.n	844d0 <_malloc_r+0x44>
   84932:	f103 0b10 	add.w	fp, r3, #16
   84936:	e6af      	b.n	84698 <_malloc_r+0x20c>
   84938:	2a54      	cmp	r2, #84	; 0x54
   8493a:	d829      	bhi.n	84990 <_malloc_r+0x504>
   8493c:	0b1a      	lsrs	r2, r3, #12
   8493e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   84942:	00c9      	lsls	r1, r1, #3
   84944:	326e      	adds	r2, #110	; 0x6e
   84946:	e74d      	b.n	847e4 <_malloc_r+0x358>
   84948:	4b20      	ldr	r3, [pc, #128]	; (849cc <_malloc_r+0x540>)
   8494a:	6819      	ldr	r1, [r3, #0]
   8494c:	4459      	add	r1, fp
   8494e:	6019      	str	r1, [r3, #0]
   84950:	e6b3      	b.n	846ba <_malloc_r+0x22e>
   84952:	f3ca 000b 	ubfx	r0, sl, #0, #12
   84956:	2800      	cmp	r0, #0
   84958:	f47f aeaf 	bne.w	846ba <_malloc_r+0x22e>
   8495c:	eb08 030b 	add.w	r3, r8, fp
   84960:	68ba      	ldr	r2, [r7, #8]
   84962:	f043 0301 	orr.w	r3, r3, #1
   84966:	6053      	str	r3, [r2, #4]
   84968:	e6ef      	b.n	8474a <_malloc_r+0x2be>
   8496a:	207f      	movs	r0, #127	; 0x7f
   8496c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84970:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   84974:	e5ac      	b.n	844d0 <_malloc_r+0x44>
   84976:	f104 0108 	add.w	r1, r4, #8
   8497a:	4628      	mov	r0, r5
   8497c:	9300      	str	r3, [sp, #0]
   8497e:	f000 fd7f 	bl	85480 <_free_r>
   84982:	9b00      	ldr	r3, [sp, #0]
   84984:	6819      	ldr	r1, [r3, #0]
   84986:	e6e0      	b.n	8474a <_malloc_r+0x2be>
   84988:	2001      	movs	r0, #1
   8498a:	f04f 0900 	mov.w	r9, #0
   8498e:	e6bd      	b.n	8470c <_malloc_r+0x280>
   84990:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84994:	d805      	bhi.n	849a2 <_malloc_r+0x516>
   84996:	0bda      	lsrs	r2, r3, #15
   84998:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8499c:	00c9      	lsls	r1, r1, #3
   8499e:	3277      	adds	r2, #119	; 0x77
   849a0:	e720      	b.n	847e4 <_malloc_r+0x358>
   849a2:	f240 5154 	movw	r1, #1364	; 0x554
   849a6:	428a      	cmp	r2, r1
   849a8:	d805      	bhi.n	849b6 <_malloc_r+0x52a>
   849aa:	0c9a      	lsrs	r2, r3, #18
   849ac:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   849b0:	00c9      	lsls	r1, r1, #3
   849b2:	327c      	adds	r2, #124	; 0x7c
   849b4:	e716      	b.n	847e4 <_malloc_r+0x358>
   849b6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   849ba:	227e      	movs	r2, #126	; 0x7e
   849bc:	e712      	b.n	847e4 <_malloc_r+0x358>
   849be:	687b      	ldr	r3, [r7, #4]
   849c0:	e780      	b.n	848c4 <_malloc_r+0x438>
   849c2:	08f0      	lsrs	r0, r6, #3
   849c4:	f106 0308 	add.w	r3, r6, #8
   849c8:	e60e      	b.n	845e8 <_malloc_r+0x15c>
   849ca:	bf00      	nop
   849cc:	20070fe0 	.word	0x20070fe0

000849d0 <__ascii_mbtowc>:
   849d0:	b082      	sub	sp, #8
   849d2:	b149      	cbz	r1, 849e8 <__ascii_mbtowc+0x18>
   849d4:	b15a      	cbz	r2, 849ee <__ascii_mbtowc+0x1e>
   849d6:	b16b      	cbz	r3, 849f4 <__ascii_mbtowc+0x24>
   849d8:	7813      	ldrb	r3, [r2, #0]
   849da:	600b      	str	r3, [r1, #0]
   849dc:	7812      	ldrb	r2, [r2, #0]
   849de:	1c10      	adds	r0, r2, #0
   849e0:	bf18      	it	ne
   849e2:	2001      	movne	r0, #1
   849e4:	b002      	add	sp, #8
   849e6:	4770      	bx	lr
   849e8:	a901      	add	r1, sp, #4
   849ea:	2a00      	cmp	r2, #0
   849ec:	d1f3      	bne.n	849d6 <__ascii_mbtowc+0x6>
   849ee:	4610      	mov	r0, r2
   849f0:	b002      	add	sp, #8
   849f2:	4770      	bx	lr
   849f4:	f06f 0001 	mvn.w	r0, #1
   849f8:	e7f4      	b.n	849e4 <__ascii_mbtowc+0x14>
   849fa:	bf00      	nop

000849fc <memchr>:
   849fc:	0783      	lsls	r3, r0, #30
   849fe:	b470      	push	{r4, r5, r6}
   84a00:	b2cd      	uxtb	r5, r1
   84a02:	d03d      	beq.n	84a80 <memchr+0x84>
   84a04:	1e54      	subs	r4, r2, #1
   84a06:	b30a      	cbz	r2, 84a4c <memchr+0x50>
   84a08:	7803      	ldrb	r3, [r0, #0]
   84a0a:	42ab      	cmp	r3, r5
   84a0c:	d01f      	beq.n	84a4e <memchr+0x52>
   84a0e:	1c43      	adds	r3, r0, #1
   84a10:	e005      	b.n	84a1e <memchr+0x22>
   84a12:	f114 34ff 	adds.w	r4, r4, #4294967295
   84a16:	d319      	bcc.n	84a4c <memchr+0x50>
   84a18:	7802      	ldrb	r2, [r0, #0]
   84a1a:	42aa      	cmp	r2, r5
   84a1c:	d017      	beq.n	84a4e <memchr+0x52>
   84a1e:	f013 0f03 	tst.w	r3, #3
   84a22:	4618      	mov	r0, r3
   84a24:	f103 0301 	add.w	r3, r3, #1
   84a28:	d1f3      	bne.n	84a12 <memchr+0x16>
   84a2a:	2c03      	cmp	r4, #3
   84a2c:	d811      	bhi.n	84a52 <memchr+0x56>
   84a2e:	b34c      	cbz	r4, 84a84 <memchr+0x88>
   84a30:	7803      	ldrb	r3, [r0, #0]
   84a32:	42ab      	cmp	r3, r5
   84a34:	d00b      	beq.n	84a4e <memchr+0x52>
   84a36:	4404      	add	r4, r0
   84a38:	1c43      	adds	r3, r0, #1
   84a3a:	e002      	b.n	84a42 <memchr+0x46>
   84a3c:	7802      	ldrb	r2, [r0, #0]
   84a3e:	42aa      	cmp	r2, r5
   84a40:	d005      	beq.n	84a4e <memchr+0x52>
   84a42:	429c      	cmp	r4, r3
   84a44:	4618      	mov	r0, r3
   84a46:	f103 0301 	add.w	r3, r3, #1
   84a4a:	d1f7      	bne.n	84a3c <memchr+0x40>
   84a4c:	2000      	movs	r0, #0
   84a4e:	bc70      	pop	{r4, r5, r6}
   84a50:	4770      	bx	lr
   84a52:	0209      	lsls	r1, r1, #8
   84a54:	b289      	uxth	r1, r1
   84a56:	4329      	orrs	r1, r5
   84a58:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   84a5c:	6803      	ldr	r3, [r0, #0]
   84a5e:	4606      	mov	r6, r0
   84a60:	404b      	eors	r3, r1
   84a62:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   84a66:	ea22 0303 	bic.w	r3, r2, r3
   84a6a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   84a6e:	f100 0004 	add.w	r0, r0, #4
   84a72:	d103      	bne.n	84a7c <memchr+0x80>
   84a74:	3c04      	subs	r4, #4
   84a76:	2c03      	cmp	r4, #3
   84a78:	d8f0      	bhi.n	84a5c <memchr+0x60>
   84a7a:	e7d8      	b.n	84a2e <memchr+0x32>
   84a7c:	4630      	mov	r0, r6
   84a7e:	e7d7      	b.n	84a30 <memchr+0x34>
   84a80:	4614      	mov	r4, r2
   84a82:	e7d2      	b.n	84a2a <memchr+0x2e>
   84a84:	4620      	mov	r0, r4
   84a86:	e7e2      	b.n	84a4e <memchr+0x52>

00084a88 <memcpy>:
   84a88:	4684      	mov	ip, r0
   84a8a:	ea41 0300 	orr.w	r3, r1, r0
   84a8e:	f013 0303 	ands.w	r3, r3, #3
   84a92:	d149      	bne.n	84b28 <memcpy+0xa0>
   84a94:	3a40      	subs	r2, #64	; 0x40
   84a96:	d323      	bcc.n	84ae0 <memcpy+0x58>
   84a98:	680b      	ldr	r3, [r1, #0]
   84a9a:	6003      	str	r3, [r0, #0]
   84a9c:	684b      	ldr	r3, [r1, #4]
   84a9e:	6043      	str	r3, [r0, #4]
   84aa0:	688b      	ldr	r3, [r1, #8]
   84aa2:	6083      	str	r3, [r0, #8]
   84aa4:	68cb      	ldr	r3, [r1, #12]
   84aa6:	60c3      	str	r3, [r0, #12]
   84aa8:	690b      	ldr	r3, [r1, #16]
   84aaa:	6103      	str	r3, [r0, #16]
   84aac:	694b      	ldr	r3, [r1, #20]
   84aae:	6143      	str	r3, [r0, #20]
   84ab0:	698b      	ldr	r3, [r1, #24]
   84ab2:	6183      	str	r3, [r0, #24]
   84ab4:	69cb      	ldr	r3, [r1, #28]
   84ab6:	61c3      	str	r3, [r0, #28]
   84ab8:	6a0b      	ldr	r3, [r1, #32]
   84aba:	6203      	str	r3, [r0, #32]
   84abc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   84abe:	6243      	str	r3, [r0, #36]	; 0x24
   84ac0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   84ac2:	6283      	str	r3, [r0, #40]	; 0x28
   84ac4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   84ac6:	62c3      	str	r3, [r0, #44]	; 0x2c
   84ac8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   84aca:	6303      	str	r3, [r0, #48]	; 0x30
   84acc:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   84ace:	6343      	str	r3, [r0, #52]	; 0x34
   84ad0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   84ad2:	6383      	str	r3, [r0, #56]	; 0x38
   84ad4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   84ad6:	63c3      	str	r3, [r0, #60]	; 0x3c
   84ad8:	3040      	adds	r0, #64	; 0x40
   84ada:	3140      	adds	r1, #64	; 0x40
   84adc:	3a40      	subs	r2, #64	; 0x40
   84ade:	d2db      	bcs.n	84a98 <memcpy+0x10>
   84ae0:	3230      	adds	r2, #48	; 0x30
   84ae2:	d30b      	bcc.n	84afc <memcpy+0x74>
   84ae4:	680b      	ldr	r3, [r1, #0]
   84ae6:	6003      	str	r3, [r0, #0]
   84ae8:	684b      	ldr	r3, [r1, #4]
   84aea:	6043      	str	r3, [r0, #4]
   84aec:	688b      	ldr	r3, [r1, #8]
   84aee:	6083      	str	r3, [r0, #8]
   84af0:	68cb      	ldr	r3, [r1, #12]
   84af2:	60c3      	str	r3, [r0, #12]
   84af4:	3010      	adds	r0, #16
   84af6:	3110      	adds	r1, #16
   84af8:	3a10      	subs	r2, #16
   84afa:	d2f3      	bcs.n	84ae4 <memcpy+0x5c>
   84afc:	320c      	adds	r2, #12
   84afe:	d305      	bcc.n	84b0c <memcpy+0x84>
   84b00:	f851 3b04 	ldr.w	r3, [r1], #4
   84b04:	f840 3b04 	str.w	r3, [r0], #4
   84b08:	3a04      	subs	r2, #4
   84b0a:	d2f9      	bcs.n	84b00 <memcpy+0x78>
   84b0c:	3204      	adds	r2, #4
   84b0e:	d008      	beq.n	84b22 <memcpy+0x9a>
   84b10:	07d2      	lsls	r2, r2, #31
   84b12:	bf1c      	itt	ne
   84b14:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84b18:	f800 3b01 	strbne.w	r3, [r0], #1
   84b1c:	d301      	bcc.n	84b22 <memcpy+0x9a>
   84b1e:	880b      	ldrh	r3, [r1, #0]
   84b20:	8003      	strh	r3, [r0, #0]
   84b22:	4660      	mov	r0, ip
   84b24:	4770      	bx	lr
   84b26:	bf00      	nop
   84b28:	2a08      	cmp	r2, #8
   84b2a:	d313      	bcc.n	84b54 <memcpy+0xcc>
   84b2c:	078b      	lsls	r3, r1, #30
   84b2e:	d0b1      	beq.n	84a94 <memcpy+0xc>
   84b30:	f010 0303 	ands.w	r3, r0, #3
   84b34:	d0ae      	beq.n	84a94 <memcpy+0xc>
   84b36:	f1c3 0304 	rsb	r3, r3, #4
   84b3a:	1ad2      	subs	r2, r2, r3
   84b3c:	07db      	lsls	r3, r3, #31
   84b3e:	bf1c      	itt	ne
   84b40:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84b44:	f800 3b01 	strbne.w	r3, [r0], #1
   84b48:	d3a4      	bcc.n	84a94 <memcpy+0xc>
   84b4a:	f831 3b02 	ldrh.w	r3, [r1], #2
   84b4e:	f820 3b02 	strh.w	r3, [r0], #2
   84b52:	e79f      	b.n	84a94 <memcpy+0xc>
   84b54:	3a04      	subs	r2, #4
   84b56:	d3d9      	bcc.n	84b0c <memcpy+0x84>
   84b58:	3a01      	subs	r2, #1
   84b5a:	f811 3b01 	ldrb.w	r3, [r1], #1
   84b5e:	f800 3b01 	strb.w	r3, [r0], #1
   84b62:	d2f9      	bcs.n	84b58 <memcpy+0xd0>
   84b64:	780b      	ldrb	r3, [r1, #0]
   84b66:	7003      	strb	r3, [r0, #0]
   84b68:	784b      	ldrb	r3, [r1, #1]
   84b6a:	7043      	strb	r3, [r0, #1]
   84b6c:	788b      	ldrb	r3, [r1, #2]
   84b6e:	7083      	strb	r3, [r0, #2]
   84b70:	4660      	mov	r0, ip
   84b72:	4770      	bx	lr

00084b74 <__malloc_lock>:
   84b74:	4801      	ldr	r0, [pc, #4]	; (84b7c <__malloc_lock+0x8>)
   84b76:	f7ff bc85 	b.w	84484 <__retarget_lock_acquire_recursive>
   84b7a:	bf00      	nop
   84b7c:	200714f0 	.word	0x200714f0

00084b80 <__malloc_unlock>:
   84b80:	4801      	ldr	r0, [pc, #4]	; (84b88 <__malloc_unlock+0x8>)
   84b82:	f7ff bc81 	b.w	84488 <__retarget_lock_release_recursive>
   84b86:	bf00      	nop
   84b88:	200714f0 	.word	0x200714f0

00084b8c <_Balloc>:
   84b8c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84b8e:	b570      	push	{r4, r5, r6, lr}
   84b90:	4605      	mov	r5, r0
   84b92:	460c      	mov	r4, r1
   84b94:	b14b      	cbz	r3, 84baa <_Balloc+0x1e>
   84b96:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   84b9a:	b180      	cbz	r0, 84bbe <_Balloc+0x32>
   84b9c:	6802      	ldr	r2, [r0, #0]
   84b9e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   84ba2:	2300      	movs	r3, #0
   84ba4:	6103      	str	r3, [r0, #16]
   84ba6:	60c3      	str	r3, [r0, #12]
   84ba8:	bd70      	pop	{r4, r5, r6, pc}
   84baa:	2221      	movs	r2, #33	; 0x21
   84bac:	2104      	movs	r1, #4
   84bae:	f000 fbe7 	bl	85380 <_calloc_r>
   84bb2:	64e8      	str	r0, [r5, #76]	; 0x4c
   84bb4:	4603      	mov	r3, r0
   84bb6:	2800      	cmp	r0, #0
   84bb8:	d1ed      	bne.n	84b96 <_Balloc+0xa>
   84bba:	2000      	movs	r0, #0
   84bbc:	bd70      	pop	{r4, r5, r6, pc}
   84bbe:	2101      	movs	r1, #1
   84bc0:	fa01 f604 	lsl.w	r6, r1, r4
   84bc4:	1d72      	adds	r2, r6, #5
   84bc6:	4628      	mov	r0, r5
   84bc8:	0092      	lsls	r2, r2, #2
   84bca:	f000 fbd9 	bl	85380 <_calloc_r>
   84bce:	2800      	cmp	r0, #0
   84bd0:	d0f3      	beq.n	84bba <_Balloc+0x2e>
   84bd2:	6044      	str	r4, [r0, #4]
   84bd4:	6086      	str	r6, [r0, #8]
   84bd6:	e7e4      	b.n	84ba2 <_Balloc+0x16>

00084bd8 <_Bfree>:
   84bd8:	b131      	cbz	r1, 84be8 <_Bfree+0x10>
   84bda:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84bdc:	684a      	ldr	r2, [r1, #4]
   84bde:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   84be2:	6008      	str	r0, [r1, #0]
   84be4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   84be8:	4770      	bx	lr
   84bea:	bf00      	nop

00084bec <__multadd>:
   84bec:	b5f0      	push	{r4, r5, r6, r7, lr}
   84bee:	460c      	mov	r4, r1
   84bf0:	4605      	mov	r5, r0
   84bf2:	f04f 0e00 	mov.w	lr, #0
   84bf6:	690e      	ldr	r6, [r1, #16]
   84bf8:	b083      	sub	sp, #12
   84bfa:	f101 0714 	add.w	r7, r1, #20
   84bfe:	6838      	ldr	r0, [r7, #0]
   84c00:	f10e 0e01 	add.w	lr, lr, #1
   84c04:	b281      	uxth	r1, r0
   84c06:	fb02 3301 	mla	r3, r2, r1, r3
   84c0a:	0c01      	lsrs	r1, r0, #16
   84c0c:	0c18      	lsrs	r0, r3, #16
   84c0e:	fb02 0101 	mla	r1, r2, r1, r0
   84c12:	b29b      	uxth	r3, r3
   84c14:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   84c18:	4576      	cmp	r6, lr
   84c1a:	f847 3b04 	str.w	r3, [r7], #4
   84c1e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   84c22:	dcec      	bgt.n	84bfe <__multadd+0x12>
   84c24:	b13b      	cbz	r3, 84c36 <__multadd+0x4a>
   84c26:	68a2      	ldr	r2, [r4, #8]
   84c28:	4296      	cmp	r6, r2
   84c2a:	da07      	bge.n	84c3c <__multadd+0x50>
   84c2c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84c30:	3601      	adds	r6, #1
   84c32:	6153      	str	r3, [r2, #20]
   84c34:	6126      	str	r6, [r4, #16]
   84c36:	4620      	mov	r0, r4
   84c38:	b003      	add	sp, #12
   84c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84c3c:	6861      	ldr	r1, [r4, #4]
   84c3e:	4628      	mov	r0, r5
   84c40:	3101      	adds	r1, #1
   84c42:	9301      	str	r3, [sp, #4]
   84c44:	f7ff ffa2 	bl	84b8c <_Balloc>
   84c48:	4607      	mov	r7, r0
   84c4a:	6922      	ldr	r2, [r4, #16]
   84c4c:	f104 010c 	add.w	r1, r4, #12
   84c50:	3202      	adds	r2, #2
   84c52:	0092      	lsls	r2, r2, #2
   84c54:	300c      	adds	r0, #12
   84c56:	f7ff ff17 	bl	84a88 <memcpy>
   84c5a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84c5c:	6861      	ldr	r1, [r4, #4]
   84c5e:	9b01      	ldr	r3, [sp, #4]
   84c60:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84c64:	6020      	str	r0, [r4, #0]
   84c66:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   84c6a:	463c      	mov	r4, r7
   84c6c:	e7de      	b.n	84c2c <__multadd+0x40>
   84c6e:	bf00      	nop

00084c70 <__hi0bits>:
   84c70:	0c02      	lsrs	r2, r0, #16
   84c72:	0412      	lsls	r2, r2, #16
   84c74:	4603      	mov	r3, r0
   84c76:	b9b2      	cbnz	r2, 84ca6 <__hi0bits+0x36>
   84c78:	0403      	lsls	r3, r0, #16
   84c7a:	2010      	movs	r0, #16
   84c7c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84c80:	bf04      	itt	eq
   84c82:	021b      	lsleq	r3, r3, #8
   84c84:	3008      	addeq	r0, #8
   84c86:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   84c8a:	bf04      	itt	eq
   84c8c:	011b      	lsleq	r3, r3, #4
   84c8e:	3004      	addeq	r0, #4
   84c90:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84c94:	bf04      	itt	eq
   84c96:	009b      	lsleq	r3, r3, #2
   84c98:	3002      	addeq	r0, #2
   84c9a:	2b00      	cmp	r3, #0
   84c9c:	db02      	blt.n	84ca4 <__hi0bits+0x34>
   84c9e:	005b      	lsls	r3, r3, #1
   84ca0:	d403      	bmi.n	84caa <__hi0bits+0x3a>
   84ca2:	2020      	movs	r0, #32
   84ca4:	4770      	bx	lr
   84ca6:	2000      	movs	r0, #0
   84ca8:	e7e8      	b.n	84c7c <__hi0bits+0xc>
   84caa:	3001      	adds	r0, #1
   84cac:	4770      	bx	lr
   84cae:	bf00      	nop

00084cb0 <__lo0bits>:
   84cb0:	6803      	ldr	r3, [r0, #0]
   84cb2:	4601      	mov	r1, r0
   84cb4:	f013 0207 	ands.w	r2, r3, #7
   84cb8:	d007      	beq.n	84cca <__lo0bits+0x1a>
   84cba:	07da      	lsls	r2, r3, #31
   84cbc:	d421      	bmi.n	84d02 <__lo0bits+0x52>
   84cbe:	0798      	lsls	r0, r3, #30
   84cc0:	d421      	bmi.n	84d06 <__lo0bits+0x56>
   84cc2:	089b      	lsrs	r3, r3, #2
   84cc4:	600b      	str	r3, [r1, #0]
   84cc6:	2002      	movs	r0, #2
   84cc8:	4770      	bx	lr
   84cca:	b298      	uxth	r0, r3
   84ccc:	b198      	cbz	r0, 84cf6 <__lo0bits+0x46>
   84cce:	4610      	mov	r0, r2
   84cd0:	f013 0fff 	tst.w	r3, #255	; 0xff
   84cd4:	bf04      	itt	eq
   84cd6:	0a1b      	lsreq	r3, r3, #8
   84cd8:	3008      	addeq	r0, #8
   84cda:	071a      	lsls	r2, r3, #28
   84cdc:	bf04      	itt	eq
   84cde:	091b      	lsreq	r3, r3, #4
   84ce0:	3004      	addeq	r0, #4
   84ce2:	079a      	lsls	r2, r3, #30
   84ce4:	bf04      	itt	eq
   84ce6:	089b      	lsreq	r3, r3, #2
   84ce8:	3002      	addeq	r0, #2
   84cea:	07da      	lsls	r2, r3, #31
   84cec:	d407      	bmi.n	84cfe <__lo0bits+0x4e>
   84cee:	085b      	lsrs	r3, r3, #1
   84cf0:	d104      	bne.n	84cfc <__lo0bits+0x4c>
   84cf2:	2020      	movs	r0, #32
   84cf4:	4770      	bx	lr
   84cf6:	0c1b      	lsrs	r3, r3, #16
   84cf8:	2010      	movs	r0, #16
   84cfa:	e7e9      	b.n	84cd0 <__lo0bits+0x20>
   84cfc:	3001      	adds	r0, #1
   84cfe:	600b      	str	r3, [r1, #0]
   84d00:	4770      	bx	lr
   84d02:	2000      	movs	r0, #0
   84d04:	4770      	bx	lr
   84d06:	085b      	lsrs	r3, r3, #1
   84d08:	600b      	str	r3, [r1, #0]
   84d0a:	2001      	movs	r0, #1
   84d0c:	4770      	bx	lr
   84d0e:	bf00      	nop

00084d10 <__i2b>:
   84d10:	b510      	push	{r4, lr}
   84d12:	460c      	mov	r4, r1
   84d14:	2101      	movs	r1, #1
   84d16:	f7ff ff39 	bl	84b8c <_Balloc>
   84d1a:	2201      	movs	r2, #1
   84d1c:	6144      	str	r4, [r0, #20]
   84d1e:	6102      	str	r2, [r0, #16]
   84d20:	bd10      	pop	{r4, pc}
   84d22:	bf00      	nop

00084d24 <__multiply>:
   84d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84d28:	690c      	ldr	r4, [r1, #16]
   84d2a:	6915      	ldr	r5, [r2, #16]
   84d2c:	b083      	sub	sp, #12
   84d2e:	42ac      	cmp	r4, r5
   84d30:	468b      	mov	fp, r1
   84d32:	4616      	mov	r6, r2
   84d34:	da04      	bge.n	84d40 <__multiply+0x1c>
   84d36:	4622      	mov	r2, r4
   84d38:	46b3      	mov	fp, r6
   84d3a:	462c      	mov	r4, r5
   84d3c:	460e      	mov	r6, r1
   84d3e:	4615      	mov	r5, r2
   84d40:	f8db 3008 	ldr.w	r3, [fp, #8]
   84d44:	eb04 0805 	add.w	r8, r4, r5
   84d48:	f8db 1004 	ldr.w	r1, [fp, #4]
   84d4c:	4598      	cmp	r8, r3
   84d4e:	bfc8      	it	gt
   84d50:	3101      	addgt	r1, #1
   84d52:	f7ff ff1b 	bl	84b8c <_Balloc>
   84d56:	f100 0914 	add.w	r9, r0, #20
   84d5a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   84d5e:	45d1      	cmp	r9, sl
   84d60:	9000      	str	r0, [sp, #0]
   84d62:	d205      	bcs.n	84d70 <__multiply+0x4c>
   84d64:	464b      	mov	r3, r9
   84d66:	2100      	movs	r1, #0
   84d68:	f843 1b04 	str.w	r1, [r3], #4
   84d6c:	459a      	cmp	sl, r3
   84d6e:	d8fb      	bhi.n	84d68 <__multiply+0x44>
   84d70:	f106 0c14 	add.w	ip, r6, #20
   84d74:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84d78:	f10b 0b14 	add.w	fp, fp, #20
   84d7c:	459c      	cmp	ip, r3
   84d7e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84d82:	d24b      	bcs.n	84e1c <__multiply+0xf8>
   84d84:	f8cd a004 	str.w	sl, [sp, #4]
   84d88:	469a      	mov	sl, r3
   84d8a:	f8dc 5000 	ldr.w	r5, [ip]
   84d8e:	b2af      	uxth	r7, r5
   84d90:	b1e7      	cbz	r7, 84dcc <__multiply+0xa8>
   84d92:	464d      	mov	r5, r9
   84d94:	465e      	mov	r6, fp
   84d96:	2100      	movs	r1, #0
   84d98:	f856 2b04 	ldr.w	r2, [r6], #4
   84d9c:	6828      	ldr	r0, [r5, #0]
   84d9e:	b293      	uxth	r3, r2
   84da0:	b284      	uxth	r4, r0
   84da2:	0c12      	lsrs	r2, r2, #16
   84da4:	fb07 4303 	mla	r3, r7, r3, r4
   84da8:	0c00      	lsrs	r0, r0, #16
   84daa:	fb07 0202 	mla	r2, r7, r2, r0
   84dae:	440b      	add	r3, r1
   84db0:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   84db4:	b29b      	uxth	r3, r3
   84db6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   84dba:	45b6      	cmp	lr, r6
   84dbc:	f845 3b04 	str.w	r3, [r5], #4
   84dc0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   84dc4:	d8e8      	bhi.n	84d98 <__multiply+0x74>
   84dc6:	6029      	str	r1, [r5, #0]
   84dc8:	f8dc 5000 	ldr.w	r5, [ip]
   84dcc:	0c2d      	lsrs	r5, r5, #16
   84dce:	d01d      	beq.n	84e0c <__multiply+0xe8>
   84dd0:	f8d9 3000 	ldr.w	r3, [r9]
   84dd4:	4648      	mov	r0, r9
   84dd6:	461c      	mov	r4, r3
   84dd8:	4659      	mov	r1, fp
   84dda:	2200      	movs	r2, #0
   84ddc:	880e      	ldrh	r6, [r1, #0]
   84dde:	0c24      	lsrs	r4, r4, #16
   84de0:	fb05 4406 	mla	r4, r5, r6, r4
   84de4:	b29b      	uxth	r3, r3
   84de6:	4422      	add	r2, r4
   84de8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84dec:	f840 3b04 	str.w	r3, [r0], #4
   84df0:	f851 3b04 	ldr.w	r3, [r1], #4
   84df4:	6804      	ldr	r4, [r0, #0]
   84df6:	0c1b      	lsrs	r3, r3, #16
   84df8:	b2a6      	uxth	r6, r4
   84dfa:	fb05 6303 	mla	r3, r5, r3, r6
   84dfe:	458e      	cmp	lr, r1
   84e00:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   84e04:	ea4f 4213 	mov.w	r2, r3, lsr #16
   84e08:	d8e8      	bhi.n	84ddc <__multiply+0xb8>
   84e0a:	6003      	str	r3, [r0, #0]
   84e0c:	f10c 0c04 	add.w	ip, ip, #4
   84e10:	45e2      	cmp	sl, ip
   84e12:	f109 0904 	add.w	r9, r9, #4
   84e16:	d8b8      	bhi.n	84d8a <__multiply+0x66>
   84e18:	f8dd a004 	ldr.w	sl, [sp, #4]
   84e1c:	f1b8 0f00 	cmp.w	r8, #0
   84e20:	dd0b      	ble.n	84e3a <__multiply+0x116>
   84e22:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   84e26:	f1aa 0a04 	sub.w	sl, sl, #4
   84e2a:	b11b      	cbz	r3, 84e34 <__multiply+0x110>
   84e2c:	e005      	b.n	84e3a <__multiply+0x116>
   84e2e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   84e32:	b913      	cbnz	r3, 84e3a <__multiply+0x116>
   84e34:	f1b8 0801 	subs.w	r8, r8, #1
   84e38:	d1f9      	bne.n	84e2e <__multiply+0x10a>
   84e3a:	9800      	ldr	r0, [sp, #0]
   84e3c:	f8c0 8010 	str.w	r8, [r0, #16]
   84e40:	b003      	add	sp, #12
   84e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84e46:	bf00      	nop

00084e48 <__pow5mult>:
   84e48:	f012 0303 	ands.w	r3, r2, #3
   84e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84e50:	4614      	mov	r4, r2
   84e52:	4607      	mov	r7, r0
   84e54:	d12e      	bne.n	84eb4 <__pow5mult+0x6c>
   84e56:	460d      	mov	r5, r1
   84e58:	10a4      	asrs	r4, r4, #2
   84e5a:	d01c      	beq.n	84e96 <__pow5mult+0x4e>
   84e5c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   84e5e:	b396      	cbz	r6, 84ec6 <__pow5mult+0x7e>
   84e60:	07e3      	lsls	r3, r4, #31
   84e62:	f04f 0800 	mov.w	r8, #0
   84e66:	d406      	bmi.n	84e76 <__pow5mult+0x2e>
   84e68:	1064      	asrs	r4, r4, #1
   84e6a:	d014      	beq.n	84e96 <__pow5mult+0x4e>
   84e6c:	6830      	ldr	r0, [r6, #0]
   84e6e:	b1a8      	cbz	r0, 84e9c <__pow5mult+0x54>
   84e70:	4606      	mov	r6, r0
   84e72:	07e3      	lsls	r3, r4, #31
   84e74:	d5f8      	bpl.n	84e68 <__pow5mult+0x20>
   84e76:	4632      	mov	r2, r6
   84e78:	4629      	mov	r1, r5
   84e7a:	4638      	mov	r0, r7
   84e7c:	f7ff ff52 	bl	84d24 <__multiply>
   84e80:	b1b5      	cbz	r5, 84eb0 <__pow5mult+0x68>
   84e82:	686a      	ldr	r2, [r5, #4]
   84e84:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84e86:	1064      	asrs	r4, r4, #1
   84e88:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84e8c:	6029      	str	r1, [r5, #0]
   84e8e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84e92:	4605      	mov	r5, r0
   84e94:	d1ea      	bne.n	84e6c <__pow5mult+0x24>
   84e96:	4628      	mov	r0, r5
   84e98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84e9c:	4632      	mov	r2, r6
   84e9e:	4631      	mov	r1, r6
   84ea0:	4638      	mov	r0, r7
   84ea2:	f7ff ff3f 	bl	84d24 <__multiply>
   84ea6:	6030      	str	r0, [r6, #0]
   84ea8:	f8c0 8000 	str.w	r8, [r0]
   84eac:	4606      	mov	r6, r0
   84eae:	e7e0      	b.n	84e72 <__pow5mult+0x2a>
   84eb0:	4605      	mov	r5, r0
   84eb2:	e7d9      	b.n	84e68 <__pow5mult+0x20>
   84eb4:	4a0b      	ldr	r2, [pc, #44]	; (84ee4 <__pow5mult+0x9c>)
   84eb6:	3b01      	subs	r3, #1
   84eb8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   84ebc:	2300      	movs	r3, #0
   84ebe:	f7ff fe95 	bl	84bec <__multadd>
   84ec2:	4605      	mov	r5, r0
   84ec4:	e7c8      	b.n	84e58 <__pow5mult+0x10>
   84ec6:	2101      	movs	r1, #1
   84ec8:	4638      	mov	r0, r7
   84eca:	f7ff fe5f 	bl	84b8c <_Balloc>
   84ece:	f240 2171 	movw	r1, #625	; 0x271
   84ed2:	2201      	movs	r2, #1
   84ed4:	2300      	movs	r3, #0
   84ed6:	6141      	str	r1, [r0, #20]
   84ed8:	6102      	str	r2, [r0, #16]
   84eda:	4606      	mov	r6, r0
   84edc:	64b8      	str	r0, [r7, #72]	; 0x48
   84ede:	6003      	str	r3, [r0, #0]
   84ee0:	e7be      	b.n	84e60 <__pow5mult+0x18>
   84ee2:	bf00      	nop
   84ee4:	00086ae8 	.word	0x00086ae8

00084ee8 <__lshift>:
   84ee8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84eec:	690b      	ldr	r3, [r1, #16]
   84eee:	1154      	asrs	r4, r2, #5
   84ef0:	eb04 0803 	add.w	r8, r4, r3
   84ef4:	688b      	ldr	r3, [r1, #8]
   84ef6:	f108 0501 	add.w	r5, r8, #1
   84efa:	429d      	cmp	r5, r3
   84efc:	460e      	mov	r6, r1
   84efe:	4691      	mov	r9, r2
   84f00:	4607      	mov	r7, r0
   84f02:	6849      	ldr	r1, [r1, #4]
   84f04:	dd04      	ble.n	84f10 <__lshift+0x28>
   84f06:	005b      	lsls	r3, r3, #1
   84f08:	429d      	cmp	r5, r3
   84f0a:	f101 0101 	add.w	r1, r1, #1
   84f0e:	dcfa      	bgt.n	84f06 <__lshift+0x1e>
   84f10:	4638      	mov	r0, r7
   84f12:	f7ff fe3b 	bl	84b8c <_Balloc>
   84f16:	2c00      	cmp	r4, #0
   84f18:	f100 0314 	add.w	r3, r0, #20
   84f1c:	dd06      	ble.n	84f2c <__lshift+0x44>
   84f1e:	2100      	movs	r1, #0
   84f20:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84f24:	f843 1b04 	str.w	r1, [r3], #4
   84f28:	429a      	cmp	r2, r3
   84f2a:	d1fb      	bne.n	84f24 <__lshift+0x3c>
   84f2c:	6934      	ldr	r4, [r6, #16]
   84f2e:	f106 0114 	add.w	r1, r6, #20
   84f32:	f019 091f 	ands.w	r9, r9, #31
   84f36:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   84f3a:	d01d      	beq.n	84f78 <__lshift+0x90>
   84f3c:	2200      	movs	r2, #0
   84f3e:	f1c9 0c20 	rsb	ip, r9, #32
   84f42:	680c      	ldr	r4, [r1, #0]
   84f44:	fa04 f409 	lsl.w	r4, r4, r9
   84f48:	4314      	orrs	r4, r2
   84f4a:	f843 4b04 	str.w	r4, [r3], #4
   84f4e:	f851 2b04 	ldr.w	r2, [r1], #4
   84f52:	458e      	cmp	lr, r1
   84f54:	fa22 f20c 	lsr.w	r2, r2, ip
   84f58:	d8f3      	bhi.n	84f42 <__lshift+0x5a>
   84f5a:	601a      	str	r2, [r3, #0]
   84f5c:	b10a      	cbz	r2, 84f62 <__lshift+0x7a>
   84f5e:	f108 0502 	add.w	r5, r8, #2
   84f62:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84f64:	6872      	ldr	r2, [r6, #4]
   84f66:	3d01      	subs	r5, #1
   84f68:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84f6c:	6105      	str	r5, [r0, #16]
   84f6e:	6031      	str	r1, [r6, #0]
   84f70:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84f74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84f78:	3b04      	subs	r3, #4
   84f7a:	f851 2b04 	ldr.w	r2, [r1], #4
   84f7e:	458e      	cmp	lr, r1
   84f80:	f843 2f04 	str.w	r2, [r3, #4]!
   84f84:	d8f9      	bhi.n	84f7a <__lshift+0x92>
   84f86:	e7ec      	b.n	84f62 <__lshift+0x7a>

00084f88 <__mcmp>:
   84f88:	b430      	push	{r4, r5}
   84f8a:	690b      	ldr	r3, [r1, #16]
   84f8c:	4605      	mov	r5, r0
   84f8e:	6900      	ldr	r0, [r0, #16]
   84f90:	1ac0      	subs	r0, r0, r3
   84f92:	d10f      	bne.n	84fb4 <__mcmp+0x2c>
   84f94:	009b      	lsls	r3, r3, #2
   84f96:	3514      	adds	r5, #20
   84f98:	3114      	adds	r1, #20
   84f9a:	4419      	add	r1, r3
   84f9c:	442b      	add	r3, r5
   84f9e:	e001      	b.n	84fa4 <__mcmp+0x1c>
   84fa0:	429d      	cmp	r5, r3
   84fa2:	d207      	bcs.n	84fb4 <__mcmp+0x2c>
   84fa4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   84fa8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84fac:	4294      	cmp	r4, r2
   84fae:	d0f7      	beq.n	84fa0 <__mcmp+0x18>
   84fb0:	d302      	bcc.n	84fb8 <__mcmp+0x30>
   84fb2:	2001      	movs	r0, #1
   84fb4:	bc30      	pop	{r4, r5}
   84fb6:	4770      	bx	lr
   84fb8:	f04f 30ff 	mov.w	r0, #4294967295
   84fbc:	e7fa      	b.n	84fb4 <__mcmp+0x2c>
   84fbe:	bf00      	nop

00084fc0 <__mdiff>:
   84fc0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84fc4:	690c      	ldr	r4, [r1, #16]
   84fc6:	4689      	mov	r9, r1
   84fc8:	6911      	ldr	r1, [r2, #16]
   84fca:	4692      	mov	sl, r2
   84fcc:	1a64      	subs	r4, r4, r1
   84fce:	2c00      	cmp	r4, #0
   84fd0:	d117      	bne.n	85002 <__mdiff+0x42>
   84fd2:	0089      	lsls	r1, r1, #2
   84fd4:	f109 0714 	add.w	r7, r9, #20
   84fd8:	f102 0614 	add.w	r6, r2, #20
   84fdc:	187b      	adds	r3, r7, r1
   84fde:	4431      	add	r1, r6
   84fe0:	e001      	b.n	84fe6 <__mdiff+0x26>
   84fe2:	429f      	cmp	r7, r3
   84fe4:	d265      	bcs.n	850b2 <__mdiff+0xf2>
   84fe6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   84fea:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84fee:	4295      	cmp	r5, r2
   84ff0:	d0f7      	beq.n	84fe2 <__mdiff+0x22>
   84ff2:	d267      	bcs.n	850c4 <__mdiff+0x104>
   84ff4:	464b      	mov	r3, r9
   84ff6:	46bb      	mov	fp, r7
   84ff8:	46d1      	mov	r9, sl
   84ffa:	4637      	mov	r7, r6
   84ffc:	469a      	mov	sl, r3
   84ffe:	2401      	movs	r4, #1
   85000:	e005      	b.n	8500e <__mdiff+0x4e>
   85002:	db61      	blt.n	850c8 <__mdiff+0x108>
   85004:	2400      	movs	r4, #0
   85006:	f109 0714 	add.w	r7, r9, #20
   8500a:	f10a 0b14 	add.w	fp, sl, #20
   8500e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   85012:	f7ff fdbb 	bl	84b8c <_Balloc>
   85016:	465d      	mov	r5, fp
   85018:	f04f 0800 	mov.w	r8, #0
   8501c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   85020:	f8da 3010 	ldr.w	r3, [sl, #16]
   85024:	463e      	mov	r6, r7
   85026:	60c4      	str	r4, [r0, #12]
   85028:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   8502c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   85030:	f100 0414 	add.w	r4, r0, #20
   85034:	f856 9b04 	ldr.w	r9, [r6], #4
   85038:	f855 2b04 	ldr.w	r2, [r5], #4
   8503c:	fa1f f389 	uxth.w	r3, r9
   85040:	4443      	add	r3, r8
   85042:	fa1f f882 	uxth.w	r8, r2
   85046:	0c12      	lsrs	r2, r2, #16
   85048:	eba3 0308 	sub.w	r3, r3, r8
   8504c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   85050:	eb02 4223 	add.w	r2, r2, r3, asr #16
   85054:	b29b      	uxth	r3, r3
   85056:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8505a:	45ac      	cmp	ip, r5
   8505c:	f844 3b04 	str.w	r3, [r4], #4
   85060:	ea4f 4822 	mov.w	r8, r2, asr #16
   85064:	d8e6      	bhi.n	85034 <__mdiff+0x74>
   85066:	42b7      	cmp	r7, r6
   85068:	d917      	bls.n	8509a <__mdiff+0xda>
   8506a:	46a4      	mov	ip, r4
   8506c:	4635      	mov	r5, r6
   8506e:	f855 3b04 	ldr.w	r3, [r5], #4
   85072:	b299      	uxth	r1, r3
   85074:	4441      	add	r1, r8
   85076:	140a      	asrs	r2, r1, #16
   85078:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   8507c:	b289      	uxth	r1, r1
   8507e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   85082:	42af      	cmp	r7, r5
   85084:	f84c 3b04 	str.w	r3, [ip], #4
   85088:	ea4f 4822 	mov.w	r8, r2, asr #16
   8508c:	d8ef      	bhi.n	8506e <__mdiff+0xae>
   8508e:	43f6      	mvns	r6, r6
   85090:	4437      	add	r7, r6
   85092:	f027 0703 	bic.w	r7, r7, #3
   85096:	3704      	adds	r7, #4
   85098:	443c      	add	r4, r7
   8509a:	3c04      	subs	r4, #4
   8509c:	b92b      	cbnz	r3, 850aa <__mdiff+0xea>
   8509e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   850a2:	f10e 3eff 	add.w	lr, lr, #4294967295
   850a6:	2b00      	cmp	r3, #0
   850a8:	d0f9      	beq.n	8509e <__mdiff+0xde>
   850aa:	f8c0 e010 	str.w	lr, [r0, #16]
   850ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850b2:	2100      	movs	r1, #0
   850b4:	f7ff fd6a 	bl	84b8c <_Balloc>
   850b8:	2201      	movs	r2, #1
   850ba:	2300      	movs	r3, #0
   850bc:	6102      	str	r2, [r0, #16]
   850be:	6143      	str	r3, [r0, #20]
   850c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850c4:	46b3      	mov	fp, r6
   850c6:	e7a2      	b.n	8500e <__mdiff+0x4e>
   850c8:	464b      	mov	r3, r9
   850ca:	f109 0b14 	add.w	fp, r9, #20
   850ce:	f102 0714 	add.w	r7, r2, #20
   850d2:	4691      	mov	r9, r2
   850d4:	2401      	movs	r4, #1
   850d6:	469a      	mov	sl, r3
   850d8:	e799      	b.n	8500e <__mdiff+0x4e>
   850da:	bf00      	nop

000850dc <__d2b>:
   850dc:	b5f0      	push	{r4, r5, r6, r7, lr}
   850de:	2101      	movs	r1, #1
   850e0:	b083      	sub	sp, #12
   850e2:	461c      	mov	r4, r3
   850e4:	f3c3 550a 	ubfx	r5, r3, #20, #11
   850e8:	4616      	mov	r6, r2
   850ea:	f7ff fd4f 	bl	84b8c <_Balloc>
   850ee:	f3c4 0413 	ubfx	r4, r4, #0, #20
   850f2:	4607      	mov	r7, r0
   850f4:	b10d      	cbz	r5, 850fa <__d2b+0x1e>
   850f6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   850fa:	9401      	str	r4, [sp, #4]
   850fc:	b306      	cbz	r6, 85140 <__d2b+0x64>
   850fe:	a802      	add	r0, sp, #8
   85100:	f840 6d08 	str.w	r6, [r0, #-8]!
   85104:	f7ff fdd4 	bl	84cb0 <__lo0bits>
   85108:	2800      	cmp	r0, #0
   8510a:	d130      	bne.n	8516e <__d2b+0x92>
   8510c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85110:	617a      	str	r2, [r7, #20]
   85112:	2b00      	cmp	r3, #0
   85114:	bf0c      	ite	eq
   85116:	2101      	moveq	r1, #1
   85118:	2102      	movne	r1, #2
   8511a:	61bb      	str	r3, [r7, #24]
   8511c:	6139      	str	r1, [r7, #16]
   8511e:	b9d5      	cbnz	r5, 85156 <__d2b+0x7a>
   85120:	9a08      	ldr	r2, [sp, #32]
   85122:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   85126:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   8512a:	6010      	str	r0, [r2, #0]
   8512c:	6918      	ldr	r0, [r3, #16]
   8512e:	f7ff fd9f 	bl	84c70 <__hi0bits>
   85132:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85134:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   85138:	6018      	str	r0, [r3, #0]
   8513a:	4638      	mov	r0, r7
   8513c:	b003      	add	sp, #12
   8513e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85140:	a801      	add	r0, sp, #4
   85142:	f7ff fdb5 	bl	84cb0 <__lo0bits>
   85146:	2201      	movs	r2, #1
   85148:	9b01      	ldr	r3, [sp, #4]
   8514a:	4611      	mov	r1, r2
   8514c:	3020      	adds	r0, #32
   8514e:	613a      	str	r2, [r7, #16]
   85150:	617b      	str	r3, [r7, #20]
   85152:	2d00      	cmp	r5, #0
   85154:	d0e4      	beq.n	85120 <__d2b+0x44>
   85156:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   8515a:	9a08      	ldr	r2, [sp, #32]
   8515c:	4403      	add	r3, r0
   8515e:	6013      	str	r3, [r2, #0]
   85160:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85162:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   85166:	6018      	str	r0, [r3, #0]
   85168:	4638      	mov	r0, r7
   8516a:	b003      	add	sp, #12
   8516c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8516e:	9b01      	ldr	r3, [sp, #4]
   85170:	f1c0 0220 	rsb	r2, r0, #32
   85174:	9900      	ldr	r1, [sp, #0]
   85176:	fa03 f202 	lsl.w	r2, r3, r2
   8517a:	430a      	orrs	r2, r1
   8517c:	40c3      	lsrs	r3, r0
   8517e:	9301      	str	r3, [sp, #4]
   85180:	617a      	str	r2, [r7, #20]
   85182:	e7c6      	b.n	85112 <__d2b+0x36>

00085184 <_sbrk_r>:
   85184:	b538      	push	{r3, r4, r5, lr}
   85186:	2300      	movs	r3, #0
   85188:	4c06      	ldr	r4, [pc, #24]	; (851a4 <_sbrk_r+0x20>)
   8518a:	4605      	mov	r5, r0
   8518c:	4608      	mov	r0, r1
   8518e:	6023      	str	r3, [r4, #0]
   85190:	f7fc fd38 	bl	81c04 <_sbrk>
   85194:	1c43      	adds	r3, r0, #1
   85196:	d000      	beq.n	8519a <_sbrk_r+0x16>
   85198:	bd38      	pop	{r3, r4, r5, pc}
   8519a:	6823      	ldr	r3, [r4, #0]
   8519c:	2b00      	cmp	r3, #0
   8519e:	d0fb      	beq.n	85198 <_sbrk_r+0x14>
   851a0:	602b      	str	r3, [r5, #0]
   851a2:	bd38      	pop	{r3, r4, r5, pc}
   851a4:	20071504 	.word	0x20071504

000851a8 <__ssprint_r>:
   851a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   851ac:	6893      	ldr	r3, [r2, #8]
   851ae:	b083      	sub	sp, #12
   851b0:	4690      	mov	r8, r2
   851b2:	2b00      	cmp	r3, #0
   851b4:	d070      	beq.n	85298 <__ssprint_r+0xf0>
   851b6:	4682      	mov	sl, r0
   851b8:	460c      	mov	r4, r1
   851ba:	6817      	ldr	r7, [r2, #0]
   851bc:	688d      	ldr	r5, [r1, #8]
   851be:	6808      	ldr	r0, [r1, #0]
   851c0:	e042      	b.n	85248 <__ssprint_r+0xa0>
   851c2:	89a3      	ldrh	r3, [r4, #12]
   851c4:	f413 6f90 	tst.w	r3, #1152	; 0x480
   851c8:	d02e      	beq.n	85228 <__ssprint_r+0x80>
   851ca:	6965      	ldr	r5, [r4, #20]
   851cc:	6921      	ldr	r1, [r4, #16]
   851ce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   851d2:	eba0 0b01 	sub.w	fp, r0, r1
   851d6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   851da:	f10b 0001 	add.w	r0, fp, #1
   851de:	106d      	asrs	r5, r5, #1
   851e0:	4430      	add	r0, r6
   851e2:	42a8      	cmp	r0, r5
   851e4:	462a      	mov	r2, r5
   851e6:	bf84      	itt	hi
   851e8:	4605      	movhi	r5, r0
   851ea:	462a      	movhi	r2, r5
   851ec:	055b      	lsls	r3, r3, #21
   851ee:	d538      	bpl.n	85262 <__ssprint_r+0xba>
   851f0:	4611      	mov	r1, r2
   851f2:	4650      	mov	r0, sl
   851f4:	f7ff f94a 	bl	8448c <_malloc_r>
   851f8:	2800      	cmp	r0, #0
   851fa:	d03c      	beq.n	85276 <__ssprint_r+0xce>
   851fc:	465a      	mov	r2, fp
   851fe:	6921      	ldr	r1, [r4, #16]
   85200:	9001      	str	r0, [sp, #4]
   85202:	f7ff fc41 	bl	84a88 <memcpy>
   85206:	89a2      	ldrh	r2, [r4, #12]
   85208:	9b01      	ldr	r3, [sp, #4]
   8520a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8520e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   85212:	81a2      	strh	r2, [r4, #12]
   85214:	eba5 020b 	sub.w	r2, r5, fp
   85218:	eb03 000b 	add.w	r0, r3, fp
   8521c:	6165      	str	r5, [r4, #20]
   8521e:	46b3      	mov	fp, r6
   85220:	4635      	mov	r5, r6
   85222:	6123      	str	r3, [r4, #16]
   85224:	6020      	str	r0, [r4, #0]
   85226:	60a2      	str	r2, [r4, #8]
   85228:	465a      	mov	r2, fp
   8522a:	4649      	mov	r1, r9
   8522c:	f000 fa0e 	bl	8564c <memmove>
   85230:	f8d8 3008 	ldr.w	r3, [r8, #8]
   85234:	68a2      	ldr	r2, [r4, #8]
   85236:	6820      	ldr	r0, [r4, #0]
   85238:	1b55      	subs	r5, r2, r5
   8523a:	4458      	add	r0, fp
   8523c:	1b9e      	subs	r6, r3, r6
   8523e:	60a5      	str	r5, [r4, #8]
   85240:	6020      	str	r0, [r4, #0]
   85242:	f8c8 6008 	str.w	r6, [r8, #8]
   85246:	b33e      	cbz	r6, 85298 <__ssprint_r+0xf0>
   85248:	687e      	ldr	r6, [r7, #4]
   8524a:	463b      	mov	r3, r7
   8524c:	3708      	adds	r7, #8
   8524e:	2e00      	cmp	r6, #0
   85250:	d0fa      	beq.n	85248 <__ssprint_r+0xa0>
   85252:	42ae      	cmp	r6, r5
   85254:	f8d3 9000 	ldr.w	r9, [r3]
   85258:	46ab      	mov	fp, r5
   8525a:	d2b2      	bcs.n	851c2 <__ssprint_r+0x1a>
   8525c:	4635      	mov	r5, r6
   8525e:	46b3      	mov	fp, r6
   85260:	e7e2      	b.n	85228 <__ssprint_r+0x80>
   85262:	4650      	mov	r0, sl
   85264:	f000 fa56 	bl	85714 <_realloc_r>
   85268:	4603      	mov	r3, r0
   8526a:	2800      	cmp	r0, #0
   8526c:	d1d2      	bne.n	85214 <__ssprint_r+0x6c>
   8526e:	6921      	ldr	r1, [r4, #16]
   85270:	4650      	mov	r0, sl
   85272:	f000 f905 	bl	85480 <_free_r>
   85276:	230c      	movs	r3, #12
   85278:	2200      	movs	r2, #0
   8527a:	f04f 30ff 	mov.w	r0, #4294967295
   8527e:	f8ca 3000 	str.w	r3, [sl]
   85282:	89a3      	ldrh	r3, [r4, #12]
   85284:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85288:	81a3      	strh	r3, [r4, #12]
   8528a:	f8c8 2008 	str.w	r2, [r8, #8]
   8528e:	f8c8 2004 	str.w	r2, [r8, #4]
   85292:	b003      	add	sp, #12
   85294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85298:	2000      	movs	r0, #0
   8529a:	f8c8 0004 	str.w	r0, [r8, #4]
   8529e:	b003      	add	sp, #12
   852a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000852a4 <__ascii_wctomb>:
   852a4:	b119      	cbz	r1, 852ae <__ascii_wctomb+0xa>
   852a6:	2aff      	cmp	r2, #255	; 0xff
   852a8:	d803      	bhi.n	852b2 <__ascii_wctomb+0xe>
   852aa:	700a      	strb	r2, [r1, #0]
   852ac:	2101      	movs	r1, #1
   852ae:	4608      	mov	r0, r1
   852b0:	4770      	bx	lr
   852b2:	238a      	movs	r3, #138	; 0x8a
   852b4:	f04f 31ff 	mov.w	r1, #4294967295
   852b8:	6003      	str	r3, [r0, #0]
   852ba:	e7f8      	b.n	852ae <__ascii_wctomb+0xa>

000852bc <__register_exitproc>:
   852bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   852c0:	4d2c      	ldr	r5, [pc, #176]	; (85374 <__register_exitproc+0xb8>)
   852c2:	4606      	mov	r6, r0
   852c4:	6828      	ldr	r0, [r5, #0]
   852c6:	4698      	mov	r8, r3
   852c8:	460f      	mov	r7, r1
   852ca:	4691      	mov	r9, r2
   852cc:	f7ff f8da 	bl	84484 <__retarget_lock_acquire_recursive>
   852d0:	4b29      	ldr	r3, [pc, #164]	; (85378 <__register_exitproc+0xbc>)
   852d2:	681c      	ldr	r4, [r3, #0]
   852d4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   852d8:	2b00      	cmp	r3, #0
   852da:	d03e      	beq.n	8535a <__register_exitproc+0x9e>
   852dc:	685a      	ldr	r2, [r3, #4]
   852de:	2a1f      	cmp	r2, #31
   852e0:	dc1c      	bgt.n	8531c <__register_exitproc+0x60>
   852e2:	f102 0e01 	add.w	lr, r2, #1
   852e6:	b176      	cbz	r6, 85306 <__register_exitproc+0x4a>
   852e8:	2101      	movs	r1, #1
   852ea:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   852ee:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   852f2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   852f6:	4091      	lsls	r1, r2
   852f8:	4308      	orrs	r0, r1
   852fa:	2e02      	cmp	r6, #2
   852fc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   85300:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   85304:	d023      	beq.n	8534e <__register_exitproc+0x92>
   85306:	3202      	adds	r2, #2
   85308:	f8c3 e004 	str.w	lr, [r3, #4]
   8530c:	6828      	ldr	r0, [r5, #0]
   8530e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   85312:	f7ff f8b9 	bl	84488 <__retarget_lock_release_recursive>
   85316:	2000      	movs	r0, #0
   85318:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8531c:	4b17      	ldr	r3, [pc, #92]	; (8537c <__register_exitproc+0xc0>)
   8531e:	b30b      	cbz	r3, 85364 <__register_exitproc+0xa8>
   85320:	f44f 70c8 	mov.w	r0, #400	; 0x190
   85324:	f3af 8000 	nop.w
   85328:	4603      	mov	r3, r0
   8532a:	b1d8      	cbz	r0, 85364 <__register_exitproc+0xa8>
   8532c:	2000      	movs	r0, #0
   8532e:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   85332:	f04f 0e01 	mov.w	lr, #1
   85336:	6058      	str	r0, [r3, #4]
   85338:	6019      	str	r1, [r3, #0]
   8533a:	4602      	mov	r2, r0
   8533c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   85340:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   85344:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   85348:	2e00      	cmp	r6, #0
   8534a:	d0dc      	beq.n	85306 <__register_exitproc+0x4a>
   8534c:	e7cc      	b.n	852e8 <__register_exitproc+0x2c>
   8534e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   85352:	4301      	orrs	r1, r0
   85354:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   85358:	e7d5      	b.n	85306 <__register_exitproc+0x4a>
   8535a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8535e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   85362:	e7bb      	b.n	852dc <__register_exitproc+0x20>
   85364:	6828      	ldr	r0, [r5, #0]
   85366:	f7ff f88f 	bl	84488 <__retarget_lock_release_recursive>
   8536a:	f04f 30ff 	mov.w	r0, #4294967295
   8536e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85372:	bf00      	nop
   85374:	200709c0 	.word	0x200709c0
   85378:	0008696c 	.word	0x0008696c
   8537c:	00000000 	.word	0x00000000

00085380 <_calloc_r>:
   85380:	b510      	push	{r4, lr}
   85382:	fb02 f101 	mul.w	r1, r2, r1
   85386:	f7ff f881 	bl	8448c <_malloc_r>
   8538a:	4604      	mov	r4, r0
   8538c:	b1d8      	cbz	r0, 853c6 <_calloc_r+0x46>
   8538e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   85392:	f022 0203 	bic.w	r2, r2, #3
   85396:	3a04      	subs	r2, #4
   85398:	2a24      	cmp	r2, #36	; 0x24
   8539a:	d818      	bhi.n	853ce <_calloc_r+0x4e>
   8539c:	2a13      	cmp	r2, #19
   8539e:	d914      	bls.n	853ca <_calloc_r+0x4a>
   853a0:	2300      	movs	r3, #0
   853a2:	2a1b      	cmp	r2, #27
   853a4:	6003      	str	r3, [r0, #0]
   853a6:	6043      	str	r3, [r0, #4]
   853a8:	d916      	bls.n	853d8 <_calloc_r+0x58>
   853aa:	2a24      	cmp	r2, #36	; 0x24
   853ac:	6083      	str	r3, [r0, #8]
   853ae:	60c3      	str	r3, [r0, #12]
   853b0:	bf11      	iteee	ne
   853b2:	f100 0210 	addne.w	r2, r0, #16
   853b6:	6103      	streq	r3, [r0, #16]
   853b8:	6143      	streq	r3, [r0, #20]
   853ba:	f100 0218 	addeq.w	r2, r0, #24
   853be:	2300      	movs	r3, #0
   853c0:	6013      	str	r3, [r2, #0]
   853c2:	6053      	str	r3, [r2, #4]
   853c4:	6093      	str	r3, [r2, #8]
   853c6:	4620      	mov	r0, r4
   853c8:	bd10      	pop	{r4, pc}
   853ca:	4602      	mov	r2, r0
   853cc:	e7f7      	b.n	853be <_calloc_r+0x3e>
   853ce:	2100      	movs	r1, #0
   853d0:	f7fc fc60 	bl	81c94 <memset>
   853d4:	4620      	mov	r0, r4
   853d6:	bd10      	pop	{r4, pc}
   853d8:	f100 0208 	add.w	r2, r0, #8
   853dc:	e7ef      	b.n	853be <_calloc_r+0x3e>
   853de:	bf00      	nop

000853e0 <_malloc_trim_r>:
   853e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   853e2:	460c      	mov	r4, r1
   853e4:	4f23      	ldr	r7, [pc, #140]	; (85474 <_malloc_trim_r+0x94>)
   853e6:	4606      	mov	r6, r0
   853e8:	f7ff fbc4 	bl	84b74 <__malloc_lock>
   853ec:	68bb      	ldr	r3, [r7, #8]
   853ee:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   853f2:	685d      	ldr	r5, [r3, #4]
   853f4:	310f      	adds	r1, #15
   853f6:	f025 0503 	bic.w	r5, r5, #3
   853fa:	4429      	add	r1, r5
   853fc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   85400:	f021 010f 	bic.w	r1, r1, #15
   85404:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   85408:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   8540c:	db07      	blt.n	8541e <_malloc_trim_r+0x3e>
   8540e:	2100      	movs	r1, #0
   85410:	4630      	mov	r0, r6
   85412:	f7ff feb7 	bl	85184 <_sbrk_r>
   85416:	68bb      	ldr	r3, [r7, #8]
   85418:	442b      	add	r3, r5
   8541a:	4298      	cmp	r0, r3
   8541c:	d004      	beq.n	85428 <_malloc_trim_r+0x48>
   8541e:	4630      	mov	r0, r6
   85420:	f7ff fbae 	bl	84b80 <__malloc_unlock>
   85424:	2000      	movs	r0, #0
   85426:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85428:	4261      	negs	r1, r4
   8542a:	4630      	mov	r0, r6
   8542c:	f7ff feaa 	bl	85184 <_sbrk_r>
   85430:	3001      	adds	r0, #1
   85432:	d00d      	beq.n	85450 <_malloc_trim_r+0x70>
   85434:	4b10      	ldr	r3, [pc, #64]	; (85478 <_malloc_trim_r+0x98>)
   85436:	68ba      	ldr	r2, [r7, #8]
   85438:	6819      	ldr	r1, [r3, #0]
   8543a:	1b2d      	subs	r5, r5, r4
   8543c:	f045 0501 	orr.w	r5, r5, #1
   85440:	4630      	mov	r0, r6
   85442:	1b09      	subs	r1, r1, r4
   85444:	6055      	str	r5, [r2, #4]
   85446:	6019      	str	r1, [r3, #0]
   85448:	f7ff fb9a 	bl	84b80 <__malloc_unlock>
   8544c:	2001      	movs	r0, #1
   8544e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85450:	2100      	movs	r1, #0
   85452:	4630      	mov	r0, r6
   85454:	f7ff fe96 	bl	85184 <_sbrk_r>
   85458:	68ba      	ldr	r2, [r7, #8]
   8545a:	1a83      	subs	r3, r0, r2
   8545c:	2b0f      	cmp	r3, #15
   8545e:	ddde      	ble.n	8541e <_malloc_trim_r+0x3e>
   85460:	4c06      	ldr	r4, [pc, #24]	; (8547c <_malloc_trim_r+0x9c>)
   85462:	4905      	ldr	r1, [pc, #20]	; (85478 <_malloc_trim_r+0x98>)
   85464:	6824      	ldr	r4, [r4, #0]
   85466:	f043 0301 	orr.w	r3, r3, #1
   8546a:	1b00      	subs	r0, r0, r4
   8546c:	6053      	str	r3, [r2, #4]
   8546e:	6008      	str	r0, [r1, #0]
   85470:	e7d5      	b.n	8541e <_malloc_trim_r+0x3e>
   85472:	bf00      	nop
   85474:	20070b30 	.word	0x20070b30
   85478:	20070fe0 	.word	0x20070fe0
   8547c:	20070f38 	.word	0x20070f38

00085480 <_free_r>:
   85480:	2900      	cmp	r1, #0
   85482:	d044      	beq.n	8550e <_free_r+0x8e>
   85484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85488:	460d      	mov	r5, r1
   8548a:	4680      	mov	r8, r0
   8548c:	f7ff fb72 	bl	84b74 <__malloc_lock>
   85490:	f855 7c04 	ldr.w	r7, [r5, #-4]
   85494:	4969      	ldr	r1, [pc, #420]	; (8563c <_free_r+0x1bc>)
   85496:	f1a5 0408 	sub.w	r4, r5, #8
   8549a:	f027 0301 	bic.w	r3, r7, #1
   8549e:	18e2      	adds	r2, r4, r3
   854a0:	688e      	ldr	r6, [r1, #8]
   854a2:	6850      	ldr	r0, [r2, #4]
   854a4:	42b2      	cmp	r2, r6
   854a6:	f020 0003 	bic.w	r0, r0, #3
   854aa:	d05e      	beq.n	8556a <_free_r+0xea>
   854ac:	07fe      	lsls	r6, r7, #31
   854ae:	6050      	str	r0, [r2, #4]
   854b0:	d40b      	bmi.n	854ca <_free_r+0x4a>
   854b2:	f855 7c08 	ldr.w	r7, [r5, #-8]
   854b6:	f101 0e08 	add.w	lr, r1, #8
   854ba:	1be4      	subs	r4, r4, r7
   854bc:	68a5      	ldr	r5, [r4, #8]
   854be:	443b      	add	r3, r7
   854c0:	4575      	cmp	r5, lr
   854c2:	d06d      	beq.n	855a0 <_free_r+0x120>
   854c4:	68e7      	ldr	r7, [r4, #12]
   854c6:	60ef      	str	r7, [r5, #12]
   854c8:	60bd      	str	r5, [r7, #8]
   854ca:	1815      	adds	r5, r2, r0
   854cc:	686d      	ldr	r5, [r5, #4]
   854ce:	07ed      	lsls	r5, r5, #31
   854d0:	d53e      	bpl.n	85550 <_free_r+0xd0>
   854d2:	f043 0201 	orr.w	r2, r3, #1
   854d6:	6062      	str	r2, [r4, #4]
   854d8:	50e3      	str	r3, [r4, r3]
   854da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   854de:	d217      	bcs.n	85510 <_free_r+0x90>
   854e0:	2201      	movs	r2, #1
   854e2:	08db      	lsrs	r3, r3, #3
   854e4:	1098      	asrs	r0, r3, #2
   854e6:	684d      	ldr	r5, [r1, #4]
   854e8:	4413      	add	r3, r2
   854ea:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   854ee:	4082      	lsls	r2, r0
   854f0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   854f4:	432a      	orrs	r2, r5
   854f6:	3808      	subs	r0, #8
   854f8:	60e0      	str	r0, [r4, #12]
   854fa:	60a7      	str	r7, [r4, #8]
   854fc:	604a      	str	r2, [r1, #4]
   854fe:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   85502:	60fc      	str	r4, [r7, #12]
   85504:	4640      	mov	r0, r8
   85506:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8550a:	f7ff bb39 	b.w	84b80 <__malloc_unlock>
   8550e:	4770      	bx	lr
   85510:	0a5a      	lsrs	r2, r3, #9
   85512:	2a04      	cmp	r2, #4
   85514:	d852      	bhi.n	855bc <_free_r+0x13c>
   85516:	099a      	lsrs	r2, r3, #6
   85518:	f102 0739 	add.w	r7, r2, #57	; 0x39
   8551c:	00ff      	lsls	r7, r7, #3
   8551e:	f102 0538 	add.w	r5, r2, #56	; 0x38
   85522:	19c8      	adds	r0, r1, r7
   85524:	59ca      	ldr	r2, [r1, r7]
   85526:	3808      	subs	r0, #8
   85528:	4290      	cmp	r0, r2
   8552a:	d04f      	beq.n	855cc <_free_r+0x14c>
   8552c:	6851      	ldr	r1, [r2, #4]
   8552e:	f021 0103 	bic.w	r1, r1, #3
   85532:	428b      	cmp	r3, r1
   85534:	d232      	bcs.n	8559c <_free_r+0x11c>
   85536:	6892      	ldr	r2, [r2, #8]
   85538:	4290      	cmp	r0, r2
   8553a:	d1f7      	bne.n	8552c <_free_r+0xac>
   8553c:	68c3      	ldr	r3, [r0, #12]
   8553e:	60a0      	str	r0, [r4, #8]
   85540:	60e3      	str	r3, [r4, #12]
   85542:	609c      	str	r4, [r3, #8]
   85544:	60c4      	str	r4, [r0, #12]
   85546:	4640      	mov	r0, r8
   85548:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8554c:	f7ff bb18 	b.w	84b80 <__malloc_unlock>
   85550:	6895      	ldr	r5, [r2, #8]
   85552:	4f3b      	ldr	r7, [pc, #236]	; (85640 <_free_r+0x1c0>)
   85554:	4403      	add	r3, r0
   85556:	42bd      	cmp	r5, r7
   85558:	d040      	beq.n	855dc <_free_r+0x15c>
   8555a:	68d0      	ldr	r0, [r2, #12]
   8555c:	f043 0201 	orr.w	r2, r3, #1
   85560:	60e8      	str	r0, [r5, #12]
   85562:	6085      	str	r5, [r0, #8]
   85564:	6062      	str	r2, [r4, #4]
   85566:	50e3      	str	r3, [r4, r3]
   85568:	e7b7      	b.n	854da <_free_r+0x5a>
   8556a:	07ff      	lsls	r7, r7, #31
   8556c:	4403      	add	r3, r0
   8556e:	d407      	bmi.n	85580 <_free_r+0x100>
   85570:	f855 5c08 	ldr.w	r5, [r5, #-8]
   85574:	1b64      	subs	r4, r4, r5
   85576:	68e2      	ldr	r2, [r4, #12]
   85578:	68a0      	ldr	r0, [r4, #8]
   8557a:	442b      	add	r3, r5
   8557c:	60c2      	str	r2, [r0, #12]
   8557e:	6090      	str	r0, [r2, #8]
   85580:	4a30      	ldr	r2, [pc, #192]	; (85644 <_free_r+0x1c4>)
   85582:	f043 0001 	orr.w	r0, r3, #1
   85586:	6812      	ldr	r2, [r2, #0]
   85588:	6060      	str	r0, [r4, #4]
   8558a:	4293      	cmp	r3, r2
   8558c:	608c      	str	r4, [r1, #8]
   8558e:	d3b9      	bcc.n	85504 <_free_r+0x84>
   85590:	4b2d      	ldr	r3, [pc, #180]	; (85648 <_free_r+0x1c8>)
   85592:	4640      	mov	r0, r8
   85594:	6819      	ldr	r1, [r3, #0]
   85596:	f7ff ff23 	bl	853e0 <_malloc_trim_r>
   8559a:	e7b3      	b.n	85504 <_free_r+0x84>
   8559c:	4610      	mov	r0, r2
   8559e:	e7cd      	b.n	8553c <_free_r+0xbc>
   855a0:	1811      	adds	r1, r2, r0
   855a2:	6849      	ldr	r1, [r1, #4]
   855a4:	07c9      	lsls	r1, r1, #31
   855a6:	d444      	bmi.n	85632 <_free_r+0x1b2>
   855a8:	6891      	ldr	r1, [r2, #8]
   855aa:	4403      	add	r3, r0
   855ac:	68d2      	ldr	r2, [r2, #12]
   855ae:	f043 0001 	orr.w	r0, r3, #1
   855b2:	60ca      	str	r2, [r1, #12]
   855b4:	6091      	str	r1, [r2, #8]
   855b6:	6060      	str	r0, [r4, #4]
   855b8:	50e3      	str	r3, [r4, r3]
   855ba:	e7a3      	b.n	85504 <_free_r+0x84>
   855bc:	2a14      	cmp	r2, #20
   855be:	d816      	bhi.n	855ee <_free_r+0x16e>
   855c0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   855c4:	00ff      	lsls	r7, r7, #3
   855c6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   855ca:	e7aa      	b.n	85522 <_free_r+0xa2>
   855cc:	2301      	movs	r3, #1
   855ce:	10aa      	asrs	r2, r5, #2
   855d0:	684d      	ldr	r5, [r1, #4]
   855d2:	4093      	lsls	r3, r2
   855d4:	432b      	orrs	r3, r5
   855d6:	604b      	str	r3, [r1, #4]
   855d8:	4603      	mov	r3, r0
   855da:	e7b0      	b.n	8553e <_free_r+0xbe>
   855dc:	f043 0201 	orr.w	r2, r3, #1
   855e0:	614c      	str	r4, [r1, #20]
   855e2:	610c      	str	r4, [r1, #16]
   855e4:	60e5      	str	r5, [r4, #12]
   855e6:	60a5      	str	r5, [r4, #8]
   855e8:	6062      	str	r2, [r4, #4]
   855ea:	50e3      	str	r3, [r4, r3]
   855ec:	e78a      	b.n	85504 <_free_r+0x84>
   855ee:	2a54      	cmp	r2, #84	; 0x54
   855f0:	d806      	bhi.n	85600 <_free_r+0x180>
   855f2:	0b1a      	lsrs	r2, r3, #12
   855f4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   855f8:	00ff      	lsls	r7, r7, #3
   855fa:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   855fe:	e790      	b.n	85522 <_free_r+0xa2>
   85600:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85604:	d806      	bhi.n	85614 <_free_r+0x194>
   85606:	0bda      	lsrs	r2, r3, #15
   85608:	f102 0778 	add.w	r7, r2, #120	; 0x78
   8560c:	00ff      	lsls	r7, r7, #3
   8560e:	f102 0577 	add.w	r5, r2, #119	; 0x77
   85612:	e786      	b.n	85522 <_free_r+0xa2>
   85614:	f240 5054 	movw	r0, #1364	; 0x554
   85618:	4282      	cmp	r2, r0
   8561a:	d806      	bhi.n	8562a <_free_r+0x1aa>
   8561c:	0c9a      	lsrs	r2, r3, #18
   8561e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   85622:	00ff      	lsls	r7, r7, #3
   85624:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   85628:	e77b      	b.n	85522 <_free_r+0xa2>
   8562a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   8562e:	257e      	movs	r5, #126	; 0x7e
   85630:	e777      	b.n	85522 <_free_r+0xa2>
   85632:	f043 0101 	orr.w	r1, r3, #1
   85636:	6061      	str	r1, [r4, #4]
   85638:	6013      	str	r3, [r2, #0]
   8563a:	e763      	b.n	85504 <_free_r+0x84>
   8563c:	20070b30 	.word	0x20070b30
   85640:	20070b38 	.word	0x20070b38
   85644:	20070f3c 	.word	0x20070f3c
   85648:	20071010 	.word	0x20071010

0008564c <memmove>:
   8564c:	4288      	cmp	r0, r1
   8564e:	b5f0      	push	{r4, r5, r6, r7, lr}
   85650:	d90d      	bls.n	8566e <memmove+0x22>
   85652:	188b      	adds	r3, r1, r2
   85654:	4298      	cmp	r0, r3
   85656:	d20a      	bcs.n	8566e <memmove+0x22>
   85658:	1884      	adds	r4, r0, r2
   8565a:	2a00      	cmp	r2, #0
   8565c:	d051      	beq.n	85702 <memmove+0xb6>
   8565e:	4622      	mov	r2, r4
   85660:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   85664:	4299      	cmp	r1, r3
   85666:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8566a:	d1f9      	bne.n	85660 <memmove+0x14>
   8566c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8566e:	2a0f      	cmp	r2, #15
   85670:	d948      	bls.n	85704 <memmove+0xb8>
   85672:	ea41 0300 	orr.w	r3, r1, r0
   85676:	079b      	lsls	r3, r3, #30
   85678:	d146      	bne.n	85708 <memmove+0xbc>
   8567a:	4615      	mov	r5, r2
   8567c:	f100 0410 	add.w	r4, r0, #16
   85680:	f101 0310 	add.w	r3, r1, #16
   85684:	f853 6c10 	ldr.w	r6, [r3, #-16]
   85688:	3d10      	subs	r5, #16
   8568a:	f844 6c10 	str.w	r6, [r4, #-16]
   8568e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   85692:	2d0f      	cmp	r5, #15
   85694:	f844 6c0c 	str.w	r6, [r4, #-12]
   85698:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8569c:	f104 0410 	add.w	r4, r4, #16
   856a0:	f844 6c18 	str.w	r6, [r4, #-24]
   856a4:	f853 6c04 	ldr.w	r6, [r3, #-4]
   856a8:	f103 0310 	add.w	r3, r3, #16
   856ac:	f844 6c14 	str.w	r6, [r4, #-20]
   856b0:	d8e8      	bhi.n	85684 <memmove+0x38>
   856b2:	f1a2 0310 	sub.w	r3, r2, #16
   856b6:	f023 030f 	bic.w	r3, r3, #15
   856ba:	f002 0e0f 	and.w	lr, r2, #15
   856be:	3310      	adds	r3, #16
   856c0:	f1be 0f03 	cmp.w	lr, #3
   856c4:	4419      	add	r1, r3
   856c6:	4403      	add	r3, r0
   856c8:	d921      	bls.n	8570e <memmove+0xc2>
   856ca:	460e      	mov	r6, r1
   856cc:	4674      	mov	r4, lr
   856ce:	1f1d      	subs	r5, r3, #4
   856d0:	f856 7b04 	ldr.w	r7, [r6], #4
   856d4:	3c04      	subs	r4, #4
   856d6:	2c03      	cmp	r4, #3
   856d8:	f845 7f04 	str.w	r7, [r5, #4]!
   856dc:	d8f8      	bhi.n	856d0 <memmove+0x84>
   856de:	f1ae 0404 	sub.w	r4, lr, #4
   856e2:	f024 0403 	bic.w	r4, r4, #3
   856e6:	3404      	adds	r4, #4
   856e8:	4421      	add	r1, r4
   856ea:	4423      	add	r3, r4
   856ec:	f002 0203 	and.w	r2, r2, #3
   856f0:	b162      	cbz	r2, 8570c <memmove+0xc0>
   856f2:	3b01      	subs	r3, #1
   856f4:	440a      	add	r2, r1
   856f6:	f811 4b01 	ldrb.w	r4, [r1], #1
   856fa:	428a      	cmp	r2, r1
   856fc:	f803 4f01 	strb.w	r4, [r3, #1]!
   85700:	d1f9      	bne.n	856f6 <memmove+0xaa>
   85702:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85704:	4603      	mov	r3, r0
   85706:	e7f3      	b.n	856f0 <memmove+0xa4>
   85708:	4603      	mov	r3, r0
   8570a:	e7f2      	b.n	856f2 <memmove+0xa6>
   8570c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8570e:	4672      	mov	r2, lr
   85710:	e7ee      	b.n	856f0 <memmove+0xa4>
   85712:	bf00      	nop

00085714 <_realloc_r>:
   85714:	2900      	cmp	r1, #0
   85716:	f000 8094 	beq.w	85842 <_realloc_r+0x12e>
   8571a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8571e:	460c      	mov	r4, r1
   85720:	4615      	mov	r5, r2
   85722:	b083      	sub	sp, #12
   85724:	4680      	mov	r8, r0
   85726:	f105 060b 	add.w	r6, r5, #11
   8572a:	f7ff fa23 	bl	84b74 <__malloc_lock>
   8572e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   85732:	2e16      	cmp	r6, #22
   85734:	f02e 0703 	bic.w	r7, lr, #3
   85738:	f1a4 0908 	sub.w	r9, r4, #8
   8573c:	d83c      	bhi.n	857b8 <_realloc_r+0xa4>
   8573e:	2210      	movs	r2, #16
   85740:	4616      	mov	r6, r2
   85742:	42b5      	cmp	r5, r6
   85744:	d83d      	bhi.n	857c2 <_realloc_r+0xae>
   85746:	4297      	cmp	r7, r2
   85748:	da43      	bge.n	857d2 <_realloc_r+0xbe>
   8574a:	4bc6      	ldr	r3, [pc, #792]	; (85a64 <_realloc_r+0x350>)
   8574c:	eb09 0007 	add.w	r0, r9, r7
   85750:	6899      	ldr	r1, [r3, #8]
   85752:	4288      	cmp	r0, r1
   85754:	f000 80c3 	beq.w	858de <_realloc_r+0x1ca>
   85758:	6843      	ldr	r3, [r0, #4]
   8575a:	f023 0101 	bic.w	r1, r3, #1
   8575e:	4401      	add	r1, r0
   85760:	6849      	ldr	r1, [r1, #4]
   85762:	07c9      	lsls	r1, r1, #31
   85764:	d54d      	bpl.n	85802 <_realloc_r+0xee>
   85766:	f01e 0f01 	tst.w	lr, #1
   8576a:	f000 809b 	beq.w	858a4 <_realloc_r+0x190>
   8576e:	4629      	mov	r1, r5
   85770:	4640      	mov	r0, r8
   85772:	f7fe fe8b 	bl	8448c <_malloc_r>
   85776:	4605      	mov	r5, r0
   85778:	2800      	cmp	r0, #0
   8577a:	d03b      	beq.n	857f4 <_realloc_r+0xe0>
   8577c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85780:	f1a0 0208 	sub.w	r2, r0, #8
   85784:	f023 0301 	bic.w	r3, r3, #1
   85788:	444b      	add	r3, r9
   8578a:	429a      	cmp	r2, r3
   8578c:	f000 812b 	beq.w	859e6 <_realloc_r+0x2d2>
   85790:	1f3a      	subs	r2, r7, #4
   85792:	2a24      	cmp	r2, #36	; 0x24
   85794:	f200 8118 	bhi.w	859c8 <_realloc_r+0x2b4>
   85798:	2a13      	cmp	r2, #19
   8579a:	f200 80eb 	bhi.w	85974 <_realloc_r+0x260>
   8579e:	4603      	mov	r3, r0
   857a0:	4622      	mov	r2, r4
   857a2:	6811      	ldr	r1, [r2, #0]
   857a4:	6019      	str	r1, [r3, #0]
   857a6:	6851      	ldr	r1, [r2, #4]
   857a8:	6059      	str	r1, [r3, #4]
   857aa:	6892      	ldr	r2, [r2, #8]
   857ac:	609a      	str	r2, [r3, #8]
   857ae:	4621      	mov	r1, r4
   857b0:	4640      	mov	r0, r8
   857b2:	f7ff fe65 	bl	85480 <_free_r>
   857b6:	e01d      	b.n	857f4 <_realloc_r+0xe0>
   857b8:	f026 0607 	bic.w	r6, r6, #7
   857bc:	2e00      	cmp	r6, #0
   857be:	4632      	mov	r2, r6
   857c0:	dabf      	bge.n	85742 <_realloc_r+0x2e>
   857c2:	2500      	movs	r5, #0
   857c4:	230c      	movs	r3, #12
   857c6:	4628      	mov	r0, r5
   857c8:	f8c8 3000 	str.w	r3, [r8]
   857cc:	b003      	add	sp, #12
   857ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   857d2:	4625      	mov	r5, r4
   857d4:	1bbb      	subs	r3, r7, r6
   857d6:	2b0f      	cmp	r3, #15
   857d8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   857dc:	d81d      	bhi.n	8581a <_realloc_r+0x106>
   857de:	f002 0201 	and.w	r2, r2, #1
   857e2:	433a      	orrs	r2, r7
   857e4:	eb09 0107 	add.w	r1, r9, r7
   857e8:	f8c9 2004 	str.w	r2, [r9, #4]
   857ec:	684b      	ldr	r3, [r1, #4]
   857ee:	f043 0301 	orr.w	r3, r3, #1
   857f2:	604b      	str	r3, [r1, #4]
   857f4:	4640      	mov	r0, r8
   857f6:	f7ff f9c3 	bl	84b80 <__malloc_unlock>
   857fa:	4628      	mov	r0, r5
   857fc:	b003      	add	sp, #12
   857fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85802:	f023 0303 	bic.w	r3, r3, #3
   85806:	18f9      	adds	r1, r7, r3
   85808:	4291      	cmp	r1, r2
   8580a:	db1d      	blt.n	85848 <_realloc_r+0x134>
   8580c:	68c3      	ldr	r3, [r0, #12]
   8580e:	6882      	ldr	r2, [r0, #8]
   85810:	4625      	mov	r5, r4
   85812:	60d3      	str	r3, [r2, #12]
   85814:	460f      	mov	r7, r1
   85816:	609a      	str	r2, [r3, #8]
   85818:	e7dc      	b.n	857d4 <_realloc_r+0xc0>
   8581a:	f002 0201 	and.w	r2, r2, #1
   8581e:	eb09 0106 	add.w	r1, r9, r6
   85822:	f043 0301 	orr.w	r3, r3, #1
   85826:	4332      	orrs	r2, r6
   85828:	f8c9 2004 	str.w	r2, [r9, #4]
   8582c:	444f      	add	r7, r9
   8582e:	604b      	str	r3, [r1, #4]
   85830:	687b      	ldr	r3, [r7, #4]
   85832:	3108      	adds	r1, #8
   85834:	f043 0301 	orr.w	r3, r3, #1
   85838:	607b      	str	r3, [r7, #4]
   8583a:	4640      	mov	r0, r8
   8583c:	f7ff fe20 	bl	85480 <_free_r>
   85840:	e7d8      	b.n	857f4 <_realloc_r+0xe0>
   85842:	4611      	mov	r1, r2
   85844:	f7fe be22 	b.w	8448c <_malloc_r>
   85848:	f01e 0f01 	tst.w	lr, #1
   8584c:	d18f      	bne.n	8576e <_realloc_r+0x5a>
   8584e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85852:	eba9 0a01 	sub.w	sl, r9, r1
   85856:	f8da 1004 	ldr.w	r1, [sl, #4]
   8585a:	f021 0103 	bic.w	r1, r1, #3
   8585e:	440b      	add	r3, r1
   85860:	443b      	add	r3, r7
   85862:	4293      	cmp	r3, r2
   85864:	db26      	blt.n	858b4 <_realloc_r+0x1a0>
   85866:	4655      	mov	r5, sl
   85868:	68c1      	ldr	r1, [r0, #12]
   8586a:	6880      	ldr	r0, [r0, #8]
   8586c:	1f3a      	subs	r2, r7, #4
   8586e:	60c1      	str	r1, [r0, #12]
   85870:	6088      	str	r0, [r1, #8]
   85872:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85876:	f8da 100c 	ldr.w	r1, [sl, #12]
   8587a:	2a24      	cmp	r2, #36	; 0x24
   8587c:	60c1      	str	r1, [r0, #12]
   8587e:	6088      	str	r0, [r1, #8]
   85880:	d826      	bhi.n	858d0 <_realloc_r+0x1bc>
   85882:	2a13      	cmp	r2, #19
   85884:	f240 8081 	bls.w	8598a <_realloc_r+0x276>
   85888:	6821      	ldr	r1, [r4, #0]
   8588a:	2a1b      	cmp	r2, #27
   8588c:	f8ca 1008 	str.w	r1, [sl, #8]
   85890:	6861      	ldr	r1, [r4, #4]
   85892:	f8ca 100c 	str.w	r1, [sl, #12]
   85896:	f200 80ad 	bhi.w	859f4 <_realloc_r+0x2e0>
   8589a:	f104 0008 	add.w	r0, r4, #8
   8589e:	f10a 0210 	add.w	r2, sl, #16
   858a2:	e074      	b.n	8598e <_realloc_r+0x27a>
   858a4:	f854 3c08 	ldr.w	r3, [r4, #-8]
   858a8:	eba9 0a03 	sub.w	sl, r9, r3
   858ac:	f8da 1004 	ldr.w	r1, [sl, #4]
   858b0:	f021 0103 	bic.w	r1, r1, #3
   858b4:	187b      	adds	r3, r7, r1
   858b6:	4293      	cmp	r3, r2
   858b8:	f6ff af59 	blt.w	8576e <_realloc_r+0x5a>
   858bc:	4655      	mov	r5, sl
   858be:	f8da 100c 	ldr.w	r1, [sl, #12]
   858c2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   858c6:	1f3a      	subs	r2, r7, #4
   858c8:	2a24      	cmp	r2, #36	; 0x24
   858ca:	60c1      	str	r1, [r0, #12]
   858cc:	6088      	str	r0, [r1, #8]
   858ce:	d9d8      	bls.n	85882 <_realloc_r+0x16e>
   858d0:	4621      	mov	r1, r4
   858d2:	4628      	mov	r0, r5
   858d4:	461f      	mov	r7, r3
   858d6:	46d1      	mov	r9, sl
   858d8:	f7ff feb8 	bl	8564c <memmove>
   858dc:	e77a      	b.n	857d4 <_realloc_r+0xc0>
   858de:	6841      	ldr	r1, [r0, #4]
   858e0:	f106 0010 	add.w	r0, r6, #16
   858e4:	f021 0b03 	bic.w	fp, r1, #3
   858e8:	44bb      	add	fp, r7
   858ea:	4583      	cmp	fp, r0
   858ec:	da58      	bge.n	859a0 <_realloc_r+0x28c>
   858ee:	f01e 0f01 	tst.w	lr, #1
   858f2:	f47f af3c 	bne.w	8576e <_realloc_r+0x5a>
   858f6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   858fa:	eba9 0a01 	sub.w	sl, r9, r1
   858fe:	f8da 1004 	ldr.w	r1, [sl, #4]
   85902:	f021 0103 	bic.w	r1, r1, #3
   85906:	448b      	add	fp, r1
   85908:	4558      	cmp	r0, fp
   8590a:	dcd3      	bgt.n	858b4 <_realloc_r+0x1a0>
   8590c:	4655      	mov	r5, sl
   8590e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85912:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85916:	1f3a      	subs	r2, r7, #4
   85918:	2a24      	cmp	r2, #36	; 0x24
   8591a:	60c1      	str	r1, [r0, #12]
   8591c:	6088      	str	r0, [r1, #8]
   8591e:	f200 808d 	bhi.w	85a3c <_realloc_r+0x328>
   85922:	2a13      	cmp	r2, #19
   85924:	f240 8087 	bls.w	85a36 <_realloc_r+0x322>
   85928:	6821      	ldr	r1, [r4, #0]
   8592a:	2a1b      	cmp	r2, #27
   8592c:	f8ca 1008 	str.w	r1, [sl, #8]
   85930:	6861      	ldr	r1, [r4, #4]
   85932:	f8ca 100c 	str.w	r1, [sl, #12]
   85936:	f200 8088 	bhi.w	85a4a <_realloc_r+0x336>
   8593a:	f104 0108 	add.w	r1, r4, #8
   8593e:	f10a 0210 	add.w	r2, sl, #16
   85942:	6808      	ldr	r0, [r1, #0]
   85944:	6010      	str	r0, [r2, #0]
   85946:	6848      	ldr	r0, [r1, #4]
   85948:	6050      	str	r0, [r2, #4]
   8594a:	6889      	ldr	r1, [r1, #8]
   8594c:	6091      	str	r1, [r2, #8]
   8594e:	ebab 0206 	sub.w	r2, fp, r6
   85952:	eb0a 0106 	add.w	r1, sl, r6
   85956:	f042 0201 	orr.w	r2, r2, #1
   8595a:	6099      	str	r1, [r3, #8]
   8595c:	604a      	str	r2, [r1, #4]
   8595e:	f8da 3004 	ldr.w	r3, [sl, #4]
   85962:	4640      	mov	r0, r8
   85964:	f003 0301 	and.w	r3, r3, #1
   85968:	431e      	orrs	r6, r3
   8596a:	f8ca 6004 	str.w	r6, [sl, #4]
   8596e:	f7ff f907 	bl	84b80 <__malloc_unlock>
   85972:	e742      	b.n	857fa <_realloc_r+0xe6>
   85974:	6823      	ldr	r3, [r4, #0]
   85976:	2a1b      	cmp	r2, #27
   85978:	6003      	str	r3, [r0, #0]
   8597a:	6863      	ldr	r3, [r4, #4]
   8597c:	6043      	str	r3, [r0, #4]
   8597e:	d827      	bhi.n	859d0 <_realloc_r+0x2bc>
   85980:	f100 0308 	add.w	r3, r0, #8
   85984:	f104 0208 	add.w	r2, r4, #8
   85988:	e70b      	b.n	857a2 <_realloc_r+0x8e>
   8598a:	4620      	mov	r0, r4
   8598c:	462a      	mov	r2, r5
   8598e:	6801      	ldr	r1, [r0, #0]
   85990:	461f      	mov	r7, r3
   85992:	6011      	str	r1, [r2, #0]
   85994:	6841      	ldr	r1, [r0, #4]
   85996:	46d1      	mov	r9, sl
   85998:	6051      	str	r1, [r2, #4]
   8599a:	6883      	ldr	r3, [r0, #8]
   8599c:	6093      	str	r3, [r2, #8]
   8599e:	e719      	b.n	857d4 <_realloc_r+0xc0>
   859a0:	ebab 0b06 	sub.w	fp, fp, r6
   859a4:	eb09 0106 	add.w	r1, r9, r6
   859a8:	f04b 0201 	orr.w	r2, fp, #1
   859ac:	6099      	str	r1, [r3, #8]
   859ae:	604a      	str	r2, [r1, #4]
   859b0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   859b4:	4640      	mov	r0, r8
   859b6:	f003 0301 	and.w	r3, r3, #1
   859ba:	431e      	orrs	r6, r3
   859bc:	f844 6c04 	str.w	r6, [r4, #-4]
   859c0:	f7ff f8de 	bl	84b80 <__malloc_unlock>
   859c4:	4625      	mov	r5, r4
   859c6:	e718      	b.n	857fa <_realloc_r+0xe6>
   859c8:	4621      	mov	r1, r4
   859ca:	f7ff fe3f 	bl	8564c <memmove>
   859ce:	e6ee      	b.n	857ae <_realloc_r+0x9a>
   859d0:	68a3      	ldr	r3, [r4, #8]
   859d2:	2a24      	cmp	r2, #36	; 0x24
   859d4:	6083      	str	r3, [r0, #8]
   859d6:	68e3      	ldr	r3, [r4, #12]
   859d8:	60c3      	str	r3, [r0, #12]
   859da:	d018      	beq.n	85a0e <_realloc_r+0x2fa>
   859dc:	f100 0310 	add.w	r3, r0, #16
   859e0:	f104 0210 	add.w	r2, r4, #16
   859e4:	e6dd      	b.n	857a2 <_realloc_r+0x8e>
   859e6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   859ea:	4625      	mov	r5, r4
   859ec:	f023 0303 	bic.w	r3, r3, #3
   859f0:	441f      	add	r7, r3
   859f2:	e6ef      	b.n	857d4 <_realloc_r+0xc0>
   859f4:	68a1      	ldr	r1, [r4, #8]
   859f6:	2a24      	cmp	r2, #36	; 0x24
   859f8:	f8ca 1010 	str.w	r1, [sl, #16]
   859fc:	68e1      	ldr	r1, [r4, #12]
   859fe:	f8ca 1014 	str.w	r1, [sl, #20]
   85a02:	d00d      	beq.n	85a20 <_realloc_r+0x30c>
   85a04:	f104 0010 	add.w	r0, r4, #16
   85a08:	f10a 0218 	add.w	r2, sl, #24
   85a0c:	e7bf      	b.n	8598e <_realloc_r+0x27a>
   85a0e:	6922      	ldr	r2, [r4, #16]
   85a10:	f100 0318 	add.w	r3, r0, #24
   85a14:	6102      	str	r2, [r0, #16]
   85a16:	6961      	ldr	r1, [r4, #20]
   85a18:	f104 0218 	add.w	r2, r4, #24
   85a1c:	6141      	str	r1, [r0, #20]
   85a1e:	e6c0      	b.n	857a2 <_realloc_r+0x8e>
   85a20:	6922      	ldr	r2, [r4, #16]
   85a22:	f104 0018 	add.w	r0, r4, #24
   85a26:	f8ca 2018 	str.w	r2, [sl, #24]
   85a2a:	6961      	ldr	r1, [r4, #20]
   85a2c:	f10a 0220 	add.w	r2, sl, #32
   85a30:	f8ca 101c 	str.w	r1, [sl, #28]
   85a34:	e7ab      	b.n	8598e <_realloc_r+0x27a>
   85a36:	4621      	mov	r1, r4
   85a38:	462a      	mov	r2, r5
   85a3a:	e782      	b.n	85942 <_realloc_r+0x22e>
   85a3c:	4621      	mov	r1, r4
   85a3e:	4628      	mov	r0, r5
   85a40:	9301      	str	r3, [sp, #4]
   85a42:	f7ff fe03 	bl	8564c <memmove>
   85a46:	9b01      	ldr	r3, [sp, #4]
   85a48:	e781      	b.n	8594e <_realloc_r+0x23a>
   85a4a:	68a1      	ldr	r1, [r4, #8]
   85a4c:	2a24      	cmp	r2, #36	; 0x24
   85a4e:	f8ca 1010 	str.w	r1, [sl, #16]
   85a52:	68e1      	ldr	r1, [r4, #12]
   85a54:	f8ca 1014 	str.w	r1, [sl, #20]
   85a58:	d006      	beq.n	85a68 <_realloc_r+0x354>
   85a5a:	f104 0110 	add.w	r1, r4, #16
   85a5e:	f10a 0218 	add.w	r2, sl, #24
   85a62:	e76e      	b.n	85942 <_realloc_r+0x22e>
   85a64:	20070b30 	.word	0x20070b30
   85a68:	6922      	ldr	r2, [r4, #16]
   85a6a:	f104 0118 	add.w	r1, r4, #24
   85a6e:	f8ca 2018 	str.w	r2, [sl, #24]
   85a72:	6960      	ldr	r0, [r4, #20]
   85a74:	f10a 0220 	add.w	r2, sl, #32
   85a78:	f8ca 001c 	str.w	r0, [sl, #28]
   85a7c:	e761      	b.n	85942 <_realloc_r+0x22e>
   85a7e:	bf00      	nop

00085a80 <__aeabi_drsub>:
   85a80:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   85a84:	e002      	b.n	85a8c <__adddf3>
   85a86:	bf00      	nop

00085a88 <__aeabi_dsub>:
   85a88:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00085a8c <__adddf3>:
   85a8c:	b530      	push	{r4, r5, lr}
   85a8e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   85a92:	ea4f 0543 	mov.w	r5, r3, lsl #1
   85a96:	ea94 0f05 	teq	r4, r5
   85a9a:	bf08      	it	eq
   85a9c:	ea90 0f02 	teqeq	r0, r2
   85aa0:	bf1f      	itttt	ne
   85aa2:	ea54 0c00 	orrsne.w	ip, r4, r0
   85aa6:	ea55 0c02 	orrsne.w	ip, r5, r2
   85aaa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   85aae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85ab2:	f000 80e2 	beq.w	85c7a <__adddf3+0x1ee>
   85ab6:	ea4f 5454 	mov.w	r4, r4, lsr #21
   85aba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   85abe:	bfb8      	it	lt
   85ac0:	426d      	neglt	r5, r5
   85ac2:	dd0c      	ble.n	85ade <__adddf3+0x52>
   85ac4:	442c      	add	r4, r5
   85ac6:	ea80 0202 	eor.w	r2, r0, r2
   85aca:	ea81 0303 	eor.w	r3, r1, r3
   85ace:	ea82 0000 	eor.w	r0, r2, r0
   85ad2:	ea83 0101 	eor.w	r1, r3, r1
   85ad6:	ea80 0202 	eor.w	r2, r0, r2
   85ada:	ea81 0303 	eor.w	r3, r1, r3
   85ade:	2d36      	cmp	r5, #54	; 0x36
   85ae0:	bf88      	it	hi
   85ae2:	bd30      	pophi	{r4, r5, pc}
   85ae4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85ae8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85aec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   85af0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   85af4:	d002      	beq.n	85afc <__adddf3+0x70>
   85af6:	4240      	negs	r0, r0
   85af8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85afc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   85b00:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85b04:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   85b08:	d002      	beq.n	85b10 <__adddf3+0x84>
   85b0a:	4252      	negs	r2, r2
   85b0c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85b10:	ea94 0f05 	teq	r4, r5
   85b14:	f000 80a7 	beq.w	85c66 <__adddf3+0x1da>
   85b18:	f1a4 0401 	sub.w	r4, r4, #1
   85b1c:	f1d5 0e20 	rsbs	lr, r5, #32
   85b20:	db0d      	blt.n	85b3e <__adddf3+0xb2>
   85b22:	fa02 fc0e 	lsl.w	ip, r2, lr
   85b26:	fa22 f205 	lsr.w	r2, r2, r5
   85b2a:	1880      	adds	r0, r0, r2
   85b2c:	f141 0100 	adc.w	r1, r1, #0
   85b30:	fa03 f20e 	lsl.w	r2, r3, lr
   85b34:	1880      	adds	r0, r0, r2
   85b36:	fa43 f305 	asr.w	r3, r3, r5
   85b3a:	4159      	adcs	r1, r3
   85b3c:	e00e      	b.n	85b5c <__adddf3+0xd0>
   85b3e:	f1a5 0520 	sub.w	r5, r5, #32
   85b42:	f10e 0e20 	add.w	lr, lr, #32
   85b46:	2a01      	cmp	r2, #1
   85b48:	fa03 fc0e 	lsl.w	ip, r3, lr
   85b4c:	bf28      	it	cs
   85b4e:	f04c 0c02 	orrcs.w	ip, ip, #2
   85b52:	fa43 f305 	asr.w	r3, r3, r5
   85b56:	18c0      	adds	r0, r0, r3
   85b58:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   85b5c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85b60:	d507      	bpl.n	85b72 <__adddf3+0xe6>
   85b62:	f04f 0e00 	mov.w	lr, #0
   85b66:	f1dc 0c00 	rsbs	ip, ip, #0
   85b6a:	eb7e 0000 	sbcs.w	r0, lr, r0
   85b6e:	eb6e 0101 	sbc.w	r1, lr, r1
   85b72:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   85b76:	d31b      	bcc.n	85bb0 <__adddf3+0x124>
   85b78:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   85b7c:	d30c      	bcc.n	85b98 <__adddf3+0x10c>
   85b7e:	0849      	lsrs	r1, r1, #1
   85b80:	ea5f 0030 	movs.w	r0, r0, rrx
   85b84:	ea4f 0c3c 	mov.w	ip, ip, rrx
   85b88:	f104 0401 	add.w	r4, r4, #1
   85b8c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   85b90:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   85b94:	f080 809a 	bcs.w	85ccc <__adddf3+0x240>
   85b98:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   85b9c:	bf08      	it	eq
   85b9e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85ba2:	f150 0000 	adcs.w	r0, r0, #0
   85ba6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85baa:	ea41 0105 	orr.w	r1, r1, r5
   85bae:	bd30      	pop	{r4, r5, pc}
   85bb0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   85bb4:	4140      	adcs	r0, r0
   85bb6:	eb41 0101 	adc.w	r1, r1, r1
   85bba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85bbe:	f1a4 0401 	sub.w	r4, r4, #1
   85bc2:	d1e9      	bne.n	85b98 <__adddf3+0x10c>
   85bc4:	f091 0f00 	teq	r1, #0
   85bc8:	bf04      	itt	eq
   85bca:	4601      	moveq	r1, r0
   85bcc:	2000      	moveq	r0, #0
   85bce:	fab1 f381 	clz	r3, r1
   85bd2:	bf08      	it	eq
   85bd4:	3320      	addeq	r3, #32
   85bd6:	f1a3 030b 	sub.w	r3, r3, #11
   85bda:	f1b3 0220 	subs.w	r2, r3, #32
   85bde:	da0c      	bge.n	85bfa <__adddf3+0x16e>
   85be0:	320c      	adds	r2, #12
   85be2:	dd08      	ble.n	85bf6 <__adddf3+0x16a>
   85be4:	f102 0c14 	add.w	ip, r2, #20
   85be8:	f1c2 020c 	rsb	r2, r2, #12
   85bec:	fa01 f00c 	lsl.w	r0, r1, ip
   85bf0:	fa21 f102 	lsr.w	r1, r1, r2
   85bf4:	e00c      	b.n	85c10 <__adddf3+0x184>
   85bf6:	f102 0214 	add.w	r2, r2, #20
   85bfa:	bfd8      	it	le
   85bfc:	f1c2 0c20 	rsble	ip, r2, #32
   85c00:	fa01 f102 	lsl.w	r1, r1, r2
   85c04:	fa20 fc0c 	lsr.w	ip, r0, ip
   85c08:	bfdc      	itt	le
   85c0a:	ea41 010c 	orrle.w	r1, r1, ip
   85c0e:	4090      	lslle	r0, r2
   85c10:	1ae4      	subs	r4, r4, r3
   85c12:	bfa2      	ittt	ge
   85c14:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   85c18:	4329      	orrge	r1, r5
   85c1a:	bd30      	popge	{r4, r5, pc}
   85c1c:	ea6f 0404 	mvn.w	r4, r4
   85c20:	3c1f      	subs	r4, #31
   85c22:	da1c      	bge.n	85c5e <__adddf3+0x1d2>
   85c24:	340c      	adds	r4, #12
   85c26:	dc0e      	bgt.n	85c46 <__adddf3+0x1ba>
   85c28:	f104 0414 	add.w	r4, r4, #20
   85c2c:	f1c4 0220 	rsb	r2, r4, #32
   85c30:	fa20 f004 	lsr.w	r0, r0, r4
   85c34:	fa01 f302 	lsl.w	r3, r1, r2
   85c38:	ea40 0003 	orr.w	r0, r0, r3
   85c3c:	fa21 f304 	lsr.w	r3, r1, r4
   85c40:	ea45 0103 	orr.w	r1, r5, r3
   85c44:	bd30      	pop	{r4, r5, pc}
   85c46:	f1c4 040c 	rsb	r4, r4, #12
   85c4a:	f1c4 0220 	rsb	r2, r4, #32
   85c4e:	fa20 f002 	lsr.w	r0, r0, r2
   85c52:	fa01 f304 	lsl.w	r3, r1, r4
   85c56:	ea40 0003 	orr.w	r0, r0, r3
   85c5a:	4629      	mov	r1, r5
   85c5c:	bd30      	pop	{r4, r5, pc}
   85c5e:	fa21 f004 	lsr.w	r0, r1, r4
   85c62:	4629      	mov	r1, r5
   85c64:	bd30      	pop	{r4, r5, pc}
   85c66:	f094 0f00 	teq	r4, #0
   85c6a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   85c6e:	bf06      	itte	eq
   85c70:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   85c74:	3401      	addeq	r4, #1
   85c76:	3d01      	subne	r5, #1
   85c78:	e74e      	b.n	85b18 <__adddf3+0x8c>
   85c7a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85c7e:	bf18      	it	ne
   85c80:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85c84:	d029      	beq.n	85cda <__adddf3+0x24e>
   85c86:	ea94 0f05 	teq	r4, r5
   85c8a:	bf08      	it	eq
   85c8c:	ea90 0f02 	teqeq	r0, r2
   85c90:	d005      	beq.n	85c9e <__adddf3+0x212>
   85c92:	ea54 0c00 	orrs.w	ip, r4, r0
   85c96:	bf04      	itt	eq
   85c98:	4619      	moveq	r1, r3
   85c9a:	4610      	moveq	r0, r2
   85c9c:	bd30      	pop	{r4, r5, pc}
   85c9e:	ea91 0f03 	teq	r1, r3
   85ca2:	bf1e      	ittt	ne
   85ca4:	2100      	movne	r1, #0
   85ca6:	2000      	movne	r0, #0
   85ca8:	bd30      	popne	{r4, r5, pc}
   85caa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   85cae:	d105      	bne.n	85cbc <__adddf3+0x230>
   85cb0:	0040      	lsls	r0, r0, #1
   85cb2:	4149      	adcs	r1, r1
   85cb4:	bf28      	it	cs
   85cb6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   85cba:	bd30      	pop	{r4, r5, pc}
   85cbc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   85cc0:	bf3c      	itt	cc
   85cc2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   85cc6:	bd30      	popcc	{r4, r5, pc}
   85cc8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85ccc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   85cd0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85cd4:	f04f 0000 	mov.w	r0, #0
   85cd8:	bd30      	pop	{r4, r5, pc}
   85cda:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85cde:	bf1a      	itte	ne
   85ce0:	4619      	movne	r1, r3
   85ce2:	4610      	movne	r0, r2
   85ce4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   85ce8:	bf1c      	itt	ne
   85cea:	460b      	movne	r3, r1
   85cec:	4602      	movne	r2, r0
   85cee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85cf2:	bf06      	itte	eq
   85cf4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   85cf8:	ea91 0f03 	teqeq	r1, r3
   85cfc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   85d00:	bd30      	pop	{r4, r5, pc}
   85d02:	bf00      	nop

00085d04 <__aeabi_ui2d>:
   85d04:	f090 0f00 	teq	r0, #0
   85d08:	bf04      	itt	eq
   85d0a:	2100      	moveq	r1, #0
   85d0c:	4770      	bxeq	lr
   85d0e:	b530      	push	{r4, r5, lr}
   85d10:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85d14:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85d18:	f04f 0500 	mov.w	r5, #0
   85d1c:	f04f 0100 	mov.w	r1, #0
   85d20:	e750      	b.n	85bc4 <__adddf3+0x138>
   85d22:	bf00      	nop

00085d24 <__aeabi_i2d>:
   85d24:	f090 0f00 	teq	r0, #0
   85d28:	bf04      	itt	eq
   85d2a:	2100      	moveq	r1, #0
   85d2c:	4770      	bxeq	lr
   85d2e:	b530      	push	{r4, r5, lr}
   85d30:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85d34:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85d38:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85d3c:	bf48      	it	mi
   85d3e:	4240      	negmi	r0, r0
   85d40:	f04f 0100 	mov.w	r1, #0
   85d44:	e73e      	b.n	85bc4 <__adddf3+0x138>
   85d46:	bf00      	nop

00085d48 <__aeabi_f2d>:
   85d48:	0042      	lsls	r2, r0, #1
   85d4a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85d4e:	ea4f 0131 	mov.w	r1, r1, rrx
   85d52:	ea4f 7002 	mov.w	r0, r2, lsl #28
   85d56:	bf1f      	itttt	ne
   85d58:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85d5c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85d60:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   85d64:	4770      	bxne	lr
   85d66:	f092 0f00 	teq	r2, #0
   85d6a:	bf14      	ite	ne
   85d6c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85d70:	4770      	bxeq	lr
   85d72:	b530      	push	{r4, r5, lr}
   85d74:	f44f 7460 	mov.w	r4, #896	; 0x380
   85d78:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85d7c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85d80:	e720      	b.n	85bc4 <__adddf3+0x138>
   85d82:	bf00      	nop

00085d84 <__aeabi_ul2d>:
   85d84:	ea50 0201 	orrs.w	r2, r0, r1
   85d88:	bf08      	it	eq
   85d8a:	4770      	bxeq	lr
   85d8c:	b530      	push	{r4, r5, lr}
   85d8e:	f04f 0500 	mov.w	r5, #0
   85d92:	e00a      	b.n	85daa <__aeabi_l2d+0x16>

00085d94 <__aeabi_l2d>:
   85d94:	ea50 0201 	orrs.w	r2, r0, r1
   85d98:	bf08      	it	eq
   85d9a:	4770      	bxeq	lr
   85d9c:	b530      	push	{r4, r5, lr}
   85d9e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   85da2:	d502      	bpl.n	85daa <__aeabi_l2d+0x16>
   85da4:	4240      	negs	r0, r0
   85da6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85daa:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85dae:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85db2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   85db6:	f43f aedc 	beq.w	85b72 <__adddf3+0xe6>
   85dba:	f04f 0203 	mov.w	r2, #3
   85dbe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85dc2:	bf18      	it	ne
   85dc4:	3203      	addne	r2, #3
   85dc6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85dca:	bf18      	it	ne
   85dcc:	3203      	addne	r2, #3
   85dce:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   85dd2:	f1c2 0320 	rsb	r3, r2, #32
   85dd6:	fa00 fc03 	lsl.w	ip, r0, r3
   85dda:	fa20 f002 	lsr.w	r0, r0, r2
   85dde:	fa01 fe03 	lsl.w	lr, r1, r3
   85de2:	ea40 000e 	orr.w	r0, r0, lr
   85de6:	fa21 f102 	lsr.w	r1, r1, r2
   85dea:	4414      	add	r4, r2
   85dec:	e6c1      	b.n	85b72 <__adddf3+0xe6>
   85dee:	bf00      	nop

00085df0 <__aeabi_dmul>:
   85df0:	b570      	push	{r4, r5, r6, lr}
   85df2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85df6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85dfa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85dfe:	bf1d      	ittte	ne
   85e00:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85e04:	ea94 0f0c 	teqne	r4, ip
   85e08:	ea95 0f0c 	teqne	r5, ip
   85e0c:	f000 f8de 	bleq	85fcc <__aeabi_dmul+0x1dc>
   85e10:	442c      	add	r4, r5
   85e12:	ea81 0603 	eor.w	r6, r1, r3
   85e16:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85e1a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85e1e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   85e22:	bf18      	it	ne
   85e24:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85e28:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85e2c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85e30:	d038      	beq.n	85ea4 <__aeabi_dmul+0xb4>
   85e32:	fba0 ce02 	umull	ip, lr, r0, r2
   85e36:	f04f 0500 	mov.w	r5, #0
   85e3a:	fbe1 e502 	umlal	lr, r5, r1, r2
   85e3e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   85e42:	fbe0 e503 	umlal	lr, r5, r0, r3
   85e46:	f04f 0600 	mov.w	r6, #0
   85e4a:	fbe1 5603 	umlal	r5, r6, r1, r3
   85e4e:	f09c 0f00 	teq	ip, #0
   85e52:	bf18      	it	ne
   85e54:	f04e 0e01 	orrne.w	lr, lr, #1
   85e58:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85e5c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85e60:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   85e64:	d204      	bcs.n	85e70 <__aeabi_dmul+0x80>
   85e66:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85e6a:	416d      	adcs	r5, r5
   85e6c:	eb46 0606 	adc.w	r6, r6, r6
   85e70:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   85e74:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85e78:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85e7c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85e80:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   85e84:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85e88:	bf88      	it	hi
   85e8a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85e8e:	d81e      	bhi.n	85ece <__aeabi_dmul+0xde>
   85e90:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   85e94:	bf08      	it	eq
   85e96:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85e9a:	f150 0000 	adcs.w	r0, r0, #0
   85e9e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85ea2:	bd70      	pop	{r4, r5, r6, pc}
   85ea4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85ea8:	ea46 0101 	orr.w	r1, r6, r1
   85eac:	ea40 0002 	orr.w	r0, r0, r2
   85eb0:	ea81 0103 	eor.w	r1, r1, r3
   85eb4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85eb8:	bfc2      	ittt	gt
   85eba:	ebd4 050c 	rsbsgt	r5, r4, ip
   85ebe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85ec2:	bd70      	popgt	{r4, r5, r6, pc}
   85ec4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85ec8:	f04f 0e00 	mov.w	lr, #0
   85ecc:	3c01      	subs	r4, #1
   85ece:	f300 80ab 	bgt.w	86028 <__aeabi_dmul+0x238>
   85ed2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   85ed6:	bfde      	ittt	le
   85ed8:	2000      	movle	r0, #0
   85eda:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   85ede:	bd70      	pople	{r4, r5, r6, pc}
   85ee0:	f1c4 0400 	rsb	r4, r4, #0
   85ee4:	3c20      	subs	r4, #32
   85ee6:	da35      	bge.n	85f54 <__aeabi_dmul+0x164>
   85ee8:	340c      	adds	r4, #12
   85eea:	dc1b      	bgt.n	85f24 <__aeabi_dmul+0x134>
   85eec:	f104 0414 	add.w	r4, r4, #20
   85ef0:	f1c4 0520 	rsb	r5, r4, #32
   85ef4:	fa00 f305 	lsl.w	r3, r0, r5
   85ef8:	fa20 f004 	lsr.w	r0, r0, r4
   85efc:	fa01 f205 	lsl.w	r2, r1, r5
   85f00:	ea40 0002 	orr.w	r0, r0, r2
   85f04:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85f08:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85f0c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85f10:	fa21 f604 	lsr.w	r6, r1, r4
   85f14:	eb42 0106 	adc.w	r1, r2, r6
   85f18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85f1c:	bf08      	it	eq
   85f1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85f22:	bd70      	pop	{r4, r5, r6, pc}
   85f24:	f1c4 040c 	rsb	r4, r4, #12
   85f28:	f1c4 0520 	rsb	r5, r4, #32
   85f2c:	fa00 f304 	lsl.w	r3, r0, r4
   85f30:	fa20 f005 	lsr.w	r0, r0, r5
   85f34:	fa01 f204 	lsl.w	r2, r1, r4
   85f38:	ea40 0002 	orr.w	r0, r0, r2
   85f3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85f40:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85f44:	f141 0100 	adc.w	r1, r1, #0
   85f48:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85f4c:	bf08      	it	eq
   85f4e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85f52:	bd70      	pop	{r4, r5, r6, pc}
   85f54:	f1c4 0520 	rsb	r5, r4, #32
   85f58:	fa00 f205 	lsl.w	r2, r0, r5
   85f5c:	ea4e 0e02 	orr.w	lr, lr, r2
   85f60:	fa20 f304 	lsr.w	r3, r0, r4
   85f64:	fa01 f205 	lsl.w	r2, r1, r5
   85f68:	ea43 0302 	orr.w	r3, r3, r2
   85f6c:	fa21 f004 	lsr.w	r0, r1, r4
   85f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85f74:	fa21 f204 	lsr.w	r2, r1, r4
   85f78:	ea20 0002 	bic.w	r0, r0, r2
   85f7c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85f80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85f84:	bf08      	it	eq
   85f86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85f8a:	bd70      	pop	{r4, r5, r6, pc}
   85f8c:	f094 0f00 	teq	r4, #0
   85f90:	d10f      	bne.n	85fb2 <__aeabi_dmul+0x1c2>
   85f92:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   85f96:	0040      	lsls	r0, r0, #1
   85f98:	eb41 0101 	adc.w	r1, r1, r1
   85f9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85fa0:	bf08      	it	eq
   85fa2:	3c01      	subeq	r4, #1
   85fa4:	d0f7      	beq.n	85f96 <__aeabi_dmul+0x1a6>
   85fa6:	ea41 0106 	orr.w	r1, r1, r6
   85faa:	f095 0f00 	teq	r5, #0
   85fae:	bf18      	it	ne
   85fb0:	4770      	bxne	lr
   85fb2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85fb6:	0052      	lsls	r2, r2, #1
   85fb8:	eb43 0303 	adc.w	r3, r3, r3
   85fbc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85fc0:	bf08      	it	eq
   85fc2:	3d01      	subeq	r5, #1
   85fc4:	d0f7      	beq.n	85fb6 <__aeabi_dmul+0x1c6>
   85fc6:	ea43 0306 	orr.w	r3, r3, r6
   85fca:	4770      	bx	lr
   85fcc:	ea94 0f0c 	teq	r4, ip
   85fd0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85fd4:	bf18      	it	ne
   85fd6:	ea95 0f0c 	teqne	r5, ip
   85fda:	d00c      	beq.n	85ff6 <__aeabi_dmul+0x206>
   85fdc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85fe0:	bf18      	it	ne
   85fe2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85fe6:	d1d1      	bne.n	85f8c <__aeabi_dmul+0x19c>
   85fe8:	ea81 0103 	eor.w	r1, r1, r3
   85fec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85ff0:	f04f 0000 	mov.w	r0, #0
   85ff4:	bd70      	pop	{r4, r5, r6, pc}
   85ff6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85ffa:	bf06      	itte	eq
   85ffc:	4610      	moveq	r0, r2
   85ffe:	4619      	moveq	r1, r3
   86000:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86004:	d019      	beq.n	8603a <__aeabi_dmul+0x24a>
   86006:	ea94 0f0c 	teq	r4, ip
   8600a:	d102      	bne.n	86012 <__aeabi_dmul+0x222>
   8600c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   86010:	d113      	bne.n	8603a <__aeabi_dmul+0x24a>
   86012:	ea95 0f0c 	teq	r5, ip
   86016:	d105      	bne.n	86024 <__aeabi_dmul+0x234>
   86018:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   8601c:	bf1c      	itt	ne
   8601e:	4610      	movne	r0, r2
   86020:	4619      	movne	r1, r3
   86022:	d10a      	bne.n	8603a <__aeabi_dmul+0x24a>
   86024:	ea81 0103 	eor.w	r1, r1, r3
   86028:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8602c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   86030:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86034:	f04f 0000 	mov.w	r0, #0
   86038:	bd70      	pop	{r4, r5, r6, pc}
   8603a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8603e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   86042:	bd70      	pop	{r4, r5, r6, pc}

00086044 <__aeabi_ddiv>:
   86044:	b570      	push	{r4, r5, r6, lr}
   86046:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8604a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8604e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   86052:	bf1d      	ittte	ne
   86054:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86058:	ea94 0f0c 	teqne	r4, ip
   8605c:	ea95 0f0c 	teqne	r5, ip
   86060:	f000 f8a7 	bleq	861b2 <__aeabi_ddiv+0x16e>
   86064:	eba4 0405 	sub.w	r4, r4, r5
   86068:	ea81 0e03 	eor.w	lr, r1, r3
   8606c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86070:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86074:	f000 8088 	beq.w	86188 <__aeabi_ddiv+0x144>
   86078:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8607c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   86080:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   86084:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   86088:	ea4f 2202 	mov.w	r2, r2, lsl #8
   8608c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   86090:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   86094:	ea4f 2600 	mov.w	r6, r0, lsl #8
   86098:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   8609c:	429d      	cmp	r5, r3
   8609e:	bf08      	it	eq
   860a0:	4296      	cmpeq	r6, r2
   860a2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   860a6:	f504 7440 	add.w	r4, r4, #768	; 0x300
   860aa:	d202      	bcs.n	860b2 <__aeabi_ddiv+0x6e>
   860ac:	085b      	lsrs	r3, r3, #1
   860ae:	ea4f 0232 	mov.w	r2, r2, rrx
   860b2:	1ab6      	subs	r6, r6, r2
   860b4:	eb65 0503 	sbc.w	r5, r5, r3
   860b8:	085b      	lsrs	r3, r3, #1
   860ba:	ea4f 0232 	mov.w	r2, r2, rrx
   860be:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   860c2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   860c6:	ebb6 0e02 	subs.w	lr, r6, r2
   860ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   860ce:	bf22      	ittt	cs
   860d0:	1ab6      	subcs	r6, r6, r2
   860d2:	4675      	movcs	r5, lr
   860d4:	ea40 000c 	orrcs.w	r0, r0, ip
   860d8:	085b      	lsrs	r3, r3, #1
   860da:	ea4f 0232 	mov.w	r2, r2, rrx
   860de:	ebb6 0e02 	subs.w	lr, r6, r2
   860e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   860e6:	bf22      	ittt	cs
   860e8:	1ab6      	subcs	r6, r6, r2
   860ea:	4675      	movcs	r5, lr
   860ec:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   860f0:	085b      	lsrs	r3, r3, #1
   860f2:	ea4f 0232 	mov.w	r2, r2, rrx
   860f6:	ebb6 0e02 	subs.w	lr, r6, r2
   860fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   860fe:	bf22      	ittt	cs
   86100:	1ab6      	subcs	r6, r6, r2
   86102:	4675      	movcs	r5, lr
   86104:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   86108:	085b      	lsrs	r3, r3, #1
   8610a:	ea4f 0232 	mov.w	r2, r2, rrx
   8610e:	ebb6 0e02 	subs.w	lr, r6, r2
   86112:	eb75 0e03 	sbcs.w	lr, r5, r3
   86116:	bf22      	ittt	cs
   86118:	1ab6      	subcs	r6, r6, r2
   8611a:	4675      	movcs	r5, lr
   8611c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   86120:	ea55 0e06 	orrs.w	lr, r5, r6
   86124:	d018      	beq.n	86158 <__aeabi_ddiv+0x114>
   86126:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8612a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8612e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   86132:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   86136:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8613a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8613e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   86142:	d1c0      	bne.n	860c6 <__aeabi_ddiv+0x82>
   86144:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86148:	d10b      	bne.n	86162 <__aeabi_ddiv+0x11e>
   8614a:	ea41 0100 	orr.w	r1, r1, r0
   8614e:	f04f 0000 	mov.w	r0, #0
   86152:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   86156:	e7b6      	b.n	860c6 <__aeabi_ddiv+0x82>
   86158:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8615c:	bf04      	itt	eq
   8615e:	4301      	orreq	r1, r0
   86160:	2000      	moveq	r0, #0
   86162:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86166:	bf88      	it	hi
   86168:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8616c:	f63f aeaf 	bhi.w	85ece <__aeabi_dmul+0xde>
   86170:	ebb5 0c03 	subs.w	ip, r5, r3
   86174:	bf04      	itt	eq
   86176:	ebb6 0c02 	subseq.w	ip, r6, r2
   8617a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8617e:	f150 0000 	adcs.w	r0, r0, #0
   86182:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86186:	bd70      	pop	{r4, r5, r6, pc}
   86188:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8618c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   86190:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   86194:	bfc2      	ittt	gt
   86196:	ebd4 050c 	rsbsgt	r5, r4, ip
   8619a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8619e:	bd70      	popgt	{r4, r5, r6, pc}
   861a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   861a4:	f04f 0e00 	mov.w	lr, #0
   861a8:	3c01      	subs	r4, #1
   861aa:	e690      	b.n	85ece <__aeabi_dmul+0xde>
   861ac:	ea45 0e06 	orr.w	lr, r5, r6
   861b0:	e68d      	b.n	85ece <__aeabi_dmul+0xde>
   861b2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   861b6:	ea94 0f0c 	teq	r4, ip
   861ba:	bf08      	it	eq
   861bc:	ea95 0f0c 	teqeq	r5, ip
   861c0:	f43f af3b 	beq.w	8603a <__aeabi_dmul+0x24a>
   861c4:	ea94 0f0c 	teq	r4, ip
   861c8:	d10a      	bne.n	861e0 <__aeabi_ddiv+0x19c>
   861ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   861ce:	f47f af34 	bne.w	8603a <__aeabi_dmul+0x24a>
   861d2:	ea95 0f0c 	teq	r5, ip
   861d6:	f47f af25 	bne.w	86024 <__aeabi_dmul+0x234>
   861da:	4610      	mov	r0, r2
   861dc:	4619      	mov	r1, r3
   861de:	e72c      	b.n	8603a <__aeabi_dmul+0x24a>
   861e0:	ea95 0f0c 	teq	r5, ip
   861e4:	d106      	bne.n	861f4 <__aeabi_ddiv+0x1b0>
   861e6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   861ea:	f43f aefd 	beq.w	85fe8 <__aeabi_dmul+0x1f8>
   861ee:	4610      	mov	r0, r2
   861f0:	4619      	mov	r1, r3
   861f2:	e722      	b.n	8603a <__aeabi_dmul+0x24a>
   861f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   861f8:	bf18      	it	ne
   861fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   861fe:	f47f aec5 	bne.w	85f8c <__aeabi_dmul+0x19c>
   86202:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   86206:	f47f af0d 	bne.w	86024 <__aeabi_dmul+0x234>
   8620a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8620e:	f47f aeeb 	bne.w	85fe8 <__aeabi_dmul+0x1f8>
   86212:	e712      	b.n	8603a <__aeabi_dmul+0x24a>

00086214 <__gedf2>:
   86214:	f04f 3cff 	mov.w	ip, #4294967295
   86218:	e006      	b.n	86228 <__cmpdf2+0x4>
   8621a:	bf00      	nop

0008621c <__ledf2>:
   8621c:	f04f 0c01 	mov.w	ip, #1
   86220:	e002      	b.n	86228 <__cmpdf2+0x4>
   86222:	bf00      	nop

00086224 <__cmpdf2>:
   86224:	f04f 0c01 	mov.w	ip, #1
   86228:	f84d cd04 	str.w	ip, [sp, #-4]!
   8622c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86230:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86234:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86238:	bf18      	it	ne
   8623a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8623e:	d01b      	beq.n	86278 <__cmpdf2+0x54>
   86240:	b001      	add	sp, #4
   86242:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   86246:	bf0c      	ite	eq
   86248:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8624c:	ea91 0f03 	teqne	r1, r3
   86250:	bf02      	ittt	eq
   86252:	ea90 0f02 	teqeq	r0, r2
   86256:	2000      	moveq	r0, #0
   86258:	4770      	bxeq	lr
   8625a:	f110 0f00 	cmn.w	r0, #0
   8625e:	ea91 0f03 	teq	r1, r3
   86262:	bf58      	it	pl
   86264:	4299      	cmppl	r1, r3
   86266:	bf08      	it	eq
   86268:	4290      	cmpeq	r0, r2
   8626a:	bf2c      	ite	cs
   8626c:	17d8      	asrcs	r0, r3, #31
   8626e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   86272:	f040 0001 	orr.w	r0, r0, #1
   86276:	4770      	bx	lr
   86278:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8627c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86280:	d102      	bne.n	86288 <__cmpdf2+0x64>
   86282:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86286:	d107      	bne.n	86298 <__cmpdf2+0x74>
   86288:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8628c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86290:	d1d6      	bne.n	86240 <__cmpdf2+0x1c>
   86292:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86296:	d0d3      	beq.n	86240 <__cmpdf2+0x1c>
   86298:	f85d 0b04 	ldr.w	r0, [sp], #4
   8629c:	4770      	bx	lr
   8629e:	bf00      	nop

000862a0 <__aeabi_cdrcmple>:
   862a0:	4684      	mov	ip, r0
   862a2:	4610      	mov	r0, r2
   862a4:	4662      	mov	r2, ip
   862a6:	468c      	mov	ip, r1
   862a8:	4619      	mov	r1, r3
   862aa:	4663      	mov	r3, ip
   862ac:	e000      	b.n	862b0 <__aeabi_cdcmpeq>
   862ae:	bf00      	nop

000862b0 <__aeabi_cdcmpeq>:
   862b0:	b501      	push	{r0, lr}
   862b2:	f7ff ffb7 	bl	86224 <__cmpdf2>
   862b6:	2800      	cmp	r0, #0
   862b8:	bf48      	it	mi
   862ba:	f110 0f00 	cmnmi.w	r0, #0
   862be:	bd01      	pop	{r0, pc}

000862c0 <__aeabi_dcmpeq>:
   862c0:	f84d ed08 	str.w	lr, [sp, #-8]!
   862c4:	f7ff fff4 	bl	862b0 <__aeabi_cdcmpeq>
   862c8:	bf0c      	ite	eq
   862ca:	2001      	moveq	r0, #1
   862cc:	2000      	movne	r0, #0
   862ce:	f85d fb08 	ldr.w	pc, [sp], #8
   862d2:	bf00      	nop

000862d4 <__aeabi_dcmplt>:
   862d4:	f84d ed08 	str.w	lr, [sp, #-8]!
   862d8:	f7ff ffea 	bl	862b0 <__aeabi_cdcmpeq>
   862dc:	bf34      	ite	cc
   862de:	2001      	movcc	r0, #1
   862e0:	2000      	movcs	r0, #0
   862e2:	f85d fb08 	ldr.w	pc, [sp], #8
   862e6:	bf00      	nop

000862e8 <__aeabi_dcmple>:
   862e8:	f84d ed08 	str.w	lr, [sp, #-8]!
   862ec:	f7ff ffe0 	bl	862b0 <__aeabi_cdcmpeq>
   862f0:	bf94      	ite	ls
   862f2:	2001      	movls	r0, #1
   862f4:	2000      	movhi	r0, #0
   862f6:	f85d fb08 	ldr.w	pc, [sp], #8
   862fa:	bf00      	nop

000862fc <__aeabi_dcmpge>:
   862fc:	f84d ed08 	str.w	lr, [sp, #-8]!
   86300:	f7ff ffce 	bl	862a0 <__aeabi_cdrcmple>
   86304:	bf94      	ite	ls
   86306:	2001      	movls	r0, #1
   86308:	2000      	movhi	r0, #0
   8630a:	f85d fb08 	ldr.w	pc, [sp], #8
   8630e:	bf00      	nop

00086310 <__aeabi_dcmpgt>:
   86310:	f84d ed08 	str.w	lr, [sp, #-8]!
   86314:	f7ff ffc4 	bl	862a0 <__aeabi_cdrcmple>
   86318:	bf34      	ite	cc
   8631a:	2001      	movcc	r0, #1
   8631c:	2000      	movcs	r0, #0
   8631e:	f85d fb08 	ldr.w	pc, [sp], #8
   86322:	bf00      	nop

00086324 <__aeabi_dcmpun>:
   86324:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86328:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8632c:	d102      	bne.n	86334 <__aeabi_dcmpun+0x10>
   8632e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86332:	d10a      	bne.n	8634a <__aeabi_dcmpun+0x26>
   86334:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86338:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8633c:	d102      	bne.n	86344 <__aeabi_dcmpun+0x20>
   8633e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86342:	d102      	bne.n	8634a <__aeabi_dcmpun+0x26>
   86344:	f04f 0000 	mov.w	r0, #0
   86348:	4770      	bx	lr
   8634a:	f04f 0001 	mov.w	r0, #1
   8634e:	4770      	bx	lr

00086350 <__aeabi_d2iz>:
   86350:	ea4f 0241 	mov.w	r2, r1, lsl #1
   86354:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   86358:	d215      	bcs.n	86386 <__aeabi_d2iz+0x36>
   8635a:	d511      	bpl.n	86380 <__aeabi_d2iz+0x30>
   8635c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   86360:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   86364:	d912      	bls.n	8638c <__aeabi_d2iz+0x3c>
   86366:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8636a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8636e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   86372:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86376:	fa23 f002 	lsr.w	r0, r3, r2
   8637a:	bf18      	it	ne
   8637c:	4240      	negne	r0, r0
   8637e:	4770      	bx	lr
   86380:	f04f 0000 	mov.w	r0, #0
   86384:	4770      	bx	lr
   86386:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8638a:	d105      	bne.n	86398 <__aeabi_d2iz+0x48>
   8638c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   86390:	bf08      	it	eq
   86392:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   86396:	4770      	bx	lr
   86398:	f04f 0000 	mov.w	r0, #0
   8639c:	4770      	bx	lr
   8639e:	bf00      	nop

000863a0 <__aeabi_uldivmod>:
   863a0:	b953      	cbnz	r3, 863b8 <__aeabi_uldivmod+0x18>
   863a2:	b94a      	cbnz	r2, 863b8 <__aeabi_uldivmod+0x18>
   863a4:	2900      	cmp	r1, #0
   863a6:	bf08      	it	eq
   863a8:	2800      	cmpeq	r0, #0
   863aa:	bf1c      	itt	ne
   863ac:	f04f 31ff 	movne.w	r1, #4294967295
   863b0:	f04f 30ff 	movne.w	r0, #4294967295
   863b4:	f000 b97a 	b.w	866ac <__aeabi_idiv0>
   863b8:	f1ad 0c08 	sub.w	ip, sp, #8
   863bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   863c0:	f000 f806 	bl	863d0 <__udivmoddi4>
   863c4:	f8dd e004 	ldr.w	lr, [sp, #4]
   863c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   863cc:	b004      	add	sp, #16
   863ce:	4770      	bx	lr

000863d0 <__udivmoddi4>:
   863d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   863d4:	468c      	mov	ip, r1
   863d6:	460e      	mov	r6, r1
   863d8:	4604      	mov	r4, r0
   863da:	9d08      	ldr	r5, [sp, #32]
   863dc:	2b00      	cmp	r3, #0
   863de:	d150      	bne.n	86482 <__udivmoddi4+0xb2>
   863e0:	428a      	cmp	r2, r1
   863e2:	4617      	mov	r7, r2
   863e4:	d96c      	bls.n	864c0 <__udivmoddi4+0xf0>
   863e6:	fab2 fe82 	clz	lr, r2
   863ea:	f1be 0f00 	cmp.w	lr, #0
   863ee:	d00b      	beq.n	86408 <__udivmoddi4+0x38>
   863f0:	f1ce 0c20 	rsb	ip, lr, #32
   863f4:	fa01 f60e 	lsl.w	r6, r1, lr
   863f8:	fa20 fc0c 	lsr.w	ip, r0, ip
   863fc:	fa02 f70e 	lsl.w	r7, r2, lr
   86400:	ea4c 0c06 	orr.w	ip, ip, r6
   86404:	fa00 f40e 	lsl.w	r4, r0, lr
   86408:	0c3a      	lsrs	r2, r7, #16
   8640a:	fbbc f9f2 	udiv	r9, ip, r2
   8640e:	b2bb      	uxth	r3, r7
   86410:	fb02 cc19 	mls	ip, r2, r9, ip
   86414:	fb09 fa03 	mul.w	sl, r9, r3
   86418:	ea4f 4814 	mov.w	r8, r4, lsr #16
   8641c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   86420:	45b2      	cmp	sl, r6
   86422:	d90a      	bls.n	8643a <__udivmoddi4+0x6a>
   86424:	19f6      	adds	r6, r6, r7
   86426:	f109 31ff 	add.w	r1, r9, #4294967295
   8642a:	f080 8125 	bcs.w	86678 <__udivmoddi4+0x2a8>
   8642e:	45b2      	cmp	sl, r6
   86430:	f240 8122 	bls.w	86678 <__udivmoddi4+0x2a8>
   86434:	f1a9 0902 	sub.w	r9, r9, #2
   86438:	443e      	add	r6, r7
   8643a:	eba6 060a 	sub.w	r6, r6, sl
   8643e:	fbb6 f0f2 	udiv	r0, r6, r2
   86442:	fb02 6610 	mls	r6, r2, r0, r6
   86446:	fb00 f303 	mul.w	r3, r0, r3
   8644a:	b2a4      	uxth	r4, r4
   8644c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   86450:	42a3      	cmp	r3, r4
   86452:	d909      	bls.n	86468 <__udivmoddi4+0x98>
   86454:	19e4      	adds	r4, r4, r7
   86456:	f100 32ff 	add.w	r2, r0, #4294967295
   8645a:	f080 810b 	bcs.w	86674 <__udivmoddi4+0x2a4>
   8645e:	42a3      	cmp	r3, r4
   86460:	f240 8108 	bls.w	86674 <__udivmoddi4+0x2a4>
   86464:	3802      	subs	r0, #2
   86466:	443c      	add	r4, r7
   86468:	2100      	movs	r1, #0
   8646a:	1ae4      	subs	r4, r4, r3
   8646c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86470:	2d00      	cmp	r5, #0
   86472:	d062      	beq.n	8653a <__udivmoddi4+0x16a>
   86474:	2300      	movs	r3, #0
   86476:	fa24 f40e 	lsr.w	r4, r4, lr
   8647a:	602c      	str	r4, [r5, #0]
   8647c:	606b      	str	r3, [r5, #4]
   8647e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86482:	428b      	cmp	r3, r1
   86484:	d907      	bls.n	86496 <__udivmoddi4+0xc6>
   86486:	2d00      	cmp	r5, #0
   86488:	d055      	beq.n	86536 <__udivmoddi4+0x166>
   8648a:	2100      	movs	r1, #0
   8648c:	e885 0041 	stmia.w	r5, {r0, r6}
   86490:	4608      	mov	r0, r1
   86492:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86496:	fab3 f183 	clz	r1, r3
   8649a:	2900      	cmp	r1, #0
   8649c:	f040 808f 	bne.w	865be <__udivmoddi4+0x1ee>
   864a0:	42b3      	cmp	r3, r6
   864a2:	d302      	bcc.n	864aa <__udivmoddi4+0xda>
   864a4:	4282      	cmp	r2, r0
   864a6:	f200 80fc 	bhi.w	866a2 <__udivmoddi4+0x2d2>
   864aa:	1a84      	subs	r4, r0, r2
   864ac:	eb66 0603 	sbc.w	r6, r6, r3
   864b0:	2001      	movs	r0, #1
   864b2:	46b4      	mov	ip, r6
   864b4:	2d00      	cmp	r5, #0
   864b6:	d040      	beq.n	8653a <__udivmoddi4+0x16a>
   864b8:	e885 1010 	stmia.w	r5, {r4, ip}
   864bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   864c0:	b912      	cbnz	r2, 864c8 <__udivmoddi4+0xf8>
   864c2:	2701      	movs	r7, #1
   864c4:	fbb7 f7f2 	udiv	r7, r7, r2
   864c8:	fab7 fe87 	clz	lr, r7
   864cc:	f1be 0f00 	cmp.w	lr, #0
   864d0:	d135      	bne.n	8653e <__udivmoddi4+0x16e>
   864d2:	2101      	movs	r1, #1
   864d4:	1bf6      	subs	r6, r6, r7
   864d6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   864da:	fa1f f887 	uxth.w	r8, r7
   864de:	fbb6 f2fc 	udiv	r2, r6, ip
   864e2:	fb0c 6612 	mls	r6, ip, r2, r6
   864e6:	fb08 f002 	mul.w	r0, r8, r2
   864ea:	0c23      	lsrs	r3, r4, #16
   864ec:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   864f0:	42b0      	cmp	r0, r6
   864f2:	d907      	bls.n	86504 <__udivmoddi4+0x134>
   864f4:	19f6      	adds	r6, r6, r7
   864f6:	f102 33ff 	add.w	r3, r2, #4294967295
   864fa:	d202      	bcs.n	86502 <__udivmoddi4+0x132>
   864fc:	42b0      	cmp	r0, r6
   864fe:	f200 80d2 	bhi.w	866a6 <__udivmoddi4+0x2d6>
   86502:	461a      	mov	r2, r3
   86504:	1a36      	subs	r6, r6, r0
   86506:	fbb6 f0fc 	udiv	r0, r6, ip
   8650a:	fb0c 6610 	mls	r6, ip, r0, r6
   8650e:	fb08 f800 	mul.w	r8, r8, r0
   86512:	b2a3      	uxth	r3, r4
   86514:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   86518:	45a0      	cmp	r8, r4
   8651a:	d907      	bls.n	8652c <__udivmoddi4+0x15c>
   8651c:	19e4      	adds	r4, r4, r7
   8651e:	f100 33ff 	add.w	r3, r0, #4294967295
   86522:	d202      	bcs.n	8652a <__udivmoddi4+0x15a>
   86524:	45a0      	cmp	r8, r4
   86526:	f200 80b9 	bhi.w	8669c <__udivmoddi4+0x2cc>
   8652a:	4618      	mov	r0, r3
   8652c:	eba4 0408 	sub.w	r4, r4, r8
   86530:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   86534:	e79c      	b.n	86470 <__udivmoddi4+0xa0>
   86536:	4629      	mov	r1, r5
   86538:	4628      	mov	r0, r5
   8653a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8653e:	fa07 f70e 	lsl.w	r7, r7, lr
   86542:	f1ce 0320 	rsb	r3, lr, #32
   86546:	fa26 f203 	lsr.w	r2, r6, r3
   8654a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8654e:	fbb2 f1fc 	udiv	r1, r2, ip
   86552:	fa1f f887 	uxth.w	r8, r7
   86556:	fb0c 2211 	mls	r2, ip, r1, r2
   8655a:	fa06 f60e 	lsl.w	r6, r6, lr
   8655e:	fa20 f303 	lsr.w	r3, r0, r3
   86562:	fb01 f908 	mul.w	r9, r1, r8
   86566:	4333      	orrs	r3, r6
   86568:	0c1e      	lsrs	r6, r3, #16
   8656a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8656e:	45b1      	cmp	r9, r6
   86570:	fa00 f40e 	lsl.w	r4, r0, lr
   86574:	d909      	bls.n	8658a <__udivmoddi4+0x1ba>
   86576:	19f6      	adds	r6, r6, r7
   86578:	f101 32ff 	add.w	r2, r1, #4294967295
   8657c:	f080 808c 	bcs.w	86698 <__udivmoddi4+0x2c8>
   86580:	45b1      	cmp	r9, r6
   86582:	f240 8089 	bls.w	86698 <__udivmoddi4+0x2c8>
   86586:	3902      	subs	r1, #2
   86588:	443e      	add	r6, r7
   8658a:	eba6 0609 	sub.w	r6, r6, r9
   8658e:	fbb6 f0fc 	udiv	r0, r6, ip
   86592:	fb0c 6210 	mls	r2, ip, r0, r6
   86596:	fb00 f908 	mul.w	r9, r0, r8
   8659a:	b29e      	uxth	r6, r3
   8659c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   865a0:	45b1      	cmp	r9, r6
   865a2:	d907      	bls.n	865b4 <__udivmoddi4+0x1e4>
   865a4:	19f6      	adds	r6, r6, r7
   865a6:	f100 33ff 	add.w	r3, r0, #4294967295
   865aa:	d271      	bcs.n	86690 <__udivmoddi4+0x2c0>
   865ac:	45b1      	cmp	r9, r6
   865ae:	d96f      	bls.n	86690 <__udivmoddi4+0x2c0>
   865b0:	3802      	subs	r0, #2
   865b2:	443e      	add	r6, r7
   865b4:	eba6 0609 	sub.w	r6, r6, r9
   865b8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   865bc:	e78f      	b.n	864de <__udivmoddi4+0x10e>
   865be:	f1c1 0720 	rsb	r7, r1, #32
   865c2:	fa22 f807 	lsr.w	r8, r2, r7
   865c6:	408b      	lsls	r3, r1
   865c8:	ea48 0303 	orr.w	r3, r8, r3
   865cc:	fa26 f407 	lsr.w	r4, r6, r7
   865d0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   865d4:	fbb4 f9fe 	udiv	r9, r4, lr
   865d8:	fa1f fc83 	uxth.w	ip, r3
   865dc:	fb0e 4419 	mls	r4, lr, r9, r4
   865e0:	408e      	lsls	r6, r1
   865e2:	fa20 f807 	lsr.w	r8, r0, r7
   865e6:	fb09 fa0c 	mul.w	sl, r9, ip
   865ea:	ea48 0806 	orr.w	r8, r8, r6
   865ee:	ea4f 4618 	mov.w	r6, r8, lsr #16
   865f2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   865f6:	45a2      	cmp	sl, r4
   865f8:	fa02 f201 	lsl.w	r2, r2, r1
   865fc:	fa00 f601 	lsl.w	r6, r0, r1
   86600:	d908      	bls.n	86614 <__udivmoddi4+0x244>
   86602:	18e4      	adds	r4, r4, r3
   86604:	f109 30ff 	add.w	r0, r9, #4294967295
   86608:	d244      	bcs.n	86694 <__udivmoddi4+0x2c4>
   8660a:	45a2      	cmp	sl, r4
   8660c:	d942      	bls.n	86694 <__udivmoddi4+0x2c4>
   8660e:	f1a9 0902 	sub.w	r9, r9, #2
   86612:	441c      	add	r4, r3
   86614:	eba4 040a 	sub.w	r4, r4, sl
   86618:	fbb4 f0fe 	udiv	r0, r4, lr
   8661c:	fb0e 4410 	mls	r4, lr, r0, r4
   86620:	fb00 fc0c 	mul.w	ip, r0, ip
   86624:	fa1f f888 	uxth.w	r8, r8
   86628:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   8662c:	45a4      	cmp	ip, r4
   8662e:	d907      	bls.n	86640 <__udivmoddi4+0x270>
   86630:	18e4      	adds	r4, r4, r3
   86632:	f100 3eff 	add.w	lr, r0, #4294967295
   86636:	d229      	bcs.n	8668c <__udivmoddi4+0x2bc>
   86638:	45a4      	cmp	ip, r4
   8663a:	d927      	bls.n	8668c <__udivmoddi4+0x2bc>
   8663c:	3802      	subs	r0, #2
   8663e:	441c      	add	r4, r3
   86640:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86644:	fba0 8902 	umull	r8, r9, r0, r2
   86648:	eba4 0c0c 	sub.w	ip, r4, ip
   8664c:	45cc      	cmp	ip, r9
   8664e:	46c2      	mov	sl, r8
   86650:	46ce      	mov	lr, r9
   86652:	d315      	bcc.n	86680 <__udivmoddi4+0x2b0>
   86654:	d012      	beq.n	8667c <__udivmoddi4+0x2ac>
   86656:	b155      	cbz	r5, 8666e <__udivmoddi4+0x29e>
   86658:	ebb6 030a 	subs.w	r3, r6, sl
   8665c:	eb6c 060e 	sbc.w	r6, ip, lr
   86660:	fa06 f707 	lsl.w	r7, r6, r7
   86664:	40cb      	lsrs	r3, r1
   86666:	431f      	orrs	r7, r3
   86668:	40ce      	lsrs	r6, r1
   8666a:	602f      	str	r7, [r5, #0]
   8666c:	606e      	str	r6, [r5, #4]
   8666e:	2100      	movs	r1, #0
   86670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86674:	4610      	mov	r0, r2
   86676:	e6f7      	b.n	86468 <__udivmoddi4+0x98>
   86678:	4689      	mov	r9, r1
   8667a:	e6de      	b.n	8643a <__udivmoddi4+0x6a>
   8667c:	4546      	cmp	r6, r8
   8667e:	d2ea      	bcs.n	86656 <__udivmoddi4+0x286>
   86680:	ebb8 0a02 	subs.w	sl, r8, r2
   86684:	eb69 0e03 	sbc.w	lr, r9, r3
   86688:	3801      	subs	r0, #1
   8668a:	e7e4      	b.n	86656 <__udivmoddi4+0x286>
   8668c:	4670      	mov	r0, lr
   8668e:	e7d7      	b.n	86640 <__udivmoddi4+0x270>
   86690:	4618      	mov	r0, r3
   86692:	e78f      	b.n	865b4 <__udivmoddi4+0x1e4>
   86694:	4681      	mov	r9, r0
   86696:	e7bd      	b.n	86614 <__udivmoddi4+0x244>
   86698:	4611      	mov	r1, r2
   8669a:	e776      	b.n	8658a <__udivmoddi4+0x1ba>
   8669c:	3802      	subs	r0, #2
   8669e:	443c      	add	r4, r7
   866a0:	e744      	b.n	8652c <__udivmoddi4+0x15c>
   866a2:	4608      	mov	r0, r1
   866a4:	e706      	b.n	864b4 <__udivmoddi4+0xe4>
   866a6:	3a02      	subs	r2, #2
   866a8:	443e      	add	r6, r7
   866aa:	e72b      	b.n	86504 <__udivmoddi4+0x134>

000866ac <__aeabi_idiv0>:
   866ac:	4770      	bx	lr
   866ae:	bf00      	nop
   866b0:	6a6e6f42 	.word	0x6a6e6f42
   866b4:	7372756f 	.word	0x7372756f
   866b8:	0909092c 	.word	0x0909092c
   866bc:	0000000d 	.word	0x0000000d
   866c0:	6d6d6f43 	.word	0x6d6d6f43
   866c4:	09746e65 	.word	0x09746e65
   866c8:	000d0909 	.word	0x000d0909
   866cc:	656c6c61 	.word	0x656c6c61
   866d0:	09090972 	.word	0x09090972
   866d4:	00000d09 	.word	0x00000d09
   866d8:	73756f76 	.word	0x73756f76
   866dc:	0909093f 	.word	0x0909093f
   866e0:	00000d09 	.word	0x00000d09
   866e4:	6e6f6942 	.word	0x6e6f6942
   866e8:	72756f6a 	.word	0x72756f6a
   866ec:	092c6f6e 	.word	0x092c6f6e
   866f0:	00000d09 	.word	0x00000d09
   866f4:	65766542 	.word	0x65766542
   866f8:	09090909 	.word	0x09090909
   866fc:	0000000d 	.word	0x0000000d
   86700:	0909616c 	.word	0x0909616c
   86704:	000d0909 	.word	0x000d0909
   86708:	61757161 	.word	0x61757161
   8670c:	21212121 	.word	0x21212121
   86710:	0d090909 	.word	0x0d090909
   86714:	00000000 	.word	0x00000000
   86718:	6c6c6548 	.word	0x6c6c6548
   8671c:	09092c6f 	.word	0x09092c6f
   86720:	00000d09 	.word	0x00000d09
   86724:	09776f48 	.word	0x09776f48
   86728:	0d090909 	.word	0x0d090909
   8672c:	00000000 	.word	0x00000000
   86730:	09657261 	.word	0x09657261
   86734:	0d090909 	.word	0x0d090909
   86738:	00000000 	.word	0x00000000
   8673c:	3f756f79 	.word	0x3f756f79
   86740:	0909093f 	.word	0x0909093f
   86744:	00000d09 	.word	0x00000d09
   86748:	696e6f4b 	.word	0x696e6f4b
   8674c:	77696863 	.word	0x77696863
   86750:	09092c61 	.word	0x09092c61
   86754:	0000000d 	.word	0x0000000d
   86758:	7374694d 	.word	0x7374694d
   8675c:	73696275 	.word	0x73696275
   86760:	09096968 	.word	0x09096968
   86764:	0000000d 	.word	0x0000000d
   86768:	68737573 	.word	0x68737573
   8676c:	09090969 	.word	0x09090969
   86770:	00000d09 	.word	0x00000d09
   86774:	6167614e 	.word	0x6167614e
   86778:	696b6173 	.word	0x696b6173
   8677c:	0d090909 	.word	0x0d090909
   86780:	00000000 	.word	0x00000000
   86784:	003e0a0d 	.word	0x003e0a0d
   86788:	3e3e0a0d 	.word	0x3e3e0a0d
   8678c:	0000003e 	.word	0x0000003e
   86790:	00000a0d 	.word	0x00000a0d
   86794:	000a0d20 	.word	0x000a0d20
   86798:	6e750a0d 	.word	0x6e750a0d
   8679c:	776f6e6b 	.word	0x776f6e6b
   867a0:	6d63206e 	.word	0x6d63206e
   867a4:	25203a64 	.word	0x25203a64
   867a8:	0d583430 	.word	0x0d583430
   867ac:	0000000a 	.word	0x0000000a
   867b0:	2073250d 	.word	0x2073250d
   867b4:	64323025 	.word	0x64323025
   867b8:	20732520 	.word	0x20732520
   867bc:	64323025 	.word	0x64323025
   867c0:	00000000 	.word	0x00000000
   867c4:	32302509 	.word	0x32302509
   867c8:	30253a64 	.word	0x30253a64
   867cc:	253a6432 	.word	0x253a6432
   867d0:	20643230 	.word	0x20643230
   867d4:	00000000 	.word	0x00000000

000867d8 <flashSequ>:
   867d8:	00000032 000001f4 00000032 000004b0     2.......2.......
   867e8:	00000000 00006874 0000646e 00006472     ....th..nd..rd..
   867f8:	756e614a 00797261 72626546 79726175     January.February
   86808:	00000000 6372614d 00000068 69727041     ....March...Apri
   86818:	0000006c 0079614d 656e754a 00000000     l...May.June....
   86828:	796c754a 00000000 75677541 00007473     July....August..
   86838:	74706553 65626d65 00000072 6f74634f     September...Octo
   86848:	00726562 65766f4e 7265626d 00000000     ber.November....
   86858:	65636544 7265626d 00000000 646e7553     December....Sund
   86868:	00007961 646e6f4d 00007961 73657554     ay..Monday..Tues
   86878:	00796164 6e646557 61647365 00000079     day.Wednesday...
   86888:	72756854 79616473 00000000 64697246     Thursday....Frid
   86898:	00007961 75746153 79616472 00000000     ay..Saturday....

000868a8 <_cmdEntries>:
   868a8:	00006cab 00080ca9 0000aaf6 00080df9     .l..............
   868b8:	000010e1 00080e7d 00000000 00000000     ....}...........
   868c8:	0d203a20 0000000a 7465274c 64207461      : .....L'etat d
   868d8:	616c2065 6f726220 20656863 69617465     e la broche etai
   868e8:	61682074 0d207475 0000000a 7465274c     t haut .....L'et
   868f8:	64207461 616c2065 6f726220 20656863     at de la broche 
   86908:	69617465 61622074 0a0d2073 00000000     etait bas ......

00086918 <usart_console_settings>:
   86918:	0001c200 000000c0 00000800 00000000     ................
	...

00086930 <flashSequApp>:
   86930:	00000064 000001f4 00000064 000001f4     d.......d.......
   86940:	00000064 00000898 00000000 090a0a0d     d...............
   86950:	454d5441 5441204c 334d4153 54532055     ATMEL ATSAM3U ST
   86960:	45545241 0a0a0d44 00000000              ARTED.......

0008696c <_global_impure_ptr>:
   8696c:	20070598 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   8697c:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   8698c:	46454443 00000000 33323130 37363534     CDEF....01234567
   8699c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   869ac:	0000296c 00000030                       l)..0...

000869b4 <blanks.7223>:
   869b4:	20202020 20202020 20202020 20202020                     

000869c4 <zeroes.7224>:
   869c4:	30303030 30303030 30303030 30303030     0000000000000000
   869d4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   869e4:	00000043 49534f50 00000058 0000002e     C...POSIX.......
   869f4:	00000000                                ....

000869f8 <__mprec_bigtens>:
   869f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   86a08:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   86a18:	7f73bf3c 75154fdd                       <.s..O.u

00086a20 <__mprec_tens>:
   86a20:	00000000 3ff00000 00000000 40240000     .......?......$@
   86a30:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   86a40:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   86a50:	00000000 412e8480 00000000 416312d0     .......A......cA
   86a60:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   86a70:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   86a80:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   86a90:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   86aa0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   86ab0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   86ac0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   86ad0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   86ae0:	79d99db4 44ea7843                       ...yCx.D

00086ae8 <p05.6055>:
   86ae8:	00000005 00000019 0000007d              ........}...

00086af4 <_ctype_>:
   86af4:	20202000 20202020 28282020 20282828     .         ((((( 
   86b04:	20202020 20202020 20202020 20202020                     
   86b14:	10108820 10101010 10101010 10101010      ...............
   86b24:	04040410 04040404 10040404 10101010     ................
   86b34:	41411010 41414141 01010101 01010101     ..AAAAAA........
   86b44:	01010101 01010101 01010101 10101010     ................
   86b54:	42421010 42424242 02020202 02020202     ..BBBBBB........
   86b64:	02020202 02020202 02020202 10101010     ................
   86b74:	00000020 00000000 00000000 00000000      ...............
	...

00086bf8 <_init>:
   86bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86bfa:	bf00      	nop
   86bfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86bfe:	bc08      	pop	{r3}
   86c00:	469e      	mov	lr, r3
   86c02:	4770      	bx	lr

00086c04 <__init_array_start>:
   86c04:	000834a1 	.word	0x000834a1

00086c08 <__frame_dummy_init_array_entry>:
   86c08:	00080119                                ....

00086c0c <_fini>:
   86c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86c0e:	bf00      	nop
   86c10:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86c12:	bc08      	pop	{r3}
   86c14:	469e      	mov	lr, r3
   86c16:	4770      	bx	lr

00086c18 <__fini_array_start>:
   86c18:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007058c 	.word	0x2007058c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <wCRCTable>:
20070138:	00000000 0000c0c1 0000c181 00000140     ............@...
20070148:	0000c301 000003c0 00000280 0000c241     ............A...
20070158:	0000c601 000006c0 00000780 0000c741     ............A...
20070168:	00000500 0000c5c1 0000c481 00000440     ............@...
20070178:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20070188:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
20070198:	00000a00 0000cac1 0000cb81 00000b40     ............@...
200701a8:	0000c901 000009c0 00000880 0000c841     ............A...
200701b8:	0000d801 000018c0 00001980 0000d941     ............A...
200701c8:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200701d8:	00001e00 0000dec1 0000df81 00001f40     ............@...
200701e8:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200701f8:	00001400 0000d4c1 0000d581 00001540     ............@...
20070208:	0000d701 000017c0 00001680 0000d641     ............A...
20070218:	0000d201 000012c0 00001380 0000d341     ............A...
20070228:	00001100 0000d1c1 0000d081 00001040     ............@...
20070238:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20070248:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20070258:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20070268:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20070278:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20070288:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
20070298:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
200702a8:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200702b8:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200702c8:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200702d8:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200702e8:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200702f8:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
20070308:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20070318:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20070328:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20070338:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20070348:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20070358:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20070368:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20070378:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20070388:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
20070398:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
200703a8:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200703b8:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200703c8:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200703d8:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200703e8:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200703f8:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
20070408:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20070418:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20070428:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20070438:	00005000 000090c1 00009181 00005140     .P..........@Q..
20070448:	00009301 000053c0 00005280 00009241     .....S...R..A...
20070458:	00009601 000056c0 00005780 00009741     .....V...W..A...
20070468:	00005500 000095c1 00009481 00005440     .U..........@T..
20070478:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20070488:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
20070498:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
200704a8:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200704b8:	00008801 000048c0 00004980 00008941     .....H...I..A...
200704c8:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200704d8:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200704e8:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200704f8:	00004400 000084c1 00008581 00004540     .D..........@E..
20070508:	00008701 000047c0 00004680 00008641     .....G...F..A...
20070518:	00008201 000042c0 00004380 00008341     .....B...C..A...
20070528:	00004100 000081c1 00008081 00004040     .A..........@@..

20070538 <pErrorFunc>:
20070538:	000806f1                                ....

2007053c <daysOfWeek>:
2007053c:	00086864 0008686c 00086874 0008687c     dh..lh..th..|h..
2007054c:	00086888 00086894 0008689c              .h...h...h..

20070558 <months>:
20070558:	000867f8 00086800 0008680c 00086814     .g...h...h...h..
20070568:	0008681c 00086820 00086828 00086830     .h.. h..(h..0h..
20070578:	00086838 00086844 0008684c 00086858     8h..Dh..Lh..Xh..

20070588 <g_interrupt_enabled>:
20070588:	00000001                                ....

2007058c <SystemCoreClock>:
2007058c:	003d0900                                ..=.

20070590 <_impure_ptr>:
20070590:	20070598 00000000                       ... ....

20070598 <impure_data>:
20070598:	00000000 20070884 200708ec 20070954     ....... ... T.. 
	...
20070640:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070650:	0005deec 0000000b 00000000 00000000     ................
	...

200709c0 <__atexit_recursive_mutex>:
200709c0:	200714e0                                ... 

200709c4 <__global_locale>:
200709c4:	00000043 00000000 00000000 00000000     C...............
	...
200709e4:	00000043 00000000 00000000 00000000     C...............
	...
20070a04:	00000043 00000000 00000000 00000000     C...............
	...
20070a24:	00000043 00000000 00000000 00000000     C...............
	...
20070a44:	00000043 00000000 00000000 00000000     C...............
	...
20070a64:	00000043 00000000 00000000 00000000     C...............
	...
20070a84:	00000043 00000000 00000000 00000000     C...............
	...
20070aa4:	000852a5 000849d1 00000000 00086af4     .R...I.......j..
20070ab4:	000869f0 00086968 00086968 00086968     .i..hi..hi..hi..
20070ac4:	00086968 00086968 00086968 00086968     hi..hi..hi..hi..
20070ad4:	00086968 00086968 ffffffff ffffffff     hi..hi..........
20070ae4:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070b0c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070b30 <__malloc_av_>:
	...
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 
20070b88:	20070b80 20070b80 20070b88 20070b88     ... ... ... ... 
20070b98:	20070b90 20070b90 20070b98 20070b98     ... ... ... ... 
20070ba8:	20070ba0 20070ba0 20070ba8 20070ba8     ... ... ... ... 
20070bb8:	20070bb0 20070bb0 20070bb8 20070bb8     ... ... ... ... 
20070bc8:	20070bc0 20070bc0 20070bc8 20070bc8     ... ... ... ... 
20070bd8:	20070bd0 20070bd0 20070bd8 20070bd8     ... ... ... ... 
20070be8:	20070be0 20070be0 20070be8 20070be8     ... ... ... ... 
20070bf8:	20070bf0 20070bf0 20070bf8 20070bf8     ... ... ... ... 
20070c08:	20070c00 20070c00 20070c08 20070c08     ... ... ... ... 
20070c18:	20070c10 20070c10 20070c18 20070c18     ... ... ... ... 
20070c28:	20070c20 20070c20 20070c28 20070c28      ..  .. (.. (.. 
20070c38:	20070c30 20070c30 20070c38 20070c38     0.. 0.. 8.. 8.. 
20070c48:	20070c40 20070c40 20070c48 20070c48     @.. @.. H.. H.. 
20070c58:	20070c50 20070c50 20070c58 20070c58     P.. P.. X.. X.. 
20070c68:	20070c60 20070c60 20070c68 20070c68     `.. `.. h.. h.. 
20070c78:	20070c70 20070c70 20070c78 20070c78     p.. p.. x.. x.. 
20070c88:	20070c80 20070c80 20070c88 20070c88     ... ... ... ... 
20070c98:	20070c90 20070c90 20070c98 20070c98     ... ... ... ... 
20070ca8:	20070ca0 20070ca0 20070ca8 20070ca8     ... ... ... ... 
20070cb8:	20070cb0 20070cb0 20070cb8 20070cb8     ... ... ... ... 
20070cc8:	20070cc0 20070cc0 20070cc8 20070cc8     ... ... ... ... 
20070cd8:	20070cd0 20070cd0 20070cd8 20070cd8     ... ... ... ... 
20070ce8:	20070ce0 20070ce0 20070ce8 20070ce8     ... ... ... ... 
20070cf8:	20070cf0 20070cf0 20070cf8 20070cf8     ... ... ... ... 
20070d08:	20070d00 20070d00 20070d08 20070d08     ... ... ... ... 
20070d18:	20070d10 20070d10 20070d18 20070d18     ... ... ... ... 
20070d28:	20070d20 20070d20 20070d28 20070d28      ..  .. (.. (.. 
20070d38:	20070d30 20070d30 20070d38 20070d38     0.. 0.. 8.. 8.. 
20070d48:	20070d40 20070d40 20070d48 20070d48     @.. @.. H.. H.. 
20070d58:	20070d50 20070d50 20070d58 20070d58     P.. P.. X.. X.. 
20070d68:	20070d60 20070d60 20070d68 20070d68     `.. `.. h.. h.. 
20070d78:	20070d70 20070d70 20070d78 20070d78     p.. p.. x.. x.. 
20070d88:	20070d80 20070d80 20070d88 20070d88     ... ... ... ... 
20070d98:	20070d90 20070d90 20070d98 20070d98     ... ... ... ... 
20070da8:	20070da0 20070da0 20070da8 20070da8     ... ... ... ... 
20070db8:	20070db0 20070db0 20070db8 20070db8     ... ... ... ... 
20070dc8:	20070dc0 20070dc0 20070dc8 20070dc8     ... ... ... ... 
20070dd8:	20070dd0 20070dd0 20070dd8 20070dd8     ... ... ... ... 
20070de8:	20070de0 20070de0 20070de8 20070de8     ... ... ... ... 
20070df8:	20070df0 20070df0 20070df8 20070df8     ... ... ... ... 
20070e08:	20070e00 20070e00 20070e08 20070e08     ... ... ... ... 
20070e18:	20070e10 20070e10 20070e18 20070e18     ... ... ... ... 
20070e28:	20070e20 20070e20 20070e28 20070e28      ..  .. (.. (.. 
20070e38:	20070e30 20070e30 20070e38 20070e38     0.. 0.. 8.. 8.. 
20070e48:	20070e40 20070e40 20070e48 20070e48     @.. @.. H.. H.. 
20070e58:	20070e50 20070e50 20070e58 20070e58     P.. P.. X.. X.. 
20070e68:	20070e60 20070e60 20070e68 20070e68     `.. `.. h.. h.. 
20070e78:	20070e70 20070e70 20070e78 20070e78     p.. p.. x.. x.. 
20070e88:	20070e80 20070e80 20070e88 20070e88     ... ... ... ... 
20070e98:	20070e90 20070e90 20070e98 20070e98     ... ... ... ... 
20070ea8:	20070ea0 20070ea0 20070ea8 20070ea8     ... ... ... ... 
20070eb8:	20070eb0 20070eb0 20070eb8 20070eb8     ... ... ... ... 
20070ec8:	20070ec0 20070ec0 20070ec8 20070ec8     ... ... ... ... 
20070ed8:	20070ed0 20070ed0 20070ed8 20070ed8     ... ... ... ... 
20070ee8:	20070ee0 20070ee0 20070ee8 20070ee8     ... ... ... ... 
20070ef8:	20070ef0 20070ef0 20070ef8 20070ef8     ... ... ... ... 
20070f08:	20070f00 20070f00 20070f08 20070f08     ... ... ... ... 
20070f18:	20070f10 20070f10 20070f18 20070f18     ... ... ... ... 
20070f28:	20070f20 20070f20 20070f28 20070f28      ..  .. (.. (.. 

20070f38 <__malloc_sbrk_base>:
20070f38:	ffffffff                                ....

20070f3c <__malloc_trim_threshold>:
20070f3c:	00020000                                ....
