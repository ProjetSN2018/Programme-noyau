
Noyau.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006644  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00086644  00086644  00016644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ef0  20070000  0008664c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000057c  20070ef0  0008753c  00020ef0  2**2
                  ALLOC
  4 .stack        00002004  2007146c  00087ab8  00020ef0  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ef0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020f19  2**0
                  CONTENTS, READONLY
  7 .debug_info   00017f2c  00000000  00000000  00020f72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003a20  00000000  00000000  00038e9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004910  00000000  00000000  0003c8be  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000a90  00000000  00000000  000411ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000978  00000000  00000000  00041c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001aa02  00000000  00000000  000425d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00011a32  00000000  00000000  0005cfd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00064da4  00000000  00000000  0006ea0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002350  00000000  00000000  000d37b0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	70 34 07 20 15 16 08 00 11 16 08 00 11 16 08 00     p4. ............
   80010:	11 16 08 00 11 16 08 00 11 16 08 00 00 00 00 00     ................
	...
   8002c:	11 16 08 00 11 16 08 00 00 00 00 00 11 16 08 00     ................
   8003c:	11 16 08 00 11 16 08 00 11 16 08 00 95 09 08 00     ................
   8004c:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   8005c:	11 16 08 00 11 16 08 00 11 16 08 00 00 00 00 00     ................
   8006c:	85 14 08 00 99 14 08 00 ad 14 08 00 c1 14 08 00     ................
	...
   80084:	f9 0c 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   80094:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   800a4:	00 00 00 00 11 16 08 00 75 0f 08 00 11 16 08 00     ........u.......
   800b4:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   800c4:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   800d4:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................
   800e4:	11 16 08 00 11 16 08 00 11 16 08 00 11 16 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070ef0 	.word	0x20070ef0
   80110:	00000000 	.word	0x00000000
   80114:	0008664c 	.word	0x0008664c

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	0008664c 	.word	0x0008664c
   80154:	20070ef4 	.word	0x20070ef4
   80158:	0008664c 	.word	0x0008664c
   8015c:	00000000 	.word	0x00000000

00080160 <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
   80160:	b921      	cbnz	r1, 8016c <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
   80162:	6843      	ldr	r3, [r0, #4]
   80164:	f023 0301 	bic.w	r3, r3, #1
   80168:	6043      	str	r3, [r0, #4]
   8016a:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
   8016c:	6843      	ldr	r3, [r0, #4]
   8016e:	f043 0301 	orr.w	r3, r3, #1
   80172:	6043      	str	r3, [r0, #4]
   80174:	4770      	bx	lr

00080176 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
   80176:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
   80178:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   8017a:	6884      	ldr	r4, [r0, #8]
   8017c:	42a5      	cmp	r5, r4
   8017e:	d003      	beq.n	80188 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
   80180:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   80182:	6884      	ldr	r4, [r0, #8]
   80184:	42ac      	cmp	r4, r5
   80186:	d1fb      	bne.n	80180 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
   80188:	b161      	cbz	r1, 801a4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8018a:	f3c4 5001 	ubfx	r0, r4, #20, #2
   8018e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80192:	f3c4 4003 	ubfx	r0, r4, #16, #4
   80196:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
   8019a:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
   8019e:	bf18      	it	ne
   801a0:	300c      	addne	r0, #12
   801a2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
   801a4:	b142      	cbz	r2, 801b8 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
   801a6:	f3c4 3102 	ubfx	r1, r4, #12, #3
   801aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   801ae:	f3c4 2003 	ubfx	r0, r4, #8, #4
   801b2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   801b6:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
   801b8:	b143      	cbz	r3, 801cc <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   801ba:	f3c4 1202 	ubfx	r2, r4, #4, #3
   801be:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   801c2:	f004 040f 	and.w	r4, r4, #15
   801c6:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   801ca:	601c      	str	r4, [r3, #0]
	}
}
   801cc:	bc30      	pop	{r4, r5}
   801ce:	4770      	bx	lr

000801d0 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
   801d0:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
   801d2:	6844      	ldr	r4, [r0, #4]
   801d4:	f014 0f01 	tst.w	r4, #1
   801d8:	d005      	beq.n	801e6 <rtc_set_time+0x16>
		if (ul_hour > 12) {
   801da:	290c      	cmp	r1, #12
   801dc:	d93d      	bls.n	8025a <rtc_set_time+0x8a>
			ul_hour -= 12;
   801de:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
   801e0:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   801e4:	e000      	b.n	801e8 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
   801e6:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   801e8:	4c1d      	ldr	r4, [pc, #116]	; (80260 <rtc_set_time+0x90>)
   801ea:	fba4 5603 	umull	r5, r6, r4, r3
   801ee:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
   801f0:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   801f4:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   801f8:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
   801fc:	fba4 6502 	umull	r6, r5, r4, r2
   80200:	08ed      	lsrs	r5, r5, #3
   80202:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
   80206:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8020a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   8020e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80212:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
   80214:	fba4 4201 	umull	r4, r2, r4, r1
   80218:	08d2      	lsrs	r2, r2, #3
   8021a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
   8021e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80222:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   80226:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   8022a:	6983      	ldr	r3, [r0, #24]
   8022c:	f013 0f04 	tst.w	r3, #4
   80230:	d0fb      	beq.n	8022a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
   80232:	6803      	ldr	r3, [r0, #0]
   80234:	f043 0301 	orr.w	r3, r3, #1
   80238:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   8023a:	6983      	ldr	r3, [r0, #24]
   8023c:	f013 0f01 	tst.w	r3, #1
   80240:	d0fb      	beq.n	8023a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80242:	2301      	movs	r3, #1
   80244:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
   80246:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
   80248:	6803      	ldr	r3, [r0, #0]
   8024a:	f023 0301 	bic.w	r3, r3, #1
   8024e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
   80250:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80252:	f000 0001 	and.w	r0, r0, #1
   80256:	bcf0      	pop	{r4, r5, r6, r7}
   80258:	4770      	bx	lr
	uint32_t ul_time = 0;
   8025a:	2700      	movs	r7, #0
   8025c:	e7c4      	b.n	801e8 <rtc_set_time+0x18>
   8025e:	bf00      	nop
   80260:	cccccccd 	.word	0xcccccccd

00080264 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
   80264:	b4f0      	push	{r4, r5, r6, r7}
   80266:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
   80268:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   8026a:	68c4      	ldr	r4, [r0, #12]
   8026c:	42a5      	cmp	r5, r4
   8026e:	d003      	beq.n	80278 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
   80270:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   80272:	68c4      	ldr	r4, [r0, #12]
   80274:	42ac      	cmp	r4, r5
   80276:	d1fb      	bne.n	80270 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
   80278:	b199      	cbz	r1, 802a2 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8027a:	f3c4 3003 	ubfx	r0, r4, #12, #4
   8027e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80282:	f3c4 2703 	ubfx	r7, r4, #8, #4
   80286:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8028a:	f3c4 1002 	ubfx	r0, r4, #4, #3
   8028e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80292:	f004 000f 	and.w	r0, r4, #15
   80296:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8029a:	2564      	movs	r5, #100	; 0x64
   8029c:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
   802a0:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
   802a2:	b142      	cbz	r2, 802b6 <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802a4:	f3c4 5000 	ubfx	r0, r4, #20, #1
   802a8:	0081      	lsls	r1, r0, #2
   802aa:	4408      	add	r0, r1
   802ac:	f3c4 4103 	ubfx	r1, r4, #16, #4
   802b0:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   802b4:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
   802b6:	b143      	cbz	r3, 802ca <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802b8:	f3c4 7201 	ubfx	r2, r4, #28, #2
   802bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   802c0:	f3c4 6103 	ubfx	r1, r4, #24, #4
   802c4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   802c8:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
   802ca:	b116      	cbz	r6, 802d2 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
   802cc:	f3c4 5442 	ubfx	r4, r4, #21, #3
   802d0:	6034      	str	r4, [r6, #0]
	}
}
   802d2:	bcf0      	pop	{r4, r5, r6, r7}
   802d4:	4770      	bx	lr
	...

000802d8 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
   802d8:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802da:	4d2a      	ldr	r5, [pc, #168]	; (80384 <rtc_set_date+0xac>)
   802dc:	fba5 4603 	umull	r4, r6, r5, r3
   802e0:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
   802e2:	9c03      	ldr	r4, [sp, #12]
   802e4:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802e6:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
   802ea:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   802ee:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802f2:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
   802f6:	fba5 6402 	umull	r6, r4, r5, r2
   802fa:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802fc:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
   80300:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80304:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80308:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
   8030c:	4b1e      	ldr	r3, [pc, #120]	; (80388 <rtc_set_date+0xb0>)
   8030e:	fba3 4301 	umull	r4, r3, r3, r1
   80312:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80314:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
   80318:	4b1c      	ldr	r3, [pc, #112]	; (8038c <rtc_set_date+0xb4>)
   8031a:	fba3 4301 	umull	r4, r3, r3, r1
   8031e:	095b      	lsrs	r3, r3, #5
   80320:	fba5 6403 	umull	r6, r4, r5, r3
   80324:	08e4      	lsrs	r4, r4, #3
   80326:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8032a:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8032e:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
   80330:	fba5 4301 	umull	r4, r3, r5, r1
   80334:	08db      	lsrs	r3, r3, #3
   80336:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   8033a:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8033e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
   80342:	fba5 1503 	umull	r1, r5, r5, r3
   80346:	08ed      	lsrs	r5, r5, #3
   80348:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8034c:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80350:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   80354:	6983      	ldr	r3, [r0, #24]
   80356:	f013 0f04 	tst.w	r3, #4
   8035a:	d0fb      	beq.n	80354 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
   8035c:	6803      	ldr	r3, [r0, #0]
   8035e:	f043 0302 	orr.w	r3, r3, #2
   80362:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   80364:	6983      	ldr	r3, [r0, #24]
   80366:	f013 0f01 	tst.w	r3, #1
   8036a:	d0fb      	beq.n	80364 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   8036c:	2301      	movs	r3, #1
   8036e:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
   80370:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
   80372:	6803      	ldr	r3, [r0, #0]
   80374:	f023 0302 	bic.w	r3, r3, #2
   80378:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
   8037a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   8037c:	f000 0002 	and.w	r0, r0, #2
   80380:	bc70      	pop	{r4, r5, r6}
   80382:	4770      	bx	lr
   80384:	cccccccd 	.word	0xcccccccd
   80388:	10624dd3 	.word	0x10624dd3
   8038c:	51eb851f 	.word	0x51eb851f

00080390 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80390:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80392:	0189      	lsls	r1, r1, #6
   80394:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80396:	2402      	movs	r4, #2
   80398:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8039a:	f04f 31ff 	mov.w	r1, #4294967295
   8039e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   803a0:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   803a2:	605a      	str	r2, [r3, #4]
}
   803a4:	bc10      	pop	{r4}
   803a6:	4770      	bx	lr

000803a8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   803a8:	0189      	lsls	r1, r1, #6
   803aa:	2305      	movs	r3, #5
   803ac:	5043      	str	r3, [r0, r1]
   803ae:	4770      	bx	lr

000803b0 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   803b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803b4:	614a      	str	r2, [r1, #20]
   803b6:	4770      	bx	lr

000803b8 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   803b8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803bc:	61ca      	str	r2, [r1, #28]
   803be:	4770      	bx	lr

000803c0 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   803c0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   803c4:	624a      	str	r2, [r1, #36]	; 0x24
   803c6:	4770      	bx	lr

000803c8 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   803c8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   803cc:	6a08      	ldr	r0, [r1, #32]
}
   803ce:	4770      	bx	lr

000803d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
   803d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
   803d2:	010b      	lsls	r3, r1, #4
   803d4:	4293      	cmp	r3, r2
   803d6:	d914      	bls.n	80402 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   803d8:	00c9      	lsls	r1, r1, #3
   803da:	084b      	lsrs	r3, r1, #1
   803dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
   803e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
   803e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   803e6:	1e5c      	subs	r4, r3, #1
   803e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   803ec:	428c      	cmp	r4, r1
   803ee:	d901      	bls.n	803f4 <usart_set_async_baudrate+0x24>
		return 1;
   803f0:	2001      	movs	r0, #1
   803f2:	e017      	b.n	80424 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
   803f4:	6841      	ldr	r1, [r0, #4]
   803f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
   803fa:	6041      	str	r1, [r0, #4]
   803fc:	e00c      	b.n	80418 <usart_set_async_baudrate+0x48>
		return 1;
   803fe:	2001      	movs	r0, #1
   80400:	e010      	b.n	80424 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   80402:	0859      	lsrs	r1, r3, #1
   80404:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   80408:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
   8040c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   8040e:	1e5c      	subs	r4, r3, #1
   80410:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   80414:	428c      	cmp	r4, r1
   80416:	d8f2      	bhi.n	803fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
   80418:	0412      	lsls	r2, r2, #16
   8041a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
   8041e:	431a      	orrs	r2, r3
   80420:	6202      	str	r2, [r0, #32]

	return 0;
   80422:	2000      	movs	r0, #0
}
   80424:	bc10      	pop	{r4}
   80426:	4770      	bx	lr

00080428 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   80428:	4b08      	ldr	r3, [pc, #32]	; (8044c <usart_reset+0x24>)
   8042a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
   8042e:	2300      	movs	r3, #0
   80430:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
   80432:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   80434:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   80436:	2388      	movs	r3, #136	; 0x88
   80438:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8043a:	2324      	movs	r3, #36	; 0x24
   8043c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
   8043e:	f44f 7380 	mov.w	r3, #256	; 0x100
   80442:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
   80444:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   80448:	6003      	str	r3, [r0, #0]
   8044a:	4770      	bx	lr
   8044c:	55534100 	.word	0x55534100

00080450 <usart_init_rs232>:
{
   80450:	b570      	push	{r4, r5, r6, lr}
   80452:	4605      	mov	r5, r0
   80454:	460c      	mov	r4, r1
   80456:	4616      	mov	r6, r2
	usart_reset(p_usart);
   80458:	4b0f      	ldr	r3, [pc, #60]	; (80498 <usart_init_rs232+0x48>)
   8045a:	4798      	blx	r3
	ul_reg_val = 0;
   8045c:	2200      	movs	r2, #0
   8045e:	4b0f      	ldr	r3, [pc, #60]	; (8049c <usart_init_rs232+0x4c>)
   80460:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
   80462:	b1a4      	cbz	r4, 8048e <usart_init_rs232+0x3e>
   80464:	4632      	mov	r2, r6
   80466:	6821      	ldr	r1, [r4, #0]
   80468:	4628      	mov	r0, r5
   8046a:	4b0d      	ldr	r3, [pc, #52]	; (804a0 <usart_init_rs232+0x50>)
   8046c:	4798      	blx	r3
   8046e:	4602      	mov	r2, r0
   80470:	b978      	cbnz	r0, 80492 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80472:	6863      	ldr	r3, [r4, #4]
   80474:	68a1      	ldr	r1, [r4, #8]
   80476:	430b      	orrs	r3, r1
   80478:	6921      	ldr	r1, [r4, #16]
   8047a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
   8047c:	68e1      	ldr	r1, [r4, #12]
   8047e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80480:	4906      	ldr	r1, [pc, #24]	; (8049c <usart_init_rs232+0x4c>)
   80482:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
   80484:	6869      	ldr	r1, [r5, #4]
   80486:	430b      	orrs	r3, r1
   80488:	606b      	str	r3, [r5, #4]
}
   8048a:	4610      	mov	r0, r2
   8048c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
   8048e:	2201      	movs	r2, #1
   80490:	e7fb      	b.n	8048a <usart_init_rs232+0x3a>
   80492:	2201      	movs	r2, #1
   80494:	e7f9      	b.n	8048a <usart_init_rs232+0x3a>
   80496:	bf00      	nop
   80498:	00080429 	.word	0x00080429
   8049c:	20070f0c 	.word	0x20070f0c
   804a0:	000803d1 	.word	0x000803d1

000804a4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   804a4:	2340      	movs	r3, #64	; 0x40
   804a6:	6003      	str	r3, [r0, #0]
   804a8:	4770      	bx	lr

000804aa <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
   804aa:	2310      	movs	r3, #16
   804ac:	6003      	str	r3, [r0, #0]
   804ae:	4770      	bx	lr

000804b0 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
   804b0:	6081      	str	r1, [r0, #8]
   804b2:	4770      	bx	lr

000804b4 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
   804b4:	60c1      	str	r1, [r0, #12]
   804b6:	4770      	bx	lr

000804b8 <usart_get_status>:
	return p_usart->US_CSR;
   804b8:	6940      	ldr	r0, [r0, #20]
}
   804ba:	4770      	bx	lr

000804bc <CRC16MODBUSFRAME>:
unsigned int CRC16MODBUSFRAME (unsigned char *nData, unsigned int wLength)
{
    unsigned char  nTemp;
    unsigned int  wCRCWord = 0xFFFF;

    while (wLength--)
   804bc:	b189      	cbz	r1, 804e2 <CRC16MODBUSFRAME+0x26>
{
   804be:	b410      	push	{r4}
   804c0:	1841      	adds	r1, r0, r1
    while (wLength--)
   804c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
    {
        nTemp = *nData++ ^ wCRCWord;
        wCRCWord >>= 8;
        wCRCWord ^= wCRCTable[nTemp];
   804c6:	4c09      	ldr	r4, [pc, #36]	; (804ec <CRC16MODBUSFRAME+0x30>)
        nTemp = *nData++ ^ wCRCWord;
   804c8:	f810 3b01 	ldrb.w	r3, [r0], #1
   804cc:	4053      	eors	r3, r2
        wCRCWord ^= wCRCTable[nTemp];
   804ce:	b2db      	uxtb	r3, r3
   804d0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   804d4:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
    while (wLength--)
   804d8:	4281      	cmp	r1, r0
   804da:	d1f5      	bne.n	804c8 <CRC16MODBUSFRAME+0xc>
    }
    return wCRCWord;
}
   804dc:	4610      	mov	r0, r2
   804de:	bc10      	pop	{r4}
   804e0:	4770      	bx	lr
    unsigned int  wCRCWord = 0xFFFF;
   804e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
}
   804e6:	4610      	mov	r0, r2
   804e8:	4770      	bx	lr
   804ea:	bf00      	nop
   804ec:	20070138 	.word	0x20070138

000804f0 <ErrorLed>:
 #include "../Headers/appli.h"

 t_ptf32 pErrorFunc = ErrorLed;

 uint32_t ErrorLed(uint32_t err, ...)
 {
   804f0:	b40f      	push	{r0, r1, r2, r3}
   804f2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   804f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(LED0_GPIO);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   804f8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80598 <ErrorLed+0xa8>
   804fc:	fba8 2803 	umull	r2, r8, r8, r3
   80500:	ea4f 08d8 	mov.w	r8, r8, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   80504:	eb08 0a88 	add.w	sl, r8, r8, lsl #2
   80508:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(LED0_GPIO);
   8050c:	253b      	movs	r5, #59	; 0x3b
		delay_ms(2000);
   8050e:	4c1c      	ldr	r4, [pc, #112]	; (80580 <ErrorLed+0x90>)
		delay_ms(500);
   80510:	f8df b088 	ldr.w	fp, [pc, #136]	; 8059c <ErrorLed+0xac>
   80514:	e001      	b.n	8051a <ErrorLed+0x2a>
			gpio_set_pin_high(LED0_GPIO);
			delay_ms(200);
			gpio_set_pin_low(LED0_GPIO);
			delay_ms(200);
		}
		delay_ms(1000);
   80516:	481b      	ldr	r0, [pc, #108]	; (80584 <ErrorLed+0x94>)
   80518:	47a0      	blx	r4
		gpio_set_pin_high(LED0_GPIO);
   8051a:	4628      	mov	r0, r5
   8051c:	4b1a      	ldr	r3, [pc, #104]	; (80588 <ErrorLed+0x98>)
   8051e:	4798      	blx	r3
		delay_ms(2000);
   80520:	481a      	ldr	r0, [pc, #104]	; (8058c <ErrorLed+0x9c>)
   80522:	47a0      	blx	r4
		gpio_set_pin_low(LED0_GPIO);
   80524:	4628      	mov	r0, r5
   80526:	4b1a      	ldr	r3, [pc, #104]	; (80590 <ErrorLed+0xa0>)
   80528:	4798      	blx	r3
		delay_ms(500);
   8052a:	4658      	mov	r0, fp
   8052c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8052e:	f1b8 0f00 	cmp.w	r8, #0
   80532:	d00f      	beq.n	80554 <ErrorLed+0x64>
   80534:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80536:	f8df 9050 	ldr.w	r9, [pc, #80]	; 80588 <ErrorLed+0x98>
			delay_ms(200);
   8053a:	4f16      	ldr	r7, [pc, #88]	; (80594 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   8053c:	4628      	mov	r0, r5
   8053e:	47c8      	blx	r9
			delay_ms(200);
   80540:	4638      	mov	r0, r7
   80542:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80544:	4628      	mov	r0, r5
   80546:	4b12      	ldr	r3, [pc, #72]	; (80590 <ErrorLed+0xa0>)
   80548:	4798      	blx	r3
			delay_ms(200);
   8054a:	4638      	mov	r0, r7
   8054c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8054e:	3601      	adds	r6, #1
   80550:	4546      	cmp	r6, r8
   80552:	d1f3      	bne.n	8053c <ErrorLed+0x4c>
		delay_ms(500);
   80554:	4658      	mov	r0, fp
   80556:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80558:	f1ba 0f00 	cmp.w	sl, #0
   8055c:	d0db      	beq.n	80516 <ErrorLed+0x26>
   8055e:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80560:	f8df 9024 	ldr.w	r9, [pc, #36]	; 80588 <ErrorLed+0x98>
			delay_ms(200);
   80564:	4f0b      	ldr	r7, [pc, #44]	; (80594 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   80566:	4628      	mov	r0, r5
   80568:	47c8      	blx	r9
			delay_ms(200);
   8056a:	4638      	mov	r0, r7
   8056c:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   8056e:	4628      	mov	r0, r5
   80570:	4b07      	ldr	r3, [pc, #28]	; (80590 <ErrorLed+0xa0>)
   80572:	4798      	blx	r3
			delay_ms(200);
   80574:	4638      	mov	r0, r7
   80576:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80578:	3601      	adds	r6, #1
   8057a:	4556      	cmp	r6, sl
   8057c:	d1f3      	bne.n	80566 <ErrorLed+0x76>
   8057e:	e7ca      	b.n	80516 <ErrorLed+0x26>
   80580:	20070001 	.word	0x20070001
   80584:	005b8d80 	.word	0x005b8d80
   80588:	00081273 	.word	0x00081273
   8058c:	00b71b00 	.word	0x00b71b00
   80590:	0008128d 	.word	0x0008128d
   80594:	00124f80 	.word	0x00124f80
   80598:	cccccccd 	.word	0xcccccccd
   8059c:	002dc6c0 	.word	0x002dc6c0

000805a0 <Shell>:
bool	__RTCIsLeapYear(uint32_t centYear);
bool __RTCIsSummerTime(uint32_t day, uint32_t date, uint32_t month, uint32_t hours);


 uint32_t Shell(uint32_t sc, ...)
 {
   805a0:	b40f      	push	{r0, r1, r2, r3}
   805a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   805a6:	b086      	sub	sp, #24
	 uint32_t u1;
	 uint32_t hh;
	 uint32_t mn;
	 uint32_t sec;

	switch(sc)
   805a8:	990c      	ldr	r1, [sp, #48]	; 0x30
   805aa:	2902      	cmp	r1, #2
   805ac:	f000 814b 	beq.w	80846 <Shell+0x2a6>
   805b0:	d93d      	bls.n	8062e <Shell+0x8e>
   805b2:	2904      	cmp	r1, #4
   805b4:	f000 8198 	beq.w	808e8 <Shell+0x348>
   805b8:	2964      	cmp	r1, #100	; 0x64
   805ba:	f040 81cd 	bne.w	80958 <Shell+0x3b8>
	{
	case SHELL_NEW:
		gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   805be:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805c2:	203b      	movs	r0, #59	; 0x3b
   805c4:	4bae      	ldr	r3, [pc, #696]	; (80880 <Shell+0x2e0>)
   805c6:	4798      	blx	r3
		gpio_set_pin_low(LED0_GPIO);
   805c8:	203b      	movs	r0, #59	; 0x3b
   805ca:	4bae      	ldr	r3, [pc, #696]	; (80884 <Shell+0x2e4>)
   805cc:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   805ce:	2064      	movs	r0, #100	; 0x64
   805d0:	4bad      	ldr	r3, [pc, #692]	; (80888 <Shell+0x2e8>)
   805d2:	4798      	blx	r3
		state = IDLE;
   805d4:	2400      	movs	r4, #0
   805d6:	4bad      	ldr	r3, [pc, #692]	; (8088c <Shell+0x2ec>)
   805d8:	701c      	strb	r4, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   805da:	2002      	movs	r0, #2
   805dc:	4bac      	ldr	r3, [pc, #688]	; (80890 <Shell+0x2f0>)
   805de:	4798      	blx	r3
		
		sysclk_enable_peripheral_clock(ID_RTC);
		rtc_set_hour_mode(RTC, 0);
   805e0:	4dac      	ldr	r5, [pc, #688]	; (80894 <Shell+0x2f4>)
   805e2:	4621      	mov	r1, r4
   805e4:	4628      	mov	r0, r5
   805e6:	4bac      	ldr	r3, [pc, #688]	; (80898 <Shell+0x2f8>)
   805e8:	4798      	blx	r3
		rtc_set_time(RTC, 1, 2, 3);
   805ea:	2303      	movs	r3, #3
   805ec:	2202      	movs	r2, #2
   805ee:	2101      	movs	r1, #1
   805f0:	4628      	mov	r0, r5
   805f2:	4daa      	ldr	r5, [pc, #680]	; (8089c <Shell+0x2fc>)
   805f4:	47a8      	blx	r5
		//rtc_enable_interrupt(RTC,RTC_TIMR_SEC_Msk);
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   805f6:	4faa      	ldr	r7, [pc, #680]	; (808a0 <Shell+0x300>)
   805f8:	9400      	str	r4, [sp, #0]
   805fa:	4623      	mov	r3, r4
   805fc:	2202      	movs	r2, #2
   805fe:	4639      	mov	r1, r7
   80600:	2066      	movs	r0, #102	; 0x66
   80602:	4da8      	ldr	r5, [pc, #672]	; (808a4 <Shell+0x304>)
   80604:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,500);
   80606:	f44f 76fa 	mov.w	r6, #500	; 0x1f4
   8060a:	9600      	str	r6, [sp, #0]
   8060c:	4623      	mov	r3, r4
   8060e:	2204      	movs	r2, #4
   80610:	4639      	mov	r1, r7
   80612:	2066      	movs	r0, #102	; 0x66
   80614:	47a8      	blx	r5
		PushTask(Appli, APPLI_NEW, 0, 500);
   80616:	9600      	str	r6, [sp, #0]
   80618:	4623      	mov	r3, r4
   8061a:	2264      	movs	r2, #100	; 0x64
   8061c:	49a2      	ldr	r1, [pc, #648]	; (808a8 <Shell+0x308>)
   8061e:	2066      	movs	r0, #102	; 0x66
   80620:	47a8      	blx	r5
	default:
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80622:	2000      	movs	r0, #0
   80624:	b006      	add	sp, #24
   80626:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8062a:	b004      	add	sp, #16
   8062c:	4770      	bx	lr
	switch(sc)
   8062e:	2901      	cmp	r1, #1
   80630:	f040 8192 	bne.w	80958 <Shell+0x3b8>
		switch(state)
   80634:	4b95      	ldr	r3, [pc, #596]	; (8088c <Shell+0x2ec>)
   80636:	781b      	ldrb	r3, [r3, #0]
   80638:	2b06      	cmp	r3, #6
   8063a:	f200 80fe 	bhi.w	8083a <Shell+0x29a>
   8063e:	a201      	add	r2, pc, #4	; (adr r2, 80644 <Shell+0xa4>)
   80640:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80644:	00080661 	.word	0x00080661
   80648:	000806f9 	.word	0x000806f9
   8064c:	0008079d 	.word	0x0008079d
   80650:	00080623 	.word	0x00080623
   80654:	00080623 	.word	0x00080623
   80658:	00080623 	.word	0x00080623
   8065c:	00080623 	.word	0x00080623
			switch(_kbhitChar)
   80660:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   80662:	b2ec      	uxtb	r4, r5
   80664:	f1a4 0308 	sub.w	r3, r4, #8
   80668:	2b18      	cmp	r3, #24
   8066a:	d835      	bhi.n	806d8 <Shell+0x138>
   8066c:	a201      	add	r2, pc, #4	; (adr r2, 80674 <Shell+0xd4>)
   8066e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80672:	bf00      	nop
   80674:	00080623 	.word	0x00080623
   80678:	00080623 	.word	0x00080623
   8067c:	00080623 	.word	0x00080623
   80680:	000806d9 	.word	0x000806d9
   80684:	000806d9 	.word	0x000806d9
   80688:	00080623 	.word	0x00080623
   8068c:	000806d9 	.word	0x000806d9
   80690:	000806d9 	.word	0x000806d9
   80694:	000806d9 	.word	0x000806d9
   80698:	000806d9 	.word	0x000806d9
   8069c:	000806d9 	.word	0x000806d9
   806a0:	000806d9 	.word	0x000806d9
   806a4:	000806d9 	.word	0x000806d9
   806a8:	000806d9 	.word	0x000806d9
   806ac:	000806d9 	.word	0x000806d9
   806b0:	000806d9 	.word	0x000806d9
   806b4:	000806d9 	.word	0x000806d9
   806b8:	000806d9 	.word	0x000806d9
   806bc:	000806d9 	.word	0x000806d9
   806c0:	00080623 	.word	0x00080623
   806c4:	000806d9 	.word	0x000806d9
   806c8:	000806d9 	.word	0x000806d9
   806cc:	000806d9 	.word	0x000806d9
   806d0:	000806d9 	.word	0x000806d9
   806d4:	00080623 	.word	0x00080623
				Putstr("\r\n>");
   806d8:	4974      	ldr	r1, [pc, #464]	; (808ac <Shell+0x30c>)
   806da:	2067      	movs	r0, #103	; 0x67
   806dc:	4f6a      	ldr	r7, [pc, #424]	; (80888 <Shell+0x2e8>)
   806de:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   806e0:	4e6a      	ldr	r6, [pc, #424]	; (8088c <Shell+0x2ec>)
   806e2:	4b73      	ldr	r3, [pc, #460]	; (808b0 <Shell+0x310>)
   806e4:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   806e6:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   806ea:	2501      	movs	r5, #1
   806ec:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   806ee:	4621      	mov	r1, r4
   806f0:	2066      	movs	r0, #102	; 0x66
   806f2:	47b8      	blx	r7
				state = EDITION;
   806f4:	7035      	strb	r5, [r6, #0]
				break;
   806f6:	e794      	b.n	80622 <Shell+0x82>
			switch(_kbhitChar)
   806f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   806fa:	b2d1      	uxtb	r1, r2
   806fc:	f1a1 0308 	sub.w	r3, r1, #8
   80700:	2b13      	cmp	r3, #19
   80702:	d83a      	bhi.n	8077a <Shell+0x1da>
   80704:	a001      	add	r0, pc, #4	; (adr r0, 8070c <Shell+0x16c>)
   80706:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   8070a:	bf00      	nop
   8070c:	00080623 	.word	0x00080623
   80710:	00080623 	.word	0x00080623
   80714:	00080623 	.word	0x00080623
   80718:	0008077b 	.word	0x0008077b
   8071c:	0008077b 	.word	0x0008077b
   80720:	0008075d 	.word	0x0008075d
   80724:	0008077b 	.word	0x0008077b
   80728:	0008077b 	.word	0x0008077b
   8072c:	0008077b 	.word	0x0008077b
   80730:	0008077b 	.word	0x0008077b
   80734:	0008077b 	.word	0x0008077b
   80738:	0008077b 	.word	0x0008077b
   8073c:	0008077b 	.word	0x0008077b
   80740:	0008077b 	.word	0x0008077b
   80744:	0008077b 	.word	0x0008077b
   80748:	0008077b 	.word	0x0008077b
   8074c:	0008077b 	.word	0x0008077b
   80750:	0008077b 	.word	0x0008077b
   80754:	0008077b 	.word	0x0008077b
   80758:	00080623 	.word	0x00080623
				*pEdit++ = '\0';
   8075c:	4a4b      	ldr	r2, [pc, #300]	; (8088c <Shell+0x2ec>)
   8075e:	6891      	ldr	r1, [r2, #8]
   80760:	1c4b      	adds	r3, r1, #1
   80762:	6093      	str	r3, [r2, #8]
   80764:	2300      	movs	r3, #0
   80766:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   80768:	2102      	movs	r1, #2
   8076a:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   8076c:	9300      	str	r3, [sp, #0]
   8076e:	2201      	movs	r2, #1
   80770:	494b      	ldr	r1, [pc, #300]	; (808a0 <Shell+0x300>)
   80772:	2066      	movs	r0, #102	; 0x66
   80774:	4c4b      	ldr	r4, [pc, #300]	; (808a4 <Shell+0x304>)
   80776:	47a0      	blx	r4
				break;
   80778:	e753      	b.n	80622 <Shell+0x82>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   8077a:	4b44      	ldr	r3, [pc, #272]	; (8088c <Shell+0x2ec>)
   8077c:	68db      	ldr	r3, [r3, #12]
   8077e:	2bfd      	cmp	r3, #253	; 0xfd
   80780:	f63f af4f 	bhi.w	80622 <Shell+0x82>
					*pEdit++ = _kbhitChar;
   80784:	4b41      	ldr	r3, [pc, #260]	; (8088c <Shell+0x2ec>)
   80786:	6898      	ldr	r0, [r3, #8]
   80788:	1c44      	adds	r4, r0, #1
   8078a:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   8078c:	7002      	strb	r2, [r0, #0]
					nbChar++;
   8078e:	68da      	ldr	r2, [r3, #12]
   80790:	3201      	adds	r2, #1
   80792:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   80794:	2066      	movs	r0, #102	; 0x66
   80796:	4b3c      	ldr	r3, [pc, #240]	; (80888 <Shell+0x2e8>)
   80798:	4798      	blx	r3
   8079a:	e742      	b.n	80622 <Shell+0x82>
			Putstr("\r\n>>>");
   8079c:	4945      	ldr	r1, [pc, #276]	; (808b4 <Shell+0x314>)
   8079e:	2067      	movs	r0, #103	; 0x67
   807a0:	4c39      	ldr	r4, [pc, #228]	; (80888 <Shell+0x2e8>)
   807a2:	47a0      	blx	r4
			Putstr(shellBuf);
   807a4:	4d44      	ldr	r5, [pc, #272]	; (808b8 <Shell+0x318>)
   807a6:	4629      	mov	r1, r5
   807a8:	2067      	movs	r0, #103	; 0x67
   807aa:	47a0      	blx	r4
			Putstr("\r\n");
   807ac:	4943      	ldr	r1, [pc, #268]	; (808bc <Shell+0x31c>)
   807ae:	2067      	movs	r0, #103	; 0x67
   807b0:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   807b2:	4943      	ldr	r1, [pc, #268]	; (808c0 <Shell+0x320>)
   807b4:	4628      	mov	r0, r5
   807b6:	4b43      	ldr	r3, [pc, #268]	; (808c4 <Shell+0x324>)
   807b8:	4798      	blx	r3
   807ba:	4607      	mov	r7, r0
   807bc:	900c      	str	r0, [sp, #48]	; 0x30
			if(pToken)
   807be:	b918      	cbnz	r0, 807c8 <Shell+0x228>
			state = IDLE;
   807c0:	2200      	movs	r2, #0
   807c2:	4b32      	ldr	r3, [pc, #200]	; (8088c <Shell+0x2ec>)
   807c4:	701a      	strb	r2, [r3, #0]
			break;
   807c6:	e72c      	b.n	80622 <Shell+0x82>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   807c8:	4b3f      	ldr	r3, [pc, #252]	; (808c8 <Shell+0x328>)
   807ca:	4798      	blx	r3
   807cc:	4601      	mov	r1, r0
   807ce:	4638      	mov	r0, r7
   807d0:	4b3e      	ldr	r3, [pc, #248]	; (808cc <Shell+0x32c>)
   807d2:	4798      	blx	r3
   807d4:	b285      	uxth	r5, r0
   807d6:	4b2d      	ldr	r3, [pc, #180]	; (8088c <Shell+0x2ec>)
   807d8:	821d      	strh	r5, [r3, #16]
				k = 0;
   807da:	2300      	movs	r3, #0
   807dc:	9305      	str	r3, [sp, #20]
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   807de:	4b3c      	ldr	r3, [pc, #240]	; (808d0 <Shell+0x330>)
   807e0:	881b      	ldrh	r3, [r3, #0]
   807e2:	b1db      	cbz	r3, 8081c <Shell+0x27c>
   807e4:	429d      	cmp	r5, r3
   807e6:	d01b      	beq.n	80820 <Shell+0x280>
   807e8:	2301      	movs	r3, #1
   807ea:	4e39      	ldr	r6, [pc, #228]	; (808d0 <Shell+0x330>)
   807ec:	e000      	b.n	807f0 <Shell+0x250>
   807ee:	4623      	mov	r3, r4
   807f0:	f836 1033 	ldrh.w	r1, [r6, r3, lsl #3]
   807f4:	b121      	cbz	r1, 80800 <Shell+0x260>
   807f6:	1c5c      	adds	r4, r3, #1
   807f8:	428d      	cmp	r5, r1
   807fa:	d1f8      	bne.n	807ee <Shell+0x24e>
   807fc:	9305      	str	r3, [sp, #20]
   807fe:	e000      	b.n	80802 <Shell+0x262>
   80800:	9305      	str	r3, [sp, #20]
				if(_cmdEntries[k].pCmdFunc)
   80802:	4933      	ldr	r1, [pc, #204]	; (808d0 <Shell+0x330>)
   80804:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   80808:	685c      	ldr	r4, [r3, #4]
   8080a:	b15c      	cbz	r4, 80824 <Shell+0x284>
					_cmdEntries[k].pCmdFunc(0, shellBuf + strlen(pToken) + 1);
   8080c:	4638      	mov	r0, r7
   8080e:	4b2e      	ldr	r3, [pc, #184]	; (808c8 <Shell+0x328>)
   80810:	4798      	blx	r3
   80812:	4927      	ldr	r1, [pc, #156]	; (808b0 <Shell+0x310>)
   80814:	4401      	add	r1, r0
   80816:	2000      	movs	r0, #0
   80818:	47a0      	blx	r4
   8081a:	e7d1      	b.n	807c0 <Shell+0x220>
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   8081c:	2300      	movs	r3, #0
   8081e:	e7f0      	b.n	80802 <Shell+0x262>
   80820:	2300      	movs	r3, #0
   80822:	e7ee      	b.n	80802 <Shell+0x262>
					sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80824:	4c2b      	ldr	r4, [pc, #172]	; (808d4 <Shell+0x334>)
   80826:	b282      	uxth	r2, r0
   80828:	492b      	ldr	r1, [pc, #172]	; (808d8 <Shell+0x338>)
   8082a:	4620      	mov	r0, r4
   8082c:	4b2b      	ldr	r3, [pc, #172]	; (808dc <Shell+0x33c>)
   8082e:	4798      	blx	r3
					Putstr(buf);
   80830:	4621      	mov	r1, r4
   80832:	2067      	movs	r0, #103	; 0x67
   80834:	4b14      	ldr	r3, [pc, #80]	; (80888 <Shell+0x2e8>)
   80836:	4798      	blx	r3
   80838:	e7c2      	b.n	807c0 <Shell+0x220>
			Putch(_kbhitChar);
   8083a:	f89d 1034 	ldrb.w	r1, [sp, #52]	; 0x34
   8083e:	2066      	movs	r0, #102	; 0x66
   80840:	4b11      	ldr	r3, [pc, #68]	; (80888 <Shell+0x2e8>)
   80842:	4798      	blx	r3
			break;
   80844:	e6ed      	b.n	80622 <Shell+0x82>
		k++; if(flashSequ[k]==0) k=0;
   80846:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   80848:	3401      	adds	r4, #1
   8084a:	940d      	str	r4, [sp, #52]	; 0x34
   8084c:	4b24      	ldr	r3, [pc, #144]	; (808e0 <Shell+0x340>)
   8084e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80852:	b133      	cbz	r3, 80862 <Shell+0x2c2>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80854:	f014 0f01 	tst.w	r4, #1
   80858:	d004      	beq.n	80864 <Shell+0x2c4>
		else gpio_set_pin_low(LED0_GPIO);
   8085a:	203b      	movs	r0, #59	; 0x3b
   8085c:	4b09      	ldr	r3, [pc, #36]	; (80884 <Shell+0x2e4>)
   8085e:	4798      	blx	r3
   80860:	e003      	b.n	8086a <Shell+0x2ca>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80862:	2400      	movs	r4, #0
   80864:	203b      	movs	r0, #59	; 0x3b
   80866:	4b1f      	ldr	r3, [pc, #124]	; (808e4 <Shell+0x344>)
   80868:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   8086a:	4b1d      	ldr	r3, [pc, #116]	; (808e0 <Shell+0x340>)
   8086c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80870:	9300      	str	r3, [sp, #0]
   80872:	4623      	mov	r3, r4
   80874:	2202      	movs	r2, #2
   80876:	490a      	ldr	r1, [pc, #40]	; (808a0 <Shell+0x300>)
   80878:	2066      	movs	r0, #102	; 0x66
   8087a:	4c0a      	ldr	r4, [pc, #40]	; (808a4 <Shell+0x304>)
   8087c:	47a0      	blx	r4
		break;
   8087e:	e6d0      	b.n	80622 <Shell+0x82>
   80880:	000812c9 	.word	0x000812c9
   80884:	0008128d 	.word	0x0008128d
   80888:	00080b61 	.word	0x00080b61
   8088c:	20070fc0 	.word	0x20070fc0
   80890:	000815bd 	.word	0x000815bd
   80894:	400e1a60 	.word	0x400e1a60
   80898:	00080161 	.word	0x00080161
   8089c:	000801d1 	.word	0x000801d1
   808a0:	000805a1 	.word	0x000805a1
   808a4:	00080d79 	.word	0x00080d79
   808a8:	00080f95 	.word	0x00080f95
   808ac:	00086270 	.word	0x00086270
   808b0:	20070fd5 	.word	0x20070fd5
   808b4:	00086274 	.word	0x00086274
   808b8:	20070fd4 	.word	0x20070fd4
   808bc:	0008627c 	.word	0x0008627c
   808c0:	00086280 	.word	0x00086280
   808c4:	00081999 	.word	0x00081999
   808c8:	0008193d 	.word	0x0008193d
   808cc:	000804bd 	.word	0x000804bd
   808d0:	000862dc 	.word	0x000862dc
   808d4:	20071344 	.word	0x20071344
   808d8:	00086284 	.word	0x00086284
   808dc:	000818f1 	.word	0x000818f1
   808e0:	000862c8 	.word	0x000862c8
   808e4:	00081273 	.word	0x00081273
		if(state==IDLE)
   808e8:	4b1e      	ldr	r3, [pc, #120]	; (80964 <Shell+0x3c4>)
   808ea:	781b      	ldrb	r3, [r3, #0]
   808ec:	b14b      	cbz	r3, 80902 <Shell+0x362>
		PushTask(Shell,_SHELL_PROMPT,0,300);
   808ee:	f44f 7396 	mov.w	r3, #300	; 0x12c
   808f2:	9300      	str	r3, [sp, #0]
   808f4:	2300      	movs	r3, #0
   808f6:	2204      	movs	r2, #4
   808f8:	491b      	ldr	r1, [pc, #108]	; (80968 <Shell+0x3c8>)
   808fa:	2066      	movs	r0, #102	; 0x66
   808fc:	4c1b      	ldr	r4, [pc, #108]	; (8096c <Shell+0x3cc>)
   808fe:	47a0      	blx	r4
		break;
   80900:	e68f      	b.n	80622 <Shell+0x82>
			rtc_get_time(RTC, &hh, &mn, &sec);
   80902:	f10d 0808 	add.w	r8, sp, #8
   80906:	4f1a      	ldr	r7, [pc, #104]	; (80970 <Shell+0x3d0>)
   80908:	4643      	mov	r3, r8
   8090a:	aa03      	add	r2, sp, #12
   8090c:	a904      	add	r1, sp, #16
   8090e:	4638      	mov	r0, r7
   80910:	4c18      	ldr	r4, [pc, #96]	; (80974 <Shell+0x3d4>)
   80912:	47a0      	blx	r4
			sprintf(buf, "\r\e[k\r%02d:%02d:%02d", hh, mn, sec);
   80914:	4c18      	ldr	r4, [pc, #96]	; (80978 <Shell+0x3d8>)
   80916:	9b02      	ldr	r3, [sp, #8]
   80918:	9300      	str	r3, [sp, #0]
   8091a:	9b03      	ldr	r3, [sp, #12]
   8091c:	9a04      	ldr	r2, [sp, #16]
   8091e:	4917      	ldr	r1, [pc, #92]	; (8097c <Shell+0x3dc>)
   80920:	4620      	mov	r0, r4
   80922:	4e17      	ldr	r6, [pc, #92]	; (80980 <Shell+0x3e0>)
   80924:	47b0      	blx	r6
			Putstr(buf);
   80926:	4621      	mov	r1, r4
   80928:	2067      	movs	r0, #103	; 0x67
   8092a:	4d16      	ldr	r5, [pc, #88]	; (80984 <Shell+0x3e4>)
   8092c:	47a8      	blx	r5
			rtc_get_date(RTC, &yr, &mm, &dd, &wk);
   8092e:	f8cd 8000 	str.w	r8, [sp]
   80932:	ab03      	add	r3, sp, #12
   80934:	aa04      	add	r2, sp, #16
   80936:	a905      	add	r1, sp, #20
   80938:	4638      	mov	r0, r7
   8093a:	4f13      	ldr	r7, [pc, #76]	; (80988 <Shell+0x3e8>)
   8093c:	47b8      	blx	r7
			sprintf(buf, "	%02d:%02d:%02d:%02d", yr, mm, dd, wk);
   8093e:	9b02      	ldr	r3, [sp, #8]
   80940:	9301      	str	r3, [sp, #4]
   80942:	9b03      	ldr	r3, [sp, #12]
   80944:	9300      	str	r3, [sp, #0]
   80946:	9b04      	ldr	r3, [sp, #16]
   80948:	9a05      	ldr	r2, [sp, #20]
   8094a:	4910      	ldr	r1, [pc, #64]	; (8098c <Shell+0x3ec>)
   8094c:	4620      	mov	r0, r4
   8094e:	47b0      	blx	r6
			Putstr(buf);
   80950:	4621      	mov	r1, r4
   80952:	2067      	movs	r0, #103	; 0x67
   80954:	47a8      	blx	r5
   80956:	e7ca      	b.n	808ee <Shell+0x34e>
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   80958:	4b0d      	ldr	r3, [pc, #52]	; (80990 <Shell+0x3f0>)
   8095a:	681b      	ldr	r3, [r3, #0]
   8095c:	200e      	movs	r0, #14
   8095e:	4798      	blx	r3
   80960:	e65f      	b.n	80622 <Shell+0x82>
   80962:	bf00      	nop
   80964:	20070fc0 	.word	0x20070fc0
   80968:	000805a1 	.word	0x000805a1
   8096c:	00080d79 	.word	0x00080d79
   80970:	400e1a60 	.word	0x400e1a60
   80974:	00080177 	.word	0x00080177
   80978:	20071344 	.word	0x20071344
   8097c:	0008629c 	.word	0x0008629c
   80980:	000818f1 	.word	0x000818f1
   80984:	00080b61 	.word	0x00080b61
   80988:	00080265 	.word	0x00080265
   8098c:	000862b0 	.word	0x000862b0
   80990:	20070538 	.word	0x20070538

00080994 <RTC_Handler>:


 void RTC_Handler(void )
 {
   80994:	4770      	bx	lr
	...

00080998 <_cmd_set>:


uint32_t u1, u2, u3, u4;

void _cmd_set(uint32_t sc, void* pParam)
{
   80998:	b510      	push	{r4, lr}
   8099a:	b082      	sub	sp, #8
   8099c:	4608      	mov	r0, r1
	uint16_t crc;
#define pToken sc
	pToken = (uint32_t)strtok(pParam, " \r\n");
   8099e:	493e      	ldr	r1, [pc, #248]	; (80a98 <_cmd_set+0x100>)
   809a0:	4b3e      	ldr	r3, [pc, #248]	; (80a9c <_cmd_set+0x104>)
   809a2:	4798      	blx	r3
	if(pToken)
   809a4:	b908      	cbnz	r0, 809aa <_cmd_set+0x12>
#undef pToken
	}
	


}
   809a6:	b002      	add	sp, #8
   809a8:	bd10      	pop	{r4, pc}
   809aa:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   809ac:	4b3c      	ldr	r3, [pc, #240]	; (80aa0 <_cmd_set+0x108>)
   809ae:	4798      	blx	r3
   809b0:	4601      	mov	r1, r0
   809b2:	4620      	mov	r0, r4
   809b4:	4b3b      	ldr	r3, [pc, #236]	; (80aa4 <_cmd_set+0x10c>)
   809b6:	4798      	blx	r3
   809b8:	b282      	uxth	r2, r0
		switch(crc)
   809ba:	f247 3327 	movw	r3, #29479	; 0x7327
   809be:	429a      	cmp	r2, r3
   809c0:	d00d      	beq.n	809de <_cmd_set+0x46>
   809c2:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   809c6:	429a      	cmp	r2, r3
   809c8:	d031      	beq.n	80a2e <_cmd_set+0x96>
			sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   809ca:	4c37      	ldr	r4, [pc, #220]	; (80aa8 <_cmd_set+0x110>)
   809cc:	4937      	ldr	r1, [pc, #220]	; (80aac <_cmd_set+0x114>)
   809ce:	4620      	mov	r0, r4
   809d0:	4b37      	ldr	r3, [pc, #220]	; (80ab0 <_cmd_set+0x118>)
   809d2:	4798      	blx	r3
			Putstr(buf);
   809d4:	4621      	mov	r1, r4
   809d6:	2067      	movs	r0, #103	; 0x67
   809d8:	4b36      	ldr	r3, [pc, #216]	; (80ab4 <_cmd_set+0x11c>)
   809da:	4798      	blx	r3
}
   809dc:	e7e3      	b.n	809a6 <_cmd_set+0xe>
			pToken = strtok(NULL, " : \r\n");
   809de:	4936      	ldr	r1, [pc, #216]	; (80ab8 <_cmd_set+0x120>)
   809e0:	2000      	movs	r0, #0
   809e2:	4b2e      	ldr	r3, [pc, #184]	; (80a9c <_cmd_set+0x104>)
   809e4:	4798      	blx	r3
			if(pToken) hh = atoi(pToken);
   809e6:	b998      	cbnz	r0, 80a10 <_cmd_set+0x78>
			pToken = strtok(NULL, " : \r\n");
   809e8:	4933      	ldr	r1, [pc, #204]	; (80ab8 <_cmd_set+0x120>)
   809ea:	2000      	movs	r0, #0
   809ec:	4b2b      	ldr	r3, [pc, #172]	; (80a9c <_cmd_set+0x104>)
   809ee:	4798      	blx	r3
			if(pToken) mn = atoi(pToken);
   809f0:	b998      	cbnz	r0, 80a1a <_cmd_set+0x82>
			pToken = strtok(NULL, " : \r\n");
   809f2:	4931      	ldr	r1, [pc, #196]	; (80ab8 <_cmd_set+0x120>)
   809f4:	2000      	movs	r0, #0
   809f6:	4b29      	ldr	r3, [pc, #164]	; (80a9c <_cmd_set+0x104>)
   809f8:	4798      	blx	r3
			if(pToken) sec = atoi(pToken);
   809fa:	b998      	cbnz	r0, 80a24 <_cmd_set+0x8c>
			rtc_set_time(RTC, hh, mn, sec);
   809fc:	4b2f      	ldr	r3, [pc, #188]	; (80abc <_cmd_set+0x124>)
   809fe:	681b      	ldr	r3, [r3, #0]
   80a00:	4a2f      	ldr	r2, [pc, #188]	; (80ac0 <_cmd_set+0x128>)
   80a02:	6812      	ldr	r2, [r2, #0]
   80a04:	492f      	ldr	r1, [pc, #188]	; (80ac4 <_cmd_set+0x12c>)
   80a06:	6809      	ldr	r1, [r1, #0]
   80a08:	482f      	ldr	r0, [pc, #188]	; (80ac8 <_cmd_set+0x130>)
   80a0a:	4c30      	ldr	r4, [pc, #192]	; (80acc <_cmd_set+0x134>)
   80a0c:	47a0      	blx	r4
			break;
   80a0e:	e7ca      	b.n	809a6 <_cmd_set+0xe>
			if(pToken) hh = atoi(pToken);
   80a10:	4b2f      	ldr	r3, [pc, #188]	; (80ad0 <_cmd_set+0x138>)
   80a12:	4798      	blx	r3
   80a14:	4b2b      	ldr	r3, [pc, #172]	; (80ac4 <_cmd_set+0x12c>)
   80a16:	6018      	str	r0, [r3, #0]
   80a18:	e7e6      	b.n	809e8 <_cmd_set+0x50>
			if(pToken) mn = atoi(pToken);
   80a1a:	4b2d      	ldr	r3, [pc, #180]	; (80ad0 <_cmd_set+0x138>)
   80a1c:	4798      	blx	r3
   80a1e:	4b28      	ldr	r3, [pc, #160]	; (80ac0 <_cmd_set+0x128>)
   80a20:	6018      	str	r0, [r3, #0]
   80a22:	e7e6      	b.n	809f2 <_cmd_set+0x5a>
			if(pToken) sec = atoi(pToken);
   80a24:	4b2a      	ldr	r3, [pc, #168]	; (80ad0 <_cmd_set+0x138>)
   80a26:	4798      	blx	r3
   80a28:	4b24      	ldr	r3, [pc, #144]	; (80abc <_cmd_set+0x124>)
   80a2a:	6018      	str	r0, [r3, #0]
   80a2c:	e7e6      	b.n	809fc <_cmd_set+0x64>
			pToken = strtok(NULL, " : \r\n");
   80a2e:	4922      	ldr	r1, [pc, #136]	; (80ab8 <_cmd_set+0x120>)
   80a30:	2000      	movs	r0, #0
   80a32:	4b1a      	ldr	r3, [pc, #104]	; (80a9c <_cmd_set+0x104>)
   80a34:	4798      	blx	r3
			if(pToken) yr = atoi(pToken);
   80a36:	b9d8      	cbnz	r0, 80a70 <_cmd_set+0xd8>
			pToken = strtok(NULL, " : \r\n");
   80a38:	491f      	ldr	r1, [pc, #124]	; (80ab8 <_cmd_set+0x120>)
   80a3a:	2000      	movs	r0, #0
   80a3c:	4b17      	ldr	r3, [pc, #92]	; (80a9c <_cmd_set+0x104>)
   80a3e:	4798      	blx	r3
			if(pToken) mm = atoi(pToken);
   80a40:	b9d8      	cbnz	r0, 80a7a <_cmd_set+0xe2>
			pToken = strtok(NULL, " : \r\n");
   80a42:	491d      	ldr	r1, [pc, #116]	; (80ab8 <_cmd_set+0x120>)
   80a44:	2000      	movs	r0, #0
   80a46:	4b15      	ldr	r3, [pc, #84]	; (80a9c <_cmd_set+0x104>)
   80a48:	4798      	blx	r3
			if(pToken) dd = atoi(pToken);
   80a4a:	b9d8      	cbnz	r0, 80a84 <_cmd_set+0xec>
			pToken = strtok(NULL, " : \r\n");
   80a4c:	491a      	ldr	r1, [pc, #104]	; (80ab8 <_cmd_set+0x120>)
   80a4e:	2000      	movs	r0, #0
   80a50:	4b12      	ldr	r3, [pc, #72]	; (80a9c <_cmd_set+0x104>)
   80a52:	4798      	blx	r3
			if(pToken) wk = atoi(pToken);
   80a54:	b9d8      	cbnz	r0, 80a8e <_cmd_set+0xf6>
			rtc_set_date(RTC, yr, mm, dd, wk);
   80a56:	4b19      	ldr	r3, [pc, #100]	; (80abc <_cmd_set+0x124>)
   80a58:	681b      	ldr	r3, [r3, #0]
   80a5a:	4a19      	ldr	r2, [pc, #100]	; (80ac0 <_cmd_set+0x128>)
   80a5c:	6812      	ldr	r2, [r2, #0]
   80a5e:	4919      	ldr	r1, [pc, #100]	; (80ac4 <_cmd_set+0x12c>)
   80a60:	6809      	ldr	r1, [r1, #0]
   80a62:	481c      	ldr	r0, [pc, #112]	; (80ad4 <_cmd_set+0x13c>)
   80a64:	6800      	ldr	r0, [r0, #0]
   80a66:	9000      	str	r0, [sp, #0]
   80a68:	4817      	ldr	r0, [pc, #92]	; (80ac8 <_cmd_set+0x130>)
   80a6a:	4c1b      	ldr	r4, [pc, #108]	; (80ad8 <_cmd_set+0x140>)
   80a6c:	47a0      	blx	r4
			break;
   80a6e:	e79a      	b.n	809a6 <_cmd_set+0xe>
			if(pToken) yr = atoi(pToken);
   80a70:	4b17      	ldr	r3, [pc, #92]	; (80ad0 <_cmd_set+0x138>)
   80a72:	4798      	blx	r3
   80a74:	4b13      	ldr	r3, [pc, #76]	; (80ac4 <_cmd_set+0x12c>)
   80a76:	6018      	str	r0, [r3, #0]
   80a78:	e7de      	b.n	80a38 <_cmd_set+0xa0>
			if(pToken) mm = atoi(pToken);
   80a7a:	4b15      	ldr	r3, [pc, #84]	; (80ad0 <_cmd_set+0x138>)
   80a7c:	4798      	blx	r3
   80a7e:	4b10      	ldr	r3, [pc, #64]	; (80ac0 <_cmd_set+0x128>)
   80a80:	6018      	str	r0, [r3, #0]
   80a82:	e7de      	b.n	80a42 <_cmd_set+0xaa>
			if(pToken) dd = atoi(pToken);
   80a84:	4b12      	ldr	r3, [pc, #72]	; (80ad0 <_cmd_set+0x138>)
   80a86:	4798      	blx	r3
   80a88:	4b0c      	ldr	r3, [pc, #48]	; (80abc <_cmd_set+0x124>)
   80a8a:	6018      	str	r0, [r3, #0]
   80a8c:	e7de      	b.n	80a4c <_cmd_set+0xb4>
			if(pToken) wk = atoi(pToken);
   80a8e:	4b10      	ldr	r3, [pc, #64]	; (80ad0 <_cmd_set+0x138>)
   80a90:	4798      	blx	r3
   80a92:	4b10      	ldr	r3, [pc, #64]	; (80ad4 <_cmd_set+0x13c>)
   80a94:	6018      	str	r0, [r3, #0]
   80a96:	e7de      	b.n	80a56 <_cmd_set+0xbe>
   80a98:	00086280 	.word	0x00086280
   80a9c:	00081999 	.word	0x00081999
   80aa0:	0008193d 	.word	0x0008193d
   80aa4:	000804bd 	.word	0x000804bd
   80aa8:	20071344 	.word	0x20071344
   80aac:	00086284 	.word	0x00086284
   80ab0:	000818f1 	.word	0x000818f1
   80ab4:	00080b61 	.word	0x00080b61
   80ab8:	000862f4 	.word	0x000862f4
   80abc:	200710f0 	.word	0x200710f0
   80ac0:	200710e4 	.word	0x200710e4
   80ac4:	200710e8 	.word	0x200710e8
   80ac8:	400e1a60 	.word	0x400e1a60
   80acc:	000801d1 	.word	0x000801d1
   80ad0:	000817fd 	.word	0x000817fd
   80ad4:	200710ec 	.word	0x200710ec
   80ad8:	000802d9 	.word	0x000802d9

00080adc <_cmd_show>:

void _cmd_show(uint32_t sc, void* pParam)
 {
   80adc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80ade:	4b1b      	ldr	r3, [pc, #108]	; (80b4c <_cmd_show+0x70>)
   80ae0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	if(ioport_get_pin_level(PIO_PC23_IDX))
   80ae2:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80ae6:	d118      	bne.n	80b1a <_cmd_show+0x3e>
		ioport_set_pin_level(PIO_PC23_IDX,0);
		Putstr(buf);
	}
	else
	{
	sprintf(buf, "L'etat de la broche etait bas \r\n");
   80ae8:	4e19      	ldr	r6, [pc, #100]	; (80b50 <_cmd_show+0x74>)
   80aea:	4c1a      	ldr	r4, [pc, #104]	; (80b54 <_cmd_show+0x78>)
   80aec:	f106 0720 	add.w	r7, r6, #32
   80af0:	4635      	mov	r5, r6
   80af2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80af4:	6020      	str	r0, [r4, #0]
   80af6:	6061      	str	r1, [r4, #4]
   80af8:	60a2      	str	r2, [r4, #8]
   80afa:	60e3      	str	r3, [r4, #12]
   80afc:	462e      	mov	r6, r5
   80afe:	3410      	adds	r4, #16
   80b00:	42bd      	cmp	r5, r7
   80b02:	d1f5      	bne.n	80af0 <_cmd_show+0x14>
   80b04:	782b      	ldrb	r3, [r5, #0]
   80b06:	7023      	strb	r3, [r4, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80b08:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80b0c:	4b0f      	ldr	r3, [pc, #60]	; (80b4c <_cmd_show+0x70>)
   80b0e:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(PIO_PC23_IDX,1);
	Putstr(buf);
   80b10:	4910      	ldr	r1, [pc, #64]	; (80b54 <_cmd_show+0x78>)
   80b12:	2067      	movs	r0, #103	; 0x67
   80b14:	4b10      	ldr	r3, [pc, #64]	; (80b58 <_cmd_show+0x7c>)
   80b16:	4798      	blx	r3
   80b18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		sprintf(buf, "L'etat de la broche etait haut \r\n");
   80b1a:	4e10      	ldr	r6, [pc, #64]	; (80b5c <_cmd_show+0x80>)
   80b1c:	4c0d      	ldr	r4, [pc, #52]	; (80b54 <_cmd_show+0x78>)
   80b1e:	f106 0720 	add.w	r7, r6, #32
   80b22:	4635      	mov	r5, r6
   80b24:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80b26:	6020      	str	r0, [r4, #0]
   80b28:	6061      	str	r1, [r4, #4]
   80b2a:	60a2      	str	r2, [r4, #8]
   80b2c:	60e3      	str	r3, [r4, #12]
   80b2e:	462e      	mov	r6, r5
   80b30:	3410      	adds	r4, #16
   80b32:	42bd      	cmp	r5, r7
   80b34:	d1f5      	bne.n	80b22 <_cmd_show+0x46>
   80b36:	882b      	ldrh	r3, [r5, #0]
   80b38:	8023      	strh	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80b3a:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80b3e:	4b03      	ldr	r3, [pc, #12]	; (80b4c <_cmd_show+0x70>)
   80b40:	635a      	str	r2, [r3, #52]	; 0x34
		Putstr(buf);
   80b42:	4904      	ldr	r1, [pc, #16]	; (80b54 <_cmd_show+0x78>)
   80b44:	2067      	movs	r0, #103	; 0x67
   80b46:	4b04      	ldr	r3, [pc, #16]	; (80b58 <_cmd_show+0x7c>)
   80b48:	4798      	blx	r3
   80b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80b4c:	400e1200 	.word	0x400e1200
   80b50:	00086320 	.word	0x00086320
   80b54:	20071344 	.word	0x20071344
   80b58:	00080b61 	.word	0x00080b61
   80b5c:	000862fc 	.word	0x000862fc

00080b60 <Shellcom>:
 ////// Nicely shortcuts .............. ///////////////////////
 #define pTxWrite		shellcom.pTxWrite
 #define pTxRead		shellcom.pTxRead
 
 uint32_t Shellcom(uint32_t sc , ...)
 {
   80b60:	b40f      	push	{r0, r1, r2, r3}
   80b62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(sc)
   80b64:	9906      	ldr	r1, [sp, #24]
   80b66:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   80b6a:	2b04      	cmp	r3, #4
   80b6c:	f200 80a2 	bhi.w	80cb4 <Shellcom+0x154>
   80b70:	e8df f003 	tbb	[pc, r3]
   80b74:	2376a045 	.word	0x2376a045
   80b78:	03          	.byte	0x03
   80b79:	00          	.byte	0x00
#undef _pStr
		break;
	case SHELLCOM_PUTSTRLEN:
#define _pStr pa1
#define _len  pa2
	while(_len)
   80b7a:	9d08      	ldr	r5, [sp, #32]
   80b7c:	2d00      	cmp	r5, #0
   80b7e:	d06a      	beq.n	80c56 <Shellcom+0xf6>
	{
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80b80:	4c4f      	ldr	r4, [pc, #316]	; (80cc0 <Shellcom+0x160>)
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80b82:	4e50      	ldr	r6, [pc, #320]	; (80cc4 <Shellcom+0x164>)
   80b84:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80b88:	6823      	ldr	r3, [r4, #0]
   80b8a:	1c5a      	adds	r2, r3, #1
   80b8c:	6022      	str	r2, [r4, #0]
   80b8e:	9a07      	ldr	r2, [sp, #28]
   80b90:	1c51      	adds	r1, r2, #1
   80b92:	9107      	str	r1, [sp, #28]
   80b94:	7812      	ldrb	r2, [r2, #0]
   80b96:	701a      	strb	r2, [r3, #0]
   80b98:	3d01      	subs	r5, #1
   80b9a:	9508      	str	r5, [sp, #32]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80b9c:	6823      	ldr	r3, [r4, #0]
   80b9e:	42b3      	cmp	r3, r6
   80ba0:	bf28      	it	cs
   80ba2:	6027      	strcs	r7, [r4, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80ba4:	6822      	ldr	r2, [r4, #0]
   80ba6:	6863      	ldr	r3, [r4, #4]
   80ba8:	429a      	cmp	r2, r3
   80baa:	d07d      	beq.n	80ca8 <Shellcom+0x148>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80bac:	2102      	movs	r1, #2
   80bae:	4846      	ldr	r0, [pc, #280]	; (80cc8 <Shellcom+0x168>)
   80bb0:	4b46      	ldr	r3, [pc, #280]	; (80ccc <Shellcom+0x16c>)
   80bb2:	4798      	blx	r3
	while(_len)
   80bb4:	2d00      	cmp	r5, #0
   80bb6:	d1e7      	bne.n	80b88 <Shellcom+0x28>
   80bb8:	e04d      	b.n	80c56 <Shellcom+0xf6>
		while(*(char*)_pStr)
   80bba:	9d07      	ldr	r5, [sp, #28]
   80bbc:	462a      	mov	r2, r5
   80bbe:	782b      	ldrb	r3, [r5, #0]
   80bc0:	2b00      	cmp	r3, #0
   80bc2:	d048      	beq.n	80c56 <Shellcom+0xf6>
   80bc4:	3501      	adds	r5, #1
			*pTxWrite++ = *(char*)_pStr++;
   80bc6:	4c3e      	ldr	r4, [pc, #248]	; (80cc0 <Shellcom+0x160>)
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80bc8:	4e3e      	ldr	r6, [pc, #248]	; (80cc4 <Shellcom+0x164>)
   80bca:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
			*pTxWrite++ = *(char*)_pStr++;
   80bce:	6823      	ldr	r3, [r4, #0]
   80bd0:	1c59      	adds	r1, r3, #1
   80bd2:	6021      	str	r1, [r4, #0]
   80bd4:	9507      	str	r5, [sp, #28]
   80bd6:	7812      	ldrb	r2, [r2, #0]
   80bd8:	701a      	strb	r2, [r3, #0]
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80bda:	6823      	ldr	r3, [r4, #0]
   80bdc:	42b3      	cmp	r3, r6
   80bde:	bf28      	it	cs
   80be0:	6027      	strcs	r7, [r4, #0]
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80be2:	6822      	ldr	r2, [r4, #0]
   80be4:	6863      	ldr	r3, [r4, #4]
   80be6:	429a      	cmp	r2, r3
   80be8:	d058      	beq.n	80c9c <Shellcom+0x13c>
			usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80bea:	2102      	movs	r1, #2
   80bec:	4836      	ldr	r0, [pc, #216]	; (80cc8 <Shellcom+0x168>)
   80bee:	4b37      	ldr	r3, [pc, #220]	; (80ccc <Shellcom+0x16c>)
   80bf0:	4798      	blx	r3
		while(*(char*)_pStr)
   80bf2:	462a      	mov	r2, r5
   80bf4:	f815 3b01 	ldrb.w	r3, [r5], #1
   80bf8:	2b00      	cmp	r3, #0
   80bfa:	d1e8      	bne.n	80bce <Shellcom+0x6e>
   80bfc:	e02b      	b.n	80c56 <Shellcom+0xf6>
		pTxWrite = pTxRead = shellcomTxBuf;
   80bfe:	4b30      	ldr	r3, [pc, #192]	; (80cc0 <Shellcom+0x160>)
   80c00:	4a33      	ldr	r2, [pc, #204]	; (80cd0 <Shellcom+0x170>)
   80c02:	605a      	str	r2, [r3, #4]
   80c04:	601a      	str	r2, [r3, #0]
   80c06:	2011      	movs	r0, #17
   80c08:	4c32      	ldr	r4, [pc, #200]	; (80cd4 <Shellcom+0x174>)
   80c0a:	47a0      	blx	r4
		usart_init_rs232(USART_SERIAL, &usart_console_settings,	sysclk_get_cpu_hz());
   80c0c:	4d2e      	ldr	r5, [pc, #184]	; (80cc8 <Shellcom+0x168>)
   80c0e:	4a32      	ldr	r2, [pc, #200]	; (80cd8 <Shellcom+0x178>)
   80c10:	4932      	ldr	r1, [pc, #200]	; (80cdc <Shellcom+0x17c>)
   80c12:	4628      	mov	r0, r5
   80c14:	4b32      	ldr	r3, [pc, #200]	; (80ce0 <Shellcom+0x180>)
   80c16:	4798      	blx	r3
		gpio_configure_pin(USART_SERIAL_TXD_IDX,USART_SERIAL_TXD_FLAGS);
   80c18:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80c1c:	200b      	movs	r0, #11
   80c1e:	4e31      	ldr	r6, [pc, #196]	; (80ce4 <Shellcom+0x184>)
   80c20:	47b0      	blx	r6
		gpio_configure_pin(USART_SERIAL_RXD_IDX,USART_SERIAL_RXD_FLAGS);
   80c22:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80c26:	200a      	movs	r0, #10
   80c28:	47b0      	blx	r6
		usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
   80c2a:	2101      	movs	r1, #1
   80c2c:	4628      	mov	r0, r5
   80c2e:	4b27      	ldr	r3, [pc, #156]	; (80ccc <Shellcom+0x16c>)
   80c30:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80c32:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80c36:	4b2c      	ldr	r3, [pc, #176]	; (80ce8 <Shellcom+0x188>)
   80c38:	601a      	str	r2, [r3, #0]
		usart_enable_tx(USART_SERIAL);
   80c3a:	4628      	mov	r0, r5
   80c3c:	4b2b      	ldr	r3, [pc, #172]	; (80cec <Shellcom+0x18c>)
   80c3e:	4798      	blx	r3
		usart_enable_rx(USART_SERIAL);
   80c40:	4628      	mov	r0, r5
   80c42:	4b2b      	ldr	r3, [pc, #172]	; (80cf0 <Shellcom+0x190>)
   80c44:	4798      	blx	r3
   80c46:	200b      	movs	r0, #11
   80c48:	47a0      	blx	r4
   80c4a:	200c      	movs	r0, #12
   80c4c:	47a0      	blx	r4
   80c4e:	200d      	movs	r0, #13
   80c50:	47a0      	blx	r4
   80c52:	200e      	movs	r0, #14
   80c54:	47a0      	blx	r4
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80c56:	2000      	movs	r0, #0
   80c58:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80c5c:	b004      	add	sp, #16
   80c5e:	4770      	bx	lr
		*pTxWrite++ = _ch;
   80c60:	4b17      	ldr	r3, [pc, #92]	; (80cc0 <Shellcom+0x160>)
   80c62:	681a      	ldr	r2, [r3, #0]
   80c64:	1c51      	adds	r1, r2, #1
   80c66:	6019      	str	r1, [r3, #0]
   80c68:	9907      	ldr	r1, [sp, #28]
   80c6a:	7011      	strb	r1, [r2, #0]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80c6c:	681a      	ldr	r2, [r3, #0]
   80c6e:	4b15      	ldr	r3, [pc, #84]	; (80cc4 <Shellcom+0x164>)
   80c70:	429a      	cmp	r2, r3
   80c72:	d303      	bcc.n	80c7c <Shellcom+0x11c>
   80c74:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80c78:	4b11      	ldr	r3, [pc, #68]	; (80cc0 <Shellcom+0x160>)
   80c7a:	601a      	str	r2, [r3, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80c7c:	4b10      	ldr	r3, [pc, #64]	; (80cc0 <Shellcom+0x160>)
   80c7e:	681a      	ldr	r2, [r3, #0]
   80c80:	685b      	ldr	r3, [r3, #4]
   80c82:	429a      	cmp	r2, r3
   80c84:	d004      	beq.n	80c90 <Shellcom+0x130>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80c86:	2102      	movs	r1, #2
   80c88:	480f      	ldr	r0, [pc, #60]	; (80cc8 <Shellcom+0x168>)
   80c8a:	4b10      	ldr	r3, [pc, #64]	; (80ccc <Shellcom+0x16c>)
   80c8c:	4798      	blx	r3
		break;
   80c8e:	e7e2      	b.n	80c56 <Shellcom+0xf6>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80c90:	4b18      	ldr	r3, [pc, #96]	; (80cf4 <Shellcom+0x194>)
   80c92:	681b      	ldr	r3, [r3, #0]
   80c94:	2166      	movs	r1, #102	; 0x66
   80c96:	2017      	movs	r0, #23
   80c98:	4798      	blx	r3
   80c9a:	e7f4      	b.n	80c86 <Shellcom+0x126>
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80c9c:	4b15      	ldr	r3, [pc, #84]	; (80cf4 <Shellcom+0x194>)
   80c9e:	681b      	ldr	r3, [r3, #0]
   80ca0:	2167      	movs	r1, #103	; 0x67
   80ca2:	2017      	movs	r0, #23
   80ca4:	4798      	blx	r3
   80ca6:	e7a0      	b.n	80bea <Shellcom+0x8a>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80ca8:	4b12      	ldr	r3, [pc, #72]	; (80cf4 <Shellcom+0x194>)
   80caa:	681b      	ldr	r3, [r3, #0]
   80cac:	2167      	movs	r1, #103	; 0x67
   80cae:	2017      	movs	r0, #23
   80cb0:	4798      	blx	r3
   80cb2:	e77b      	b.n	80bac <Shellcom+0x4c>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
   80cb4:	4b0f      	ldr	r3, [pc, #60]	; (80cf4 <Shellcom+0x194>)
   80cb6:	681b      	ldr	r3, [r3, #0]
   80cb8:	200d      	movs	r0, #13
   80cba:	4798      	blx	r3
   80cbc:	e7cb      	b.n	80c56 <Shellcom+0xf6>
   80cbe:	bf00      	nop
   80cc0:	200710f4 	.word	0x200710f4
   80cc4:	200711fc 	.word	0x200711fc
   80cc8:	40098000 	.word	0x40098000
   80ccc:	000804b1 	.word	0x000804b1
   80cd0:	200710fc 	.word	0x200710fc
   80cd4:	000815bd 	.word	0x000815bd
   80cd8:	0501bd00 	.word	0x0501bd00
   80cdc:	00086344 	.word	0x00086344
   80ce0:	00080451 	.word	0x00080451
   80ce4:	000812c9 	.word	0x000812c9
   80ce8:	e000e100 	.word	0xe000e100
   80cec:	000804a5 	.word	0x000804a5
   80cf0:	000804ab 	.word	0x000804ab
   80cf4:	20070538 	.word	0x20070538

00080cf8 <USART0_Handler>:
	 _SHELL_KBHIT = 1
 };

 
 void USART0_Handler()
 {
   80cf8:	b530      	push	{r4, r5, lr}
   80cfa:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
   80cfc:	4817      	ldr	r0, [pc, #92]	; (80d5c <USART0_Handler+0x64>)
   80cfe:	4b18      	ldr	r3, [pc, #96]	; (80d60 <USART0_Handler+0x68>)
   80d00:	4798      	blx	r3
   80d02:	4604      	mov	r4, r0

	if(dw_status & US_CSR_RXRDY)
   80d04:	f010 0f01 	tst.w	r0, #1
   80d08:	d116      	bne.n	80d38 <USART0_Handler+0x40>
	{
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
	}

	if(dw_status & US_CSR_TXRDY)
   80d0a:	f014 0f02 	tst.w	r4, #2
   80d0e:	d011      	beq.n	80d34 <USART0_Handler+0x3c>
	{
				
		if(pTxRead!=pTxWrite)
   80d10:	4a14      	ldr	r2, [pc, #80]	; (80d64 <USART0_Handler+0x6c>)
   80d12:	6853      	ldr	r3, [r2, #4]
   80d14:	6812      	ldr	r2, [r2, #0]
   80d16:	4293      	cmp	r3, r2
   80d18:	d01a      	beq.n	80d50 <USART0_Handler+0x58>
		{
			USART_SERIAL->US_THR = US_THR_TXCHR(*pTxRead++);
   80d1a:	1c5a      	adds	r2, r3, #1
   80d1c:	4911      	ldr	r1, [pc, #68]	; (80d64 <USART0_Handler+0x6c>)
   80d1e:	604a      	str	r2, [r1, #4]
   80d20:	7819      	ldrb	r1, [r3, #0]
   80d22:	4b0e      	ldr	r3, [pc, #56]	; (80d5c <USART0_Handler+0x64>)
   80d24:	61d9      	str	r1, [r3, #28]
			if(pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxRead = shellcomTxBuf;
   80d26:	4b10      	ldr	r3, [pc, #64]	; (80d68 <USART0_Handler+0x70>)
   80d28:	429a      	cmp	r2, r3
   80d2a:	d303      	bcc.n	80d34 <USART0_Handler+0x3c>
   80d2c:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80d30:	4b0c      	ldr	r3, [pc, #48]	; (80d64 <USART0_Handler+0x6c>)
   80d32:	605a      	str	r2, [r3, #4]
		else
		{
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
		}
	}
   80d34:	b003      	add	sp, #12
   80d36:	bd30      	pop	{r4, r5, pc}
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
   80d38:	4b08      	ldr	r3, [pc, #32]	; (80d5c <USART0_Handler+0x64>)
   80d3a:	699b      	ldr	r3, [r3, #24]
   80d3c:	2200      	movs	r2, #0
   80d3e:	9200      	str	r2, [sp, #0]
   80d40:	f3c3 0308 	ubfx	r3, r3, #0, #9
   80d44:	2201      	movs	r2, #1
   80d46:	4909      	ldr	r1, [pc, #36]	; (80d6c <USART0_Handler+0x74>)
   80d48:	2066      	movs	r0, #102	; 0x66
   80d4a:	4d09      	ldr	r5, [pc, #36]	; (80d70 <USART0_Handler+0x78>)
   80d4c:	47a8      	blx	r5
   80d4e:	e7dc      	b.n	80d0a <USART0_Handler+0x12>
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80d50:	2102      	movs	r1, #2
   80d52:	4802      	ldr	r0, [pc, #8]	; (80d5c <USART0_Handler+0x64>)
   80d54:	4b07      	ldr	r3, [pc, #28]	; (80d74 <USART0_Handler+0x7c>)
   80d56:	4798      	blx	r3
   80d58:	e7ec      	b.n	80d34 <USART0_Handler+0x3c>
   80d5a:	bf00      	nop
   80d5c:	40098000 	.word	0x40098000
   80d60:	000804b9 	.word	0x000804b9
   80d64:	200710f4 	.word	0x200710f4
   80d68:	200711fc 	.word	0x200711fc
   80d6c:	000805a1 	.word	0x000805a1
   80d70:	00080d79 	.word	0x00080d79
   80d74:	000804b5 	.word	0x000804b5

00080d78 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   80d78:	b40f      	push	{r0, r1, r2, r3}
   80d7a:	b5f0      	push	{r4, r5, r6, r7, lr}
   80d7c:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   80d7e:	9908      	ldr	r1, [sp, #32]
   80d80:	2964      	cmp	r1, #100	; 0x64
   80d82:	d024      	beq.n	80dce <Taskman+0x56>
   80d84:	d917      	bls.n	80db6 <Taskman+0x3e>
   80d86:	2966      	cmp	r1, #102	; 0x66
   80d88:	d067      	beq.n	80e5a <Taskman+0xe2>
   80d8a:	2967      	cmp	r1, #103	; 0x67
   80d8c:	f040 80c8 	bne.w	80f20 <Taskman+0x1a8>
#undef _delay
#undef k
		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   80d90:	4a66      	ldr	r2, [pc, #408]	; (80f2c <Taskman+0x1b4>)
   80d92:	6853      	ldr	r3, [r2, #4]
   80d94:	6812      	ldr	r2, [r2, #0]
   80d96:	4293      	cmp	r3, r2
   80d98:	d059      	beq.n	80e4e <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   80d9a:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   80d9c:	6858      	ldr	r0, [r3, #4]
   80d9e:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   80da0:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   80da2:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   80da4:	4c62      	ldr	r4, [pc, #392]	; (80f30 <Taskman+0x1b8>)
   80da6:	42a3      	cmp	r3, r4
   80da8:	f0c0 80a3 	bcc.w	80ef2 <Taskman+0x17a>
   80dac:	4c61      	ldr	r4, [pc, #388]	; (80f34 <Taskman+0x1bc>)
   80dae:	4b5f      	ldr	r3, [pc, #380]	; (80f2c <Taskman+0x1b4>)
   80db0:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   80db2:	4790      	blx	r2
   80db4:	e04b      	b.n	80e4e <Taskman+0xd6>
	switch(sc)
   80db6:	2901      	cmp	r1, #1
   80db8:	f040 80b2 	bne.w	80f20 <Taskman+0x1a8>
		}
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   80dbc:	2002      	movs	r0, #2
   80dbe:	4b5e      	ldr	r3, [pc, #376]	; (80f38 <Taskman+0x1c0>)
   80dc0:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80dc2:	2500      	movs	r5, #0
   80dc4:	9508      	str	r5, [sp, #32]
   80dc6:	4c5d      	ldr	r4, [pc, #372]	; (80f3c <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   80dc8:	462f      	mov	r7, r5
   80dca:	2666      	movs	r6, #102	; 0x66
   80dcc:	e099      	b.n	80f02 <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   80dce:	4b57      	ldr	r3, [pc, #348]	; (80f2c <Taskman+0x1b4>)
   80dd0:	4a58      	ldr	r2, [pc, #352]	; (80f34 <Taskman+0x1bc>)
   80dd2:	601a      	str	r2, [r3, #0]
   80dd4:	605a      	str	r2, [r3, #4]
   80dd6:	4b59      	ldr	r3, [pc, #356]	; (80f3c <Taskman+0x1c4>)
   80dd8:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   80ddc:	2200      	movs	r2, #0
   80dde:	60da      	str	r2, [r3, #12]
   80de0:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80de2:	428b      	cmp	r3, r1
   80de4:	d1fb      	bne.n	80dde <Taskman+0x66>
		base->PIO_PUDR = mask;
   80de6:	4b56      	ldr	r3, [pc, #344]	; (80f40 <Taskman+0x1c8>)
   80de8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   80dec:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_MDDR = mask;
   80dee:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   80df0:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   80df2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   80df6:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80df8:	4311      	orrs	r1, r2
   80dfa:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80dfc:	605a      	str	r2, [r3, #4]
   80dfe:	201b      	movs	r0, #27
   80e00:	4b50      	ldr	r3, [pc, #320]	; (80f44 <Taskman+0x1cc>)
   80e02:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   80e04:	4c50      	ldr	r4, [pc, #320]	; (80f48 <Taskman+0x1d0>)
   80e06:	4a51      	ldr	r2, [pc, #324]	; (80f4c <Taskman+0x1d4>)
   80e08:	2100      	movs	r1, #0
   80e0a:	4620      	mov	r0, r4
   80e0c:	4b50      	ldr	r3, [pc, #320]	; (80f50 <Taskman+0x1d8>)
   80e0e:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   80e10:	f44f 7224 	mov.w	r2, #656	; 0x290
   80e14:	2100      	movs	r1, #0
   80e16:	4620      	mov	r0, r4
   80e18:	4b4e      	ldr	r3, [pc, #312]	; (80f54 <Taskman+0x1dc>)
   80e1a:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   80e1c:	f240 12cb 	movw	r2, #459	; 0x1cb
   80e20:	2100      	movs	r1, #0
   80e22:	4620      	mov	r0, r4
   80e24:	4b4c      	ldr	r3, [pc, #304]	; (80f58 <Taskman+0x1e0>)
   80e26:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   80e28:	2100      	movs	r1, #0
   80e2a:	4620      	mov	r0, r4
   80e2c:	4b4b      	ldr	r3, [pc, #300]	; (80f5c <Taskman+0x1e4>)
   80e2e:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   80e30:	4b4b      	ldr	r3, [pc, #300]	; (80f60 <Taskman+0x1e8>)
   80e32:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80e36:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   80e3a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   80e3e:	2100      	movs	r1, #0
   80e40:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80e44:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   80e46:	2204      	movs	r2, #4
   80e48:	4620      	mov	r0, r4
   80e4a:	4b46      	ldr	r3, [pc, #280]	; (80f64 <Taskman+0x1ec>)
   80e4c:	4798      	blx	r3
 }
   80e4e:	2000      	movs	r0, #0
   80e50:	b003      	add	sp, #12
   80e52:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   80e56:	b004      	add	sp, #16
   80e58:	4770      	bx	lr
		cpu_irq_enter_critical();
   80e5a:	4b43      	ldr	r3, [pc, #268]	; (80f68 <Taskman+0x1f0>)
   80e5c:	4798      	blx	r3
		if(_delay)
   80e5e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   80e60:	b34d      	cbz	r5, 80eb6 <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   80e62:	2300      	movs	r3, #0
   80e64:	9308      	str	r3, [sp, #32]
   80e66:	4b35      	ldr	r3, [pc, #212]	; (80f3c <Taskman+0x1c4>)
   80e68:	68db      	ldr	r3, [r3, #12]
   80e6a:	b1ab      	cbz	r3, 80e98 <Taskman+0x120>
   80e6c:	2301      	movs	r3, #1
   80e6e:	9308      	str	r3, [sp, #32]
   80e70:	4a32      	ldr	r2, [pc, #200]	; (80f3c <Taskman+0x1c4>)
   80e72:	2000      	movs	r0, #0
   80e74:	461c      	mov	r4, r3
   80e76:	69d1      	ldr	r1, [r2, #28]
   80e78:	b159      	cbz	r1, 80e92 <Taskman+0x11a>
   80e7a:	3301      	adds	r3, #1
   80e7c:	3210      	adds	r2, #16
   80e7e:	4620      	mov	r0, r4
   80e80:	2b0a      	cmp	r3, #10
   80e82:	d1f8      	bne.n	80e76 <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   80e84:	4b39      	ldr	r3, [pc, #228]	; (80f6c <Taskman+0x1f4>)
   80e86:	681b      	ldr	r3, [r3, #0]
   80e88:	2100      	movs	r1, #0
   80e8a:	2016      	movs	r0, #22
   80e8c:	4798      	blx	r3
   80e8e:	230a      	movs	r3, #10
   80e90:	e002      	b.n	80e98 <Taskman+0x120>
   80e92:	b970      	cbnz	r0, 80eb2 <Taskman+0x13a>
   80e94:	2b0a      	cmp	r3, #10
   80e96:	d0f5      	beq.n	80e84 <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   80e98:	4928      	ldr	r1, [pc, #160]	; (80f3c <Taskman+0x1c4>)
   80e9a:	011b      	lsls	r3, r3, #4
   80e9c:	18ca      	adds	r2, r1, r3
   80e9e:	9809      	ldr	r0, [sp, #36]	; 0x24
   80ea0:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   80ea2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80ea4:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   80ea6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80ea8:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   80eaa:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   80eac:	4b30      	ldr	r3, [pc, #192]	; (80f70 <Taskman+0x1f8>)
   80eae:	4798      	blx	r3
		break;
   80eb0:	e7cd      	b.n	80e4e <Taskman+0xd6>
   80eb2:	9308      	str	r3, [sp, #32]
   80eb4:	e7ee      	b.n	80e94 <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   80eb6:	4b1d      	ldr	r3, [pc, #116]	; (80f2c <Taskman+0x1b4>)
   80eb8:	681a      	ldr	r2, [r3, #0]
   80eba:	9909      	ldr	r1, [sp, #36]	; 0x24
   80ebc:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   80ebe:	681b      	ldr	r3, [r3, #0]
   80ec0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80ec2:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   80ec4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   80ec6:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   80ec8:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   80eca:	4a19      	ldr	r2, [pc, #100]	; (80f30 <Taskman+0x1b8>)
   80ecc:	4293      	cmp	r3, r2
   80ece:	d20c      	bcs.n	80eea <Taskman+0x172>
			taskman.pPush++;
   80ed0:	4a16      	ldr	r2, [pc, #88]	; (80f2c <Taskman+0x1b4>)
   80ed2:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   80ed4:	4b15      	ldr	r3, [pc, #84]	; (80f2c <Taskman+0x1b4>)
   80ed6:	681a      	ldr	r2, [r3, #0]
   80ed8:	685b      	ldr	r3, [r3, #4]
   80eda:	429a      	cmp	r2, r3
   80edc:	d1e6      	bne.n	80eac <Taskman+0x134>
   80ede:	4b23      	ldr	r3, [pc, #140]	; (80f6c <Taskman+0x1f4>)
   80ee0:	681b      	ldr	r3, [r3, #0]
   80ee2:	2100      	movs	r1, #0
   80ee4:	2015      	movs	r0, #21
   80ee6:	4798      	blx	r3
   80ee8:	e7e0      	b.n	80eac <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   80eea:	4a12      	ldr	r2, [pc, #72]	; (80f34 <Taskman+0x1bc>)
   80eec:	4b0f      	ldr	r3, [pc, #60]	; (80f2c <Taskman+0x1b4>)
   80eee:	601a      	str	r2, [r3, #0]
   80ef0:	e7f0      	b.n	80ed4 <Taskman+0x15c>
			taskman.pPop++;
   80ef2:	4c0e      	ldr	r4, [pc, #56]	; (80f2c <Taskman+0x1b4>)
   80ef4:	6063      	str	r3, [r4, #4]
   80ef6:	e75c      	b.n	80db2 <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80ef8:	3501      	adds	r5, #1
   80efa:	9508      	str	r5, [sp, #32]
   80efc:	3410      	adds	r4, #16
   80efe:	2d0a      	cmp	r5, #10
   80f00:	d0a5      	beq.n	80e4e <Taskman+0xd6>
			if(dTasks[k].delay)
   80f02:	68e3      	ldr	r3, [r4, #12]
   80f04:	2b00      	cmp	r3, #0
   80f06:	d0f7      	beq.n	80ef8 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   80f08:	3b01      	subs	r3, #1
   80f0a:	60e3      	str	r3, [r4, #12]
   80f0c:	2b00      	cmp	r3, #0
   80f0e:	d1f3      	bne.n	80ef8 <Taskman+0x180>
					PushTask(
   80f10:	68a3      	ldr	r3, [r4, #8]
   80f12:	6862      	ldr	r2, [r4, #4]
   80f14:	6821      	ldr	r1, [r4, #0]
   80f16:	9700      	str	r7, [sp, #0]
   80f18:	4630      	mov	r0, r6
   80f1a:	f7ff ff2d 	bl	80d78 <Taskman>
   80f1e:	e7eb      	b.n	80ef8 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   80f20:	4b12      	ldr	r3, [pc, #72]	; (80f6c <Taskman+0x1f4>)
   80f22:	681b      	ldr	r3, [r3, #0]
   80f24:	200b      	movs	r0, #11
   80f26:	4798      	blx	r3
	return 0;
   80f28:	e791      	b.n	80e4e <Taskman+0xd6>
   80f2a:	bf00      	nop
   80f2c:	2007129c 	.word	0x2007129c
   80f30:	2007129c 	.word	0x2007129c
   80f34:	200711fc 	.word	0x200711fc
   80f38:	000812a7 	.word	0x000812a7
   80f3c:	200712a4 	.word	0x200712a4
   80f40:	400e1000 	.word	0x400e1000
   80f44:	000815bd 	.word	0x000815bd
   80f48:	40080000 	.word	0x40080000
   80f4c:	0009c003 	.word	0x0009c003
   80f50:	00080391 	.word	0x00080391
   80f54:	000803b9 	.word	0x000803b9
   80f58:	000803b1 	.word	0x000803b1
   80f5c:	000803a9 	.word	0x000803a9
   80f60:	e000e100 	.word	0xe000e100
   80f64:	000803c1 	.word	0x000803c1
   80f68:	000810ed 	.word	0x000810ed
   80f6c:	20070538 	.word	0x20070538
   80f70:	00081129 	.word	0x00081129

00080f74 <TC0_Handler>:
 {
   80f74:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   80f76:	2100      	movs	r1, #0
   80f78:	4803      	ldr	r0, [pc, #12]	; (80f88 <TC0_Handler+0x14>)
   80f7a:	4b04      	ldr	r3, [pc, #16]	; (80f8c <TC0_Handler+0x18>)
   80f7c:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   80f7e:	2001      	movs	r0, #1
   80f80:	4b03      	ldr	r3, [pc, #12]	; (80f90 <TC0_Handler+0x1c>)
   80f82:	4798      	blx	r3
   80f84:	bd08      	pop	{r3, pc}
   80f86:	bf00      	nop
   80f88:	40080000 	.word	0x40080000
   80f8c:	000803c9 	.word	0x000803c9
   80f90:	00080d79 	.word	0x00080d79

00080f94 <Appli>:
 const uint32_t flashSequApp[]={
	 100,500,100,500,100,2200,0
 };

uint32_t Appli(uint32_t sc,...)
{
   80f94:	b40f      	push	{r0, r1, r2, r3}
   80f96:	b510      	push	{r4, lr}
   80f98:	b082      	sub	sp, #8
	switch(sc)
   80f9a:	9904      	ldr	r1, [sp, #16]
   80f9c:	2964      	cmp	r1, #100	; 0x64
   80f9e:	d006      	beq.n	80fae <Appli+0x1a>
   80fa0:	2966      	cmp	r1, #102	; 0x66
   80fa2:	d017      	beq.n	80fd4 <Appli+0x40>
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
#undef k
		break;

	default:
		Error(ERR_APPLI_SWITHC_BAD_SC, sc);
   80fa4:	4b1a      	ldr	r3, [pc, #104]	; (81010 <Appli+0x7c>)
   80fa6:	681b      	ldr	r3, [r3, #0]
   80fa8:	200f      	movs	r0, #15
   80faa:	4798      	blx	r3
		break;
   80fac:	e00d      	b.n	80fca <Appli+0x36>
		gpio_configure_pin(PIO_PC23_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   80fae:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80fb2:	2057      	movs	r0, #87	; 0x57
   80fb4:	4b17      	ldr	r3, [pc, #92]	; (81014 <Appli+0x80>)
   80fb6:	4798      	blx	r3
		PushTask(Appli, APPLI_RUN, 0, 800);
   80fb8:	f44f 7348 	mov.w	r3, #800	; 0x320
   80fbc:	9300      	str	r3, [sp, #0]
   80fbe:	2300      	movs	r3, #0
   80fc0:	2266      	movs	r2, #102	; 0x66
   80fc2:	4915      	ldr	r1, [pc, #84]	; (81018 <Appli+0x84>)
   80fc4:	4610      	mov	r0, r2
   80fc6:	4c15      	ldr	r4, [pc, #84]	; (8101c <Appli+0x88>)
   80fc8:	47a0      	blx	r4
	}
   80fca:	b002      	add	sp, #8
   80fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80fd0:	b004      	add	sp, #16
   80fd2:	4770      	bx	lr
		k++; if(flashSequApp[k]==0) k=0;
   80fd4:	9c05      	ldr	r4, [sp, #20]
   80fd6:	3401      	adds	r4, #1
   80fd8:	9405      	str	r4, [sp, #20]
   80fda:	4b11      	ldr	r3, [pc, #68]	; (81020 <Appli+0x8c>)
   80fdc:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80fe0:	b133      	cbz	r3, 80ff0 <Appli+0x5c>
		if(k%2==0) gpio_set_pin_high(PIO_PC23_IDX);
   80fe2:	f014 0f01 	tst.w	r4, #1
   80fe6:	d004      	beq.n	80ff2 <Appli+0x5e>
		else gpio_set_pin_low(PIO_PC23_IDX);
   80fe8:	2057      	movs	r0, #87	; 0x57
   80fea:	4b0e      	ldr	r3, [pc, #56]	; (81024 <Appli+0x90>)
   80fec:	4798      	blx	r3
   80fee:	e003      	b.n	80ff8 <Appli+0x64>
		if(k%2==0) gpio_set_pin_high(PIO_PC23_IDX);
   80ff0:	2400      	movs	r4, #0
   80ff2:	2057      	movs	r0, #87	; 0x57
   80ff4:	4b0c      	ldr	r3, [pc, #48]	; (81028 <Appli+0x94>)
   80ff6:	4798      	blx	r3
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
   80ff8:	4b09      	ldr	r3, [pc, #36]	; (81020 <Appli+0x8c>)
   80ffa:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80ffe:	9300      	str	r3, [sp, #0]
   81000:	4623      	mov	r3, r4
   81002:	2266      	movs	r2, #102	; 0x66
   81004:	4904      	ldr	r1, [pc, #16]	; (81018 <Appli+0x84>)
   81006:	4610      	mov	r0, r2
   81008:	4c04      	ldr	r4, [pc, #16]	; (8101c <Appli+0x88>)
   8100a:	47a0      	blx	r4
		break;
   8100c:	e7dd      	b.n	80fca <Appli+0x36>
   8100e:	bf00      	nop
   81010:	20070538 	.word	0x20070538
   81014:	000812c9 	.word	0x000812c9
   81018:	00080f95 	.word	0x00080f95
   8101c:	00080d79 	.word	0x00080d79
   81020:	0008635c 	.word	0x0008635c
   81024:	0008128d 	.word	0x0008128d
   81028:	00081273 	.word	0x00081273

0008102c <main>:
void Prompt(uint32_t sc, uint32_t i);

char buf[256];

int main (void)
{
   8102c:	b508      	push	{r3, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   8102e:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   81030:	f3bf 8f5f 	dmb	sy
	/* Insert system clock initialization code here (sysclk_init()). */
		
	cpu_irq_disable();
   81034:	4c0d      	ldr	r4, [pc, #52]	; (8106c <main+0x40>)
   81036:	2300      	movs	r3, #0
   81038:	7023      	strb	r3, [r4, #0]
	sysclk_init();
   8103a:	4b0d      	ldr	r3, [pc, #52]	; (81070 <main+0x44>)
   8103c:	4798      	blx	r3
	board_init();
   8103e:	4b0d      	ldr	r3, [pc, #52]	; (81074 <main+0x48>)
   81040:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());
	//////////////////////////////////////////////////////////////////
	
	Taskman(TASKMAN_NEW);
   81042:	2064      	movs	r0, #100	; 0x64
   81044:	4b0c      	ldr	r3, [pc, #48]	; (81078 <main+0x4c>)
   81046:	4798      	blx	r3
	Shell(SHELL_NEW);
   81048:	2064      	movs	r0, #100	; 0x64
   8104a:	4b0c      	ldr	r3, [pc, #48]	; (8107c <main+0x50>)
   8104c:	4798      	blx	r3
	Putstr("\r\n\n\tATMEL ATSAM3U STARTED\r\n\n");
   8104e:	490c      	ldr	r1, [pc, #48]	; (81080 <main+0x54>)
   81050:	2067      	movs	r0, #103	; 0x67
   81052:	4b0c      	ldr	r3, [pc, #48]	; (81084 <main+0x58>)
   81054:	4798      	blx	r3


	//PushTask(Sablier, SABLIER_NEW, 0, 0);
	//PushTask(Prompt, 0, 0, 800);
	
	cpu_irq_enable();
   81056:	2301      	movs	r3, #1
   81058:	7023      	strb	r3, [r4, #0]
   8105a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8105e:	b662      	cpsie	i



	for(;;)
	{
		PopTask();
   81060:	2567      	movs	r5, #103	; 0x67
   81062:	4c05      	ldr	r4, [pc, #20]	; (81078 <main+0x4c>)
   81064:	4628      	mov	r0, r5
   81066:	47a0      	blx	r4
   81068:	e7fc      	b.n	81064 <main+0x38>
   8106a:	bf00      	nop
   8106c:	2007053c 	.word	0x2007053c
   81070:	00081089 	.word	0x00081089
   81074:	00081155 	.word	0x00081155
   81078:	00080d79 	.word	0x00080d79
   8107c:	000805a1 	.word	0x000805a1
   81080:	00086378 	.word	0x00086378
   81084:	00080b61 	.word	0x00080b61

00081088 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   81088:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8108a:	480e      	ldr	r0, [pc, #56]	; (810c4 <sysclk_init+0x3c>)
   8108c:	4b0e      	ldr	r3, [pc, #56]	; (810c8 <sysclk_init+0x40>)
   8108e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   81090:	213e      	movs	r1, #62	; 0x3e
   81092:	2000      	movs	r0, #0
   81094:	4b0d      	ldr	r3, [pc, #52]	; (810cc <sysclk_init+0x44>)
   81096:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   81098:	4c0d      	ldr	r4, [pc, #52]	; (810d0 <sysclk_init+0x48>)
   8109a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8109c:	2800      	cmp	r0, #0
   8109e:	d0fc      	beq.n	8109a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   810a0:	4b0c      	ldr	r3, [pc, #48]	; (810d4 <sysclk_init+0x4c>)
   810a2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   810a4:	4a0c      	ldr	r2, [pc, #48]	; (810d8 <sysclk_init+0x50>)
   810a6:	4b0d      	ldr	r3, [pc, #52]	; (810dc <sysclk_init+0x54>)
   810a8:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   810aa:	4c0d      	ldr	r4, [pc, #52]	; (810e0 <sysclk_init+0x58>)
   810ac:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   810ae:	2800      	cmp	r0, #0
   810b0:	d0fc      	beq.n	810ac <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   810b2:	2010      	movs	r0, #16
   810b4:	4b0b      	ldr	r3, [pc, #44]	; (810e4 <sysclk_init+0x5c>)
   810b6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   810b8:	4b0b      	ldr	r3, [pc, #44]	; (810e8 <sysclk_init+0x60>)
   810ba:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   810bc:	4801      	ldr	r0, [pc, #4]	; (810c4 <sysclk_init+0x3c>)
   810be:	4b02      	ldr	r3, [pc, #8]	; (810c8 <sysclk_init+0x40>)
   810c0:	4798      	blx	r3
   810c2:	bd10      	pop	{r4, pc}
   810c4:	0501bd00 	.word	0x0501bd00
   810c8:	200700b1 	.word	0x200700b1
   810cc:	00081539 	.word	0x00081539
   810d0:	0008158d 	.word	0x0008158d
   810d4:	0008159d 	.word	0x0008159d
   810d8:	200d3f01 	.word	0x200d3f01
   810dc:	400e0600 	.word	0x400e0600
   810e0:	000815ad 	.word	0x000815ad
   810e4:	000814d5 	.word	0x000814d5
   810e8:	000816ad 	.word	0x000816ad

000810ec <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   810ec:	4b0b      	ldr	r3, [pc, #44]	; (8111c <cpu_irq_enter_critical+0x30>)
   810ee:	681b      	ldr	r3, [r3, #0]
   810f0:	b92b      	cbnz	r3, 810fe <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   810f2:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   810f6:	b13b      	cbz	r3, 81108 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   810f8:	2200      	movs	r2, #0
   810fa:	4b09      	ldr	r3, [pc, #36]	; (81120 <cpu_irq_enter_critical+0x34>)
   810fc:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   810fe:	4a07      	ldr	r2, [pc, #28]	; (8111c <cpu_irq_enter_critical+0x30>)
   81100:	6813      	ldr	r3, [r2, #0]
   81102:	3301      	adds	r3, #1
   81104:	6013      	str	r3, [r2, #0]
   81106:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   81108:	b672      	cpsid	i
   8110a:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   8110e:	2200      	movs	r2, #0
   81110:	4b04      	ldr	r3, [pc, #16]	; (81124 <cpu_irq_enter_critical+0x38>)
   81112:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   81114:	2201      	movs	r2, #1
   81116:	4b02      	ldr	r3, [pc, #8]	; (81120 <cpu_irq_enter_critical+0x34>)
   81118:	701a      	strb	r2, [r3, #0]
   8111a:	e7f0      	b.n	810fe <cpu_irq_enter_critical+0x12>
   8111c:	20070f10 	.word	0x20070f10
   81120:	20070f14 	.word	0x20070f14
   81124:	2007053c 	.word	0x2007053c

00081128 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   81128:	4b07      	ldr	r3, [pc, #28]	; (81148 <cpu_irq_leave_critical+0x20>)
   8112a:	681a      	ldr	r2, [r3, #0]
   8112c:	3a01      	subs	r2, #1
   8112e:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   81130:	681b      	ldr	r3, [r3, #0]
   81132:	b943      	cbnz	r3, 81146 <cpu_irq_leave_critical+0x1e>
   81134:	4b05      	ldr	r3, [pc, #20]	; (8114c <cpu_irq_leave_critical+0x24>)
   81136:	781b      	ldrb	r3, [r3, #0]
   81138:	b12b      	cbz	r3, 81146 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   8113a:	2201      	movs	r2, #1
   8113c:	4b04      	ldr	r3, [pc, #16]	; (81150 <cpu_irq_leave_critical+0x28>)
   8113e:	701a      	strb	r2, [r3, #0]
   81140:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81144:	b662      	cpsie	i
   81146:	4770      	bx	lr
   81148:	20070f10 	.word	0x20070f10
   8114c:	20070f14 	.word	0x20070f14
   81150:	2007053c 	.word	0x2007053c

00081154 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   81154:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   81156:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8115a:	4b16      	ldr	r3, [pc, #88]	; (811b4 <board_init+0x60>)
   8115c:	605a      	str	r2, [r3, #4]
   8115e:	200b      	movs	r0, #11
   81160:	4c15      	ldr	r4, [pc, #84]	; (811b8 <board_init+0x64>)
   81162:	47a0      	blx	r4
   81164:	200c      	movs	r0, #12
   81166:	47a0      	blx	r4
   81168:	200d      	movs	r0, #13
   8116a:	47a0      	blx	r4
   8116c:	200e      	movs	r0, #14
   8116e:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   81170:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81174:	203b      	movs	r0, #59	; 0x3b
   81176:	4c11      	ldr	r4, [pc, #68]	; (811bc <board_init+0x68>)
   81178:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8117a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8117e:	2055      	movs	r0, #85	; 0x55
   81180:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   81182:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81186:	2056      	movs	r0, #86	; 0x56
   81188:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   8118a:	490d      	ldr	r1, [pc, #52]	; (811c0 <board_init+0x6c>)
   8118c:	2068      	movs	r0, #104	; 0x68
   8118e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   81190:	490c      	ldr	r1, [pc, #48]	; (811c4 <board_init+0x70>)
   81192:	205c      	movs	r0, #92	; 0x5c
   81194:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   81196:	4a0c      	ldr	r2, [pc, #48]	; (811c8 <board_init+0x74>)
   81198:	f44f 7140 	mov.w	r1, #768	; 0x300
   8119c:	480b      	ldr	r0, [pc, #44]	; (811cc <board_init+0x78>)
   8119e:	4b0c      	ldr	r3, [pc, #48]	; (811d0 <board_init+0x7c>)
   811a0:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   811a2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   811a6:	202b      	movs	r0, #43	; 0x2b
   811a8:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   811aa:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   811ae:	202a      	movs	r0, #42	; 0x2a
   811b0:	47a0      	blx	r4
   811b2:	bd10      	pop	{r4, pc}
   811b4:	400e1a50 	.word	0x400e1a50
   811b8:	000815bd 	.word	0x000815bd
   811bc:	000812c9 	.word	0x000812c9
   811c0:	28000079 	.word	0x28000079
   811c4:	28000001 	.word	0x28000001
   811c8:	08000001 	.word	0x08000001
   811cc:	400e0e00 	.word	0x400e0e00
   811d0:	00081399 	.word	0x00081399

000811d4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   811d4:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   811d6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   811da:	d016      	beq.n	8120a <pio_set_peripheral+0x36>
   811dc:	d80b      	bhi.n	811f6 <pio_set_peripheral+0x22>
   811de:	b149      	cbz	r1, 811f4 <pio_set_peripheral+0x20>
   811e0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   811e4:	d105      	bne.n	811f2 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   811e6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   811e8:	6f01      	ldr	r1, [r0, #112]	; 0x70
   811ea:	400b      	ands	r3, r1
   811ec:	ea23 0302 	bic.w	r3, r3, r2
   811f0:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   811f2:	6042      	str	r2, [r0, #4]
   811f4:	4770      	bx	lr
	switch (ul_type) {
   811f6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   811fa:	d0fb      	beq.n	811f4 <pio_set_peripheral+0x20>
   811fc:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   81200:	d0f8      	beq.n	811f4 <pio_set_peripheral+0x20>
   81202:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   81206:	d1f4      	bne.n	811f2 <pio_set_peripheral+0x1e>
   81208:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   8120a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   8120c:	4313      	orrs	r3, r2
   8120e:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   81210:	e7ef      	b.n	811f2 <pio_set_peripheral+0x1e>

00081212 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   81212:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   81214:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   81218:	bf14      	ite	ne
   8121a:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8121c:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8121e:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   81222:	bf14      	ite	ne
   81224:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   81226:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   81228:	f012 0f02 	tst.w	r2, #2
   8122c:	d107      	bne.n	8123e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8122e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   81232:	bf18      	it	ne
   81234:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   81238:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8123a:	6001      	str	r1, [r0, #0]
   8123c:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8123e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   81242:	e7f9      	b.n	81238 <pio_set_input+0x26>

00081244 <pio_set_output>:
{
   81244:	b410      	push	{r4}
   81246:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   81248:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   8124a:	b944      	cbnz	r4, 8125e <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   8124c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8124e:	b143      	cbz	r3, 81262 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   81250:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   81252:	b942      	cbnz	r2, 81266 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   81254:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   81256:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   81258:	6001      	str	r1, [r0, #0]
}
   8125a:	bc10      	pop	{r4}
   8125c:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   8125e:	6641      	str	r1, [r0, #100]	; 0x64
   81260:	e7f5      	b.n	8124e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   81262:	6541      	str	r1, [r0, #84]	; 0x54
   81264:	e7f5      	b.n	81252 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   81266:	6301      	str	r1, [r0, #48]	; 0x30
   81268:	e7f5      	b.n	81256 <pio_set_output+0x12>

0008126a <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8126a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8126c:	4770      	bx	lr

0008126e <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8126e:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   81270:	4770      	bx	lr

00081272 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81272:	0943      	lsrs	r3, r0, #5
   81274:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81278:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8127c:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   8127e:	f000 001f 	and.w	r0, r0, #31
   81282:	2201      	movs	r2, #1
   81284:	fa02 f000 	lsl.w	r0, r2, r0
   81288:	6318      	str	r0, [r3, #48]	; 0x30
   8128a:	4770      	bx	lr

0008128c <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8128c:	0943      	lsrs	r3, r0, #5
   8128e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81292:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81296:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81298:	f000 001f 	and.w	r0, r0, #31
   8129c:	2201      	movs	r2, #1
   8129e:	fa02 f000 	lsl.w	r0, r2, r0
   812a2:	6358      	str	r0, [r3, #52]	; 0x34
   812a4:	4770      	bx	lr

000812a6 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   812a6:	0943      	lsrs	r3, r0, #5
   812a8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   812ac:	f203 7307 	addw	r3, r3, #1799	; 0x707
   812b0:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   812b2:	6b99      	ldr	r1, [r3, #56]	; 0x38
   812b4:	f000 021f 	and.w	r2, r0, #31
   812b8:	2001      	movs	r0, #1
   812ba:	4090      	lsls	r0, r2
   812bc:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   812be:	bf14      	ite	ne
   812c0:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   812c2:	6318      	streq	r0, [r3, #48]	; 0x30
   812c4:	4770      	bx	lr
	...

000812c8 <pio_configure_pin>:
{
   812c8:	b570      	push	{r4, r5, r6, lr}
   812ca:	b082      	sub	sp, #8
   812cc:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   812ce:	0943      	lsrs	r3, r0, #5
   812d0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   812d4:	f203 7307 	addw	r3, r3, #1799	; 0x707
   812d8:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   812da:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   812de:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   812e2:	d031      	beq.n	81348 <pio_configure_pin+0x80>
   812e4:	d816      	bhi.n	81314 <pio_configure_pin+0x4c>
   812e6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   812ea:	d01b      	beq.n	81324 <pio_configure_pin+0x5c>
   812ec:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   812f0:	d116      	bne.n	81320 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   812f2:	f000 001f 	and.w	r0, r0, #31
   812f6:	2601      	movs	r6, #1
   812f8:	4086      	lsls	r6, r0
   812fa:	4632      	mov	r2, r6
   812fc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81300:	4620      	mov	r0, r4
   81302:	4b22      	ldr	r3, [pc, #136]	; (8138c <pio_configure_pin+0xc4>)
   81304:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81306:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8130a:	bf14      	ite	ne
   8130c:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8130e:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81310:	2001      	movs	r0, #1
   81312:	e017      	b.n	81344 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   81314:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   81318:	d021      	beq.n	8135e <pio_configure_pin+0x96>
   8131a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   8131e:	d01e      	beq.n	8135e <pio_configure_pin+0x96>
		return 0;
   81320:	2000      	movs	r0, #0
   81322:	e00f      	b.n	81344 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   81324:	f000 001f 	and.w	r0, r0, #31
   81328:	2601      	movs	r6, #1
   8132a:	4086      	lsls	r6, r0
   8132c:	4632      	mov	r2, r6
   8132e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81332:	4620      	mov	r0, r4
   81334:	4b15      	ldr	r3, [pc, #84]	; (8138c <pio_configure_pin+0xc4>)
   81336:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81338:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8133c:	bf14      	ite	ne
   8133e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81340:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81342:	2001      	movs	r0, #1
}
   81344:	b002      	add	sp, #8
   81346:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   81348:	f000 011f 	and.w	r1, r0, #31
   8134c:	2601      	movs	r6, #1
   8134e:	462a      	mov	r2, r5
   81350:	fa06 f101 	lsl.w	r1, r6, r1
   81354:	4620      	mov	r0, r4
   81356:	4b0e      	ldr	r3, [pc, #56]	; (81390 <pio_configure_pin+0xc8>)
   81358:	4798      	blx	r3
	return 1;
   8135a:	4630      	mov	r0, r6
		break;
   8135c:	e7f2      	b.n	81344 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8135e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   81362:	f000 011f 	and.w	r1, r0, #31
   81366:	2601      	movs	r6, #1
   81368:	ea05 0306 	and.w	r3, r5, r6
   8136c:	9300      	str	r3, [sp, #0]
   8136e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   81372:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81376:	bf14      	ite	ne
   81378:	2200      	movne	r2, #0
   8137a:	2201      	moveq	r2, #1
   8137c:	fa06 f101 	lsl.w	r1, r6, r1
   81380:	4620      	mov	r0, r4
   81382:	4c04      	ldr	r4, [pc, #16]	; (81394 <pio_configure_pin+0xcc>)
   81384:	47a0      	blx	r4
	return 1;
   81386:	4630      	mov	r0, r6
		break;
   81388:	e7dc      	b.n	81344 <pio_configure_pin+0x7c>
   8138a:	bf00      	nop
   8138c:	000811d5 	.word	0x000811d5
   81390:	00081213 	.word	0x00081213
   81394:	00081245 	.word	0x00081245

00081398 <pio_configure_pin_group>:
{
   81398:	b570      	push	{r4, r5, r6, lr}
   8139a:	b082      	sub	sp, #8
   8139c:	4605      	mov	r5, r0
   8139e:	460e      	mov	r6, r1
   813a0:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   813a2:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   813a6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   813aa:	d027      	beq.n	813fc <pio_configure_pin_group+0x64>
   813ac:	d811      	bhi.n	813d2 <pio_configure_pin_group+0x3a>
   813ae:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   813b2:	d016      	beq.n	813e2 <pio_configure_pin_group+0x4a>
   813b4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   813b8:	d111      	bne.n	813de <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   813ba:	460a      	mov	r2, r1
   813bc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   813c0:	4b19      	ldr	r3, [pc, #100]	; (81428 <pio_configure_pin_group+0x90>)
   813c2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   813c4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   813c8:	bf14      	ite	ne
   813ca:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   813cc:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   813ce:	2001      	movs	r0, #1
   813d0:	e012      	b.n	813f8 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   813d2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   813d6:	d015      	beq.n	81404 <pio_configure_pin_group+0x6c>
   813d8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   813dc:	d012      	beq.n	81404 <pio_configure_pin_group+0x6c>
		return 0;
   813de:	2000      	movs	r0, #0
   813e0:	e00a      	b.n	813f8 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   813e2:	460a      	mov	r2, r1
   813e4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   813e8:	4b0f      	ldr	r3, [pc, #60]	; (81428 <pio_configure_pin_group+0x90>)
   813ea:	4798      	blx	r3
	if (ul_pull_up_enable) {
   813ec:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   813f0:	bf14      	ite	ne
   813f2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   813f4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   813f6:	2001      	movs	r0, #1
}
   813f8:	b002      	add	sp, #8
   813fa:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   813fc:	4b0b      	ldr	r3, [pc, #44]	; (8142c <pio_configure_pin_group+0x94>)
   813fe:	4798      	blx	r3
	return 1;
   81400:	2001      	movs	r0, #1
		break;
   81402:	e7f9      	b.n	813f8 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   81404:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   81408:	f004 0301 	and.w	r3, r4, #1
   8140c:	9300      	str	r3, [sp, #0]
   8140e:	f3c4 0380 	ubfx	r3, r4, #2, #1
   81412:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   81416:	bf14      	ite	ne
   81418:	2200      	movne	r2, #0
   8141a:	2201      	moveq	r2, #1
   8141c:	4631      	mov	r1, r6
   8141e:	4628      	mov	r0, r5
   81420:	4c03      	ldr	r4, [pc, #12]	; (81430 <pio_configure_pin_group+0x98>)
   81422:	47a0      	blx	r4
	return 1;
   81424:	2001      	movs	r0, #1
		break;
   81426:	e7e7      	b.n	813f8 <pio_configure_pin_group+0x60>
   81428:	000811d5 	.word	0x000811d5
   8142c:	00081213 	.word	0x00081213
   81430:	00081245 	.word	0x00081245

00081434 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   81434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81438:	4604      	mov	r4, r0
   8143a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   8143c:	4b0e      	ldr	r3, [pc, #56]	; (81478 <pio_handler_process+0x44>)
   8143e:	4798      	blx	r3
   81440:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   81442:	4620      	mov	r0, r4
   81444:	4b0d      	ldr	r3, [pc, #52]	; (8147c <pio_handler_process+0x48>)
   81446:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   81448:	4005      	ands	r5, r0
   8144a:	d013      	beq.n	81474 <pio_handler_process+0x40>
   8144c:	4c0c      	ldr	r4, [pc, #48]	; (81480 <pio_handler_process+0x4c>)
   8144e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   81452:	e003      	b.n	8145c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   81454:	42b4      	cmp	r4, r6
   81456:	d00d      	beq.n	81474 <pio_handler_process+0x40>
   81458:	3410      	adds	r4, #16
		while (status != 0) {
   8145a:	b15d      	cbz	r5, 81474 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   8145c:	6820      	ldr	r0, [r4, #0]
   8145e:	4540      	cmp	r0, r8
   81460:	d1f8      	bne.n	81454 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81462:	6861      	ldr	r1, [r4, #4]
   81464:	4229      	tst	r1, r5
   81466:	d0f5      	beq.n	81454 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81468:	68e3      	ldr	r3, [r4, #12]
   8146a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8146c:	6863      	ldr	r3, [r4, #4]
   8146e:	ea25 0503 	bic.w	r5, r5, r3
   81472:	e7ef      	b.n	81454 <pio_handler_process+0x20>
   81474:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81478:	0008126b 	.word	0x0008126b
   8147c:	0008126f 	.word	0x0008126f
   81480:	20070f18 	.word	0x20070f18

00081484 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   81484:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   81486:	210b      	movs	r1, #11
   81488:	4801      	ldr	r0, [pc, #4]	; (81490 <PIOA_Handler+0xc>)
   8148a:	4b02      	ldr	r3, [pc, #8]	; (81494 <PIOA_Handler+0x10>)
   8148c:	4798      	blx	r3
   8148e:	bd08      	pop	{r3, pc}
   81490:	400e0e00 	.word	0x400e0e00
   81494:	00081435 	.word	0x00081435

00081498 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   81498:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   8149a:	210c      	movs	r1, #12
   8149c:	4801      	ldr	r0, [pc, #4]	; (814a4 <PIOB_Handler+0xc>)
   8149e:	4b02      	ldr	r3, [pc, #8]	; (814a8 <PIOB_Handler+0x10>)
   814a0:	4798      	blx	r3
   814a2:	bd08      	pop	{r3, pc}
   814a4:	400e1000 	.word	0x400e1000
   814a8:	00081435 	.word	0x00081435

000814ac <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   814ac:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   814ae:	210d      	movs	r1, #13
   814b0:	4801      	ldr	r0, [pc, #4]	; (814b8 <PIOC_Handler+0xc>)
   814b2:	4b02      	ldr	r3, [pc, #8]	; (814bc <PIOC_Handler+0x10>)
   814b4:	4798      	blx	r3
   814b6:	bd08      	pop	{r3, pc}
   814b8:	400e1200 	.word	0x400e1200
   814bc:	00081435 	.word	0x00081435

000814c0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   814c0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   814c2:	210e      	movs	r1, #14
   814c4:	4801      	ldr	r0, [pc, #4]	; (814cc <PIOD_Handler+0xc>)
   814c6:	4b02      	ldr	r3, [pc, #8]	; (814d0 <PIOD_Handler+0x10>)
   814c8:	4798      	blx	r3
   814ca:	bd08      	pop	{r3, pc}
   814cc:	400e1400 	.word	0x400e1400
   814d0:	00081435 	.word	0x00081435

000814d4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   814d4:	4a17      	ldr	r2, [pc, #92]	; (81534 <pmc_switch_mck_to_pllack+0x60>)
   814d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
   814d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   814dc:	4318      	orrs	r0, r3
   814de:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   814e0:	6e93      	ldr	r3, [r2, #104]	; 0x68
   814e2:	f013 0f08 	tst.w	r3, #8
   814e6:	d10a      	bne.n	814fe <pmc_switch_mck_to_pllack+0x2a>
   814e8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   814ec:	4911      	ldr	r1, [pc, #68]	; (81534 <pmc_switch_mck_to_pllack+0x60>)
   814ee:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   814f0:	f012 0f08 	tst.w	r2, #8
   814f4:	d103      	bne.n	814fe <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   814f6:	3b01      	subs	r3, #1
   814f8:	d1f9      	bne.n	814ee <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   814fa:	2001      	movs	r0, #1
   814fc:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   814fe:	4a0d      	ldr	r2, [pc, #52]	; (81534 <pmc_switch_mck_to_pllack+0x60>)
   81500:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81502:	f023 0303 	bic.w	r3, r3, #3
   81506:	f043 0302 	orr.w	r3, r3, #2
   8150a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8150c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8150e:	f013 0f08 	tst.w	r3, #8
   81512:	d10a      	bne.n	8152a <pmc_switch_mck_to_pllack+0x56>
   81514:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81518:	4906      	ldr	r1, [pc, #24]	; (81534 <pmc_switch_mck_to_pllack+0x60>)
   8151a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8151c:	f012 0f08 	tst.w	r2, #8
   81520:	d105      	bne.n	8152e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81522:	3b01      	subs	r3, #1
   81524:	d1f9      	bne.n	8151a <pmc_switch_mck_to_pllack+0x46>
			return 1;
   81526:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81528:	4770      	bx	lr
	return 0;
   8152a:	2000      	movs	r0, #0
   8152c:	4770      	bx	lr
   8152e:	2000      	movs	r0, #0
   81530:	4770      	bx	lr
   81532:	bf00      	nop
   81534:	400e0600 	.word	0x400e0600

00081538 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81538:	b9c8      	cbnz	r0, 8156e <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8153a:	4a11      	ldr	r2, [pc, #68]	; (81580 <pmc_switch_mainck_to_xtal+0x48>)
   8153c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   8153e:	0209      	lsls	r1, r1, #8
   81540:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81542:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   81546:	f023 0303 	bic.w	r3, r3, #3
   8154a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8154e:	f043 0301 	orr.w	r3, r3, #1
   81552:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81554:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   81556:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81558:	f013 0f01 	tst.w	r3, #1
   8155c:	d0fb      	beq.n	81556 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8155e:	4a08      	ldr	r2, [pc, #32]	; (81580 <pmc_switch_mainck_to_xtal+0x48>)
   81560:	6a13      	ldr	r3, [r2, #32]
   81562:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   81566:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8156a:	6213      	str	r3, [r2, #32]
   8156c:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8156e:	4904      	ldr	r1, [pc, #16]	; (81580 <pmc_switch_mainck_to_xtal+0x48>)
   81570:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   81572:	4a04      	ldr	r2, [pc, #16]	; (81584 <pmc_switch_mainck_to_xtal+0x4c>)
   81574:	401a      	ands	r2, r3
   81576:	4b04      	ldr	r3, [pc, #16]	; (81588 <pmc_switch_mainck_to_xtal+0x50>)
   81578:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8157a:	620b      	str	r3, [r1, #32]
   8157c:	4770      	bx	lr
   8157e:	bf00      	nop
   81580:	400e0600 	.word	0x400e0600
   81584:	fec8fffc 	.word	0xfec8fffc
   81588:	01370002 	.word	0x01370002

0008158c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   8158c:	4b02      	ldr	r3, [pc, #8]	; (81598 <pmc_osc_is_ready_mainck+0xc>)
   8158e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81590:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   81594:	4770      	bx	lr
   81596:	bf00      	nop
   81598:	400e0600 	.word	0x400e0600

0008159c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   8159c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   815a0:	4b01      	ldr	r3, [pc, #4]	; (815a8 <pmc_disable_pllack+0xc>)
   815a2:	629a      	str	r2, [r3, #40]	; 0x28
   815a4:	4770      	bx	lr
   815a6:	bf00      	nop
   815a8:	400e0600 	.word	0x400e0600

000815ac <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   815ac:	4b02      	ldr	r3, [pc, #8]	; (815b8 <pmc_is_locked_pllack+0xc>)
   815ae:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   815b0:	f000 0002 	and.w	r0, r0, #2
   815b4:	4770      	bx	lr
   815b6:	bf00      	nop
   815b8:	400e0600 	.word	0x400e0600

000815bc <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   815bc:	282c      	cmp	r0, #44	; 0x2c
   815be:	d81e      	bhi.n	815fe <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   815c0:	281f      	cmp	r0, #31
   815c2:	d80c      	bhi.n	815de <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   815c4:	4b11      	ldr	r3, [pc, #68]	; (8160c <pmc_enable_periph_clk+0x50>)
   815c6:	699a      	ldr	r2, [r3, #24]
   815c8:	2301      	movs	r3, #1
   815ca:	4083      	lsls	r3, r0
   815cc:	4393      	bics	r3, r2
   815ce:	d018      	beq.n	81602 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   815d0:	2301      	movs	r3, #1
   815d2:	fa03 f000 	lsl.w	r0, r3, r0
   815d6:	4b0d      	ldr	r3, [pc, #52]	; (8160c <pmc_enable_periph_clk+0x50>)
   815d8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   815da:	2000      	movs	r0, #0
   815dc:	4770      	bx	lr
		ul_id -= 32;
   815de:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   815e0:	4b0a      	ldr	r3, [pc, #40]	; (8160c <pmc_enable_periph_clk+0x50>)
   815e2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   815e6:	2301      	movs	r3, #1
   815e8:	4083      	lsls	r3, r0
   815ea:	4393      	bics	r3, r2
   815ec:	d00b      	beq.n	81606 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   815ee:	2301      	movs	r3, #1
   815f0:	fa03 f000 	lsl.w	r0, r3, r0
   815f4:	4b05      	ldr	r3, [pc, #20]	; (8160c <pmc_enable_periph_clk+0x50>)
   815f6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   815fa:	2000      	movs	r0, #0
   815fc:	4770      	bx	lr
		return 1;
   815fe:	2001      	movs	r0, #1
   81600:	4770      	bx	lr
	return 0;
   81602:	2000      	movs	r0, #0
   81604:	4770      	bx	lr
   81606:	2000      	movs	r0, #0
}
   81608:	4770      	bx	lr
   8160a:	bf00      	nop
   8160c:	400e0600 	.word	0x400e0600

00081610 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81610:	e7fe      	b.n	81610 <Dummy_Handler>
	...

00081614 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   81614:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   81616:	4b1c      	ldr	r3, [pc, #112]	; (81688 <Reset_Handler+0x74>)
   81618:	4a1c      	ldr	r2, [pc, #112]	; (8168c <Reset_Handler+0x78>)
   8161a:	429a      	cmp	r2, r3
   8161c:	d010      	beq.n	81640 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   8161e:	4b1c      	ldr	r3, [pc, #112]	; (81690 <Reset_Handler+0x7c>)
   81620:	4a19      	ldr	r2, [pc, #100]	; (81688 <Reset_Handler+0x74>)
   81622:	429a      	cmp	r2, r3
   81624:	d20c      	bcs.n	81640 <Reset_Handler+0x2c>
   81626:	3b01      	subs	r3, #1
   81628:	1a9b      	subs	r3, r3, r2
   8162a:	f023 0303 	bic.w	r3, r3, #3
   8162e:	3304      	adds	r3, #4
   81630:	4413      	add	r3, r2
   81632:	4916      	ldr	r1, [pc, #88]	; (8168c <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   81634:	f851 0b04 	ldr.w	r0, [r1], #4
   81638:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   8163c:	429a      	cmp	r2, r3
   8163e:	d1f9      	bne.n	81634 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81640:	4b14      	ldr	r3, [pc, #80]	; (81694 <Reset_Handler+0x80>)
   81642:	4a15      	ldr	r2, [pc, #84]	; (81698 <Reset_Handler+0x84>)
   81644:	429a      	cmp	r2, r3
   81646:	d20a      	bcs.n	8165e <Reset_Handler+0x4a>
   81648:	3b01      	subs	r3, #1
   8164a:	1a9b      	subs	r3, r3, r2
   8164c:	f023 0303 	bic.w	r3, r3, #3
   81650:	3304      	adds	r3, #4
   81652:	4413      	add	r3, r2
		*pDest++ = 0;
   81654:	2100      	movs	r1, #0
   81656:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   8165a:	4293      	cmp	r3, r2
   8165c:	d1fb      	bne.n	81656 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8165e:	4b0f      	ldr	r3, [pc, #60]	; (8169c <Reset_Handler+0x88>)
   81660:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   81664:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81668:	490d      	ldr	r1, [pc, #52]	; (816a0 <Reset_Handler+0x8c>)
   8166a:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   8166c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81670:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   81674:	d203      	bcs.n	8167e <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   81676:	688b      	ldr	r3, [r1, #8]
   81678:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   8167c:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   8167e:	4b09      	ldr	r3, [pc, #36]	; (816a4 <Reset_Handler+0x90>)
   81680:	4798      	blx	r3

	/* Branch to main function */
	main();
   81682:	4b09      	ldr	r3, [pc, #36]	; (816a8 <Reset_Handler+0x94>)
   81684:	4798      	blx	r3
   81686:	e7fe      	b.n	81686 <Reset_Handler+0x72>
   81688:	20070000 	.word	0x20070000
   8168c:	0008664c 	.word	0x0008664c
   81690:	20070ef0 	.word	0x20070ef0
   81694:	2007146c 	.word	0x2007146c
   81698:	20070ef0 	.word	0x20070ef0
   8169c:	00080000 	.word	0x00080000
   816a0:	e000ed00 	.word	0xe000ed00
   816a4:	00081805 	.word	0x00081805
   816a8:	0008102d 	.word	0x0008102d

000816ac <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   816ac:	4b3d      	ldr	r3, [pc, #244]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   816ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   816b0:	f003 0303 	and.w	r3, r3, #3
   816b4:	2b03      	cmp	r3, #3
   816b6:	d80e      	bhi.n	816d6 <SystemCoreClockUpdate+0x2a>
   816b8:	e8df f003 	tbb	[pc, r3]
   816bc:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   816c0:	4b39      	ldr	r3, [pc, #228]	; (817a8 <SystemCoreClockUpdate+0xfc>)
   816c2:	695b      	ldr	r3, [r3, #20]
   816c4:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   816c8:	bf14      	ite	ne
   816ca:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   816ce:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   816d2:	4b36      	ldr	r3, [pc, #216]	; (817ac <SystemCoreClockUpdate+0x100>)
   816d4:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   816d6:	4b33      	ldr	r3, [pc, #204]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   816d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   816da:	f003 0370 	and.w	r3, r3, #112	; 0x70
   816de:	2b70      	cmp	r3, #112	; 0x70
   816e0:	d057      	beq.n	81792 <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   816e2:	4b30      	ldr	r3, [pc, #192]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   816e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   816e6:	4931      	ldr	r1, [pc, #196]	; (817ac <SystemCoreClockUpdate+0x100>)
   816e8:	f3c2 1202 	ubfx	r2, r2, #4, #3
   816ec:	680b      	ldr	r3, [r1, #0]
   816ee:	40d3      	lsrs	r3, r2
   816f0:	600b      	str	r3, [r1, #0]
   816f2:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   816f4:	4b2b      	ldr	r3, [pc, #172]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   816f6:	6a1b      	ldr	r3, [r3, #32]
   816f8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   816fc:	d003      	beq.n	81706 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   816fe:	4a2c      	ldr	r2, [pc, #176]	; (817b0 <SystemCoreClockUpdate+0x104>)
   81700:	4b2a      	ldr	r3, [pc, #168]	; (817ac <SystemCoreClockUpdate+0x100>)
   81702:	601a      	str	r2, [r3, #0]
   81704:	e7e7      	b.n	816d6 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81706:	4a2b      	ldr	r2, [pc, #172]	; (817b4 <SystemCoreClockUpdate+0x108>)
   81708:	4b28      	ldr	r3, [pc, #160]	; (817ac <SystemCoreClockUpdate+0x100>)
   8170a:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8170c:	4b25      	ldr	r3, [pc, #148]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   8170e:	6a1b      	ldr	r3, [r3, #32]
   81710:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81714:	2b10      	cmp	r3, #16
   81716:	d005      	beq.n	81724 <SystemCoreClockUpdate+0x78>
   81718:	2b20      	cmp	r3, #32
   8171a:	d1dc      	bne.n	816d6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   8171c:	4a24      	ldr	r2, [pc, #144]	; (817b0 <SystemCoreClockUpdate+0x104>)
   8171e:	4b23      	ldr	r3, [pc, #140]	; (817ac <SystemCoreClockUpdate+0x100>)
   81720:	601a      	str	r2, [r3, #0]
				break;
   81722:	e7d8      	b.n	816d6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   81724:	4a24      	ldr	r2, [pc, #144]	; (817b8 <SystemCoreClockUpdate+0x10c>)
   81726:	4b21      	ldr	r3, [pc, #132]	; (817ac <SystemCoreClockUpdate+0x100>)
   81728:	601a      	str	r2, [r3, #0]
				break;
   8172a:	e7d4      	b.n	816d6 <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8172c:	4b1d      	ldr	r3, [pc, #116]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   8172e:	6a1b      	ldr	r3, [r3, #32]
   81730:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81734:	d00c      	beq.n	81750 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81736:	4a1e      	ldr	r2, [pc, #120]	; (817b0 <SystemCoreClockUpdate+0x104>)
   81738:	4b1c      	ldr	r3, [pc, #112]	; (817ac <SystemCoreClockUpdate+0x100>)
   8173a:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   8173c:	4b19      	ldr	r3, [pc, #100]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   8173e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81740:	f003 0303 	and.w	r3, r3, #3
   81744:	2b02      	cmp	r3, #2
   81746:	d016      	beq.n	81776 <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   81748:	4a1c      	ldr	r2, [pc, #112]	; (817bc <SystemCoreClockUpdate+0x110>)
   8174a:	4b18      	ldr	r3, [pc, #96]	; (817ac <SystemCoreClockUpdate+0x100>)
   8174c:	601a      	str	r2, [r3, #0]
   8174e:	e7c2      	b.n	816d6 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81750:	4a18      	ldr	r2, [pc, #96]	; (817b4 <SystemCoreClockUpdate+0x108>)
   81752:	4b16      	ldr	r3, [pc, #88]	; (817ac <SystemCoreClockUpdate+0x100>)
   81754:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81756:	4b13      	ldr	r3, [pc, #76]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   81758:	6a1b      	ldr	r3, [r3, #32]
   8175a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8175e:	2b10      	cmp	r3, #16
   81760:	d005      	beq.n	8176e <SystemCoreClockUpdate+0xc2>
   81762:	2b20      	cmp	r3, #32
   81764:	d1ea      	bne.n	8173c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   81766:	4a12      	ldr	r2, [pc, #72]	; (817b0 <SystemCoreClockUpdate+0x104>)
   81768:	4b10      	ldr	r3, [pc, #64]	; (817ac <SystemCoreClockUpdate+0x100>)
   8176a:	601a      	str	r2, [r3, #0]
				break;
   8176c:	e7e6      	b.n	8173c <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   8176e:	4a12      	ldr	r2, [pc, #72]	; (817b8 <SystemCoreClockUpdate+0x10c>)
   81770:	4b0e      	ldr	r3, [pc, #56]	; (817ac <SystemCoreClockUpdate+0x100>)
   81772:	601a      	str	r2, [r3, #0]
				break;
   81774:	e7e2      	b.n	8173c <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81776:	4a0b      	ldr	r2, [pc, #44]	; (817a4 <SystemCoreClockUpdate+0xf8>)
   81778:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   8177a:	6a92      	ldr	r2, [r2, #40]	; 0x28
   8177c:	480b      	ldr	r0, [pc, #44]	; (817ac <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8177e:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81782:	6803      	ldr	r3, [r0, #0]
   81784:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81788:	b2d2      	uxtb	r2, r2
   8178a:	fbb3 f3f2 	udiv	r3, r3, r2
   8178e:	6003      	str	r3, [r0, #0]
   81790:	e7a1      	b.n	816d6 <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81792:	4a06      	ldr	r2, [pc, #24]	; (817ac <SystemCoreClockUpdate+0x100>)
   81794:	6813      	ldr	r3, [r2, #0]
   81796:	490a      	ldr	r1, [pc, #40]	; (817c0 <SystemCoreClockUpdate+0x114>)
   81798:	fba1 1303 	umull	r1, r3, r1, r3
   8179c:	085b      	lsrs	r3, r3, #1
   8179e:	6013      	str	r3, [r2, #0]
   817a0:	4770      	bx	lr
   817a2:	bf00      	nop
   817a4:	400e0600 	.word	0x400e0600
   817a8:	400e1a10 	.word	0x400e1a10
   817ac:	20070540 	.word	0x20070540
   817b0:	00b71b00 	.word	0x00b71b00
   817b4:	003d0900 	.word	0x003d0900
   817b8:	007a1200 	.word	0x007a1200
   817bc:	0e4e1c00 	.word	0x0e4e1c00
   817c0:	aaaaaaab 	.word	0xaaaaaaab

000817c4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   817c4:	4b0a      	ldr	r3, [pc, #40]	; (817f0 <_sbrk+0x2c>)
   817c6:	681b      	ldr	r3, [r3, #0]
   817c8:	b153      	cbz	r3, 817e0 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   817ca:	4b09      	ldr	r3, [pc, #36]	; (817f0 <_sbrk+0x2c>)
   817cc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   817ce:	181a      	adds	r2, r3, r0
   817d0:	4908      	ldr	r1, [pc, #32]	; (817f4 <_sbrk+0x30>)
   817d2:	4291      	cmp	r1, r2
   817d4:	db08      	blt.n	817e8 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   817d6:	4610      	mov	r0, r2
   817d8:	4a05      	ldr	r2, [pc, #20]	; (817f0 <_sbrk+0x2c>)
   817da:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   817dc:	4618      	mov	r0, r3
   817de:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   817e0:	4a05      	ldr	r2, [pc, #20]	; (817f8 <_sbrk+0x34>)
   817e2:	4b03      	ldr	r3, [pc, #12]	; (817f0 <_sbrk+0x2c>)
   817e4:	601a      	str	r2, [r3, #0]
   817e6:	e7f0      	b.n	817ca <_sbrk+0x6>
		return (caddr_t) -1;	
   817e8:	f04f 30ff 	mov.w	r0, #4294967295
}
   817ec:	4770      	bx	lr
   817ee:	bf00      	nop
   817f0:	20070f88 	.word	0x20070f88
   817f4:	20087ffc 	.word	0x20087ffc
   817f8:	20073470 	.word	0x20073470

000817fc <atoi>:
   817fc:	220a      	movs	r2, #10
   817fe:	2100      	movs	r1, #0
   81800:	f000 b998 	b.w	81b34 <strtol>

00081804 <__libc_init_array>:
   81804:	b570      	push	{r4, r5, r6, lr}
   81806:	4e0f      	ldr	r6, [pc, #60]	; (81844 <__libc_init_array+0x40>)
   81808:	4d0f      	ldr	r5, [pc, #60]	; (81848 <__libc_init_array+0x44>)
   8180a:	1b76      	subs	r6, r6, r5
   8180c:	10b6      	asrs	r6, r6, #2
   8180e:	bf18      	it	ne
   81810:	2400      	movne	r4, #0
   81812:	d005      	beq.n	81820 <__libc_init_array+0x1c>
   81814:	3401      	adds	r4, #1
   81816:	f855 3b04 	ldr.w	r3, [r5], #4
   8181a:	4798      	blx	r3
   8181c:	42a6      	cmp	r6, r4
   8181e:	d1f9      	bne.n	81814 <__libc_init_array+0x10>
   81820:	4e0a      	ldr	r6, [pc, #40]	; (8184c <__libc_init_array+0x48>)
   81822:	4d0b      	ldr	r5, [pc, #44]	; (81850 <__libc_init_array+0x4c>)
   81824:	f004 fefc 	bl	86620 <_init>
   81828:	1b76      	subs	r6, r6, r5
   8182a:	10b6      	asrs	r6, r6, #2
   8182c:	bf18      	it	ne
   8182e:	2400      	movne	r4, #0
   81830:	d006      	beq.n	81840 <__libc_init_array+0x3c>
   81832:	3401      	adds	r4, #1
   81834:	f855 3b04 	ldr.w	r3, [r5], #4
   81838:	4798      	blx	r3
   8183a:	42a6      	cmp	r6, r4
   8183c:	d1f9      	bne.n	81832 <__libc_init_array+0x2e>
   8183e:	bd70      	pop	{r4, r5, r6, pc}
   81840:	bd70      	pop	{r4, r5, r6, pc}
   81842:	bf00      	nop
   81844:	0008662c 	.word	0x0008662c
   81848:	0008662c 	.word	0x0008662c
   8184c:	00086634 	.word	0x00086634
   81850:	0008662c 	.word	0x0008662c

00081854 <memset>:
   81854:	b470      	push	{r4, r5, r6}
   81856:	0786      	lsls	r6, r0, #30
   81858:	d046      	beq.n	818e8 <memset+0x94>
   8185a:	1e54      	subs	r4, r2, #1
   8185c:	2a00      	cmp	r2, #0
   8185e:	d041      	beq.n	818e4 <memset+0x90>
   81860:	b2ca      	uxtb	r2, r1
   81862:	4603      	mov	r3, r0
   81864:	e002      	b.n	8186c <memset+0x18>
   81866:	f114 34ff 	adds.w	r4, r4, #4294967295
   8186a:	d33b      	bcc.n	818e4 <memset+0x90>
   8186c:	f803 2b01 	strb.w	r2, [r3], #1
   81870:	079d      	lsls	r5, r3, #30
   81872:	d1f8      	bne.n	81866 <memset+0x12>
   81874:	2c03      	cmp	r4, #3
   81876:	d92e      	bls.n	818d6 <memset+0x82>
   81878:	b2cd      	uxtb	r5, r1
   8187a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8187e:	2c0f      	cmp	r4, #15
   81880:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81884:	d919      	bls.n	818ba <memset+0x66>
   81886:	4626      	mov	r6, r4
   81888:	f103 0210 	add.w	r2, r3, #16
   8188c:	3e10      	subs	r6, #16
   8188e:	2e0f      	cmp	r6, #15
   81890:	f842 5c10 	str.w	r5, [r2, #-16]
   81894:	f842 5c0c 	str.w	r5, [r2, #-12]
   81898:	f842 5c08 	str.w	r5, [r2, #-8]
   8189c:	f842 5c04 	str.w	r5, [r2, #-4]
   818a0:	f102 0210 	add.w	r2, r2, #16
   818a4:	d8f2      	bhi.n	8188c <memset+0x38>
   818a6:	f1a4 0210 	sub.w	r2, r4, #16
   818aa:	f022 020f 	bic.w	r2, r2, #15
   818ae:	f004 040f 	and.w	r4, r4, #15
   818b2:	3210      	adds	r2, #16
   818b4:	2c03      	cmp	r4, #3
   818b6:	4413      	add	r3, r2
   818b8:	d90d      	bls.n	818d6 <memset+0x82>
   818ba:	461e      	mov	r6, r3
   818bc:	4622      	mov	r2, r4
   818be:	3a04      	subs	r2, #4
   818c0:	2a03      	cmp	r2, #3
   818c2:	f846 5b04 	str.w	r5, [r6], #4
   818c6:	d8fa      	bhi.n	818be <memset+0x6a>
   818c8:	1f22      	subs	r2, r4, #4
   818ca:	f022 0203 	bic.w	r2, r2, #3
   818ce:	3204      	adds	r2, #4
   818d0:	4413      	add	r3, r2
   818d2:	f004 0403 	and.w	r4, r4, #3
   818d6:	b12c      	cbz	r4, 818e4 <memset+0x90>
   818d8:	b2c9      	uxtb	r1, r1
   818da:	441c      	add	r4, r3
   818dc:	f803 1b01 	strb.w	r1, [r3], #1
   818e0:	429c      	cmp	r4, r3
   818e2:	d1fb      	bne.n	818dc <memset+0x88>
   818e4:	bc70      	pop	{r4, r5, r6}
   818e6:	4770      	bx	lr
   818e8:	4614      	mov	r4, r2
   818ea:	4603      	mov	r3, r0
   818ec:	e7c2      	b.n	81874 <memset+0x20>
   818ee:	bf00      	nop

000818f0 <sprintf>:
   818f0:	b40e      	push	{r1, r2, r3}
   818f2:	4601      	mov	r1, r0
   818f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   818f6:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   818fa:	f44f 7702 	mov.w	r7, #520	; 0x208
   818fe:	f64f 76ff 	movw	r6, #65535	; 0xffff
   81902:	b09c      	sub	sp, #112	; 0x70
   81904:	ac21      	add	r4, sp, #132	; 0x84
   81906:	f854 2b04 	ldr.w	r2, [r4], #4
   8190a:	4b0b      	ldr	r3, [pc, #44]	; (81938 <sprintf+0x48>)
   8190c:	9102      	str	r1, [sp, #8]
   8190e:	9106      	str	r1, [sp, #24]
   81910:	6818      	ldr	r0, [r3, #0]
   81912:	a902      	add	r1, sp, #8
   81914:	4623      	mov	r3, r4
   81916:	9401      	str	r4, [sp, #4]
   81918:	f8ad 7014 	strh.w	r7, [sp, #20]
   8191c:	9504      	str	r5, [sp, #16]
   8191e:	9507      	str	r5, [sp, #28]
   81920:	f8ad 6016 	strh.w	r6, [sp, #22]
   81924:	f000 f91c 	bl	81b60 <_svfprintf_r>
   81928:	2200      	movs	r2, #0
   8192a:	9b02      	ldr	r3, [sp, #8]
   8192c:	701a      	strb	r2, [r3, #0]
   8192e:	b01c      	add	sp, #112	; 0x70
   81930:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81934:	b003      	add	sp, #12
   81936:	4770      	bx	lr
   81938:	20070544 	.word	0x20070544

0008193c <strlen>:
   8193c:	f020 0103 	bic.w	r1, r0, #3
   81940:	f010 0003 	ands.w	r0, r0, #3
   81944:	f1c0 0000 	rsb	r0, r0, #0
   81948:	f851 3b04 	ldr.w	r3, [r1], #4
   8194c:	f100 0c04 	add.w	ip, r0, #4
   81950:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81954:	f06f 0200 	mvn.w	r2, #0
   81958:	bf1c      	itt	ne
   8195a:	fa22 f20c 	lsrne.w	r2, r2, ip
   8195e:	4313      	orrne	r3, r2
   81960:	f04f 0c01 	mov.w	ip, #1
   81964:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81968:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   8196c:	eba3 020c 	sub.w	r2, r3, ip
   81970:	ea22 0203 	bic.w	r2, r2, r3
   81974:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81978:	bf04      	itt	eq
   8197a:	f851 3b04 	ldreq.w	r3, [r1], #4
   8197e:	3004      	addeq	r0, #4
   81980:	d0f4      	beq.n	8196c <strlen+0x30>
   81982:	f1c2 0100 	rsb	r1, r2, #0
   81986:	ea02 0201 	and.w	r2, r2, r1
   8198a:	fab2 f282 	clz	r2, r2
   8198e:	f1c2 021f 	rsb	r2, r2, #31
   81992:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81996:	4770      	bx	lr

00081998 <strtok>:
   81998:	4a02      	ldr	r2, [pc, #8]	; (819a4 <strtok+0xc>)
   8199a:	2301      	movs	r3, #1
   8199c:	6812      	ldr	r2, [r2, #0]
   8199e:	325c      	adds	r2, #92	; 0x5c
   819a0:	f000 b802 	b.w	819a8 <__strtok_r>
   819a4:	20070544 	.word	0x20070544

000819a8 <__strtok_r>:
   819a8:	b4f0      	push	{r4, r5, r6, r7}
   819aa:	b318      	cbz	r0, 819f4 <__strtok_r+0x4c>
   819ac:	4607      	mov	r7, r0
   819ae:	460d      	mov	r5, r1
   819b0:	f817 6b01 	ldrb.w	r6, [r7], #1
   819b4:	e001      	b.n	819ba <__strtok_r+0x12>
   819b6:	42a6      	cmp	r6, r4
   819b8:	d017      	beq.n	819ea <__strtok_r+0x42>
   819ba:	f815 4b01 	ldrb.w	r4, [r5], #1
   819be:	2c00      	cmp	r4, #0
   819c0:	d1f9      	bne.n	819b6 <__strtok_r+0xe>
   819c2:	b1e6      	cbz	r6, 819fe <__strtok_r+0x56>
   819c4:	460c      	mov	r4, r1
   819c6:	f817 5b01 	ldrb.w	r5, [r7], #1
   819ca:	e001      	b.n	819d0 <__strtok_r+0x28>
   819cc:	2b00      	cmp	r3, #0
   819ce:	d0f9      	beq.n	819c4 <__strtok_r+0x1c>
   819d0:	f814 3b01 	ldrb.w	r3, [r4], #1
   819d4:	429d      	cmp	r5, r3
   819d6:	d1f9      	bne.n	819cc <__strtok_r+0x24>
   819d8:	b155      	cbz	r5, 819f0 <__strtok_r+0x48>
   819da:	2300      	movs	r3, #0
   819dc:	f807 3c01 	strb.w	r3, [r7, #-1]
   819e0:	4606      	mov	r6, r0
   819e2:	6017      	str	r7, [r2, #0]
   819e4:	4630      	mov	r0, r6
   819e6:	bcf0      	pop	{r4, r5, r6, r7}
   819e8:	4770      	bx	lr
   819ea:	b153      	cbz	r3, 81a02 <__strtok_r+0x5a>
   819ec:	4638      	mov	r0, r7
   819ee:	e7dd      	b.n	819ac <__strtok_r+0x4>
   819f0:	462f      	mov	r7, r5
   819f2:	e7f5      	b.n	819e0 <__strtok_r+0x38>
   819f4:	6810      	ldr	r0, [r2, #0]
   819f6:	2800      	cmp	r0, #0
   819f8:	d1d8      	bne.n	819ac <__strtok_r+0x4>
   819fa:	4606      	mov	r6, r0
   819fc:	e7f2      	b.n	819e4 <__strtok_r+0x3c>
   819fe:	6016      	str	r6, [r2, #0]
   81a00:	e7f0      	b.n	819e4 <__strtok_r+0x3c>
   81a02:	6017      	str	r7, [r2, #0]
   81a04:	4606      	mov	r6, r0
   81a06:	7003      	strb	r3, [r0, #0]
   81a08:	e7ec      	b.n	819e4 <__strtok_r+0x3c>
   81a0a:	bf00      	nop

00081a0c <_strtol_l.isra.0>:
   81a0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81a10:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81a14:	460f      	mov	r7, r1
   81a16:	4680      	mov	r8, r0
   81a18:	4616      	mov	r6, r2
   81a1a:	461d      	mov	r5, r3
   81a1c:	468a      	mov	sl, r1
   81a1e:	e000      	b.n	81a22 <_strtol_l.isra.0+0x16>
   81a20:	46a2      	mov	sl, r4
   81a22:	4654      	mov	r4, sl
   81a24:	4648      	mov	r0, r9
   81a26:	f814 bb01 	ldrb.w	fp, [r4], #1
   81a2a:	f002 faf9 	bl	84020 <__locale_ctype_ptr_l>
   81a2e:	4458      	add	r0, fp
   81a30:	7842      	ldrb	r2, [r0, #1]
   81a32:	f012 0208 	ands.w	r2, r2, #8
   81a36:	d1f3      	bne.n	81a20 <_strtol_l.isra.0+0x14>
   81a38:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   81a3c:	d04f      	beq.n	81ade <_strtol_l.isra.0+0xd2>
   81a3e:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   81a42:	bf04      	itt	eq
   81a44:	f894 b000 	ldrbeq.w	fp, [r4]
   81a48:	f10a 0402 	addeq.w	r4, sl, #2
   81a4c:	b11d      	cbz	r5, 81a56 <_strtol_l.isra.0+0x4a>
   81a4e:	2d10      	cmp	r5, #16
   81a50:	d056      	beq.n	81b00 <_strtol_l.isra.0+0xf4>
   81a52:	46ac      	mov	ip, r5
   81a54:	e004      	b.n	81a60 <_strtol_l.isra.0+0x54>
   81a56:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81a5a:	d060      	beq.n	81b1e <_strtol_l.isra.0+0x112>
   81a5c:	250a      	movs	r5, #10
   81a5e:	46ac      	mov	ip, r5
   81a60:	2a00      	cmp	r2, #0
   81a62:	bf0c      	ite	eq
   81a64:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   81a68:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   81a6c:	2100      	movs	r1, #0
   81a6e:	fbb9 fefc 	udiv	lr, r9, ip
   81a72:	4608      	mov	r0, r1
   81a74:	fb0c 9a1e 	mls	sl, ip, lr, r9
   81a78:	e005      	b.n	81a86 <_strtol_l.isra.0+0x7a>
   81a7a:	d029      	beq.n	81ad0 <_strtol_l.isra.0+0xc4>
   81a7c:	2101      	movs	r1, #1
   81a7e:	fb0c 3000 	mla	r0, ip, r0, r3
   81a82:	f814 bb01 	ldrb.w	fp, [r4], #1
   81a86:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   81a8a:	2b09      	cmp	r3, #9
   81a8c:	d905      	bls.n	81a9a <_strtol_l.isra.0+0x8e>
   81a8e:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   81a92:	2b19      	cmp	r3, #25
   81a94:	d80b      	bhi.n	81aae <_strtol_l.isra.0+0xa2>
   81a96:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   81a9a:	429d      	cmp	r5, r3
   81a9c:	dd0f      	ble.n	81abe <_strtol_l.isra.0+0xb2>
   81a9e:	f1b1 3fff 	cmp.w	r1, #4294967295
   81aa2:	d0ee      	beq.n	81a82 <_strtol_l.isra.0+0x76>
   81aa4:	4586      	cmp	lr, r0
   81aa6:	d2e8      	bcs.n	81a7a <_strtol_l.isra.0+0x6e>
   81aa8:	f04f 31ff 	mov.w	r1, #4294967295
   81aac:	e7e9      	b.n	81a82 <_strtol_l.isra.0+0x76>
   81aae:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   81ab2:	2b19      	cmp	r3, #25
   81ab4:	d803      	bhi.n	81abe <_strtol_l.isra.0+0xb2>
   81ab6:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   81aba:	429d      	cmp	r5, r3
   81abc:	dcef      	bgt.n	81a9e <_strtol_l.isra.0+0x92>
   81abe:	1c4b      	adds	r3, r1, #1
   81ac0:	d013      	beq.n	81aea <_strtol_l.isra.0+0xde>
   81ac2:	b102      	cbz	r2, 81ac6 <_strtol_l.isra.0+0xba>
   81ac4:	4240      	negs	r0, r0
   81ac6:	b146      	cbz	r6, 81ada <_strtol_l.isra.0+0xce>
   81ac8:	b9c1      	cbnz	r1, 81afc <_strtol_l.isra.0+0xf0>
   81aca:	6037      	str	r7, [r6, #0]
   81acc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81ad0:	459a      	cmp	sl, r3
   81ad2:	dad3      	bge.n	81a7c <_strtol_l.isra.0+0x70>
   81ad4:	f04f 31ff 	mov.w	r1, #4294967295
   81ad8:	e7d3      	b.n	81a82 <_strtol_l.isra.0+0x76>
   81ada:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81ade:	f894 b000 	ldrb.w	fp, [r4]
   81ae2:	2201      	movs	r2, #1
   81ae4:	f10a 0402 	add.w	r4, sl, #2
   81ae8:	e7b0      	b.n	81a4c <_strtol_l.isra.0+0x40>
   81aea:	2322      	movs	r3, #34	; 0x22
   81aec:	f8c8 3000 	str.w	r3, [r8]
   81af0:	b1ee      	cbz	r6, 81b2e <_strtol_l.isra.0+0x122>
   81af2:	1e67      	subs	r7, r4, #1
   81af4:	4648      	mov	r0, r9
   81af6:	6037      	str	r7, [r6, #0]
   81af8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81afc:	4681      	mov	r9, r0
   81afe:	e7f8      	b.n	81af2 <_strtol_l.isra.0+0xe6>
   81b00:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81b04:	d1a5      	bne.n	81a52 <_strtol_l.isra.0+0x46>
   81b06:	7823      	ldrb	r3, [r4, #0]
   81b08:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81b0c:	2b58      	cmp	r3, #88	; 0x58
   81b0e:	d1a0      	bne.n	81a52 <_strtol_l.isra.0+0x46>
   81b10:	f04f 0c10 	mov.w	ip, #16
   81b14:	f894 b001 	ldrb.w	fp, [r4, #1]
   81b18:	4665      	mov	r5, ip
   81b1a:	3402      	adds	r4, #2
   81b1c:	e7a0      	b.n	81a60 <_strtol_l.isra.0+0x54>
   81b1e:	7823      	ldrb	r3, [r4, #0]
   81b20:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81b24:	2b58      	cmp	r3, #88	; 0x58
   81b26:	d0f3      	beq.n	81b10 <_strtol_l.isra.0+0x104>
   81b28:	2508      	movs	r5, #8
   81b2a:	46ac      	mov	ip, r5
   81b2c:	e798      	b.n	81a60 <_strtol_l.isra.0+0x54>
   81b2e:	4648      	mov	r0, r9
   81b30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00081b34 <strtol>:
   81b34:	4b08      	ldr	r3, [pc, #32]	; (81b58 <strtol+0x24>)
   81b36:	b570      	push	{r4, r5, r6, lr}
   81b38:	681d      	ldr	r5, [r3, #0]
   81b3a:	4e08      	ldr	r6, [pc, #32]	; (81b5c <strtol+0x28>)
   81b3c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   81b3e:	b082      	sub	sp, #8
   81b40:	2c00      	cmp	r4, #0
   81b42:	bf08      	it	eq
   81b44:	4634      	moveq	r4, r6
   81b46:	4613      	mov	r3, r2
   81b48:	9400      	str	r4, [sp, #0]
   81b4a:	460a      	mov	r2, r1
   81b4c:	4601      	mov	r1, r0
   81b4e:	4628      	mov	r0, r5
   81b50:	f7ff ff5c 	bl	81a0c <_strtol_l.isra.0>
   81b54:	b002      	add	sp, #8
   81b56:	bd70      	pop	{r4, r5, r6, pc}
   81b58:	20070544 	.word	0x20070544
   81b5c:	20070974 	.word	0x20070974

00081b60 <_svfprintf_r>:
   81b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81b64:	b0c3      	sub	sp, #268	; 0x10c
   81b66:	460c      	mov	r4, r1
   81b68:	910b      	str	r1, [sp, #44]	; 0x2c
   81b6a:	4692      	mov	sl, r2
   81b6c:	930f      	str	r3, [sp, #60]	; 0x3c
   81b6e:	900c      	str	r0, [sp, #48]	; 0x30
   81b70:	f002 fa5a 	bl	84028 <_localeconv_r>
   81b74:	6803      	ldr	r3, [r0, #0]
   81b76:	4618      	mov	r0, r3
   81b78:	931a      	str	r3, [sp, #104]	; 0x68
   81b7a:	f7ff fedf 	bl	8193c <strlen>
   81b7e:	89a3      	ldrh	r3, [r4, #12]
   81b80:	9019      	str	r0, [sp, #100]	; 0x64
   81b82:	0619      	lsls	r1, r3, #24
   81b84:	d503      	bpl.n	81b8e <_svfprintf_r+0x2e>
   81b86:	6923      	ldr	r3, [r4, #16]
   81b88:	2b00      	cmp	r3, #0
   81b8a:	f001 8035 	beq.w	82bf8 <_svfprintf_r+0x1098>
   81b8e:	2300      	movs	r3, #0
   81b90:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81b94:	46c8      	mov	r8, r9
   81b96:	9315      	str	r3, [sp, #84]	; 0x54
   81b98:	9313      	str	r3, [sp, #76]	; 0x4c
   81b9a:	9314      	str	r3, [sp, #80]	; 0x50
   81b9c:	9318      	str	r3, [sp, #96]	; 0x60
   81b9e:	931b      	str	r3, [sp, #108]	; 0x6c
   81ba0:	9309      	str	r3, [sp, #36]	; 0x24
   81ba2:	9316      	str	r3, [sp, #88]	; 0x58
   81ba4:	9317      	str	r3, [sp, #92]	; 0x5c
   81ba6:	9327      	str	r3, [sp, #156]	; 0x9c
   81ba8:	9326      	str	r3, [sp, #152]	; 0x98
   81baa:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81bae:	f89a 3000 	ldrb.w	r3, [sl]
   81bb2:	4654      	mov	r4, sl
   81bb4:	b1eb      	cbz	r3, 81bf2 <_svfprintf_r+0x92>
   81bb6:	2b25      	cmp	r3, #37	; 0x25
   81bb8:	d102      	bne.n	81bc0 <_svfprintf_r+0x60>
   81bba:	e01a      	b.n	81bf2 <_svfprintf_r+0x92>
   81bbc:	2b25      	cmp	r3, #37	; 0x25
   81bbe:	d003      	beq.n	81bc8 <_svfprintf_r+0x68>
   81bc0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81bc4:	2b00      	cmp	r3, #0
   81bc6:	d1f9      	bne.n	81bbc <_svfprintf_r+0x5c>
   81bc8:	eba4 050a 	sub.w	r5, r4, sl
   81bcc:	b18d      	cbz	r5, 81bf2 <_svfprintf_r+0x92>
   81bce:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bd0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81bd2:	3301      	adds	r3, #1
   81bd4:	442a      	add	r2, r5
   81bd6:	2b07      	cmp	r3, #7
   81bd8:	f8c8 a000 	str.w	sl, [r8]
   81bdc:	f8c8 5004 	str.w	r5, [r8, #4]
   81be0:	9227      	str	r2, [sp, #156]	; 0x9c
   81be2:	9326      	str	r3, [sp, #152]	; 0x98
   81be4:	f300 808a 	bgt.w	81cfc <_svfprintf_r+0x19c>
   81be8:	f108 0808 	add.w	r8, r8, #8
   81bec:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81bee:	442b      	add	r3, r5
   81bf0:	9309      	str	r3, [sp, #36]	; 0x24
   81bf2:	7823      	ldrb	r3, [r4, #0]
   81bf4:	2b00      	cmp	r3, #0
   81bf6:	f000 8089 	beq.w	81d0c <_svfprintf_r+0x1ac>
   81bfa:	2300      	movs	r3, #0
   81bfc:	f04f 30ff 	mov.w	r0, #4294967295
   81c00:	461a      	mov	r2, r3
   81c02:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81c06:	4619      	mov	r1, r3
   81c08:	930d      	str	r3, [sp, #52]	; 0x34
   81c0a:	469b      	mov	fp, r3
   81c0c:	7863      	ldrb	r3, [r4, #1]
   81c0e:	f104 0a01 	add.w	sl, r4, #1
   81c12:	900a      	str	r0, [sp, #40]	; 0x28
   81c14:	f10a 0a01 	add.w	sl, sl, #1
   81c18:	f1a3 0020 	sub.w	r0, r3, #32
   81c1c:	2858      	cmp	r0, #88	; 0x58
   81c1e:	f200 83b7 	bhi.w	82390 <_svfprintf_r+0x830>
   81c22:	e8df f010 	tbh	[pc, r0, lsl #1]
   81c26:	034c      	.short	0x034c
   81c28:	03b503b5 	.word	0x03b503b5
   81c2c:	03b50354 	.word	0x03b50354
   81c30:	03b503b5 	.word	0x03b503b5
   81c34:	03b503b5 	.word	0x03b503b5
   81c38:	005903b5 	.word	0x005903b5
   81c3c:	03b50359 	.word	0x03b50359
   81c40:	02140066 	.word	0x02140066
   81c44:	022f03b5 	.word	0x022f03b5
   81c48:	03a503a5 	.word	0x03a503a5
   81c4c:	03a503a5 	.word	0x03a503a5
   81c50:	03a503a5 	.word	0x03a503a5
   81c54:	03a503a5 	.word	0x03a503a5
   81c58:	03b503a5 	.word	0x03b503a5
   81c5c:	03b503b5 	.word	0x03b503b5
   81c60:	03b503b5 	.word	0x03b503b5
   81c64:	03b503b5 	.word	0x03b503b5
   81c68:	03b503b5 	.word	0x03b503b5
   81c6c:	028b03b5 	.word	0x028b03b5
   81c70:	03b502d3 	.word	0x03b502d3
   81c74:	03b502d3 	.word	0x03b502d3
   81c78:	03b503b5 	.word	0x03b503b5
   81c7c:	031b03b5 	.word	0x031b03b5
   81c80:	03b503b5 	.word	0x03b503b5
   81c84:	03b50320 	.word	0x03b50320
   81c88:	03b503b5 	.word	0x03b503b5
   81c8c:	03b503b5 	.word	0x03b503b5
   81c90:	03b50234 	.word	0x03b50234
   81c94:	024b03b5 	.word	0x024b03b5
   81c98:	03b503b5 	.word	0x03b503b5
   81c9c:	03b503b5 	.word	0x03b503b5
   81ca0:	03b503b5 	.word	0x03b503b5
   81ca4:	03b503b5 	.word	0x03b503b5
   81ca8:	03b503b5 	.word	0x03b503b5
   81cac:	039e0276 	.word	0x039e0276
   81cb0:	02d302d3 	.word	0x02d302d3
   81cb4:	036302d3 	.word	0x036302d3
   81cb8:	03b5039e 	.word	0x03b5039e
   81cbc:	036803b5 	.word	0x036803b5
   81cc0:	037503b5 	.word	0x037503b5
   81cc4:	038c01dd 	.word	0x038c01dd
   81cc8:	03b5035e 	.word	0x03b5035e
   81ccc:	03b501f2 	.word	0x03b501f2
   81cd0:	03b50087 	.word	0x03b50087
   81cd4:	033203b5 	.word	0x033203b5
   81cd8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81cda:	6823      	ldr	r3, [r4, #0]
   81cdc:	4618      	mov	r0, r3
   81cde:	930d      	str	r3, [sp, #52]	; 0x34
   81ce0:	4623      	mov	r3, r4
   81ce2:	2800      	cmp	r0, #0
   81ce4:	f103 0304 	add.w	r3, r3, #4
   81ce8:	930f      	str	r3, [sp, #60]	; 0x3c
   81cea:	da04      	bge.n	81cf6 <_svfprintf_r+0x196>
   81cec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81cee:	425b      	negs	r3, r3
   81cf0:	930d      	str	r3, [sp, #52]	; 0x34
   81cf2:	f04b 0b04 	orr.w	fp, fp, #4
   81cf6:	f89a 3000 	ldrb.w	r3, [sl]
   81cfa:	e78b      	b.n	81c14 <_svfprintf_r+0xb4>
   81cfc:	aa25      	add	r2, sp, #148	; 0x94
   81cfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81d00:	980c      	ldr	r0, [sp, #48]	; 0x30
   81d02:	f003 f831 	bl	84d68 <__ssprint_r>
   81d06:	b940      	cbnz	r0, 81d1a <_svfprintf_r+0x1ba>
   81d08:	46c8      	mov	r8, r9
   81d0a:	e76f      	b.n	81bec <_svfprintf_r+0x8c>
   81d0c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d0e:	b123      	cbz	r3, 81d1a <_svfprintf_r+0x1ba>
   81d10:	980c      	ldr	r0, [sp, #48]	; 0x30
   81d12:	aa25      	add	r2, sp, #148	; 0x94
   81d14:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81d16:	f003 f827 	bl	84d68 <__ssprint_r>
   81d1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81d1c:	899b      	ldrh	r3, [r3, #12]
   81d1e:	f013 0f40 	tst.w	r3, #64	; 0x40
   81d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81d24:	bf18      	it	ne
   81d26:	f04f 33ff 	movne.w	r3, #4294967295
   81d2a:	9309      	str	r3, [sp, #36]	; 0x24
   81d2c:	9809      	ldr	r0, [sp, #36]	; 0x24
   81d2e:	b043      	add	sp, #268	; 0x10c
   81d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81d34:	f01b 0f20 	tst.w	fp, #32
   81d38:	9311      	str	r3, [sp, #68]	; 0x44
   81d3a:	f040 81af 	bne.w	8209c <_svfprintf_r+0x53c>
   81d3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81d40:	f01b 0f10 	tst.w	fp, #16
   81d44:	4613      	mov	r3, r2
   81d46:	f040 859a 	bne.w	8287e <_svfprintf_r+0xd1e>
   81d4a:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81d4e:	f000 8596 	beq.w	8287e <_svfprintf_r+0xd1e>
   81d52:	2500      	movs	r5, #0
   81d54:	2301      	movs	r3, #1
   81d56:	8814      	ldrh	r4, [r2, #0]
   81d58:	3204      	adds	r2, #4
   81d5a:	920f      	str	r2, [sp, #60]	; 0x3c
   81d5c:	2200      	movs	r2, #0
   81d5e:	4617      	mov	r7, r2
   81d60:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   81d64:	990a      	ldr	r1, [sp, #40]	; 0x28
   81d66:	1c4a      	adds	r2, r1, #1
   81d68:	f000 8210 	beq.w	8218c <_svfprintf_r+0x62c>
   81d6c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   81d70:	9207      	str	r2, [sp, #28]
   81d72:	ea54 0205 	orrs.w	r2, r4, r5
   81d76:	f040 820f 	bne.w	82198 <_svfprintf_r+0x638>
   81d7a:	2900      	cmp	r1, #0
   81d7c:	f040 8431 	bne.w	825e2 <_svfprintf_r+0xa82>
   81d80:	2b00      	cmp	r3, #0
   81d82:	f040 8539 	bne.w	827f8 <_svfprintf_r+0xc98>
   81d86:	f01b 0301 	ands.w	r3, fp, #1
   81d8a:	930e      	str	r3, [sp, #56]	; 0x38
   81d8c:	f000 8662 	beq.w	82a54 <_svfprintf_r+0xef4>
   81d90:	2330      	movs	r3, #48	; 0x30
   81d92:	ae42      	add	r6, sp, #264	; 0x108
   81d94:	f806 3d41 	strb.w	r3, [r6, #-65]!
   81d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81d9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81d9c:	4293      	cmp	r3, r2
   81d9e:	bfb8      	it	lt
   81da0:	4613      	movlt	r3, r2
   81da2:	9308      	str	r3, [sp, #32]
   81da4:	2300      	movs	r3, #0
   81da6:	9312      	str	r3, [sp, #72]	; 0x48
   81da8:	b117      	cbz	r7, 81db0 <_svfprintf_r+0x250>
   81daa:	9b08      	ldr	r3, [sp, #32]
   81dac:	3301      	adds	r3, #1
   81dae:	9308      	str	r3, [sp, #32]
   81db0:	9b07      	ldr	r3, [sp, #28]
   81db2:	f013 0302 	ands.w	r3, r3, #2
   81db6:	9310      	str	r3, [sp, #64]	; 0x40
   81db8:	d002      	beq.n	81dc0 <_svfprintf_r+0x260>
   81dba:	9b08      	ldr	r3, [sp, #32]
   81dbc:	3302      	adds	r3, #2
   81dbe:	9308      	str	r3, [sp, #32]
   81dc0:	9b07      	ldr	r3, [sp, #28]
   81dc2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   81dc6:	f040 8310 	bne.w	823ea <_svfprintf_r+0x88a>
   81dca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81dcc:	9a08      	ldr	r2, [sp, #32]
   81dce:	eba3 0b02 	sub.w	fp, r3, r2
   81dd2:	f1bb 0f00 	cmp.w	fp, #0
   81dd6:	f340 8308 	ble.w	823ea <_svfprintf_r+0x88a>
   81dda:	f1bb 0f10 	cmp.w	fp, #16
   81dde:	f340 87b2 	ble.w	82d46 <_svfprintf_r+0x11e6>
   81de2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81de4:	4643      	mov	r3, r8
   81de6:	4621      	mov	r1, r4
   81de8:	46a8      	mov	r8, r5
   81dea:	2710      	movs	r7, #16
   81dec:	9a26      	ldr	r2, [sp, #152]	; 0x98
   81dee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81df0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81df2:	e006      	b.n	81e02 <_svfprintf_r+0x2a2>
   81df4:	f1ab 0b10 	sub.w	fp, fp, #16
   81df8:	f1bb 0f10 	cmp.w	fp, #16
   81dfc:	f103 0308 	add.w	r3, r3, #8
   81e00:	dd18      	ble.n	81e34 <_svfprintf_r+0x2d4>
   81e02:	3201      	adds	r2, #1
   81e04:	48ab      	ldr	r0, [pc, #684]	; (820b4 <_svfprintf_r+0x554>)
   81e06:	3110      	adds	r1, #16
   81e08:	2a07      	cmp	r2, #7
   81e0a:	9127      	str	r1, [sp, #156]	; 0x9c
   81e0c:	9226      	str	r2, [sp, #152]	; 0x98
   81e0e:	e883 0081 	stmia.w	r3, {r0, r7}
   81e12:	ddef      	ble.n	81df4 <_svfprintf_r+0x294>
   81e14:	aa25      	add	r2, sp, #148	; 0x94
   81e16:	4629      	mov	r1, r5
   81e18:	4620      	mov	r0, r4
   81e1a:	f002 ffa5 	bl	84d68 <__ssprint_r>
   81e1e:	2800      	cmp	r0, #0
   81e20:	f47f af7b 	bne.w	81d1a <_svfprintf_r+0x1ba>
   81e24:	f1ab 0b10 	sub.w	fp, fp, #16
   81e28:	f1bb 0f10 	cmp.w	fp, #16
   81e2c:	464b      	mov	r3, r9
   81e2e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81e30:	9a26      	ldr	r2, [sp, #152]	; 0x98
   81e32:	dce6      	bgt.n	81e02 <_svfprintf_r+0x2a2>
   81e34:	4645      	mov	r5, r8
   81e36:	460c      	mov	r4, r1
   81e38:	4698      	mov	r8, r3
   81e3a:	3201      	adds	r2, #1
   81e3c:	4b9d      	ldr	r3, [pc, #628]	; (820b4 <_svfprintf_r+0x554>)
   81e3e:	445c      	add	r4, fp
   81e40:	2a07      	cmp	r2, #7
   81e42:	9427      	str	r4, [sp, #156]	; 0x9c
   81e44:	9226      	str	r2, [sp, #152]	; 0x98
   81e46:	e888 0808 	stmia.w	r8, {r3, fp}
   81e4a:	f300 82c3 	bgt.w	823d4 <_svfprintf_r+0x874>
   81e4e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81e52:	f108 0808 	add.w	r8, r8, #8
   81e56:	b187      	cbz	r7, 81e7a <_svfprintf_r+0x31a>
   81e58:	2101      	movs	r1, #1
   81e5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e5c:	440c      	add	r4, r1
   81e5e:	440b      	add	r3, r1
   81e60:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   81e64:	2b07      	cmp	r3, #7
   81e66:	9427      	str	r4, [sp, #156]	; 0x9c
   81e68:	9326      	str	r3, [sp, #152]	; 0x98
   81e6a:	f8c8 1004 	str.w	r1, [r8, #4]
   81e6e:	f8c8 2000 	str.w	r2, [r8]
   81e72:	f300 83cd 	bgt.w	82610 <_svfprintf_r+0xab0>
   81e76:	f108 0808 	add.w	r8, r8, #8
   81e7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81e7c:	b17b      	cbz	r3, 81e9e <_svfprintf_r+0x33e>
   81e7e:	2102      	movs	r1, #2
   81e80:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e82:	440c      	add	r4, r1
   81e84:	3301      	adds	r3, #1
   81e86:	aa1e      	add	r2, sp, #120	; 0x78
   81e88:	2b07      	cmp	r3, #7
   81e8a:	9427      	str	r4, [sp, #156]	; 0x9c
   81e8c:	9326      	str	r3, [sp, #152]	; 0x98
   81e8e:	f8c8 1004 	str.w	r1, [r8, #4]
   81e92:	f8c8 2000 	str.w	r2, [r8]
   81e96:	f300 8411 	bgt.w	826bc <_svfprintf_r+0xb5c>
   81e9a:	f108 0808 	add.w	r8, r8, #8
   81e9e:	2d80      	cmp	r5, #128	; 0x80
   81ea0:	f000 8304 	beq.w	824ac <_svfprintf_r+0x94c>
   81ea4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81ea6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81ea8:	1a9f      	subs	r7, r3, r2
   81eaa:	2f00      	cmp	r7, #0
   81eac:	dd37      	ble.n	81f1e <_svfprintf_r+0x3be>
   81eae:	2f10      	cmp	r7, #16
   81eb0:	f340 8679 	ble.w	82ba6 <_svfprintf_r+0x1046>
   81eb4:	4d80      	ldr	r5, [pc, #512]	; (820b8 <_svfprintf_r+0x558>)
   81eb6:	4642      	mov	r2, r8
   81eb8:	4621      	mov	r1, r4
   81eba:	46b0      	mov	r8, r6
   81ebc:	f04f 0b10 	mov.w	fp, #16
   81ec0:	462e      	mov	r6, r5
   81ec2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ec4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81ec6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81ec8:	e004      	b.n	81ed4 <_svfprintf_r+0x374>
   81eca:	3f10      	subs	r7, #16
   81ecc:	2f10      	cmp	r7, #16
   81ece:	f102 0208 	add.w	r2, r2, #8
   81ed2:	dd15      	ble.n	81f00 <_svfprintf_r+0x3a0>
   81ed4:	3301      	adds	r3, #1
   81ed6:	3110      	adds	r1, #16
   81ed8:	2b07      	cmp	r3, #7
   81eda:	9127      	str	r1, [sp, #156]	; 0x9c
   81edc:	9326      	str	r3, [sp, #152]	; 0x98
   81ede:	e882 0840 	stmia.w	r2, {r6, fp}
   81ee2:	ddf2      	ble.n	81eca <_svfprintf_r+0x36a>
   81ee4:	aa25      	add	r2, sp, #148	; 0x94
   81ee6:	4629      	mov	r1, r5
   81ee8:	4620      	mov	r0, r4
   81eea:	f002 ff3d 	bl	84d68 <__ssprint_r>
   81eee:	2800      	cmp	r0, #0
   81ef0:	f47f af13 	bne.w	81d1a <_svfprintf_r+0x1ba>
   81ef4:	3f10      	subs	r7, #16
   81ef6:	2f10      	cmp	r7, #16
   81ef8:	464a      	mov	r2, r9
   81efa:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81efc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81efe:	dce9      	bgt.n	81ed4 <_svfprintf_r+0x374>
   81f00:	4635      	mov	r5, r6
   81f02:	460c      	mov	r4, r1
   81f04:	4646      	mov	r6, r8
   81f06:	4690      	mov	r8, r2
   81f08:	3301      	adds	r3, #1
   81f0a:	443c      	add	r4, r7
   81f0c:	2b07      	cmp	r3, #7
   81f0e:	9427      	str	r4, [sp, #156]	; 0x9c
   81f10:	9326      	str	r3, [sp, #152]	; 0x98
   81f12:	e888 00a0 	stmia.w	r8, {r5, r7}
   81f16:	f300 8370 	bgt.w	825fa <_svfprintf_r+0xa9a>
   81f1a:	f108 0808 	add.w	r8, r8, #8
   81f1e:	9b07      	ldr	r3, [sp, #28]
   81f20:	05df      	lsls	r7, r3, #23
   81f22:	f100 8264 	bmi.w	823ee <_svfprintf_r+0x88e>
   81f26:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f28:	990e      	ldr	r1, [sp, #56]	; 0x38
   81f2a:	3301      	adds	r3, #1
   81f2c:	440c      	add	r4, r1
   81f2e:	2b07      	cmp	r3, #7
   81f30:	9427      	str	r4, [sp, #156]	; 0x9c
   81f32:	f8c8 6000 	str.w	r6, [r8]
   81f36:	f8c8 1004 	str.w	r1, [r8, #4]
   81f3a:	9326      	str	r3, [sp, #152]	; 0x98
   81f3c:	f300 83b3 	bgt.w	826a6 <_svfprintf_r+0xb46>
   81f40:	f108 0808 	add.w	r8, r8, #8
   81f44:	9b07      	ldr	r3, [sp, #28]
   81f46:	075b      	lsls	r3, r3, #29
   81f48:	d53b      	bpl.n	81fc2 <_svfprintf_r+0x462>
   81f4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81f4c:	9a08      	ldr	r2, [sp, #32]
   81f4e:	1a9d      	subs	r5, r3, r2
   81f50:	2d00      	cmp	r5, #0
   81f52:	dd36      	ble.n	81fc2 <_svfprintf_r+0x462>
   81f54:	2d10      	cmp	r5, #16
   81f56:	f340 8721 	ble.w	82d9c <_svfprintf_r+0x123c>
   81f5a:	2610      	movs	r6, #16
   81f5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f5e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   81f60:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   81f64:	e004      	b.n	81f70 <_svfprintf_r+0x410>
   81f66:	3d10      	subs	r5, #16
   81f68:	2d10      	cmp	r5, #16
   81f6a:	f108 0808 	add.w	r8, r8, #8
   81f6e:	dd16      	ble.n	81f9e <_svfprintf_r+0x43e>
   81f70:	3301      	adds	r3, #1
   81f72:	4a50      	ldr	r2, [pc, #320]	; (820b4 <_svfprintf_r+0x554>)
   81f74:	3410      	adds	r4, #16
   81f76:	2b07      	cmp	r3, #7
   81f78:	9427      	str	r4, [sp, #156]	; 0x9c
   81f7a:	9326      	str	r3, [sp, #152]	; 0x98
   81f7c:	e888 0044 	stmia.w	r8, {r2, r6}
   81f80:	ddf1      	ble.n	81f66 <_svfprintf_r+0x406>
   81f82:	aa25      	add	r2, sp, #148	; 0x94
   81f84:	4659      	mov	r1, fp
   81f86:	4638      	mov	r0, r7
   81f88:	f002 feee 	bl	84d68 <__ssprint_r>
   81f8c:	2800      	cmp	r0, #0
   81f8e:	f47f aec4 	bne.w	81d1a <_svfprintf_r+0x1ba>
   81f92:	3d10      	subs	r5, #16
   81f94:	2d10      	cmp	r5, #16
   81f96:	46c8      	mov	r8, r9
   81f98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f9c:	dce8      	bgt.n	81f70 <_svfprintf_r+0x410>
   81f9e:	3301      	adds	r3, #1
   81fa0:	4a44      	ldr	r2, [pc, #272]	; (820b4 <_svfprintf_r+0x554>)
   81fa2:	442c      	add	r4, r5
   81fa4:	2b07      	cmp	r3, #7
   81fa6:	9427      	str	r4, [sp, #156]	; 0x9c
   81fa8:	9326      	str	r3, [sp, #152]	; 0x98
   81faa:	e888 0024 	stmia.w	r8, {r2, r5}
   81fae:	dd08      	ble.n	81fc2 <_svfprintf_r+0x462>
   81fb0:	aa25      	add	r2, sp, #148	; 0x94
   81fb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81fb4:	980c      	ldr	r0, [sp, #48]	; 0x30
   81fb6:	f002 fed7 	bl	84d68 <__ssprint_r>
   81fba:	2800      	cmp	r0, #0
   81fbc:	f47f aead 	bne.w	81d1a <_svfprintf_r+0x1ba>
   81fc0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81fc4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81fc6:	9908      	ldr	r1, [sp, #32]
   81fc8:	428a      	cmp	r2, r1
   81fca:	bfac      	ite	ge
   81fcc:	189b      	addge	r3, r3, r2
   81fce:	185b      	addlt	r3, r3, r1
   81fd0:	9309      	str	r3, [sp, #36]	; 0x24
   81fd2:	2c00      	cmp	r4, #0
   81fd4:	f040 82fb 	bne.w	825ce <_svfprintf_r+0xa6e>
   81fd8:	2300      	movs	r3, #0
   81fda:	46c8      	mov	r8, r9
   81fdc:	9326      	str	r3, [sp, #152]	; 0x98
   81fde:	e5e6      	b.n	81bae <_svfprintf_r+0x4e>
   81fe0:	9311      	str	r3, [sp, #68]	; 0x44
   81fe2:	f01b 0320 	ands.w	r3, fp, #32
   81fe6:	f040 8145 	bne.w	82274 <_svfprintf_r+0x714>
   81fea:	f01b 0210 	ands.w	r2, fp, #16
   81fee:	f040 8466 	bne.w	828be <_svfprintf_r+0xd5e>
   81ff2:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   81ff6:	f000 8462 	beq.w	828be <_svfprintf_r+0xd5e>
   81ffa:	990f      	ldr	r1, [sp, #60]	; 0x3c
   81ffc:	4613      	mov	r3, r2
   81ffe:	460a      	mov	r2, r1
   82000:	3204      	adds	r2, #4
   82002:	880c      	ldrh	r4, [r1, #0]
   82004:	2500      	movs	r5, #0
   82006:	920f      	str	r2, [sp, #60]	; 0x3c
   82008:	e6a8      	b.n	81d5c <_svfprintf_r+0x1fc>
   8200a:	2500      	movs	r5, #0
   8200c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8200e:	9311      	str	r3, [sp, #68]	; 0x44
   82010:	6816      	ldr	r6, [r2, #0]
   82012:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   82016:	1d14      	adds	r4, r2, #4
   82018:	2e00      	cmp	r6, #0
   8201a:	f000 86cd 	beq.w	82db8 <_svfprintf_r+0x1258>
   8201e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82020:	1c53      	adds	r3, r2, #1
   82022:	f000 861b 	beq.w	82c5c <_svfprintf_r+0x10fc>
   82026:	4629      	mov	r1, r5
   82028:	4630      	mov	r0, r6
   8202a:	f002 fac7 	bl	845bc <memchr>
   8202e:	2800      	cmp	r0, #0
   82030:	f000 870d 	beq.w	82e4e <_svfprintf_r+0x12ee>
   82034:	1b83      	subs	r3, r0, r6
   82036:	950a      	str	r5, [sp, #40]	; 0x28
   82038:	930e      	str	r3, [sp, #56]	; 0x38
   8203a:	940f      	str	r4, [sp, #60]	; 0x3c
   8203c:	f8cd b01c 	str.w	fp, [sp, #28]
   82040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82044:	9308      	str	r3, [sp, #32]
   82046:	9512      	str	r5, [sp, #72]	; 0x48
   82048:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8204c:	e6ac      	b.n	81da8 <_svfprintf_r+0x248>
   8204e:	f89a 3000 	ldrb.w	r3, [sl]
   82052:	f10a 0401 	add.w	r4, sl, #1
   82056:	2b2a      	cmp	r3, #42	; 0x2a
   82058:	f000 87c2 	beq.w	82fe0 <_svfprintf_r+0x1480>
   8205c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82060:	2809      	cmp	r0, #9
   82062:	46a2      	mov	sl, r4
   82064:	f200 8718 	bhi.w	82e98 <_svfprintf_r+0x1338>
   82068:	2300      	movs	r3, #0
   8206a:	461c      	mov	r4, r3
   8206c:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82070:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82074:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82078:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   8207c:	2809      	cmp	r0, #9
   8207e:	d9f5      	bls.n	8206c <_svfprintf_r+0x50c>
   82080:	940a      	str	r4, [sp, #40]	; 0x28
   82082:	e5c9      	b.n	81c18 <_svfprintf_r+0xb8>
   82084:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   82088:	f89a 3000 	ldrb.w	r3, [sl]
   8208c:	e5c2      	b.n	81c14 <_svfprintf_r+0xb4>
   8208e:	f04b 0b10 	orr.w	fp, fp, #16
   82092:	f01b 0f20 	tst.w	fp, #32
   82096:	9311      	str	r3, [sp, #68]	; 0x44
   82098:	f43f ae51 	beq.w	81d3e <_svfprintf_r+0x1de>
   8209c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8209e:	3407      	adds	r4, #7
   820a0:	f024 0307 	bic.w	r3, r4, #7
   820a4:	f103 0208 	add.w	r2, r3, #8
   820a8:	e9d3 4500 	ldrd	r4, r5, [r3]
   820ac:	920f      	str	r2, [sp, #60]	; 0x3c
   820ae:	2301      	movs	r3, #1
   820b0:	e654      	b.n	81d5c <_svfprintf_r+0x1fc>
   820b2:	bf00      	nop
   820b4:	000863e0 	.word	0x000863e0
   820b8:	000863f0 	.word	0x000863f0
   820bc:	9311      	str	r3, [sp, #68]	; 0x44
   820be:	2a00      	cmp	r2, #0
   820c0:	f040 87ad 	bne.w	8301e <_svfprintf_r+0x14be>
   820c4:	4bbe      	ldr	r3, [pc, #760]	; (823c0 <_svfprintf_r+0x860>)
   820c6:	f01b 0f20 	tst.w	fp, #32
   820ca:	9318      	str	r3, [sp, #96]	; 0x60
   820cc:	f040 80e7 	bne.w	8229e <_svfprintf_r+0x73e>
   820d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   820d2:	f01b 0f10 	tst.w	fp, #16
   820d6:	4613      	mov	r3, r2
   820d8:	f040 83d8 	bne.w	8288c <_svfprintf_r+0xd2c>
   820dc:	f01b 0f40 	tst.w	fp, #64	; 0x40
   820e0:	f000 83d4 	beq.w	8288c <_svfprintf_r+0xd2c>
   820e4:	2500      	movs	r5, #0
   820e6:	3304      	adds	r3, #4
   820e8:	8814      	ldrh	r4, [r2, #0]
   820ea:	930f      	str	r3, [sp, #60]	; 0x3c
   820ec:	f01b 0f01 	tst.w	fp, #1
   820f0:	f000 80e3 	beq.w	822ba <_svfprintf_r+0x75a>
   820f4:	ea54 0305 	orrs.w	r3, r4, r5
   820f8:	f000 80df 	beq.w	822ba <_svfprintf_r+0x75a>
   820fc:	2330      	movs	r3, #48	; 0x30
   820fe:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82102:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   82106:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   8210a:	f04b 0b02 	orr.w	fp, fp, #2
   8210e:	2302      	movs	r3, #2
   82110:	e624      	b.n	81d5c <_svfprintf_r+0x1fc>
   82112:	2201      	movs	r2, #1
   82114:	9311      	str	r3, [sp, #68]	; 0x44
   82116:	2300      	movs	r3, #0
   82118:	4611      	mov	r1, r2
   8211a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8211c:	9208      	str	r2, [sp, #32]
   8211e:	6802      	ldr	r2, [r0, #0]
   82120:	461f      	mov	r7, r3
   82122:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82126:	930a      	str	r3, [sp, #40]	; 0x28
   82128:	9312      	str	r3, [sp, #72]	; 0x48
   8212a:	1d03      	adds	r3, r0, #4
   8212c:	f8cd b01c 	str.w	fp, [sp, #28]
   82130:	910e      	str	r1, [sp, #56]	; 0x38
   82132:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82136:	930f      	str	r3, [sp, #60]	; 0x3c
   82138:	ae28      	add	r6, sp, #160	; 0xa0
   8213a:	e639      	b.n	81db0 <_svfprintf_r+0x250>
   8213c:	9311      	str	r3, [sp, #68]	; 0x44
   8213e:	2a00      	cmp	r2, #0
   82140:	f040 8784 	bne.w	8304c <_svfprintf_r+0x14ec>
   82144:	f04b 0b10 	orr.w	fp, fp, #16
   82148:	f01b 0f20 	tst.w	fp, #32
   8214c:	f040 8475 	bne.w	82a3a <_svfprintf_r+0xeda>
   82150:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82152:	f01b 0f10 	tst.w	fp, #16
   82156:	4613      	mov	r3, r2
   82158:	f040 839d 	bne.w	82896 <_svfprintf_r+0xd36>
   8215c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82160:	f000 8399 	beq.w	82896 <_svfprintf_r+0xd36>
   82164:	f9b2 4000 	ldrsh.w	r4, [r2]
   82168:	3304      	adds	r3, #4
   8216a:	17e5      	asrs	r5, r4, #31
   8216c:	930f      	str	r3, [sp, #60]	; 0x3c
   8216e:	4622      	mov	r2, r4
   82170:	462b      	mov	r3, r5
   82172:	2a00      	cmp	r2, #0
   82174:	f173 0300 	sbcs.w	r3, r3, #0
   82178:	f2c0 8398 	blt.w	828ac <_svfprintf_r+0xd4c>
   8217c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8217e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82182:	1c4a      	adds	r2, r1, #1
   82184:	f04f 0301 	mov.w	r3, #1
   82188:	f47f adf0 	bne.w	81d6c <_svfprintf_r+0x20c>
   8218c:	ea54 0205 	orrs.w	r2, r4, r5
   82190:	f000 8229 	beq.w	825e6 <_svfprintf_r+0xa86>
   82194:	f8cd b01c 	str.w	fp, [sp, #28]
   82198:	2b01      	cmp	r3, #1
   8219a:	f000 830e 	beq.w	827ba <_svfprintf_r+0xc5a>
   8219e:	2b02      	cmp	r3, #2
   821a0:	f040 829c 	bne.w	826dc <_svfprintf_r+0xb7c>
   821a4:	464e      	mov	r6, r9
   821a6:	9818      	ldr	r0, [sp, #96]	; 0x60
   821a8:	0923      	lsrs	r3, r4, #4
   821aa:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   821ae:	0929      	lsrs	r1, r5, #4
   821b0:	f004 020f 	and.w	r2, r4, #15
   821b4:	460d      	mov	r5, r1
   821b6:	461c      	mov	r4, r3
   821b8:	5c83      	ldrb	r3, [r0, r2]
   821ba:	f806 3d01 	strb.w	r3, [r6, #-1]!
   821be:	ea54 0305 	orrs.w	r3, r4, r5
   821c2:	d1f1      	bne.n	821a8 <_svfprintf_r+0x648>
   821c4:	eba9 0306 	sub.w	r3, r9, r6
   821c8:	930e      	str	r3, [sp, #56]	; 0x38
   821ca:	e5e5      	b.n	81d98 <_svfprintf_r+0x238>
   821cc:	9311      	str	r3, [sp, #68]	; 0x44
   821ce:	2a00      	cmp	r2, #0
   821d0:	f040 8738 	bne.w	83044 <_svfprintf_r+0x14e4>
   821d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   821d6:	f01b 0f08 	tst.w	fp, #8
   821da:	f104 0407 	add.w	r4, r4, #7
   821de:	f000 84cf 	beq.w	82b80 <_svfprintf_r+0x1020>
   821e2:	f024 0307 	bic.w	r3, r4, #7
   821e6:	f103 0208 	add.w	r2, r3, #8
   821ea:	920f      	str	r2, [sp, #60]	; 0x3c
   821ec:	681a      	ldr	r2, [r3, #0]
   821ee:	685b      	ldr	r3, [r3, #4]
   821f0:	9215      	str	r2, [sp, #84]	; 0x54
   821f2:	9314      	str	r3, [sp, #80]	; 0x50
   821f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   821f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
   821f8:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   821fc:	4628      	mov	r0, r5
   821fe:	4621      	mov	r1, r4
   82200:	f04f 32ff 	mov.w	r2, #4294967295
   82204:	4b6f      	ldr	r3, [pc, #444]	; (823c4 <_svfprintf_r+0x864>)
   82206:	f003 fe6d 	bl	85ee4 <__aeabi_dcmpun>
   8220a:	2800      	cmp	r0, #0
   8220c:	f040 8434 	bne.w	82a78 <_svfprintf_r+0xf18>
   82210:	4628      	mov	r0, r5
   82212:	4621      	mov	r1, r4
   82214:	f04f 32ff 	mov.w	r2, #4294967295
   82218:	4b6a      	ldr	r3, [pc, #424]	; (823c4 <_svfprintf_r+0x864>)
   8221a:	f003 fe45 	bl	85ea8 <__aeabi_dcmple>
   8221e:	2800      	cmp	r0, #0
   82220:	f040 842a 	bne.w	82a78 <_svfprintf_r+0xf18>
   82224:	a815      	add	r0, sp, #84	; 0x54
   82226:	c80d      	ldmia	r0, {r0, r2, r3}
   82228:	9914      	ldr	r1, [sp, #80]	; 0x50
   8222a:	f003 fe33 	bl	85e94 <__aeabi_dcmplt>
   8222e:	2800      	cmp	r0, #0
   82230:	f040 85d4 	bne.w	82ddc <_svfprintf_r+0x127c>
   82234:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82238:	2303      	movs	r3, #3
   8223a:	461a      	mov	r2, r3
   8223c:	9308      	str	r3, [sp, #32]
   8223e:	2300      	movs	r3, #0
   82240:	4e61      	ldr	r6, [pc, #388]	; (823c8 <_svfprintf_r+0x868>)
   82242:	4619      	mov	r1, r3
   82244:	930a      	str	r3, [sp, #40]	; 0x28
   82246:	4b61      	ldr	r3, [pc, #388]	; (823cc <_svfprintf_r+0x86c>)
   82248:	920e      	str	r2, [sp, #56]	; 0x38
   8224a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8224c:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   82250:	9007      	str	r0, [sp, #28]
   82252:	9112      	str	r1, [sp, #72]	; 0x48
   82254:	2a47      	cmp	r2, #71	; 0x47
   82256:	bfd8      	it	le
   82258:	461e      	movle	r6, r3
   8225a:	e5a5      	b.n	81da8 <_svfprintf_r+0x248>
   8225c:	f04b 0b08 	orr.w	fp, fp, #8
   82260:	f89a 3000 	ldrb.w	r3, [sl]
   82264:	e4d6      	b.n	81c14 <_svfprintf_r+0xb4>
   82266:	f04b 0b10 	orr.w	fp, fp, #16
   8226a:	9311      	str	r3, [sp, #68]	; 0x44
   8226c:	f01b 0320 	ands.w	r3, fp, #32
   82270:	f43f aebb 	beq.w	81fea <_svfprintf_r+0x48a>
   82274:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82276:	3407      	adds	r4, #7
   82278:	f024 0307 	bic.w	r3, r4, #7
   8227c:	f103 0208 	add.w	r2, r3, #8
   82280:	e9d3 4500 	ldrd	r4, r5, [r3]
   82284:	920f      	str	r2, [sp, #60]	; 0x3c
   82286:	2300      	movs	r3, #0
   82288:	e568      	b.n	81d5c <_svfprintf_r+0x1fc>
   8228a:	9311      	str	r3, [sp, #68]	; 0x44
   8228c:	2a00      	cmp	r2, #0
   8228e:	f040 86c2 	bne.w	83016 <_svfprintf_r+0x14b6>
   82292:	4b4f      	ldr	r3, [pc, #316]	; (823d0 <_svfprintf_r+0x870>)
   82294:	f01b 0f20 	tst.w	fp, #32
   82298:	9318      	str	r3, [sp, #96]	; 0x60
   8229a:	f43f af19 	beq.w	820d0 <_svfprintf_r+0x570>
   8229e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   822a0:	f01b 0f01 	tst.w	fp, #1
   822a4:	f104 0407 	add.w	r4, r4, #7
   822a8:	f024 0307 	bic.w	r3, r4, #7
   822ac:	f103 0208 	add.w	r2, r3, #8
   822b0:	920f      	str	r2, [sp, #60]	; 0x3c
   822b2:	e9d3 4500 	ldrd	r4, r5, [r3]
   822b6:	f47f af1d 	bne.w	820f4 <_svfprintf_r+0x594>
   822ba:	2302      	movs	r3, #2
   822bc:	e54e      	b.n	81d5c <_svfprintf_r+0x1fc>
   822be:	f89a 3000 	ldrb.w	r3, [sl]
   822c2:	2900      	cmp	r1, #0
   822c4:	f47f aca6 	bne.w	81c14 <_svfprintf_r+0xb4>
   822c8:	2201      	movs	r2, #1
   822ca:	2120      	movs	r1, #32
   822cc:	e4a2      	b.n	81c14 <_svfprintf_r+0xb4>
   822ce:	f04b 0b01 	orr.w	fp, fp, #1
   822d2:	f89a 3000 	ldrb.w	r3, [sl]
   822d6:	e49d      	b.n	81c14 <_svfprintf_r+0xb4>
   822d8:	f89a 3000 	ldrb.w	r3, [sl]
   822dc:	2201      	movs	r2, #1
   822de:	212b      	movs	r1, #43	; 0x2b
   822e0:	e498      	b.n	81c14 <_svfprintf_r+0xb4>
   822e2:	f04b 0b20 	orr.w	fp, fp, #32
   822e6:	f89a 3000 	ldrb.w	r3, [sl]
   822ea:	e493      	b.n	81c14 <_svfprintf_r+0xb4>
   822ec:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   822f0:	f89a 3000 	ldrb.w	r3, [sl]
   822f4:	e48e      	b.n	81c14 <_svfprintf_r+0xb4>
   822f6:	f89a 3000 	ldrb.w	r3, [sl]
   822fa:	2b6c      	cmp	r3, #108	; 0x6c
   822fc:	bf03      	ittte	eq
   822fe:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   82302:	f04b 0b20 	orreq.w	fp, fp, #32
   82306:	f10a 0a01 	addeq.w	sl, sl, #1
   8230a:	f04b 0b10 	orrne.w	fp, fp, #16
   8230e:	e481      	b.n	81c14 <_svfprintf_r+0xb4>
   82310:	2a00      	cmp	r2, #0
   82312:	f040 867c 	bne.w	8300e <_svfprintf_r+0x14ae>
   82316:	f01b 0f20 	tst.w	fp, #32
   8231a:	f040 8452 	bne.w	82bc2 <_svfprintf_r+0x1062>
   8231e:	f01b 0f10 	tst.w	fp, #16
   82322:	f040 8438 	bne.w	82b96 <_svfprintf_r+0x1036>
   82326:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8232a:	f000 8434 	beq.w	82b96 <_svfprintf_r+0x1036>
   8232e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82330:	6813      	ldr	r3, [r2, #0]
   82332:	3204      	adds	r2, #4
   82334:	920f      	str	r2, [sp, #60]	; 0x3c
   82336:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   8233a:	801a      	strh	r2, [r3, #0]
   8233c:	e437      	b.n	81bae <_svfprintf_r+0x4e>
   8233e:	2378      	movs	r3, #120	; 0x78
   82340:	2230      	movs	r2, #48	; 0x30
   82342:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82344:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   82348:	9311      	str	r3, [sp, #68]	; 0x44
   8234a:	1d03      	adds	r3, r0, #4
   8234c:	930f      	str	r3, [sp, #60]	; 0x3c
   8234e:	4b20      	ldr	r3, [pc, #128]	; (823d0 <_svfprintf_r+0x870>)
   82350:	6804      	ldr	r4, [r0, #0]
   82352:	9318      	str	r3, [sp, #96]	; 0x60
   82354:	f04b 0b02 	orr.w	fp, fp, #2
   82358:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   8235c:	2500      	movs	r5, #0
   8235e:	2302      	movs	r3, #2
   82360:	e4fc      	b.n	81d5c <_svfprintf_r+0x1fc>
   82362:	9311      	str	r3, [sp, #68]	; 0x44
   82364:	2a00      	cmp	r2, #0
   82366:	f43f aeef 	beq.w	82148 <_svfprintf_r+0x5e8>
   8236a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8236e:	e6eb      	b.n	82148 <_svfprintf_r+0x5e8>
   82370:	2000      	movs	r0, #0
   82372:	4604      	mov	r4, r0
   82374:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82378:	f81a 3b01 	ldrb.w	r3, [sl], #1
   8237c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82380:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82384:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82388:	2809      	cmp	r0, #9
   8238a:	d9f5      	bls.n	82378 <_svfprintf_r+0x818>
   8238c:	940d      	str	r4, [sp, #52]	; 0x34
   8238e:	e443      	b.n	81c18 <_svfprintf_r+0xb8>
   82390:	9311      	str	r3, [sp, #68]	; 0x44
   82392:	2a00      	cmp	r2, #0
   82394:	f040 864a 	bne.w	8302c <_svfprintf_r+0x14cc>
   82398:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8239a:	2a00      	cmp	r2, #0
   8239c:	f43f acb6 	beq.w	81d0c <_svfprintf_r+0x1ac>
   823a0:	2300      	movs	r3, #0
   823a2:	2101      	movs	r1, #1
   823a4:	461f      	mov	r7, r3
   823a6:	9108      	str	r1, [sp, #32]
   823a8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   823ac:	f8cd b01c 	str.w	fp, [sp, #28]
   823b0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   823b4:	930a      	str	r3, [sp, #40]	; 0x28
   823b6:	9312      	str	r3, [sp, #72]	; 0x48
   823b8:	910e      	str	r1, [sp, #56]	; 0x38
   823ba:	ae28      	add	r6, sp, #160	; 0xa0
   823bc:	e4f8      	b.n	81db0 <_svfprintf_r+0x250>
   823be:	bf00      	nop
   823c0:	000863ac 	.word	0x000863ac
   823c4:	7fefffff 	.word	0x7fefffff
   823c8:	000863a0 	.word	0x000863a0
   823cc:	0008639c 	.word	0x0008639c
   823d0:	000863c0 	.word	0x000863c0
   823d4:	aa25      	add	r2, sp, #148	; 0x94
   823d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823d8:	980c      	ldr	r0, [sp, #48]	; 0x30
   823da:	f002 fcc5 	bl	84d68 <__ssprint_r>
   823de:	2800      	cmp	r0, #0
   823e0:	f47f ac9b 	bne.w	81d1a <_svfprintf_r+0x1ba>
   823e4:	46c8      	mov	r8, r9
   823e6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   823ea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823ec:	e533      	b.n	81e56 <_svfprintf_r+0x2f6>
   823ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
   823f0:	2b65      	cmp	r3, #101	; 0x65
   823f2:	f340 809a 	ble.w	8252a <_svfprintf_r+0x9ca>
   823f6:	a815      	add	r0, sp, #84	; 0x54
   823f8:	c80d      	ldmia	r0, {r0, r2, r3}
   823fa:	9914      	ldr	r1, [sp, #80]	; 0x50
   823fc:	f003 fd40 	bl	85e80 <__aeabi_dcmpeq>
   82400:	2800      	cmp	r0, #0
   82402:	f000 8193 	beq.w	8272c <_svfprintf_r+0xbcc>
   82406:	2101      	movs	r1, #1
   82408:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8240a:	4ab5      	ldr	r2, [pc, #724]	; (826e0 <_svfprintf_r+0xb80>)
   8240c:	440b      	add	r3, r1
   8240e:	440c      	add	r4, r1
   82410:	2b07      	cmp	r3, #7
   82412:	9427      	str	r4, [sp, #156]	; 0x9c
   82414:	9326      	str	r3, [sp, #152]	; 0x98
   82416:	f8c8 1004 	str.w	r1, [r8, #4]
   8241a:	f8c8 2000 	str.w	r2, [r8]
   8241e:	f300 83c6 	bgt.w	82bae <_svfprintf_r+0x104e>
   82422:	f108 0808 	add.w	r8, r8, #8
   82426:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82428:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8242a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8242c:	4293      	cmp	r3, r2
   8242e:	db03      	blt.n	82438 <_svfprintf_r+0x8d8>
   82430:	9b07      	ldr	r3, [sp, #28]
   82432:	07dd      	lsls	r5, r3, #31
   82434:	f57f ad86 	bpl.w	81f44 <_svfprintf_r+0x3e4>
   82438:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8243a:	9919      	ldr	r1, [sp, #100]	; 0x64
   8243c:	3301      	adds	r3, #1
   8243e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   82440:	440c      	add	r4, r1
   82442:	2b07      	cmp	r3, #7
   82444:	f8c8 2000 	str.w	r2, [r8]
   82448:	f8c8 1004 	str.w	r1, [r8, #4]
   8244c:	9427      	str	r4, [sp, #156]	; 0x9c
   8244e:	9326      	str	r3, [sp, #152]	; 0x98
   82450:	f300 83c4 	bgt.w	82bdc <_svfprintf_r+0x107c>
   82454:	f108 0808 	add.w	r8, r8, #8
   82458:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8245a:	1e5e      	subs	r6, r3, #1
   8245c:	2e00      	cmp	r6, #0
   8245e:	f77f ad71 	ble.w	81f44 <_svfprintf_r+0x3e4>
   82462:	2e10      	cmp	r6, #16
   82464:	f340 8575 	ble.w	82f52 <_svfprintf_r+0x13f2>
   82468:	4622      	mov	r2, r4
   8246a:	2710      	movs	r7, #16
   8246c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8246e:	4d9d      	ldr	r5, [pc, #628]	; (826e4 <_svfprintf_r+0xb84>)
   82470:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82474:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82476:	e005      	b.n	82484 <_svfprintf_r+0x924>
   82478:	f108 0808 	add.w	r8, r8, #8
   8247c:	3e10      	subs	r6, #16
   8247e:	2e10      	cmp	r6, #16
   82480:	f340 8225 	ble.w	828ce <_svfprintf_r+0xd6e>
   82484:	3301      	adds	r3, #1
   82486:	3210      	adds	r2, #16
   82488:	2b07      	cmp	r3, #7
   8248a:	9227      	str	r2, [sp, #156]	; 0x9c
   8248c:	9326      	str	r3, [sp, #152]	; 0x98
   8248e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82492:	ddf1      	ble.n	82478 <_svfprintf_r+0x918>
   82494:	aa25      	add	r2, sp, #148	; 0x94
   82496:	4621      	mov	r1, r4
   82498:	4658      	mov	r0, fp
   8249a:	f002 fc65 	bl	84d68 <__ssprint_r>
   8249e:	2800      	cmp	r0, #0
   824a0:	f47f ac3b 	bne.w	81d1a <_svfprintf_r+0x1ba>
   824a4:	46c8      	mov	r8, r9
   824a6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   824a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   824aa:	e7e7      	b.n	8247c <_svfprintf_r+0x91c>
   824ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   824ae:	9a08      	ldr	r2, [sp, #32]
   824b0:	1a9f      	subs	r7, r3, r2
   824b2:	2f00      	cmp	r7, #0
   824b4:	f77f acf6 	ble.w	81ea4 <_svfprintf_r+0x344>
   824b8:	2f10      	cmp	r7, #16
   824ba:	f340 84a8 	ble.w	82e0e <_svfprintf_r+0x12ae>
   824be:	4d89      	ldr	r5, [pc, #548]	; (826e4 <_svfprintf_r+0xb84>)
   824c0:	4642      	mov	r2, r8
   824c2:	4621      	mov	r1, r4
   824c4:	46b0      	mov	r8, r6
   824c6:	f04f 0b10 	mov.w	fp, #16
   824ca:	462e      	mov	r6, r5
   824cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   824ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   824d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   824d2:	e004      	b.n	824de <_svfprintf_r+0x97e>
   824d4:	3f10      	subs	r7, #16
   824d6:	2f10      	cmp	r7, #16
   824d8:	f102 0208 	add.w	r2, r2, #8
   824dc:	dd15      	ble.n	8250a <_svfprintf_r+0x9aa>
   824de:	3301      	adds	r3, #1
   824e0:	3110      	adds	r1, #16
   824e2:	2b07      	cmp	r3, #7
   824e4:	9127      	str	r1, [sp, #156]	; 0x9c
   824e6:	9326      	str	r3, [sp, #152]	; 0x98
   824e8:	e882 0840 	stmia.w	r2, {r6, fp}
   824ec:	ddf2      	ble.n	824d4 <_svfprintf_r+0x974>
   824ee:	aa25      	add	r2, sp, #148	; 0x94
   824f0:	4629      	mov	r1, r5
   824f2:	4620      	mov	r0, r4
   824f4:	f002 fc38 	bl	84d68 <__ssprint_r>
   824f8:	2800      	cmp	r0, #0
   824fa:	f47f ac0e 	bne.w	81d1a <_svfprintf_r+0x1ba>
   824fe:	3f10      	subs	r7, #16
   82500:	2f10      	cmp	r7, #16
   82502:	464a      	mov	r2, r9
   82504:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82506:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82508:	dce9      	bgt.n	824de <_svfprintf_r+0x97e>
   8250a:	4635      	mov	r5, r6
   8250c:	460c      	mov	r4, r1
   8250e:	4646      	mov	r6, r8
   82510:	4690      	mov	r8, r2
   82512:	3301      	adds	r3, #1
   82514:	443c      	add	r4, r7
   82516:	2b07      	cmp	r3, #7
   82518:	9427      	str	r4, [sp, #156]	; 0x9c
   8251a:	9326      	str	r3, [sp, #152]	; 0x98
   8251c:	e888 00a0 	stmia.w	r8, {r5, r7}
   82520:	f300 829e 	bgt.w	82a60 <_svfprintf_r+0xf00>
   82524:	f108 0808 	add.w	r8, r8, #8
   82528:	e4bc      	b.n	81ea4 <_svfprintf_r+0x344>
   8252a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8252c:	2b01      	cmp	r3, #1
   8252e:	f340 824f 	ble.w	829d0 <_svfprintf_r+0xe70>
   82532:	2301      	movs	r3, #1
   82534:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82536:	441c      	add	r4, r3
   82538:	441f      	add	r7, r3
   8253a:	2f07      	cmp	r7, #7
   8253c:	9427      	str	r4, [sp, #156]	; 0x9c
   8253e:	f8c8 6000 	str.w	r6, [r8]
   82542:	9726      	str	r7, [sp, #152]	; 0x98
   82544:	f8c8 3004 	str.w	r3, [r8, #4]
   82548:	f300 825f 	bgt.w	82a0a <_svfprintf_r+0xeaa>
   8254c:	f108 0808 	add.w	r8, r8, #8
   82550:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82552:	3701      	adds	r7, #1
   82554:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   82556:	4414      	add	r4, r2
   82558:	2f07      	cmp	r7, #7
   8255a:	9427      	str	r4, [sp, #156]	; 0x9c
   8255c:	9726      	str	r7, [sp, #152]	; 0x98
   8255e:	f8c8 3000 	str.w	r3, [r8]
   82562:	f8c8 2004 	str.w	r2, [r8, #4]
   82566:	f300 825c 	bgt.w	82a22 <_svfprintf_r+0xec2>
   8256a:	f108 0808 	add.w	r8, r8, #8
   8256e:	a815      	add	r0, sp, #84	; 0x54
   82570:	c80d      	ldmia	r0, {r0, r2, r3}
   82572:	9914      	ldr	r1, [sp, #80]	; 0x50
   82574:	f003 fc84 	bl	85e80 <__aeabi_dcmpeq>
   82578:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8257a:	2800      	cmp	r0, #0
   8257c:	f040 8141 	bne.w	82802 <_svfprintf_r+0xca2>
   82580:	3b01      	subs	r3, #1
   82582:	3701      	adds	r7, #1
   82584:	3601      	adds	r6, #1
   82586:	441c      	add	r4, r3
   82588:	2f07      	cmp	r7, #7
   8258a:	f8c8 6000 	str.w	r6, [r8]
   8258e:	9726      	str	r7, [sp, #152]	; 0x98
   82590:	9427      	str	r4, [sp, #156]	; 0x9c
   82592:	f8c8 3004 	str.w	r3, [r8, #4]
   82596:	f300 8166 	bgt.w	82866 <_svfprintf_r+0xd06>
   8259a:	f108 0808 	add.w	r8, r8, #8
   8259e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   825a0:	3701      	adds	r7, #1
   825a2:	4414      	add	r4, r2
   825a4:	ab21      	add	r3, sp, #132	; 0x84
   825a6:	2f07      	cmp	r7, #7
   825a8:	9427      	str	r4, [sp, #156]	; 0x9c
   825aa:	9726      	str	r7, [sp, #152]	; 0x98
   825ac:	f8c8 2004 	str.w	r2, [r8, #4]
   825b0:	f8c8 3000 	str.w	r3, [r8]
   825b4:	f77f acc4 	ble.w	81f40 <_svfprintf_r+0x3e0>
   825b8:	aa25      	add	r2, sp, #148	; 0x94
   825ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825bc:	980c      	ldr	r0, [sp, #48]	; 0x30
   825be:	f002 fbd3 	bl	84d68 <__ssprint_r>
   825c2:	2800      	cmp	r0, #0
   825c4:	f47f aba9 	bne.w	81d1a <_svfprintf_r+0x1ba>
   825c8:	46c8      	mov	r8, r9
   825ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   825cc:	e4ba      	b.n	81f44 <_svfprintf_r+0x3e4>
   825ce:	aa25      	add	r2, sp, #148	; 0x94
   825d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825d2:	980c      	ldr	r0, [sp, #48]	; 0x30
   825d4:	f002 fbc8 	bl	84d68 <__ssprint_r>
   825d8:	2800      	cmp	r0, #0
   825da:	f43f acfd 	beq.w	81fd8 <_svfprintf_r+0x478>
   825de:	f7ff bb9c 	b.w	81d1a <_svfprintf_r+0x1ba>
   825e2:	f8dd b01c 	ldr.w	fp, [sp, #28]
   825e6:	2b01      	cmp	r3, #1
   825e8:	f000 817e 	beq.w	828e8 <_svfprintf_r+0xd88>
   825ec:	2b02      	cmp	r3, #2
   825ee:	d171      	bne.n	826d4 <_svfprintf_r+0xb74>
   825f0:	f8cd b01c 	str.w	fp, [sp, #28]
   825f4:	2400      	movs	r4, #0
   825f6:	2500      	movs	r5, #0
   825f8:	e5d4      	b.n	821a4 <_svfprintf_r+0x644>
   825fa:	aa25      	add	r2, sp, #148	; 0x94
   825fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825fe:	980c      	ldr	r0, [sp, #48]	; 0x30
   82600:	f002 fbb2 	bl	84d68 <__ssprint_r>
   82604:	2800      	cmp	r0, #0
   82606:	f47f ab88 	bne.w	81d1a <_svfprintf_r+0x1ba>
   8260a:	46c8      	mov	r8, r9
   8260c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8260e:	e486      	b.n	81f1e <_svfprintf_r+0x3be>
   82610:	aa25      	add	r2, sp, #148	; 0x94
   82612:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82614:	980c      	ldr	r0, [sp, #48]	; 0x30
   82616:	f002 fba7 	bl	84d68 <__ssprint_r>
   8261a:	2800      	cmp	r0, #0
   8261c:	f47f ab7d 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82620:	46c8      	mov	r8, r9
   82622:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82624:	e429      	b.n	81e7a <_svfprintf_r+0x31a>
   82626:	2001      	movs	r0, #1
   82628:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8262a:	4a2d      	ldr	r2, [pc, #180]	; (826e0 <_svfprintf_r+0xb80>)
   8262c:	4403      	add	r3, r0
   8262e:	4404      	add	r4, r0
   82630:	2b07      	cmp	r3, #7
   82632:	9427      	str	r4, [sp, #156]	; 0x9c
   82634:	9326      	str	r3, [sp, #152]	; 0x98
   82636:	f8c8 0004 	str.w	r0, [r8, #4]
   8263a:	f8c8 2000 	str.w	r2, [r8]
   8263e:	f340 82d8 	ble.w	82bf2 <_svfprintf_r+0x1092>
   82642:	aa25      	add	r2, sp, #148	; 0x94
   82644:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82646:	980c      	ldr	r0, [sp, #48]	; 0x30
   82648:	f002 fb8e 	bl	84d68 <__ssprint_r>
   8264c:	2800      	cmp	r0, #0
   8264e:	f47f ab64 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82652:	46c8      	mov	r8, r9
   82654:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82656:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82658:	b929      	cbnz	r1, 82666 <_svfprintf_r+0xb06>
   8265a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8265c:	b91b      	cbnz	r3, 82666 <_svfprintf_r+0xb06>
   8265e:	9b07      	ldr	r3, [sp, #28]
   82660:	07d8      	lsls	r0, r3, #31
   82662:	f57f ac6f 	bpl.w	81f44 <_svfprintf_r+0x3e4>
   82666:	9819      	ldr	r0, [sp, #100]	; 0x64
   82668:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8266a:	4602      	mov	r2, r0
   8266c:	3301      	adds	r3, #1
   8266e:	4422      	add	r2, r4
   82670:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   82672:	2b07      	cmp	r3, #7
   82674:	9227      	str	r2, [sp, #156]	; 0x9c
   82676:	f8c8 4000 	str.w	r4, [r8]
   8267a:	f8c8 0004 	str.w	r0, [r8, #4]
   8267e:	9326      	str	r3, [sp, #152]	; 0x98
   82680:	f300 8431 	bgt.w	82ee6 <_svfprintf_r+0x1386>
   82684:	f108 0808 	add.w	r8, r8, #8
   82688:	2900      	cmp	r1, #0
   8268a:	f2c0 8409 	blt.w	82ea0 <_svfprintf_r+0x1340>
   8268e:	9913      	ldr	r1, [sp, #76]	; 0x4c
   82690:	3301      	adds	r3, #1
   82692:	188c      	adds	r4, r1, r2
   82694:	2b07      	cmp	r3, #7
   82696:	9427      	str	r4, [sp, #156]	; 0x9c
   82698:	9326      	str	r3, [sp, #152]	; 0x98
   8269a:	f8c8 6000 	str.w	r6, [r8]
   8269e:	f8c8 1004 	str.w	r1, [r8, #4]
   826a2:	f77f ac4d 	ble.w	81f40 <_svfprintf_r+0x3e0>
   826a6:	aa25      	add	r2, sp, #148	; 0x94
   826a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   826aa:	980c      	ldr	r0, [sp, #48]	; 0x30
   826ac:	f002 fb5c 	bl	84d68 <__ssprint_r>
   826b0:	2800      	cmp	r0, #0
   826b2:	f47f ab32 	bne.w	81d1a <_svfprintf_r+0x1ba>
   826b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   826b8:	46c8      	mov	r8, r9
   826ba:	e443      	b.n	81f44 <_svfprintf_r+0x3e4>
   826bc:	aa25      	add	r2, sp, #148	; 0x94
   826be:	990b      	ldr	r1, [sp, #44]	; 0x2c
   826c0:	980c      	ldr	r0, [sp, #48]	; 0x30
   826c2:	f002 fb51 	bl	84d68 <__ssprint_r>
   826c6:	2800      	cmp	r0, #0
   826c8:	f47f ab27 	bne.w	81d1a <_svfprintf_r+0x1ba>
   826cc:	46c8      	mov	r8, r9
   826ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   826d0:	f7ff bbe5 	b.w	81e9e <_svfprintf_r+0x33e>
   826d4:	2400      	movs	r4, #0
   826d6:	2500      	movs	r5, #0
   826d8:	f8cd b01c 	str.w	fp, [sp, #28]
   826dc:	4649      	mov	r1, r9
   826de:	e004      	b.n	826ea <_svfprintf_r+0xb8a>
   826e0:	000863dc 	.word	0x000863dc
   826e4:	000863f0 	.word	0x000863f0
   826e8:	4631      	mov	r1, r6
   826ea:	08e2      	lsrs	r2, r4, #3
   826ec:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   826f0:	08e8      	lsrs	r0, r5, #3
   826f2:	f004 0307 	and.w	r3, r4, #7
   826f6:	4605      	mov	r5, r0
   826f8:	4614      	mov	r4, r2
   826fa:	3330      	adds	r3, #48	; 0x30
   826fc:	ea54 0205 	orrs.w	r2, r4, r5
   82700:	f801 3c01 	strb.w	r3, [r1, #-1]
   82704:	f101 36ff 	add.w	r6, r1, #4294967295
   82708:	d1ee      	bne.n	826e8 <_svfprintf_r+0xb88>
   8270a:	9a07      	ldr	r2, [sp, #28]
   8270c:	07d2      	lsls	r2, r2, #31
   8270e:	f57f ad59 	bpl.w	821c4 <_svfprintf_r+0x664>
   82712:	2b30      	cmp	r3, #48	; 0x30
   82714:	f43f ad56 	beq.w	821c4 <_svfprintf_r+0x664>
   82718:	2330      	movs	r3, #48	; 0x30
   8271a:	3902      	subs	r1, #2
   8271c:	f806 3c01 	strb.w	r3, [r6, #-1]
   82720:	eba9 0301 	sub.w	r3, r9, r1
   82724:	930e      	str	r3, [sp, #56]	; 0x38
   82726:	460e      	mov	r6, r1
   82728:	f7ff bb36 	b.w	81d98 <_svfprintf_r+0x238>
   8272c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8272e:	2900      	cmp	r1, #0
   82730:	f77f af79 	ble.w	82626 <_svfprintf_r+0xac6>
   82734:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82736:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82738:	4293      	cmp	r3, r2
   8273a:	bfa8      	it	ge
   8273c:	4613      	movge	r3, r2
   8273e:	2b00      	cmp	r3, #0
   82740:	461f      	mov	r7, r3
   82742:	dd0b      	ble.n	8275c <_svfprintf_r+0xbfc>
   82744:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82746:	443c      	add	r4, r7
   82748:	3301      	adds	r3, #1
   8274a:	2b07      	cmp	r3, #7
   8274c:	9427      	str	r4, [sp, #156]	; 0x9c
   8274e:	e888 00c0 	stmia.w	r8, {r6, r7}
   82752:	9326      	str	r3, [sp, #152]	; 0x98
   82754:	f300 82fb 	bgt.w	82d4e <_svfprintf_r+0x11ee>
   82758:	f108 0808 	add.w	r8, r8, #8
   8275c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8275e:	2f00      	cmp	r7, #0
   82760:	bfa8      	it	ge
   82762:	1bdb      	subge	r3, r3, r7
   82764:	2b00      	cmp	r3, #0
   82766:	461f      	mov	r7, r3
   82768:	f340 80d7 	ble.w	8291a <_svfprintf_r+0xdba>
   8276c:	2b10      	cmp	r3, #16
   8276e:	f340 8434 	ble.w	82fda <_svfprintf_r+0x147a>
   82772:	4dba      	ldr	r5, [pc, #744]	; (82a5c <_svfprintf_r+0xefc>)
   82774:	4642      	mov	r2, r8
   82776:	4621      	mov	r1, r4
   82778:	46b0      	mov	r8, r6
   8277a:	f04f 0b10 	mov.w	fp, #16
   8277e:	462e      	mov	r6, r5
   82780:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82782:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82784:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82786:	e004      	b.n	82792 <_svfprintf_r+0xc32>
   82788:	3208      	adds	r2, #8
   8278a:	3f10      	subs	r7, #16
   8278c:	2f10      	cmp	r7, #16
   8278e:	f340 80b5 	ble.w	828fc <_svfprintf_r+0xd9c>
   82792:	3301      	adds	r3, #1
   82794:	3110      	adds	r1, #16
   82796:	2b07      	cmp	r3, #7
   82798:	9127      	str	r1, [sp, #156]	; 0x9c
   8279a:	9326      	str	r3, [sp, #152]	; 0x98
   8279c:	e882 0840 	stmia.w	r2, {r6, fp}
   827a0:	ddf2      	ble.n	82788 <_svfprintf_r+0xc28>
   827a2:	aa25      	add	r2, sp, #148	; 0x94
   827a4:	4629      	mov	r1, r5
   827a6:	4620      	mov	r0, r4
   827a8:	f002 fade 	bl	84d68 <__ssprint_r>
   827ac:	2800      	cmp	r0, #0
   827ae:	f47f aab4 	bne.w	81d1a <_svfprintf_r+0x1ba>
   827b2:	464a      	mov	r2, r9
   827b4:	9927      	ldr	r1, [sp, #156]	; 0x9c
   827b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   827b8:	e7e7      	b.n	8278a <_svfprintf_r+0xc2a>
   827ba:	2d00      	cmp	r5, #0
   827bc:	bf08      	it	eq
   827be:	2c0a      	cmpeq	r4, #10
   827c0:	f0c0 8090 	bcc.w	828e4 <_svfprintf_r+0xd84>
   827c4:	464e      	mov	r6, r9
   827c6:	4620      	mov	r0, r4
   827c8:	4629      	mov	r1, r5
   827ca:	220a      	movs	r2, #10
   827cc:	2300      	movs	r3, #0
   827ce:	f003 fbc7 	bl	85f60 <__aeabi_uldivmod>
   827d2:	3230      	adds	r2, #48	; 0x30
   827d4:	f806 2d01 	strb.w	r2, [r6, #-1]!
   827d8:	4620      	mov	r0, r4
   827da:	4629      	mov	r1, r5
   827dc:	2300      	movs	r3, #0
   827de:	220a      	movs	r2, #10
   827e0:	f003 fbbe 	bl	85f60 <__aeabi_uldivmod>
   827e4:	4604      	mov	r4, r0
   827e6:	460d      	mov	r5, r1
   827e8:	ea54 0305 	orrs.w	r3, r4, r5
   827ec:	d1eb      	bne.n	827c6 <_svfprintf_r+0xc66>
   827ee:	eba9 0306 	sub.w	r3, r9, r6
   827f2:	930e      	str	r3, [sp, #56]	; 0x38
   827f4:	f7ff bad0 	b.w	81d98 <_svfprintf_r+0x238>
   827f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   827fa:	464e      	mov	r6, r9
   827fc:	930e      	str	r3, [sp, #56]	; 0x38
   827fe:	f7ff bacb 	b.w	81d98 <_svfprintf_r+0x238>
   82802:	1e5e      	subs	r6, r3, #1
   82804:	2e00      	cmp	r6, #0
   82806:	f77f aeca 	ble.w	8259e <_svfprintf_r+0xa3e>
   8280a:	2e10      	cmp	r6, #16
   8280c:	f340 83e3 	ble.w	82fd6 <_svfprintf_r+0x1476>
   82810:	4622      	mov	r2, r4
   82812:	f04f 0b10 	mov.w	fp, #16
   82816:	4d91      	ldr	r5, [pc, #580]	; (82a5c <_svfprintf_r+0xefc>)
   82818:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8281a:	e004      	b.n	82826 <_svfprintf_r+0xcc6>
   8281c:	3e10      	subs	r6, #16
   8281e:	2e10      	cmp	r6, #16
   82820:	f108 0808 	add.w	r8, r8, #8
   82824:	dd15      	ble.n	82852 <_svfprintf_r+0xcf2>
   82826:	3701      	adds	r7, #1
   82828:	3210      	adds	r2, #16
   8282a:	2f07      	cmp	r7, #7
   8282c:	9227      	str	r2, [sp, #156]	; 0x9c
   8282e:	9726      	str	r7, [sp, #152]	; 0x98
   82830:	e888 0820 	stmia.w	r8, {r5, fp}
   82834:	ddf2      	ble.n	8281c <_svfprintf_r+0xcbc>
   82836:	aa25      	add	r2, sp, #148	; 0x94
   82838:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8283a:	4620      	mov	r0, r4
   8283c:	f002 fa94 	bl	84d68 <__ssprint_r>
   82840:	2800      	cmp	r0, #0
   82842:	f47f aa6a 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82846:	3e10      	subs	r6, #16
   82848:	2e10      	cmp	r6, #16
   8284a:	46c8      	mov	r8, r9
   8284c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8284e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82850:	dce9      	bgt.n	82826 <_svfprintf_r+0xcc6>
   82852:	4614      	mov	r4, r2
   82854:	3701      	adds	r7, #1
   82856:	4434      	add	r4, r6
   82858:	2f07      	cmp	r7, #7
   8285a:	9427      	str	r4, [sp, #156]	; 0x9c
   8285c:	9726      	str	r7, [sp, #152]	; 0x98
   8285e:	e888 0060 	stmia.w	r8, {r5, r6}
   82862:	f77f ae9a 	ble.w	8259a <_svfprintf_r+0xa3a>
   82866:	aa25      	add	r2, sp, #148	; 0x94
   82868:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8286a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8286c:	f002 fa7c 	bl	84d68 <__ssprint_r>
   82870:	2800      	cmp	r0, #0
   82872:	f47f aa52 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82876:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82878:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8287a:	46c8      	mov	r8, r9
   8287c:	e68f      	b.n	8259e <_svfprintf_r+0xa3e>
   8287e:	3204      	adds	r2, #4
   82880:	681c      	ldr	r4, [r3, #0]
   82882:	2500      	movs	r5, #0
   82884:	2301      	movs	r3, #1
   82886:	920f      	str	r2, [sp, #60]	; 0x3c
   82888:	f7ff ba68 	b.w	81d5c <_svfprintf_r+0x1fc>
   8288c:	681c      	ldr	r4, [r3, #0]
   8288e:	3304      	adds	r3, #4
   82890:	930f      	str	r3, [sp, #60]	; 0x3c
   82892:	2500      	movs	r5, #0
   82894:	e42a      	b.n	820ec <_svfprintf_r+0x58c>
   82896:	681c      	ldr	r4, [r3, #0]
   82898:	3304      	adds	r3, #4
   8289a:	17e5      	asrs	r5, r4, #31
   8289c:	4622      	mov	r2, r4
   8289e:	930f      	str	r3, [sp, #60]	; 0x3c
   828a0:	462b      	mov	r3, r5
   828a2:	2a00      	cmp	r2, #0
   828a4:	f173 0300 	sbcs.w	r3, r3, #0
   828a8:	f6bf ac68 	bge.w	8217c <_svfprintf_r+0x61c>
   828ac:	272d      	movs	r7, #45	; 0x2d
   828ae:	4264      	negs	r4, r4
   828b0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   828b4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   828b8:	2301      	movs	r3, #1
   828ba:	f7ff ba53 	b.w	81d64 <_svfprintf_r+0x204>
   828be:	990f      	ldr	r1, [sp, #60]	; 0x3c
   828c0:	2500      	movs	r5, #0
   828c2:	460a      	mov	r2, r1
   828c4:	3204      	adds	r2, #4
   828c6:	680c      	ldr	r4, [r1, #0]
   828c8:	920f      	str	r2, [sp, #60]	; 0x3c
   828ca:	f7ff ba47 	b.w	81d5c <_svfprintf_r+0x1fc>
   828ce:	4614      	mov	r4, r2
   828d0:	3301      	adds	r3, #1
   828d2:	4434      	add	r4, r6
   828d4:	2b07      	cmp	r3, #7
   828d6:	9427      	str	r4, [sp, #156]	; 0x9c
   828d8:	9326      	str	r3, [sp, #152]	; 0x98
   828da:	e888 0060 	stmia.w	r8, {r5, r6}
   828de:	f77f ab2f 	ble.w	81f40 <_svfprintf_r+0x3e0>
   828e2:	e6e0      	b.n	826a6 <_svfprintf_r+0xb46>
   828e4:	f8dd b01c 	ldr.w	fp, [sp, #28]
   828e8:	2301      	movs	r3, #1
   828ea:	ae42      	add	r6, sp, #264	; 0x108
   828ec:	3430      	adds	r4, #48	; 0x30
   828ee:	f8cd b01c 	str.w	fp, [sp, #28]
   828f2:	f806 4d41 	strb.w	r4, [r6, #-65]!
   828f6:	930e      	str	r3, [sp, #56]	; 0x38
   828f8:	f7ff ba4e 	b.w	81d98 <_svfprintf_r+0x238>
   828fc:	4635      	mov	r5, r6
   828fe:	460c      	mov	r4, r1
   82900:	4646      	mov	r6, r8
   82902:	4690      	mov	r8, r2
   82904:	3301      	adds	r3, #1
   82906:	443c      	add	r4, r7
   82908:	2b07      	cmp	r3, #7
   8290a:	9427      	str	r4, [sp, #156]	; 0x9c
   8290c:	9326      	str	r3, [sp, #152]	; 0x98
   8290e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82912:	f300 8246 	bgt.w	82da2 <_svfprintf_r+0x1242>
   82916:	f108 0808 	add.w	r8, r8, #8
   8291a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8291c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8291e:	429a      	cmp	r2, r3
   82920:	db45      	blt.n	829ae <_svfprintf_r+0xe4e>
   82922:	9b07      	ldr	r3, [sp, #28]
   82924:	07d9      	lsls	r1, r3, #31
   82926:	d442      	bmi.n	829ae <_svfprintf_r+0xe4e>
   82928:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8292a:	9812      	ldr	r0, [sp, #72]	; 0x48
   8292c:	1a9a      	subs	r2, r3, r2
   8292e:	1a1d      	subs	r5, r3, r0
   82930:	4295      	cmp	r5, r2
   82932:	bfa8      	it	ge
   82934:	4615      	movge	r5, r2
   82936:	2d00      	cmp	r5, #0
   82938:	dd0e      	ble.n	82958 <_svfprintf_r+0xdf8>
   8293a:	9926      	ldr	r1, [sp, #152]	; 0x98
   8293c:	4406      	add	r6, r0
   8293e:	3101      	adds	r1, #1
   82940:	442c      	add	r4, r5
   82942:	2907      	cmp	r1, #7
   82944:	f8c8 6000 	str.w	r6, [r8]
   82948:	9427      	str	r4, [sp, #156]	; 0x9c
   8294a:	f8c8 5004 	str.w	r5, [r8, #4]
   8294e:	9126      	str	r1, [sp, #152]	; 0x98
   82950:	f300 8216 	bgt.w	82d80 <_svfprintf_r+0x1220>
   82954:	f108 0808 	add.w	r8, r8, #8
   82958:	2d00      	cmp	r5, #0
   8295a:	bfb4      	ite	lt
   8295c:	4616      	movlt	r6, r2
   8295e:	1b56      	subge	r6, r2, r5
   82960:	2e00      	cmp	r6, #0
   82962:	f77f aaef 	ble.w	81f44 <_svfprintf_r+0x3e4>
   82966:	2e10      	cmp	r6, #16
   82968:	f340 82f3 	ble.w	82f52 <_svfprintf_r+0x13f2>
   8296c:	4622      	mov	r2, r4
   8296e:	2710      	movs	r7, #16
   82970:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82972:	4d3a      	ldr	r5, [pc, #232]	; (82a5c <_svfprintf_r+0xefc>)
   82974:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82978:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8297a:	e004      	b.n	82986 <_svfprintf_r+0xe26>
   8297c:	f108 0808 	add.w	r8, r8, #8
   82980:	3e10      	subs	r6, #16
   82982:	2e10      	cmp	r6, #16
   82984:	dda3      	ble.n	828ce <_svfprintf_r+0xd6e>
   82986:	3301      	adds	r3, #1
   82988:	3210      	adds	r2, #16
   8298a:	2b07      	cmp	r3, #7
   8298c:	9227      	str	r2, [sp, #156]	; 0x9c
   8298e:	9326      	str	r3, [sp, #152]	; 0x98
   82990:	e888 00a0 	stmia.w	r8, {r5, r7}
   82994:	ddf2      	ble.n	8297c <_svfprintf_r+0xe1c>
   82996:	aa25      	add	r2, sp, #148	; 0x94
   82998:	4621      	mov	r1, r4
   8299a:	4658      	mov	r0, fp
   8299c:	f002 f9e4 	bl	84d68 <__ssprint_r>
   829a0:	2800      	cmp	r0, #0
   829a2:	f47f a9ba 	bne.w	81d1a <_svfprintf_r+0x1ba>
   829a6:	46c8      	mov	r8, r9
   829a8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   829aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   829ac:	e7e8      	b.n	82980 <_svfprintf_r+0xe20>
   829ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
   829b0:	9819      	ldr	r0, [sp, #100]	; 0x64
   829b2:	3301      	adds	r3, #1
   829b4:	991a      	ldr	r1, [sp, #104]	; 0x68
   829b6:	4404      	add	r4, r0
   829b8:	2b07      	cmp	r3, #7
   829ba:	9427      	str	r4, [sp, #156]	; 0x9c
   829bc:	f8c8 1000 	str.w	r1, [r8]
   829c0:	f8c8 0004 	str.w	r0, [r8, #4]
   829c4:	9326      	str	r3, [sp, #152]	; 0x98
   829c6:	f300 81cf 	bgt.w	82d68 <_svfprintf_r+0x1208>
   829ca:	f108 0808 	add.w	r8, r8, #8
   829ce:	e7ab      	b.n	82928 <_svfprintf_r+0xdc8>
   829d0:	9b07      	ldr	r3, [sp, #28]
   829d2:	07da      	lsls	r2, r3, #31
   829d4:	f53f adad 	bmi.w	82532 <_svfprintf_r+0x9d2>
   829d8:	2301      	movs	r3, #1
   829da:	9f26      	ldr	r7, [sp, #152]	; 0x98
   829dc:	441c      	add	r4, r3
   829de:	441f      	add	r7, r3
   829e0:	2f07      	cmp	r7, #7
   829e2:	9427      	str	r4, [sp, #156]	; 0x9c
   829e4:	f8c8 6000 	str.w	r6, [r8]
   829e8:	9726      	str	r7, [sp, #152]	; 0x98
   829ea:	f8c8 3004 	str.w	r3, [r8, #4]
   829ee:	f77f add4 	ble.w	8259a <_svfprintf_r+0xa3a>
   829f2:	aa25      	add	r2, sp, #148	; 0x94
   829f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   829f6:	980c      	ldr	r0, [sp, #48]	; 0x30
   829f8:	f002 f9b6 	bl	84d68 <__ssprint_r>
   829fc:	2800      	cmp	r0, #0
   829fe:	f47f a98c 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82a02:	46c8      	mov	r8, r9
   82a04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a06:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82a08:	e5c9      	b.n	8259e <_svfprintf_r+0xa3e>
   82a0a:	aa25      	add	r2, sp, #148	; 0x94
   82a0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a0e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a10:	f002 f9aa 	bl	84d68 <__ssprint_r>
   82a14:	2800      	cmp	r0, #0
   82a16:	f47f a980 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82a1a:	46c8      	mov	r8, r9
   82a1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a1e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82a20:	e596      	b.n	82550 <_svfprintf_r+0x9f0>
   82a22:	aa25      	add	r2, sp, #148	; 0x94
   82a24:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a26:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a28:	f002 f99e 	bl	84d68 <__ssprint_r>
   82a2c:	2800      	cmp	r0, #0
   82a2e:	f47f a974 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82a32:	46c8      	mov	r8, r9
   82a34:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a36:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82a38:	e599      	b.n	8256e <_svfprintf_r+0xa0e>
   82a3a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82a3c:	3407      	adds	r4, #7
   82a3e:	f024 0407 	bic.w	r4, r4, #7
   82a42:	f104 0108 	add.w	r1, r4, #8
   82a46:	e9d4 2300 	ldrd	r2, r3, [r4]
   82a4a:	910f      	str	r1, [sp, #60]	; 0x3c
   82a4c:	4614      	mov	r4, r2
   82a4e:	461d      	mov	r5, r3
   82a50:	f7ff bb8f 	b.w	82172 <_svfprintf_r+0x612>
   82a54:	464e      	mov	r6, r9
   82a56:	f7ff b99f 	b.w	81d98 <_svfprintf_r+0x238>
   82a5a:	bf00      	nop
   82a5c:	000863f0 	.word	0x000863f0
   82a60:	aa25      	add	r2, sp, #148	; 0x94
   82a62:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82a64:	980c      	ldr	r0, [sp, #48]	; 0x30
   82a66:	f002 f97f 	bl	84d68 <__ssprint_r>
   82a6a:	2800      	cmp	r0, #0
   82a6c:	f47f a955 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82a70:	46c8      	mov	r8, r9
   82a72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a74:	f7ff ba16 	b.w	81ea4 <_svfprintf_r+0x344>
   82a78:	9c15      	ldr	r4, [sp, #84]	; 0x54
   82a7a:	4622      	mov	r2, r4
   82a7c:	4620      	mov	r0, r4
   82a7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82a80:	4623      	mov	r3, r4
   82a82:	4621      	mov	r1, r4
   82a84:	f003 fa2e 	bl	85ee4 <__aeabi_dcmpun>
   82a88:	2800      	cmp	r0, #0
   82a8a:	f040 8273 	bne.w	82f74 <_svfprintf_r+0x1414>
   82a8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82a90:	3301      	adds	r3, #1
   82a92:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82a94:	f023 0320 	bic.w	r3, r3, #32
   82a98:	930e      	str	r3, [sp, #56]	; 0x38
   82a9a:	f000 819c 	beq.w	82dd6 <_svfprintf_r+0x1276>
   82a9e:	2b47      	cmp	r3, #71	; 0x47
   82aa0:	f000 80d6 	beq.w	82c50 <_svfprintf_r+0x10f0>
   82aa4:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   82aa8:	9307      	str	r3, [sp, #28]
   82aaa:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82aac:	1e1f      	subs	r7, r3, #0
   82aae:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82ab0:	9308      	str	r3, [sp, #32]
   82ab2:	bfb7      	itett	lt
   82ab4:	463b      	movlt	r3, r7
   82ab6:	2300      	movge	r3, #0
   82ab8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82abc:	232d      	movlt	r3, #45	; 0x2d
   82abe:	9310      	str	r3, [sp, #64]	; 0x40
   82ac0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82ac2:	2b66      	cmp	r3, #102	; 0x66
   82ac4:	f000 8190 	beq.w	82de8 <_svfprintf_r+0x1288>
   82ac8:	2b46      	cmp	r3, #70	; 0x46
   82aca:	f000 80a4 	beq.w	82c16 <_svfprintf_r+0x10b6>
   82ace:	2002      	movs	r0, #2
   82ad0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82ad2:	a923      	add	r1, sp, #140	; 0x8c
   82ad4:	2b45      	cmp	r3, #69	; 0x45
   82ad6:	bf0a      	itet	eq
   82ad8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   82ada:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82adc:	1c5d      	addeq	r5, r3, #1
   82ade:	e88d 0021 	stmia.w	sp, {r0, r5}
   82ae2:	9104      	str	r1, [sp, #16]
   82ae4:	a820      	add	r0, sp, #128	; 0x80
   82ae6:	a91f      	add	r1, sp, #124	; 0x7c
   82ae8:	463b      	mov	r3, r7
   82aea:	9003      	str	r0, [sp, #12]
   82aec:	9a08      	ldr	r2, [sp, #32]
   82aee:	9102      	str	r1, [sp, #8]
   82af0:	980c      	ldr	r0, [sp, #48]	; 0x30
   82af2:	f000 fb59 	bl	831a8 <_dtoa_r>
   82af6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82af8:	4606      	mov	r6, r0
   82afa:	2b67      	cmp	r3, #103	; 0x67
   82afc:	f040 81ba 	bne.w	82e74 <_svfprintf_r+0x1314>
   82b00:	f01b 0f01 	tst.w	fp, #1
   82b04:	f000 8223 	beq.w	82f4e <_svfprintf_r+0x13ee>
   82b08:	1974      	adds	r4, r6, r5
   82b0a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82b0c:	9808      	ldr	r0, [sp, #32]
   82b0e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82b10:	4639      	mov	r1, r7
   82b12:	f003 f9b5 	bl	85e80 <__aeabi_dcmpeq>
   82b16:	2800      	cmp	r0, #0
   82b18:	f040 8124 	bne.w	82d64 <_svfprintf_r+0x1204>
   82b1c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82b1e:	42a3      	cmp	r3, r4
   82b20:	d206      	bcs.n	82b30 <_svfprintf_r+0xfd0>
   82b22:	2130      	movs	r1, #48	; 0x30
   82b24:	1c5a      	adds	r2, r3, #1
   82b26:	9223      	str	r2, [sp, #140]	; 0x8c
   82b28:	7019      	strb	r1, [r3, #0]
   82b2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82b2c:	429c      	cmp	r4, r3
   82b2e:	d8f9      	bhi.n	82b24 <_svfprintf_r+0xfc4>
   82b30:	1b9b      	subs	r3, r3, r6
   82b32:	9313      	str	r3, [sp, #76]	; 0x4c
   82b34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b36:	2b47      	cmp	r3, #71	; 0x47
   82b38:	f000 80a2 	beq.w	82c80 <_svfprintf_r+0x1120>
   82b3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82b3e:	2b65      	cmp	r3, #101	; 0x65
   82b40:	f340 81a7 	ble.w	82e92 <_svfprintf_r+0x1332>
   82b44:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82b46:	2b66      	cmp	r3, #102	; 0x66
   82b48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82b4a:	9312      	str	r3, [sp, #72]	; 0x48
   82b4c:	f000 8171 	beq.w	82e32 <_svfprintf_r+0x12d2>
   82b50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82b52:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82b54:	4619      	mov	r1, r3
   82b56:	4291      	cmp	r1, r2
   82b58:	f300 815d 	bgt.w	82e16 <_svfprintf_r+0x12b6>
   82b5c:	f01b 0f01 	tst.w	fp, #1
   82b60:	f040 81f0 	bne.w	82f44 <_svfprintf_r+0x13e4>
   82b64:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82b68:	9308      	str	r3, [sp, #32]
   82b6a:	2367      	movs	r3, #103	; 0x67
   82b6c:	920e      	str	r2, [sp, #56]	; 0x38
   82b6e:	9311      	str	r3, [sp, #68]	; 0x44
   82b70:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82b72:	2b00      	cmp	r3, #0
   82b74:	d17d      	bne.n	82c72 <_svfprintf_r+0x1112>
   82b76:	930a      	str	r3, [sp, #40]	; 0x28
   82b78:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82b7c:	f7ff b914 	b.w	81da8 <_svfprintf_r+0x248>
   82b80:	f024 0407 	bic.w	r4, r4, #7
   82b84:	6823      	ldr	r3, [r4, #0]
   82b86:	9315      	str	r3, [sp, #84]	; 0x54
   82b88:	6863      	ldr	r3, [r4, #4]
   82b8a:	9314      	str	r3, [sp, #80]	; 0x50
   82b8c:	f104 0308 	add.w	r3, r4, #8
   82b90:	930f      	str	r3, [sp, #60]	; 0x3c
   82b92:	f7ff bb2f 	b.w	821f4 <_svfprintf_r+0x694>
   82b96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82b98:	6813      	ldr	r3, [r2, #0]
   82b9a:	3204      	adds	r2, #4
   82b9c:	920f      	str	r2, [sp, #60]	; 0x3c
   82b9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82ba0:	601a      	str	r2, [r3, #0]
   82ba2:	f7ff b804 	b.w	81bae <_svfprintf_r+0x4e>
   82ba6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ba8:	4daf      	ldr	r5, [pc, #700]	; (82e68 <_svfprintf_r+0x1308>)
   82baa:	f7ff b9ad 	b.w	81f08 <_svfprintf_r+0x3a8>
   82bae:	aa25      	add	r2, sp, #148	; 0x94
   82bb0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82bb2:	980c      	ldr	r0, [sp, #48]	; 0x30
   82bb4:	f002 f8d8 	bl	84d68 <__ssprint_r>
   82bb8:	2800      	cmp	r0, #0
   82bba:	f47f a8ae 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82bbe:	46c8      	mov	r8, r9
   82bc0:	e431      	b.n	82426 <_svfprintf_r+0x8c6>
   82bc2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82bc4:	4613      	mov	r3, r2
   82bc6:	3304      	adds	r3, #4
   82bc8:	930f      	str	r3, [sp, #60]	; 0x3c
   82bca:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82bcc:	6811      	ldr	r1, [r2, #0]
   82bce:	17dd      	asrs	r5, r3, #31
   82bd0:	461a      	mov	r2, r3
   82bd2:	462b      	mov	r3, r5
   82bd4:	e9c1 2300 	strd	r2, r3, [r1]
   82bd8:	f7fe bfe9 	b.w	81bae <_svfprintf_r+0x4e>
   82bdc:	aa25      	add	r2, sp, #148	; 0x94
   82bde:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82be0:	980c      	ldr	r0, [sp, #48]	; 0x30
   82be2:	f002 f8c1 	bl	84d68 <__ssprint_r>
   82be6:	2800      	cmp	r0, #0
   82be8:	f47f a897 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82bec:	46c8      	mov	r8, r9
   82bee:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82bf0:	e432      	b.n	82458 <_svfprintf_r+0x8f8>
   82bf2:	f108 0808 	add.w	r8, r8, #8
   82bf6:	e52f      	b.n	82658 <_svfprintf_r+0xaf8>
   82bf8:	2140      	movs	r1, #64	; 0x40
   82bfa:	980c      	ldr	r0, [sp, #48]	; 0x30
   82bfc:	f001 fa26 	bl	8404c <_malloc_r>
   82c00:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82c02:	6010      	str	r0, [r2, #0]
   82c04:	6110      	str	r0, [r2, #16]
   82c06:	2800      	cmp	r0, #0
   82c08:	f000 8214 	beq.w	83034 <_svfprintf_r+0x14d4>
   82c0c:	2340      	movs	r3, #64	; 0x40
   82c0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82c10:	6153      	str	r3, [r2, #20]
   82c12:	f7fe bfbc 	b.w	81b8e <_svfprintf_r+0x2e>
   82c16:	2003      	movs	r0, #3
   82c18:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82c1a:	a923      	add	r1, sp, #140	; 0x8c
   82c1c:	e88d 0011 	stmia.w	sp, {r0, r4}
   82c20:	9104      	str	r1, [sp, #16]
   82c22:	a820      	add	r0, sp, #128	; 0x80
   82c24:	a91f      	add	r1, sp, #124	; 0x7c
   82c26:	9003      	str	r0, [sp, #12]
   82c28:	9a08      	ldr	r2, [sp, #32]
   82c2a:	463b      	mov	r3, r7
   82c2c:	9102      	str	r1, [sp, #8]
   82c2e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82c30:	f000 faba 	bl	831a8 <_dtoa_r>
   82c34:	4625      	mov	r5, r4
   82c36:	4606      	mov	r6, r0
   82c38:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82c3a:	1974      	adds	r4, r6, r5
   82c3c:	2b46      	cmp	r3, #70	; 0x46
   82c3e:	f47f af64 	bne.w	82b0a <_svfprintf_r+0xfaa>
   82c42:	7833      	ldrb	r3, [r6, #0]
   82c44:	2b30      	cmp	r3, #48	; 0x30
   82c46:	f000 8187 	beq.w	82f58 <_svfprintf_r+0x13f8>
   82c4a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   82c4c:	442c      	add	r4, r5
   82c4e:	e75c      	b.n	82b0a <_svfprintf_r+0xfaa>
   82c50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c52:	2b00      	cmp	r3, #0
   82c54:	bf08      	it	eq
   82c56:	2301      	moveq	r3, #1
   82c58:	930a      	str	r3, [sp, #40]	; 0x28
   82c5a:	e723      	b.n	82aa4 <_svfprintf_r+0xf44>
   82c5c:	4630      	mov	r0, r6
   82c5e:	950a      	str	r5, [sp, #40]	; 0x28
   82c60:	f7fe fe6c 	bl	8193c <strlen>
   82c64:	940f      	str	r4, [sp, #60]	; 0x3c
   82c66:	900e      	str	r0, [sp, #56]	; 0x38
   82c68:	f8cd b01c 	str.w	fp, [sp, #28]
   82c6c:	4603      	mov	r3, r0
   82c6e:	f7ff b9e7 	b.w	82040 <_svfprintf_r+0x4e0>
   82c72:	272d      	movs	r7, #45	; 0x2d
   82c74:	2300      	movs	r3, #0
   82c76:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82c7a:	930a      	str	r3, [sp, #40]	; 0x28
   82c7c:	f7ff b895 	b.w	81daa <_svfprintf_r+0x24a>
   82c80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82c82:	461a      	mov	r2, r3
   82c84:	9312      	str	r3, [sp, #72]	; 0x48
   82c86:	3303      	adds	r3, #3
   82c88:	db04      	blt.n	82c94 <_svfprintf_r+0x1134>
   82c8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c8c:	4619      	mov	r1, r3
   82c8e:	4291      	cmp	r1, r2
   82c90:	f6bf af5e 	bge.w	82b50 <_svfprintf_r+0xff0>
   82c94:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82c96:	3b02      	subs	r3, #2
   82c98:	9311      	str	r3, [sp, #68]	; 0x44
   82c9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82c9c:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82ca0:	3b01      	subs	r3, #1
   82ca2:	2b00      	cmp	r3, #0
   82ca4:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   82ca8:	bfb4      	ite	lt
   82caa:	222d      	movlt	r2, #45	; 0x2d
   82cac:	222b      	movge	r2, #43	; 0x2b
   82cae:	931f      	str	r3, [sp, #124]	; 0x7c
   82cb0:	bfb8      	it	lt
   82cb2:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   82cb4:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   82cb8:	bfb8      	it	lt
   82cba:	f1c3 0301 	rsblt	r3, r3, #1
   82cbe:	2b09      	cmp	r3, #9
   82cc0:	f340 811f 	ble.w	82f02 <_svfprintf_r+0x13a2>
   82cc4:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   82cc8:	4601      	mov	r1, r0
   82cca:	4c68      	ldr	r4, [pc, #416]	; (82e6c <_svfprintf_r+0x130c>)
   82ccc:	e000      	b.n	82cd0 <_svfprintf_r+0x1170>
   82cce:	4611      	mov	r1, r2
   82cd0:	fb84 5203 	smull	r5, r2, r4, r3
   82cd4:	17dd      	asrs	r5, r3, #31
   82cd6:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   82cda:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   82cde:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82ce2:	3230      	adds	r2, #48	; 0x30
   82ce4:	2d09      	cmp	r5, #9
   82ce6:	f801 2c01 	strb.w	r2, [r1, #-1]
   82cea:	462b      	mov	r3, r5
   82cec:	f101 32ff 	add.w	r2, r1, #4294967295
   82cf0:	dced      	bgt.n	82cce <_svfprintf_r+0x116e>
   82cf2:	3330      	adds	r3, #48	; 0x30
   82cf4:	3902      	subs	r1, #2
   82cf6:	b2dc      	uxtb	r4, r3
   82cf8:	4288      	cmp	r0, r1
   82cfa:	f802 4c01 	strb.w	r4, [r2, #-1]
   82cfe:	f240 8192 	bls.w	83026 <_svfprintf_r+0x14c6>
   82d02:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   82d06:	4613      	mov	r3, r2
   82d08:	e001      	b.n	82d0e <_svfprintf_r+0x11ae>
   82d0a:	f813 4b01 	ldrb.w	r4, [r3], #1
   82d0e:	4283      	cmp	r3, r0
   82d10:	f801 4b01 	strb.w	r4, [r1], #1
   82d14:	d1f9      	bne.n	82d0a <_svfprintf_r+0x11aa>
   82d16:	3301      	adds	r3, #1
   82d18:	1a9b      	subs	r3, r3, r2
   82d1a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   82d1e:	4413      	add	r3, r2
   82d20:	aa21      	add	r2, sp, #132	; 0x84
   82d22:	1a9b      	subs	r3, r3, r2
   82d24:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82d26:	931b      	str	r3, [sp, #108]	; 0x6c
   82d28:	2a01      	cmp	r2, #1
   82d2a:	4413      	add	r3, r2
   82d2c:	930e      	str	r3, [sp, #56]	; 0x38
   82d2e:	f340 8148 	ble.w	82fc2 <_svfprintf_r+0x1462>
   82d32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d34:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82d36:	4413      	add	r3, r2
   82d38:	930e      	str	r3, [sp, #56]	; 0x38
   82d3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82d3e:	9308      	str	r3, [sp, #32]
   82d40:	2300      	movs	r3, #0
   82d42:	9312      	str	r3, [sp, #72]	; 0x48
   82d44:	e714      	b.n	82b70 <_svfprintf_r+0x1010>
   82d46:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d48:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82d4a:	f7ff b876 	b.w	81e3a <_svfprintf_r+0x2da>
   82d4e:	aa25      	add	r2, sp, #148	; 0x94
   82d50:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d52:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d54:	f002 f808 	bl	84d68 <__ssprint_r>
   82d58:	2800      	cmp	r0, #0
   82d5a:	f47e afde 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82d5e:	46c8      	mov	r8, r9
   82d60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d62:	e4fb      	b.n	8275c <_svfprintf_r+0xbfc>
   82d64:	4623      	mov	r3, r4
   82d66:	e6e3      	b.n	82b30 <_svfprintf_r+0xfd0>
   82d68:	aa25      	add	r2, sp, #148	; 0x94
   82d6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d6c:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d6e:	f001 fffb 	bl	84d68 <__ssprint_r>
   82d72:	2800      	cmp	r0, #0
   82d74:	f47e afd1 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82d78:	46c8      	mov	r8, r9
   82d7a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82d7c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d7e:	e5d3      	b.n	82928 <_svfprintf_r+0xdc8>
   82d80:	aa25      	add	r2, sp, #148	; 0x94
   82d82:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d84:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d86:	f001 ffef 	bl	84d68 <__ssprint_r>
   82d8a:	2800      	cmp	r0, #0
   82d8c:	f47e afc5 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82d90:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82d92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82d94:	46c8      	mov	r8, r9
   82d96:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d98:	1a9a      	subs	r2, r3, r2
   82d9a:	e5dd      	b.n	82958 <_svfprintf_r+0xdf8>
   82d9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d9e:	f7ff b8fe 	b.w	81f9e <_svfprintf_r+0x43e>
   82da2:	aa25      	add	r2, sp, #148	; 0x94
   82da4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82da6:	980c      	ldr	r0, [sp, #48]	; 0x30
   82da8:	f001 ffde 	bl	84d68 <__ssprint_r>
   82dac:	2800      	cmp	r0, #0
   82dae:	f47e afb4 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82db2:	46c8      	mov	r8, r9
   82db4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82db6:	e5b0      	b.n	8291a <_svfprintf_r+0xdba>
   82db8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82dba:	4637      	mov	r7, r6
   82dbc:	2b06      	cmp	r3, #6
   82dbe:	bf28      	it	cs
   82dc0:	2306      	movcs	r3, #6
   82dc2:	960a      	str	r6, [sp, #40]	; 0x28
   82dc4:	9612      	str	r6, [sp, #72]	; 0x48
   82dc6:	9308      	str	r3, [sp, #32]
   82dc8:	940f      	str	r4, [sp, #60]	; 0x3c
   82dca:	f8cd b01c 	str.w	fp, [sp, #28]
   82dce:	930e      	str	r3, [sp, #56]	; 0x38
   82dd0:	4e27      	ldr	r6, [pc, #156]	; (82e70 <_svfprintf_r+0x1310>)
   82dd2:	f7fe bfe9 	b.w	81da8 <_svfprintf_r+0x248>
   82dd6:	2306      	movs	r3, #6
   82dd8:	930a      	str	r3, [sp, #40]	; 0x28
   82dda:	e663      	b.n	82aa4 <_svfprintf_r+0xf44>
   82ddc:	232d      	movs	r3, #45	; 0x2d
   82dde:	461f      	mov	r7, r3
   82de0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82de4:	f7ff ba28 	b.w	82238 <_svfprintf_r+0x6d8>
   82de8:	2003      	movs	r0, #3
   82dea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82dec:	a923      	add	r1, sp, #140	; 0x8c
   82dee:	e88d 0011 	stmia.w	sp, {r0, r4}
   82df2:	9104      	str	r1, [sp, #16]
   82df4:	a820      	add	r0, sp, #128	; 0x80
   82df6:	a91f      	add	r1, sp, #124	; 0x7c
   82df8:	9003      	str	r0, [sp, #12]
   82dfa:	9a08      	ldr	r2, [sp, #32]
   82dfc:	463b      	mov	r3, r7
   82dfe:	9102      	str	r1, [sp, #8]
   82e00:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e02:	f000 f9d1 	bl	831a8 <_dtoa_r>
   82e06:	4625      	mov	r5, r4
   82e08:	4606      	mov	r6, r0
   82e0a:	1904      	adds	r4, r0, r4
   82e0c:	e719      	b.n	82c42 <_svfprintf_r+0x10e2>
   82e0e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82e10:	4d15      	ldr	r5, [pc, #84]	; (82e68 <_svfprintf_r+0x1308>)
   82e12:	f7ff bb7e 	b.w	82512 <_svfprintf_r+0x9b2>
   82e16:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82e18:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82e1a:	4413      	add	r3, r2
   82e1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82e1e:	930e      	str	r3, [sp, #56]	; 0x38
   82e20:	2a00      	cmp	r2, #0
   82e22:	f340 80c7 	ble.w	82fb4 <_svfprintf_r+0x1454>
   82e26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82e2a:	9308      	str	r3, [sp, #32]
   82e2c:	2367      	movs	r3, #103	; 0x67
   82e2e:	9311      	str	r3, [sp, #68]	; 0x44
   82e30:	e69e      	b.n	82b70 <_svfprintf_r+0x1010>
   82e32:	2b00      	cmp	r3, #0
   82e34:	f340 80e1 	ble.w	82ffa <_svfprintf_r+0x149a>
   82e38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82e3a:	2a00      	cmp	r2, #0
   82e3c:	f040 80b0 	bne.w	82fa0 <_svfprintf_r+0x1440>
   82e40:	f01b 0f01 	tst.w	fp, #1
   82e44:	f040 80ac 	bne.w	82fa0 <_svfprintf_r+0x1440>
   82e48:	9308      	str	r3, [sp, #32]
   82e4a:	930e      	str	r3, [sp, #56]	; 0x38
   82e4c:	e690      	b.n	82b70 <_svfprintf_r+0x1010>
   82e4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82e50:	940f      	str	r4, [sp, #60]	; 0x3c
   82e52:	9308      	str	r3, [sp, #32]
   82e54:	930e      	str	r3, [sp, #56]	; 0x38
   82e56:	900a      	str	r0, [sp, #40]	; 0x28
   82e58:	f8cd b01c 	str.w	fp, [sp, #28]
   82e5c:	9012      	str	r0, [sp, #72]	; 0x48
   82e5e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82e62:	f7fe bfa1 	b.w	81da8 <_svfprintf_r+0x248>
   82e66:	bf00      	nop
   82e68:	000863f0 	.word	0x000863f0
   82e6c:	66666667 	.word	0x66666667
   82e70:	000863d4 	.word	0x000863d4
   82e74:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82e76:	2b47      	cmp	r3, #71	; 0x47
   82e78:	f47f ae46 	bne.w	82b08 <_svfprintf_r+0xfa8>
   82e7c:	f01b 0f01 	tst.w	fp, #1
   82e80:	f47f aeda 	bne.w	82c38 <_svfprintf_r+0x10d8>
   82e84:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82e86:	1b9b      	subs	r3, r3, r6
   82e88:	9313      	str	r3, [sp, #76]	; 0x4c
   82e8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e8c:	2b47      	cmp	r3, #71	; 0x47
   82e8e:	f43f aef7 	beq.w	82c80 <_svfprintf_r+0x1120>
   82e92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82e94:	9312      	str	r3, [sp, #72]	; 0x48
   82e96:	e700      	b.n	82c9a <_svfprintf_r+0x113a>
   82e98:	2000      	movs	r0, #0
   82e9a:	900a      	str	r0, [sp, #40]	; 0x28
   82e9c:	f7fe bebc 	b.w	81c18 <_svfprintf_r+0xb8>
   82ea0:	424f      	negs	r7, r1
   82ea2:	3110      	adds	r1, #16
   82ea4:	da35      	bge.n	82f12 <_svfprintf_r+0x13b2>
   82ea6:	2410      	movs	r4, #16
   82ea8:	4d6a      	ldr	r5, [pc, #424]	; (83054 <_svfprintf_r+0x14f4>)
   82eaa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82eae:	e004      	b.n	82eba <_svfprintf_r+0x135a>
   82eb0:	f108 0808 	add.w	r8, r8, #8
   82eb4:	3f10      	subs	r7, #16
   82eb6:	2f10      	cmp	r7, #16
   82eb8:	dd2c      	ble.n	82f14 <_svfprintf_r+0x13b4>
   82eba:	3301      	adds	r3, #1
   82ebc:	3210      	adds	r2, #16
   82ebe:	2b07      	cmp	r3, #7
   82ec0:	9227      	str	r2, [sp, #156]	; 0x9c
   82ec2:	9326      	str	r3, [sp, #152]	; 0x98
   82ec4:	f8c8 5000 	str.w	r5, [r8]
   82ec8:	f8c8 4004 	str.w	r4, [r8, #4]
   82ecc:	ddf0      	ble.n	82eb0 <_svfprintf_r+0x1350>
   82ece:	aa25      	add	r2, sp, #148	; 0x94
   82ed0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ed2:	4658      	mov	r0, fp
   82ed4:	f001 ff48 	bl	84d68 <__ssprint_r>
   82ed8:	2800      	cmp	r0, #0
   82eda:	f47e af1e 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82ede:	46c8      	mov	r8, r9
   82ee0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82ee2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ee4:	e7e6      	b.n	82eb4 <_svfprintf_r+0x1354>
   82ee6:	aa25      	add	r2, sp, #148	; 0x94
   82ee8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82eea:	980c      	ldr	r0, [sp, #48]	; 0x30
   82eec:	f001 ff3c 	bl	84d68 <__ssprint_r>
   82ef0:	2800      	cmp	r0, #0
   82ef2:	f47e af12 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82ef6:	46c8      	mov	r8, r9
   82ef8:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82efa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82efc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82efe:	f7ff bbc3 	b.w	82688 <_svfprintf_r+0xb28>
   82f02:	2230      	movs	r2, #48	; 0x30
   82f04:	4413      	add	r3, r2
   82f06:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   82f0a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   82f0e:	ab22      	add	r3, sp, #136	; 0x88
   82f10:	e706      	b.n	82d20 <_svfprintf_r+0x11c0>
   82f12:	4d50      	ldr	r5, [pc, #320]	; (83054 <_svfprintf_r+0x14f4>)
   82f14:	3301      	adds	r3, #1
   82f16:	443a      	add	r2, r7
   82f18:	2b07      	cmp	r3, #7
   82f1a:	e888 00a0 	stmia.w	r8, {r5, r7}
   82f1e:	9227      	str	r2, [sp, #156]	; 0x9c
   82f20:	9326      	str	r3, [sp, #152]	; 0x98
   82f22:	f108 0808 	add.w	r8, r8, #8
   82f26:	f77f abb2 	ble.w	8268e <_svfprintf_r+0xb2e>
   82f2a:	aa25      	add	r2, sp, #148	; 0x94
   82f2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82f2e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82f30:	f001 ff1a 	bl	84d68 <__ssprint_r>
   82f34:	2800      	cmp	r0, #0
   82f36:	f47e aef0 	bne.w	81d1a <_svfprintf_r+0x1ba>
   82f3a:	46c8      	mov	r8, r9
   82f3c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82f3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82f40:	f7ff bba5 	b.w	8268e <_svfprintf_r+0xb2e>
   82f44:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82f46:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82f48:	4413      	add	r3, r2
   82f4a:	930e      	str	r3, [sp, #56]	; 0x38
   82f4c:	e76b      	b.n	82e26 <_svfprintf_r+0x12c6>
   82f4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82f50:	e5ee      	b.n	82b30 <_svfprintf_r+0xfd0>
   82f52:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82f54:	4d3f      	ldr	r5, [pc, #252]	; (83054 <_svfprintf_r+0x14f4>)
   82f56:	e4bb      	b.n	828d0 <_svfprintf_r+0xd70>
   82f58:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82f5a:	9808      	ldr	r0, [sp, #32]
   82f5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82f5e:	4639      	mov	r1, r7
   82f60:	f002 ff8e 	bl	85e80 <__aeabi_dcmpeq>
   82f64:	2800      	cmp	r0, #0
   82f66:	f47f ae70 	bne.w	82c4a <_svfprintf_r+0x10ea>
   82f6a:	f1c5 0501 	rsb	r5, r5, #1
   82f6e:	951f      	str	r5, [sp, #124]	; 0x7c
   82f70:	442c      	add	r4, r5
   82f72:	e5ca      	b.n	82b0a <_svfprintf_r+0xfaa>
   82f74:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82f76:	4e38      	ldr	r6, [pc, #224]	; (83058 <_svfprintf_r+0x14f8>)
   82f78:	2b00      	cmp	r3, #0
   82f7a:	bfbe      	ittt	lt
   82f7c:	232d      	movlt	r3, #45	; 0x2d
   82f7e:	461f      	movlt	r7, r3
   82f80:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   82f84:	f04f 0303 	mov.w	r3, #3
   82f88:	461a      	mov	r2, r3
   82f8a:	9308      	str	r3, [sp, #32]
   82f8c:	f04f 0300 	mov.w	r3, #0
   82f90:	bfa8      	it	ge
   82f92:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   82f96:	4619      	mov	r1, r3
   82f98:	930a      	str	r3, [sp, #40]	; 0x28
   82f9a:	4b30      	ldr	r3, [pc, #192]	; (8305c <_svfprintf_r+0x14fc>)
   82f9c:	f7ff b954 	b.w	82248 <_svfprintf_r+0x6e8>
   82fa0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82fa2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82fa4:	4413      	add	r3, r2
   82fa6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82fa8:	441a      	add	r2, r3
   82faa:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82fae:	920e      	str	r2, [sp, #56]	; 0x38
   82fb0:	9308      	str	r3, [sp, #32]
   82fb2:	e5dd      	b.n	82b70 <_svfprintf_r+0x1010>
   82fb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82fb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82fb8:	f1c3 0301 	rsb	r3, r3, #1
   82fbc:	441a      	add	r2, r3
   82fbe:	4613      	mov	r3, r2
   82fc0:	e7c3      	b.n	82f4a <_svfprintf_r+0x13ea>
   82fc2:	f01b 0301 	ands.w	r3, fp, #1
   82fc6:	9312      	str	r3, [sp, #72]	; 0x48
   82fc8:	f47f aeb3 	bne.w	82d32 <_svfprintf_r+0x11d2>
   82fcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82fce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82fd2:	9308      	str	r3, [sp, #32]
   82fd4:	e5cc      	b.n	82b70 <_svfprintf_r+0x1010>
   82fd6:	4d1f      	ldr	r5, [pc, #124]	; (83054 <_svfprintf_r+0x14f4>)
   82fd8:	e43c      	b.n	82854 <_svfprintf_r+0xcf4>
   82fda:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82fdc:	4d1d      	ldr	r5, [pc, #116]	; (83054 <_svfprintf_r+0x14f4>)
   82fde:	e491      	b.n	82904 <_svfprintf_r+0xda4>
   82fe0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82fe2:	f89a 3001 	ldrb.w	r3, [sl, #1]
   82fe6:	6828      	ldr	r0, [r5, #0]
   82fe8:	46a2      	mov	sl, r4
   82fea:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   82fee:	900a      	str	r0, [sp, #40]	; 0x28
   82ff0:	4628      	mov	r0, r5
   82ff2:	3004      	adds	r0, #4
   82ff4:	900f      	str	r0, [sp, #60]	; 0x3c
   82ff6:	f7fe be0d 	b.w	81c14 <_svfprintf_r+0xb4>
   82ffa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ffc:	b913      	cbnz	r3, 83004 <_svfprintf_r+0x14a4>
   82ffe:	f01b 0f01 	tst.w	fp, #1
   83002:	d002      	beq.n	8300a <_svfprintf_r+0x14aa>
   83004:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83006:	3301      	adds	r3, #1
   83008:	e7cd      	b.n	82fa6 <_svfprintf_r+0x1446>
   8300a:	2301      	movs	r3, #1
   8300c:	e71c      	b.n	82e48 <_svfprintf_r+0x12e8>
   8300e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83012:	f7ff b980 	b.w	82316 <_svfprintf_r+0x7b6>
   83016:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8301a:	f7ff b93a 	b.w	82292 <_svfprintf_r+0x732>
   8301e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83022:	f7ff b84f 	b.w	820c4 <_svfprintf_r+0x564>
   83026:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   8302a:	e679      	b.n	82d20 <_svfprintf_r+0x11c0>
   8302c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83030:	f7ff b9b2 	b.w	82398 <_svfprintf_r+0x838>
   83034:	f04f 32ff 	mov.w	r2, #4294967295
   83038:	230c      	movs	r3, #12
   8303a:	9209      	str	r2, [sp, #36]	; 0x24
   8303c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8303e:	6013      	str	r3, [r2, #0]
   83040:	f7fe be74 	b.w	81d2c <_svfprintf_r+0x1cc>
   83044:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83048:	f7ff b8c4 	b.w	821d4 <_svfprintf_r+0x674>
   8304c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83050:	f7ff b878 	b.w	82144 <_svfprintf_r+0x5e4>
   83054:	000863f0 	.word	0x000863f0
   83058:	000863a8 	.word	0x000863a8
   8305c:	000863a4 	.word	0x000863a4

00083060 <register_fini>:
   83060:	4b02      	ldr	r3, [pc, #8]	; (8306c <register_fini+0xc>)
   83062:	b113      	cbz	r3, 8306a <register_fini+0xa>
   83064:	4802      	ldr	r0, [pc, #8]	; (83070 <register_fini+0x10>)
   83066:	f000 b805 	b.w	83074 <atexit>
   8306a:	4770      	bx	lr
   8306c:	00000000 	.word	0x00000000
   83070:	00083fed 	.word	0x00083fed

00083074 <atexit>:
   83074:	2300      	movs	r3, #0
   83076:	4601      	mov	r1, r0
   83078:	461a      	mov	r2, r3
   8307a:	4618      	mov	r0, r3
   8307c:	f001 befe 	b.w	84e7c <__register_exitproc>

00083080 <quorem>:
   83080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83084:	6903      	ldr	r3, [r0, #16]
   83086:	690f      	ldr	r7, [r1, #16]
   83088:	b083      	sub	sp, #12
   8308a:	429f      	cmp	r7, r3
   8308c:	f300 8088 	bgt.w	831a0 <quorem+0x120>
   83090:	3f01      	subs	r7, #1
   83092:	f101 0614 	add.w	r6, r1, #20
   83096:	f100 0a14 	add.w	sl, r0, #20
   8309a:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   8309e:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   830a2:	3301      	adds	r3, #1
   830a4:	fbb2 f8f3 	udiv	r8, r2, r3
   830a8:	00bb      	lsls	r3, r7, #2
   830aa:	9300      	str	r3, [sp, #0]
   830ac:	eb06 0903 	add.w	r9, r6, r3
   830b0:	4453      	add	r3, sl
   830b2:	9301      	str	r3, [sp, #4]
   830b4:	f1b8 0f00 	cmp.w	r8, #0
   830b8:	d03b      	beq.n	83132 <quorem+0xb2>
   830ba:	2300      	movs	r3, #0
   830bc:	46b4      	mov	ip, r6
   830be:	461c      	mov	r4, r3
   830c0:	46d6      	mov	lr, sl
   830c2:	f85c 2b04 	ldr.w	r2, [ip], #4
   830c6:	f8de 5000 	ldr.w	r5, [lr]
   830ca:	fa1f fb82 	uxth.w	fp, r2
   830ce:	fb08 330b 	mla	r3, r8, fp, r3
   830d2:	0c12      	lsrs	r2, r2, #16
   830d4:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   830d8:	fb08 bb02 	mla	fp, r8, r2, fp
   830dc:	b29a      	uxth	r2, r3
   830de:	1aa2      	subs	r2, r4, r2
   830e0:	b2ab      	uxth	r3, r5
   830e2:	fa1f f48b 	uxth.w	r4, fp
   830e6:	441a      	add	r2, r3
   830e8:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   830ec:	eb04 4422 	add.w	r4, r4, r2, asr #16
   830f0:	b292      	uxth	r2, r2
   830f2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   830f6:	45e1      	cmp	r9, ip
   830f8:	f84e 2b04 	str.w	r2, [lr], #4
   830fc:	ea4f 4424 	mov.w	r4, r4, asr #16
   83100:	ea4f 431b 	mov.w	r3, fp, lsr #16
   83104:	d2dd      	bcs.n	830c2 <quorem+0x42>
   83106:	9b00      	ldr	r3, [sp, #0]
   83108:	f85a 3003 	ldr.w	r3, [sl, r3]
   8310c:	b98b      	cbnz	r3, 83132 <quorem+0xb2>
   8310e:	9c01      	ldr	r4, [sp, #4]
   83110:	1f23      	subs	r3, r4, #4
   83112:	459a      	cmp	sl, r3
   83114:	d20c      	bcs.n	83130 <quorem+0xb0>
   83116:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8311a:	b94b      	cbnz	r3, 83130 <quorem+0xb0>
   8311c:	f1a4 0308 	sub.w	r3, r4, #8
   83120:	e002      	b.n	83128 <quorem+0xa8>
   83122:	681a      	ldr	r2, [r3, #0]
   83124:	3b04      	subs	r3, #4
   83126:	b91a      	cbnz	r2, 83130 <quorem+0xb0>
   83128:	459a      	cmp	sl, r3
   8312a:	f107 37ff 	add.w	r7, r7, #4294967295
   8312e:	d3f8      	bcc.n	83122 <quorem+0xa2>
   83130:	6107      	str	r7, [r0, #16]
   83132:	4604      	mov	r4, r0
   83134:	f001 fd08 	bl	84b48 <__mcmp>
   83138:	2800      	cmp	r0, #0
   8313a:	db2d      	blt.n	83198 <quorem+0x118>
   8313c:	4655      	mov	r5, sl
   8313e:	2300      	movs	r3, #0
   83140:	f108 0801 	add.w	r8, r8, #1
   83144:	f856 1b04 	ldr.w	r1, [r6], #4
   83148:	6828      	ldr	r0, [r5, #0]
   8314a:	b28a      	uxth	r2, r1
   8314c:	1a9a      	subs	r2, r3, r2
   8314e:	0c0b      	lsrs	r3, r1, #16
   83150:	b281      	uxth	r1, r0
   83152:	440a      	add	r2, r1
   83154:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83158:	eb03 4322 	add.w	r3, r3, r2, asr #16
   8315c:	b292      	uxth	r2, r2
   8315e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   83162:	45b1      	cmp	r9, r6
   83164:	f845 2b04 	str.w	r2, [r5], #4
   83168:	ea4f 4323 	mov.w	r3, r3, asr #16
   8316c:	d2ea      	bcs.n	83144 <quorem+0xc4>
   8316e:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   83172:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   83176:	b97a      	cbnz	r2, 83198 <quorem+0x118>
   83178:	1f1a      	subs	r2, r3, #4
   8317a:	4592      	cmp	sl, r2
   8317c:	d20b      	bcs.n	83196 <quorem+0x116>
   8317e:	f853 2c04 	ldr.w	r2, [r3, #-4]
   83182:	b942      	cbnz	r2, 83196 <quorem+0x116>
   83184:	3b08      	subs	r3, #8
   83186:	e002      	b.n	8318e <quorem+0x10e>
   83188:	681a      	ldr	r2, [r3, #0]
   8318a:	3b04      	subs	r3, #4
   8318c:	b91a      	cbnz	r2, 83196 <quorem+0x116>
   8318e:	459a      	cmp	sl, r3
   83190:	f107 37ff 	add.w	r7, r7, #4294967295
   83194:	d3f8      	bcc.n	83188 <quorem+0x108>
   83196:	6127      	str	r7, [r4, #16]
   83198:	4640      	mov	r0, r8
   8319a:	b003      	add	sp, #12
   8319c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   831a0:	2000      	movs	r0, #0
   831a2:	b003      	add	sp, #12
   831a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000831a8 <_dtoa_r>:
   831a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   831ac:	6c05      	ldr	r5, [r0, #64]	; 0x40
   831ae:	b09b      	sub	sp, #108	; 0x6c
   831b0:	4604      	mov	r4, r0
   831b2:	4692      	mov	sl, r2
   831b4:	469b      	mov	fp, r3
   831b6:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   831b8:	b14d      	cbz	r5, 831ce <_dtoa_r+0x26>
   831ba:	2301      	movs	r3, #1
   831bc:	6c42      	ldr	r2, [r0, #68]	; 0x44
   831be:	4629      	mov	r1, r5
   831c0:	4093      	lsls	r3, r2
   831c2:	60ab      	str	r3, [r5, #8]
   831c4:	606a      	str	r2, [r5, #4]
   831c6:	f001 fae7 	bl	84798 <_Bfree>
   831ca:	2300      	movs	r3, #0
   831cc:	6423      	str	r3, [r4, #64]	; 0x40
   831ce:	f1bb 0f00 	cmp.w	fp, #0
   831d2:	465d      	mov	r5, fp
   831d4:	db35      	blt.n	83242 <_dtoa_r+0x9a>
   831d6:	2300      	movs	r3, #0
   831d8:	6033      	str	r3, [r6, #0]
   831da:	4b9d      	ldr	r3, [pc, #628]	; (83450 <_dtoa_r+0x2a8>)
   831dc:	43ab      	bics	r3, r5
   831de:	d015      	beq.n	8320c <_dtoa_r+0x64>
   831e0:	2200      	movs	r2, #0
   831e2:	2300      	movs	r3, #0
   831e4:	4650      	mov	r0, sl
   831e6:	4659      	mov	r1, fp
   831e8:	f002 fe4a 	bl	85e80 <__aeabi_dcmpeq>
   831ec:	4680      	mov	r8, r0
   831ee:	2800      	cmp	r0, #0
   831f0:	d02d      	beq.n	8324e <_dtoa_r+0xa6>
   831f2:	2301      	movs	r3, #1
   831f4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   831f6:	6013      	str	r3, [r2, #0]
   831f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   831fa:	2b00      	cmp	r3, #0
   831fc:	f000 80bd 	beq.w	8337a <_dtoa_r+0x1d2>
   83200:	4894      	ldr	r0, [pc, #592]	; (83454 <_dtoa_r+0x2ac>)
   83202:	6018      	str	r0, [r3, #0]
   83204:	3801      	subs	r0, #1
   83206:	b01b      	add	sp, #108	; 0x6c
   83208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8320c:	f242 730f 	movw	r3, #9999	; 0x270f
   83210:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83212:	6013      	str	r3, [r2, #0]
   83214:	f1ba 0f00 	cmp.w	sl, #0
   83218:	d10d      	bne.n	83236 <_dtoa_r+0x8e>
   8321a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   8321e:	b955      	cbnz	r5, 83236 <_dtoa_r+0x8e>
   83220:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83222:	488d      	ldr	r0, [pc, #564]	; (83458 <_dtoa_r+0x2b0>)
   83224:	2b00      	cmp	r3, #0
   83226:	d0ee      	beq.n	83206 <_dtoa_r+0x5e>
   83228:	f100 0308 	add.w	r3, r0, #8
   8322c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   8322e:	6013      	str	r3, [r2, #0]
   83230:	b01b      	add	sp, #108	; 0x6c
   83232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83236:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83238:	4888      	ldr	r0, [pc, #544]	; (8345c <_dtoa_r+0x2b4>)
   8323a:	2b00      	cmp	r3, #0
   8323c:	d0e3      	beq.n	83206 <_dtoa_r+0x5e>
   8323e:	1cc3      	adds	r3, r0, #3
   83240:	e7f4      	b.n	8322c <_dtoa_r+0x84>
   83242:	2301      	movs	r3, #1
   83244:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   83248:	6033      	str	r3, [r6, #0]
   8324a:	46ab      	mov	fp, r5
   8324c:	e7c5      	b.n	831da <_dtoa_r+0x32>
   8324e:	aa18      	add	r2, sp, #96	; 0x60
   83250:	ab19      	add	r3, sp, #100	; 0x64
   83252:	9201      	str	r2, [sp, #4]
   83254:	9300      	str	r3, [sp, #0]
   83256:	4652      	mov	r2, sl
   83258:	465b      	mov	r3, fp
   8325a:	4620      	mov	r0, r4
   8325c:	f001 fd1e 	bl	84c9c <__d2b>
   83260:	0d2b      	lsrs	r3, r5, #20
   83262:	4681      	mov	r9, r0
   83264:	d071      	beq.n	8334a <_dtoa_r+0x1a2>
   83266:	4650      	mov	r0, sl
   83268:	f3cb 0213 	ubfx	r2, fp, #0, #20
   8326c:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   83270:	9f18      	ldr	r7, [sp, #96]	; 0x60
   83272:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   83276:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   8327a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   8327e:	2200      	movs	r2, #0
   83280:	4b77      	ldr	r3, [pc, #476]	; (83460 <_dtoa_r+0x2b8>)
   83282:	f002 f9e1 	bl	85648 <__aeabi_dsub>
   83286:	a36c      	add	r3, pc, #432	; (adr r3, 83438 <_dtoa_r+0x290>)
   83288:	e9d3 2300 	ldrd	r2, r3, [r3]
   8328c:	f002 fb90 	bl	859b0 <__aeabi_dmul>
   83290:	a36b      	add	r3, pc, #428	; (adr r3, 83440 <_dtoa_r+0x298>)
   83292:	e9d3 2300 	ldrd	r2, r3, [r3]
   83296:	f002 f9d9 	bl	8564c <__adddf3>
   8329a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8329e:	4630      	mov	r0, r6
   832a0:	f002 fb20 	bl	858e4 <__aeabi_i2d>
   832a4:	a368      	add	r3, pc, #416	; (adr r3, 83448 <_dtoa_r+0x2a0>)
   832a6:	e9d3 2300 	ldrd	r2, r3, [r3]
   832aa:	f002 fb81 	bl	859b0 <__aeabi_dmul>
   832ae:	4602      	mov	r2, r0
   832b0:	460b      	mov	r3, r1
   832b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   832b6:	f002 f9c9 	bl	8564c <__adddf3>
   832ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
   832be:	f002 fe27 	bl	85f10 <__aeabi_d2iz>
   832c2:	2200      	movs	r2, #0
   832c4:	9002      	str	r0, [sp, #8]
   832c6:	2300      	movs	r3, #0
   832c8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   832cc:	f002 fde2 	bl	85e94 <__aeabi_dcmplt>
   832d0:	2800      	cmp	r0, #0
   832d2:	f040 816d 	bne.w	835b0 <_dtoa_r+0x408>
   832d6:	9d02      	ldr	r5, [sp, #8]
   832d8:	2d16      	cmp	r5, #22
   832da:	f200 8157 	bhi.w	8358c <_dtoa_r+0x3e4>
   832de:	4961      	ldr	r1, [pc, #388]	; (83464 <_dtoa_r+0x2bc>)
   832e0:	4652      	mov	r2, sl
   832e2:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   832e6:	465b      	mov	r3, fp
   832e8:	e9d1 0100 	ldrd	r0, r1, [r1]
   832ec:	f002 fdf0 	bl	85ed0 <__aeabi_dcmpgt>
   832f0:	2800      	cmp	r0, #0
   832f2:	f000 81be 	beq.w	83672 <_dtoa_r+0x4ca>
   832f6:	1e6b      	subs	r3, r5, #1
   832f8:	9302      	str	r3, [sp, #8]
   832fa:	2300      	movs	r3, #0
   832fc:	930e      	str	r3, [sp, #56]	; 0x38
   832fe:	1bbf      	subs	r7, r7, r6
   83300:	1e7b      	subs	r3, r7, #1
   83302:	9308      	str	r3, [sp, #32]
   83304:	f100 814e 	bmi.w	835a4 <_dtoa_r+0x3fc>
   83308:	2300      	movs	r3, #0
   8330a:	930a      	str	r3, [sp, #40]	; 0x28
   8330c:	9b02      	ldr	r3, [sp, #8]
   8330e:	2b00      	cmp	r3, #0
   83310:	f2c0 813f 	blt.w	83592 <_dtoa_r+0x3ea>
   83314:	9a08      	ldr	r2, [sp, #32]
   83316:	930d      	str	r3, [sp, #52]	; 0x34
   83318:	4611      	mov	r1, r2
   8331a:	4419      	add	r1, r3
   8331c:	2300      	movs	r3, #0
   8331e:	9108      	str	r1, [sp, #32]
   83320:	930c      	str	r3, [sp, #48]	; 0x30
   83322:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83324:	2b09      	cmp	r3, #9
   83326:	d82a      	bhi.n	8337e <_dtoa_r+0x1d6>
   83328:	2b05      	cmp	r3, #5
   8332a:	f340 8658 	ble.w	83fde <_dtoa_r+0xe36>
   8332e:	2500      	movs	r5, #0
   83330:	3b04      	subs	r3, #4
   83332:	9324      	str	r3, [sp, #144]	; 0x90
   83334:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83336:	3b02      	subs	r3, #2
   83338:	2b03      	cmp	r3, #3
   8333a:	f200 863f 	bhi.w	83fbc <_dtoa_r+0xe14>
   8333e:	e8df f013 	tbh	[pc, r3, lsl #1]
   83342:	03ce      	.short	0x03ce
   83344:	03d902c3 	.word	0x03d902c3
   83348:	045b      	.short	0x045b
   8334a:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8334c:	9e19      	ldr	r6, [sp, #100]	; 0x64
   8334e:	443e      	add	r6, r7
   83350:	f206 4332 	addw	r3, r6, #1074	; 0x432
   83354:	2b20      	cmp	r3, #32
   83356:	f340 8187 	ble.w	83668 <_dtoa_r+0x4c0>
   8335a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   8335e:	f206 4012 	addw	r0, r6, #1042	; 0x412
   83362:	409d      	lsls	r5, r3
   83364:	fa2a f000 	lsr.w	r0, sl, r0
   83368:	4328      	orrs	r0, r5
   8336a:	f002 faab 	bl	858c4 <__aeabi_ui2d>
   8336e:	2301      	movs	r3, #1
   83370:	3e01      	subs	r6, #1
   83372:	9314      	str	r3, [sp, #80]	; 0x50
   83374:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   83378:	e781      	b.n	8327e <_dtoa_r+0xd6>
   8337a:	483b      	ldr	r0, [pc, #236]	; (83468 <_dtoa_r+0x2c0>)
   8337c:	e743      	b.n	83206 <_dtoa_r+0x5e>
   8337e:	2100      	movs	r1, #0
   83380:	4620      	mov	r0, r4
   83382:	6461      	str	r1, [r4, #68]	; 0x44
   83384:	9125      	str	r1, [sp, #148]	; 0x94
   83386:	f001 f9e1 	bl	8474c <_Balloc>
   8338a:	f04f 33ff 	mov.w	r3, #4294967295
   8338e:	9307      	str	r3, [sp, #28]
   83390:	930f      	str	r3, [sp, #60]	; 0x3c
   83392:	2301      	movs	r3, #1
   83394:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83396:	9004      	str	r0, [sp, #16]
   83398:	6420      	str	r0, [r4, #64]	; 0x40
   8339a:	9224      	str	r2, [sp, #144]	; 0x90
   8339c:	930b      	str	r3, [sp, #44]	; 0x2c
   8339e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   833a0:	2b00      	cmp	r3, #0
   833a2:	f2c0 80d3 	blt.w	8354c <_dtoa_r+0x3a4>
   833a6:	9a02      	ldr	r2, [sp, #8]
   833a8:	2a0e      	cmp	r2, #14
   833aa:	f300 80cf 	bgt.w	8354c <_dtoa_r+0x3a4>
   833ae:	4b2d      	ldr	r3, [pc, #180]	; (83464 <_dtoa_r+0x2bc>)
   833b0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   833b4:	e9d3 2300 	ldrd	r2, r3, [r3]
   833b8:	e9cd 2308 	strd	r2, r3, [sp, #32]
   833bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
   833be:	2b00      	cmp	r3, #0
   833c0:	f2c0 83b4 	blt.w	83b2c <_dtoa_r+0x984>
   833c4:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   833c8:	4650      	mov	r0, sl
   833ca:	462a      	mov	r2, r5
   833cc:	4633      	mov	r3, r6
   833ce:	4659      	mov	r1, fp
   833d0:	f002 fc18 	bl	85c04 <__aeabi_ddiv>
   833d4:	f002 fd9c 	bl	85f10 <__aeabi_d2iz>
   833d8:	4680      	mov	r8, r0
   833da:	f002 fa83 	bl	858e4 <__aeabi_i2d>
   833de:	462a      	mov	r2, r5
   833e0:	4633      	mov	r3, r6
   833e2:	f002 fae5 	bl	859b0 <__aeabi_dmul>
   833e6:	4602      	mov	r2, r0
   833e8:	460b      	mov	r3, r1
   833ea:	4650      	mov	r0, sl
   833ec:	4659      	mov	r1, fp
   833ee:	f002 f92b 	bl	85648 <__aeabi_dsub>
   833f2:	9e07      	ldr	r6, [sp, #28]
   833f4:	9f04      	ldr	r7, [sp, #16]
   833f6:	f108 0530 	add.w	r5, r8, #48	; 0x30
   833fa:	2e01      	cmp	r6, #1
   833fc:	703d      	strb	r5, [r7, #0]
   833fe:	4602      	mov	r2, r0
   83400:	460b      	mov	r3, r1
   83402:	f107 0501 	add.w	r5, r7, #1
   83406:	d064      	beq.n	834d2 <_dtoa_r+0x32a>
   83408:	2200      	movs	r2, #0
   8340a:	4b18      	ldr	r3, [pc, #96]	; (8346c <_dtoa_r+0x2c4>)
   8340c:	f002 fad0 	bl	859b0 <__aeabi_dmul>
   83410:	2200      	movs	r2, #0
   83412:	2300      	movs	r3, #0
   83414:	4606      	mov	r6, r0
   83416:	460f      	mov	r7, r1
   83418:	f002 fd32 	bl	85e80 <__aeabi_dcmpeq>
   8341c:	2800      	cmp	r0, #0
   8341e:	f040 8082 	bne.w	83526 <_dtoa_r+0x37e>
   83422:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83426:	f04f 0a00 	mov.w	sl, #0
   8342a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   8342e:	f04f 0b00 	mov.w	fp, #0
   83432:	940b      	str	r4, [sp, #44]	; 0x2c
   83434:	e029      	b.n	8348a <_dtoa_r+0x2e2>
   83436:	bf00      	nop
   83438:	636f4361 	.word	0x636f4361
   8343c:	3fd287a7 	.word	0x3fd287a7
   83440:	8b60c8b3 	.word	0x8b60c8b3
   83444:	3fc68a28 	.word	0x3fc68a28
   83448:	509f79fb 	.word	0x509f79fb
   8344c:	3fd34413 	.word	0x3fd34413
   83450:	7ff00000 	.word	0x7ff00000
   83454:	000863dd 	.word	0x000863dd
   83458:	00086400 	.word	0x00086400
   8345c:	0008640c 	.word	0x0008640c
   83460:	3ff80000 	.word	0x3ff80000
   83464:	00086448 	.word	0x00086448
   83468:	000863dc 	.word	0x000863dc
   8346c:	40240000 	.word	0x40240000
   83470:	2200      	movs	r2, #0
   83472:	4b81      	ldr	r3, [pc, #516]	; (83678 <_dtoa_r+0x4d0>)
   83474:	f002 fa9c 	bl	859b0 <__aeabi_dmul>
   83478:	4652      	mov	r2, sl
   8347a:	465b      	mov	r3, fp
   8347c:	4606      	mov	r6, r0
   8347e:	460f      	mov	r7, r1
   83480:	f002 fcfe 	bl	85e80 <__aeabi_dcmpeq>
   83484:	2800      	cmp	r0, #0
   83486:	f040 83ba 	bne.w	83bfe <_dtoa_r+0xa56>
   8348a:	4642      	mov	r2, r8
   8348c:	464b      	mov	r3, r9
   8348e:	4630      	mov	r0, r6
   83490:	4639      	mov	r1, r7
   83492:	f002 fbb7 	bl	85c04 <__aeabi_ddiv>
   83496:	f002 fd3b 	bl	85f10 <__aeabi_d2iz>
   8349a:	4604      	mov	r4, r0
   8349c:	f002 fa22 	bl	858e4 <__aeabi_i2d>
   834a0:	4642      	mov	r2, r8
   834a2:	464b      	mov	r3, r9
   834a4:	f002 fa84 	bl	859b0 <__aeabi_dmul>
   834a8:	4602      	mov	r2, r0
   834aa:	460b      	mov	r3, r1
   834ac:	4630      	mov	r0, r6
   834ae:	4639      	mov	r1, r7
   834b0:	f002 f8ca 	bl	85648 <__aeabi_dsub>
   834b4:	f104 0630 	add.w	r6, r4, #48	; 0x30
   834b8:	f805 6b01 	strb.w	r6, [r5], #1
   834bc:	9e04      	ldr	r6, [sp, #16]
   834be:	9f07      	ldr	r7, [sp, #28]
   834c0:	1bae      	subs	r6, r5, r6
   834c2:	42be      	cmp	r6, r7
   834c4:	4602      	mov	r2, r0
   834c6:	460b      	mov	r3, r1
   834c8:	d1d2      	bne.n	83470 <_dtoa_r+0x2c8>
   834ca:	46a0      	mov	r8, r4
   834cc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   834d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   834d2:	4610      	mov	r0, r2
   834d4:	4619      	mov	r1, r3
   834d6:	f002 f8b9 	bl	8564c <__adddf3>
   834da:	4606      	mov	r6, r0
   834dc:	460f      	mov	r7, r1
   834de:	4602      	mov	r2, r0
   834e0:	460b      	mov	r3, r1
   834e2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   834e6:	f002 fcd5 	bl	85e94 <__aeabi_dcmplt>
   834ea:	b948      	cbnz	r0, 83500 <_dtoa_r+0x358>
   834ec:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   834f0:	4632      	mov	r2, r6
   834f2:	463b      	mov	r3, r7
   834f4:	f002 fcc4 	bl	85e80 <__aeabi_dcmpeq>
   834f8:	b1a8      	cbz	r0, 83526 <_dtoa_r+0x37e>
   834fa:	f018 0f01 	tst.w	r8, #1
   834fe:	d012      	beq.n	83526 <_dtoa_r+0x37e>
   83500:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83504:	1e6b      	subs	r3, r5, #1
   83506:	9a04      	ldr	r2, [sp, #16]
   83508:	e004      	b.n	83514 <_dtoa_r+0x36c>
   8350a:	429a      	cmp	r2, r3
   8350c:	f000 8402 	beq.w	83d14 <_dtoa_r+0xb6c>
   83510:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   83514:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   83518:	f103 0501 	add.w	r5, r3, #1
   8351c:	d0f5      	beq.n	8350a <_dtoa_r+0x362>
   8351e:	f108 0801 	add.w	r8, r8, #1
   83522:	f883 8000 	strb.w	r8, [r3]
   83526:	4649      	mov	r1, r9
   83528:	4620      	mov	r0, r4
   8352a:	f001 f935 	bl	84798 <_Bfree>
   8352e:	2200      	movs	r2, #0
   83530:	9b02      	ldr	r3, [sp, #8]
   83532:	702a      	strb	r2, [r5, #0]
   83534:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83536:	3301      	adds	r3, #1
   83538:	6013      	str	r3, [r2, #0]
   8353a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8353c:	2b00      	cmp	r3, #0
   8353e:	f000 839f 	beq.w	83c80 <_dtoa_r+0xad8>
   83542:	9804      	ldr	r0, [sp, #16]
   83544:	601d      	str	r5, [r3, #0]
   83546:	b01b      	add	sp, #108	; 0x6c
   83548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8354c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8354e:	2a00      	cmp	r2, #0
   83550:	d03e      	beq.n	835d0 <_dtoa_r+0x428>
   83552:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83554:	2a01      	cmp	r2, #1
   83556:	f340 8311 	ble.w	83b7c <_dtoa_r+0x9d4>
   8355a:	9b07      	ldr	r3, [sp, #28]
   8355c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8355e:	1e5f      	subs	r7, r3, #1
   83560:	42ba      	cmp	r2, r7
   83562:	f2c0 8390 	blt.w	83c86 <_dtoa_r+0xade>
   83566:	1bd7      	subs	r7, r2, r7
   83568:	9b07      	ldr	r3, [sp, #28]
   8356a:	2b00      	cmp	r3, #0
   8356c:	f2c0 848c 	blt.w	83e88 <_dtoa_r+0xce0>
   83570:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83572:	9b07      	ldr	r3, [sp, #28]
   83574:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83576:	2101      	movs	r1, #1
   83578:	441a      	add	r2, r3
   8357a:	920a      	str	r2, [sp, #40]	; 0x28
   8357c:	9a08      	ldr	r2, [sp, #32]
   8357e:	4620      	mov	r0, r4
   83580:	441a      	add	r2, r3
   83582:	9208      	str	r2, [sp, #32]
   83584:	f001 f9a4 	bl	848d0 <__i2b>
   83588:	4606      	mov	r6, r0
   8358a:	e023      	b.n	835d4 <_dtoa_r+0x42c>
   8358c:	2301      	movs	r3, #1
   8358e:	930e      	str	r3, [sp, #56]	; 0x38
   83590:	e6b5      	b.n	832fe <_dtoa_r+0x156>
   83592:	2300      	movs	r3, #0
   83594:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83596:	930d      	str	r3, [sp, #52]	; 0x34
   83598:	9b02      	ldr	r3, [sp, #8]
   8359a:	1ad2      	subs	r2, r2, r3
   8359c:	425b      	negs	r3, r3
   8359e:	920a      	str	r2, [sp, #40]	; 0x28
   835a0:	930c      	str	r3, [sp, #48]	; 0x30
   835a2:	e6be      	b.n	83322 <_dtoa_r+0x17a>
   835a4:	f1c7 0301 	rsb	r3, r7, #1
   835a8:	930a      	str	r3, [sp, #40]	; 0x28
   835aa:	2300      	movs	r3, #0
   835ac:	9308      	str	r3, [sp, #32]
   835ae:	e6ad      	b.n	8330c <_dtoa_r+0x164>
   835b0:	9d02      	ldr	r5, [sp, #8]
   835b2:	4628      	mov	r0, r5
   835b4:	f002 f996 	bl	858e4 <__aeabi_i2d>
   835b8:	4602      	mov	r2, r0
   835ba:	460b      	mov	r3, r1
   835bc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   835c0:	f002 fc5e 	bl	85e80 <__aeabi_dcmpeq>
   835c4:	2800      	cmp	r0, #0
   835c6:	f47f ae86 	bne.w	832d6 <_dtoa_r+0x12e>
   835ca:	1e6b      	subs	r3, r5, #1
   835cc:	9302      	str	r3, [sp, #8]
   835ce:	e682      	b.n	832d6 <_dtoa_r+0x12e>
   835d0:	ad0a      	add	r5, sp, #40	; 0x28
   835d2:	cde0      	ldmia	r5, {r5, r6, r7}
   835d4:	2d00      	cmp	r5, #0
   835d6:	dd0c      	ble.n	835f2 <_dtoa_r+0x44a>
   835d8:	9908      	ldr	r1, [sp, #32]
   835da:	2900      	cmp	r1, #0
   835dc:	460b      	mov	r3, r1
   835de:	dd08      	ble.n	835f2 <_dtoa_r+0x44a>
   835e0:	42a9      	cmp	r1, r5
   835e2:	bfa8      	it	ge
   835e4:	462b      	movge	r3, r5
   835e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   835e8:	1aed      	subs	r5, r5, r3
   835ea:	1ad2      	subs	r2, r2, r3
   835ec:	1acb      	subs	r3, r1, r3
   835ee:	920a      	str	r2, [sp, #40]	; 0x28
   835f0:	9308      	str	r3, [sp, #32]
   835f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   835f4:	b1d3      	cbz	r3, 8362c <_dtoa_r+0x484>
   835f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   835f8:	2b00      	cmp	r3, #0
   835fa:	f000 82b8 	beq.w	83b6e <_dtoa_r+0x9c6>
   835fe:	2f00      	cmp	r7, #0
   83600:	dd10      	ble.n	83624 <_dtoa_r+0x47c>
   83602:	4631      	mov	r1, r6
   83604:	463a      	mov	r2, r7
   83606:	4620      	mov	r0, r4
   83608:	f001 f9fe 	bl	84a08 <__pow5mult>
   8360c:	464a      	mov	r2, r9
   8360e:	4601      	mov	r1, r0
   83610:	4606      	mov	r6, r0
   83612:	4620      	mov	r0, r4
   83614:	f001 f966 	bl	848e4 <__multiply>
   83618:	4603      	mov	r3, r0
   8361a:	4649      	mov	r1, r9
   8361c:	4620      	mov	r0, r4
   8361e:	4699      	mov	r9, r3
   83620:	f001 f8ba 	bl	84798 <_Bfree>
   83624:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83626:	1bda      	subs	r2, r3, r7
   83628:	f040 82a2 	bne.w	83b70 <_dtoa_r+0x9c8>
   8362c:	2101      	movs	r1, #1
   8362e:	4620      	mov	r0, r4
   83630:	f001 f94e 	bl	848d0 <__i2b>
   83634:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83636:	4680      	mov	r8, r0
   83638:	2b00      	cmp	r3, #0
   8363a:	dd1f      	ble.n	8367c <_dtoa_r+0x4d4>
   8363c:	4601      	mov	r1, r0
   8363e:	461a      	mov	r2, r3
   83640:	4620      	mov	r0, r4
   83642:	f001 f9e1 	bl	84a08 <__pow5mult>
   83646:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83648:	4680      	mov	r8, r0
   8364a:	2b01      	cmp	r3, #1
   8364c:	f340 8255 	ble.w	83afa <_dtoa_r+0x952>
   83650:	2300      	movs	r3, #0
   83652:	930c      	str	r3, [sp, #48]	; 0x30
   83654:	f8d8 3010 	ldr.w	r3, [r8, #16]
   83658:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   8365c:	6918      	ldr	r0, [r3, #16]
   8365e:	f001 f8e7 	bl	84830 <__hi0bits>
   83662:	f1c0 0020 	rsb	r0, r0, #32
   83666:	e013      	b.n	83690 <_dtoa_r+0x4e8>
   83668:	f1c3 0520 	rsb	r5, r3, #32
   8366c:	fa0a f005 	lsl.w	r0, sl, r5
   83670:	e67b      	b.n	8336a <_dtoa_r+0x1c2>
   83672:	900e      	str	r0, [sp, #56]	; 0x38
   83674:	e643      	b.n	832fe <_dtoa_r+0x156>
   83676:	bf00      	nop
   83678:	40240000 	.word	0x40240000
   8367c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8367e:	2b01      	cmp	r3, #1
   83680:	f340 8285 	ble.w	83b8e <_dtoa_r+0x9e6>
   83684:	2300      	movs	r3, #0
   83686:	930c      	str	r3, [sp, #48]	; 0x30
   83688:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8368a:	2001      	movs	r0, #1
   8368c:	2b00      	cmp	r3, #0
   8368e:	d1e1      	bne.n	83654 <_dtoa_r+0x4ac>
   83690:	9a08      	ldr	r2, [sp, #32]
   83692:	4410      	add	r0, r2
   83694:	f010 001f 	ands.w	r0, r0, #31
   83698:	f000 80a1 	beq.w	837de <_dtoa_r+0x636>
   8369c:	f1c0 0320 	rsb	r3, r0, #32
   836a0:	2b04      	cmp	r3, #4
   836a2:	f340 8486 	ble.w	83fb2 <_dtoa_r+0xe0a>
   836a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   836a8:	f1c0 001c 	rsb	r0, r0, #28
   836ac:	4403      	add	r3, r0
   836ae:	930a      	str	r3, [sp, #40]	; 0x28
   836b0:	4613      	mov	r3, r2
   836b2:	4403      	add	r3, r0
   836b4:	4405      	add	r5, r0
   836b6:	9308      	str	r3, [sp, #32]
   836b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   836ba:	2b00      	cmp	r3, #0
   836bc:	dd05      	ble.n	836ca <_dtoa_r+0x522>
   836be:	4649      	mov	r1, r9
   836c0:	461a      	mov	r2, r3
   836c2:	4620      	mov	r0, r4
   836c4:	f001 f9f0 	bl	84aa8 <__lshift>
   836c8:	4681      	mov	r9, r0
   836ca:	9b08      	ldr	r3, [sp, #32]
   836cc:	2b00      	cmp	r3, #0
   836ce:	dd05      	ble.n	836dc <_dtoa_r+0x534>
   836d0:	4641      	mov	r1, r8
   836d2:	461a      	mov	r2, r3
   836d4:	4620      	mov	r0, r4
   836d6:	f001 f9e7 	bl	84aa8 <__lshift>
   836da:	4680      	mov	r8, r0
   836dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   836de:	2b00      	cmp	r3, #0
   836e0:	f040 8086 	bne.w	837f0 <_dtoa_r+0x648>
   836e4:	9b07      	ldr	r3, [sp, #28]
   836e6:	2b00      	cmp	r3, #0
   836e8:	f340 8264 	ble.w	83bb4 <_dtoa_r+0xa0c>
   836ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   836ee:	2b00      	cmp	r3, #0
   836f0:	f000 8098 	beq.w	83824 <_dtoa_r+0x67c>
   836f4:	2d00      	cmp	r5, #0
   836f6:	dd05      	ble.n	83704 <_dtoa_r+0x55c>
   836f8:	4631      	mov	r1, r6
   836fa:	462a      	mov	r2, r5
   836fc:	4620      	mov	r0, r4
   836fe:	f001 f9d3 	bl	84aa8 <__lshift>
   83702:	4606      	mov	r6, r0
   83704:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83706:	2b00      	cmp	r3, #0
   83708:	f040 8336 	bne.w	83d78 <_dtoa_r+0xbd0>
   8370c:	9608      	str	r6, [sp, #32]
   8370e:	9b07      	ldr	r3, [sp, #28]
   83710:	9a04      	ldr	r2, [sp, #16]
   83712:	3b01      	subs	r3, #1
   83714:	18d3      	adds	r3, r2, r3
   83716:	930b      	str	r3, [sp, #44]	; 0x2c
   83718:	4617      	mov	r7, r2
   8371a:	f00a 0301 	and.w	r3, sl, #1
   8371e:	46c2      	mov	sl, r8
   83720:	f8dd b020 	ldr.w	fp, [sp, #32]
   83724:	930c      	str	r3, [sp, #48]	; 0x30
   83726:	4651      	mov	r1, sl
   83728:	4648      	mov	r0, r9
   8372a:	f7ff fca9 	bl	83080 <quorem>
   8372e:	4631      	mov	r1, r6
   83730:	4605      	mov	r5, r0
   83732:	4648      	mov	r0, r9
   83734:	f001 fa08 	bl	84b48 <__mcmp>
   83738:	465a      	mov	r2, fp
   8373a:	9007      	str	r0, [sp, #28]
   8373c:	4651      	mov	r1, sl
   8373e:	4620      	mov	r0, r4
   83740:	f001 fa1e 	bl	84b80 <__mdiff>
   83744:	68c2      	ldr	r2, [r0, #12]
   83746:	4680      	mov	r8, r0
   83748:	f105 0330 	add.w	r3, r5, #48	; 0x30
   8374c:	2a00      	cmp	r2, #0
   8374e:	f040 8229 	bne.w	83ba4 <_dtoa_r+0x9fc>
   83752:	4601      	mov	r1, r0
   83754:	4648      	mov	r0, r9
   83756:	930a      	str	r3, [sp, #40]	; 0x28
   83758:	f001 f9f6 	bl	84b48 <__mcmp>
   8375c:	4641      	mov	r1, r8
   8375e:	9008      	str	r0, [sp, #32]
   83760:	4620      	mov	r0, r4
   83762:	f001 f819 	bl	84798 <_Bfree>
   83766:	9a08      	ldr	r2, [sp, #32]
   83768:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8376a:	b932      	cbnz	r2, 8377a <_dtoa_r+0x5d2>
   8376c:	9924      	ldr	r1, [sp, #144]	; 0x90
   8376e:	b921      	cbnz	r1, 8377a <_dtoa_r+0x5d2>
   83770:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83772:	2a00      	cmp	r2, #0
   83774:	f000 83ee 	beq.w	83f54 <_dtoa_r+0xdac>
   83778:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8377a:	9907      	ldr	r1, [sp, #28]
   8377c:	2900      	cmp	r1, #0
   8377e:	f2c0 829f 	blt.w	83cc0 <_dtoa_r+0xb18>
   83782:	d105      	bne.n	83790 <_dtoa_r+0x5e8>
   83784:	9924      	ldr	r1, [sp, #144]	; 0x90
   83786:	b919      	cbnz	r1, 83790 <_dtoa_r+0x5e8>
   83788:	990c      	ldr	r1, [sp, #48]	; 0x30
   8378a:	2900      	cmp	r1, #0
   8378c:	f000 8298 	beq.w	83cc0 <_dtoa_r+0xb18>
   83790:	2a00      	cmp	r2, #0
   83792:	f300 8305 	bgt.w	83da0 <_dtoa_r+0xbf8>
   83796:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83798:	f107 0801 	add.w	r8, r7, #1
   8379c:	4297      	cmp	r7, r2
   8379e:	703b      	strb	r3, [r7, #0]
   837a0:	4645      	mov	r5, r8
   837a2:	f000 830b 	beq.w	83dbc <_dtoa_r+0xc14>
   837a6:	4649      	mov	r1, r9
   837a8:	2300      	movs	r3, #0
   837aa:	220a      	movs	r2, #10
   837ac:	4620      	mov	r0, r4
   837ae:	f000 fffd 	bl	847ac <__multadd>
   837b2:	455e      	cmp	r6, fp
   837b4:	4681      	mov	r9, r0
   837b6:	4631      	mov	r1, r6
   837b8:	f04f 0300 	mov.w	r3, #0
   837bc:	f04f 020a 	mov.w	r2, #10
   837c0:	4620      	mov	r0, r4
   837c2:	f000 81e9 	beq.w	83b98 <_dtoa_r+0x9f0>
   837c6:	f000 fff1 	bl	847ac <__multadd>
   837ca:	4659      	mov	r1, fp
   837cc:	4606      	mov	r6, r0
   837ce:	2300      	movs	r3, #0
   837d0:	220a      	movs	r2, #10
   837d2:	4620      	mov	r0, r4
   837d4:	f000 ffea 	bl	847ac <__multadd>
   837d8:	4647      	mov	r7, r8
   837da:	4683      	mov	fp, r0
   837dc:	e7a3      	b.n	83726 <_dtoa_r+0x57e>
   837de:	201c      	movs	r0, #28
   837e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   837e2:	4405      	add	r5, r0
   837e4:	4403      	add	r3, r0
   837e6:	930a      	str	r3, [sp, #40]	; 0x28
   837e8:	9b08      	ldr	r3, [sp, #32]
   837ea:	4403      	add	r3, r0
   837ec:	9308      	str	r3, [sp, #32]
   837ee:	e763      	b.n	836b8 <_dtoa_r+0x510>
   837f0:	4641      	mov	r1, r8
   837f2:	4648      	mov	r0, r9
   837f4:	f001 f9a8 	bl	84b48 <__mcmp>
   837f8:	2800      	cmp	r0, #0
   837fa:	f6bf af73 	bge.w	836e4 <_dtoa_r+0x53c>
   837fe:	9f02      	ldr	r7, [sp, #8]
   83800:	4649      	mov	r1, r9
   83802:	2300      	movs	r3, #0
   83804:	220a      	movs	r2, #10
   83806:	4620      	mov	r0, r4
   83808:	3f01      	subs	r7, #1
   8380a:	9702      	str	r7, [sp, #8]
   8380c:	f000 ffce 	bl	847ac <__multadd>
   83810:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83812:	4681      	mov	r9, r0
   83814:	2b00      	cmp	r3, #0
   83816:	f040 83b5 	bne.w	83f84 <_dtoa_r+0xddc>
   8381a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8381c:	2b00      	cmp	r3, #0
   8381e:	f340 83be 	ble.w	83f9e <_dtoa_r+0xdf6>
   83822:	9307      	str	r3, [sp, #28]
   83824:	f8dd a010 	ldr.w	sl, [sp, #16]
   83828:	9f07      	ldr	r7, [sp, #28]
   8382a:	4655      	mov	r5, sl
   8382c:	e006      	b.n	8383c <_dtoa_r+0x694>
   8382e:	4649      	mov	r1, r9
   83830:	2300      	movs	r3, #0
   83832:	220a      	movs	r2, #10
   83834:	4620      	mov	r0, r4
   83836:	f000 ffb9 	bl	847ac <__multadd>
   8383a:	4681      	mov	r9, r0
   8383c:	4641      	mov	r1, r8
   8383e:	4648      	mov	r0, r9
   83840:	f7ff fc1e 	bl	83080 <quorem>
   83844:	3030      	adds	r0, #48	; 0x30
   83846:	f805 0b01 	strb.w	r0, [r5], #1
   8384a:	eba5 030a 	sub.w	r3, r5, sl
   8384e:	42bb      	cmp	r3, r7
   83850:	dbed      	blt.n	8382e <_dtoa_r+0x686>
   83852:	9b04      	ldr	r3, [sp, #16]
   83854:	9a07      	ldr	r2, [sp, #28]
   83856:	4682      	mov	sl, r0
   83858:	2a01      	cmp	r2, #1
   8385a:	bfac      	ite	ge
   8385c:	189b      	addge	r3, r3, r2
   8385e:	3301      	addlt	r3, #1
   83860:	f04f 0b00 	mov.w	fp, #0
   83864:	461d      	mov	r5, r3
   83866:	4649      	mov	r1, r9
   83868:	2201      	movs	r2, #1
   8386a:	4620      	mov	r0, r4
   8386c:	f001 f91c 	bl	84aa8 <__lshift>
   83870:	4641      	mov	r1, r8
   83872:	4681      	mov	r9, r0
   83874:	f001 f968 	bl	84b48 <__mcmp>
   83878:	2800      	cmp	r0, #0
   8387a:	f340 823f 	ble.w	83cfc <_dtoa_r+0xb54>
   8387e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   83882:	1e6b      	subs	r3, r5, #1
   83884:	9904      	ldr	r1, [sp, #16]
   83886:	e004      	b.n	83892 <_dtoa_r+0x6ea>
   83888:	428b      	cmp	r3, r1
   8388a:	f000 81ae 	beq.w	83bea <_dtoa_r+0xa42>
   8388e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   83892:	2a39      	cmp	r2, #57	; 0x39
   83894:	f103 0501 	add.w	r5, r3, #1
   83898:	d0f6      	beq.n	83888 <_dtoa_r+0x6e0>
   8389a:	3201      	adds	r2, #1
   8389c:	701a      	strb	r2, [r3, #0]
   8389e:	4641      	mov	r1, r8
   838a0:	4620      	mov	r0, r4
   838a2:	f000 ff79 	bl	84798 <_Bfree>
   838a6:	2e00      	cmp	r6, #0
   838a8:	f43f ae3d 	beq.w	83526 <_dtoa_r+0x37e>
   838ac:	f1bb 0f00 	cmp.w	fp, #0
   838b0:	d005      	beq.n	838be <_dtoa_r+0x716>
   838b2:	45b3      	cmp	fp, r6
   838b4:	d003      	beq.n	838be <_dtoa_r+0x716>
   838b6:	4659      	mov	r1, fp
   838b8:	4620      	mov	r0, r4
   838ba:	f000 ff6d 	bl	84798 <_Bfree>
   838be:	4631      	mov	r1, r6
   838c0:	4620      	mov	r0, r4
   838c2:	f000 ff69 	bl	84798 <_Bfree>
   838c6:	e62e      	b.n	83526 <_dtoa_r+0x37e>
   838c8:	2300      	movs	r3, #0
   838ca:	930b      	str	r3, [sp, #44]	; 0x2c
   838cc:	9b02      	ldr	r3, [sp, #8]
   838ce:	9a25      	ldr	r2, [sp, #148]	; 0x94
   838d0:	4413      	add	r3, r2
   838d2:	930f      	str	r3, [sp, #60]	; 0x3c
   838d4:	3301      	adds	r3, #1
   838d6:	2b01      	cmp	r3, #1
   838d8:	461f      	mov	r7, r3
   838da:	461e      	mov	r6, r3
   838dc:	bfb8      	it	lt
   838de:	2701      	movlt	r7, #1
   838e0:	9307      	str	r3, [sp, #28]
   838e2:	2100      	movs	r1, #0
   838e4:	2f17      	cmp	r7, #23
   838e6:	6461      	str	r1, [r4, #68]	; 0x44
   838e8:	d90a      	bls.n	83900 <_dtoa_r+0x758>
   838ea:	2201      	movs	r2, #1
   838ec:	2304      	movs	r3, #4
   838ee:	005b      	lsls	r3, r3, #1
   838f0:	f103 0014 	add.w	r0, r3, #20
   838f4:	4287      	cmp	r7, r0
   838f6:	4611      	mov	r1, r2
   838f8:	f102 0201 	add.w	r2, r2, #1
   838fc:	d2f7      	bcs.n	838ee <_dtoa_r+0x746>
   838fe:	6461      	str	r1, [r4, #68]	; 0x44
   83900:	4620      	mov	r0, r4
   83902:	f000 ff23 	bl	8474c <_Balloc>
   83906:	2e0e      	cmp	r6, #14
   83908:	9004      	str	r0, [sp, #16]
   8390a:	6420      	str	r0, [r4, #64]	; 0x40
   8390c:	f63f ad47 	bhi.w	8339e <_dtoa_r+0x1f6>
   83910:	2d00      	cmp	r5, #0
   83912:	f43f ad44 	beq.w	8339e <_dtoa_r+0x1f6>
   83916:	9902      	ldr	r1, [sp, #8]
   83918:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   8391c:	2900      	cmp	r1, #0
   8391e:	f340 8203 	ble.w	83d28 <_dtoa_r+0xb80>
   83922:	4bb9      	ldr	r3, [pc, #740]	; (83c08 <_dtoa_r+0xa60>)
   83924:	f001 020f 	and.w	r2, r1, #15
   83928:	110d      	asrs	r5, r1, #4
   8392a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8392e:	06e9      	lsls	r1, r5, #27
   83930:	e9d3 6700 	ldrd	r6, r7, [r3]
   83934:	f140 81af 	bpl.w	83c96 <_dtoa_r+0xaee>
   83938:	4bb4      	ldr	r3, [pc, #720]	; (83c0c <_dtoa_r+0xa64>)
   8393a:	4650      	mov	r0, sl
   8393c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83940:	4659      	mov	r1, fp
   83942:	f002 f95f 	bl	85c04 <__aeabi_ddiv>
   83946:	f04f 0a03 	mov.w	sl, #3
   8394a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   8394e:	f005 050f 	and.w	r5, r5, #15
   83952:	b18d      	cbz	r5, 83978 <_dtoa_r+0x7d0>
   83954:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 83c0c <_dtoa_r+0xa64>
   83958:	07ea      	lsls	r2, r5, #31
   8395a:	d509      	bpl.n	83970 <_dtoa_r+0x7c8>
   8395c:	e9d8 2300 	ldrd	r2, r3, [r8]
   83960:	4630      	mov	r0, r6
   83962:	4639      	mov	r1, r7
   83964:	f002 f824 	bl	859b0 <__aeabi_dmul>
   83968:	4606      	mov	r6, r0
   8396a:	460f      	mov	r7, r1
   8396c:	f10a 0a01 	add.w	sl, sl, #1
   83970:	106d      	asrs	r5, r5, #1
   83972:	f108 0808 	add.w	r8, r8, #8
   83976:	d1ef      	bne.n	83958 <_dtoa_r+0x7b0>
   83978:	463b      	mov	r3, r7
   8397a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8397e:	4632      	mov	r2, r6
   83980:	f002 f940 	bl	85c04 <__aeabi_ddiv>
   83984:	4607      	mov	r7, r0
   83986:	4688      	mov	r8, r1
   83988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8398a:	b143      	cbz	r3, 8399e <_dtoa_r+0x7f6>
   8398c:	2200      	movs	r2, #0
   8398e:	4ba0      	ldr	r3, [pc, #640]	; (83c10 <_dtoa_r+0xa68>)
   83990:	4638      	mov	r0, r7
   83992:	4641      	mov	r1, r8
   83994:	f002 fa7e 	bl	85e94 <__aeabi_dcmplt>
   83998:	2800      	cmp	r0, #0
   8399a:	f040 8287 	bne.w	83eac <_dtoa_r+0xd04>
   8399e:	4650      	mov	r0, sl
   839a0:	f001 ffa0 	bl	858e4 <__aeabi_i2d>
   839a4:	463a      	mov	r2, r7
   839a6:	4643      	mov	r3, r8
   839a8:	f002 f802 	bl	859b0 <__aeabi_dmul>
   839ac:	4b99      	ldr	r3, [pc, #612]	; (83c14 <_dtoa_r+0xa6c>)
   839ae:	2200      	movs	r2, #0
   839b0:	f001 fe4c 	bl	8564c <__adddf3>
   839b4:	9b07      	ldr	r3, [sp, #28]
   839b6:	4605      	mov	r5, r0
   839b8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   839bc:	2b00      	cmp	r3, #0
   839be:	f000 813f 	beq.w	83c40 <_dtoa_r+0xa98>
   839c2:	9b02      	ldr	r3, [sp, #8]
   839c4:	9315      	str	r3, [sp, #84]	; 0x54
   839c6:	9b07      	ldr	r3, [sp, #28]
   839c8:	9312      	str	r3, [sp, #72]	; 0x48
   839ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   839cc:	2b00      	cmp	r3, #0
   839ce:	f000 81fb 	beq.w	83dc8 <_dtoa_r+0xc20>
   839d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   839d4:	4b8c      	ldr	r3, [pc, #560]	; (83c08 <_dtoa_r+0xa60>)
   839d6:	2000      	movs	r0, #0
   839d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   839dc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   839e0:	498d      	ldr	r1, [pc, #564]	; (83c18 <_dtoa_r+0xa70>)
   839e2:	f002 f90f 	bl	85c04 <__aeabi_ddiv>
   839e6:	462a      	mov	r2, r5
   839e8:	4633      	mov	r3, r6
   839ea:	f001 fe2d 	bl	85648 <__aeabi_dsub>
   839ee:	4682      	mov	sl, r0
   839f0:	468b      	mov	fp, r1
   839f2:	4638      	mov	r0, r7
   839f4:	4641      	mov	r1, r8
   839f6:	f002 fa8b 	bl	85f10 <__aeabi_d2iz>
   839fa:	4605      	mov	r5, r0
   839fc:	f001 ff72 	bl	858e4 <__aeabi_i2d>
   83a00:	4602      	mov	r2, r0
   83a02:	460b      	mov	r3, r1
   83a04:	4638      	mov	r0, r7
   83a06:	4641      	mov	r1, r8
   83a08:	f001 fe1e 	bl	85648 <__aeabi_dsub>
   83a0c:	3530      	adds	r5, #48	; 0x30
   83a0e:	fa5f f885 	uxtb.w	r8, r5
   83a12:	9d04      	ldr	r5, [sp, #16]
   83a14:	4606      	mov	r6, r0
   83a16:	460f      	mov	r7, r1
   83a18:	f885 8000 	strb.w	r8, [r5]
   83a1c:	4602      	mov	r2, r0
   83a1e:	460b      	mov	r3, r1
   83a20:	4650      	mov	r0, sl
   83a22:	4659      	mov	r1, fp
   83a24:	3501      	adds	r5, #1
   83a26:	f002 fa53 	bl	85ed0 <__aeabi_dcmpgt>
   83a2a:	2800      	cmp	r0, #0
   83a2c:	d154      	bne.n	83ad8 <_dtoa_r+0x930>
   83a2e:	4632      	mov	r2, r6
   83a30:	463b      	mov	r3, r7
   83a32:	2000      	movs	r0, #0
   83a34:	4976      	ldr	r1, [pc, #472]	; (83c10 <_dtoa_r+0xa68>)
   83a36:	f001 fe07 	bl	85648 <__aeabi_dsub>
   83a3a:	4602      	mov	r2, r0
   83a3c:	460b      	mov	r3, r1
   83a3e:	4650      	mov	r0, sl
   83a40:	4659      	mov	r1, fp
   83a42:	f002 fa45 	bl	85ed0 <__aeabi_dcmpgt>
   83a46:	2800      	cmp	r0, #0
   83a48:	f040 8270 	bne.w	83f2c <_dtoa_r+0xd84>
   83a4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83a4e:	2a01      	cmp	r2, #1
   83a50:	f000 8112 	beq.w	83c78 <_dtoa_r+0xad0>
   83a54:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83a56:	9a04      	ldr	r2, [sp, #16]
   83a58:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83a5c:	4413      	add	r3, r2
   83a5e:	4699      	mov	r9, r3
   83a60:	e00f      	b.n	83a82 <_dtoa_r+0x8da>
   83a62:	4632      	mov	r2, r6
   83a64:	463b      	mov	r3, r7
   83a66:	2000      	movs	r0, #0
   83a68:	4969      	ldr	r1, [pc, #420]	; (83c10 <_dtoa_r+0xa68>)
   83a6a:	f001 fded 	bl	85648 <__aeabi_dsub>
   83a6e:	4652      	mov	r2, sl
   83a70:	465b      	mov	r3, fp
   83a72:	f002 fa0f 	bl	85e94 <__aeabi_dcmplt>
   83a76:	2800      	cmp	r0, #0
   83a78:	f040 8256 	bne.w	83f28 <_dtoa_r+0xd80>
   83a7c:	454d      	cmp	r5, r9
   83a7e:	f000 80f9 	beq.w	83c74 <_dtoa_r+0xacc>
   83a82:	4650      	mov	r0, sl
   83a84:	4659      	mov	r1, fp
   83a86:	2200      	movs	r2, #0
   83a88:	4b64      	ldr	r3, [pc, #400]	; (83c1c <_dtoa_r+0xa74>)
   83a8a:	f001 ff91 	bl	859b0 <__aeabi_dmul>
   83a8e:	2200      	movs	r2, #0
   83a90:	4b62      	ldr	r3, [pc, #392]	; (83c1c <_dtoa_r+0xa74>)
   83a92:	4682      	mov	sl, r0
   83a94:	468b      	mov	fp, r1
   83a96:	4630      	mov	r0, r6
   83a98:	4639      	mov	r1, r7
   83a9a:	f001 ff89 	bl	859b0 <__aeabi_dmul>
   83a9e:	460f      	mov	r7, r1
   83aa0:	4606      	mov	r6, r0
   83aa2:	f002 fa35 	bl	85f10 <__aeabi_d2iz>
   83aa6:	4680      	mov	r8, r0
   83aa8:	f001 ff1c 	bl	858e4 <__aeabi_i2d>
   83aac:	4602      	mov	r2, r0
   83aae:	460b      	mov	r3, r1
   83ab0:	4630      	mov	r0, r6
   83ab2:	4639      	mov	r1, r7
   83ab4:	f001 fdc8 	bl	85648 <__aeabi_dsub>
   83ab8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83abc:	fa5f f888 	uxtb.w	r8, r8
   83ac0:	f805 8b01 	strb.w	r8, [r5], #1
   83ac4:	4652      	mov	r2, sl
   83ac6:	465b      	mov	r3, fp
   83ac8:	4606      	mov	r6, r0
   83aca:	460f      	mov	r7, r1
   83acc:	f002 f9e2 	bl	85e94 <__aeabi_dcmplt>
   83ad0:	2800      	cmp	r0, #0
   83ad2:	d0c6      	beq.n	83a62 <_dtoa_r+0x8ba>
   83ad4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83ad8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83ada:	9302      	str	r3, [sp, #8]
   83adc:	e523      	b.n	83526 <_dtoa_r+0x37e>
   83ade:	2300      	movs	r3, #0
   83ae0:	930b      	str	r3, [sp, #44]	; 0x2c
   83ae2:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83ae4:	2b00      	cmp	r3, #0
   83ae6:	f340 80dd 	ble.w	83ca4 <_dtoa_r+0xafc>
   83aea:	461f      	mov	r7, r3
   83aec:	461e      	mov	r6, r3
   83aee:	930f      	str	r3, [sp, #60]	; 0x3c
   83af0:	9307      	str	r3, [sp, #28]
   83af2:	e6f6      	b.n	838e2 <_dtoa_r+0x73a>
   83af4:	2301      	movs	r3, #1
   83af6:	930b      	str	r3, [sp, #44]	; 0x2c
   83af8:	e7f3      	b.n	83ae2 <_dtoa_r+0x93a>
   83afa:	f1ba 0f00 	cmp.w	sl, #0
   83afe:	f47f ada7 	bne.w	83650 <_dtoa_r+0x4a8>
   83b02:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83b06:	2b00      	cmp	r3, #0
   83b08:	f47f adbc 	bne.w	83684 <_dtoa_r+0x4dc>
   83b0c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83b10:	0d3f      	lsrs	r7, r7, #20
   83b12:	053f      	lsls	r7, r7, #20
   83b14:	2f00      	cmp	r7, #0
   83b16:	f000 820d 	beq.w	83f34 <_dtoa_r+0xd8c>
   83b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83b1c:	3301      	adds	r3, #1
   83b1e:	930a      	str	r3, [sp, #40]	; 0x28
   83b20:	9b08      	ldr	r3, [sp, #32]
   83b22:	3301      	adds	r3, #1
   83b24:	9308      	str	r3, [sp, #32]
   83b26:	2301      	movs	r3, #1
   83b28:	930c      	str	r3, [sp, #48]	; 0x30
   83b2a:	e5ad      	b.n	83688 <_dtoa_r+0x4e0>
   83b2c:	9b07      	ldr	r3, [sp, #28]
   83b2e:	2b00      	cmp	r3, #0
   83b30:	f73f ac48 	bgt.w	833c4 <_dtoa_r+0x21c>
   83b34:	f040 8222 	bne.w	83f7c <_dtoa_r+0xdd4>
   83b38:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83b3c:	2200      	movs	r2, #0
   83b3e:	4b38      	ldr	r3, [pc, #224]	; (83c20 <_dtoa_r+0xa78>)
   83b40:	f001 ff36 	bl	859b0 <__aeabi_dmul>
   83b44:	4652      	mov	r2, sl
   83b46:	465b      	mov	r3, fp
   83b48:	f002 f9b8 	bl	85ebc <__aeabi_dcmpge>
   83b4c:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83b50:	4646      	mov	r6, r8
   83b52:	2800      	cmp	r0, #0
   83b54:	d041      	beq.n	83bda <_dtoa_r+0xa32>
   83b56:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83b58:	9d04      	ldr	r5, [sp, #16]
   83b5a:	43db      	mvns	r3, r3
   83b5c:	9302      	str	r3, [sp, #8]
   83b5e:	4641      	mov	r1, r8
   83b60:	4620      	mov	r0, r4
   83b62:	f000 fe19 	bl	84798 <_Bfree>
   83b66:	2e00      	cmp	r6, #0
   83b68:	f43f acdd 	beq.w	83526 <_dtoa_r+0x37e>
   83b6c:	e6a7      	b.n	838be <_dtoa_r+0x716>
   83b6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83b70:	4649      	mov	r1, r9
   83b72:	4620      	mov	r0, r4
   83b74:	f000 ff48 	bl	84a08 <__pow5mult>
   83b78:	4681      	mov	r9, r0
   83b7a:	e557      	b.n	8362c <_dtoa_r+0x484>
   83b7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
   83b7e:	2a00      	cmp	r2, #0
   83b80:	f000 8188 	beq.w	83e94 <_dtoa_r+0xcec>
   83b84:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83b88:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83b8a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83b8c:	e4f2      	b.n	83574 <_dtoa_r+0x3cc>
   83b8e:	f1ba 0f00 	cmp.w	sl, #0
   83b92:	f47f ad77 	bne.w	83684 <_dtoa_r+0x4dc>
   83b96:	e7b4      	b.n	83b02 <_dtoa_r+0x95a>
   83b98:	f000 fe08 	bl	847ac <__multadd>
   83b9c:	4647      	mov	r7, r8
   83b9e:	4606      	mov	r6, r0
   83ba0:	4683      	mov	fp, r0
   83ba2:	e5c0      	b.n	83726 <_dtoa_r+0x57e>
   83ba4:	4601      	mov	r1, r0
   83ba6:	4620      	mov	r0, r4
   83ba8:	9308      	str	r3, [sp, #32]
   83baa:	f000 fdf5 	bl	84798 <_Bfree>
   83bae:	2201      	movs	r2, #1
   83bb0:	9b08      	ldr	r3, [sp, #32]
   83bb2:	e5e2      	b.n	8377a <_dtoa_r+0x5d2>
   83bb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83bb6:	2b02      	cmp	r3, #2
   83bb8:	f77f ad98 	ble.w	836ec <_dtoa_r+0x544>
   83bbc:	9b07      	ldr	r3, [sp, #28]
   83bbe:	2b00      	cmp	r3, #0
   83bc0:	d1c9      	bne.n	83b56 <_dtoa_r+0x9ae>
   83bc2:	4641      	mov	r1, r8
   83bc4:	2205      	movs	r2, #5
   83bc6:	4620      	mov	r0, r4
   83bc8:	f000 fdf0 	bl	847ac <__multadd>
   83bcc:	4601      	mov	r1, r0
   83bce:	4680      	mov	r8, r0
   83bd0:	4648      	mov	r0, r9
   83bd2:	f000 ffb9 	bl	84b48 <__mcmp>
   83bd6:	2800      	cmp	r0, #0
   83bd8:	ddbd      	ble.n	83b56 <_dtoa_r+0x9ae>
   83bda:	2331      	movs	r3, #49	; 0x31
   83bdc:	9a02      	ldr	r2, [sp, #8]
   83bde:	9904      	ldr	r1, [sp, #16]
   83be0:	3201      	adds	r2, #1
   83be2:	9202      	str	r2, [sp, #8]
   83be4:	700b      	strb	r3, [r1, #0]
   83be6:	1c4d      	adds	r5, r1, #1
   83be8:	e7b9      	b.n	83b5e <_dtoa_r+0x9b6>
   83bea:	2331      	movs	r3, #49	; 0x31
   83bec:	9a02      	ldr	r2, [sp, #8]
   83bee:	3201      	adds	r2, #1
   83bf0:	9202      	str	r2, [sp, #8]
   83bf2:	9a04      	ldr	r2, [sp, #16]
   83bf4:	7013      	strb	r3, [r2, #0]
   83bf6:	e652      	b.n	8389e <_dtoa_r+0x6f6>
   83bf8:	2301      	movs	r3, #1
   83bfa:	930b      	str	r3, [sp, #44]	; 0x2c
   83bfc:	e666      	b.n	838cc <_dtoa_r+0x724>
   83bfe:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83c02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83c04:	e48f      	b.n	83526 <_dtoa_r+0x37e>
   83c06:	bf00      	nop
   83c08:	00086448 	.word	0x00086448
   83c0c:	00086420 	.word	0x00086420
   83c10:	3ff00000 	.word	0x3ff00000
   83c14:	401c0000 	.word	0x401c0000
   83c18:	3fe00000 	.word	0x3fe00000
   83c1c:	40240000 	.word	0x40240000
   83c20:	40140000 	.word	0x40140000
   83c24:	4650      	mov	r0, sl
   83c26:	f001 fe5d 	bl	858e4 <__aeabi_i2d>
   83c2a:	463a      	mov	r2, r7
   83c2c:	4643      	mov	r3, r8
   83c2e:	f001 febf 	bl	859b0 <__aeabi_dmul>
   83c32:	2200      	movs	r2, #0
   83c34:	4bc1      	ldr	r3, [pc, #772]	; (83f3c <_dtoa_r+0xd94>)
   83c36:	f001 fd09 	bl	8564c <__adddf3>
   83c3a:	4605      	mov	r5, r0
   83c3c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83c40:	4641      	mov	r1, r8
   83c42:	2200      	movs	r2, #0
   83c44:	4bbe      	ldr	r3, [pc, #760]	; (83f40 <_dtoa_r+0xd98>)
   83c46:	4638      	mov	r0, r7
   83c48:	f001 fcfe 	bl	85648 <__aeabi_dsub>
   83c4c:	462a      	mov	r2, r5
   83c4e:	4633      	mov	r3, r6
   83c50:	4682      	mov	sl, r0
   83c52:	468b      	mov	fp, r1
   83c54:	f002 f93c 	bl	85ed0 <__aeabi_dcmpgt>
   83c58:	4680      	mov	r8, r0
   83c5a:	2800      	cmp	r0, #0
   83c5c:	f040 8110 	bne.w	83e80 <_dtoa_r+0xcd8>
   83c60:	462a      	mov	r2, r5
   83c62:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   83c66:	4650      	mov	r0, sl
   83c68:	4659      	mov	r1, fp
   83c6a:	f002 f913 	bl	85e94 <__aeabi_dcmplt>
   83c6e:	b118      	cbz	r0, 83c78 <_dtoa_r+0xad0>
   83c70:	4646      	mov	r6, r8
   83c72:	e770      	b.n	83b56 <_dtoa_r+0x9ae>
   83c74:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83c78:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   83c7c:	f7ff bb8f 	b.w	8339e <_dtoa_r+0x1f6>
   83c80:	9804      	ldr	r0, [sp, #16]
   83c82:	f7ff bac0 	b.w	83206 <_dtoa_r+0x5e>
   83c86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83c88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83c8a:	1afb      	subs	r3, r7, r3
   83c8c:	441a      	add	r2, r3
   83c8e:	970c      	str	r7, [sp, #48]	; 0x30
   83c90:	920d      	str	r2, [sp, #52]	; 0x34
   83c92:	2700      	movs	r7, #0
   83c94:	e468      	b.n	83568 <_dtoa_r+0x3c0>
   83c96:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   83c9a:	f04f 0a02 	mov.w	sl, #2
   83c9e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   83ca2:	e656      	b.n	83952 <_dtoa_r+0x7aa>
   83ca4:	2100      	movs	r1, #0
   83ca6:	2301      	movs	r3, #1
   83ca8:	4620      	mov	r0, r4
   83caa:	6461      	str	r1, [r4, #68]	; 0x44
   83cac:	9325      	str	r3, [sp, #148]	; 0x94
   83cae:	f000 fd4d 	bl	8474c <_Balloc>
   83cb2:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83cb4:	9004      	str	r0, [sp, #16]
   83cb6:	9307      	str	r3, [sp, #28]
   83cb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83cba:	6420      	str	r0, [r4, #64]	; 0x40
   83cbc:	930f      	str	r3, [sp, #60]	; 0x3c
   83cbe:	e627      	b.n	83910 <_dtoa_r+0x768>
   83cc0:	2a00      	cmp	r2, #0
   83cc2:	46d0      	mov	r8, sl
   83cc4:	f8cd b020 	str.w	fp, [sp, #32]
   83cc8:	469a      	mov	sl, r3
   83cca:	dd11      	ble.n	83cf0 <_dtoa_r+0xb48>
   83ccc:	4649      	mov	r1, r9
   83cce:	2201      	movs	r2, #1
   83cd0:	4620      	mov	r0, r4
   83cd2:	f000 fee9 	bl	84aa8 <__lshift>
   83cd6:	4641      	mov	r1, r8
   83cd8:	4681      	mov	r9, r0
   83cda:	f000 ff35 	bl	84b48 <__mcmp>
   83cde:	2800      	cmp	r0, #0
   83ce0:	f340 8145 	ble.w	83f6e <_dtoa_r+0xdc6>
   83ce4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83ce8:	f000 8105 	beq.w	83ef6 <_dtoa_r+0xd4e>
   83cec:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83cf0:	46b3      	mov	fp, r6
   83cf2:	f887 a000 	strb.w	sl, [r7]
   83cf6:	1c7d      	adds	r5, r7, #1
   83cf8:	9e08      	ldr	r6, [sp, #32]
   83cfa:	e5d0      	b.n	8389e <_dtoa_r+0x6f6>
   83cfc:	d104      	bne.n	83d08 <_dtoa_r+0xb60>
   83cfe:	f01a 0f01 	tst.w	sl, #1
   83d02:	d001      	beq.n	83d08 <_dtoa_r+0xb60>
   83d04:	e5bb      	b.n	8387e <_dtoa_r+0x6d6>
   83d06:	4615      	mov	r5, r2
   83d08:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83d0c:	1e6a      	subs	r2, r5, #1
   83d0e:	2b30      	cmp	r3, #48	; 0x30
   83d10:	d0f9      	beq.n	83d06 <_dtoa_r+0xb5e>
   83d12:	e5c4      	b.n	8389e <_dtoa_r+0x6f6>
   83d14:	2230      	movs	r2, #48	; 0x30
   83d16:	9904      	ldr	r1, [sp, #16]
   83d18:	700a      	strb	r2, [r1, #0]
   83d1a:	9a02      	ldr	r2, [sp, #8]
   83d1c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83d20:	3201      	adds	r2, #1
   83d22:	9202      	str	r2, [sp, #8]
   83d24:	f7ff bbfb 	b.w	8351e <_dtoa_r+0x376>
   83d28:	f000 80bb 	beq.w	83ea2 <_dtoa_r+0xcfa>
   83d2c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83d30:	9b02      	ldr	r3, [sp, #8]
   83d32:	f04f 0a02 	mov.w	sl, #2
   83d36:	425d      	negs	r5, r3
   83d38:	4b82      	ldr	r3, [pc, #520]	; (83f44 <_dtoa_r+0xd9c>)
   83d3a:	f005 020f 	and.w	r2, r5, #15
   83d3e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83d42:	e9d3 2300 	ldrd	r2, r3, [r3]
   83d46:	f001 fe33 	bl	859b0 <__aeabi_dmul>
   83d4a:	112d      	asrs	r5, r5, #4
   83d4c:	4607      	mov	r7, r0
   83d4e:	4688      	mov	r8, r1
   83d50:	f43f ae1a 	beq.w	83988 <_dtoa_r+0x7e0>
   83d54:	4e7c      	ldr	r6, [pc, #496]	; (83f48 <_dtoa_r+0xda0>)
   83d56:	07eb      	lsls	r3, r5, #31
   83d58:	d509      	bpl.n	83d6e <_dtoa_r+0xbc6>
   83d5a:	e9d6 2300 	ldrd	r2, r3, [r6]
   83d5e:	4638      	mov	r0, r7
   83d60:	4641      	mov	r1, r8
   83d62:	f001 fe25 	bl	859b0 <__aeabi_dmul>
   83d66:	4607      	mov	r7, r0
   83d68:	4688      	mov	r8, r1
   83d6a:	f10a 0a01 	add.w	sl, sl, #1
   83d6e:	106d      	asrs	r5, r5, #1
   83d70:	f106 0608 	add.w	r6, r6, #8
   83d74:	d1ef      	bne.n	83d56 <_dtoa_r+0xbae>
   83d76:	e607      	b.n	83988 <_dtoa_r+0x7e0>
   83d78:	6871      	ldr	r1, [r6, #4]
   83d7a:	4620      	mov	r0, r4
   83d7c:	f000 fce6 	bl	8474c <_Balloc>
   83d80:	4605      	mov	r5, r0
   83d82:	6933      	ldr	r3, [r6, #16]
   83d84:	f106 010c 	add.w	r1, r6, #12
   83d88:	3302      	adds	r3, #2
   83d8a:	009a      	lsls	r2, r3, #2
   83d8c:	300c      	adds	r0, #12
   83d8e:	f000 fc5b 	bl	84648 <memcpy>
   83d92:	4629      	mov	r1, r5
   83d94:	2201      	movs	r2, #1
   83d96:	4620      	mov	r0, r4
   83d98:	f000 fe86 	bl	84aa8 <__lshift>
   83d9c:	9008      	str	r0, [sp, #32]
   83d9e:	e4b6      	b.n	8370e <_dtoa_r+0x566>
   83da0:	2b39      	cmp	r3, #57	; 0x39
   83da2:	f8cd b020 	str.w	fp, [sp, #32]
   83da6:	46d0      	mov	r8, sl
   83da8:	f000 80a5 	beq.w	83ef6 <_dtoa_r+0xd4e>
   83dac:	f103 0a01 	add.w	sl, r3, #1
   83db0:	46b3      	mov	fp, r6
   83db2:	f887 a000 	strb.w	sl, [r7]
   83db6:	1c7d      	adds	r5, r7, #1
   83db8:	9e08      	ldr	r6, [sp, #32]
   83dba:	e570      	b.n	8389e <_dtoa_r+0x6f6>
   83dbc:	465a      	mov	r2, fp
   83dbe:	46d0      	mov	r8, sl
   83dc0:	46b3      	mov	fp, r6
   83dc2:	469a      	mov	sl, r3
   83dc4:	4616      	mov	r6, r2
   83dc6:	e54e      	b.n	83866 <_dtoa_r+0x6be>
   83dc8:	9812      	ldr	r0, [sp, #72]	; 0x48
   83dca:	495e      	ldr	r1, [pc, #376]	; (83f44 <_dtoa_r+0xd9c>)
   83dcc:	462a      	mov	r2, r5
   83dce:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   83dd2:	4633      	mov	r3, r6
   83dd4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   83dd8:	f001 fdea 	bl	859b0 <__aeabi_dmul>
   83ddc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   83de0:	4638      	mov	r0, r7
   83de2:	4641      	mov	r1, r8
   83de4:	f002 f894 	bl	85f10 <__aeabi_d2iz>
   83de8:	4605      	mov	r5, r0
   83dea:	f001 fd7b 	bl	858e4 <__aeabi_i2d>
   83dee:	4602      	mov	r2, r0
   83df0:	460b      	mov	r3, r1
   83df2:	4638      	mov	r0, r7
   83df4:	4641      	mov	r1, r8
   83df6:	f001 fc27 	bl	85648 <__aeabi_dsub>
   83dfa:	4606      	mov	r6, r0
   83dfc:	9812      	ldr	r0, [sp, #72]	; 0x48
   83dfe:	9a04      	ldr	r2, [sp, #16]
   83e00:	3530      	adds	r5, #48	; 0x30
   83e02:	2801      	cmp	r0, #1
   83e04:	7015      	strb	r5, [r2, #0]
   83e06:	460f      	mov	r7, r1
   83e08:	f102 0501 	add.w	r5, r2, #1
   83e0c:	d026      	beq.n	83e5c <_dtoa_r+0xcb4>
   83e0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e10:	9a04      	ldr	r2, [sp, #16]
   83e12:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83e16:	4413      	add	r3, r2
   83e18:	f04f 0a00 	mov.w	sl, #0
   83e1c:	4699      	mov	r9, r3
   83e1e:	f8df b130 	ldr.w	fp, [pc, #304]	; 83f50 <_dtoa_r+0xda8>
   83e22:	4652      	mov	r2, sl
   83e24:	465b      	mov	r3, fp
   83e26:	4630      	mov	r0, r6
   83e28:	4639      	mov	r1, r7
   83e2a:	f001 fdc1 	bl	859b0 <__aeabi_dmul>
   83e2e:	460f      	mov	r7, r1
   83e30:	4606      	mov	r6, r0
   83e32:	f002 f86d 	bl	85f10 <__aeabi_d2iz>
   83e36:	4680      	mov	r8, r0
   83e38:	f001 fd54 	bl	858e4 <__aeabi_i2d>
   83e3c:	4602      	mov	r2, r0
   83e3e:	460b      	mov	r3, r1
   83e40:	4630      	mov	r0, r6
   83e42:	4639      	mov	r1, r7
   83e44:	f001 fc00 	bl	85648 <__aeabi_dsub>
   83e48:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83e4c:	f805 8b01 	strb.w	r8, [r5], #1
   83e50:	454d      	cmp	r5, r9
   83e52:	4606      	mov	r6, r0
   83e54:	460f      	mov	r7, r1
   83e56:	d1e4      	bne.n	83e22 <_dtoa_r+0xc7a>
   83e58:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83e5c:	2200      	movs	r2, #0
   83e5e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   83e62:	4b3a      	ldr	r3, [pc, #232]	; (83f4c <_dtoa_r+0xda4>)
   83e64:	f001 fbf2 	bl	8564c <__adddf3>
   83e68:	4632      	mov	r2, r6
   83e6a:	463b      	mov	r3, r7
   83e6c:	f002 f812 	bl	85e94 <__aeabi_dcmplt>
   83e70:	2800      	cmp	r0, #0
   83e72:	d046      	beq.n	83f02 <_dtoa_r+0xd5a>
   83e74:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83e76:	9302      	str	r3, [sp, #8]
   83e78:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83e7c:	f7ff bb42 	b.w	83504 <_dtoa_r+0x35c>
   83e80:	f04f 0800 	mov.w	r8, #0
   83e84:	4646      	mov	r6, r8
   83e86:	e6a8      	b.n	83bda <_dtoa_r+0xa32>
   83e88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83e8a:	9a07      	ldr	r2, [sp, #28]
   83e8c:	1a9d      	subs	r5, r3, r2
   83e8e:	2300      	movs	r3, #0
   83e90:	f7ff bb70 	b.w	83574 <_dtoa_r+0x3cc>
   83e94:	9b18      	ldr	r3, [sp, #96]	; 0x60
   83e96:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83e98:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83e9c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83e9e:	f7ff bb69 	b.w	83574 <_dtoa_r+0x3cc>
   83ea2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   83ea6:	f04f 0a02 	mov.w	sl, #2
   83eaa:	e56d      	b.n	83988 <_dtoa_r+0x7e0>
   83eac:	9b07      	ldr	r3, [sp, #28]
   83eae:	2b00      	cmp	r3, #0
   83eb0:	f43f aeb8 	beq.w	83c24 <_dtoa_r+0xa7c>
   83eb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83eb6:	2b00      	cmp	r3, #0
   83eb8:	f77f aede 	ble.w	83c78 <_dtoa_r+0xad0>
   83ebc:	2200      	movs	r2, #0
   83ebe:	4b24      	ldr	r3, [pc, #144]	; (83f50 <_dtoa_r+0xda8>)
   83ec0:	4638      	mov	r0, r7
   83ec2:	4641      	mov	r1, r8
   83ec4:	f001 fd74 	bl	859b0 <__aeabi_dmul>
   83ec8:	4607      	mov	r7, r0
   83eca:	4688      	mov	r8, r1
   83ecc:	f10a 0001 	add.w	r0, sl, #1
   83ed0:	f001 fd08 	bl	858e4 <__aeabi_i2d>
   83ed4:	463a      	mov	r2, r7
   83ed6:	4643      	mov	r3, r8
   83ed8:	f001 fd6a 	bl	859b0 <__aeabi_dmul>
   83edc:	2200      	movs	r2, #0
   83ede:	4b17      	ldr	r3, [pc, #92]	; (83f3c <_dtoa_r+0xd94>)
   83ee0:	f001 fbb4 	bl	8564c <__adddf3>
   83ee4:	9a02      	ldr	r2, [sp, #8]
   83ee6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83ee8:	3a01      	subs	r2, #1
   83eea:	4605      	mov	r5, r0
   83eec:	9215      	str	r2, [sp, #84]	; 0x54
   83eee:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83ef2:	9312      	str	r3, [sp, #72]	; 0x48
   83ef4:	e569      	b.n	839ca <_dtoa_r+0x822>
   83ef6:	2239      	movs	r2, #57	; 0x39
   83ef8:	46b3      	mov	fp, r6
   83efa:	703a      	strb	r2, [r7, #0]
   83efc:	9e08      	ldr	r6, [sp, #32]
   83efe:	1c7d      	adds	r5, r7, #1
   83f00:	e4bf      	b.n	83882 <_dtoa_r+0x6da>
   83f02:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   83f06:	2000      	movs	r0, #0
   83f08:	4910      	ldr	r1, [pc, #64]	; (83f4c <_dtoa_r+0xda4>)
   83f0a:	f001 fb9d 	bl	85648 <__aeabi_dsub>
   83f0e:	4632      	mov	r2, r6
   83f10:	463b      	mov	r3, r7
   83f12:	f001 ffdd 	bl	85ed0 <__aeabi_dcmpgt>
   83f16:	b908      	cbnz	r0, 83f1c <_dtoa_r+0xd74>
   83f18:	e6ae      	b.n	83c78 <_dtoa_r+0xad0>
   83f1a:	4615      	mov	r5, r2
   83f1c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83f20:	1e6a      	subs	r2, r5, #1
   83f22:	2b30      	cmp	r3, #48	; 0x30
   83f24:	d0f9      	beq.n	83f1a <_dtoa_r+0xd72>
   83f26:	e5d7      	b.n	83ad8 <_dtoa_r+0x930>
   83f28:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83f2c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83f2e:	9302      	str	r3, [sp, #8]
   83f30:	f7ff bae8 	b.w	83504 <_dtoa_r+0x35c>
   83f34:	970c      	str	r7, [sp, #48]	; 0x30
   83f36:	f7ff bba7 	b.w	83688 <_dtoa_r+0x4e0>
   83f3a:	bf00      	nop
   83f3c:	401c0000 	.word	0x401c0000
   83f40:	40140000 	.word	0x40140000
   83f44:	00086448 	.word	0x00086448
   83f48:	00086420 	.word	0x00086420
   83f4c:	3fe00000 	.word	0x3fe00000
   83f50:	40240000 	.word	0x40240000
   83f54:	2b39      	cmp	r3, #57	; 0x39
   83f56:	f8cd b020 	str.w	fp, [sp, #32]
   83f5a:	46d0      	mov	r8, sl
   83f5c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83f60:	469a      	mov	sl, r3
   83f62:	d0c8      	beq.n	83ef6 <_dtoa_r+0xd4e>
   83f64:	f1bb 0f00 	cmp.w	fp, #0
   83f68:	f73f aec0 	bgt.w	83cec <_dtoa_r+0xb44>
   83f6c:	e6c0      	b.n	83cf0 <_dtoa_r+0xb48>
   83f6e:	f47f aebf 	bne.w	83cf0 <_dtoa_r+0xb48>
   83f72:	f01a 0f01 	tst.w	sl, #1
   83f76:	f43f aebb 	beq.w	83cf0 <_dtoa_r+0xb48>
   83f7a:	e6b3      	b.n	83ce4 <_dtoa_r+0xb3c>
   83f7c:	f04f 0800 	mov.w	r8, #0
   83f80:	4646      	mov	r6, r8
   83f82:	e5e8      	b.n	83b56 <_dtoa_r+0x9ae>
   83f84:	4631      	mov	r1, r6
   83f86:	2300      	movs	r3, #0
   83f88:	220a      	movs	r2, #10
   83f8a:	4620      	mov	r0, r4
   83f8c:	f000 fc0e 	bl	847ac <__multadd>
   83f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83f92:	4606      	mov	r6, r0
   83f94:	2b00      	cmp	r3, #0
   83f96:	dd07      	ble.n	83fa8 <_dtoa_r+0xe00>
   83f98:	9307      	str	r3, [sp, #28]
   83f9a:	f7ff bbab 	b.w	836f4 <_dtoa_r+0x54c>
   83f9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83fa0:	2b02      	cmp	r3, #2
   83fa2:	dc1f      	bgt.n	83fe4 <_dtoa_r+0xe3c>
   83fa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83fa6:	e43c      	b.n	83822 <_dtoa_r+0x67a>
   83fa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83faa:	2b02      	cmp	r3, #2
   83fac:	dc1a      	bgt.n	83fe4 <_dtoa_r+0xe3c>
   83fae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83fb0:	e7f2      	b.n	83f98 <_dtoa_r+0xdf0>
   83fb2:	f43f ab81 	beq.w	836b8 <_dtoa_r+0x510>
   83fb6:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   83fba:	e411      	b.n	837e0 <_dtoa_r+0x638>
   83fbc:	2500      	movs	r5, #0
   83fbe:	4620      	mov	r0, r4
   83fc0:	6465      	str	r5, [r4, #68]	; 0x44
   83fc2:	4629      	mov	r1, r5
   83fc4:	f000 fbc2 	bl	8474c <_Balloc>
   83fc8:	f04f 33ff 	mov.w	r3, #4294967295
   83fcc:	9307      	str	r3, [sp, #28]
   83fce:	930f      	str	r3, [sp, #60]	; 0x3c
   83fd0:	2301      	movs	r3, #1
   83fd2:	9004      	str	r0, [sp, #16]
   83fd4:	9525      	str	r5, [sp, #148]	; 0x94
   83fd6:	6420      	str	r0, [r4, #64]	; 0x40
   83fd8:	930b      	str	r3, [sp, #44]	; 0x2c
   83fda:	f7ff b9e0 	b.w	8339e <_dtoa_r+0x1f6>
   83fde:	2501      	movs	r5, #1
   83fe0:	f7ff b9a8 	b.w	83334 <_dtoa_r+0x18c>
   83fe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83fe6:	9307      	str	r3, [sp, #28]
   83fe8:	e5e8      	b.n	83bbc <_dtoa_r+0xa14>
   83fea:	bf00      	nop

00083fec <__libc_fini_array>:
   83fec:	b538      	push	{r3, r4, r5, lr}
   83fee:	4c0a      	ldr	r4, [pc, #40]	; (84018 <__libc_fini_array+0x2c>)
   83ff0:	4d0a      	ldr	r5, [pc, #40]	; (8401c <__libc_fini_array+0x30>)
   83ff2:	1b64      	subs	r4, r4, r5
   83ff4:	10a4      	asrs	r4, r4, #2
   83ff6:	d00a      	beq.n	8400e <__libc_fini_array+0x22>
   83ff8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   83ffc:	3b01      	subs	r3, #1
   83ffe:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   84002:	3c01      	subs	r4, #1
   84004:	f855 3904 	ldr.w	r3, [r5], #-4
   84008:	4798      	blx	r3
   8400a:	2c00      	cmp	r4, #0
   8400c:	d1f9      	bne.n	84002 <__libc_fini_array+0x16>
   8400e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   84012:	f002 bb0f 	b.w	86634 <_fini>
   84016:	bf00      	nop
   84018:	00086644 	.word	0x00086644
   8401c:	00086640 	.word	0x00086640

00084020 <__locale_ctype_ptr_l>:
   84020:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   84024:	4770      	bx	lr
   84026:	bf00      	nop

00084028 <_localeconv_r>:
   84028:	4a04      	ldr	r2, [pc, #16]	; (8403c <_localeconv_r+0x14>)
   8402a:	4b05      	ldr	r3, [pc, #20]	; (84040 <_localeconv_r+0x18>)
   8402c:	6812      	ldr	r2, [r2, #0]
   8402e:	6b50      	ldr	r0, [r2, #52]	; 0x34
   84030:	2800      	cmp	r0, #0
   84032:	bf08      	it	eq
   84034:	4618      	moveq	r0, r3
   84036:	30f0      	adds	r0, #240	; 0xf0
   84038:	4770      	bx	lr
   8403a:	bf00      	nop
   8403c:	20070544 	.word	0x20070544
   84040:	20070974 	.word	0x20070974

00084044 <__retarget_lock_acquire_recursive>:
   84044:	4770      	bx	lr
   84046:	bf00      	nop

00084048 <__retarget_lock_release_recursive>:
   84048:	4770      	bx	lr
   8404a:	bf00      	nop

0008404c <_malloc_r>:
   8404c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84050:	f101 060b 	add.w	r6, r1, #11
   84054:	2e16      	cmp	r6, #22
   84056:	b083      	sub	sp, #12
   84058:	4605      	mov	r5, r0
   8405a:	f240 809e 	bls.w	8419a <_malloc_r+0x14e>
   8405e:	f036 0607 	bics.w	r6, r6, #7
   84062:	f100 80bd 	bmi.w	841e0 <_malloc_r+0x194>
   84066:	42b1      	cmp	r1, r6
   84068:	f200 80ba 	bhi.w	841e0 <_malloc_r+0x194>
   8406c:	f000 fb62 	bl	84734 <__malloc_lock>
   84070:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   84074:	f0c0 8285 	bcc.w	84582 <_malloc_r+0x536>
   84078:	0a73      	lsrs	r3, r6, #9
   8407a:	f000 80b8 	beq.w	841ee <_malloc_r+0x1a2>
   8407e:	2b04      	cmp	r3, #4
   84080:	f200 816c 	bhi.w	8435c <_malloc_r+0x310>
   84084:	09b3      	lsrs	r3, r6, #6
   84086:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8408a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8408e:	00c1      	lsls	r1, r0, #3
   84090:	4fb8      	ldr	r7, [pc, #736]	; (84374 <_malloc_r+0x328>)
   84092:	4439      	add	r1, r7
   84094:	684c      	ldr	r4, [r1, #4]
   84096:	3908      	subs	r1, #8
   84098:	42a1      	cmp	r1, r4
   8409a:	d106      	bne.n	840aa <_malloc_r+0x5e>
   8409c:	e00c      	b.n	840b8 <_malloc_r+0x6c>
   8409e:	2a00      	cmp	r2, #0
   840a0:	f280 80ab 	bge.w	841fa <_malloc_r+0x1ae>
   840a4:	68e4      	ldr	r4, [r4, #12]
   840a6:	42a1      	cmp	r1, r4
   840a8:	d006      	beq.n	840b8 <_malloc_r+0x6c>
   840aa:	6863      	ldr	r3, [r4, #4]
   840ac:	f023 0303 	bic.w	r3, r3, #3
   840b0:	1b9a      	subs	r2, r3, r6
   840b2:	2a0f      	cmp	r2, #15
   840b4:	ddf3      	ble.n	8409e <_malloc_r+0x52>
   840b6:	4670      	mov	r0, lr
   840b8:	693c      	ldr	r4, [r7, #16]
   840ba:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 84388 <_malloc_r+0x33c>
   840be:	4574      	cmp	r4, lr
   840c0:	f000 819e 	beq.w	84400 <_malloc_r+0x3b4>
   840c4:	6863      	ldr	r3, [r4, #4]
   840c6:	f023 0303 	bic.w	r3, r3, #3
   840ca:	1b9a      	subs	r2, r3, r6
   840cc:	2a0f      	cmp	r2, #15
   840ce:	f300 8183 	bgt.w	843d8 <_malloc_r+0x38c>
   840d2:	2a00      	cmp	r2, #0
   840d4:	f8c7 e014 	str.w	lr, [r7, #20]
   840d8:	f8c7 e010 	str.w	lr, [r7, #16]
   840dc:	f280 8091 	bge.w	84202 <_malloc_r+0x1b6>
   840e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   840e4:	f080 8154 	bcs.w	84390 <_malloc_r+0x344>
   840e8:	2201      	movs	r2, #1
   840ea:	08db      	lsrs	r3, r3, #3
   840ec:	6879      	ldr	r1, [r7, #4]
   840ee:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   840f2:	4413      	add	r3, r2
   840f4:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   840f8:	fa02 f20c 	lsl.w	r2, r2, ip
   840fc:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   84100:	430a      	orrs	r2, r1
   84102:	f1ac 0108 	sub.w	r1, ip, #8
   84106:	60e1      	str	r1, [r4, #12]
   84108:	f8c4 8008 	str.w	r8, [r4, #8]
   8410c:	607a      	str	r2, [r7, #4]
   8410e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   84112:	f8c8 400c 	str.w	r4, [r8, #12]
   84116:	2401      	movs	r4, #1
   84118:	1083      	asrs	r3, r0, #2
   8411a:	409c      	lsls	r4, r3
   8411c:	4294      	cmp	r4, r2
   8411e:	d87d      	bhi.n	8421c <_malloc_r+0x1d0>
   84120:	4214      	tst	r4, r2
   84122:	d106      	bne.n	84132 <_malloc_r+0xe6>
   84124:	f020 0003 	bic.w	r0, r0, #3
   84128:	0064      	lsls	r4, r4, #1
   8412a:	4214      	tst	r4, r2
   8412c:	f100 0004 	add.w	r0, r0, #4
   84130:	d0fa      	beq.n	84128 <_malloc_r+0xdc>
   84132:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   84136:	46cc      	mov	ip, r9
   84138:	4680      	mov	r8, r0
   8413a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8413e:	459c      	cmp	ip, r3
   84140:	d107      	bne.n	84152 <_malloc_r+0x106>
   84142:	e15f      	b.n	84404 <_malloc_r+0x3b8>
   84144:	2a00      	cmp	r2, #0
   84146:	f280 816d 	bge.w	84424 <_malloc_r+0x3d8>
   8414a:	68db      	ldr	r3, [r3, #12]
   8414c:	459c      	cmp	ip, r3
   8414e:	f000 8159 	beq.w	84404 <_malloc_r+0x3b8>
   84152:	6859      	ldr	r1, [r3, #4]
   84154:	f021 0103 	bic.w	r1, r1, #3
   84158:	1b8a      	subs	r2, r1, r6
   8415a:	2a0f      	cmp	r2, #15
   8415c:	ddf2      	ble.n	84144 <_malloc_r+0xf8>
   8415e:	68dc      	ldr	r4, [r3, #12]
   84160:	f8d3 c008 	ldr.w	ip, [r3, #8]
   84164:	f046 0801 	orr.w	r8, r6, #1
   84168:	4628      	mov	r0, r5
   8416a:	441e      	add	r6, r3
   8416c:	f042 0501 	orr.w	r5, r2, #1
   84170:	f8c3 8004 	str.w	r8, [r3, #4]
   84174:	f8cc 400c 	str.w	r4, [ip, #12]
   84178:	f8c4 c008 	str.w	ip, [r4, #8]
   8417c:	617e      	str	r6, [r7, #20]
   8417e:	613e      	str	r6, [r7, #16]
   84180:	f8c6 e00c 	str.w	lr, [r6, #12]
   84184:	f8c6 e008 	str.w	lr, [r6, #8]
   84188:	6075      	str	r5, [r6, #4]
   8418a:	505a      	str	r2, [r3, r1]
   8418c:	9300      	str	r3, [sp, #0]
   8418e:	f000 fad7 	bl	84740 <__malloc_unlock>
   84192:	9b00      	ldr	r3, [sp, #0]
   84194:	f103 0408 	add.w	r4, r3, #8
   84198:	e01e      	b.n	841d8 <_malloc_r+0x18c>
   8419a:	2910      	cmp	r1, #16
   8419c:	d820      	bhi.n	841e0 <_malloc_r+0x194>
   8419e:	f000 fac9 	bl	84734 <__malloc_lock>
   841a2:	2610      	movs	r6, #16
   841a4:	2318      	movs	r3, #24
   841a6:	2002      	movs	r0, #2
   841a8:	4f72      	ldr	r7, [pc, #456]	; (84374 <_malloc_r+0x328>)
   841aa:	443b      	add	r3, r7
   841ac:	685c      	ldr	r4, [r3, #4]
   841ae:	f1a3 0208 	sub.w	r2, r3, #8
   841b2:	4294      	cmp	r4, r2
   841b4:	f000 812f 	beq.w	84416 <_malloc_r+0x3ca>
   841b8:	6863      	ldr	r3, [r4, #4]
   841ba:	68e1      	ldr	r1, [r4, #12]
   841bc:	f023 0303 	bic.w	r3, r3, #3
   841c0:	4423      	add	r3, r4
   841c2:	685a      	ldr	r2, [r3, #4]
   841c4:	68a6      	ldr	r6, [r4, #8]
   841c6:	f042 0201 	orr.w	r2, r2, #1
   841ca:	60f1      	str	r1, [r6, #12]
   841cc:	4628      	mov	r0, r5
   841ce:	608e      	str	r6, [r1, #8]
   841d0:	605a      	str	r2, [r3, #4]
   841d2:	f000 fab5 	bl	84740 <__malloc_unlock>
   841d6:	3408      	adds	r4, #8
   841d8:	4620      	mov	r0, r4
   841da:	b003      	add	sp, #12
   841dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   841e0:	2400      	movs	r4, #0
   841e2:	230c      	movs	r3, #12
   841e4:	4620      	mov	r0, r4
   841e6:	602b      	str	r3, [r5, #0]
   841e8:	b003      	add	sp, #12
   841ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   841ee:	2040      	movs	r0, #64	; 0x40
   841f0:	f44f 7100 	mov.w	r1, #512	; 0x200
   841f4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   841f8:	e74a      	b.n	84090 <_malloc_r+0x44>
   841fa:	4423      	add	r3, r4
   841fc:	685a      	ldr	r2, [r3, #4]
   841fe:	68e1      	ldr	r1, [r4, #12]
   84200:	e7e0      	b.n	841c4 <_malloc_r+0x178>
   84202:	4423      	add	r3, r4
   84204:	685a      	ldr	r2, [r3, #4]
   84206:	4628      	mov	r0, r5
   84208:	f042 0201 	orr.w	r2, r2, #1
   8420c:	605a      	str	r2, [r3, #4]
   8420e:	3408      	adds	r4, #8
   84210:	f000 fa96 	bl	84740 <__malloc_unlock>
   84214:	4620      	mov	r0, r4
   84216:	b003      	add	sp, #12
   84218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8421c:	68bc      	ldr	r4, [r7, #8]
   8421e:	6863      	ldr	r3, [r4, #4]
   84220:	f023 0803 	bic.w	r8, r3, #3
   84224:	45b0      	cmp	r8, r6
   84226:	d304      	bcc.n	84232 <_malloc_r+0x1e6>
   84228:	eba8 0306 	sub.w	r3, r8, r6
   8422c:	2b0f      	cmp	r3, #15
   8422e:	f300 8085 	bgt.w	8433c <_malloc_r+0x2f0>
   84232:	f8df 9158 	ldr.w	r9, [pc, #344]	; 8438c <_malloc_r+0x340>
   84236:	4b50      	ldr	r3, [pc, #320]	; (84378 <_malloc_r+0x32c>)
   84238:	f8d9 2000 	ldr.w	r2, [r9]
   8423c:	681b      	ldr	r3, [r3, #0]
   8423e:	3201      	adds	r2, #1
   84240:	4433      	add	r3, r6
   84242:	eb04 0a08 	add.w	sl, r4, r8
   84246:	f000 8154 	beq.w	844f2 <_malloc_r+0x4a6>
   8424a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8424e:	330f      	adds	r3, #15
   84250:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   84254:	f02b 0b0f 	bic.w	fp, fp, #15
   84258:	4659      	mov	r1, fp
   8425a:	4628      	mov	r0, r5
   8425c:	f000 fd72 	bl	84d44 <_sbrk_r>
   84260:	1c41      	adds	r1, r0, #1
   84262:	4602      	mov	r2, r0
   84264:	f000 80fb 	beq.w	8445e <_malloc_r+0x412>
   84268:	4582      	cmp	sl, r0
   8426a:	f200 80f6 	bhi.w	8445a <_malloc_r+0x40e>
   8426e:	4b43      	ldr	r3, [pc, #268]	; (8437c <_malloc_r+0x330>)
   84270:	6819      	ldr	r1, [r3, #0]
   84272:	4459      	add	r1, fp
   84274:	6019      	str	r1, [r3, #0]
   84276:	f000 814c 	beq.w	84512 <_malloc_r+0x4c6>
   8427a:	f8d9 0000 	ldr.w	r0, [r9]
   8427e:	3001      	adds	r0, #1
   84280:	bf1b      	ittet	ne
   84282:	eba2 0a0a 	subne.w	sl, r2, sl
   84286:	4451      	addne	r1, sl
   84288:	f8c9 2000 	streq.w	r2, [r9]
   8428c:	6019      	strne	r1, [r3, #0]
   8428e:	f012 0107 	ands.w	r1, r2, #7
   84292:	f000 8114 	beq.w	844be <_malloc_r+0x472>
   84296:	f1c1 0008 	rsb	r0, r1, #8
   8429a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   8429e:	4402      	add	r2, r0
   842a0:	3108      	adds	r1, #8
   842a2:	eb02 090b 	add.w	r9, r2, fp
   842a6:	f3c9 090b 	ubfx	r9, r9, #0, #12
   842aa:	eba1 0909 	sub.w	r9, r1, r9
   842ae:	4649      	mov	r1, r9
   842b0:	4628      	mov	r0, r5
   842b2:	9301      	str	r3, [sp, #4]
   842b4:	9200      	str	r2, [sp, #0]
   842b6:	f000 fd45 	bl	84d44 <_sbrk_r>
   842ba:	1c43      	adds	r3, r0, #1
   842bc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   842c0:	f000 8142 	beq.w	84548 <_malloc_r+0x4fc>
   842c4:	1a80      	subs	r0, r0, r2
   842c6:	4448      	add	r0, r9
   842c8:	f040 0001 	orr.w	r0, r0, #1
   842cc:	6819      	ldr	r1, [r3, #0]
   842ce:	42bc      	cmp	r4, r7
   842d0:	4449      	add	r1, r9
   842d2:	60ba      	str	r2, [r7, #8]
   842d4:	6019      	str	r1, [r3, #0]
   842d6:	6050      	str	r0, [r2, #4]
   842d8:	d017      	beq.n	8430a <_malloc_r+0x2be>
   842da:	f1b8 0f0f 	cmp.w	r8, #15
   842de:	f240 80fa 	bls.w	844d6 <_malloc_r+0x48a>
   842e2:	f04f 0c05 	mov.w	ip, #5
   842e6:	6862      	ldr	r2, [r4, #4]
   842e8:	f1a8 000c 	sub.w	r0, r8, #12
   842ec:	f020 0007 	bic.w	r0, r0, #7
   842f0:	f002 0201 	and.w	r2, r2, #1
   842f4:	eb04 0e00 	add.w	lr, r4, r0
   842f8:	4302      	orrs	r2, r0
   842fa:	280f      	cmp	r0, #15
   842fc:	6062      	str	r2, [r4, #4]
   842fe:	f8ce c004 	str.w	ip, [lr, #4]
   84302:	f8ce c008 	str.w	ip, [lr, #8]
   84306:	f200 8116 	bhi.w	84536 <_malloc_r+0x4ea>
   8430a:	4b1d      	ldr	r3, [pc, #116]	; (84380 <_malloc_r+0x334>)
   8430c:	68bc      	ldr	r4, [r7, #8]
   8430e:	681a      	ldr	r2, [r3, #0]
   84310:	4291      	cmp	r1, r2
   84312:	bf88      	it	hi
   84314:	6019      	strhi	r1, [r3, #0]
   84316:	4b1b      	ldr	r3, [pc, #108]	; (84384 <_malloc_r+0x338>)
   84318:	681a      	ldr	r2, [r3, #0]
   8431a:	4291      	cmp	r1, r2
   8431c:	6862      	ldr	r2, [r4, #4]
   8431e:	bf88      	it	hi
   84320:	6019      	strhi	r1, [r3, #0]
   84322:	f022 0203 	bic.w	r2, r2, #3
   84326:	4296      	cmp	r6, r2
   84328:	eba2 0306 	sub.w	r3, r2, r6
   8432c:	d801      	bhi.n	84332 <_malloc_r+0x2e6>
   8432e:	2b0f      	cmp	r3, #15
   84330:	dc04      	bgt.n	8433c <_malloc_r+0x2f0>
   84332:	4628      	mov	r0, r5
   84334:	f000 fa04 	bl	84740 <__malloc_unlock>
   84338:	2400      	movs	r4, #0
   8433a:	e74d      	b.n	841d8 <_malloc_r+0x18c>
   8433c:	f046 0201 	orr.w	r2, r6, #1
   84340:	f043 0301 	orr.w	r3, r3, #1
   84344:	4426      	add	r6, r4
   84346:	6062      	str	r2, [r4, #4]
   84348:	4628      	mov	r0, r5
   8434a:	60be      	str	r6, [r7, #8]
   8434c:	3408      	adds	r4, #8
   8434e:	6073      	str	r3, [r6, #4]
   84350:	f000 f9f6 	bl	84740 <__malloc_unlock>
   84354:	4620      	mov	r0, r4
   84356:	b003      	add	sp, #12
   84358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8435c:	2b14      	cmp	r3, #20
   8435e:	d970      	bls.n	84442 <_malloc_r+0x3f6>
   84360:	2b54      	cmp	r3, #84	; 0x54
   84362:	f200 80a2 	bhi.w	844aa <_malloc_r+0x45e>
   84366:	0b33      	lsrs	r3, r6, #12
   84368:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   8436c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   84370:	00c1      	lsls	r1, r0, #3
   84372:	e68d      	b.n	84090 <_malloc_r+0x44>
   84374:	20070ae0 	.word	0x20070ae0
   84378:	20070fbc 	.word	0x20070fbc
   8437c:	20070f8c 	.word	0x20070f8c
   84380:	20070fb4 	.word	0x20070fb4
   84384:	20070fb8 	.word	0x20070fb8
   84388:	20070ae8 	.word	0x20070ae8
   8438c:	20070ee8 	.word	0x20070ee8
   84390:	0a5a      	lsrs	r2, r3, #9
   84392:	2a04      	cmp	r2, #4
   84394:	d95b      	bls.n	8444e <_malloc_r+0x402>
   84396:	2a14      	cmp	r2, #20
   84398:	f200 80ae 	bhi.w	844f8 <_malloc_r+0x4ac>
   8439c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   843a0:	00c9      	lsls	r1, r1, #3
   843a2:	325b      	adds	r2, #91	; 0x5b
   843a4:	eb07 0c01 	add.w	ip, r7, r1
   843a8:	5879      	ldr	r1, [r7, r1]
   843aa:	f1ac 0c08 	sub.w	ip, ip, #8
   843ae:	458c      	cmp	ip, r1
   843b0:	f000 8088 	beq.w	844c4 <_malloc_r+0x478>
   843b4:	684a      	ldr	r2, [r1, #4]
   843b6:	f022 0203 	bic.w	r2, r2, #3
   843ba:	4293      	cmp	r3, r2
   843bc:	d273      	bcs.n	844a6 <_malloc_r+0x45a>
   843be:	6889      	ldr	r1, [r1, #8]
   843c0:	458c      	cmp	ip, r1
   843c2:	d1f7      	bne.n	843b4 <_malloc_r+0x368>
   843c4:	f8dc 300c 	ldr.w	r3, [ip, #12]
   843c8:	687a      	ldr	r2, [r7, #4]
   843ca:	60e3      	str	r3, [r4, #12]
   843cc:	f8c4 c008 	str.w	ip, [r4, #8]
   843d0:	609c      	str	r4, [r3, #8]
   843d2:	f8cc 400c 	str.w	r4, [ip, #12]
   843d6:	e69e      	b.n	84116 <_malloc_r+0xca>
   843d8:	f046 0c01 	orr.w	ip, r6, #1
   843dc:	f042 0101 	orr.w	r1, r2, #1
   843e0:	4426      	add	r6, r4
   843e2:	f8c4 c004 	str.w	ip, [r4, #4]
   843e6:	4628      	mov	r0, r5
   843e8:	617e      	str	r6, [r7, #20]
   843ea:	613e      	str	r6, [r7, #16]
   843ec:	f8c6 e00c 	str.w	lr, [r6, #12]
   843f0:	f8c6 e008 	str.w	lr, [r6, #8]
   843f4:	6071      	str	r1, [r6, #4]
   843f6:	50e2      	str	r2, [r4, r3]
   843f8:	f000 f9a2 	bl	84740 <__malloc_unlock>
   843fc:	3408      	adds	r4, #8
   843fe:	e6eb      	b.n	841d8 <_malloc_r+0x18c>
   84400:	687a      	ldr	r2, [r7, #4]
   84402:	e688      	b.n	84116 <_malloc_r+0xca>
   84404:	f108 0801 	add.w	r8, r8, #1
   84408:	f018 0f03 	tst.w	r8, #3
   8440c:	f10c 0c08 	add.w	ip, ip, #8
   84410:	f47f ae93 	bne.w	8413a <_malloc_r+0xee>
   84414:	e02d      	b.n	84472 <_malloc_r+0x426>
   84416:	68dc      	ldr	r4, [r3, #12]
   84418:	42a3      	cmp	r3, r4
   8441a:	bf08      	it	eq
   8441c:	3002      	addeq	r0, #2
   8441e:	f43f ae4b 	beq.w	840b8 <_malloc_r+0x6c>
   84422:	e6c9      	b.n	841b8 <_malloc_r+0x16c>
   84424:	461c      	mov	r4, r3
   84426:	4419      	add	r1, r3
   84428:	684a      	ldr	r2, [r1, #4]
   8442a:	68db      	ldr	r3, [r3, #12]
   8442c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   84430:	f042 0201 	orr.w	r2, r2, #1
   84434:	604a      	str	r2, [r1, #4]
   84436:	4628      	mov	r0, r5
   84438:	60f3      	str	r3, [r6, #12]
   8443a:	609e      	str	r6, [r3, #8]
   8443c:	f000 f980 	bl	84740 <__malloc_unlock>
   84440:	e6ca      	b.n	841d8 <_malloc_r+0x18c>
   84442:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   84446:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8444a:	00c1      	lsls	r1, r0, #3
   8444c:	e620      	b.n	84090 <_malloc_r+0x44>
   8444e:	099a      	lsrs	r2, r3, #6
   84450:	f102 0139 	add.w	r1, r2, #57	; 0x39
   84454:	00c9      	lsls	r1, r1, #3
   84456:	3238      	adds	r2, #56	; 0x38
   84458:	e7a4      	b.n	843a4 <_malloc_r+0x358>
   8445a:	42bc      	cmp	r4, r7
   8445c:	d054      	beq.n	84508 <_malloc_r+0x4bc>
   8445e:	68bc      	ldr	r4, [r7, #8]
   84460:	6862      	ldr	r2, [r4, #4]
   84462:	f022 0203 	bic.w	r2, r2, #3
   84466:	e75e      	b.n	84326 <_malloc_r+0x2da>
   84468:	f859 3908 	ldr.w	r3, [r9], #-8
   8446c:	4599      	cmp	r9, r3
   8446e:	f040 8086 	bne.w	8457e <_malloc_r+0x532>
   84472:	f010 0f03 	tst.w	r0, #3
   84476:	f100 30ff 	add.w	r0, r0, #4294967295
   8447a:	d1f5      	bne.n	84468 <_malloc_r+0x41c>
   8447c:	687b      	ldr	r3, [r7, #4]
   8447e:	ea23 0304 	bic.w	r3, r3, r4
   84482:	607b      	str	r3, [r7, #4]
   84484:	0064      	lsls	r4, r4, #1
   84486:	429c      	cmp	r4, r3
   84488:	f63f aec8 	bhi.w	8421c <_malloc_r+0x1d0>
   8448c:	2c00      	cmp	r4, #0
   8448e:	f43f aec5 	beq.w	8421c <_malloc_r+0x1d0>
   84492:	421c      	tst	r4, r3
   84494:	4640      	mov	r0, r8
   84496:	f47f ae4c 	bne.w	84132 <_malloc_r+0xe6>
   8449a:	0064      	lsls	r4, r4, #1
   8449c:	421c      	tst	r4, r3
   8449e:	f100 0004 	add.w	r0, r0, #4
   844a2:	d0fa      	beq.n	8449a <_malloc_r+0x44e>
   844a4:	e645      	b.n	84132 <_malloc_r+0xe6>
   844a6:	468c      	mov	ip, r1
   844a8:	e78c      	b.n	843c4 <_malloc_r+0x378>
   844aa:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   844ae:	d815      	bhi.n	844dc <_malloc_r+0x490>
   844b0:	0bf3      	lsrs	r3, r6, #15
   844b2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   844b6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   844ba:	00c1      	lsls	r1, r0, #3
   844bc:	e5e8      	b.n	84090 <_malloc_r+0x44>
   844be:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   844c2:	e6ee      	b.n	842a2 <_malloc_r+0x256>
   844c4:	2101      	movs	r1, #1
   844c6:	687b      	ldr	r3, [r7, #4]
   844c8:	1092      	asrs	r2, r2, #2
   844ca:	fa01 f202 	lsl.w	r2, r1, r2
   844ce:	431a      	orrs	r2, r3
   844d0:	607a      	str	r2, [r7, #4]
   844d2:	4663      	mov	r3, ip
   844d4:	e779      	b.n	843ca <_malloc_r+0x37e>
   844d6:	2301      	movs	r3, #1
   844d8:	6053      	str	r3, [r2, #4]
   844da:	e72a      	b.n	84332 <_malloc_r+0x2e6>
   844dc:	f240 5254 	movw	r2, #1364	; 0x554
   844e0:	4293      	cmp	r3, r2
   844e2:	d822      	bhi.n	8452a <_malloc_r+0x4de>
   844e4:	0cb3      	lsrs	r3, r6, #18
   844e6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   844ea:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   844ee:	00c1      	lsls	r1, r0, #3
   844f0:	e5ce      	b.n	84090 <_malloc_r+0x44>
   844f2:	f103 0b10 	add.w	fp, r3, #16
   844f6:	e6af      	b.n	84258 <_malloc_r+0x20c>
   844f8:	2a54      	cmp	r2, #84	; 0x54
   844fa:	d829      	bhi.n	84550 <_malloc_r+0x504>
   844fc:	0b1a      	lsrs	r2, r3, #12
   844fe:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   84502:	00c9      	lsls	r1, r1, #3
   84504:	326e      	adds	r2, #110	; 0x6e
   84506:	e74d      	b.n	843a4 <_malloc_r+0x358>
   84508:	4b20      	ldr	r3, [pc, #128]	; (8458c <_malloc_r+0x540>)
   8450a:	6819      	ldr	r1, [r3, #0]
   8450c:	4459      	add	r1, fp
   8450e:	6019      	str	r1, [r3, #0]
   84510:	e6b3      	b.n	8427a <_malloc_r+0x22e>
   84512:	f3ca 000b 	ubfx	r0, sl, #0, #12
   84516:	2800      	cmp	r0, #0
   84518:	f47f aeaf 	bne.w	8427a <_malloc_r+0x22e>
   8451c:	eb08 030b 	add.w	r3, r8, fp
   84520:	68ba      	ldr	r2, [r7, #8]
   84522:	f043 0301 	orr.w	r3, r3, #1
   84526:	6053      	str	r3, [r2, #4]
   84528:	e6ef      	b.n	8430a <_malloc_r+0x2be>
   8452a:	207f      	movs	r0, #127	; 0x7f
   8452c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84530:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   84534:	e5ac      	b.n	84090 <_malloc_r+0x44>
   84536:	f104 0108 	add.w	r1, r4, #8
   8453a:	4628      	mov	r0, r5
   8453c:	9300      	str	r3, [sp, #0]
   8453e:	f000 fd7f 	bl	85040 <_free_r>
   84542:	9b00      	ldr	r3, [sp, #0]
   84544:	6819      	ldr	r1, [r3, #0]
   84546:	e6e0      	b.n	8430a <_malloc_r+0x2be>
   84548:	2001      	movs	r0, #1
   8454a:	f04f 0900 	mov.w	r9, #0
   8454e:	e6bd      	b.n	842cc <_malloc_r+0x280>
   84550:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84554:	d805      	bhi.n	84562 <_malloc_r+0x516>
   84556:	0bda      	lsrs	r2, r3, #15
   84558:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8455c:	00c9      	lsls	r1, r1, #3
   8455e:	3277      	adds	r2, #119	; 0x77
   84560:	e720      	b.n	843a4 <_malloc_r+0x358>
   84562:	f240 5154 	movw	r1, #1364	; 0x554
   84566:	428a      	cmp	r2, r1
   84568:	d805      	bhi.n	84576 <_malloc_r+0x52a>
   8456a:	0c9a      	lsrs	r2, r3, #18
   8456c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   84570:	00c9      	lsls	r1, r1, #3
   84572:	327c      	adds	r2, #124	; 0x7c
   84574:	e716      	b.n	843a4 <_malloc_r+0x358>
   84576:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8457a:	227e      	movs	r2, #126	; 0x7e
   8457c:	e712      	b.n	843a4 <_malloc_r+0x358>
   8457e:	687b      	ldr	r3, [r7, #4]
   84580:	e780      	b.n	84484 <_malloc_r+0x438>
   84582:	08f0      	lsrs	r0, r6, #3
   84584:	f106 0308 	add.w	r3, r6, #8
   84588:	e60e      	b.n	841a8 <_malloc_r+0x15c>
   8458a:	bf00      	nop
   8458c:	20070f8c 	.word	0x20070f8c

00084590 <__ascii_mbtowc>:
   84590:	b082      	sub	sp, #8
   84592:	b149      	cbz	r1, 845a8 <__ascii_mbtowc+0x18>
   84594:	b15a      	cbz	r2, 845ae <__ascii_mbtowc+0x1e>
   84596:	b16b      	cbz	r3, 845b4 <__ascii_mbtowc+0x24>
   84598:	7813      	ldrb	r3, [r2, #0]
   8459a:	600b      	str	r3, [r1, #0]
   8459c:	7812      	ldrb	r2, [r2, #0]
   8459e:	1c10      	adds	r0, r2, #0
   845a0:	bf18      	it	ne
   845a2:	2001      	movne	r0, #1
   845a4:	b002      	add	sp, #8
   845a6:	4770      	bx	lr
   845a8:	a901      	add	r1, sp, #4
   845aa:	2a00      	cmp	r2, #0
   845ac:	d1f3      	bne.n	84596 <__ascii_mbtowc+0x6>
   845ae:	4610      	mov	r0, r2
   845b0:	b002      	add	sp, #8
   845b2:	4770      	bx	lr
   845b4:	f06f 0001 	mvn.w	r0, #1
   845b8:	e7f4      	b.n	845a4 <__ascii_mbtowc+0x14>
   845ba:	bf00      	nop

000845bc <memchr>:
   845bc:	0783      	lsls	r3, r0, #30
   845be:	b470      	push	{r4, r5, r6}
   845c0:	b2cd      	uxtb	r5, r1
   845c2:	d03d      	beq.n	84640 <memchr+0x84>
   845c4:	1e54      	subs	r4, r2, #1
   845c6:	b30a      	cbz	r2, 8460c <memchr+0x50>
   845c8:	7803      	ldrb	r3, [r0, #0]
   845ca:	42ab      	cmp	r3, r5
   845cc:	d01f      	beq.n	8460e <memchr+0x52>
   845ce:	1c43      	adds	r3, r0, #1
   845d0:	e005      	b.n	845de <memchr+0x22>
   845d2:	f114 34ff 	adds.w	r4, r4, #4294967295
   845d6:	d319      	bcc.n	8460c <memchr+0x50>
   845d8:	7802      	ldrb	r2, [r0, #0]
   845da:	42aa      	cmp	r2, r5
   845dc:	d017      	beq.n	8460e <memchr+0x52>
   845de:	f013 0f03 	tst.w	r3, #3
   845e2:	4618      	mov	r0, r3
   845e4:	f103 0301 	add.w	r3, r3, #1
   845e8:	d1f3      	bne.n	845d2 <memchr+0x16>
   845ea:	2c03      	cmp	r4, #3
   845ec:	d811      	bhi.n	84612 <memchr+0x56>
   845ee:	b34c      	cbz	r4, 84644 <memchr+0x88>
   845f0:	7803      	ldrb	r3, [r0, #0]
   845f2:	42ab      	cmp	r3, r5
   845f4:	d00b      	beq.n	8460e <memchr+0x52>
   845f6:	4404      	add	r4, r0
   845f8:	1c43      	adds	r3, r0, #1
   845fa:	e002      	b.n	84602 <memchr+0x46>
   845fc:	7802      	ldrb	r2, [r0, #0]
   845fe:	42aa      	cmp	r2, r5
   84600:	d005      	beq.n	8460e <memchr+0x52>
   84602:	429c      	cmp	r4, r3
   84604:	4618      	mov	r0, r3
   84606:	f103 0301 	add.w	r3, r3, #1
   8460a:	d1f7      	bne.n	845fc <memchr+0x40>
   8460c:	2000      	movs	r0, #0
   8460e:	bc70      	pop	{r4, r5, r6}
   84610:	4770      	bx	lr
   84612:	0209      	lsls	r1, r1, #8
   84614:	b289      	uxth	r1, r1
   84616:	4329      	orrs	r1, r5
   84618:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   8461c:	6803      	ldr	r3, [r0, #0]
   8461e:	4606      	mov	r6, r0
   84620:	404b      	eors	r3, r1
   84622:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   84626:	ea22 0303 	bic.w	r3, r2, r3
   8462a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8462e:	f100 0004 	add.w	r0, r0, #4
   84632:	d103      	bne.n	8463c <memchr+0x80>
   84634:	3c04      	subs	r4, #4
   84636:	2c03      	cmp	r4, #3
   84638:	d8f0      	bhi.n	8461c <memchr+0x60>
   8463a:	e7d8      	b.n	845ee <memchr+0x32>
   8463c:	4630      	mov	r0, r6
   8463e:	e7d7      	b.n	845f0 <memchr+0x34>
   84640:	4614      	mov	r4, r2
   84642:	e7d2      	b.n	845ea <memchr+0x2e>
   84644:	4620      	mov	r0, r4
   84646:	e7e2      	b.n	8460e <memchr+0x52>

00084648 <memcpy>:
   84648:	4684      	mov	ip, r0
   8464a:	ea41 0300 	orr.w	r3, r1, r0
   8464e:	f013 0303 	ands.w	r3, r3, #3
   84652:	d149      	bne.n	846e8 <memcpy+0xa0>
   84654:	3a40      	subs	r2, #64	; 0x40
   84656:	d323      	bcc.n	846a0 <memcpy+0x58>
   84658:	680b      	ldr	r3, [r1, #0]
   8465a:	6003      	str	r3, [r0, #0]
   8465c:	684b      	ldr	r3, [r1, #4]
   8465e:	6043      	str	r3, [r0, #4]
   84660:	688b      	ldr	r3, [r1, #8]
   84662:	6083      	str	r3, [r0, #8]
   84664:	68cb      	ldr	r3, [r1, #12]
   84666:	60c3      	str	r3, [r0, #12]
   84668:	690b      	ldr	r3, [r1, #16]
   8466a:	6103      	str	r3, [r0, #16]
   8466c:	694b      	ldr	r3, [r1, #20]
   8466e:	6143      	str	r3, [r0, #20]
   84670:	698b      	ldr	r3, [r1, #24]
   84672:	6183      	str	r3, [r0, #24]
   84674:	69cb      	ldr	r3, [r1, #28]
   84676:	61c3      	str	r3, [r0, #28]
   84678:	6a0b      	ldr	r3, [r1, #32]
   8467a:	6203      	str	r3, [r0, #32]
   8467c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8467e:	6243      	str	r3, [r0, #36]	; 0x24
   84680:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   84682:	6283      	str	r3, [r0, #40]	; 0x28
   84684:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   84686:	62c3      	str	r3, [r0, #44]	; 0x2c
   84688:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8468a:	6303      	str	r3, [r0, #48]	; 0x30
   8468c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8468e:	6343      	str	r3, [r0, #52]	; 0x34
   84690:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   84692:	6383      	str	r3, [r0, #56]	; 0x38
   84694:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   84696:	63c3      	str	r3, [r0, #60]	; 0x3c
   84698:	3040      	adds	r0, #64	; 0x40
   8469a:	3140      	adds	r1, #64	; 0x40
   8469c:	3a40      	subs	r2, #64	; 0x40
   8469e:	d2db      	bcs.n	84658 <memcpy+0x10>
   846a0:	3230      	adds	r2, #48	; 0x30
   846a2:	d30b      	bcc.n	846bc <memcpy+0x74>
   846a4:	680b      	ldr	r3, [r1, #0]
   846a6:	6003      	str	r3, [r0, #0]
   846a8:	684b      	ldr	r3, [r1, #4]
   846aa:	6043      	str	r3, [r0, #4]
   846ac:	688b      	ldr	r3, [r1, #8]
   846ae:	6083      	str	r3, [r0, #8]
   846b0:	68cb      	ldr	r3, [r1, #12]
   846b2:	60c3      	str	r3, [r0, #12]
   846b4:	3010      	adds	r0, #16
   846b6:	3110      	adds	r1, #16
   846b8:	3a10      	subs	r2, #16
   846ba:	d2f3      	bcs.n	846a4 <memcpy+0x5c>
   846bc:	320c      	adds	r2, #12
   846be:	d305      	bcc.n	846cc <memcpy+0x84>
   846c0:	f851 3b04 	ldr.w	r3, [r1], #4
   846c4:	f840 3b04 	str.w	r3, [r0], #4
   846c8:	3a04      	subs	r2, #4
   846ca:	d2f9      	bcs.n	846c0 <memcpy+0x78>
   846cc:	3204      	adds	r2, #4
   846ce:	d008      	beq.n	846e2 <memcpy+0x9a>
   846d0:	07d2      	lsls	r2, r2, #31
   846d2:	bf1c      	itt	ne
   846d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   846d8:	f800 3b01 	strbne.w	r3, [r0], #1
   846dc:	d301      	bcc.n	846e2 <memcpy+0x9a>
   846de:	880b      	ldrh	r3, [r1, #0]
   846e0:	8003      	strh	r3, [r0, #0]
   846e2:	4660      	mov	r0, ip
   846e4:	4770      	bx	lr
   846e6:	bf00      	nop
   846e8:	2a08      	cmp	r2, #8
   846ea:	d313      	bcc.n	84714 <memcpy+0xcc>
   846ec:	078b      	lsls	r3, r1, #30
   846ee:	d0b1      	beq.n	84654 <memcpy+0xc>
   846f0:	f010 0303 	ands.w	r3, r0, #3
   846f4:	d0ae      	beq.n	84654 <memcpy+0xc>
   846f6:	f1c3 0304 	rsb	r3, r3, #4
   846fa:	1ad2      	subs	r2, r2, r3
   846fc:	07db      	lsls	r3, r3, #31
   846fe:	bf1c      	itt	ne
   84700:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84704:	f800 3b01 	strbne.w	r3, [r0], #1
   84708:	d3a4      	bcc.n	84654 <memcpy+0xc>
   8470a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8470e:	f820 3b02 	strh.w	r3, [r0], #2
   84712:	e79f      	b.n	84654 <memcpy+0xc>
   84714:	3a04      	subs	r2, #4
   84716:	d3d9      	bcc.n	846cc <memcpy+0x84>
   84718:	3a01      	subs	r2, #1
   8471a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8471e:	f800 3b01 	strb.w	r3, [r0], #1
   84722:	d2f9      	bcs.n	84718 <memcpy+0xd0>
   84724:	780b      	ldrb	r3, [r1, #0]
   84726:	7003      	strb	r3, [r0, #0]
   84728:	784b      	ldrb	r3, [r1, #1]
   8472a:	7043      	strb	r3, [r0, #1]
   8472c:	788b      	ldrb	r3, [r1, #2]
   8472e:	7083      	strb	r3, [r0, #2]
   84730:	4660      	mov	r0, ip
   84732:	4770      	bx	lr

00084734 <__malloc_lock>:
   84734:	4801      	ldr	r0, [pc, #4]	; (8473c <__malloc_lock+0x8>)
   84736:	f7ff bc85 	b.w	84044 <__retarget_lock_acquire_recursive>
   8473a:	bf00      	nop
   8473c:	20071454 	.word	0x20071454

00084740 <__malloc_unlock>:
   84740:	4801      	ldr	r0, [pc, #4]	; (84748 <__malloc_unlock+0x8>)
   84742:	f7ff bc81 	b.w	84048 <__retarget_lock_release_recursive>
   84746:	bf00      	nop
   84748:	20071454 	.word	0x20071454

0008474c <_Balloc>:
   8474c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8474e:	b570      	push	{r4, r5, r6, lr}
   84750:	4605      	mov	r5, r0
   84752:	460c      	mov	r4, r1
   84754:	b14b      	cbz	r3, 8476a <_Balloc+0x1e>
   84756:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8475a:	b180      	cbz	r0, 8477e <_Balloc+0x32>
   8475c:	6802      	ldr	r2, [r0, #0]
   8475e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   84762:	2300      	movs	r3, #0
   84764:	6103      	str	r3, [r0, #16]
   84766:	60c3      	str	r3, [r0, #12]
   84768:	bd70      	pop	{r4, r5, r6, pc}
   8476a:	2221      	movs	r2, #33	; 0x21
   8476c:	2104      	movs	r1, #4
   8476e:	f000 fbe7 	bl	84f40 <_calloc_r>
   84772:	64e8      	str	r0, [r5, #76]	; 0x4c
   84774:	4603      	mov	r3, r0
   84776:	2800      	cmp	r0, #0
   84778:	d1ed      	bne.n	84756 <_Balloc+0xa>
   8477a:	2000      	movs	r0, #0
   8477c:	bd70      	pop	{r4, r5, r6, pc}
   8477e:	2101      	movs	r1, #1
   84780:	fa01 f604 	lsl.w	r6, r1, r4
   84784:	1d72      	adds	r2, r6, #5
   84786:	4628      	mov	r0, r5
   84788:	0092      	lsls	r2, r2, #2
   8478a:	f000 fbd9 	bl	84f40 <_calloc_r>
   8478e:	2800      	cmp	r0, #0
   84790:	d0f3      	beq.n	8477a <_Balloc+0x2e>
   84792:	6044      	str	r4, [r0, #4]
   84794:	6086      	str	r6, [r0, #8]
   84796:	e7e4      	b.n	84762 <_Balloc+0x16>

00084798 <_Bfree>:
   84798:	b131      	cbz	r1, 847a8 <_Bfree+0x10>
   8479a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8479c:	684a      	ldr	r2, [r1, #4]
   8479e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   847a2:	6008      	str	r0, [r1, #0]
   847a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   847a8:	4770      	bx	lr
   847aa:	bf00      	nop

000847ac <__multadd>:
   847ac:	b5f0      	push	{r4, r5, r6, r7, lr}
   847ae:	460c      	mov	r4, r1
   847b0:	4605      	mov	r5, r0
   847b2:	f04f 0e00 	mov.w	lr, #0
   847b6:	690e      	ldr	r6, [r1, #16]
   847b8:	b083      	sub	sp, #12
   847ba:	f101 0714 	add.w	r7, r1, #20
   847be:	6838      	ldr	r0, [r7, #0]
   847c0:	f10e 0e01 	add.w	lr, lr, #1
   847c4:	b281      	uxth	r1, r0
   847c6:	fb02 3301 	mla	r3, r2, r1, r3
   847ca:	0c01      	lsrs	r1, r0, #16
   847cc:	0c18      	lsrs	r0, r3, #16
   847ce:	fb02 0101 	mla	r1, r2, r1, r0
   847d2:	b29b      	uxth	r3, r3
   847d4:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   847d8:	4576      	cmp	r6, lr
   847da:	f847 3b04 	str.w	r3, [r7], #4
   847de:	ea4f 4311 	mov.w	r3, r1, lsr #16
   847e2:	dcec      	bgt.n	847be <__multadd+0x12>
   847e4:	b13b      	cbz	r3, 847f6 <__multadd+0x4a>
   847e6:	68a2      	ldr	r2, [r4, #8]
   847e8:	4296      	cmp	r6, r2
   847ea:	da07      	bge.n	847fc <__multadd+0x50>
   847ec:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   847f0:	3601      	adds	r6, #1
   847f2:	6153      	str	r3, [r2, #20]
   847f4:	6126      	str	r6, [r4, #16]
   847f6:	4620      	mov	r0, r4
   847f8:	b003      	add	sp, #12
   847fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   847fc:	6861      	ldr	r1, [r4, #4]
   847fe:	4628      	mov	r0, r5
   84800:	3101      	adds	r1, #1
   84802:	9301      	str	r3, [sp, #4]
   84804:	f7ff ffa2 	bl	8474c <_Balloc>
   84808:	4607      	mov	r7, r0
   8480a:	6922      	ldr	r2, [r4, #16]
   8480c:	f104 010c 	add.w	r1, r4, #12
   84810:	3202      	adds	r2, #2
   84812:	0092      	lsls	r2, r2, #2
   84814:	300c      	adds	r0, #12
   84816:	f7ff ff17 	bl	84648 <memcpy>
   8481a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   8481c:	6861      	ldr	r1, [r4, #4]
   8481e:	9b01      	ldr	r3, [sp, #4]
   84820:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84824:	6020      	str	r0, [r4, #0]
   84826:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8482a:	463c      	mov	r4, r7
   8482c:	e7de      	b.n	847ec <__multadd+0x40>
   8482e:	bf00      	nop

00084830 <__hi0bits>:
   84830:	0c02      	lsrs	r2, r0, #16
   84832:	0412      	lsls	r2, r2, #16
   84834:	4603      	mov	r3, r0
   84836:	b9b2      	cbnz	r2, 84866 <__hi0bits+0x36>
   84838:	0403      	lsls	r3, r0, #16
   8483a:	2010      	movs	r0, #16
   8483c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84840:	bf04      	itt	eq
   84842:	021b      	lsleq	r3, r3, #8
   84844:	3008      	addeq	r0, #8
   84846:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8484a:	bf04      	itt	eq
   8484c:	011b      	lsleq	r3, r3, #4
   8484e:	3004      	addeq	r0, #4
   84850:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84854:	bf04      	itt	eq
   84856:	009b      	lsleq	r3, r3, #2
   84858:	3002      	addeq	r0, #2
   8485a:	2b00      	cmp	r3, #0
   8485c:	db02      	blt.n	84864 <__hi0bits+0x34>
   8485e:	005b      	lsls	r3, r3, #1
   84860:	d403      	bmi.n	8486a <__hi0bits+0x3a>
   84862:	2020      	movs	r0, #32
   84864:	4770      	bx	lr
   84866:	2000      	movs	r0, #0
   84868:	e7e8      	b.n	8483c <__hi0bits+0xc>
   8486a:	3001      	adds	r0, #1
   8486c:	4770      	bx	lr
   8486e:	bf00      	nop

00084870 <__lo0bits>:
   84870:	6803      	ldr	r3, [r0, #0]
   84872:	4601      	mov	r1, r0
   84874:	f013 0207 	ands.w	r2, r3, #7
   84878:	d007      	beq.n	8488a <__lo0bits+0x1a>
   8487a:	07da      	lsls	r2, r3, #31
   8487c:	d421      	bmi.n	848c2 <__lo0bits+0x52>
   8487e:	0798      	lsls	r0, r3, #30
   84880:	d421      	bmi.n	848c6 <__lo0bits+0x56>
   84882:	089b      	lsrs	r3, r3, #2
   84884:	600b      	str	r3, [r1, #0]
   84886:	2002      	movs	r0, #2
   84888:	4770      	bx	lr
   8488a:	b298      	uxth	r0, r3
   8488c:	b198      	cbz	r0, 848b6 <__lo0bits+0x46>
   8488e:	4610      	mov	r0, r2
   84890:	f013 0fff 	tst.w	r3, #255	; 0xff
   84894:	bf04      	itt	eq
   84896:	0a1b      	lsreq	r3, r3, #8
   84898:	3008      	addeq	r0, #8
   8489a:	071a      	lsls	r2, r3, #28
   8489c:	bf04      	itt	eq
   8489e:	091b      	lsreq	r3, r3, #4
   848a0:	3004      	addeq	r0, #4
   848a2:	079a      	lsls	r2, r3, #30
   848a4:	bf04      	itt	eq
   848a6:	089b      	lsreq	r3, r3, #2
   848a8:	3002      	addeq	r0, #2
   848aa:	07da      	lsls	r2, r3, #31
   848ac:	d407      	bmi.n	848be <__lo0bits+0x4e>
   848ae:	085b      	lsrs	r3, r3, #1
   848b0:	d104      	bne.n	848bc <__lo0bits+0x4c>
   848b2:	2020      	movs	r0, #32
   848b4:	4770      	bx	lr
   848b6:	0c1b      	lsrs	r3, r3, #16
   848b8:	2010      	movs	r0, #16
   848ba:	e7e9      	b.n	84890 <__lo0bits+0x20>
   848bc:	3001      	adds	r0, #1
   848be:	600b      	str	r3, [r1, #0]
   848c0:	4770      	bx	lr
   848c2:	2000      	movs	r0, #0
   848c4:	4770      	bx	lr
   848c6:	085b      	lsrs	r3, r3, #1
   848c8:	600b      	str	r3, [r1, #0]
   848ca:	2001      	movs	r0, #1
   848cc:	4770      	bx	lr
   848ce:	bf00      	nop

000848d0 <__i2b>:
   848d0:	b510      	push	{r4, lr}
   848d2:	460c      	mov	r4, r1
   848d4:	2101      	movs	r1, #1
   848d6:	f7ff ff39 	bl	8474c <_Balloc>
   848da:	2201      	movs	r2, #1
   848dc:	6144      	str	r4, [r0, #20]
   848de:	6102      	str	r2, [r0, #16]
   848e0:	bd10      	pop	{r4, pc}
   848e2:	bf00      	nop

000848e4 <__multiply>:
   848e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   848e8:	690c      	ldr	r4, [r1, #16]
   848ea:	6915      	ldr	r5, [r2, #16]
   848ec:	b083      	sub	sp, #12
   848ee:	42ac      	cmp	r4, r5
   848f0:	468b      	mov	fp, r1
   848f2:	4616      	mov	r6, r2
   848f4:	da04      	bge.n	84900 <__multiply+0x1c>
   848f6:	4622      	mov	r2, r4
   848f8:	46b3      	mov	fp, r6
   848fa:	462c      	mov	r4, r5
   848fc:	460e      	mov	r6, r1
   848fe:	4615      	mov	r5, r2
   84900:	f8db 3008 	ldr.w	r3, [fp, #8]
   84904:	eb04 0805 	add.w	r8, r4, r5
   84908:	f8db 1004 	ldr.w	r1, [fp, #4]
   8490c:	4598      	cmp	r8, r3
   8490e:	bfc8      	it	gt
   84910:	3101      	addgt	r1, #1
   84912:	f7ff ff1b 	bl	8474c <_Balloc>
   84916:	f100 0914 	add.w	r9, r0, #20
   8491a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   8491e:	45d1      	cmp	r9, sl
   84920:	9000      	str	r0, [sp, #0]
   84922:	d205      	bcs.n	84930 <__multiply+0x4c>
   84924:	464b      	mov	r3, r9
   84926:	2100      	movs	r1, #0
   84928:	f843 1b04 	str.w	r1, [r3], #4
   8492c:	459a      	cmp	sl, r3
   8492e:	d8fb      	bhi.n	84928 <__multiply+0x44>
   84930:	f106 0c14 	add.w	ip, r6, #20
   84934:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84938:	f10b 0b14 	add.w	fp, fp, #20
   8493c:	459c      	cmp	ip, r3
   8493e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84942:	d24b      	bcs.n	849dc <__multiply+0xf8>
   84944:	f8cd a004 	str.w	sl, [sp, #4]
   84948:	469a      	mov	sl, r3
   8494a:	f8dc 5000 	ldr.w	r5, [ip]
   8494e:	b2af      	uxth	r7, r5
   84950:	b1e7      	cbz	r7, 8498c <__multiply+0xa8>
   84952:	464d      	mov	r5, r9
   84954:	465e      	mov	r6, fp
   84956:	2100      	movs	r1, #0
   84958:	f856 2b04 	ldr.w	r2, [r6], #4
   8495c:	6828      	ldr	r0, [r5, #0]
   8495e:	b293      	uxth	r3, r2
   84960:	b284      	uxth	r4, r0
   84962:	0c12      	lsrs	r2, r2, #16
   84964:	fb07 4303 	mla	r3, r7, r3, r4
   84968:	0c00      	lsrs	r0, r0, #16
   8496a:	fb07 0202 	mla	r2, r7, r2, r0
   8496e:	440b      	add	r3, r1
   84970:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   84974:	b29b      	uxth	r3, r3
   84976:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   8497a:	45b6      	cmp	lr, r6
   8497c:	f845 3b04 	str.w	r3, [r5], #4
   84980:	ea4f 4111 	mov.w	r1, r1, lsr #16
   84984:	d8e8      	bhi.n	84958 <__multiply+0x74>
   84986:	6029      	str	r1, [r5, #0]
   84988:	f8dc 5000 	ldr.w	r5, [ip]
   8498c:	0c2d      	lsrs	r5, r5, #16
   8498e:	d01d      	beq.n	849cc <__multiply+0xe8>
   84990:	f8d9 3000 	ldr.w	r3, [r9]
   84994:	4648      	mov	r0, r9
   84996:	461c      	mov	r4, r3
   84998:	4659      	mov	r1, fp
   8499a:	2200      	movs	r2, #0
   8499c:	880e      	ldrh	r6, [r1, #0]
   8499e:	0c24      	lsrs	r4, r4, #16
   849a0:	fb05 4406 	mla	r4, r5, r6, r4
   849a4:	b29b      	uxth	r3, r3
   849a6:	4422      	add	r2, r4
   849a8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   849ac:	f840 3b04 	str.w	r3, [r0], #4
   849b0:	f851 3b04 	ldr.w	r3, [r1], #4
   849b4:	6804      	ldr	r4, [r0, #0]
   849b6:	0c1b      	lsrs	r3, r3, #16
   849b8:	b2a6      	uxth	r6, r4
   849ba:	fb05 6303 	mla	r3, r5, r3, r6
   849be:	458e      	cmp	lr, r1
   849c0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   849c4:	ea4f 4213 	mov.w	r2, r3, lsr #16
   849c8:	d8e8      	bhi.n	8499c <__multiply+0xb8>
   849ca:	6003      	str	r3, [r0, #0]
   849cc:	f10c 0c04 	add.w	ip, ip, #4
   849d0:	45e2      	cmp	sl, ip
   849d2:	f109 0904 	add.w	r9, r9, #4
   849d6:	d8b8      	bhi.n	8494a <__multiply+0x66>
   849d8:	f8dd a004 	ldr.w	sl, [sp, #4]
   849dc:	f1b8 0f00 	cmp.w	r8, #0
   849e0:	dd0b      	ble.n	849fa <__multiply+0x116>
   849e2:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   849e6:	f1aa 0a04 	sub.w	sl, sl, #4
   849ea:	b11b      	cbz	r3, 849f4 <__multiply+0x110>
   849ec:	e005      	b.n	849fa <__multiply+0x116>
   849ee:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   849f2:	b913      	cbnz	r3, 849fa <__multiply+0x116>
   849f4:	f1b8 0801 	subs.w	r8, r8, #1
   849f8:	d1f9      	bne.n	849ee <__multiply+0x10a>
   849fa:	9800      	ldr	r0, [sp, #0]
   849fc:	f8c0 8010 	str.w	r8, [r0, #16]
   84a00:	b003      	add	sp, #12
   84a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84a06:	bf00      	nop

00084a08 <__pow5mult>:
   84a08:	f012 0303 	ands.w	r3, r2, #3
   84a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84a10:	4614      	mov	r4, r2
   84a12:	4607      	mov	r7, r0
   84a14:	d12e      	bne.n	84a74 <__pow5mult+0x6c>
   84a16:	460d      	mov	r5, r1
   84a18:	10a4      	asrs	r4, r4, #2
   84a1a:	d01c      	beq.n	84a56 <__pow5mult+0x4e>
   84a1c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   84a1e:	b396      	cbz	r6, 84a86 <__pow5mult+0x7e>
   84a20:	07e3      	lsls	r3, r4, #31
   84a22:	f04f 0800 	mov.w	r8, #0
   84a26:	d406      	bmi.n	84a36 <__pow5mult+0x2e>
   84a28:	1064      	asrs	r4, r4, #1
   84a2a:	d014      	beq.n	84a56 <__pow5mult+0x4e>
   84a2c:	6830      	ldr	r0, [r6, #0]
   84a2e:	b1a8      	cbz	r0, 84a5c <__pow5mult+0x54>
   84a30:	4606      	mov	r6, r0
   84a32:	07e3      	lsls	r3, r4, #31
   84a34:	d5f8      	bpl.n	84a28 <__pow5mult+0x20>
   84a36:	4632      	mov	r2, r6
   84a38:	4629      	mov	r1, r5
   84a3a:	4638      	mov	r0, r7
   84a3c:	f7ff ff52 	bl	848e4 <__multiply>
   84a40:	b1b5      	cbz	r5, 84a70 <__pow5mult+0x68>
   84a42:	686a      	ldr	r2, [r5, #4]
   84a44:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84a46:	1064      	asrs	r4, r4, #1
   84a48:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84a4c:	6029      	str	r1, [r5, #0]
   84a4e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84a52:	4605      	mov	r5, r0
   84a54:	d1ea      	bne.n	84a2c <__pow5mult+0x24>
   84a56:	4628      	mov	r0, r5
   84a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84a5c:	4632      	mov	r2, r6
   84a5e:	4631      	mov	r1, r6
   84a60:	4638      	mov	r0, r7
   84a62:	f7ff ff3f 	bl	848e4 <__multiply>
   84a66:	6030      	str	r0, [r6, #0]
   84a68:	f8c0 8000 	str.w	r8, [r0]
   84a6c:	4606      	mov	r6, r0
   84a6e:	e7e0      	b.n	84a32 <__pow5mult+0x2a>
   84a70:	4605      	mov	r5, r0
   84a72:	e7d9      	b.n	84a28 <__pow5mult+0x20>
   84a74:	4a0b      	ldr	r2, [pc, #44]	; (84aa4 <__pow5mult+0x9c>)
   84a76:	3b01      	subs	r3, #1
   84a78:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   84a7c:	2300      	movs	r3, #0
   84a7e:	f7ff fe95 	bl	847ac <__multadd>
   84a82:	4605      	mov	r5, r0
   84a84:	e7c8      	b.n	84a18 <__pow5mult+0x10>
   84a86:	2101      	movs	r1, #1
   84a88:	4638      	mov	r0, r7
   84a8a:	f7ff fe5f 	bl	8474c <_Balloc>
   84a8e:	f240 2171 	movw	r1, #625	; 0x271
   84a92:	2201      	movs	r2, #1
   84a94:	2300      	movs	r3, #0
   84a96:	6141      	str	r1, [r0, #20]
   84a98:	6102      	str	r2, [r0, #16]
   84a9a:	4606      	mov	r6, r0
   84a9c:	64b8      	str	r0, [r7, #72]	; 0x48
   84a9e:	6003      	str	r3, [r0, #0]
   84aa0:	e7be      	b.n	84a20 <__pow5mult+0x18>
   84aa2:	bf00      	nop
   84aa4:	00086510 	.word	0x00086510

00084aa8 <__lshift>:
   84aa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84aac:	690b      	ldr	r3, [r1, #16]
   84aae:	1154      	asrs	r4, r2, #5
   84ab0:	eb04 0803 	add.w	r8, r4, r3
   84ab4:	688b      	ldr	r3, [r1, #8]
   84ab6:	f108 0501 	add.w	r5, r8, #1
   84aba:	429d      	cmp	r5, r3
   84abc:	460e      	mov	r6, r1
   84abe:	4691      	mov	r9, r2
   84ac0:	4607      	mov	r7, r0
   84ac2:	6849      	ldr	r1, [r1, #4]
   84ac4:	dd04      	ble.n	84ad0 <__lshift+0x28>
   84ac6:	005b      	lsls	r3, r3, #1
   84ac8:	429d      	cmp	r5, r3
   84aca:	f101 0101 	add.w	r1, r1, #1
   84ace:	dcfa      	bgt.n	84ac6 <__lshift+0x1e>
   84ad0:	4638      	mov	r0, r7
   84ad2:	f7ff fe3b 	bl	8474c <_Balloc>
   84ad6:	2c00      	cmp	r4, #0
   84ad8:	f100 0314 	add.w	r3, r0, #20
   84adc:	dd06      	ble.n	84aec <__lshift+0x44>
   84ade:	2100      	movs	r1, #0
   84ae0:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84ae4:	f843 1b04 	str.w	r1, [r3], #4
   84ae8:	429a      	cmp	r2, r3
   84aea:	d1fb      	bne.n	84ae4 <__lshift+0x3c>
   84aec:	6934      	ldr	r4, [r6, #16]
   84aee:	f106 0114 	add.w	r1, r6, #20
   84af2:	f019 091f 	ands.w	r9, r9, #31
   84af6:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   84afa:	d01d      	beq.n	84b38 <__lshift+0x90>
   84afc:	2200      	movs	r2, #0
   84afe:	f1c9 0c20 	rsb	ip, r9, #32
   84b02:	680c      	ldr	r4, [r1, #0]
   84b04:	fa04 f409 	lsl.w	r4, r4, r9
   84b08:	4314      	orrs	r4, r2
   84b0a:	f843 4b04 	str.w	r4, [r3], #4
   84b0e:	f851 2b04 	ldr.w	r2, [r1], #4
   84b12:	458e      	cmp	lr, r1
   84b14:	fa22 f20c 	lsr.w	r2, r2, ip
   84b18:	d8f3      	bhi.n	84b02 <__lshift+0x5a>
   84b1a:	601a      	str	r2, [r3, #0]
   84b1c:	b10a      	cbz	r2, 84b22 <__lshift+0x7a>
   84b1e:	f108 0502 	add.w	r5, r8, #2
   84b22:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84b24:	6872      	ldr	r2, [r6, #4]
   84b26:	3d01      	subs	r5, #1
   84b28:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84b2c:	6105      	str	r5, [r0, #16]
   84b2e:	6031      	str	r1, [r6, #0]
   84b30:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84b34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84b38:	3b04      	subs	r3, #4
   84b3a:	f851 2b04 	ldr.w	r2, [r1], #4
   84b3e:	458e      	cmp	lr, r1
   84b40:	f843 2f04 	str.w	r2, [r3, #4]!
   84b44:	d8f9      	bhi.n	84b3a <__lshift+0x92>
   84b46:	e7ec      	b.n	84b22 <__lshift+0x7a>

00084b48 <__mcmp>:
   84b48:	b430      	push	{r4, r5}
   84b4a:	690b      	ldr	r3, [r1, #16]
   84b4c:	4605      	mov	r5, r0
   84b4e:	6900      	ldr	r0, [r0, #16]
   84b50:	1ac0      	subs	r0, r0, r3
   84b52:	d10f      	bne.n	84b74 <__mcmp+0x2c>
   84b54:	009b      	lsls	r3, r3, #2
   84b56:	3514      	adds	r5, #20
   84b58:	3114      	adds	r1, #20
   84b5a:	4419      	add	r1, r3
   84b5c:	442b      	add	r3, r5
   84b5e:	e001      	b.n	84b64 <__mcmp+0x1c>
   84b60:	429d      	cmp	r5, r3
   84b62:	d207      	bcs.n	84b74 <__mcmp+0x2c>
   84b64:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   84b68:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84b6c:	4294      	cmp	r4, r2
   84b6e:	d0f7      	beq.n	84b60 <__mcmp+0x18>
   84b70:	d302      	bcc.n	84b78 <__mcmp+0x30>
   84b72:	2001      	movs	r0, #1
   84b74:	bc30      	pop	{r4, r5}
   84b76:	4770      	bx	lr
   84b78:	f04f 30ff 	mov.w	r0, #4294967295
   84b7c:	e7fa      	b.n	84b74 <__mcmp+0x2c>
   84b7e:	bf00      	nop

00084b80 <__mdiff>:
   84b80:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84b84:	690c      	ldr	r4, [r1, #16]
   84b86:	4689      	mov	r9, r1
   84b88:	6911      	ldr	r1, [r2, #16]
   84b8a:	4692      	mov	sl, r2
   84b8c:	1a64      	subs	r4, r4, r1
   84b8e:	2c00      	cmp	r4, #0
   84b90:	d117      	bne.n	84bc2 <__mdiff+0x42>
   84b92:	0089      	lsls	r1, r1, #2
   84b94:	f109 0714 	add.w	r7, r9, #20
   84b98:	f102 0614 	add.w	r6, r2, #20
   84b9c:	187b      	adds	r3, r7, r1
   84b9e:	4431      	add	r1, r6
   84ba0:	e001      	b.n	84ba6 <__mdiff+0x26>
   84ba2:	429f      	cmp	r7, r3
   84ba4:	d265      	bcs.n	84c72 <__mdiff+0xf2>
   84ba6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   84baa:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84bae:	4295      	cmp	r5, r2
   84bb0:	d0f7      	beq.n	84ba2 <__mdiff+0x22>
   84bb2:	d267      	bcs.n	84c84 <__mdiff+0x104>
   84bb4:	464b      	mov	r3, r9
   84bb6:	46bb      	mov	fp, r7
   84bb8:	46d1      	mov	r9, sl
   84bba:	4637      	mov	r7, r6
   84bbc:	469a      	mov	sl, r3
   84bbe:	2401      	movs	r4, #1
   84bc0:	e005      	b.n	84bce <__mdiff+0x4e>
   84bc2:	db61      	blt.n	84c88 <__mdiff+0x108>
   84bc4:	2400      	movs	r4, #0
   84bc6:	f109 0714 	add.w	r7, r9, #20
   84bca:	f10a 0b14 	add.w	fp, sl, #20
   84bce:	f8d9 1004 	ldr.w	r1, [r9, #4]
   84bd2:	f7ff fdbb 	bl	8474c <_Balloc>
   84bd6:	465d      	mov	r5, fp
   84bd8:	f04f 0800 	mov.w	r8, #0
   84bdc:	f8d9 e010 	ldr.w	lr, [r9, #16]
   84be0:	f8da 3010 	ldr.w	r3, [sl, #16]
   84be4:	463e      	mov	r6, r7
   84be6:	60c4      	str	r4, [r0, #12]
   84be8:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   84bec:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   84bf0:	f100 0414 	add.w	r4, r0, #20
   84bf4:	f856 9b04 	ldr.w	r9, [r6], #4
   84bf8:	f855 2b04 	ldr.w	r2, [r5], #4
   84bfc:	fa1f f389 	uxth.w	r3, r9
   84c00:	4443      	add	r3, r8
   84c02:	fa1f f882 	uxth.w	r8, r2
   84c06:	0c12      	lsrs	r2, r2, #16
   84c08:	eba3 0308 	sub.w	r3, r3, r8
   84c0c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   84c10:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84c14:	b29b      	uxth	r3, r3
   84c16:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84c1a:	45ac      	cmp	ip, r5
   84c1c:	f844 3b04 	str.w	r3, [r4], #4
   84c20:	ea4f 4822 	mov.w	r8, r2, asr #16
   84c24:	d8e6      	bhi.n	84bf4 <__mdiff+0x74>
   84c26:	42b7      	cmp	r7, r6
   84c28:	d917      	bls.n	84c5a <__mdiff+0xda>
   84c2a:	46a4      	mov	ip, r4
   84c2c:	4635      	mov	r5, r6
   84c2e:	f855 3b04 	ldr.w	r3, [r5], #4
   84c32:	b299      	uxth	r1, r3
   84c34:	4441      	add	r1, r8
   84c36:	140a      	asrs	r2, r1, #16
   84c38:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   84c3c:	b289      	uxth	r1, r1
   84c3e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   84c42:	42af      	cmp	r7, r5
   84c44:	f84c 3b04 	str.w	r3, [ip], #4
   84c48:	ea4f 4822 	mov.w	r8, r2, asr #16
   84c4c:	d8ef      	bhi.n	84c2e <__mdiff+0xae>
   84c4e:	43f6      	mvns	r6, r6
   84c50:	4437      	add	r7, r6
   84c52:	f027 0703 	bic.w	r7, r7, #3
   84c56:	3704      	adds	r7, #4
   84c58:	443c      	add	r4, r7
   84c5a:	3c04      	subs	r4, #4
   84c5c:	b92b      	cbnz	r3, 84c6a <__mdiff+0xea>
   84c5e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   84c62:	f10e 3eff 	add.w	lr, lr, #4294967295
   84c66:	2b00      	cmp	r3, #0
   84c68:	d0f9      	beq.n	84c5e <__mdiff+0xde>
   84c6a:	f8c0 e010 	str.w	lr, [r0, #16]
   84c6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84c72:	2100      	movs	r1, #0
   84c74:	f7ff fd6a 	bl	8474c <_Balloc>
   84c78:	2201      	movs	r2, #1
   84c7a:	2300      	movs	r3, #0
   84c7c:	6102      	str	r2, [r0, #16]
   84c7e:	6143      	str	r3, [r0, #20]
   84c80:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84c84:	46b3      	mov	fp, r6
   84c86:	e7a2      	b.n	84bce <__mdiff+0x4e>
   84c88:	464b      	mov	r3, r9
   84c8a:	f109 0b14 	add.w	fp, r9, #20
   84c8e:	f102 0714 	add.w	r7, r2, #20
   84c92:	4691      	mov	r9, r2
   84c94:	2401      	movs	r4, #1
   84c96:	469a      	mov	sl, r3
   84c98:	e799      	b.n	84bce <__mdiff+0x4e>
   84c9a:	bf00      	nop

00084c9c <__d2b>:
   84c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
   84c9e:	2101      	movs	r1, #1
   84ca0:	b083      	sub	sp, #12
   84ca2:	461c      	mov	r4, r3
   84ca4:	f3c3 550a 	ubfx	r5, r3, #20, #11
   84ca8:	4616      	mov	r6, r2
   84caa:	f7ff fd4f 	bl	8474c <_Balloc>
   84cae:	f3c4 0413 	ubfx	r4, r4, #0, #20
   84cb2:	4607      	mov	r7, r0
   84cb4:	b10d      	cbz	r5, 84cba <__d2b+0x1e>
   84cb6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   84cba:	9401      	str	r4, [sp, #4]
   84cbc:	b306      	cbz	r6, 84d00 <__d2b+0x64>
   84cbe:	a802      	add	r0, sp, #8
   84cc0:	f840 6d08 	str.w	r6, [r0, #-8]!
   84cc4:	f7ff fdd4 	bl	84870 <__lo0bits>
   84cc8:	2800      	cmp	r0, #0
   84cca:	d130      	bne.n	84d2e <__d2b+0x92>
   84ccc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84cd0:	617a      	str	r2, [r7, #20]
   84cd2:	2b00      	cmp	r3, #0
   84cd4:	bf0c      	ite	eq
   84cd6:	2101      	moveq	r1, #1
   84cd8:	2102      	movne	r1, #2
   84cda:	61bb      	str	r3, [r7, #24]
   84cdc:	6139      	str	r1, [r7, #16]
   84cde:	b9d5      	cbnz	r5, 84d16 <__d2b+0x7a>
   84ce0:	9a08      	ldr	r2, [sp, #32]
   84ce2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   84ce6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84cea:	6010      	str	r0, [r2, #0]
   84cec:	6918      	ldr	r0, [r3, #16]
   84cee:	f7ff fd9f 	bl	84830 <__hi0bits>
   84cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84cf4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   84cf8:	6018      	str	r0, [r3, #0]
   84cfa:	4638      	mov	r0, r7
   84cfc:	b003      	add	sp, #12
   84cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84d00:	a801      	add	r0, sp, #4
   84d02:	f7ff fdb5 	bl	84870 <__lo0bits>
   84d06:	2201      	movs	r2, #1
   84d08:	9b01      	ldr	r3, [sp, #4]
   84d0a:	4611      	mov	r1, r2
   84d0c:	3020      	adds	r0, #32
   84d0e:	613a      	str	r2, [r7, #16]
   84d10:	617b      	str	r3, [r7, #20]
   84d12:	2d00      	cmp	r5, #0
   84d14:	d0e4      	beq.n	84ce0 <__d2b+0x44>
   84d16:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   84d1a:	9a08      	ldr	r2, [sp, #32]
   84d1c:	4403      	add	r3, r0
   84d1e:	6013      	str	r3, [r2, #0]
   84d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84d22:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84d26:	6018      	str	r0, [r3, #0]
   84d28:	4638      	mov	r0, r7
   84d2a:	b003      	add	sp, #12
   84d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84d2e:	9b01      	ldr	r3, [sp, #4]
   84d30:	f1c0 0220 	rsb	r2, r0, #32
   84d34:	9900      	ldr	r1, [sp, #0]
   84d36:	fa03 f202 	lsl.w	r2, r3, r2
   84d3a:	430a      	orrs	r2, r1
   84d3c:	40c3      	lsrs	r3, r0
   84d3e:	9301      	str	r3, [sp, #4]
   84d40:	617a      	str	r2, [r7, #20]
   84d42:	e7c6      	b.n	84cd2 <__d2b+0x36>

00084d44 <_sbrk_r>:
   84d44:	b538      	push	{r3, r4, r5, lr}
   84d46:	2300      	movs	r3, #0
   84d48:	4c06      	ldr	r4, [pc, #24]	; (84d64 <_sbrk_r+0x20>)
   84d4a:	4605      	mov	r5, r0
   84d4c:	4608      	mov	r0, r1
   84d4e:	6023      	str	r3, [r4, #0]
   84d50:	f7fc fd38 	bl	817c4 <_sbrk>
   84d54:	1c43      	adds	r3, r0, #1
   84d56:	d000      	beq.n	84d5a <_sbrk_r+0x16>
   84d58:	bd38      	pop	{r3, r4, r5, pc}
   84d5a:	6823      	ldr	r3, [r4, #0]
   84d5c:	2b00      	cmp	r3, #0
   84d5e:	d0fb      	beq.n	84d58 <_sbrk_r+0x14>
   84d60:	602b      	str	r3, [r5, #0]
   84d62:	bd38      	pop	{r3, r4, r5, pc}
   84d64:	20071468 	.word	0x20071468

00084d68 <__ssprint_r>:
   84d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84d6c:	6893      	ldr	r3, [r2, #8]
   84d6e:	b083      	sub	sp, #12
   84d70:	4690      	mov	r8, r2
   84d72:	2b00      	cmp	r3, #0
   84d74:	d070      	beq.n	84e58 <__ssprint_r+0xf0>
   84d76:	4682      	mov	sl, r0
   84d78:	460c      	mov	r4, r1
   84d7a:	6817      	ldr	r7, [r2, #0]
   84d7c:	688d      	ldr	r5, [r1, #8]
   84d7e:	6808      	ldr	r0, [r1, #0]
   84d80:	e042      	b.n	84e08 <__ssprint_r+0xa0>
   84d82:	89a3      	ldrh	r3, [r4, #12]
   84d84:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84d88:	d02e      	beq.n	84de8 <__ssprint_r+0x80>
   84d8a:	6965      	ldr	r5, [r4, #20]
   84d8c:	6921      	ldr	r1, [r4, #16]
   84d8e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   84d92:	eba0 0b01 	sub.w	fp, r0, r1
   84d96:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   84d9a:	f10b 0001 	add.w	r0, fp, #1
   84d9e:	106d      	asrs	r5, r5, #1
   84da0:	4430      	add	r0, r6
   84da2:	42a8      	cmp	r0, r5
   84da4:	462a      	mov	r2, r5
   84da6:	bf84      	itt	hi
   84da8:	4605      	movhi	r5, r0
   84daa:	462a      	movhi	r2, r5
   84dac:	055b      	lsls	r3, r3, #21
   84dae:	d538      	bpl.n	84e22 <__ssprint_r+0xba>
   84db0:	4611      	mov	r1, r2
   84db2:	4650      	mov	r0, sl
   84db4:	f7ff f94a 	bl	8404c <_malloc_r>
   84db8:	2800      	cmp	r0, #0
   84dba:	d03c      	beq.n	84e36 <__ssprint_r+0xce>
   84dbc:	465a      	mov	r2, fp
   84dbe:	6921      	ldr	r1, [r4, #16]
   84dc0:	9001      	str	r0, [sp, #4]
   84dc2:	f7ff fc41 	bl	84648 <memcpy>
   84dc6:	89a2      	ldrh	r2, [r4, #12]
   84dc8:	9b01      	ldr	r3, [sp, #4]
   84dca:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84dce:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84dd2:	81a2      	strh	r2, [r4, #12]
   84dd4:	eba5 020b 	sub.w	r2, r5, fp
   84dd8:	eb03 000b 	add.w	r0, r3, fp
   84ddc:	6165      	str	r5, [r4, #20]
   84dde:	46b3      	mov	fp, r6
   84de0:	4635      	mov	r5, r6
   84de2:	6123      	str	r3, [r4, #16]
   84de4:	6020      	str	r0, [r4, #0]
   84de6:	60a2      	str	r2, [r4, #8]
   84de8:	465a      	mov	r2, fp
   84dea:	4649      	mov	r1, r9
   84dec:	f000 fa0e 	bl	8520c <memmove>
   84df0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   84df4:	68a2      	ldr	r2, [r4, #8]
   84df6:	6820      	ldr	r0, [r4, #0]
   84df8:	1b55      	subs	r5, r2, r5
   84dfa:	4458      	add	r0, fp
   84dfc:	1b9e      	subs	r6, r3, r6
   84dfe:	60a5      	str	r5, [r4, #8]
   84e00:	6020      	str	r0, [r4, #0]
   84e02:	f8c8 6008 	str.w	r6, [r8, #8]
   84e06:	b33e      	cbz	r6, 84e58 <__ssprint_r+0xf0>
   84e08:	687e      	ldr	r6, [r7, #4]
   84e0a:	463b      	mov	r3, r7
   84e0c:	3708      	adds	r7, #8
   84e0e:	2e00      	cmp	r6, #0
   84e10:	d0fa      	beq.n	84e08 <__ssprint_r+0xa0>
   84e12:	42ae      	cmp	r6, r5
   84e14:	f8d3 9000 	ldr.w	r9, [r3]
   84e18:	46ab      	mov	fp, r5
   84e1a:	d2b2      	bcs.n	84d82 <__ssprint_r+0x1a>
   84e1c:	4635      	mov	r5, r6
   84e1e:	46b3      	mov	fp, r6
   84e20:	e7e2      	b.n	84de8 <__ssprint_r+0x80>
   84e22:	4650      	mov	r0, sl
   84e24:	f000 fa56 	bl	852d4 <_realloc_r>
   84e28:	4603      	mov	r3, r0
   84e2a:	2800      	cmp	r0, #0
   84e2c:	d1d2      	bne.n	84dd4 <__ssprint_r+0x6c>
   84e2e:	6921      	ldr	r1, [r4, #16]
   84e30:	4650      	mov	r0, sl
   84e32:	f000 f905 	bl	85040 <_free_r>
   84e36:	230c      	movs	r3, #12
   84e38:	2200      	movs	r2, #0
   84e3a:	f04f 30ff 	mov.w	r0, #4294967295
   84e3e:	f8ca 3000 	str.w	r3, [sl]
   84e42:	89a3      	ldrh	r3, [r4, #12]
   84e44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84e48:	81a3      	strh	r3, [r4, #12]
   84e4a:	f8c8 2008 	str.w	r2, [r8, #8]
   84e4e:	f8c8 2004 	str.w	r2, [r8, #4]
   84e52:	b003      	add	sp, #12
   84e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84e58:	2000      	movs	r0, #0
   84e5a:	f8c8 0004 	str.w	r0, [r8, #4]
   84e5e:	b003      	add	sp, #12
   84e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084e64 <__ascii_wctomb>:
   84e64:	b119      	cbz	r1, 84e6e <__ascii_wctomb+0xa>
   84e66:	2aff      	cmp	r2, #255	; 0xff
   84e68:	d803      	bhi.n	84e72 <__ascii_wctomb+0xe>
   84e6a:	700a      	strb	r2, [r1, #0]
   84e6c:	2101      	movs	r1, #1
   84e6e:	4608      	mov	r0, r1
   84e70:	4770      	bx	lr
   84e72:	238a      	movs	r3, #138	; 0x8a
   84e74:	f04f 31ff 	mov.w	r1, #4294967295
   84e78:	6003      	str	r3, [r0, #0]
   84e7a:	e7f8      	b.n	84e6e <__ascii_wctomb+0xa>

00084e7c <__register_exitproc>:
   84e7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84e80:	4d2c      	ldr	r5, [pc, #176]	; (84f34 <__register_exitproc+0xb8>)
   84e82:	4606      	mov	r6, r0
   84e84:	6828      	ldr	r0, [r5, #0]
   84e86:	4698      	mov	r8, r3
   84e88:	460f      	mov	r7, r1
   84e8a:	4691      	mov	r9, r2
   84e8c:	f7ff f8da 	bl	84044 <__retarget_lock_acquire_recursive>
   84e90:	4b29      	ldr	r3, [pc, #164]	; (84f38 <__register_exitproc+0xbc>)
   84e92:	681c      	ldr	r4, [r3, #0]
   84e94:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   84e98:	2b00      	cmp	r3, #0
   84e9a:	d03e      	beq.n	84f1a <__register_exitproc+0x9e>
   84e9c:	685a      	ldr	r2, [r3, #4]
   84e9e:	2a1f      	cmp	r2, #31
   84ea0:	dc1c      	bgt.n	84edc <__register_exitproc+0x60>
   84ea2:	f102 0e01 	add.w	lr, r2, #1
   84ea6:	b176      	cbz	r6, 84ec6 <__register_exitproc+0x4a>
   84ea8:	2101      	movs	r1, #1
   84eaa:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   84eae:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   84eb2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   84eb6:	4091      	lsls	r1, r2
   84eb8:	4308      	orrs	r0, r1
   84eba:	2e02      	cmp	r6, #2
   84ebc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   84ec0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   84ec4:	d023      	beq.n	84f0e <__register_exitproc+0x92>
   84ec6:	3202      	adds	r2, #2
   84ec8:	f8c3 e004 	str.w	lr, [r3, #4]
   84ecc:	6828      	ldr	r0, [r5, #0]
   84ece:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   84ed2:	f7ff f8b9 	bl	84048 <__retarget_lock_release_recursive>
   84ed6:	2000      	movs	r0, #0
   84ed8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84edc:	4b17      	ldr	r3, [pc, #92]	; (84f3c <__register_exitproc+0xc0>)
   84ede:	b30b      	cbz	r3, 84f24 <__register_exitproc+0xa8>
   84ee0:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84ee4:	f3af 8000 	nop.w
   84ee8:	4603      	mov	r3, r0
   84eea:	b1d8      	cbz	r0, 84f24 <__register_exitproc+0xa8>
   84eec:	2000      	movs	r0, #0
   84eee:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   84ef2:	f04f 0e01 	mov.w	lr, #1
   84ef6:	6058      	str	r0, [r3, #4]
   84ef8:	6019      	str	r1, [r3, #0]
   84efa:	4602      	mov	r2, r0
   84efc:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   84f00:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   84f04:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   84f08:	2e00      	cmp	r6, #0
   84f0a:	d0dc      	beq.n	84ec6 <__register_exitproc+0x4a>
   84f0c:	e7cc      	b.n	84ea8 <__register_exitproc+0x2c>
   84f0e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   84f12:	4301      	orrs	r1, r0
   84f14:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   84f18:	e7d5      	b.n	84ec6 <__register_exitproc+0x4a>
   84f1a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   84f1e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   84f22:	e7bb      	b.n	84e9c <__register_exitproc+0x20>
   84f24:	6828      	ldr	r0, [r5, #0]
   84f26:	f7ff f88f 	bl	84048 <__retarget_lock_release_recursive>
   84f2a:	f04f 30ff 	mov.w	r0, #4294967295
   84f2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84f32:	bf00      	nop
   84f34:	20070970 	.word	0x20070970
   84f38:	00086398 	.word	0x00086398
   84f3c:	00000000 	.word	0x00000000

00084f40 <_calloc_r>:
   84f40:	b510      	push	{r4, lr}
   84f42:	fb02 f101 	mul.w	r1, r2, r1
   84f46:	f7ff f881 	bl	8404c <_malloc_r>
   84f4a:	4604      	mov	r4, r0
   84f4c:	b1d8      	cbz	r0, 84f86 <_calloc_r+0x46>
   84f4e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84f52:	f022 0203 	bic.w	r2, r2, #3
   84f56:	3a04      	subs	r2, #4
   84f58:	2a24      	cmp	r2, #36	; 0x24
   84f5a:	d818      	bhi.n	84f8e <_calloc_r+0x4e>
   84f5c:	2a13      	cmp	r2, #19
   84f5e:	d914      	bls.n	84f8a <_calloc_r+0x4a>
   84f60:	2300      	movs	r3, #0
   84f62:	2a1b      	cmp	r2, #27
   84f64:	6003      	str	r3, [r0, #0]
   84f66:	6043      	str	r3, [r0, #4]
   84f68:	d916      	bls.n	84f98 <_calloc_r+0x58>
   84f6a:	2a24      	cmp	r2, #36	; 0x24
   84f6c:	6083      	str	r3, [r0, #8]
   84f6e:	60c3      	str	r3, [r0, #12]
   84f70:	bf11      	iteee	ne
   84f72:	f100 0210 	addne.w	r2, r0, #16
   84f76:	6103      	streq	r3, [r0, #16]
   84f78:	6143      	streq	r3, [r0, #20]
   84f7a:	f100 0218 	addeq.w	r2, r0, #24
   84f7e:	2300      	movs	r3, #0
   84f80:	6013      	str	r3, [r2, #0]
   84f82:	6053      	str	r3, [r2, #4]
   84f84:	6093      	str	r3, [r2, #8]
   84f86:	4620      	mov	r0, r4
   84f88:	bd10      	pop	{r4, pc}
   84f8a:	4602      	mov	r2, r0
   84f8c:	e7f7      	b.n	84f7e <_calloc_r+0x3e>
   84f8e:	2100      	movs	r1, #0
   84f90:	f7fc fc60 	bl	81854 <memset>
   84f94:	4620      	mov	r0, r4
   84f96:	bd10      	pop	{r4, pc}
   84f98:	f100 0208 	add.w	r2, r0, #8
   84f9c:	e7ef      	b.n	84f7e <_calloc_r+0x3e>
   84f9e:	bf00      	nop

00084fa0 <_malloc_trim_r>:
   84fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84fa2:	460c      	mov	r4, r1
   84fa4:	4f23      	ldr	r7, [pc, #140]	; (85034 <_malloc_trim_r+0x94>)
   84fa6:	4606      	mov	r6, r0
   84fa8:	f7ff fbc4 	bl	84734 <__malloc_lock>
   84fac:	68bb      	ldr	r3, [r7, #8]
   84fae:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84fb2:	685d      	ldr	r5, [r3, #4]
   84fb4:	310f      	adds	r1, #15
   84fb6:	f025 0503 	bic.w	r5, r5, #3
   84fba:	4429      	add	r1, r5
   84fbc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84fc0:	f021 010f 	bic.w	r1, r1, #15
   84fc4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84fc8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84fcc:	db07      	blt.n	84fde <_malloc_trim_r+0x3e>
   84fce:	2100      	movs	r1, #0
   84fd0:	4630      	mov	r0, r6
   84fd2:	f7ff feb7 	bl	84d44 <_sbrk_r>
   84fd6:	68bb      	ldr	r3, [r7, #8]
   84fd8:	442b      	add	r3, r5
   84fda:	4298      	cmp	r0, r3
   84fdc:	d004      	beq.n	84fe8 <_malloc_trim_r+0x48>
   84fde:	4630      	mov	r0, r6
   84fe0:	f7ff fbae 	bl	84740 <__malloc_unlock>
   84fe4:	2000      	movs	r0, #0
   84fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84fe8:	4261      	negs	r1, r4
   84fea:	4630      	mov	r0, r6
   84fec:	f7ff feaa 	bl	84d44 <_sbrk_r>
   84ff0:	3001      	adds	r0, #1
   84ff2:	d00d      	beq.n	85010 <_malloc_trim_r+0x70>
   84ff4:	4b10      	ldr	r3, [pc, #64]	; (85038 <_malloc_trim_r+0x98>)
   84ff6:	68ba      	ldr	r2, [r7, #8]
   84ff8:	6819      	ldr	r1, [r3, #0]
   84ffa:	1b2d      	subs	r5, r5, r4
   84ffc:	f045 0501 	orr.w	r5, r5, #1
   85000:	4630      	mov	r0, r6
   85002:	1b09      	subs	r1, r1, r4
   85004:	6055      	str	r5, [r2, #4]
   85006:	6019      	str	r1, [r3, #0]
   85008:	f7ff fb9a 	bl	84740 <__malloc_unlock>
   8500c:	2001      	movs	r0, #1
   8500e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85010:	2100      	movs	r1, #0
   85012:	4630      	mov	r0, r6
   85014:	f7ff fe96 	bl	84d44 <_sbrk_r>
   85018:	68ba      	ldr	r2, [r7, #8]
   8501a:	1a83      	subs	r3, r0, r2
   8501c:	2b0f      	cmp	r3, #15
   8501e:	ddde      	ble.n	84fde <_malloc_trim_r+0x3e>
   85020:	4c06      	ldr	r4, [pc, #24]	; (8503c <_malloc_trim_r+0x9c>)
   85022:	4905      	ldr	r1, [pc, #20]	; (85038 <_malloc_trim_r+0x98>)
   85024:	6824      	ldr	r4, [r4, #0]
   85026:	f043 0301 	orr.w	r3, r3, #1
   8502a:	1b00      	subs	r0, r0, r4
   8502c:	6053      	str	r3, [r2, #4]
   8502e:	6008      	str	r0, [r1, #0]
   85030:	e7d5      	b.n	84fde <_malloc_trim_r+0x3e>
   85032:	bf00      	nop
   85034:	20070ae0 	.word	0x20070ae0
   85038:	20070f8c 	.word	0x20070f8c
   8503c:	20070ee8 	.word	0x20070ee8

00085040 <_free_r>:
   85040:	2900      	cmp	r1, #0
   85042:	d044      	beq.n	850ce <_free_r+0x8e>
   85044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85048:	460d      	mov	r5, r1
   8504a:	4680      	mov	r8, r0
   8504c:	f7ff fb72 	bl	84734 <__malloc_lock>
   85050:	f855 7c04 	ldr.w	r7, [r5, #-4]
   85054:	4969      	ldr	r1, [pc, #420]	; (851fc <_free_r+0x1bc>)
   85056:	f1a5 0408 	sub.w	r4, r5, #8
   8505a:	f027 0301 	bic.w	r3, r7, #1
   8505e:	18e2      	adds	r2, r4, r3
   85060:	688e      	ldr	r6, [r1, #8]
   85062:	6850      	ldr	r0, [r2, #4]
   85064:	42b2      	cmp	r2, r6
   85066:	f020 0003 	bic.w	r0, r0, #3
   8506a:	d05e      	beq.n	8512a <_free_r+0xea>
   8506c:	07fe      	lsls	r6, r7, #31
   8506e:	6050      	str	r0, [r2, #4]
   85070:	d40b      	bmi.n	8508a <_free_r+0x4a>
   85072:	f855 7c08 	ldr.w	r7, [r5, #-8]
   85076:	f101 0e08 	add.w	lr, r1, #8
   8507a:	1be4      	subs	r4, r4, r7
   8507c:	68a5      	ldr	r5, [r4, #8]
   8507e:	443b      	add	r3, r7
   85080:	4575      	cmp	r5, lr
   85082:	d06d      	beq.n	85160 <_free_r+0x120>
   85084:	68e7      	ldr	r7, [r4, #12]
   85086:	60ef      	str	r7, [r5, #12]
   85088:	60bd      	str	r5, [r7, #8]
   8508a:	1815      	adds	r5, r2, r0
   8508c:	686d      	ldr	r5, [r5, #4]
   8508e:	07ed      	lsls	r5, r5, #31
   85090:	d53e      	bpl.n	85110 <_free_r+0xd0>
   85092:	f043 0201 	orr.w	r2, r3, #1
   85096:	6062      	str	r2, [r4, #4]
   85098:	50e3      	str	r3, [r4, r3]
   8509a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8509e:	d217      	bcs.n	850d0 <_free_r+0x90>
   850a0:	2201      	movs	r2, #1
   850a2:	08db      	lsrs	r3, r3, #3
   850a4:	1098      	asrs	r0, r3, #2
   850a6:	684d      	ldr	r5, [r1, #4]
   850a8:	4413      	add	r3, r2
   850aa:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   850ae:	4082      	lsls	r2, r0
   850b0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   850b4:	432a      	orrs	r2, r5
   850b6:	3808      	subs	r0, #8
   850b8:	60e0      	str	r0, [r4, #12]
   850ba:	60a7      	str	r7, [r4, #8]
   850bc:	604a      	str	r2, [r1, #4]
   850be:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   850c2:	60fc      	str	r4, [r7, #12]
   850c4:	4640      	mov	r0, r8
   850c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   850ca:	f7ff bb39 	b.w	84740 <__malloc_unlock>
   850ce:	4770      	bx	lr
   850d0:	0a5a      	lsrs	r2, r3, #9
   850d2:	2a04      	cmp	r2, #4
   850d4:	d852      	bhi.n	8517c <_free_r+0x13c>
   850d6:	099a      	lsrs	r2, r3, #6
   850d8:	f102 0739 	add.w	r7, r2, #57	; 0x39
   850dc:	00ff      	lsls	r7, r7, #3
   850de:	f102 0538 	add.w	r5, r2, #56	; 0x38
   850e2:	19c8      	adds	r0, r1, r7
   850e4:	59ca      	ldr	r2, [r1, r7]
   850e6:	3808      	subs	r0, #8
   850e8:	4290      	cmp	r0, r2
   850ea:	d04f      	beq.n	8518c <_free_r+0x14c>
   850ec:	6851      	ldr	r1, [r2, #4]
   850ee:	f021 0103 	bic.w	r1, r1, #3
   850f2:	428b      	cmp	r3, r1
   850f4:	d232      	bcs.n	8515c <_free_r+0x11c>
   850f6:	6892      	ldr	r2, [r2, #8]
   850f8:	4290      	cmp	r0, r2
   850fa:	d1f7      	bne.n	850ec <_free_r+0xac>
   850fc:	68c3      	ldr	r3, [r0, #12]
   850fe:	60a0      	str	r0, [r4, #8]
   85100:	60e3      	str	r3, [r4, #12]
   85102:	609c      	str	r4, [r3, #8]
   85104:	60c4      	str	r4, [r0, #12]
   85106:	4640      	mov	r0, r8
   85108:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8510c:	f7ff bb18 	b.w	84740 <__malloc_unlock>
   85110:	6895      	ldr	r5, [r2, #8]
   85112:	4f3b      	ldr	r7, [pc, #236]	; (85200 <_free_r+0x1c0>)
   85114:	4403      	add	r3, r0
   85116:	42bd      	cmp	r5, r7
   85118:	d040      	beq.n	8519c <_free_r+0x15c>
   8511a:	68d0      	ldr	r0, [r2, #12]
   8511c:	f043 0201 	orr.w	r2, r3, #1
   85120:	60e8      	str	r0, [r5, #12]
   85122:	6085      	str	r5, [r0, #8]
   85124:	6062      	str	r2, [r4, #4]
   85126:	50e3      	str	r3, [r4, r3]
   85128:	e7b7      	b.n	8509a <_free_r+0x5a>
   8512a:	07ff      	lsls	r7, r7, #31
   8512c:	4403      	add	r3, r0
   8512e:	d407      	bmi.n	85140 <_free_r+0x100>
   85130:	f855 5c08 	ldr.w	r5, [r5, #-8]
   85134:	1b64      	subs	r4, r4, r5
   85136:	68e2      	ldr	r2, [r4, #12]
   85138:	68a0      	ldr	r0, [r4, #8]
   8513a:	442b      	add	r3, r5
   8513c:	60c2      	str	r2, [r0, #12]
   8513e:	6090      	str	r0, [r2, #8]
   85140:	4a30      	ldr	r2, [pc, #192]	; (85204 <_free_r+0x1c4>)
   85142:	f043 0001 	orr.w	r0, r3, #1
   85146:	6812      	ldr	r2, [r2, #0]
   85148:	6060      	str	r0, [r4, #4]
   8514a:	4293      	cmp	r3, r2
   8514c:	608c      	str	r4, [r1, #8]
   8514e:	d3b9      	bcc.n	850c4 <_free_r+0x84>
   85150:	4b2d      	ldr	r3, [pc, #180]	; (85208 <_free_r+0x1c8>)
   85152:	4640      	mov	r0, r8
   85154:	6819      	ldr	r1, [r3, #0]
   85156:	f7ff ff23 	bl	84fa0 <_malloc_trim_r>
   8515a:	e7b3      	b.n	850c4 <_free_r+0x84>
   8515c:	4610      	mov	r0, r2
   8515e:	e7cd      	b.n	850fc <_free_r+0xbc>
   85160:	1811      	adds	r1, r2, r0
   85162:	6849      	ldr	r1, [r1, #4]
   85164:	07c9      	lsls	r1, r1, #31
   85166:	d444      	bmi.n	851f2 <_free_r+0x1b2>
   85168:	6891      	ldr	r1, [r2, #8]
   8516a:	4403      	add	r3, r0
   8516c:	68d2      	ldr	r2, [r2, #12]
   8516e:	f043 0001 	orr.w	r0, r3, #1
   85172:	60ca      	str	r2, [r1, #12]
   85174:	6091      	str	r1, [r2, #8]
   85176:	6060      	str	r0, [r4, #4]
   85178:	50e3      	str	r3, [r4, r3]
   8517a:	e7a3      	b.n	850c4 <_free_r+0x84>
   8517c:	2a14      	cmp	r2, #20
   8517e:	d816      	bhi.n	851ae <_free_r+0x16e>
   85180:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   85184:	00ff      	lsls	r7, r7, #3
   85186:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8518a:	e7aa      	b.n	850e2 <_free_r+0xa2>
   8518c:	2301      	movs	r3, #1
   8518e:	10aa      	asrs	r2, r5, #2
   85190:	684d      	ldr	r5, [r1, #4]
   85192:	4093      	lsls	r3, r2
   85194:	432b      	orrs	r3, r5
   85196:	604b      	str	r3, [r1, #4]
   85198:	4603      	mov	r3, r0
   8519a:	e7b0      	b.n	850fe <_free_r+0xbe>
   8519c:	f043 0201 	orr.w	r2, r3, #1
   851a0:	614c      	str	r4, [r1, #20]
   851a2:	610c      	str	r4, [r1, #16]
   851a4:	60e5      	str	r5, [r4, #12]
   851a6:	60a5      	str	r5, [r4, #8]
   851a8:	6062      	str	r2, [r4, #4]
   851aa:	50e3      	str	r3, [r4, r3]
   851ac:	e78a      	b.n	850c4 <_free_r+0x84>
   851ae:	2a54      	cmp	r2, #84	; 0x54
   851b0:	d806      	bhi.n	851c0 <_free_r+0x180>
   851b2:	0b1a      	lsrs	r2, r3, #12
   851b4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   851b8:	00ff      	lsls	r7, r7, #3
   851ba:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   851be:	e790      	b.n	850e2 <_free_r+0xa2>
   851c0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   851c4:	d806      	bhi.n	851d4 <_free_r+0x194>
   851c6:	0bda      	lsrs	r2, r3, #15
   851c8:	f102 0778 	add.w	r7, r2, #120	; 0x78
   851cc:	00ff      	lsls	r7, r7, #3
   851ce:	f102 0577 	add.w	r5, r2, #119	; 0x77
   851d2:	e786      	b.n	850e2 <_free_r+0xa2>
   851d4:	f240 5054 	movw	r0, #1364	; 0x554
   851d8:	4282      	cmp	r2, r0
   851da:	d806      	bhi.n	851ea <_free_r+0x1aa>
   851dc:	0c9a      	lsrs	r2, r3, #18
   851de:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   851e2:	00ff      	lsls	r7, r7, #3
   851e4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   851e8:	e77b      	b.n	850e2 <_free_r+0xa2>
   851ea:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   851ee:	257e      	movs	r5, #126	; 0x7e
   851f0:	e777      	b.n	850e2 <_free_r+0xa2>
   851f2:	f043 0101 	orr.w	r1, r3, #1
   851f6:	6061      	str	r1, [r4, #4]
   851f8:	6013      	str	r3, [r2, #0]
   851fa:	e763      	b.n	850c4 <_free_r+0x84>
   851fc:	20070ae0 	.word	0x20070ae0
   85200:	20070ae8 	.word	0x20070ae8
   85204:	20070eec 	.word	0x20070eec
   85208:	20070fbc 	.word	0x20070fbc

0008520c <memmove>:
   8520c:	4288      	cmp	r0, r1
   8520e:	b5f0      	push	{r4, r5, r6, r7, lr}
   85210:	d90d      	bls.n	8522e <memmove+0x22>
   85212:	188b      	adds	r3, r1, r2
   85214:	4298      	cmp	r0, r3
   85216:	d20a      	bcs.n	8522e <memmove+0x22>
   85218:	1884      	adds	r4, r0, r2
   8521a:	2a00      	cmp	r2, #0
   8521c:	d051      	beq.n	852c2 <memmove+0xb6>
   8521e:	4622      	mov	r2, r4
   85220:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   85224:	4299      	cmp	r1, r3
   85226:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8522a:	d1f9      	bne.n	85220 <memmove+0x14>
   8522c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8522e:	2a0f      	cmp	r2, #15
   85230:	d948      	bls.n	852c4 <memmove+0xb8>
   85232:	ea41 0300 	orr.w	r3, r1, r0
   85236:	079b      	lsls	r3, r3, #30
   85238:	d146      	bne.n	852c8 <memmove+0xbc>
   8523a:	4615      	mov	r5, r2
   8523c:	f100 0410 	add.w	r4, r0, #16
   85240:	f101 0310 	add.w	r3, r1, #16
   85244:	f853 6c10 	ldr.w	r6, [r3, #-16]
   85248:	3d10      	subs	r5, #16
   8524a:	f844 6c10 	str.w	r6, [r4, #-16]
   8524e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   85252:	2d0f      	cmp	r5, #15
   85254:	f844 6c0c 	str.w	r6, [r4, #-12]
   85258:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8525c:	f104 0410 	add.w	r4, r4, #16
   85260:	f844 6c18 	str.w	r6, [r4, #-24]
   85264:	f853 6c04 	ldr.w	r6, [r3, #-4]
   85268:	f103 0310 	add.w	r3, r3, #16
   8526c:	f844 6c14 	str.w	r6, [r4, #-20]
   85270:	d8e8      	bhi.n	85244 <memmove+0x38>
   85272:	f1a2 0310 	sub.w	r3, r2, #16
   85276:	f023 030f 	bic.w	r3, r3, #15
   8527a:	f002 0e0f 	and.w	lr, r2, #15
   8527e:	3310      	adds	r3, #16
   85280:	f1be 0f03 	cmp.w	lr, #3
   85284:	4419      	add	r1, r3
   85286:	4403      	add	r3, r0
   85288:	d921      	bls.n	852ce <memmove+0xc2>
   8528a:	460e      	mov	r6, r1
   8528c:	4674      	mov	r4, lr
   8528e:	1f1d      	subs	r5, r3, #4
   85290:	f856 7b04 	ldr.w	r7, [r6], #4
   85294:	3c04      	subs	r4, #4
   85296:	2c03      	cmp	r4, #3
   85298:	f845 7f04 	str.w	r7, [r5, #4]!
   8529c:	d8f8      	bhi.n	85290 <memmove+0x84>
   8529e:	f1ae 0404 	sub.w	r4, lr, #4
   852a2:	f024 0403 	bic.w	r4, r4, #3
   852a6:	3404      	adds	r4, #4
   852a8:	4421      	add	r1, r4
   852aa:	4423      	add	r3, r4
   852ac:	f002 0203 	and.w	r2, r2, #3
   852b0:	b162      	cbz	r2, 852cc <memmove+0xc0>
   852b2:	3b01      	subs	r3, #1
   852b4:	440a      	add	r2, r1
   852b6:	f811 4b01 	ldrb.w	r4, [r1], #1
   852ba:	428a      	cmp	r2, r1
   852bc:	f803 4f01 	strb.w	r4, [r3, #1]!
   852c0:	d1f9      	bne.n	852b6 <memmove+0xaa>
   852c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   852c4:	4603      	mov	r3, r0
   852c6:	e7f3      	b.n	852b0 <memmove+0xa4>
   852c8:	4603      	mov	r3, r0
   852ca:	e7f2      	b.n	852b2 <memmove+0xa6>
   852cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   852ce:	4672      	mov	r2, lr
   852d0:	e7ee      	b.n	852b0 <memmove+0xa4>
   852d2:	bf00      	nop

000852d4 <_realloc_r>:
   852d4:	2900      	cmp	r1, #0
   852d6:	f000 8094 	beq.w	85402 <_realloc_r+0x12e>
   852da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   852de:	460c      	mov	r4, r1
   852e0:	4615      	mov	r5, r2
   852e2:	b083      	sub	sp, #12
   852e4:	4680      	mov	r8, r0
   852e6:	f105 060b 	add.w	r6, r5, #11
   852ea:	f7ff fa23 	bl	84734 <__malloc_lock>
   852ee:	f854 ec04 	ldr.w	lr, [r4, #-4]
   852f2:	2e16      	cmp	r6, #22
   852f4:	f02e 0703 	bic.w	r7, lr, #3
   852f8:	f1a4 0908 	sub.w	r9, r4, #8
   852fc:	d83c      	bhi.n	85378 <_realloc_r+0xa4>
   852fe:	2210      	movs	r2, #16
   85300:	4616      	mov	r6, r2
   85302:	42b5      	cmp	r5, r6
   85304:	d83d      	bhi.n	85382 <_realloc_r+0xae>
   85306:	4297      	cmp	r7, r2
   85308:	da43      	bge.n	85392 <_realloc_r+0xbe>
   8530a:	4bc6      	ldr	r3, [pc, #792]	; (85624 <_realloc_r+0x350>)
   8530c:	eb09 0007 	add.w	r0, r9, r7
   85310:	6899      	ldr	r1, [r3, #8]
   85312:	4288      	cmp	r0, r1
   85314:	f000 80c3 	beq.w	8549e <_realloc_r+0x1ca>
   85318:	6843      	ldr	r3, [r0, #4]
   8531a:	f023 0101 	bic.w	r1, r3, #1
   8531e:	4401      	add	r1, r0
   85320:	6849      	ldr	r1, [r1, #4]
   85322:	07c9      	lsls	r1, r1, #31
   85324:	d54d      	bpl.n	853c2 <_realloc_r+0xee>
   85326:	f01e 0f01 	tst.w	lr, #1
   8532a:	f000 809b 	beq.w	85464 <_realloc_r+0x190>
   8532e:	4629      	mov	r1, r5
   85330:	4640      	mov	r0, r8
   85332:	f7fe fe8b 	bl	8404c <_malloc_r>
   85336:	4605      	mov	r5, r0
   85338:	2800      	cmp	r0, #0
   8533a:	d03b      	beq.n	853b4 <_realloc_r+0xe0>
   8533c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85340:	f1a0 0208 	sub.w	r2, r0, #8
   85344:	f023 0301 	bic.w	r3, r3, #1
   85348:	444b      	add	r3, r9
   8534a:	429a      	cmp	r2, r3
   8534c:	f000 812b 	beq.w	855a6 <_realloc_r+0x2d2>
   85350:	1f3a      	subs	r2, r7, #4
   85352:	2a24      	cmp	r2, #36	; 0x24
   85354:	f200 8118 	bhi.w	85588 <_realloc_r+0x2b4>
   85358:	2a13      	cmp	r2, #19
   8535a:	f200 80eb 	bhi.w	85534 <_realloc_r+0x260>
   8535e:	4603      	mov	r3, r0
   85360:	4622      	mov	r2, r4
   85362:	6811      	ldr	r1, [r2, #0]
   85364:	6019      	str	r1, [r3, #0]
   85366:	6851      	ldr	r1, [r2, #4]
   85368:	6059      	str	r1, [r3, #4]
   8536a:	6892      	ldr	r2, [r2, #8]
   8536c:	609a      	str	r2, [r3, #8]
   8536e:	4621      	mov	r1, r4
   85370:	4640      	mov	r0, r8
   85372:	f7ff fe65 	bl	85040 <_free_r>
   85376:	e01d      	b.n	853b4 <_realloc_r+0xe0>
   85378:	f026 0607 	bic.w	r6, r6, #7
   8537c:	2e00      	cmp	r6, #0
   8537e:	4632      	mov	r2, r6
   85380:	dabf      	bge.n	85302 <_realloc_r+0x2e>
   85382:	2500      	movs	r5, #0
   85384:	230c      	movs	r3, #12
   85386:	4628      	mov	r0, r5
   85388:	f8c8 3000 	str.w	r3, [r8]
   8538c:	b003      	add	sp, #12
   8538e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85392:	4625      	mov	r5, r4
   85394:	1bbb      	subs	r3, r7, r6
   85396:	2b0f      	cmp	r3, #15
   85398:	f8d9 2004 	ldr.w	r2, [r9, #4]
   8539c:	d81d      	bhi.n	853da <_realloc_r+0x106>
   8539e:	f002 0201 	and.w	r2, r2, #1
   853a2:	433a      	orrs	r2, r7
   853a4:	eb09 0107 	add.w	r1, r9, r7
   853a8:	f8c9 2004 	str.w	r2, [r9, #4]
   853ac:	684b      	ldr	r3, [r1, #4]
   853ae:	f043 0301 	orr.w	r3, r3, #1
   853b2:	604b      	str	r3, [r1, #4]
   853b4:	4640      	mov	r0, r8
   853b6:	f7ff f9c3 	bl	84740 <__malloc_unlock>
   853ba:	4628      	mov	r0, r5
   853bc:	b003      	add	sp, #12
   853be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   853c2:	f023 0303 	bic.w	r3, r3, #3
   853c6:	18f9      	adds	r1, r7, r3
   853c8:	4291      	cmp	r1, r2
   853ca:	db1d      	blt.n	85408 <_realloc_r+0x134>
   853cc:	68c3      	ldr	r3, [r0, #12]
   853ce:	6882      	ldr	r2, [r0, #8]
   853d0:	4625      	mov	r5, r4
   853d2:	60d3      	str	r3, [r2, #12]
   853d4:	460f      	mov	r7, r1
   853d6:	609a      	str	r2, [r3, #8]
   853d8:	e7dc      	b.n	85394 <_realloc_r+0xc0>
   853da:	f002 0201 	and.w	r2, r2, #1
   853de:	eb09 0106 	add.w	r1, r9, r6
   853e2:	f043 0301 	orr.w	r3, r3, #1
   853e6:	4332      	orrs	r2, r6
   853e8:	f8c9 2004 	str.w	r2, [r9, #4]
   853ec:	444f      	add	r7, r9
   853ee:	604b      	str	r3, [r1, #4]
   853f0:	687b      	ldr	r3, [r7, #4]
   853f2:	3108      	adds	r1, #8
   853f4:	f043 0301 	orr.w	r3, r3, #1
   853f8:	607b      	str	r3, [r7, #4]
   853fa:	4640      	mov	r0, r8
   853fc:	f7ff fe20 	bl	85040 <_free_r>
   85400:	e7d8      	b.n	853b4 <_realloc_r+0xe0>
   85402:	4611      	mov	r1, r2
   85404:	f7fe be22 	b.w	8404c <_malloc_r>
   85408:	f01e 0f01 	tst.w	lr, #1
   8540c:	d18f      	bne.n	8532e <_realloc_r+0x5a>
   8540e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85412:	eba9 0a01 	sub.w	sl, r9, r1
   85416:	f8da 1004 	ldr.w	r1, [sl, #4]
   8541a:	f021 0103 	bic.w	r1, r1, #3
   8541e:	440b      	add	r3, r1
   85420:	443b      	add	r3, r7
   85422:	4293      	cmp	r3, r2
   85424:	db26      	blt.n	85474 <_realloc_r+0x1a0>
   85426:	4655      	mov	r5, sl
   85428:	68c1      	ldr	r1, [r0, #12]
   8542a:	6880      	ldr	r0, [r0, #8]
   8542c:	1f3a      	subs	r2, r7, #4
   8542e:	60c1      	str	r1, [r0, #12]
   85430:	6088      	str	r0, [r1, #8]
   85432:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85436:	f8da 100c 	ldr.w	r1, [sl, #12]
   8543a:	2a24      	cmp	r2, #36	; 0x24
   8543c:	60c1      	str	r1, [r0, #12]
   8543e:	6088      	str	r0, [r1, #8]
   85440:	d826      	bhi.n	85490 <_realloc_r+0x1bc>
   85442:	2a13      	cmp	r2, #19
   85444:	f240 8081 	bls.w	8554a <_realloc_r+0x276>
   85448:	6821      	ldr	r1, [r4, #0]
   8544a:	2a1b      	cmp	r2, #27
   8544c:	f8ca 1008 	str.w	r1, [sl, #8]
   85450:	6861      	ldr	r1, [r4, #4]
   85452:	f8ca 100c 	str.w	r1, [sl, #12]
   85456:	f200 80ad 	bhi.w	855b4 <_realloc_r+0x2e0>
   8545a:	f104 0008 	add.w	r0, r4, #8
   8545e:	f10a 0210 	add.w	r2, sl, #16
   85462:	e074      	b.n	8554e <_realloc_r+0x27a>
   85464:	f854 3c08 	ldr.w	r3, [r4, #-8]
   85468:	eba9 0a03 	sub.w	sl, r9, r3
   8546c:	f8da 1004 	ldr.w	r1, [sl, #4]
   85470:	f021 0103 	bic.w	r1, r1, #3
   85474:	187b      	adds	r3, r7, r1
   85476:	4293      	cmp	r3, r2
   85478:	f6ff af59 	blt.w	8532e <_realloc_r+0x5a>
   8547c:	4655      	mov	r5, sl
   8547e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85482:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85486:	1f3a      	subs	r2, r7, #4
   85488:	2a24      	cmp	r2, #36	; 0x24
   8548a:	60c1      	str	r1, [r0, #12]
   8548c:	6088      	str	r0, [r1, #8]
   8548e:	d9d8      	bls.n	85442 <_realloc_r+0x16e>
   85490:	4621      	mov	r1, r4
   85492:	4628      	mov	r0, r5
   85494:	461f      	mov	r7, r3
   85496:	46d1      	mov	r9, sl
   85498:	f7ff feb8 	bl	8520c <memmove>
   8549c:	e77a      	b.n	85394 <_realloc_r+0xc0>
   8549e:	6841      	ldr	r1, [r0, #4]
   854a0:	f106 0010 	add.w	r0, r6, #16
   854a4:	f021 0b03 	bic.w	fp, r1, #3
   854a8:	44bb      	add	fp, r7
   854aa:	4583      	cmp	fp, r0
   854ac:	da58      	bge.n	85560 <_realloc_r+0x28c>
   854ae:	f01e 0f01 	tst.w	lr, #1
   854b2:	f47f af3c 	bne.w	8532e <_realloc_r+0x5a>
   854b6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   854ba:	eba9 0a01 	sub.w	sl, r9, r1
   854be:	f8da 1004 	ldr.w	r1, [sl, #4]
   854c2:	f021 0103 	bic.w	r1, r1, #3
   854c6:	448b      	add	fp, r1
   854c8:	4558      	cmp	r0, fp
   854ca:	dcd3      	bgt.n	85474 <_realloc_r+0x1a0>
   854cc:	4655      	mov	r5, sl
   854ce:	f8da 100c 	ldr.w	r1, [sl, #12]
   854d2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   854d6:	1f3a      	subs	r2, r7, #4
   854d8:	2a24      	cmp	r2, #36	; 0x24
   854da:	60c1      	str	r1, [r0, #12]
   854dc:	6088      	str	r0, [r1, #8]
   854de:	f200 808d 	bhi.w	855fc <_realloc_r+0x328>
   854e2:	2a13      	cmp	r2, #19
   854e4:	f240 8087 	bls.w	855f6 <_realloc_r+0x322>
   854e8:	6821      	ldr	r1, [r4, #0]
   854ea:	2a1b      	cmp	r2, #27
   854ec:	f8ca 1008 	str.w	r1, [sl, #8]
   854f0:	6861      	ldr	r1, [r4, #4]
   854f2:	f8ca 100c 	str.w	r1, [sl, #12]
   854f6:	f200 8088 	bhi.w	8560a <_realloc_r+0x336>
   854fa:	f104 0108 	add.w	r1, r4, #8
   854fe:	f10a 0210 	add.w	r2, sl, #16
   85502:	6808      	ldr	r0, [r1, #0]
   85504:	6010      	str	r0, [r2, #0]
   85506:	6848      	ldr	r0, [r1, #4]
   85508:	6050      	str	r0, [r2, #4]
   8550a:	6889      	ldr	r1, [r1, #8]
   8550c:	6091      	str	r1, [r2, #8]
   8550e:	ebab 0206 	sub.w	r2, fp, r6
   85512:	eb0a 0106 	add.w	r1, sl, r6
   85516:	f042 0201 	orr.w	r2, r2, #1
   8551a:	6099      	str	r1, [r3, #8]
   8551c:	604a      	str	r2, [r1, #4]
   8551e:	f8da 3004 	ldr.w	r3, [sl, #4]
   85522:	4640      	mov	r0, r8
   85524:	f003 0301 	and.w	r3, r3, #1
   85528:	431e      	orrs	r6, r3
   8552a:	f8ca 6004 	str.w	r6, [sl, #4]
   8552e:	f7ff f907 	bl	84740 <__malloc_unlock>
   85532:	e742      	b.n	853ba <_realloc_r+0xe6>
   85534:	6823      	ldr	r3, [r4, #0]
   85536:	2a1b      	cmp	r2, #27
   85538:	6003      	str	r3, [r0, #0]
   8553a:	6863      	ldr	r3, [r4, #4]
   8553c:	6043      	str	r3, [r0, #4]
   8553e:	d827      	bhi.n	85590 <_realloc_r+0x2bc>
   85540:	f100 0308 	add.w	r3, r0, #8
   85544:	f104 0208 	add.w	r2, r4, #8
   85548:	e70b      	b.n	85362 <_realloc_r+0x8e>
   8554a:	4620      	mov	r0, r4
   8554c:	462a      	mov	r2, r5
   8554e:	6801      	ldr	r1, [r0, #0]
   85550:	461f      	mov	r7, r3
   85552:	6011      	str	r1, [r2, #0]
   85554:	6841      	ldr	r1, [r0, #4]
   85556:	46d1      	mov	r9, sl
   85558:	6051      	str	r1, [r2, #4]
   8555a:	6883      	ldr	r3, [r0, #8]
   8555c:	6093      	str	r3, [r2, #8]
   8555e:	e719      	b.n	85394 <_realloc_r+0xc0>
   85560:	ebab 0b06 	sub.w	fp, fp, r6
   85564:	eb09 0106 	add.w	r1, r9, r6
   85568:	f04b 0201 	orr.w	r2, fp, #1
   8556c:	6099      	str	r1, [r3, #8]
   8556e:	604a      	str	r2, [r1, #4]
   85570:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85574:	4640      	mov	r0, r8
   85576:	f003 0301 	and.w	r3, r3, #1
   8557a:	431e      	orrs	r6, r3
   8557c:	f844 6c04 	str.w	r6, [r4, #-4]
   85580:	f7ff f8de 	bl	84740 <__malloc_unlock>
   85584:	4625      	mov	r5, r4
   85586:	e718      	b.n	853ba <_realloc_r+0xe6>
   85588:	4621      	mov	r1, r4
   8558a:	f7ff fe3f 	bl	8520c <memmove>
   8558e:	e6ee      	b.n	8536e <_realloc_r+0x9a>
   85590:	68a3      	ldr	r3, [r4, #8]
   85592:	2a24      	cmp	r2, #36	; 0x24
   85594:	6083      	str	r3, [r0, #8]
   85596:	68e3      	ldr	r3, [r4, #12]
   85598:	60c3      	str	r3, [r0, #12]
   8559a:	d018      	beq.n	855ce <_realloc_r+0x2fa>
   8559c:	f100 0310 	add.w	r3, r0, #16
   855a0:	f104 0210 	add.w	r2, r4, #16
   855a4:	e6dd      	b.n	85362 <_realloc_r+0x8e>
   855a6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   855aa:	4625      	mov	r5, r4
   855ac:	f023 0303 	bic.w	r3, r3, #3
   855b0:	441f      	add	r7, r3
   855b2:	e6ef      	b.n	85394 <_realloc_r+0xc0>
   855b4:	68a1      	ldr	r1, [r4, #8]
   855b6:	2a24      	cmp	r2, #36	; 0x24
   855b8:	f8ca 1010 	str.w	r1, [sl, #16]
   855bc:	68e1      	ldr	r1, [r4, #12]
   855be:	f8ca 1014 	str.w	r1, [sl, #20]
   855c2:	d00d      	beq.n	855e0 <_realloc_r+0x30c>
   855c4:	f104 0010 	add.w	r0, r4, #16
   855c8:	f10a 0218 	add.w	r2, sl, #24
   855cc:	e7bf      	b.n	8554e <_realloc_r+0x27a>
   855ce:	6922      	ldr	r2, [r4, #16]
   855d0:	f100 0318 	add.w	r3, r0, #24
   855d4:	6102      	str	r2, [r0, #16]
   855d6:	6961      	ldr	r1, [r4, #20]
   855d8:	f104 0218 	add.w	r2, r4, #24
   855dc:	6141      	str	r1, [r0, #20]
   855de:	e6c0      	b.n	85362 <_realloc_r+0x8e>
   855e0:	6922      	ldr	r2, [r4, #16]
   855e2:	f104 0018 	add.w	r0, r4, #24
   855e6:	f8ca 2018 	str.w	r2, [sl, #24]
   855ea:	6961      	ldr	r1, [r4, #20]
   855ec:	f10a 0220 	add.w	r2, sl, #32
   855f0:	f8ca 101c 	str.w	r1, [sl, #28]
   855f4:	e7ab      	b.n	8554e <_realloc_r+0x27a>
   855f6:	4621      	mov	r1, r4
   855f8:	462a      	mov	r2, r5
   855fa:	e782      	b.n	85502 <_realloc_r+0x22e>
   855fc:	4621      	mov	r1, r4
   855fe:	4628      	mov	r0, r5
   85600:	9301      	str	r3, [sp, #4]
   85602:	f7ff fe03 	bl	8520c <memmove>
   85606:	9b01      	ldr	r3, [sp, #4]
   85608:	e781      	b.n	8550e <_realloc_r+0x23a>
   8560a:	68a1      	ldr	r1, [r4, #8]
   8560c:	2a24      	cmp	r2, #36	; 0x24
   8560e:	f8ca 1010 	str.w	r1, [sl, #16]
   85612:	68e1      	ldr	r1, [r4, #12]
   85614:	f8ca 1014 	str.w	r1, [sl, #20]
   85618:	d006      	beq.n	85628 <_realloc_r+0x354>
   8561a:	f104 0110 	add.w	r1, r4, #16
   8561e:	f10a 0218 	add.w	r2, sl, #24
   85622:	e76e      	b.n	85502 <_realloc_r+0x22e>
   85624:	20070ae0 	.word	0x20070ae0
   85628:	6922      	ldr	r2, [r4, #16]
   8562a:	f104 0118 	add.w	r1, r4, #24
   8562e:	f8ca 2018 	str.w	r2, [sl, #24]
   85632:	6960      	ldr	r0, [r4, #20]
   85634:	f10a 0220 	add.w	r2, sl, #32
   85638:	f8ca 001c 	str.w	r0, [sl, #28]
   8563c:	e761      	b.n	85502 <_realloc_r+0x22e>
   8563e:	bf00      	nop

00085640 <__aeabi_drsub>:
   85640:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   85644:	e002      	b.n	8564c <__adddf3>
   85646:	bf00      	nop

00085648 <__aeabi_dsub>:
   85648:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0008564c <__adddf3>:
   8564c:	b530      	push	{r4, r5, lr}
   8564e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   85652:	ea4f 0543 	mov.w	r5, r3, lsl #1
   85656:	ea94 0f05 	teq	r4, r5
   8565a:	bf08      	it	eq
   8565c:	ea90 0f02 	teqeq	r0, r2
   85660:	bf1f      	itttt	ne
   85662:	ea54 0c00 	orrsne.w	ip, r4, r0
   85666:	ea55 0c02 	orrsne.w	ip, r5, r2
   8566a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8566e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85672:	f000 80e2 	beq.w	8583a <__adddf3+0x1ee>
   85676:	ea4f 5454 	mov.w	r4, r4, lsr #21
   8567a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8567e:	bfb8      	it	lt
   85680:	426d      	neglt	r5, r5
   85682:	dd0c      	ble.n	8569e <__adddf3+0x52>
   85684:	442c      	add	r4, r5
   85686:	ea80 0202 	eor.w	r2, r0, r2
   8568a:	ea81 0303 	eor.w	r3, r1, r3
   8568e:	ea82 0000 	eor.w	r0, r2, r0
   85692:	ea83 0101 	eor.w	r1, r3, r1
   85696:	ea80 0202 	eor.w	r2, r0, r2
   8569a:	ea81 0303 	eor.w	r3, r1, r3
   8569e:	2d36      	cmp	r5, #54	; 0x36
   856a0:	bf88      	it	hi
   856a2:	bd30      	pophi	{r4, r5, pc}
   856a4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   856a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   856ac:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   856b0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   856b4:	d002      	beq.n	856bc <__adddf3+0x70>
   856b6:	4240      	negs	r0, r0
   856b8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   856bc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   856c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   856c4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   856c8:	d002      	beq.n	856d0 <__adddf3+0x84>
   856ca:	4252      	negs	r2, r2
   856cc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   856d0:	ea94 0f05 	teq	r4, r5
   856d4:	f000 80a7 	beq.w	85826 <__adddf3+0x1da>
   856d8:	f1a4 0401 	sub.w	r4, r4, #1
   856dc:	f1d5 0e20 	rsbs	lr, r5, #32
   856e0:	db0d      	blt.n	856fe <__adddf3+0xb2>
   856e2:	fa02 fc0e 	lsl.w	ip, r2, lr
   856e6:	fa22 f205 	lsr.w	r2, r2, r5
   856ea:	1880      	adds	r0, r0, r2
   856ec:	f141 0100 	adc.w	r1, r1, #0
   856f0:	fa03 f20e 	lsl.w	r2, r3, lr
   856f4:	1880      	adds	r0, r0, r2
   856f6:	fa43 f305 	asr.w	r3, r3, r5
   856fa:	4159      	adcs	r1, r3
   856fc:	e00e      	b.n	8571c <__adddf3+0xd0>
   856fe:	f1a5 0520 	sub.w	r5, r5, #32
   85702:	f10e 0e20 	add.w	lr, lr, #32
   85706:	2a01      	cmp	r2, #1
   85708:	fa03 fc0e 	lsl.w	ip, r3, lr
   8570c:	bf28      	it	cs
   8570e:	f04c 0c02 	orrcs.w	ip, ip, #2
   85712:	fa43 f305 	asr.w	r3, r3, r5
   85716:	18c0      	adds	r0, r0, r3
   85718:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   8571c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85720:	d507      	bpl.n	85732 <__adddf3+0xe6>
   85722:	f04f 0e00 	mov.w	lr, #0
   85726:	f1dc 0c00 	rsbs	ip, ip, #0
   8572a:	eb7e 0000 	sbcs.w	r0, lr, r0
   8572e:	eb6e 0101 	sbc.w	r1, lr, r1
   85732:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   85736:	d31b      	bcc.n	85770 <__adddf3+0x124>
   85738:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   8573c:	d30c      	bcc.n	85758 <__adddf3+0x10c>
   8573e:	0849      	lsrs	r1, r1, #1
   85740:	ea5f 0030 	movs.w	r0, r0, rrx
   85744:	ea4f 0c3c 	mov.w	ip, ip, rrx
   85748:	f104 0401 	add.w	r4, r4, #1
   8574c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   85750:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   85754:	f080 809a 	bcs.w	8588c <__adddf3+0x240>
   85758:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   8575c:	bf08      	it	eq
   8575e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85762:	f150 0000 	adcs.w	r0, r0, #0
   85766:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8576a:	ea41 0105 	orr.w	r1, r1, r5
   8576e:	bd30      	pop	{r4, r5, pc}
   85770:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   85774:	4140      	adcs	r0, r0
   85776:	eb41 0101 	adc.w	r1, r1, r1
   8577a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8577e:	f1a4 0401 	sub.w	r4, r4, #1
   85782:	d1e9      	bne.n	85758 <__adddf3+0x10c>
   85784:	f091 0f00 	teq	r1, #0
   85788:	bf04      	itt	eq
   8578a:	4601      	moveq	r1, r0
   8578c:	2000      	moveq	r0, #0
   8578e:	fab1 f381 	clz	r3, r1
   85792:	bf08      	it	eq
   85794:	3320      	addeq	r3, #32
   85796:	f1a3 030b 	sub.w	r3, r3, #11
   8579a:	f1b3 0220 	subs.w	r2, r3, #32
   8579e:	da0c      	bge.n	857ba <__adddf3+0x16e>
   857a0:	320c      	adds	r2, #12
   857a2:	dd08      	ble.n	857b6 <__adddf3+0x16a>
   857a4:	f102 0c14 	add.w	ip, r2, #20
   857a8:	f1c2 020c 	rsb	r2, r2, #12
   857ac:	fa01 f00c 	lsl.w	r0, r1, ip
   857b0:	fa21 f102 	lsr.w	r1, r1, r2
   857b4:	e00c      	b.n	857d0 <__adddf3+0x184>
   857b6:	f102 0214 	add.w	r2, r2, #20
   857ba:	bfd8      	it	le
   857bc:	f1c2 0c20 	rsble	ip, r2, #32
   857c0:	fa01 f102 	lsl.w	r1, r1, r2
   857c4:	fa20 fc0c 	lsr.w	ip, r0, ip
   857c8:	bfdc      	itt	le
   857ca:	ea41 010c 	orrle.w	r1, r1, ip
   857ce:	4090      	lslle	r0, r2
   857d0:	1ae4      	subs	r4, r4, r3
   857d2:	bfa2      	ittt	ge
   857d4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   857d8:	4329      	orrge	r1, r5
   857da:	bd30      	popge	{r4, r5, pc}
   857dc:	ea6f 0404 	mvn.w	r4, r4
   857e0:	3c1f      	subs	r4, #31
   857e2:	da1c      	bge.n	8581e <__adddf3+0x1d2>
   857e4:	340c      	adds	r4, #12
   857e6:	dc0e      	bgt.n	85806 <__adddf3+0x1ba>
   857e8:	f104 0414 	add.w	r4, r4, #20
   857ec:	f1c4 0220 	rsb	r2, r4, #32
   857f0:	fa20 f004 	lsr.w	r0, r0, r4
   857f4:	fa01 f302 	lsl.w	r3, r1, r2
   857f8:	ea40 0003 	orr.w	r0, r0, r3
   857fc:	fa21 f304 	lsr.w	r3, r1, r4
   85800:	ea45 0103 	orr.w	r1, r5, r3
   85804:	bd30      	pop	{r4, r5, pc}
   85806:	f1c4 040c 	rsb	r4, r4, #12
   8580a:	f1c4 0220 	rsb	r2, r4, #32
   8580e:	fa20 f002 	lsr.w	r0, r0, r2
   85812:	fa01 f304 	lsl.w	r3, r1, r4
   85816:	ea40 0003 	orr.w	r0, r0, r3
   8581a:	4629      	mov	r1, r5
   8581c:	bd30      	pop	{r4, r5, pc}
   8581e:	fa21 f004 	lsr.w	r0, r1, r4
   85822:	4629      	mov	r1, r5
   85824:	bd30      	pop	{r4, r5, pc}
   85826:	f094 0f00 	teq	r4, #0
   8582a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   8582e:	bf06      	itte	eq
   85830:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   85834:	3401      	addeq	r4, #1
   85836:	3d01      	subne	r5, #1
   85838:	e74e      	b.n	856d8 <__adddf3+0x8c>
   8583a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8583e:	bf18      	it	ne
   85840:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85844:	d029      	beq.n	8589a <__adddf3+0x24e>
   85846:	ea94 0f05 	teq	r4, r5
   8584a:	bf08      	it	eq
   8584c:	ea90 0f02 	teqeq	r0, r2
   85850:	d005      	beq.n	8585e <__adddf3+0x212>
   85852:	ea54 0c00 	orrs.w	ip, r4, r0
   85856:	bf04      	itt	eq
   85858:	4619      	moveq	r1, r3
   8585a:	4610      	moveq	r0, r2
   8585c:	bd30      	pop	{r4, r5, pc}
   8585e:	ea91 0f03 	teq	r1, r3
   85862:	bf1e      	ittt	ne
   85864:	2100      	movne	r1, #0
   85866:	2000      	movne	r0, #0
   85868:	bd30      	popne	{r4, r5, pc}
   8586a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8586e:	d105      	bne.n	8587c <__adddf3+0x230>
   85870:	0040      	lsls	r0, r0, #1
   85872:	4149      	adcs	r1, r1
   85874:	bf28      	it	cs
   85876:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   8587a:	bd30      	pop	{r4, r5, pc}
   8587c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   85880:	bf3c      	itt	cc
   85882:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   85886:	bd30      	popcc	{r4, r5, pc}
   85888:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8588c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   85890:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85894:	f04f 0000 	mov.w	r0, #0
   85898:	bd30      	pop	{r4, r5, pc}
   8589a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8589e:	bf1a      	itte	ne
   858a0:	4619      	movne	r1, r3
   858a2:	4610      	movne	r0, r2
   858a4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   858a8:	bf1c      	itt	ne
   858aa:	460b      	movne	r3, r1
   858ac:	4602      	movne	r2, r0
   858ae:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   858b2:	bf06      	itte	eq
   858b4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   858b8:	ea91 0f03 	teqeq	r1, r3
   858bc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   858c0:	bd30      	pop	{r4, r5, pc}
   858c2:	bf00      	nop

000858c4 <__aeabi_ui2d>:
   858c4:	f090 0f00 	teq	r0, #0
   858c8:	bf04      	itt	eq
   858ca:	2100      	moveq	r1, #0
   858cc:	4770      	bxeq	lr
   858ce:	b530      	push	{r4, r5, lr}
   858d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   858d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   858d8:	f04f 0500 	mov.w	r5, #0
   858dc:	f04f 0100 	mov.w	r1, #0
   858e0:	e750      	b.n	85784 <__adddf3+0x138>
   858e2:	bf00      	nop

000858e4 <__aeabi_i2d>:
   858e4:	f090 0f00 	teq	r0, #0
   858e8:	bf04      	itt	eq
   858ea:	2100      	moveq	r1, #0
   858ec:	4770      	bxeq	lr
   858ee:	b530      	push	{r4, r5, lr}
   858f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   858f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   858f8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   858fc:	bf48      	it	mi
   858fe:	4240      	negmi	r0, r0
   85900:	f04f 0100 	mov.w	r1, #0
   85904:	e73e      	b.n	85784 <__adddf3+0x138>
   85906:	bf00      	nop

00085908 <__aeabi_f2d>:
   85908:	0042      	lsls	r2, r0, #1
   8590a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8590e:	ea4f 0131 	mov.w	r1, r1, rrx
   85912:	ea4f 7002 	mov.w	r0, r2, lsl #28
   85916:	bf1f      	itttt	ne
   85918:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   8591c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85920:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   85924:	4770      	bxne	lr
   85926:	f092 0f00 	teq	r2, #0
   8592a:	bf14      	ite	ne
   8592c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85930:	4770      	bxeq	lr
   85932:	b530      	push	{r4, r5, lr}
   85934:	f44f 7460 	mov.w	r4, #896	; 0x380
   85938:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8593c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85940:	e720      	b.n	85784 <__adddf3+0x138>
   85942:	bf00      	nop

00085944 <__aeabi_ul2d>:
   85944:	ea50 0201 	orrs.w	r2, r0, r1
   85948:	bf08      	it	eq
   8594a:	4770      	bxeq	lr
   8594c:	b530      	push	{r4, r5, lr}
   8594e:	f04f 0500 	mov.w	r5, #0
   85952:	e00a      	b.n	8596a <__aeabi_l2d+0x16>

00085954 <__aeabi_l2d>:
   85954:	ea50 0201 	orrs.w	r2, r0, r1
   85958:	bf08      	it	eq
   8595a:	4770      	bxeq	lr
   8595c:	b530      	push	{r4, r5, lr}
   8595e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   85962:	d502      	bpl.n	8596a <__aeabi_l2d+0x16>
   85964:	4240      	negs	r0, r0
   85966:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8596a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8596e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85972:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   85976:	f43f aedc 	beq.w	85732 <__adddf3+0xe6>
   8597a:	f04f 0203 	mov.w	r2, #3
   8597e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85982:	bf18      	it	ne
   85984:	3203      	addne	r2, #3
   85986:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8598a:	bf18      	it	ne
   8598c:	3203      	addne	r2, #3
   8598e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   85992:	f1c2 0320 	rsb	r3, r2, #32
   85996:	fa00 fc03 	lsl.w	ip, r0, r3
   8599a:	fa20 f002 	lsr.w	r0, r0, r2
   8599e:	fa01 fe03 	lsl.w	lr, r1, r3
   859a2:	ea40 000e 	orr.w	r0, r0, lr
   859a6:	fa21 f102 	lsr.w	r1, r1, r2
   859aa:	4414      	add	r4, r2
   859ac:	e6c1      	b.n	85732 <__adddf3+0xe6>
   859ae:	bf00      	nop

000859b0 <__aeabi_dmul>:
   859b0:	b570      	push	{r4, r5, r6, lr}
   859b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   859b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   859ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   859be:	bf1d      	ittte	ne
   859c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   859c4:	ea94 0f0c 	teqne	r4, ip
   859c8:	ea95 0f0c 	teqne	r5, ip
   859cc:	f000 f8de 	bleq	85b8c <__aeabi_dmul+0x1dc>
   859d0:	442c      	add	r4, r5
   859d2:	ea81 0603 	eor.w	r6, r1, r3
   859d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   859da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   859de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   859e2:	bf18      	it	ne
   859e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   859e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   859ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   859f0:	d038      	beq.n	85a64 <__aeabi_dmul+0xb4>
   859f2:	fba0 ce02 	umull	ip, lr, r0, r2
   859f6:	f04f 0500 	mov.w	r5, #0
   859fa:	fbe1 e502 	umlal	lr, r5, r1, r2
   859fe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   85a02:	fbe0 e503 	umlal	lr, r5, r0, r3
   85a06:	f04f 0600 	mov.w	r6, #0
   85a0a:	fbe1 5603 	umlal	r5, r6, r1, r3
   85a0e:	f09c 0f00 	teq	ip, #0
   85a12:	bf18      	it	ne
   85a14:	f04e 0e01 	orrne.w	lr, lr, #1
   85a18:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85a1c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85a20:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   85a24:	d204      	bcs.n	85a30 <__aeabi_dmul+0x80>
   85a26:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85a2a:	416d      	adcs	r5, r5
   85a2c:	eb46 0606 	adc.w	r6, r6, r6
   85a30:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   85a34:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85a38:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85a3c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85a40:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   85a44:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85a48:	bf88      	it	hi
   85a4a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85a4e:	d81e      	bhi.n	85a8e <__aeabi_dmul+0xde>
   85a50:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   85a54:	bf08      	it	eq
   85a56:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85a5a:	f150 0000 	adcs.w	r0, r0, #0
   85a5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85a62:	bd70      	pop	{r4, r5, r6, pc}
   85a64:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85a68:	ea46 0101 	orr.w	r1, r6, r1
   85a6c:	ea40 0002 	orr.w	r0, r0, r2
   85a70:	ea81 0103 	eor.w	r1, r1, r3
   85a74:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85a78:	bfc2      	ittt	gt
   85a7a:	ebd4 050c 	rsbsgt	r5, r4, ip
   85a7e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85a82:	bd70      	popgt	{r4, r5, r6, pc}
   85a84:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85a88:	f04f 0e00 	mov.w	lr, #0
   85a8c:	3c01      	subs	r4, #1
   85a8e:	f300 80ab 	bgt.w	85be8 <__aeabi_dmul+0x238>
   85a92:	f114 0f36 	cmn.w	r4, #54	; 0x36
   85a96:	bfde      	ittt	le
   85a98:	2000      	movle	r0, #0
   85a9a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   85a9e:	bd70      	pople	{r4, r5, r6, pc}
   85aa0:	f1c4 0400 	rsb	r4, r4, #0
   85aa4:	3c20      	subs	r4, #32
   85aa6:	da35      	bge.n	85b14 <__aeabi_dmul+0x164>
   85aa8:	340c      	adds	r4, #12
   85aaa:	dc1b      	bgt.n	85ae4 <__aeabi_dmul+0x134>
   85aac:	f104 0414 	add.w	r4, r4, #20
   85ab0:	f1c4 0520 	rsb	r5, r4, #32
   85ab4:	fa00 f305 	lsl.w	r3, r0, r5
   85ab8:	fa20 f004 	lsr.w	r0, r0, r4
   85abc:	fa01 f205 	lsl.w	r2, r1, r5
   85ac0:	ea40 0002 	orr.w	r0, r0, r2
   85ac4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85ac8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85acc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85ad0:	fa21 f604 	lsr.w	r6, r1, r4
   85ad4:	eb42 0106 	adc.w	r1, r2, r6
   85ad8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85adc:	bf08      	it	eq
   85ade:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85ae2:	bd70      	pop	{r4, r5, r6, pc}
   85ae4:	f1c4 040c 	rsb	r4, r4, #12
   85ae8:	f1c4 0520 	rsb	r5, r4, #32
   85aec:	fa00 f304 	lsl.w	r3, r0, r4
   85af0:	fa20 f005 	lsr.w	r0, r0, r5
   85af4:	fa01 f204 	lsl.w	r2, r1, r4
   85af8:	ea40 0002 	orr.w	r0, r0, r2
   85afc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85b00:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85b04:	f141 0100 	adc.w	r1, r1, #0
   85b08:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85b0c:	bf08      	it	eq
   85b0e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85b12:	bd70      	pop	{r4, r5, r6, pc}
   85b14:	f1c4 0520 	rsb	r5, r4, #32
   85b18:	fa00 f205 	lsl.w	r2, r0, r5
   85b1c:	ea4e 0e02 	orr.w	lr, lr, r2
   85b20:	fa20 f304 	lsr.w	r3, r0, r4
   85b24:	fa01 f205 	lsl.w	r2, r1, r5
   85b28:	ea43 0302 	orr.w	r3, r3, r2
   85b2c:	fa21 f004 	lsr.w	r0, r1, r4
   85b30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85b34:	fa21 f204 	lsr.w	r2, r1, r4
   85b38:	ea20 0002 	bic.w	r0, r0, r2
   85b3c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85b40:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85b44:	bf08      	it	eq
   85b46:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85b4a:	bd70      	pop	{r4, r5, r6, pc}
   85b4c:	f094 0f00 	teq	r4, #0
   85b50:	d10f      	bne.n	85b72 <__aeabi_dmul+0x1c2>
   85b52:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   85b56:	0040      	lsls	r0, r0, #1
   85b58:	eb41 0101 	adc.w	r1, r1, r1
   85b5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85b60:	bf08      	it	eq
   85b62:	3c01      	subeq	r4, #1
   85b64:	d0f7      	beq.n	85b56 <__aeabi_dmul+0x1a6>
   85b66:	ea41 0106 	orr.w	r1, r1, r6
   85b6a:	f095 0f00 	teq	r5, #0
   85b6e:	bf18      	it	ne
   85b70:	4770      	bxne	lr
   85b72:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85b76:	0052      	lsls	r2, r2, #1
   85b78:	eb43 0303 	adc.w	r3, r3, r3
   85b7c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85b80:	bf08      	it	eq
   85b82:	3d01      	subeq	r5, #1
   85b84:	d0f7      	beq.n	85b76 <__aeabi_dmul+0x1c6>
   85b86:	ea43 0306 	orr.w	r3, r3, r6
   85b8a:	4770      	bx	lr
   85b8c:	ea94 0f0c 	teq	r4, ip
   85b90:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85b94:	bf18      	it	ne
   85b96:	ea95 0f0c 	teqne	r5, ip
   85b9a:	d00c      	beq.n	85bb6 <__aeabi_dmul+0x206>
   85b9c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85ba0:	bf18      	it	ne
   85ba2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85ba6:	d1d1      	bne.n	85b4c <__aeabi_dmul+0x19c>
   85ba8:	ea81 0103 	eor.w	r1, r1, r3
   85bac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85bb0:	f04f 0000 	mov.w	r0, #0
   85bb4:	bd70      	pop	{r4, r5, r6, pc}
   85bb6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85bba:	bf06      	itte	eq
   85bbc:	4610      	moveq	r0, r2
   85bbe:	4619      	moveq	r1, r3
   85bc0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85bc4:	d019      	beq.n	85bfa <__aeabi_dmul+0x24a>
   85bc6:	ea94 0f0c 	teq	r4, ip
   85bca:	d102      	bne.n	85bd2 <__aeabi_dmul+0x222>
   85bcc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85bd0:	d113      	bne.n	85bfa <__aeabi_dmul+0x24a>
   85bd2:	ea95 0f0c 	teq	r5, ip
   85bd6:	d105      	bne.n	85be4 <__aeabi_dmul+0x234>
   85bd8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85bdc:	bf1c      	itt	ne
   85bde:	4610      	movne	r0, r2
   85be0:	4619      	movne	r1, r3
   85be2:	d10a      	bne.n	85bfa <__aeabi_dmul+0x24a>
   85be4:	ea81 0103 	eor.w	r1, r1, r3
   85be8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85bec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85bf0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85bf4:	f04f 0000 	mov.w	r0, #0
   85bf8:	bd70      	pop	{r4, r5, r6, pc}
   85bfa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85bfe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   85c02:	bd70      	pop	{r4, r5, r6, pc}

00085c04 <__aeabi_ddiv>:
   85c04:	b570      	push	{r4, r5, r6, lr}
   85c06:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85c0a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85c0e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85c12:	bf1d      	ittte	ne
   85c14:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85c18:	ea94 0f0c 	teqne	r4, ip
   85c1c:	ea95 0f0c 	teqne	r5, ip
   85c20:	f000 f8a7 	bleq	85d72 <__aeabi_ddiv+0x16e>
   85c24:	eba4 0405 	sub.w	r4, r4, r5
   85c28:	ea81 0e03 	eor.w	lr, r1, r3
   85c2c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85c30:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85c34:	f000 8088 	beq.w	85d48 <__aeabi_ddiv+0x144>
   85c38:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85c3c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85c40:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   85c44:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85c48:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85c4c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85c50:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   85c54:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85c58:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85c5c:	429d      	cmp	r5, r3
   85c5e:	bf08      	it	eq
   85c60:	4296      	cmpeq	r6, r2
   85c62:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85c66:	f504 7440 	add.w	r4, r4, #768	; 0x300
   85c6a:	d202      	bcs.n	85c72 <__aeabi_ddiv+0x6e>
   85c6c:	085b      	lsrs	r3, r3, #1
   85c6e:	ea4f 0232 	mov.w	r2, r2, rrx
   85c72:	1ab6      	subs	r6, r6, r2
   85c74:	eb65 0503 	sbc.w	r5, r5, r3
   85c78:	085b      	lsrs	r3, r3, #1
   85c7a:	ea4f 0232 	mov.w	r2, r2, rrx
   85c7e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85c82:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85c86:	ebb6 0e02 	subs.w	lr, r6, r2
   85c8a:	eb75 0e03 	sbcs.w	lr, r5, r3
   85c8e:	bf22      	ittt	cs
   85c90:	1ab6      	subcs	r6, r6, r2
   85c92:	4675      	movcs	r5, lr
   85c94:	ea40 000c 	orrcs.w	r0, r0, ip
   85c98:	085b      	lsrs	r3, r3, #1
   85c9a:	ea4f 0232 	mov.w	r2, r2, rrx
   85c9e:	ebb6 0e02 	subs.w	lr, r6, r2
   85ca2:	eb75 0e03 	sbcs.w	lr, r5, r3
   85ca6:	bf22      	ittt	cs
   85ca8:	1ab6      	subcs	r6, r6, r2
   85caa:	4675      	movcs	r5, lr
   85cac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85cb0:	085b      	lsrs	r3, r3, #1
   85cb2:	ea4f 0232 	mov.w	r2, r2, rrx
   85cb6:	ebb6 0e02 	subs.w	lr, r6, r2
   85cba:	eb75 0e03 	sbcs.w	lr, r5, r3
   85cbe:	bf22      	ittt	cs
   85cc0:	1ab6      	subcs	r6, r6, r2
   85cc2:	4675      	movcs	r5, lr
   85cc4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85cc8:	085b      	lsrs	r3, r3, #1
   85cca:	ea4f 0232 	mov.w	r2, r2, rrx
   85cce:	ebb6 0e02 	subs.w	lr, r6, r2
   85cd2:	eb75 0e03 	sbcs.w	lr, r5, r3
   85cd6:	bf22      	ittt	cs
   85cd8:	1ab6      	subcs	r6, r6, r2
   85cda:	4675      	movcs	r5, lr
   85cdc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85ce0:	ea55 0e06 	orrs.w	lr, r5, r6
   85ce4:	d018      	beq.n	85d18 <__aeabi_ddiv+0x114>
   85ce6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85cea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85cee:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85cf2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85cf6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85cfa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85cfe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   85d02:	d1c0      	bne.n	85c86 <__aeabi_ddiv+0x82>
   85d04:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85d08:	d10b      	bne.n	85d22 <__aeabi_ddiv+0x11e>
   85d0a:	ea41 0100 	orr.w	r1, r1, r0
   85d0e:	f04f 0000 	mov.w	r0, #0
   85d12:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   85d16:	e7b6      	b.n	85c86 <__aeabi_ddiv+0x82>
   85d18:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85d1c:	bf04      	itt	eq
   85d1e:	4301      	orreq	r1, r0
   85d20:	2000      	moveq	r0, #0
   85d22:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85d26:	bf88      	it	hi
   85d28:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85d2c:	f63f aeaf 	bhi.w	85a8e <__aeabi_dmul+0xde>
   85d30:	ebb5 0c03 	subs.w	ip, r5, r3
   85d34:	bf04      	itt	eq
   85d36:	ebb6 0c02 	subseq.w	ip, r6, r2
   85d3a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85d3e:	f150 0000 	adcs.w	r0, r0, #0
   85d42:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85d46:	bd70      	pop	{r4, r5, r6, pc}
   85d48:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   85d4c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85d50:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85d54:	bfc2      	ittt	gt
   85d56:	ebd4 050c 	rsbsgt	r5, r4, ip
   85d5a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85d5e:	bd70      	popgt	{r4, r5, r6, pc}
   85d60:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85d64:	f04f 0e00 	mov.w	lr, #0
   85d68:	3c01      	subs	r4, #1
   85d6a:	e690      	b.n	85a8e <__aeabi_dmul+0xde>
   85d6c:	ea45 0e06 	orr.w	lr, r5, r6
   85d70:	e68d      	b.n	85a8e <__aeabi_dmul+0xde>
   85d72:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85d76:	ea94 0f0c 	teq	r4, ip
   85d7a:	bf08      	it	eq
   85d7c:	ea95 0f0c 	teqeq	r5, ip
   85d80:	f43f af3b 	beq.w	85bfa <__aeabi_dmul+0x24a>
   85d84:	ea94 0f0c 	teq	r4, ip
   85d88:	d10a      	bne.n	85da0 <__aeabi_ddiv+0x19c>
   85d8a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85d8e:	f47f af34 	bne.w	85bfa <__aeabi_dmul+0x24a>
   85d92:	ea95 0f0c 	teq	r5, ip
   85d96:	f47f af25 	bne.w	85be4 <__aeabi_dmul+0x234>
   85d9a:	4610      	mov	r0, r2
   85d9c:	4619      	mov	r1, r3
   85d9e:	e72c      	b.n	85bfa <__aeabi_dmul+0x24a>
   85da0:	ea95 0f0c 	teq	r5, ip
   85da4:	d106      	bne.n	85db4 <__aeabi_ddiv+0x1b0>
   85da6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85daa:	f43f aefd 	beq.w	85ba8 <__aeabi_dmul+0x1f8>
   85dae:	4610      	mov	r0, r2
   85db0:	4619      	mov	r1, r3
   85db2:	e722      	b.n	85bfa <__aeabi_dmul+0x24a>
   85db4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85db8:	bf18      	it	ne
   85dba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85dbe:	f47f aec5 	bne.w	85b4c <__aeabi_dmul+0x19c>
   85dc2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85dc6:	f47f af0d 	bne.w	85be4 <__aeabi_dmul+0x234>
   85dca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85dce:	f47f aeeb 	bne.w	85ba8 <__aeabi_dmul+0x1f8>
   85dd2:	e712      	b.n	85bfa <__aeabi_dmul+0x24a>

00085dd4 <__gedf2>:
   85dd4:	f04f 3cff 	mov.w	ip, #4294967295
   85dd8:	e006      	b.n	85de8 <__cmpdf2+0x4>
   85dda:	bf00      	nop

00085ddc <__ledf2>:
   85ddc:	f04f 0c01 	mov.w	ip, #1
   85de0:	e002      	b.n	85de8 <__cmpdf2+0x4>
   85de2:	bf00      	nop

00085de4 <__cmpdf2>:
   85de4:	f04f 0c01 	mov.w	ip, #1
   85de8:	f84d cd04 	str.w	ip, [sp, #-4]!
   85dec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85df0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85df4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85df8:	bf18      	it	ne
   85dfa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85dfe:	d01b      	beq.n	85e38 <__cmpdf2+0x54>
   85e00:	b001      	add	sp, #4
   85e02:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   85e06:	bf0c      	ite	eq
   85e08:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85e0c:	ea91 0f03 	teqne	r1, r3
   85e10:	bf02      	ittt	eq
   85e12:	ea90 0f02 	teqeq	r0, r2
   85e16:	2000      	moveq	r0, #0
   85e18:	4770      	bxeq	lr
   85e1a:	f110 0f00 	cmn.w	r0, #0
   85e1e:	ea91 0f03 	teq	r1, r3
   85e22:	bf58      	it	pl
   85e24:	4299      	cmppl	r1, r3
   85e26:	bf08      	it	eq
   85e28:	4290      	cmpeq	r0, r2
   85e2a:	bf2c      	ite	cs
   85e2c:	17d8      	asrcs	r0, r3, #31
   85e2e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   85e32:	f040 0001 	orr.w	r0, r0, #1
   85e36:	4770      	bx	lr
   85e38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85e3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85e40:	d102      	bne.n	85e48 <__cmpdf2+0x64>
   85e42:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85e46:	d107      	bne.n	85e58 <__cmpdf2+0x74>
   85e48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85e4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85e50:	d1d6      	bne.n	85e00 <__cmpdf2+0x1c>
   85e52:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85e56:	d0d3      	beq.n	85e00 <__cmpdf2+0x1c>
   85e58:	f85d 0b04 	ldr.w	r0, [sp], #4
   85e5c:	4770      	bx	lr
   85e5e:	bf00      	nop

00085e60 <__aeabi_cdrcmple>:
   85e60:	4684      	mov	ip, r0
   85e62:	4610      	mov	r0, r2
   85e64:	4662      	mov	r2, ip
   85e66:	468c      	mov	ip, r1
   85e68:	4619      	mov	r1, r3
   85e6a:	4663      	mov	r3, ip
   85e6c:	e000      	b.n	85e70 <__aeabi_cdcmpeq>
   85e6e:	bf00      	nop

00085e70 <__aeabi_cdcmpeq>:
   85e70:	b501      	push	{r0, lr}
   85e72:	f7ff ffb7 	bl	85de4 <__cmpdf2>
   85e76:	2800      	cmp	r0, #0
   85e78:	bf48      	it	mi
   85e7a:	f110 0f00 	cmnmi.w	r0, #0
   85e7e:	bd01      	pop	{r0, pc}

00085e80 <__aeabi_dcmpeq>:
   85e80:	f84d ed08 	str.w	lr, [sp, #-8]!
   85e84:	f7ff fff4 	bl	85e70 <__aeabi_cdcmpeq>
   85e88:	bf0c      	ite	eq
   85e8a:	2001      	moveq	r0, #1
   85e8c:	2000      	movne	r0, #0
   85e8e:	f85d fb08 	ldr.w	pc, [sp], #8
   85e92:	bf00      	nop

00085e94 <__aeabi_dcmplt>:
   85e94:	f84d ed08 	str.w	lr, [sp, #-8]!
   85e98:	f7ff ffea 	bl	85e70 <__aeabi_cdcmpeq>
   85e9c:	bf34      	ite	cc
   85e9e:	2001      	movcc	r0, #1
   85ea0:	2000      	movcs	r0, #0
   85ea2:	f85d fb08 	ldr.w	pc, [sp], #8
   85ea6:	bf00      	nop

00085ea8 <__aeabi_dcmple>:
   85ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
   85eac:	f7ff ffe0 	bl	85e70 <__aeabi_cdcmpeq>
   85eb0:	bf94      	ite	ls
   85eb2:	2001      	movls	r0, #1
   85eb4:	2000      	movhi	r0, #0
   85eb6:	f85d fb08 	ldr.w	pc, [sp], #8
   85eba:	bf00      	nop

00085ebc <__aeabi_dcmpge>:
   85ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
   85ec0:	f7ff ffce 	bl	85e60 <__aeabi_cdrcmple>
   85ec4:	bf94      	ite	ls
   85ec6:	2001      	movls	r0, #1
   85ec8:	2000      	movhi	r0, #0
   85eca:	f85d fb08 	ldr.w	pc, [sp], #8
   85ece:	bf00      	nop

00085ed0 <__aeabi_dcmpgt>:
   85ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
   85ed4:	f7ff ffc4 	bl	85e60 <__aeabi_cdrcmple>
   85ed8:	bf34      	ite	cc
   85eda:	2001      	movcc	r0, #1
   85edc:	2000      	movcs	r0, #0
   85ede:	f85d fb08 	ldr.w	pc, [sp], #8
   85ee2:	bf00      	nop

00085ee4 <__aeabi_dcmpun>:
   85ee4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85ee8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85eec:	d102      	bne.n	85ef4 <__aeabi_dcmpun+0x10>
   85eee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85ef2:	d10a      	bne.n	85f0a <__aeabi_dcmpun+0x26>
   85ef4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85ef8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85efc:	d102      	bne.n	85f04 <__aeabi_dcmpun+0x20>
   85efe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85f02:	d102      	bne.n	85f0a <__aeabi_dcmpun+0x26>
   85f04:	f04f 0000 	mov.w	r0, #0
   85f08:	4770      	bx	lr
   85f0a:	f04f 0001 	mov.w	r0, #1
   85f0e:	4770      	bx	lr

00085f10 <__aeabi_d2iz>:
   85f10:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85f14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85f18:	d215      	bcs.n	85f46 <__aeabi_d2iz+0x36>
   85f1a:	d511      	bpl.n	85f40 <__aeabi_d2iz+0x30>
   85f1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85f20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85f24:	d912      	bls.n	85f4c <__aeabi_d2iz+0x3c>
   85f26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85f2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   85f2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   85f32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85f36:	fa23 f002 	lsr.w	r0, r3, r2
   85f3a:	bf18      	it	ne
   85f3c:	4240      	negne	r0, r0
   85f3e:	4770      	bx	lr
   85f40:	f04f 0000 	mov.w	r0, #0
   85f44:	4770      	bx	lr
   85f46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85f4a:	d105      	bne.n	85f58 <__aeabi_d2iz+0x48>
   85f4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   85f50:	bf08      	it	eq
   85f52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85f56:	4770      	bx	lr
   85f58:	f04f 0000 	mov.w	r0, #0
   85f5c:	4770      	bx	lr
   85f5e:	bf00      	nop

00085f60 <__aeabi_uldivmod>:
   85f60:	b953      	cbnz	r3, 85f78 <__aeabi_uldivmod+0x18>
   85f62:	b94a      	cbnz	r2, 85f78 <__aeabi_uldivmod+0x18>
   85f64:	2900      	cmp	r1, #0
   85f66:	bf08      	it	eq
   85f68:	2800      	cmpeq	r0, #0
   85f6a:	bf1c      	itt	ne
   85f6c:	f04f 31ff 	movne.w	r1, #4294967295
   85f70:	f04f 30ff 	movne.w	r0, #4294967295
   85f74:	f000 b97a 	b.w	8626c <__aeabi_idiv0>
   85f78:	f1ad 0c08 	sub.w	ip, sp, #8
   85f7c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   85f80:	f000 f806 	bl	85f90 <__udivmoddi4>
   85f84:	f8dd e004 	ldr.w	lr, [sp, #4]
   85f88:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   85f8c:	b004      	add	sp, #16
   85f8e:	4770      	bx	lr

00085f90 <__udivmoddi4>:
   85f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   85f94:	468c      	mov	ip, r1
   85f96:	460e      	mov	r6, r1
   85f98:	4604      	mov	r4, r0
   85f9a:	9d08      	ldr	r5, [sp, #32]
   85f9c:	2b00      	cmp	r3, #0
   85f9e:	d150      	bne.n	86042 <__udivmoddi4+0xb2>
   85fa0:	428a      	cmp	r2, r1
   85fa2:	4617      	mov	r7, r2
   85fa4:	d96c      	bls.n	86080 <__udivmoddi4+0xf0>
   85fa6:	fab2 fe82 	clz	lr, r2
   85faa:	f1be 0f00 	cmp.w	lr, #0
   85fae:	d00b      	beq.n	85fc8 <__udivmoddi4+0x38>
   85fb0:	f1ce 0c20 	rsb	ip, lr, #32
   85fb4:	fa01 f60e 	lsl.w	r6, r1, lr
   85fb8:	fa20 fc0c 	lsr.w	ip, r0, ip
   85fbc:	fa02 f70e 	lsl.w	r7, r2, lr
   85fc0:	ea4c 0c06 	orr.w	ip, ip, r6
   85fc4:	fa00 f40e 	lsl.w	r4, r0, lr
   85fc8:	0c3a      	lsrs	r2, r7, #16
   85fca:	fbbc f9f2 	udiv	r9, ip, r2
   85fce:	b2bb      	uxth	r3, r7
   85fd0:	fb02 cc19 	mls	ip, r2, r9, ip
   85fd4:	fb09 fa03 	mul.w	sl, r9, r3
   85fd8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85fdc:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   85fe0:	45b2      	cmp	sl, r6
   85fe2:	d90a      	bls.n	85ffa <__udivmoddi4+0x6a>
   85fe4:	19f6      	adds	r6, r6, r7
   85fe6:	f109 31ff 	add.w	r1, r9, #4294967295
   85fea:	f080 8125 	bcs.w	86238 <__udivmoddi4+0x2a8>
   85fee:	45b2      	cmp	sl, r6
   85ff0:	f240 8122 	bls.w	86238 <__udivmoddi4+0x2a8>
   85ff4:	f1a9 0902 	sub.w	r9, r9, #2
   85ff8:	443e      	add	r6, r7
   85ffa:	eba6 060a 	sub.w	r6, r6, sl
   85ffe:	fbb6 f0f2 	udiv	r0, r6, r2
   86002:	fb02 6610 	mls	r6, r2, r0, r6
   86006:	fb00 f303 	mul.w	r3, r0, r3
   8600a:	b2a4      	uxth	r4, r4
   8600c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   86010:	42a3      	cmp	r3, r4
   86012:	d909      	bls.n	86028 <__udivmoddi4+0x98>
   86014:	19e4      	adds	r4, r4, r7
   86016:	f100 32ff 	add.w	r2, r0, #4294967295
   8601a:	f080 810b 	bcs.w	86234 <__udivmoddi4+0x2a4>
   8601e:	42a3      	cmp	r3, r4
   86020:	f240 8108 	bls.w	86234 <__udivmoddi4+0x2a4>
   86024:	3802      	subs	r0, #2
   86026:	443c      	add	r4, r7
   86028:	2100      	movs	r1, #0
   8602a:	1ae4      	subs	r4, r4, r3
   8602c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86030:	2d00      	cmp	r5, #0
   86032:	d062      	beq.n	860fa <__udivmoddi4+0x16a>
   86034:	2300      	movs	r3, #0
   86036:	fa24 f40e 	lsr.w	r4, r4, lr
   8603a:	602c      	str	r4, [r5, #0]
   8603c:	606b      	str	r3, [r5, #4]
   8603e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86042:	428b      	cmp	r3, r1
   86044:	d907      	bls.n	86056 <__udivmoddi4+0xc6>
   86046:	2d00      	cmp	r5, #0
   86048:	d055      	beq.n	860f6 <__udivmoddi4+0x166>
   8604a:	2100      	movs	r1, #0
   8604c:	e885 0041 	stmia.w	r5, {r0, r6}
   86050:	4608      	mov	r0, r1
   86052:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86056:	fab3 f183 	clz	r1, r3
   8605a:	2900      	cmp	r1, #0
   8605c:	f040 808f 	bne.w	8617e <__udivmoddi4+0x1ee>
   86060:	42b3      	cmp	r3, r6
   86062:	d302      	bcc.n	8606a <__udivmoddi4+0xda>
   86064:	4282      	cmp	r2, r0
   86066:	f200 80fc 	bhi.w	86262 <__udivmoddi4+0x2d2>
   8606a:	1a84      	subs	r4, r0, r2
   8606c:	eb66 0603 	sbc.w	r6, r6, r3
   86070:	2001      	movs	r0, #1
   86072:	46b4      	mov	ip, r6
   86074:	2d00      	cmp	r5, #0
   86076:	d040      	beq.n	860fa <__udivmoddi4+0x16a>
   86078:	e885 1010 	stmia.w	r5, {r4, ip}
   8607c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86080:	b912      	cbnz	r2, 86088 <__udivmoddi4+0xf8>
   86082:	2701      	movs	r7, #1
   86084:	fbb7 f7f2 	udiv	r7, r7, r2
   86088:	fab7 fe87 	clz	lr, r7
   8608c:	f1be 0f00 	cmp.w	lr, #0
   86090:	d135      	bne.n	860fe <__udivmoddi4+0x16e>
   86092:	2101      	movs	r1, #1
   86094:	1bf6      	subs	r6, r6, r7
   86096:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8609a:	fa1f f887 	uxth.w	r8, r7
   8609e:	fbb6 f2fc 	udiv	r2, r6, ip
   860a2:	fb0c 6612 	mls	r6, ip, r2, r6
   860a6:	fb08 f002 	mul.w	r0, r8, r2
   860aa:	0c23      	lsrs	r3, r4, #16
   860ac:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   860b0:	42b0      	cmp	r0, r6
   860b2:	d907      	bls.n	860c4 <__udivmoddi4+0x134>
   860b4:	19f6      	adds	r6, r6, r7
   860b6:	f102 33ff 	add.w	r3, r2, #4294967295
   860ba:	d202      	bcs.n	860c2 <__udivmoddi4+0x132>
   860bc:	42b0      	cmp	r0, r6
   860be:	f200 80d2 	bhi.w	86266 <__udivmoddi4+0x2d6>
   860c2:	461a      	mov	r2, r3
   860c4:	1a36      	subs	r6, r6, r0
   860c6:	fbb6 f0fc 	udiv	r0, r6, ip
   860ca:	fb0c 6610 	mls	r6, ip, r0, r6
   860ce:	fb08 f800 	mul.w	r8, r8, r0
   860d2:	b2a3      	uxth	r3, r4
   860d4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   860d8:	45a0      	cmp	r8, r4
   860da:	d907      	bls.n	860ec <__udivmoddi4+0x15c>
   860dc:	19e4      	adds	r4, r4, r7
   860de:	f100 33ff 	add.w	r3, r0, #4294967295
   860e2:	d202      	bcs.n	860ea <__udivmoddi4+0x15a>
   860e4:	45a0      	cmp	r8, r4
   860e6:	f200 80b9 	bhi.w	8625c <__udivmoddi4+0x2cc>
   860ea:	4618      	mov	r0, r3
   860ec:	eba4 0408 	sub.w	r4, r4, r8
   860f0:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   860f4:	e79c      	b.n	86030 <__udivmoddi4+0xa0>
   860f6:	4629      	mov	r1, r5
   860f8:	4628      	mov	r0, r5
   860fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   860fe:	fa07 f70e 	lsl.w	r7, r7, lr
   86102:	f1ce 0320 	rsb	r3, lr, #32
   86106:	fa26 f203 	lsr.w	r2, r6, r3
   8610a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8610e:	fbb2 f1fc 	udiv	r1, r2, ip
   86112:	fa1f f887 	uxth.w	r8, r7
   86116:	fb0c 2211 	mls	r2, ip, r1, r2
   8611a:	fa06 f60e 	lsl.w	r6, r6, lr
   8611e:	fa20 f303 	lsr.w	r3, r0, r3
   86122:	fb01 f908 	mul.w	r9, r1, r8
   86126:	4333      	orrs	r3, r6
   86128:	0c1e      	lsrs	r6, r3, #16
   8612a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8612e:	45b1      	cmp	r9, r6
   86130:	fa00 f40e 	lsl.w	r4, r0, lr
   86134:	d909      	bls.n	8614a <__udivmoddi4+0x1ba>
   86136:	19f6      	adds	r6, r6, r7
   86138:	f101 32ff 	add.w	r2, r1, #4294967295
   8613c:	f080 808c 	bcs.w	86258 <__udivmoddi4+0x2c8>
   86140:	45b1      	cmp	r9, r6
   86142:	f240 8089 	bls.w	86258 <__udivmoddi4+0x2c8>
   86146:	3902      	subs	r1, #2
   86148:	443e      	add	r6, r7
   8614a:	eba6 0609 	sub.w	r6, r6, r9
   8614e:	fbb6 f0fc 	udiv	r0, r6, ip
   86152:	fb0c 6210 	mls	r2, ip, r0, r6
   86156:	fb00 f908 	mul.w	r9, r0, r8
   8615a:	b29e      	uxth	r6, r3
   8615c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86160:	45b1      	cmp	r9, r6
   86162:	d907      	bls.n	86174 <__udivmoddi4+0x1e4>
   86164:	19f6      	adds	r6, r6, r7
   86166:	f100 33ff 	add.w	r3, r0, #4294967295
   8616a:	d271      	bcs.n	86250 <__udivmoddi4+0x2c0>
   8616c:	45b1      	cmp	r9, r6
   8616e:	d96f      	bls.n	86250 <__udivmoddi4+0x2c0>
   86170:	3802      	subs	r0, #2
   86172:	443e      	add	r6, r7
   86174:	eba6 0609 	sub.w	r6, r6, r9
   86178:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   8617c:	e78f      	b.n	8609e <__udivmoddi4+0x10e>
   8617e:	f1c1 0720 	rsb	r7, r1, #32
   86182:	fa22 f807 	lsr.w	r8, r2, r7
   86186:	408b      	lsls	r3, r1
   86188:	ea48 0303 	orr.w	r3, r8, r3
   8618c:	fa26 f407 	lsr.w	r4, r6, r7
   86190:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   86194:	fbb4 f9fe 	udiv	r9, r4, lr
   86198:	fa1f fc83 	uxth.w	ip, r3
   8619c:	fb0e 4419 	mls	r4, lr, r9, r4
   861a0:	408e      	lsls	r6, r1
   861a2:	fa20 f807 	lsr.w	r8, r0, r7
   861a6:	fb09 fa0c 	mul.w	sl, r9, ip
   861aa:	ea48 0806 	orr.w	r8, r8, r6
   861ae:	ea4f 4618 	mov.w	r6, r8, lsr #16
   861b2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   861b6:	45a2      	cmp	sl, r4
   861b8:	fa02 f201 	lsl.w	r2, r2, r1
   861bc:	fa00 f601 	lsl.w	r6, r0, r1
   861c0:	d908      	bls.n	861d4 <__udivmoddi4+0x244>
   861c2:	18e4      	adds	r4, r4, r3
   861c4:	f109 30ff 	add.w	r0, r9, #4294967295
   861c8:	d244      	bcs.n	86254 <__udivmoddi4+0x2c4>
   861ca:	45a2      	cmp	sl, r4
   861cc:	d942      	bls.n	86254 <__udivmoddi4+0x2c4>
   861ce:	f1a9 0902 	sub.w	r9, r9, #2
   861d2:	441c      	add	r4, r3
   861d4:	eba4 040a 	sub.w	r4, r4, sl
   861d8:	fbb4 f0fe 	udiv	r0, r4, lr
   861dc:	fb0e 4410 	mls	r4, lr, r0, r4
   861e0:	fb00 fc0c 	mul.w	ip, r0, ip
   861e4:	fa1f f888 	uxth.w	r8, r8
   861e8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   861ec:	45a4      	cmp	ip, r4
   861ee:	d907      	bls.n	86200 <__udivmoddi4+0x270>
   861f0:	18e4      	adds	r4, r4, r3
   861f2:	f100 3eff 	add.w	lr, r0, #4294967295
   861f6:	d229      	bcs.n	8624c <__udivmoddi4+0x2bc>
   861f8:	45a4      	cmp	ip, r4
   861fa:	d927      	bls.n	8624c <__udivmoddi4+0x2bc>
   861fc:	3802      	subs	r0, #2
   861fe:	441c      	add	r4, r3
   86200:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86204:	fba0 8902 	umull	r8, r9, r0, r2
   86208:	eba4 0c0c 	sub.w	ip, r4, ip
   8620c:	45cc      	cmp	ip, r9
   8620e:	46c2      	mov	sl, r8
   86210:	46ce      	mov	lr, r9
   86212:	d315      	bcc.n	86240 <__udivmoddi4+0x2b0>
   86214:	d012      	beq.n	8623c <__udivmoddi4+0x2ac>
   86216:	b155      	cbz	r5, 8622e <__udivmoddi4+0x29e>
   86218:	ebb6 030a 	subs.w	r3, r6, sl
   8621c:	eb6c 060e 	sbc.w	r6, ip, lr
   86220:	fa06 f707 	lsl.w	r7, r6, r7
   86224:	40cb      	lsrs	r3, r1
   86226:	431f      	orrs	r7, r3
   86228:	40ce      	lsrs	r6, r1
   8622a:	602f      	str	r7, [r5, #0]
   8622c:	606e      	str	r6, [r5, #4]
   8622e:	2100      	movs	r1, #0
   86230:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86234:	4610      	mov	r0, r2
   86236:	e6f7      	b.n	86028 <__udivmoddi4+0x98>
   86238:	4689      	mov	r9, r1
   8623a:	e6de      	b.n	85ffa <__udivmoddi4+0x6a>
   8623c:	4546      	cmp	r6, r8
   8623e:	d2ea      	bcs.n	86216 <__udivmoddi4+0x286>
   86240:	ebb8 0a02 	subs.w	sl, r8, r2
   86244:	eb69 0e03 	sbc.w	lr, r9, r3
   86248:	3801      	subs	r0, #1
   8624a:	e7e4      	b.n	86216 <__udivmoddi4+0x286>
   8624c:	4670      	mov	r0, lr
   8624e:	e7d7      	b.n	86200 <__udivmoddi4+0x270>
   86250:	4618      	mov	r0, r3
   86252:	e78f      	b.n	86174 <__udivmoddi4+0x1e4>
   86254:	4681      	mov	r9, r0
   86256:	e7bd      	b.n	861d4 <__udivmoddi4+0x244>
   86258:	4611      	mov	r1, r2
   8625a:	e776      	b.n	8614a <__udivmoddi4+0x1ba>
   8625c:	3802      	subs	r0, #2
   8625e:	443c      	add	r4, r7
   86260:	e744      	b.n	860ec <__udivmoddi4+0x15c>
   86262:	4608      	mov	r0, r1
   86264:	e706      	b.n	86074 <__udivmoddi4+0xe4>
   86266:	3a02      	subs	r2, #2
   86268:	443e      	add	r6, r7
   8626a:	e72b      	b.n	860c4 <__udivmoddi4+0x134>

0008626c <__aeabi_idiv0>:
   8626c:	4770      	bx	lr
   8626e:	bf00      	nop
   86270:	003e0a0d 	.word	0x003e0a0d
   86274:	3e3e0a0d 	.word	0x3e3e0a0d
   86278:	0000003e 	.word	0x0000003e
   8627c:	00000a0d 	.word	0x00000a0d
   86280:	000a0d20 	.word	0x000a0d20
   86284:	6e750a0d 	.word	0x6e750a0d
   86288:	776f6e6b 	.word	0x776f6e6b
   8628c:	6d63206e 	.word	0x6d63206e
   86290:	25203a64 	.word	0x25203a64
   86294:	0d583430 	.word	0x0d583430
   86298:	0000000a 	.word	0x0000000a
   8629c:	6b5b1b0d 	.word	0x6b5b1b0d
   862a0:	3230250d 	.word	0x3230250d
   862a4:	30253a64 	.word	0x30253a64
   862a8:	253a6432 	.word	0x253a6432
   862ac:	00643230 	.word	0x00643230
   862b0:	32302509 	.word	0x32302509
   862b4:	30253a64 	.word	0x30253a64
   862b8:	253a6432 	.word	0x253a6432
   862bc:	3a643230 	.word	0x3a643230
   862c0:	64323025 	.word	0x64323025
   862c4:	00000000 	.word	0x00000000

000862c8 <flashSequ>:
   862c8:	00000032 000001f4 00000032 000004b0     2.......2.......
   862d8:	00000000                                ....

000862dc <_cmdEntries>:
   862dc:	00006cab 00080999 0000aaf6 00080add     .l..............
	...
   862f4:	0d203a20 0000000a 7465274c 64207461      : .....L'etat d
   86304:	616c2065 6f726220 20656863 69617465     e la broche etai
   86314:	61682074 0d207475 0000000a 7465274c     t haut .....L'et
   86324:	64207461 616c2065 6f726220 20656863     at de la broche 
   86334:	69617465 61622074 0a0d2073 00000000     etait bas ......

00086344 <usart_console_settings>:
   86344:	0001c200 000000c0 00000800 00000000     ................
	...

0008635c <flashSequApp>:
   8635c:	00000064 000001f4 00000064 000001f4     d.......d.......
   8636c:	00000064 00000898 00000000 090a0a0d     d...............
   8637c:	454d5441 5441204c 334d4153 54532055     ATMEL ATSAM3U ST
   8638c:	45545241 0a0a0d44 00000000              ARTED.......

00086398 <_global_impure_ptr>:
   86398:	20070548 00464e49 00666e69 004e414e     H.. INF.inf.NAN.
   863a8:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   863b8:	46454443 00000000 33323130 37363534     CDEF....01234567
   863c8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   863d8:	0000296c 00000030                       l)..0...

000863e0 <blanks.7223>:
   863e0:	20202020 20202020 20202020 20202020                     

000863f0 <zeroes.7224>:
   863f0:	30303030 30303030 30303030 30303030     0000000000000000
   86400:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   86410:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00086420 <__mprec_bigtens>:
   86420:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   86430:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   86440:	7f73bf3c 75154fdd                       <.s..O.u

00086448 <__mprec_tens>:
   86448:	00000000 3ff00000 00000000 40240000     .......?......$@
   86458:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   86468:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   86478:	00000000 412e8480 00000000 416312d0     .......A......cA
   86488:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   86498:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   864a8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   864b8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   864c8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   864d8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   864e8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   864f8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   86508:	79d99db4 44ea7843                       ...yCx.D

00086510 <p05.6055>:
   86510:	00000005 00000019 0000007d              ........}...

0008651c <_ctype_>:
   8651c:	20202000 20202020 28282020 20282828     .         ((((( 
   8652c:	20202020 20202020 20202020 20202020                     
   8653c:	10108820 10101010 10101010 10101010      ...............
   8654c:	04040410 04040404 10040404 10101010     ................
   8655c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8656c:	01010101 01010101 01010101 10101010     ................
   8657c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8658c:	02020202 02020202 02020202 10101010     ................
   8659c:	00000020 00000000 00000000 00000000      ...............
	...

00086620 <_init>:
   86620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86622:	bf00      	nop
   86624:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86626:	bc08      	pop	{r3}
   86628:	469e      	mov	lr, r3
   8662a:	4770      	bx	lr

0008662c <__init_array_start>:
   8662c:	00083061 	.word	0x00083061

00086630 <__frame_dummy_init_array_entry>:
   86630:	00080119                                ....

00086634 <_fini>:
   86634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86636:	bf00      	nop
   86638:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8663a:	bc08      	pop	{r3}
   8663c:	469e      	mov	lr, r3
   8663e:	4770      	bx	lr

00086640 <__fini_array_start>:
   86640:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	20070540 	.word	0x20070540

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <wCRCTable>:
20070138:	00000000 0000c0c1 0000c181 00000140     ............@...
20070148:	0000c301 000003c0 00000280 0000c241     ............A...
20070158:	0000c601 000006c0 00000780 0000c741     ............A...
20070168:	00000500 0000c5c1 0000c481 00000440     ............@...
20070178:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20070188:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
20070198:	00000a00 0000cac1 0000cb81 00000b40     ............@...
200701a8:	0000c901 000009c0 00000880 0000c841     ............A...
200701b8:	0000d801 000018c0 00001980 0000d941     ............A...
200701c8:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200701d8:	00001e00 0000dec1 0000df81 00001f40     ............@...
200701e8:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200701f8:	00001400 0000d4c1 0000d581 00001540     ............@...
20070208:	0000d701 000017c0 00001680 0000d641     ............A...
20070218:	0000d201 000012c0 00001380 0000d341     ............A...
20070228:	00001100 0000d1c1 0000d081 00001040     ............@...
20070238:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20070248:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20070258:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20070268:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20070278:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20070288:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
20070298:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
200702a8:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200702b8:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200702c8:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200702d8:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200702e8:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200702f8:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
20070308:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20070318:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20070328:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20070338:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20070348:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20070358:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20070368:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20070378:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20070388:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
20070398:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
200703a8:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200703b8:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200703c8:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200703d8:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200703e8:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200703f8:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
20070408:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20070418:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20070428:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20070438:	00005000 000090c1 00009181 00005140     .P..........@Q..
20070448:	00009301 000053c0 00005280 00009241     .....S...R..A...
20070458:	00009601 000056c0 00005780 00009741     .....V...W..A...
20070468:	00005500 000095c1 00009481 00005440     .U..........@T..
20070478:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20070488:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
20070498:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
200704a8:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200704b8:	00008801 000048c0 00004980 00008941     .....H...I..A...
200704c8:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200704d8:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200704e8:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200704f8:	00004400 000084c1 00008581 00004540     .D..........@E..
20070508:	00008701 000047c0 00004680 00008641     .....G...F..A...
20070518:	00008201 000042c0 00004380 00008341     .....B...C..A...
20070528:	00004100 000081c1 00008081 00004040     .A..........@@..

20070538 <pErrorFunc>:
20070538:	000804f1                                ....

2007053c <g_interrupt_enabled>:
2007053c:	00000001                                ....

20070540 <SystemCoreClock>:
20070540:	003d0900                                ..=.

20070544 <_impure_ptr>:
20070544:	20070548                                H.. 

20070548 <impure_data>:
20070548:	00000000 20070834 2007089c 20070904     ....4.. ... ... 
	...
200705f0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070600:	0005deec 0000000b 00000000 00000000     ................
	...

20070970 <__atexit_recursive_mutex>:
20070970:	20071444                                D.. 

20070974 <__global_locale>:
20070974:	00000043 00000000 00000000 00000000     C...............
	...
20070994:	00000043 00000000 00000000 00000000     C...............
	...
200709b4:	00000043 00000000 00000000 00000000     C...............
	...
200709d4:	00000043 00000000 00000000 00000000     C...............
	...
200709f4:	00000043 00000000 00000000 00000000     C...............
	...
20070a14:	00000043 00000000 00000000 00000000     C...............
	...
20070a34:	00000043 00000000 00000000 00000000     C...............
	...
20070a54:	00084e65 00084591 00000000 0008651c     eN...E.......e..
20070a64:	0008641c 00086394 00086394 00086394     .d...c...c...c..
20070a74:	00086394 00086394 00086394 00086394     .c...c...c...c..
20070a84:	00086394 00086394 ffffffff ffffffff     .c...c..........
20070a94:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070abc:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070ae0 <__malloc_av_>:
	...
20070ae8:	20070ae0 20070ae0 20070ae8 20070ae8     ... ... ... ... 
20070af8:	20070af0 20070af0 20070af8 20070af8     ... ... ... ... 
20070b08:	20070b00 20070b00 20070b08 20070b08     ... ... ... ... 
20070b18:	20070b10 20070b10 20070b18 20070b18     ... ... ... ... 
20070b28:	20070b20 20070b20 20070b28 20070b28      ..  .. (.. (.. 
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 
20070b88:	20070b80 20070b80 20070b88 20070b88     ... ... ... ... 
20070b98:	20070b90 20070b90 20070b98 20070b98     ... ... ... ... 
20070ba8:	20070ba0 20070ba0 20070ba8 20070ba8     ... ... ... ... 
20070bb8:	20070bb0 20070bb0 20070bb8 20070bb8     ... ... ... ... 
20070bc8:	20070bc0 20070bc0 20070bc8 20070bc8     ... ... ... ... 
20070bd8:	20070bd0 20070bd0 20070bd8 20070bd8     ... ... ... ... 
20070be8:	20070be0 20070be0 20070be8 20070be8     ... ... ... ... 
20070bf8:	20070bf0 20070bf0 20070bf8 20070bf8     ... ... ... ... 
20070c08:	20070c00 20070c00 20070c08 20070c08     ... ... ... ... 
20070c18:	20070c10 20070c10 20070c18 20070c18     ... ... ... ... 
20070c28:	20070c20 20070c20 20070c28 20070c28      ..  .. (.. (.. 
20070c38:	20070c30 20070c30 20070c38 20070c38     0.. 0.. 8.. 8.. 
20070c48:	20070c40 20070c40 20070c48 20070c48     @.. @.. H.. H.. 
20070c58:	20070c50 20070c50 20070c58 20070c58     P.. P.. X.. X.. 
20070c68:	20070c60 20070c60 20070c68 20070c68     `.. `.. h.. h.. 
20070c78:	20070c70 20070c70 20070c78 20070c78     p.. p.. x.. x.. 
20070c88:	20070c80 20070c80 20070c88 20070c88     ... ... ... ... 
20070c98:	20070c90 20070c90 20070c98 20070c98     ... ... ... ... 
20070ca8:	20070ca0 20070ca0 20070ca8 20070ca8     ... ... ... ... 
20070cb8:	20070cb0 20070cb0 20070cb8 20070cb8     ... ... ... ... 
20070cc8:	20070cc0 20070cc0 20070cc8 20070cc8     ... ... ... ... 
20070cd8:	20070cd0 20070cd0 20070cd8 20070cd8     ... ... ... ... 
20070ce8:	20070ce0 20070ce0 20070ce8 20070ce8     ... ... ... ... 
20070cf8:	20070cf0 20070cf0 20070cf8 20070cf8     ... ... ... ... 
20070d08:	20070d00 20070d00 20070d08 20070d08     ... ... ... ... 
20070d18:	20070d10 20070d10 20070d18 20070d18     ... ... ... ... 
20070d28:	20070d20 20070d20 20070d28 20070d28      ..  .. (.. (.. 
20070d38:	20070d30 20070d30 20070d38 20070d38     0.. 0.. 8.. 8.. 
20070d48:	20070d40 20070d40 20070d48 20070d48     @.. @.. H.. H.. 
20070d58:	20070d50 20070d50 20070d58 20070d58     P.. P.. X.. X.. 
20070d68:	20070d60 20070d60 20070d68 20070d68     `.. `.. h.. h.. 
20070d78:	20070d70 20070d70 20070d78 20070d78     p.. p.. x.. x.. 
20070d88:	20070d80 20070d80 20070d88 20070d88     ... ... ... ... 
20070d98:	20070d90 20070d90 20070d98 20070d98     ... ... ... ... 
20070da8:	20070da0 20070da0 20070da8 20070da8     ... ... ... ... 
20070db8:	20070db0 20070db0 20070db8 20070db8     ... ... ... ... 
20070dc8:	20070dc0 20070dc0 20070dc8 20070dc8     ... ... ... ... 
20070dd8:	20070dd0 20070dd0 20070dd8 20070dd8     ... ... ... ... 
20070de8:	20070de0 20070de0 20070de8 20070de8     ... ... ... ... 
20070df8:	20070df0 20070df0 20070df8 20070df8     ... ... ... ... 
20070e08:	20070e00 20070e00 20070e08 20070e08     ... ... ... ... 
20070e18:	20070e10 20070e10 20070e18 20070e18     ... ... ... ... 
20070e28:	20070e20 20070e20 20070e28 20070e28      ..  .. (.. (.. 
20070e38:	20070e30 20070e30 20070e38 20070e38     0.. 0.. 8.. 8.. 
20070e48:	20070e40 20070e40 20070e48 20070e48     @.. @.. H.. H.. 
20070e58:	20070e50 20070e50 20070e58 20070e58     P.. P.. X.. X.. 
20070e68:	20070e60 20070e60 20070e68 20070e68     `.. `.. h.. h.. 
20070e78:	20070e70 20070e70 20070e78 20070e78     p.. p.. x.. x.. 
20070e88:	20070e80 20070e80 20070e88 20070e88     ... ... ... ... 
20070e98:	20070e90 20070e90 20070e98 20070e98     ... ... ... ... 
20070ea8:	20070ea0 20070ea0 20070ea8 20070ea8     ... ... ... ... 
20070eb8:	20070eb0 20070eb0 20070eb8 20070eb8     ... ... ... ... 
20070ec8:	20070ec0 20070ec0 20070ec8 20070ec8     ... ... ... ... 
20070ed8:	20070ed0 20070ed0 20070ed8 20070ed8     ... ... ... ... 

20070ee8 <__malloc_sbrk_base>:
20070ee8:	ffffffff                                ....

20070eec <__malloc_trim_threshold>:
20070eec:	00020000                                ....
