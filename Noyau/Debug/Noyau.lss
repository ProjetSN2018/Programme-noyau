
Noyau.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000698c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008698c  0008698c  0001698c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000f40  20070000  00086994  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000584  20070f40  000878d4  00020f40  2**2
                  ALLOC
  4 .stack        00002004  200714c4  00087e58  00020f40  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020f40  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020f69  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001889f  00000000  00000000  00020fc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003ab7  00000000  00000000  00039861  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004a92  00000000  00000000  0003d318  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000a98  00000000  00000000  00041daa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000980  00000000  00000000  00042842  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001aa16  00000000  00000000  000431c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00011a7b  00000000  00000000  0005dbd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00064de3  00000000  00000000  0006f653  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000236c  00000000  00000000  000d4438  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	c8 34 07 20 9d 18 08 00 99 18 08 00 99 18 08 00     .4. ............
   80010:	99 18 08 00 99 18 08 00 99 18 08 00 00 00 00 00     ................
	...
   8002c:	99 18 08 00 99 18 08 00 00 00 00 00 99 18 08 00     ................
   8003c:	99 18 08 00 99 18 08 00 99 18 08 00 19 06 08 00     ................
   8004c:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   8005c:	99 18 08 00 99 18 08 00 99 18 08 00 00 00 00 00     ................
   8006c:	0d 17 08 00 21 17 08 00 35 17 08 00 49 17 08 00     ....!...5...I...
	...
   80084:	b9 0e 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   80094:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   800a4:	00 00 00 00 99 18 08 00 35 11 08 00 99 18 08 00     ........5.......
   800b4:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   800c4:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   800d4:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................
   800e4:	99 18 08 00 99 18 08 00 99 18 08 00 99 18 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070f40 	.word	0x20070f40
   80110:	00000000 	.word	0x00000000
   80114:	00086994 	.word	0x00086994

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00086994 	.word	0x00086994
   80154:	20070f44 	.word	0x20070f44
   80158:	00086994 	.word	0x00086994
   8015c:	00000000 	.word	0x00000000

00080160 <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
   80160:	b921      	cbnz	r1, 8016c <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
   80162:	6843      	ldr	r3, [r0, #4]
   80164:	f023 0301 	bic.w	r3, r3, #1
   80168:	6043      	str	r3, [r0, #4]
   8016a:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
   8016c:	6843      	ldr	r3, [r0, #4]
   8016e:	f043 0301 	orr.w	r3, r3, #1
   80172:	6043      	str	r3, [r0, #4]
   80174:	4770      	bx	lr

00080176 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
   80176:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
   80178:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   8017a:	6884      	ldr	r4, [r0, #8]
   8017c:	42a5      	cmp	r5, r4
   8017e:	d003      	beq.n	80188 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
   80180:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   80182:	6884      	ldr	r4, [r0, #8]
   80184:	42ac      	cmp	r4, r5
   80186:	d1fb      	bne.n	80180 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
   80188:	b161      	cbz	r1, 801a4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8018a:	f3c4 5001 	ubfx	r0, r4, #20, #2
   8018e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80192:	f3c4 4003 	ubfx	r0, r4, #16, #4
   80196:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
   8019a:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
   8019e:	bf18      	it	ne
   801a0:	300c      	addne	r0, #12
   801a2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
   801a4:	b142      	cbz	r2, 801b8 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
   801a6:	f3c4 3102 	ubfx	r1, r4, #12, #3
   801aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   801ae:	f3c4 2003 	ubfx	r0, r4, #8, #4
   801b2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   801b6:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
   801b8:	b143      	cbz	r3, 801cc <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   801ba:	f3c4 1202 	ubfx	r2, r4, #4, #3
   801be:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   801c2:	f004 040f 	and.w	r4, r4, #15
   801c6:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   801ca:	601c      	str	r4, [r3, #0]
	}
}
   801cc:	bc30      	pop	{r4, r5}
   801ce:	4770      	bx	lr

000801d0 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
   801d0:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
   801d2:	6844      	ldr	r4, [r0, #4]
   801d4:	f014 0f01 	tst.w	r4, #1
   801d8:	d005      	beq.n	801e6 <rtc_set_time+0x16>
		if (ul_hour > 12) {
   801da:	290c      	cmp	r1, #12
   801dc:	d93d      	bls.n	8025a <rtc_set_time+0x8a>
			ul_hour -= 12;
   801de:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
   801e0:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   801e4:	e000      	b.n	801e8 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
   801e6:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   801e8:	4c1d      	ldr	r4, [pc, #116]	; (80260 <rtc_set_time+0x90>)
   801ea:	fba4 5603 	umull	r5, r6, r4, r3
   801ee:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
   801f0:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   801f4:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   801f8:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
   801fc:	fba4 6502 	umull	r6, r5, r4, r2
   80200:	08ed      	lsrs	r5, r5, #3
   80202:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
   80206:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8020a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   8020e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80212:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
   80214:	fba4 4201 	umull	r4, r2, r4, r1
   80218:	08d2      	lsrs	r2, r2, #3
   8021a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
   8021e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80222:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   80226:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   8022a:	6983      	ldr	r3, [r0, #24]
   8022c:	f013 0f04 	tst.w	r3, #4
   80230:	d0fb      	beq.n	8022a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
   80232:	6803      	ldr	r3, [r0, #0]
   80234:	f043 0301 	orr.w	r3, r3, #1
   80238:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   8023a:	6983      	ldr	r3, [r0, #24]
   8023c:	f013 0f01 	tst.w	r3, #1
   80240:	d0fb      	beq.n	8023a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80242:	2301      	movs	r3, #1
   80244:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
   80246:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
   80248:	6803      	ldr	r3, [r0, #0]
   8024a:	f023 0301 	bic.w	r3, r3, #1
   8024e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
   80250:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80252:	f000 0001 	and.w	r0, r0, #1
   80256:	bcf0      	pop	{r4, r5, r6, r7}
   80258:	4770      	bx	lr
	uint32_t ul_time = 0;
   8025a:	2700      	movs	r7, #0
   8025c:	e7c4      	b.n	801e8 <rtc_set_time+0x18>
   8025e:	bf00      	nop
   80260:	cccccccd 	.word	0xcccccccd

00080264 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
   80264:	b4f0      	push	{r4, r5, r6, r7}
   80266:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
   80268:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   8026a:	68c4      	ldr	r4, [r0, #12]
   8026c:	42a5      	cmp	r5, r4
   8026e:	d003      	beq.n	80278 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
   80270:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   80272:	68c4      	ldr	r4, [r0, #12]
   80274:	42ac      	cmp	r4, r5
   80276:	d1fb      	bne.n	80270 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
   80278:	b199      	cbz	r1, 802a2 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8027a:	f3c4 3003 	ubfx	r0, r4, #12, #4
   8027e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80282:	f3c4 2703 	ubfx	r7, r4, #8, #4
   80286:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8028a:	f3c4 1002 	ubfx	r0, r4, #4, #3
   8028e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80292:	f004 000f 	and.w	r0, r4, #15
   80296:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8029a:	2564      	movs	r5, #100	; 0x64
   8029c:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
   802a0:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
   802a2:	b142      	cbz	r2, 802b6 <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802a4:	f3c4 5000 	ubfx	r0, r4, #20, #1
   802a8:	0081      	lsls	r1, r0, #2
   802aa:	4408      	add	r0, r1
   802ac:	f3c4 4103 	ubfx	r1, r4, #16, #4
   802b0:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   802b4:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
   802b6:	b143      	cbz	r3, 802ca <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802b8:	f3c4 7201 	ubfx	r2, r4, #28, #2
   802bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   802c0:	f3c4 6103 	ubfx	r1, r4, #24, #4
   802c4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   802c8:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
   802ca:	b116      	cbz	r6, 802d2 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
   802cc:	f3c4 5442 	ubfx	r4, r4, #21, #3
   802d0:	6034      	str	r4, [r6, #0]
	}
}
   802d2:	bcf0      	pop	{r4, r5, r6, r7}
   802d4:	4770      	bx	lr
	...

000802d8 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
   802d8:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802da:	4d2a      	ldr	r5, [pc, #168]	; (80384 <rtc_set_date+0xac>)
   802dc:	fba5 4603 	umull	r4, r6, r5, r3
   802e0:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
   802e2:	9c03      	ldr	r4, [sp, #12]
   802e4:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802e6:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
   802ea:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   802ee:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802f2:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
   802f6:	fba5 6402 	umull	r6, r4, r5, r2
   802fa:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802fc:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
   80300:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80304:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80308:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
   8030c:	4b1e      	ldr	r3, [pc, #120]	; (80388 <rtc_set_date+0xb0>)
   8030e:	fba3 4301 	umull	r4, r3, r3, r1
   80312:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80314:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
   80318:	4b1c      	ldr	r3, [pc, #112]	; (8038c <rtc_set_date+0xb4>)
   8031a:	fba3 4301 	umull	r4, r3, r3, r1
   8031e:	095b      	lsrs	r3, r3, #5
   80320:	fba5 6403 	umull	r6, r4, r5, r3
   80324:	08e4      	lsrs	r4, r4, #3
   80326:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8032a:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8032e:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
   80330:	fba5 4301 	umull	r4, r3, r5, r1
   80334:	08db      	lsrs	r3, r3, #3
   80336:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   8033a:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8033e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
   80342:	fba5 1503 	umull	r1, r5, r5, r3
   80346:	08ed      	lsrs	r5, r5, #3
   80348:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8034c:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80350:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   80354:	6983      	ldr	r3, [r0, #24]
   80356:	f013 0f04 	tst.w	r3, #4
   8035a:	d0fb      	beq.n	80354 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
   8035c:	6803      	ldr	r3, [r0, #0]
   8035e:	f043 0302 	orr.w	r3, r3, #2
   80362:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   80364:	6983      	ldr	r3, [r0, #24]
   80366:	f013 0f01 	tst.w	r3, #1
   8036a:	d0fb      	beq.n	80364 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   8036c:	2301      	movs	r3, #1
   8036e:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
   80370:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
   80372:	6803      	ldr	r3, [r0, #0]
   80374:	f023 0302 	bic.w	r3, r3, #2
   80378:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
   8037a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   8037c:	f000 0002 	and.w	r0, r0, #2
   80380:	bc70      	pop	{r4, r5, r6}
   80382:	4770      	bx	lr
   80384:	cccccccd 	.word	0xcccccccd
   80388:	10624dd3 	.word	0x10624dd3
   8038c:	51eb851f 	.word	0x51eb851f

00080390 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80390:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80392:	0189      	lsls	r1, r1, #6
   80394:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80396:	2402      	movs	r4, #2
   80398:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8039a:	f04f 31ff 	mov.w	r1, #4294967295
   8039e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   803a0:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   803a2:	605a      	str	r2, [r3, #4]
}
   803a4:	bc10      	pop	{r4}
   803a6:	4770      	bx	lr

000803a8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   803a8:	0189      	lsls	r1, r1, #6
   803aa:	2305      	movs	r3, #5
   803ac:	5043      	str	r3, [r0, r1]
   803ae:	4770      	bx	lr

000803b0 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   803b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803b4:	614a      	str	r2, [r1, #20]
   803b6:	4770      	bx	lr

000803b8 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   803b8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803bc:	61ca      	str	r2, [r1, #28]
   803be:	4770      	bx	lr

000803c0 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   803c0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   803c4:	624a      	str	r2, [r1, #36]	; 0x24
   803c6:	4770      	bx	lr

000803c8 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   803c8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   803cc:	6a08      	ldr	r0, [r1, #32]
}
   803ce:	4770      	bx	lr

000803d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
   803d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
   803d2:	010b      	lsls	r3, r1, #4
   803d4:	4293      	cmp	r3, r2
   803d6:	d914      	bls.n	80402 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   803d8:	00c9      	lsls	r1, r1, #3
   803da:	084b      	lsrs	r3, r1, #1
   803dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
   803e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
   803e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   803e6:	1e5c      	subs	r4, r3, #1
   803e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   803ec:	428c      	cmp	r4, r1
   803ee:	d901      	bls.n	803f4 <usart_set_async_baudrate+0x24>
		return 1;
   803f0:	2001      	movs	r0, #1
   803f2:	e017      	b.n	80424 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
   803f4:	6841      	ldr	r1, [r0, #4]
   803f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
   803fa:	6041      	str	r1, [r0, #4]
   803fc:	e00c      	b.n	80418 <usart_set_async_baudrate+0x48>
		return 1;
   803fe:	2001      	movs	r0, #1
   80400:	e010      	b.n	80424 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   80402:	0859      	lsrs	r1, r3, #1
   80404:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   80408:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
   8040c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   8040e:	1e5c      	subs	r4, r3, #1
   80410:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   80414:	428c      	cmp	r4, r1
   80416:	d8f2      	bhi.n	803fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
   80418:	0412      	lsls	r2, r2, #16
   8041a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
   8041e:	431a      	orrs	r2, r3
   80420:	6202      	str	r2, [r0, #32]

	return 0;
   80422:	2000      	movs	r0, #0
}
   80424:	bc10      	pop	{r4}
   80426:	4770      	bx	lr

00080428 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   80428:	4b08      	ldr	r3, [pc, #32]	; (8044c <usart_reset+0x24>)
   8042a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
   8042e:	2300      	movs	r3, #0
   80430:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
   80432:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   80434:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   80436:	2388      	movs	r3, #136	; 0x88
   80438:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8043a:	2324      	movs	r3, #36	; 0x24
   8043c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
   8043e:	f44f 7380 	mov.w	r3, #256	; 0x100
   80442:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
   80444:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   80448:	6003      	str	r3, [r0, #0]
   8044a:	4770      	bx	lr
   8044c:	55534100 	.word	0x55534100

00080450 <usart_init_rs232>:
{
   80450:	b570      	push	{r4, r5, r6, lr}
   80452:	4605      	mov	r5, r0
   80454:	460c      	mov	r4, r1
   80456:	4616      	mov	r6, r2
	usart_reset(p_usart);
   80458:	4b0f      	ldr	r3, [pc, #60]	; (80498 <usart_init_rs232+0x48>)
   8045a:	4798      	blx	r3
	ul_reg_val = 0;
   8045c:	2200      	movs	r2, #0
   8045e:	4b0f      	ldr	r3, [pc, #60]	; (8049c <usart_init_rs232+0x4c>)
   80460:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
   80462:	b1a4      	cbz	r4, 8048e <usart_init_rs232+0x3e>
   80464:	4632      	mov	r2, r6
   80466:	6821      	ldr	r1, [r4, #0]
   80468:	4628      	mov	r0, r5
   8046a:	4b0d      	ldr	r3, [pc, #52]	; (804a0 <usart_init_rs232+0x50>)
   8046c:	4798      	blx	r3
   8046e:	4602      	mov	r2, r0
   80470:	b978      	cbnz	r0, 80492 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80472:	6863      	ldr	r3, [r4, #4]
   80474:	68a1      	ldr	r1, [r4, #8]
   80476:	430b      	orrs	r3, r1
   80478:	6921      	ldr	r1, [r4, #16]
   8047a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
   8047c:	68e1      	ldr	r1, [r4, #12]
   8047e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80480:	4906      	ldr	r1, [pc, #24]	; (8049c <usart_init_rs232+0x4c>)
   80482:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
   80484:	6869      	ldr	r1, [r5, #4]
   80486:	430b      	orrs	r3, r1
   80488:	606b      	str	r3, [r5, #4]
}
   8048a:	4610      	mov	r0, r2
   8048c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
   8048e:	2201      	movs	r2, #1
   80490:	e7fb      	b.n	8048a <usart_init_rs232+0x3a>
   80492:	2201      	movs	r2, #1
   80494:	e7f9      	b.n	8048a <usart_init_rs232+0x3a>
   80496:	bf00      	nop
   80498:	00080429 	.word	0x00080429
   8049c:	20070f5c 	.word	0x20070f5c
   804a0:	000803d1 	.word	0x000803d1

000804a4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   804a4:	2340      	movs	r3, #64	; 0x40
   804a6:	6003      	str	r3, [r0, #0]
   804a8:	4770      	bx	lr

000804aa <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
   804aa:	2310      	movs	r3, #16
   804ac:	6003      	str	r3, [r0, #0]
   804ae:	4770      	bx	lr

000804b0 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
   804b0:	6081      	str	r1, [r0, #8]
   804b2:	4770      	bx	lr

000804b4 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
   804b4:	60c1      	str	r1, [r0, #12]
   804b6:	4770      	bx	lr

000804b8 <usart_get_status>:
	return p_usart->US_CSR;
   804b8:	6940      	ldr	r0, [r0, #20]
}
   804ba:	4770      	bx	lr

000804bc <CRC16MODBUSFRAME>:
unsigned int CRC16MODBUSFRAME (unsigned char *nData, unsigned int wLength)
{
    unsigned char  nTemp;
    unsigned int  wCRCWord = 0xFFFF;

    while (wLength--)
   804bc:	b189      	cbz	r1, 804e2 <CRC16MODBUSFRAME+0x26>
{
   804be:	b410      	push	{r4}
   804c0:	1841      	adds	r1, r0, r1
    while (wLength--)
   804c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
    {
        nTemp = *nData++ ^ wCRCWord;
        wCRCWord >>= 8;
        wCRCWord ^= wCRCTable[nTemp];
   804c6:	4c09      	ldr	r4, [pc, #36]	; (804ec <CRC16MODBUSFRAME+0x30>)
        nTemp = *nData++ ^ wCRCWord;
   804c8:	f810 3b01 	ldrb.w	r3, [r0], #1
   804cc:	4053      	eors	r3, r2
        wCRCWord ^= wCRCTable[nTemp];
   804ce:	b2db      	uxtb	r3, r3
   804d0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   804d4:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
    while (wLength--)
   804d8:	4281      	cmp	r1, r0
   804da:	d1f5      	bne.n	804c8 <CRC16MODBUSFRAME+0xc>
    }
    return wCRCWord;
}
   804dc:	4610      	mov	r0, r2
   804de:	bc10      	pop	{r4}
   804e0:	4770      	bx	lr
    unsigned int  wCRCWord = 0xFFFF;
   804e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
}
   804e6:	4610      	mov	r0, r2
   804e8:	4770      	bx	lr
   804ea:	bf00      	nop
   804ec:	20070138 	.word	0x20070138

000804f0 <ErrorLed>:
 #include "../Headers/appli.h"

 t_ptf32 pErrorFunc = ErrorLed;

 uint32_t ErrorLed(uint32_t err, ...)
 {
   804f0:	b40f      	push	{r0, r1, r2, r3}
   804f2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   804f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(LED0_GPIO);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   804f8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80598 <ErrorLed+0xa8>
   804fc:	fba8 2803 	umull	r2, r8, r8, r3
   80500:	ea4f 08d8 	mov.w	r8, r8, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   80504:	eb08 0a88 	add.w	sl, r8, r8, lsl #2
   80508:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(LED0_GPIO);
   8050c:	253b      	movs	r5, #59	; 0x3b
		delay_ms(2000);
   8050e:	4c1c      	ldr	r4, [pc, #112]	; (80580 <ErrorLed+0x90>)
		delay_ms(500);
   80510:	f8df b088 	ldr.w	fp, [pc, #136]	; 8059c <ErrorLed+0xac>
   80514:	e001      	b.n	8051a <ErrorLed+0x2a>
			gpio_set_pin_high(LED0_GPIO);
			delay_ms(200);
			gpio_set_pin_low(LED0_GPIO);
			delay_ms(200);
		}
		delay_ms(1000);
   80516:	481b      	ldr	r0, [pc, #108]	; (80584 <ErrorLed+0x94>)
   80518:	47a0      	blx	r4
		gpio_set_pin_high(LED0_GPIO);
   8051a:	4628      	mov	r0, r5
   8051c:	4b1a      	ldr	r3, [pc, #104]	; (80588 <ErrorLed+0x98>)
   8051e:	4798      	blx	r3
		delay_ms(2000);
   80520:	481a      	ldr	r0, [pc, #104]	; (8058c <ErrorLed+0x9c>)
   80522:	47a0      	blx	r4
		gpio_set_pin_low(LED0_GPIO);
   80524:	4628      	mov	r0, r5
   80526:	4b1a      	ldr	r3, [pc, #104]	; (80590 <ErrorLed+0xa0>)
   80528:	4798      	blx	r3
		delay_ms(500);
   8052a:	4658      	mov	r0, fp
   8052c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8052e:	f1b8 0f00 	cmp.w	r8, #0
   80532:	d00f      	beq.n	80554 <ErrorLed+0x64>
   80534:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80536:	f8df 9050 	ldr.w	r9, [pc, #80]	; 80588 <ErrorLed+0x98>
			delay_ms(200);
   8053a:	4f16      	ldr	r7, [pc, #88]	; (80594 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   8053c:	4628      	mov	r0, r5
   8053e:	47c8      	blx	r9
			delay_ms(200);
   80540:	4638      	mov	r0, r7
   80542:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80544:	4628      	mov	r0, r5
   80546:	4b12      	ldr	r3, [pc, #72]	; (80590 <ErrorLed+0xa0>)
   80548:	4798      	blx	r3
			delay_ms(200);
   8054a:	4638      	mov	r0, r7
   8054c:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8054e:	3601      	adds	r6, #1
   80550:	4546      	cmp	r6, r8
   80552:	d1f3      	bne.n	8053c <ErrorLed+0x4c>
		delay_ms(500);
   80554:	4658      	mov	r0, fp
   80556:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80558:	f1ba 0f00 	cmp.w	sl, #0
   8055c:	d0db      	beq.n	80516 <ErrorLed+0x26>
   8055e:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80560:	f8df 9024 	ldr.w	r9, [pc, #36]	; 80588 <ErrorLed+0x98>
			delay_ms(200);
   80564:	4f0b      	ldr	r7, [pc, #44]	; (80594 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   80566:	4628      	mov	r0, r5
   80568:	47c8      	blx	r9
			delay_ms(200);
   8056a:	4638      	mov	r0, r7
   8056c:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   8056e:	4628      	mov	r0, r5
   80570:	4b07      	ldr	r3, [pc, #28]	; (80590 <ErrorLed+0xa0>)
   80572:	4798      	blx	r3
			delay_ms(200);
   80574:	4638      	mov	r0, r7
   80576:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80578:	3601      	adds	r6, #1
   8057a:	4556      	cmp	r6, sl
   8057c:	d1f3      	bne.n	80566 <ErrorLed+0x76>
   8057e:	e7ca      	b.n	80516 <ErrorLed+0x26>
   80580:	20070001 	.word	0x20070001
   80584:	005b8d80 	.word	0x005b8d80
   80588:	0008148d 	.word	0x0008148d
   8058c:	00b71b00 	.word	0x00b71b00
   80590:	000814a7 	.word	0x000814a7
   80594:	00124f80 	.word	0x00124f80
   80598:	cccccccd 	.word	0xcccccccd
   8059c:	002dc6c0 	.word	0x002dc6c0

000805a0 <pin_edge_handler>:

 }

 int i = 0;
void pin_edge_handler(const uint32_t id, const uint32_t index)
{
   805a0:	b570      	push	{r4, r5, r6, lr}
   805a2:	4605      	mov	r5, r0
   805a4:	460e      	mov	r6, r1
	i++;
   805a6:	4b13      	ldr	r3, [pc, #76]	; (805f4 <pin_edge_handler+0x54>)
   805a8:	681a      	ldr	r2, [r3, #0]
   805aa:	3201      	adds	r2, #1
   805ac:	601a      	str	r2, [r3, #0]
	sprintf(buf,"%d\r\n", i);
   805ae:	4c12      	ldr	r4, [pc, #72]	; (805f8 <pin_edge_handler+0x58>)
   805b0:	4912      	ldr	r1, [pc, #72]	; (805fc <pin_edge_handler+0x5c>)
   805b2:	4620      	mov	r0, r4
   805b4:	4b12      	ldr	r3, [pc, #72]	; (80600 <pin_edge_handler+0x60>)
   805b6:	4798      	blx	r3
	Putstr(buf);
   805b8:	4621      	mov	r1, r4
   805ba:	2067      	movs	r0, #103	; 0x67
   805bc:	4b11      	ldr	r3, [pc, #68]	; (80604 <pin_edge_handler+0x64>)
   805be:	4798      	blx	r3
	if ((id == ID_PIOA) && (index == PIO_PA16)){
   805c0:	2d0b      	cmp	r5, #11
   805c2:	d000      	beq.n	805c6 <pin_edge_handler+0x26>
   805c4:	bd70      	pop	{r4, r5, r6, pc}
   805c6:	f5b6 3f80 	cmp.w	r6, #65536	; 0x10000
   805ca:	d1fb      	bne.n	805c4 <pin_edge_handler+0x24>
		if (pio_get(PIOA, PIO_TYPE_PIO_INPUT, PIO_PA16))
   805cc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   805d0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   805d4:	480c      	ldr	r0, [pc, #48]	; (80608 <pin_edge_handler+0x68>)
   805d6:	4b0d      	ldr	r3, [pc, #52]	; (8060c <pin_edge_handler+0x6c>)
   805d8:	4798      	blx	r3
   805da:	b928      	cbnz	r0, 805e8 <pin_edge_handler+0x48>
			pio_clear(PIOA, PIO_PA23);
			
		}
		
		else
		pio_set(PIOA, PIO_PA23);
   805dc:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
   805e0:	4809      	ldr	r0, [pc, #36]	; (80608 <pin_edge_handler+0x68>)
   805e2:	4b0b      	ldr	r3, [pc, #44]	; (80610 <pin_edge_handler+0x70>)
   805e4:	4798      	blx	r3
	}
}
   805e6:	e7ed      	b.n	805c4 <pin_edge_handler+0x24>
			pio_clear(PIOA, PIO_PA23);
   805e8:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
   805ec:	4806      	ldr	r0, [pc, #24]	; (80608 <pin_edge_handler+0x68>)
   805ee:	4b09      	ldr	r3, [pc, #36]	; (80614 <pin_edge_handler+0x74>)
   805f0:	4798      	blx	r3
   805f2:	bd70      	pop	{r4, r5, r6, pc}
   805f4:	20070f60 	.word	0x20070f60
   805f8:	2007139c 	.word	0x2007139c
   805fc:	00086560 	.word	0x00086560
   80600:	00081b79 	.word	0x00081b79
   80604:	00080d21 	.word	0x00080d21
   80608:	400e0e00 	.word	0x400e0e00
   8060c:	000813a5 	.word	0x000813a5
   80610:	0008139d 	.word	0x0008139d
   80614:	000813a1 	.word	0x000813a1

00080618 <RTC_Handler>:
 {
   80618:	4770      	bx	lr
	...

0008061c <__RTCdayByDate>:
	if(month>=3)
   8061c:	2902      	cmp	r1, #2
   8061e:	d824      	bhi.n	8066a <__RTCdayByDate+0x4e>
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + (y-1)/4 - (y-1)/100 + (y-1)/400 ) % 7 + 1;
   80620:	1e53      	subs	r3, r2, #1
   80622:	3204      	adds	r2, #4
   80624:	4410      	add	r0, r2
   80626:	eb00 0093 	add.w	r0, r0, r3, lsr #2
   8062a:	4a22      	ldr	r2, [pc, #136]	; (806b4 <__RTCdayByDate+0x98>)
   8062c:	fba2 2303 	umull	r2, r3, r2, r3
   80630:	eb00 10d3 	add.w	r0, r0, r3, lsr #7
   80634:	eba0 1053 	sub.w	r0, r0, r3, lsr #5
   80638:	b289      	uxth	r1, r1
   8063a:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   8063e:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   80642:	4b1d      	ldr	r3, [pc, #116]	; (806b8 <__RTCdayByDate+0x9c>)
   80644:	fb83 2301 	smull	r2, r3, r3, r1
   80648:	17c9      	asrs	r1, r1, #31
   8064a:	ebc1 0163 	rsb	r1, r1, r3, asr #1
   8064e:	4408      	add	r0, r1
   80650:	4b1a      	ldr	r3, [pc, #104]	; (806bc <__RTCdayByDate+0xa0>)
   80652:	fba3 2300 	umull	r2, r3, r3, r0
   80656:	1ac2      	subs	r2, r0, r3
   80658:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   8065c:	089b      	lsrs	r3, r3, #2
   8065e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   80662:	1ac0      	subs	r0, r0, r3
   80664:	3001      	adds	r0, #1
   80666:	b2c0      	uxtb	r0, r0
 }
   80668:	4770      	bx	lr
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
   8066a:	1c93      	adds	r3, r2, #2
   8066c:	4418      	add	r0, r3
   8066e:	eb00 0092 	add.w	r0, r0, r2, lsr #2
   80672:	4b10      	ldr	r3, [pc, #64]	; (806b4 <__RTCdayByDate+0x98>)
   80674:	fba3 3202 	umull	r3, r2, r3, r2
   80678:	eb00 10d2 	add.w	r0, r0, r2, lsr #7
   8067c:	eba0 1252 	sub.w	r2, r0, r2, lsr #5
   80680:	b289      	uxth	r1, r1
   80682:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   80686:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   8068a:	480b      	ldr	r0, [pc, #44]	; (806b8 <__RTCdayByDate+0x9c>)
   8068c:	fb80 3001 	smull	r3, r0, r0, r1
   80690:	17c9      	asrs	r1, r1, #31
   80692:	ebc1 0160 	rsb	r1, r1, r0, asr #1
   80696:	440a      	add	r2, r1
   80698:	4808      	ldr	r0, [pc, #32]	; (806bc <__RTCdayByDate+0xa0>)
   8069a:	fba0 3002 	umull	r3, r0, r0, r2
   8069e:	1a13      	subs	r3, r2, r0
   806a0:	eb00 0053 	add.w	r0, r0, r3, lsr #1
   806a4:	0880      	lsrs	r0, r0, #2
   806a6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   806aa:	1a10      	subs	r0, r2, r0
   806ac:	3001      	adds	r0, #1
   806ae:	b2c0      	uxtb	r0, r0
   806b0:	4770      	bx	lr
   806b2:	bf00      	nop
   806b4:	51eb851f 	.word	0x51eb851f
   806b8:	38e38e39 	.word	0x38e38e39
   806bc:	24924925 	.word	0x24924925

000806c0 <Shell>:
 {
   806c0:	b40f      	push	{r0, r1, r2, r3}
   806c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   806c6:	b086      	sub	sp, #24
	switch(sc)
   806c8:	990c      	ldr	r1, [sp, #48]	; 0x30
   806ca:	2902      	cmp	r1, #2
   806cc:	f000 81b4 	beq.w	80a38 <Shell+0x378>
   806d0:	d969      	bls.n	807a6 <Shell+0xe6>
   806d2:	2904      	cmp	r1, #4
   806d4:	f000 81cd 	beq.w	80a72 <Shell+0x3b2>
   806d8:	2964      	cmp	r1, #100	; 0x64
   806da:	f040 820b 	bne.w	80af4 <Shell+0x434>
		gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   806de:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   806e2:	203b      	movs	r0, #59	; 0x3b
   806e4:	4bb3      	ldr	r3, [pc, #716]	; (809b4 <Shell+0x2f4>)
   806e6:	4798      	blx	r3
		gpio_set_pin_low(LED0_GPIO);
   806e8:	203b      	movs	r0, #59	; 0x3b
   806ea:	4bb3      	ldr	r3, [pc, #716]	; (809b8 <Shell+0x2f8>)
   806ec:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   806ee:	2064      	movs	r0, #100	; 0x64
   806f0:	4bb2      	ldr	r3, [pc, #712]	; (809bc <Shell+0x2fc>)
   806f2:	4798      	blx	r3
		state = IDLE;
   806f4:	2400      	movs	r4, #0
   806f6:	4bb2      	ldr	r3, [pc, #712]	; (809c0 <Shell+0x300>)
   806f8:	701c      	strb	r4, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   806fa:	2002      	movs	r0, #2
   806fc:	4db1      	ldr	r5, [pc, #708]	; (809c4 <Shell+0x304>)
   806fe:	47a8      	blx	r5
		pmc_enable_periph_clk(ID_PIOA);
   80700:	200b      	movs	r0, #11
   80702:	47a8      	blx	r5
		pio_set_output(PIOA, PIO_PA23, LOW, DISABLE, ENABLE);
   80704:	4db0      	ldr	r5, [pc, #704]	; (809c8 <Shell+0x308>)
   80706:	2601      	movs	r6, #1
   80708:	9600      	str	r6, [sp, #0]
   8070a:	4623      	mov	r3, r4
   8070c:	4622      	mov	r2, r4
   8070e:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
   80712:	4628      	mov	r0, r5
   80714:	4fad      	ldr	r7, [pc, #692]	; (809cc <Shell+0x30c>)
   80716:	47b8      	blx	r7
		pio_set_output(PIOA, PIO_PA24, LOW, DISABLE, ENABLE);
   80718:	9600      	str	r6, [sp, #0]
   8071a:	4623      	mov	r3, r4
   8071c:	4622      	mov	r2, r4
   8071e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
   80722:	4628      	mov	r0, r5
   80724:	47b8      	blx	r7
		pio_set_input(PIOA, PIO_PA16, PIO_PULLUP);
   80726:	4632      	mov	r2, r6
   80728:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   8072c:	4628      	mov	r0, r5
   8072e:	4ba8      	ldr	r3, [pc, #672]	; (809d0 <Shell+0x310>)
   80730:	4798      	blx	r3
		pio_handler_set(PIOA, ID_PIOA, PIO_PA16, PIO_IT_EDGE, pin_edge_handler);
   80732:	4ba8      	ldr	r3, [pc, #672]	; (809d4 <Shell+0x314>)
   80734:	9300      	str	r3, [sp, #0]
   80736:	2340      	movs	r3, #64	; 0x40
   80738:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   8073c:	210b      	movs	r1, #11
   8073e:	4628      	mov	r0, r5
   80740:	4fa5      	ldr	r7, [pc, #660]	; (809d8 <Shell+0x318>)
   80742:	47b8      	blx	r7
		pio_enable_interrupt(PIOA, PIO_PA16);
   80744:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   80748:	4628      	mov	r0, r5
   8074a:	4ba4      	ldr	r3, [pc, #656]	; (809dc <Shell+0x31c>)
   8074c:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8074e:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80752:	4ba3      	ldr	r3, [pc, #652]	; (809e0 <Shell+0x320>)
   80754:	601a      	str	r2, [r3, #0]
		rtc_set_hour_mode(RTC, 0);
   80756:	f505 6546 	add.w	r5, r5, #3168	; 0xc60
   8075a:	4621      	mov	r1, r4
   8075c:	4628      	mov	r0, r5
   8075e:	4ba1      	ldr	r3, [pc, #644]	; (809e4 <Shell+0x324>)
   80760:	4798      	blx	r3
		rtc_set_time(RTC, 1, 2, 3);
   80762:	2303      	movs	r3, #3
   80764:	2202      	movs	r2, #2
   80766:	4631      	mov	r1, r6
   80768:	4628      	mov	r0, r5
   8076a:	4d9f      	ldr	r5, [pc, #636]	; (809e8 <Shell+0x328>)
   8076c:	47a8      	blx	r5
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   8076e:	4f9f      	ldr	r7, [pc, #636]	; (809ec <Shell+0x32c>)
   80770:	9400      	str	r4, [sp, #0]
   80772:	4623      	mov	r3, r4
   80774:	2202      	movs	r2, #2
   80776:	4639      	mov	r1, r7
   80778:	2066      	movs	r0, #102	; 0x66
   8077a:	4d9d      	ldr	r5, [pc, #628]	; (809f0 <Shell+0x330>)
   8077c:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,500);
   8077e:	f44f 76fa 	mov.w	r6, #500	; 0x1f4
   80782:	9600      	str	r6, [sp, #0]
   80784:	4623      	mov	r3, r4
   80786:	2204      	movs	r2, #4
   80788:	4639      	mov	r1, r7
   8078a:	2066      	movs	r0, #102	; 0x66
   8078c:	47a8      	blx	r5
		PushTask(Appli, APPLI_NEW, 0, 500);
   8078e:	9600      	str	r6, [sp, #0]
   80790:	4623      	mov	r3, r4
   80792:	2264      	movs	r2, #100	; 0x64
   80794:	4997      	ldr	r1, [pc, #604]	; (809f4 <Shell+0x334>)
   80796:	2066      	movs	r0, #102	; 0x66
   80798:	47a8      	blx	r5
 }
   8079a:	2000      	movs	r0, #0
   8079c:	b006      	add	sp, #24
   8079e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   807a2:	b004      	add	sp, #16
   807a4:	4770      	bx	lr
	switch(sc)
   807a6:	2901      	cmp	r1, #1
   807a8:	f040 81a4 	bne.w	80af4 <Shell+0x434>
		switch(state)
   807ac:	4b84      	ldr	r3, [pc, #528]	; (809c0 <Shell+0x300>)
   807ae:	781b      	ldrb	r3, [r3, #0]
   807b0:	2b06      	cmp	r3, #6
   807b2:	f200 813b 	bhi.w	80a2c <Shell+0x36c>
   807b6:	a201      	add	r2, pc, #4	; (adr r2, 807bc <Shell+0xfc>)
   807b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   807bc:	000807d9 	.word	0x000807d9
   807c0:	00080871 	.word	0x00080871
   807c4:	00080915 	.word	0x00080915
   807c8:	0008079b 	.word	0x0008079b
   807cc:	0008079b 	.word	0x0008079b
   807d0:	0008079b 	.word	0x0008079b
   807d4:	0008079b 	.word	0x0008079b
			switch(_kbhitChar)
   807d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   807da:	b2ec      	uxtb	r4, r5
   807dc:	f1a4 0308 	sub.w	r3, r4, #8
   807e0:	2b18      	cmp	r3, #24
   807e2:	d835      	bhi.n	80850 <Shell+0x190>
   807e4:	a201      	add	r2, pc, #4	; (adr r2, 807ec <Shell+0x12c>)
   807e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   807ea:	bf00      	nop
   807ec:	0008079b 	.word	0x0008079b
   807f0:	0008079b 	.word	0x0008079b
   807f4:	0008079b 	.word	0x0008079b
   807f8:	00080851 	.word	0x00080851
   807fc:	00080851 	.word	0x00080851
   80800:	0008079b 	.word	0x0008079b
   80804:	00080851 	.word	0x00080851
   80808:	00080851 	.word	0x00080851
   8080c:	00080851 	.word	0x00080851
   80810:	00080851 	.word	0x00080851
   80814:	00080851 	.word	0x00080851
   80818:	00080851 	.word	0x00080851
   8081c:	00080851 	.word	0x00080851
   80820:	00080851 	.word	0x00080851
   80824:	00080851 	.word	0x00080851
   80828:	00080851 	.word	0x00080851
   8082c:	00080851 	.word	0x00080851
   80830:	00080851 	.word	0x00080851
   80834:	00080851 	.word	0x00080851
   80838:	0008079b 	.word	0x0008079b
   8083c:	00080851 	.word	0x00080851
   80840:	00080851 	.word	0x00080851
   80844:	00080851 	.word	0x00080851
   80848:	00080851 	.word	0x00080851
   8084c:	0008079b 	.word	0x0008079b
				Putstr("\r\n>");
   80850:	4969      	ldr	r1, [pc, #420]	; (809f8 <Shell+0x338>)
   80852:	2067      	movs	r0, #103	; 0x67
   80854:	4f59      	ldr	r7, [pc, #356]	; (809bc <Shell+0x2fc>)
   80856:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   80858:	4e59      	ldr	r6, [pc, #356]	; (809c0 <Shell+0x300>)
   8085a:	4b68      	ldr	r3, [pc, #416]	; (809fc <Shell+0x33c>)
   8085c:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   8085e:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   80862:	2501      	movs	r5, #1
   80864:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   80866:	4621      	mov	r1, r4
   80868:	2066      	movs	r0, #102	; 0x66
   8086a:	47b8      	blx	r7
				state = EDITION;
   8086c:	7035      	strb	r5, [r6, #0]
				break;
   8086e:	e794      	b.n	8079a <Shell+0xda>
			switch(_kbhitChar)
   80870:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   80872:	b2d1      	uxtb	r1, r2
   80874:	f1a1 0308 	sub.w	r3, r1, #8
   80878:	2b13      	cmp	r3, #19
   8087a:	d83a      	bhi.n	808f2 <Shell+0x232>
   8087c:	a001      	add	r0, pc, #4	; (adr r0, 80884 <Shell+0x1c4>)
   8087e:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   80882:	bf00      	nop
   80884:	0008079b 	.word	0x0008079b
   80888:	0008079b 	.word	0x0008079b
   8088c:	0008079b 	.word	0x0008079b
   80890:	000808f3 	.word	0x000808f3
   80894:	000808f3 	.word	0x000808f3
   80898:	000808d5 	.word	0x000808d5
   8089c:	000808f3 	.word	0x000808f3
   808a0:	000808f3 	.word	0x000808f3
   808a4:	000808f3 	.word	0x000808f3
   808a8:	000808f3 	.word	0x000808f3
   808ac:	000808f3 	.word	0x000808f3
   808b0:	000808f3 	.word	0x000808f3
   808b4:	000808f3 	.word	0x000808f3
   808b8:	000808f3 	.word	0x000808f3
   808bc:	000808f3 	.word	0x000808f3
   808c0:	000808f3 	.word	0x000808f3
   808c4:	000808f3 	.word	0x000808f3
   808c8:	000808f3 	.word	0x000808f3
   808cc:	000808f3 	.word	0x000808f3
   808d0:	0008079b 	.word	0x0008079b
				*pEdit++ = '\0';
   808d4:	4a3a      	ldr	r2, [pc, #232]	; (809c0 <Shell+0x300>)
   808d6:	6891      	ldr	r1, [r2, #8]
   808d8:	1c4b      	adds	r3, r1, #1
   808da:	6093      	str	r3, [r2, #8]
   808dc:	2300      	movs	r3, #0
   808de:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   808e0:	2102      	movs	r1, #2
   808e2:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   808e4:	9300      	str	r3, [sp, #0]
   808e6:	2201      	movs	r2, #1
   808e8:	4940      	ldr	r1, [pc, #256]	; (809ec <Shell+0x32c>)
   808ea:	2066      	movs	r0, #102	; 0x66
   808ec:	4c40      	ldr	r4, [pc, #256]	; (809f0 <Shell+0x330>)
   808ee:	47a0      	blx	r4
				break;
   808f0:	e753      	b.n	8079a <Shell+0xda>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   808f2:	4b33      	ldr	r3, [pc, #204]	; (809c0 <Shell+0x300>)
   808f4:	68db      	ldr	r3, [r3, #12]
   808f6:	2bfd      	cmp	r3, #253	; 0xfd
   808f8:	f63f af4f 	bhi.w	8079a <Shell+0xda>
					*pEdit++ = _kbhitChar;
   808fc:	4b30      	ldr	r3, [pc, #192]	; (809c0 <Shell+0x300>)
   808fe:	6898      	ldr	r0, [r3, #8]
   80900:	1c44      	adds	r4, r0, #1
   80902:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   80904:	7002      	strb	r2, [r0, #0]
					nbChar++;
   80906:	68da      	ldr	r2, [r3, #12]
   80908:	3201      	adds	r2, #1
   8090a:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   8090c:	2066      	movs	r0, #102	; 0x66
   8090e:	4b2b      	ldr	r3, [pc, #172]	; (809bc <Shell+0x2fc>)
   80910:	4798      	blx	r3
   80912:	e742      	b.n	8079a <Shell+0xda>
			Putstr("\r\n>>>");
   80914:	493a      	ldr	r1, [pc, #232]	; (80a00 <Shell+0x340>)
   80916:	2067      	movs	r0, #103	; 0x67
   80918:	4c28      	ldr	r4, [pc, #160]	; (809bc <Shell+0x2fc>)
   8091a:	47a0      	blx	r4
			Putstr(shellBuf);
   8091c:	4d39      	ldr	r5, [pc, #228]	; (80a04 <Shell+0x344>)
   8091e:	4629      	mov	r1, r5
   80920:	2067      	movs	r0, #103	; 0x67
   80922:	47a0      	blx	r4
			Putstr("\r\n");
   80924:	4938      	ldr	r1, [pc, #224]	; (80a08 <Shell+0x348>)
   80926:	2067      	movs	r0, #103	; 0x67
   80928:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   8092a:	4938      	ldr	r1, [pc, #224]	; (80a0c <Shell+0x34c>)
   8092c:	4628      	mov	r0, r5
   8092e:	4b38      	ldr	r3, [pc, #224]	; (80a10 <Shell+0x350>)
   80930:	4798      	blx	r3
   80932:	4607      	mov	r7, r0
   80934:	900c      	str	r0, [sp, #48]	; 0x30
			if(pToken)
   80936:	b918      	cbnz	r0, 80940 <Shell+0x280>
			state = IDLE;
   80938:	2200      	movs	r2, #0
   8093a:	4b21      	ldr	r3, [pc, #132]	; (809c0 <Shell+0x300>)
   8093c:	701a      	strb	r2, [r3, #0]
			break;
   8093e:	e72c      	b.n	8079a <Shell+0xda>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   80940:	4b34      	ldr	r3, [pc, #208]	; (80a14 <Shell+0x354>)
   80942:	4798      	blx	r3
   80944:	4601      	mov	r1, r0
   80946:	4638      	mov	r0, r7
   80948:	4b33      	ldr	r3, [pc, #204]	; (80a18 <Shell+0x358>)
   8094a:	4798      	blx	r3
   8094c:	b285      	uxth	r5, r0
   8094e:	4b1c      	ldr	r3, [pc, #112]	; (809c0 <Shell+0x300>)
   80950:	821d      	strh	r5, [r3, #16]
				k = 0;
   80952:	2300      	movs	r3, #0
   80954:	9305      	str	r3, [sp, #20]
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   80956:	4b31      	ldr	r3, [pc, #196]	; (80a1c <Shell+0x35c>)
   80958:	881b      	ldrh	r3, [r3, #0]
   8095a:	b1db      	cbz	r3, 80994 <Shell+0x2d4>
   8095c:	429d      	cmp	r5, r3
   8095e:	d01b      	beq.n	80998 <Shell+0x2d8>
   80960:	2301      	movs	r3, #1
   80962:	4e2e      	ldr	r6, [pc, #184]	; (80a1c <Shell+0x35c>)
   80964:	e000      	b.n	80968 <Shell+0x2a8>
   80966:	4623      	mov	r3, r4
   80968:	f836 1033 	ldrh.w	r1, [r6, r3, lsl #3]
   8096c:	b121      	cbz	r1, 80978 <Shell+0x2b8>
   8096e:	1c5c      	adds	r4, r3, #1
   80970:	428d      	cmp	r5, r1
   80972:	d1f8      	bne.n	80966 <Shell+0x2a6>
   80974:	9305      	str	r3, [sp, #20]
   80976:	e000      	b.n	8097a <Shell+0x2ba>
   80978:	9305      	str	r3, [sp, #20]
				if(_cmdEntries[k].pCmdFunc)
   8097a:	4928      	ldr	r1, [pc, #160]	; (80a1c <Shell+0x35c>)
   8097c:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   80980:	685c      	ldr	r4, [r3, #4]
   80982:	b15c      	cbz	r4, 8099c <Shell+0x2dc>
					_cmdEntries[k].pCmdFunc(0, shellBuf + strlen(pToken) + 1);
   80984:	4638      	mov	r0, r7
   80986:	4b23      	ldr	r3, [pc, #140]	; (80a14 <Shell+0x354>)
   80988:	4798      	blx	r3
   8098a:	491c      	ldr	r1, [pc, #112]	; (809fc <Shell+0x33c>)
   8098c:	4401      	add	r1, r0
   8098e:	2000      	movs	r0, #0
   80990:	47a0      	blx	r4
   80992:	e7d1      	b.n	80938 <Shell+0x278>
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   80994:	2300      	movs	r3, #0
   80996:	e7f0      	b.n	8097a <Shell+0x2ba>
   80998:	2300      	movs	r3, #0
   8099a:	e7ee      	b.n	8097a <Shell+0x2ba>
					sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   8099c:	4c20      	ldr	r4, [pc, #128]	; (80a20 <Shell+0x360>)
   8099e:	b282      	uxth	r2, r0
   809a0:	4920      	ldr	r1, [pc, #128]	; (80a24 <Shell+0x364>)
   809a2:	4620      	mov	r0, r4
   809a4:	4b20      	ldr	r3, [pc, #128]	; (80a28 <Shell+0x368>)
   809a6:	4798      	blx	r3
					Putstr(buf);
   809a8:	4621      	mov	r1, r4
   809aa:	2067      	movs	r0, #103	; 0x67
   809ac:	4b03      	ldr	r3, [pc, #12]	; (809bc <Shell+0x2fc>)
   809ae:	4798      	blx	r3
   809b0:	e7c2      	b.n	80938 <Shell+0x278>
   809b2:	bf00      	nop
   809b4:	000814e1 	.word	0x000814e1
   809b8:	000814a7 	.word	0x000814a7
   809bc:	00080d21 	.word	0x00080d21
   809c0:	20071018 	.word	0x20071018
   809c4:	00081845 	.word	0x00081845
   809c8:	400e0e00 	.word	0x400e0e00
   809cc:	0008142d 	.word	0x0008142d
   809d0:	000813fb 	.word	0x000813fb
   809d4:	000805a1 	.word	0x000805a1
   809d8:	0008169d 	.word	0x0008169d
   809dc:	00081481 	.word	0x00081481
   809e0:	e000e100 	.word	0xe000e100
   809e4:	00080161 	.word	0x00080161
   809e8:	000801d1 	.word	0x000801d1
   809ec:	000806c1 	.word	0x000806c1
   809f0:	00080f39 	.word	0x00080f39
   809f4:	00081155 	.word	0x00081155
   809f8:	000864f8 	.word	0x000864f8
   809fc:	2007102d 	.word	0x2007102d
   80a00:	000864fc 	.word	0x000864fc
   80a04:	2007102c 	.word	0x2007102c
   80a08:	00086504 	.word	0x00086504
   80a0c:	00086508 	.word	0x00086508
   80a10:	00081c21 	.word	0x00081c21
   80a14:	00081bc5 	.word	0x00081bc5
   80a18:	000804bd 	.word	0x000804bd
   80a1c:	00086624 	.word	0x00086624
   80a20:	2007139c 	.word	0x2007139c
   80a24:	0008650c 	.word	0x0008650c
   80a28:	00081b79 	.word	0x00081b79
			Putch(_kbhitChar);
   80a2c:	f89d 1034 	ldrb.w	r1, [sp, #52]	; 0x34
   80a30:	2066      	movs	r0, #102	; 0x66
   80a32:	4b33      	ldr	r3, [pc, #204]	; (80b00 <Shell+0x440>)
   80a34:	4798      	blx	r3
			break;
   80a36:	e6b0      	b.n	8079a <Shell+0xda>
		k++; if(flashSequ[k]==0) k=0;
   80a38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   80a3a:	3401      	adds	r4, #1
   80a3c:	940d      	str	r4, [sp, #52]	; 0x34
   80a3e:	4b31      	ldr	r3, [pc, #196]	; (80b04 <Shell+0x444>)
   80a40:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80a44:	b133      	cbz	r3, 80a54 <Shell+0x394>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80a46:	f014 0f01 	tst.w	r4, #1
   80a4a:	d004      	beq.n	80a56 <Shell+0x396>
		else gpio_set_pin_low(LED0_GPIO);
   80a4c:	203b      	movs	r0, #59	; 0x3b
   80a4e:	4b2e      	ldr	r3, [pc, #184]	; (80b08 <Shell+0x448>)
   80a50:	4798      	blx	r3
   80a52:	e003      	b.n	80a5c <Shell+0x39c>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80a54:	2400      	movs	r4, #0
   80a56:	203b      	movs	r0, #59	; 0x3b
   80a58:	4b2c      	ldr	r3, [pc, #176]	; (80b0c <Shell+0x44c>)
   80a5a:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   80a5c:	4b29      	ldr	r3, [pc, #164]	; (80b04 <Shell+0x444>)
   80a5e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80a62:	9300      	str	r3, [sp, #0]
   80a64:	4623      	mov	r3, r4
   80a66:	2202      	movs	r2, #2
   80a68:	4929      	ldr	r1, [pc, #164]	; (80b10 <Shell+0x450>)
   80a6a:	2066      	movs	r0, #102	; 0x66
   80a6c:	4c29      	ldr	r4, [pc, #164]	; (80b14 <Shell+0x454>)
   80a6e:	47a0      	blx	r4
		break;
   80a70:	e693      	b.n	8079a <Shell+0xda>
		if(state==IDLE)
   80a72:	4b29      	ldr	r3, [pc, #164]	; (80b18 <Shell+0x458>)
   80a74:	781b      	ldrb	r3, [r3, #0]
   80a76:	b14b      	cbz	r3, 80a8c <Shell+0x3cc>
		PushTask(Shell,_SHELL_PROMPT,0,300);
   80a78:	f44f 7396 	mov.w	r3, #300	; 0x12c
   80a7c:	9300      	str	r3, [sp, #0]
   80a7e:	2300      	movs	r3, #0
   80a80:	2204      	movs	r2, #4
   80a82:	4923      	ldr	r1, [pc, #140]	; (80b10 <Shell+0x450>)
   80a84:	2066      	movs	r0, #102	; 0x66
   80a86:	4c23      	ldr	r4, [pc, #140]	; (80b14 <Shell+0x454>)
   80a88:	47a0      	blx	r4
		break;
   80a8a:	e686      	b.n	8079a <Shell+0xda>
			rtc_get_time(RTC, &hh, &mn, &sec);
   80a8c:	af02      	add	r7, sp, #8
   80a8e:	4c23      	ldr	r4, [pc, #140]	; (80b1c <Shell+0x45c>)
   80a90:	463b      	mov	r3, r7
   80a92:	aa03      	add	r2, sp, #12
   80a94:	a904      	add	r1, sp, #16
   80a96:	4620      	mov	r0, r4
   80a98:	4d21      	ldr	r5, [pc, #132]	; (80b20 <Shell+0x460>)
   80a9a:	47a8      	blx	r5
			sprintf(buf, "\r\e[k\r%02d:%02d:%02d", hh, mn, sec);
   80a9c:	4e21      	ldr	r6, [pc, #132]	; (80b24 <Shell+0x464>)
   80a9e:	9b02      	ldr	r3, [sp, #8]
   80aa0:	9300      	str	r3, [sp, #0]
   80aa2:	9b03      	ldr	r3, [sp, #12]
   80aa4:	9a04      	ldr	r2, [sp, #16]
   80aa6:	4920      	ldr	r1, [pc, #128]	; (80b28 <Shell+0x468>)
   80aa8:	4630      	mov	r0, r6
   80aaa:	4d20      	ldr	r5, [pc, #128]	; (80b2c <Shell+0x46c>)
   80aac:	47a8      	blx	r5
			rtc_get_date(RTC, &yr, &mm, &dd, &wk);
   80aae:	9700      	str	r7, [sp, #0]
   80ab0:	ab03      	add	r3, sp, #12
   80ab2:	aa04      	add	r2, sp, #16
   80ab4:	a905      	add	r1, sp, #20
   80ab6:	4620      	mov	r0, r4
   80ab8:	4c1d      	ldr	r4, [pc, #116]	; (80b30 <Shell+0x470>)
   80aba:	47a0      	blx	r4
			day = __RTCdayByDate(dd, mm, yr/100);
   80abc:	9f03      	ldr	r7, [sp, #12]
   80abe:	9c04      	ldr	r4, [sp, #16]
   80ac0:	f8dd 8014 	ldr.w	r8, [sp, #20]
   80ac4:	4a1b      	ldr	r2, [pc, #108]	; (80b34 <Shell+0x474>)
   80ac6:	fba2 3208 	umull	r3, r2, r2, r8
   80aca:	0952      	lsrs	r2, r2, #5
   80acc:	4621      	mov	r1, r4
   80ace:	4638      	mov	r0, r7
   80ad0:	4b19      	ldr	r3, [pc, #100]	; (80b38 <Shell+0x478>)
   80ad2:	4798      	blx	r3
			sprintf(buf, "	%s %02d %s %02d", daysOfWeek[day - 3], dd, months[mm-1], yr);
   80ad4:	3803      	subs	r0, #3
   80ad6:	4b19      	ldr	r3, [pc, #100]	; (80b3c <Shell+0x47c>)
   80ad8:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
   80adc:	f8cd 8004 	str.w	r8, [sp, #4]
   80ae0:	3c01      	subs	r4, #1
   80ae2:	4b17      	ldr	r3, [pc, #92]	; (80b40 <Shell+0x480>)
   80ae4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80ae8:	9300      	str	r3, [sp, #0]
   80aea:	463b      	mov	r3, r7
   80aec:	4915      	ldr	r1, [pc, #84]	; (80b44 <Shell+0x484>)
   80aee:	4630      	mov	r0, r6
   80af0:	47a8      	blx	r5
   80af2:	e7c1      	b.n	80a78 <Shell+0x3b8>
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   80af4:	4b14      	ldr	r3, [pc, #80]	; (80b48 <Shell+0x488>)
   80af6:	681b      	ldr	r3, [r3, #0]
   80af8:	200e      	movs	r0, #14
   80afa:	4798      	blx	r3
   80afc:	e64d      	b.n	8079a <Shell+0xda>
   80afe:	bf00      	nop
   80b00:	00080d21 	.word	0x00080d21
   80b04:	0008654c 	.word	0x0008654c
   80b08:	000814a7 	.word	0x000814a7
   80b0c:	0008148d 	.word	0x0008148d
   80b10:	000806c1 	.word	0x000806c1
   80b14:	00080f39 	.word	0x00080f39
   80b18:	20071018 	.word	0x20071018
   80b1c:	400e1a60 	.word	0x400e1a60
   80b20:	00080177 	.word	0x00080177
   80b24:	2007139c 	.word	0x2007139c
   80b28:	00086524 	.word	0x00086524
   80b2c:	00081b79 	.word	0x00081b79
   80b30:	00080265 	.word	0x00080265
   80b34:	51eb851f 	.word	0x51eb851f
   80b38:	0008061d 	.word	0x0008061d
   80b3c:	2007053c 	.word	0x2007053c
   80b40:	20070558 	.word	0x20070558
   80b44:	00086538 	.word	0x00086538
   80b48:	20070538 	.word	0x20070538

00080b4c <_cmd_set>:


uint32_t u1, u2, u3, u4;

void _cmd_set(uint32_t sc, void* pParam)
{
   80b4c:	b510      	push	{r4, lr}
   80b4e:	b082      	sub	sp, #8
   80b50:	4608      	mov	r0, r1
	uint16_t crc;
#define pToken sc
	pToken = (uint32_t)strtok(pParam, " \r\n");
   80b52:	4940      	ldr	r1, [pc, #256]	; (80c54 <_cmd_set+0x108>)
   80b54:	4b40      	ldr	r3, [pc, #256]	; (80c58 <_cmd_set+0x10c>)
   80b56:	4798      	blx	r3
	if(pToken)
   80b58:	b908      	cbnz	r0, 80b5e <_cmd_set+0x12>
#undef pToken
	}
	


}
   80b5a:	b002      	add	sp, #8
   80b5c:	bd10      	pop	{r4, pc}
   80b5e:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   80b60:	4b3e      	ldr	r3, [pc, #248]	; (80c5c <_cmd_set+0x110>)
   80b62:	4798      	blx	r3
   80b64:	4601      	mov	r1, r0
   80b66:	4620      	mov	r0, r4
   80b68:	4b3d      	ldr	r3, [pc, #244]	; (80c60 <_cmd_set+0x114>)
   80b6a:	4798      	blx	r3
   80b6c:	b282      	uxth	r2, r0
		switch(crc)
   80b6e:	f247 3327 	movw	r3, #29479	; 0x7327
   80b72:	429a      	cmp	r2, r3
   80b74:	d00d      	beq.n	80b92 <_cmd_set+0x46>
   80b76:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   80b7a:	429a      	cmp	r2, r3
   80b7c:	d034      	beq.n	80be8 <_cmd_set+0x9c>
			sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80b7e:	4c39      	ldr	r4, [pc, #228]	; (80c64 <_cmd_set+0x118>)
   80b80:	4939      	ldr	r1, [pc, #228]	; (80c68 <_cmd_set+0x11c>)
   80b82:	4620      	mov	r0, r4
   80b84:	4b39      	ldr	r3, [pc, #228]	; (80c6c <_cmd_set+0x120>)
   80b86:	4798      	blx	r3
			Putstr(buf);
   80b88:	4621      	mov	r1, r4
   80b8a:	2067      	movs	r0, #103	; 0x67
   80b8c:	4b38      	ldr	r3, [pc, #224]	; (80c70 <_cmd_set+0x124>)
   80b8e:	4798      	blx	r3
}
   80b90:	e7e3      	b.n	80b5a <_cmd_set+0xe>
			pToken = strtok(NULL, " : \r\n");
   80b92:	4938      	ldr	r1, [pc, #224]	; (80c74 <_cmd_set+0x128>)
   80b94:	2000      	movs	r0, #0
   80b96:	4b30      	ldr	r3, [pc, #192]	; (80c58 <_cmd_set+0x10c>)
   80b98:	4798      	blx	r3
			if(pToken) hh = atoi(pToken);
   80b9a:	b9b0      	cbnz	r0, 80bca <_cmd_set+0x7e>
			pToken = strtok(NULL, " : \r\n");
   80b9c:	4935      	ldr	r1, [pc, #212]	; (80c74 <_cmd_set+0x128>)
   80b9e:	2000      	movs	r0, #0
   80ba0:	4b2d      	ldr	r3, [pc, #180]	; (80c58 <_cmd_set+0x10c>)
   80ba2:	4798      	blx	r3
			if(pToken) mn = atoi(pToken);
   80ba4:	b9b0      	cbnz	r0, 80bd4 <_cmd_set+0x88>
			pToken = strtok(NULL, " : \r\n");
   80ba6:	4933      	ldr	r1, [pc, #204]	; (80c74 <_cmd_set+0x128>)
   80ba8:	2000      	movs	r0, #0
   80baa:	4b2b      	ldr	r3, [pc, #172]	; (80c58 <_cmd_set+0x10c>)
   80bac:	4798      	blx	r3
			if(pToken) sec = atoi(pToken);
   80bae:	b9b0      	cbnz	r0, 80bde <_cmd_set+0x92>
			rtc_set_time(RTC, hh, mn, sec);
   80bb0:	4b31      	ldr	r3, [pc, #196]	; (80c78 <_cmd_set+0x12c>)
   80bb2:	681b      	ldr	r3, [r3, #0]
   80bb4:	4a31      	ldr	r2, [pc, #196]	; (80c7c <_cmd_set+0x130>)
   80bb6:	6812      	ldr	r2, [r2, #0]
   80bb8:	4931      	ldr	r1, [pc, #196]	; (80c80 <_cmd_set+0x134>)
   80bba:	6809      	ldr	r1, [r1, #0]
   80bbc:	4831      	ldr	r0, [pc, #196]	; (80c84 <_cmd_set+0x138>)
   80bbe:	4c32      	ldr	r4, [pc, #200]	; (80c88 <_cmd_set+0x13c>)
   80bc0:	47a0      	blx	r4
			gpio_set_pin_high(PIO_PA16_IDX);
   80bc2:	2010      	movs	r0, #16
   80bc4:	4b31      	ldr	r3, [pc, #196]	; (80c8c <_cmd_set+0x140>)
   80bc6:	4798      	blx	r3
			break;
   80bc8:	e7c7      	b.n	80b5a <_cmd_set+0xe>
			if(pToken) hh = atoi(pToken);
   80bca:	4b31      	ldr	r3, [pc, #196]	; (80c90 <_cmd_set+0x144>)
   80bcc:	4798      	blx	r3
   80bce:	4b2c      	ldr	r3, [pc, #176]	; (80c80 <_cmd_set+0x134>)
   80bd0:	6018      	str	r0, [r3, #0]
   80bd2:	e7e3      	b.n	80b9c <_cmd_set+0x50>
			if(pToken) mn = atoi(pToken);
   80bd4:	4b2e      	ldr	r3, [pc, #184]	; (80c90 <_cmd_set+0x144>)
   80bd6:	4798      	blx	r3
   80bd8:	4b28      	ldr	r3, [pc, #160]	; (80c7c <_cmd_set+0x130>)
   80bda:	6018      	str	r0, [r3, #0]
   80bdc:	e7e3      	b.n	80ba6 <_cmd_set+0x5a>
			if(pToken) sec = atoi(pToken);
   80bde:	4b2c      	ldr	r3, [pc, #176]	; (80c90 <_cmd_set+0x144>)
   80be0:	4798      	blx	r3
   80be2:	4b25      	ldr	r3, [pc, #148]	; (80c78 <_cmd_set+0x12c>)
   80be4:	6018      	str	r0, [r3, #0]
   80be6:	e7e3      	b.n	80bb0 <_cmd_set+0x64>
			pToken = strtok(NULL, " : \r\n");
   80be8:	4922      	ldr	r1, [pc, #136]	; (80c74 <_cmd_set+0x128>)
   80bea:	2000      	movs	r0, #0
   80bec:	4b1a      	ldr	r3, [pc, #104]	; (80c58 <_cmd_set+0x10c>)
   80bee:	4798      	blx	r3
			if(pToken) yr = atoi(pToken);
   80bf0:	b9d8      	cbnz	r0, 80c2a <_cmd_set+0xde>
			pToken = strtok(NULL, " : \r\n");
   80bf2:	4920      	ldr	r1, [pc, #128]	; (80c74 <_cmd_set+0x128>)
   80bf4:	2000      	movs	r0, #0
   80bf6:	4b18      	ldr	r3, [pc, #96]	; (80c58 <_cmd_set+0x10c>)
   80bf8:	4798      	blx	r3
			if(pToken) mm = atoi(pToken);
   80bfa:	b9d8      	cbnz	r0, 80c34 <_cmd_set+0xe8>
			pToken = strtok(NULL, " : \r\n");
   80bfc:	491d      	ldr	r1, [pc, #116]	; (80c74 <_cmd_set+0x128>)
   80bfe:	2000      	movs	r0, #0
   80c00:	4b15      	ldr	r3, [pc, #84]	; (80c58 <_cmd_set+0x10c>)
   80c02:	4798      	blx	r3
			if(pToken) dd = atoi(pToken);
   80c04:	b9d8      	cbnz	r0, 80c3e <_cmd_set+0xf2>
			pToken = strtok(NULL, " : \r\n");
   80c06:	491b      	ldr	r1, [pc, #108]	; (80c74 <_cmd_set+0x128>)
   80c08:	2000      	movs	r0, #0
   80c0a:	4b13      	ldr	r3, [pc, #76]	; (80c58 <_cmd_set+0x10c>)
   80c0c:	4798      	blx	r3
			if(pToken) wk = atoi(pToken);
   80c0e:	b9d8      	cbnz	r0, 80c48 <_cmd_set+0xfc>
			rtc_set_date(RTC, yr, mm, dd, wk);
   80c10:	4b19      	ldr	r3, [pc, #100]	; (80c78 <_cmd_set+0x12c>)
   80c12:	681b      	ldr	r3, [r3, #0]
   80c14:	4a19      	ldr	r2, [pc, #100]	; (80c7c <_cmd_set+0x130>)
   80c16:	6812      	ldr	r2, [r2, #0]
   80c18:	4919      	ldr	r1, [pc, #100]	; (80c80 <_cmd_set+0x134>)
   80c1a:	6809      	ldr	r1, [r1, #0]
   80c1c:	481d      	ldr	r0, [pc, #116]	; (80c94 <_cmd_set+0x148>)
   80c1e:	6800      	ldr	r0, [r0, #0]
   80c20:	9000      	str	r0, [sp, #0]
   80c22:	4818      	ldr	r0, [pc, #96]	; (80c84 <_cmd_set+0x138>)
   80c24:	4c1c      	ldr	r4, [pc, #112]	; (80c98 <_cmd_set+0x14c>)
   80c26:	47a0      	blx	r4
			break;
   80c28:	e797      	b.n	80b5a <_cmd_set+0xe>
			if(pToken) yr = atoi(pToken);
   80c2a:	4b19      	ldr	r3, [pc, #100]	; (80c90 <_cmd_set+0x144>)
   80c2c:	4798      	blx	r3
   80c2e:	4b14      	ldr	r3, [pc, #80]	; (80c80 <_cmd_set+0x134>)
   80c30:	6018      	str	r0, [r3, #0]
   80c32:	e7de      	b.n	80bf2 <_cmd_set+0xa6>
			if(pToken) mm = atoi(pToken);
   80c34:	4b16      	ldr	r3, [pc, #88]	; (80c90 <_cmd_set+0x144>)
   80c36:	4798      	blx	r3
   80c38:	4b10      	ldr	r3, [pc, #64]	; (80c7c <_cmd_set+0x130>)
   80c3a:	6018      	str	r0, [r3, #0]
   80c3c:	e7de      	b.n	80bfc <_cmd_set+0xb0>
			if(pToken) dd = atoi(pToken);
   80c3e:	4b14      	ldr	r3, [pc, #80]	; (80c90 <_cmd_set+0x144>)
   80c40:	4798      	blx	r3
   80c42:	4b0d      	ldr	r3, [pc, #52]	; (80c78 <_cmd_set+0x12c>)
   80c44:	6018      	str	r0, [r3, #0]
   80c46:	e7de      	b.n	80c06 <_cmd_set+0xba>
			if(pToken) wk = atoi(pToken);
   80c48:	4b11      	ldr	r3, [pc, #68]	; (80c90 <_cmd_set+0x144>)
   80c4a:	4798      	blx	r3
   80c4c:	4b11      	ldr	r3, [pc, #68]	; (80c94 <_cmd_set+0x148>)
   80c4e:	6018      	str	r0, [r3, #0]
   80c50:	e7de      	b.n	80c10 <_cmd_set+0xc4>
   80c52:	bf00      	nop
   80c54:	00086508 	.word	0x00086508
   80c58:	00081c21 	.word	0x00081c21
   80c5c:	00081bc5 	.word	0x00081bc5
   80c60:	000804bd 	.word	0x000804bd
   80c64:	2007139c 	.word	0x2007139c
   80c68:	0008650c 	.word	0x0008650c
   80c6c:	00081b79 	.word	0x00081b79
   80c70:	00080d21 	.word	0x00080d21
   80c74:	0008663c 	.word	0x0008663c
   80c78:	20071148 	.word	0x20071148
   80c7c:	2007113c 	.word	0x2007113c
   80c80:	20071140 	.word	0x20071140
   80c84:	400e1a60 	.word	0x400e1a60
   80c88:	000801d1 	.word	0x000801d1
   80c8c:	0008148d 	.word	0x0008148d
   80c90:	00081a85 	.word	0x00081a85
   80c94:	20071144 	.word	0x20071144
   80c98:	000802d9 	.word	0x000802d9

00080c9c <_cmd_show>:

void _cmd_show(uint32_t sc, void* pParam)
 {
   80c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80c9e:	4b1b      	ldr	r3, [pc, #108]	; (80d0c <_cmd_show+0x70>)
   80ca0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	if(ioport_get_pin_level(PIO_PC23_IDX))
   80ca2:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80ca6:	d118      	bne.n	80cda <_cmd_show+0x3e>
		ioport_set_pin_level(PIO_PC23_IDX,0);
		Putstr(buf);
	}
	else
	{
	sprintf(buf, "L'etat de la broche etait bas \r\n");
   80ca8:	4e19      	ldr	r6, [pc, #100]	; (80d10 <_cmd_show+0x74>)
   80caa:	4c1a      	ldr	r4, [pc, #104]	; (80d14 <_cmd_show+0x78>)
   80cac:	f106 0720 	add.w	r7, r6, #32
   80cb0:	4635      	mov	r5, r6
   80cb2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80cb4:	6020      	str	r0, [r4, #0]
   80cb6:	6061      	str	r1, [r4, #4]
   80cb8:	60a2      	str	r2, [r4, #8]
   80cba:	60e3      	str	r3, [r4, #12]
   80cbc:	462e      	mov	r6, r5
   80cbe:	3410      	adds	r4, #16
   80cc0:	42bd      	cmp	r5, r7
   80cc2:	d1f5      	bne.n	80cb0 <_cmd_show+0x14>
   80cc4:	782b      	ldrb	r3, [r5, #0]
   80cc6:	7023      	strb	r3, [r4, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80cc8:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80ccc:	4b0f      	ldr	r3, [pc, #60]	; (80d0c <_cmd_show+0x70>)
   80cce:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(PIO_PC23_IDX,1);
	Putstr(buf);
   80cd0:	4910      	ldr	r1, [pc, #64]	; (80d14 <_cmd_show+0x78>)
   80cd2:	2067      	movs	r0, #103	; 0x67
   80cd4:	4b10      	ldr	r3, [pc, #64]	; (80d18 <_cmd_show+0x7c>)
   80cd6:	4798      	blx	r3
   80cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		sprintf(buf, "L'etat de la broche etait haut \r\n");
   80cda:	4e10      	ldr	r6, [pc, #64]	; (80d1c <_cmd_show+0x80>)
   80cdc:	4c0d      	ldr	r4, [pc, #52]	; (80d14 <_cmd_show+0x78>)
   80cde:	f106 0720 	add.w	r7, r6, #32
   80ce2:	4635      	mov	r5, r6
   80ce4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80ce6:	6020      	str	r0, [r4, #0]
   80ce8:	6061      	str	r1, [r4, #4]
   80cea:	60a2      	str	r2, [r4, #8]
   80cec:	60e3      	str	r3, [r4, #12]
   80cee:	462e      	mov	r6, r5
   80cf0:	3410      	adds	r4, #16
   80cf2:	42bd      	cmp	r5, r7
   80cf4:	d1f5      	bne.n	80ce2 <_cmd_show+0x46>
   80cf6:	882b      	ldrh	r3, [r5, #0]
   80cf8:	8023      	strh	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80cfa:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80cfe:	4b03      	ldr	r3, [pc, #12]	; (80d0c <_cmd_show+0x70>)
   80d00:	635a      	str	r2, [r3, #52]	; 0x34
		Putstr(buf);
   80d02:	4904      	ldr	r1, [pc, #16]	; (80d14 <_cmd_show+0x78>)
   80d04:	2067      	movs	r0, #103	; 0x67
   80d06:	4b04      	ldr	r3, [pc, #16]	; (80d18 <_cmd_show+0x7c>)
   80d08:	4798      	blx	r3
   80d0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80d0c:	400e1200 	.word	0x400e1200
   80d10:	00086668 	.word	0x00086668
   80d14:	2007139c 	.word	0x2007139c
   80d18:	00080d21 	.word	0x00080d21
   80d1c:	00086644 	.word	0x00086644

00080d20 <Shellcom>:
 ////// Nicely shortcuts .............. ///////////////////////
 #define pTxWrite		shellcom.pTxWrite
 #define pTxRead		shellcom.pTxRead
 
 uint32_t Shellcom(uint32_t sc , ...)
 {
   80d20:	b40f      	push	{r0, r1, r2, r3}
   80d22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(sc)
   80d24:	9906      	ldr	r1, [sp, #24]
   80d26:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   80d2a:	2b04      	cmp	r3, #4
   80d2c:	f200 80a2 	bhi.w	80e74 <Shellcom+0x154>
   80d30:	e8df f003 	tbb	[pc, r3]
   80d34:	2376a045 	.word	0x2376a045
   80d38:	03          	.byte	0x03
   80d39:	00          	.byte	0x00
#undef _pStr
		break;
	case SHELLCOM_PUTSTRLEN:
#define _pStr pa1
#define _len  pa2
	while(_len)
   80d3a:	9d08      	ldr	r5, [sp, #32]
   80d3c:	2d00      	cmp	r5, #0
   80d3e:	d06a      	beq.n	80e16 <Shellcom+0xf6>
	{
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80d40:	4c4f      	ldr	r4, [pc, #316]	; (80e80 <Shellcom+0x160>)
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80d42:	4e50      	ldr	r6, [pc, #320]	; (80e84 <Shellcom+0x164>)
   80d44:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80d48:	6823      	ldr	r3, [r4, #0]
   80d4a:	1c5a      	adds	r2, r3, #1
   80d4c:	6022      	str	r2, [r4, #0]
   80d4e:	9a07      	ldr	r2, [sp, #28]
   80d50:	1c51      	adds	r1, r2, #1
   80d52:	9107      	str	r1, [sp, #28]
   80d54:	7812      	ldrb	r2, [r2, #0]
   80d56:	701a      	strb	r2, [r3, #0]
   80d58:	3d01      	subs	r5, #1
   80d5a:	9508      	str	r5, [sp, #32]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80d5c:	6823      	ldr	r3, [r4, #0]
   80d5e:	42b3      	cmp	r3, r6
   80d60:	bf28      	it	cs
   80d62:	6027      	strcs	r7, [r4, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80d64:	6822      	ldr	r2, [r4, #0]
   80d66:	6863      	ldr	r3, [r4, #4]
   80d68:	429a      	cmp	r2, r3
   80d6a:	d07d      	beq.n	80e68 <Shellcom+0x148>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80d6c:	2102      	movs	r1, #2
   80d6e:	4846      	ldr	r0, [pc, #280]	; (80e88 <Shellcom+0x168>)
   80d70:	4b46      	ldr	r3, [pc, #280]	; (80e8c <Shellcom+0x16c>)
   80d72:	4798      	blx	r3
	while(_len)
   80d74:	2d00      	cmp	r5, #0
   80d76:	d1e7      	bne.n	80d48 <Shellcom+0x28>
   80d78:	e04d      	b.n	80e16 <Shellcom+0xf6>
		while(*(char*)_pStr)
   80d7a:	9d07      	ldr	r5, [sp, #28]
   80d7c:	462a      	mov	r2, r5
   80d7e:	782b      	ldrb	r3, [r5, #0]
   80d80:	2b00      	cmp	r3, #0
   80d82:	d048      	beq.n	80e16 <Shellcom+0xf6>
   80d84:	3501      	adds	r5, #1
			*pTxWrite++ = *(char*)_pStr++;
   80d86:	4c3e      	ldr	r4, [pc, #248]	; (80e80 <Shellcom+0x160>)
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80d88:	4e3e      	ldr	r6, [pc, #248]	; (80e84 <Shellcom+0x164>)
   80d8a:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
			*pTxWrite++ = *(char*)_pStr++;
   80d8e:	6823      	ldr	r3, [r4, #0]
   80d90:	1c59      	adds	r1, r3, #1
   80d92:	6021      	str	r1, [r4, #0]
   80d94:	9507      	str	r5, [sp, #28]
   80d96:	7812      	ldrb	r2, [r2, #0]
   80d98:	701a      	strb	r2, [r3, #0]
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80d9a:	6823      	ldr	r3, [r4, #0]
   80d9c:	42b3      	cmp	r3, r6
   80d9e:	bf28      	it	cs
   80da0:	6027      	strcs	r7, [r4, #0]
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80da2:	6822      	ldr	r2, [r4, #0]
   80da4:	6863      	ldr	r3, [r4, #4]
   80da6:	429a      	cmp	r2, r3
   80da8:	d058      	beq.n	80e5c <Shellcom+0x13c>
			usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80daa:	2102      	movs	r1, #2
   80dac:	4836      	ldr	r0, [pc, #216]	; (80e88 <Shellcom+0x168>)
   80dae:	4b37      	ldr	r3, [pc, #220]	; (80e8c <Shellcom+0x16c>)
   80db0:	4798      	blx	r3
		while(*(char*)_pStr)
   80db2:	462a      	mov	r2, r5
   80db4:	f815 3b01 	ldrb.w	r3, [r5], #1
   80db8:	2b00      	cmp	r3, #0
   80dba:	d1e8      	bne.n	80d8e <Shellcom+0x6e>
   80dbc:	e02b      	b.n	80e16 <Shellcom+0xf6>
		pTxWrite = pTxRead = shellcomTxBuf;
   80dbe:	4b30      	ldr	r3, [pc, #192]	; (80e80 <Shellcom+0x160>)
   80dc0:	4a33      	ldr	r2, [pc, #204]	; (80e90 <Shellcom+0x170>)
   80dc2:	605a      	str	r2, [r3, #4]
   80dc4:	601a      	str	r2, [r3, #0]
   80dc6:	2011      	movs	r0, #17
   80dc8:	4c32      	ldr	r4, [pc, #200]	; (80e94 <Shellcom+0x174>)
   80dca:	47a0      	blx	r4
		usart_init_rs232(USART_SERIAL, &usart_console_settings,	sysclk_get_cpu_hz());
   80dcc:	4d2e      	ldr	r5, [pc, #184]	; (80e88 <Shellcom+0x168>)
   80dce:	4a32      	ldr	r2, [pc, #200]	; (80e98 <Shellcom+0x178>)
   80dd0:	4932      	ldr	r1, [pc, #200]	; (80e9c <Shellcom+0x17c>)
   80dd2:	4628      	mov	r0, r5
   80dd4:	4b32      	ldr	r3, [pc, #200]	; (80ea0 <Shellcom+0x180>)
   80dd6:	4798      	blx	r3
		gpio_configure_pin(USART_SERIAL_TXD_IDX,USART_SERIAL_TXD_FLAGS);
   80dd8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80ddc:	200b      	movs	r0, #11
   80dde:	4e31      	ldr	r6, [pc, #196]	; (80ea4 <Shellcom+0x184>)
   80de0:	47b0      	blx	r6
		gpio_configure_pin(USART_SERIAL_RXD_IDX,USART_SERIAL_RXD_FLAGS);
   80de2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80de6:	200a      	movs	r0, #10
   80de8:	47b0      	blx	r6
		usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
   80dea:	2101      	movs	r1, #1
   80dec:	4628      	mov	r0, r5
   80dee:	4b27      	ldr	r3, [pc, #156]	; (80e8c <Shellcom+0x16c>)
   80df0:	4798      	blx	r3
   80df2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80df6:	4b2c      	ldr	r3, [pc, #176]	; (80ea8 <Shellcom+0x188>)
   80df8:	601a      	str	r2, [r3, #0]
		usart_enable_tx(USART_SERIAL);
   80dfa:	4628      	mov	r0, r5
   80dfc:	4b2b      	ldr	r3, [pc, #172]	; (80eac <Shellcom+0x18c>)
   80dfe:	4798      	blx	r3
		usart_enable_rx(USART_SERIAL);
   80e00:	4628      	mov	r0, r5
   80e02:	4b2b      	ldr	r3, [pc, #172]	; (80eb0 <Shellcom+0x190>)
   80e04:	4798      	blx	r3
   80e06:	200b      	movs	r0, #11
   80e08:	47a0      	blx	r4
   80e0a:	200c      	movs	r0, #12
   80e0c:	47a0      	blx	r4
   80e0e:	200d      	movs	r0, #13
   80e10:	47a0      	blx	r4
   80e12:	200e      	movs	r0, #14
   80e14:	47a0      	blx	r4
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80e16:	2000      	movs	r0, #0
   80e18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80e1c:	b004      	add	sp, #16
   80e1e:	4770      	bx	lr
		*pTxWrite++ = _ch;
   80e20:	4b17      	ldr	r3, [pc, #92]	; (80e80 <Shellcom+0x160>)
   80e22:	681a      	ldr	r2, [r3, #0]
   80e24:	1c51      	adds	r1, r2, #1
   80e26:	6019      	str	r1, [r3, #0]
   80e28:	9907      	ldr	r1, [sp, #28]
   80e2a:	7011      	strb	r1, [r2, #0]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80e2c:	681a      	ldr	r2, [r3, #0]
   80e2e:	4b15      	ldr	r3, [pc, #84]	; (80e84 <Shellcom+0x164>)
   80e30:	429a      	cmp	r2, r3
   80e32:	d303      	bcc.n	80e3c <Shellcom+0x11c>
   80e34:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80e38:	4b11      	ldr	r3, [pc, #68]	; (80e80 <Shellcom+0x160>)
   80e3a:	601a      	str	r2, [r3, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80e3c:	4b10      	ldr	r3, [pc, #64]	; (80e80 <Shellcom+0x160>)
   80e3e:	681a      	ldr	r2, [r3, #0]
   80e40:	685b      	ldr	r3, [r3, #4]
   80e42:	429a      	cmp	r2, r3
   80e44:	d004      	beq.n	80e50 <Shellcom+0x130>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80e46:	2102      	movs	r1, #2
   80e48:	480f      	ldr	r0, [pc, #60]	; (80e88 <Shellcom+0x168>)
   80e4a:	4b10      	ldr	r3, [pc, #64]	; (80e8c <Shellcom+0x16c>)
   80e4c:	4798      	blx	r3
		break;
   80e4e:	e7e2      	b.n	80e16 <Shellcom+0xf6>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80e50:	4b18      	ldr	r3, [pc, #96]	; (80eb4 <Shellcom+0x194>)
   80e52:	681b      	ldr	r3, [r3, #0]
   80e54:	2166      	movs	r1, #102	; 0x66
   80e56:	2017      	movs	r0, #23
   80e58:	4798      	blx	r3
   80e5a:	e7f4      	b.n	80e46 <Shellcom+0x126>
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80e5c:	4b15      	ldr	r3, [pc, #84]	; (80eb4 <Shellcom+0x194>)
   80e5e:	681b      	ldr	r3, [r3, #0]
   80e60:	2167      	movs	r1, #103	; 0x67
   80e62:	2017      	movs	r0, #23
   80e64:	4798      	blx	r3
   80e66:	e7a0      	b.n	80daa <Shellcom+0x8a>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80e68:	4b12      	ldr	r3, [pc, #72]	; (80eb4 <Shellcom+0x194>)
   80e6a:	681b      	ldr	r3, [r3, #0]
   80e6c:	2167      	movs	r1, #103	; 0x67
   80e6e:	2017      	movs	r0, #23
   80e70:	4798      	blx	r3
   80e72:	e77b      	b.n	80d6c <Shellcom+0x4c>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
   80e74:	4b0f      	ldr	r3, [pc, #60]	; (80eb4 <Shellcom+0x194>)
   80e76:	681b      	ldr	r3, [r3, #0]
   80e78:	200d      	movs	r0, #13
   80e7a:	4798      	blx	r3
   80e7c:	e7cb      	b.n	80e16 <Shellcom+0xf6>
   80e7e:	bf00      	nop
   80e80:	2007114c 	.word	0x2007114c
   80e84:	20071254 	.word	0x20071254
   80e88:	40098000 	.word	0x40098000
   80e8c:	000804b1 	.word	0x000804b1
   80e90:	20071154 	.word	0x20071154
   80e94:	00081845 	.word	0x00081845
   80e98:	0501bd00 	.word	0x0501bd00
   80e9c:	0008668c 	.word	0x0008668c
   80ea0:	00080451 	.word	0x00080451
   80ea4:	000814e1 	.word	0x000814e1
   80ea8:	e000e100 	.word	0xe000e100
   80eac:	000804a5 	.word	0x000804a5
   80eb0:	000804ab 	.word	0x000804ab
   80eb4:	20070538 	.word	0x20070538

00080eb8 <USART0_Handler>:
	 _SHELL_KBHIT = 1
 };

 
 void USART0_Handler()
 {
   80eb8:	b530      	push	{r4, r5, lr}
   80eba:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
   80ebc:	4817      	ldr	r0, [pc, #92]	; (80f1c <USART0_Handler+0x64>)
   80ebe:	4b18      	ldr	r3, [pc, #96]	; (80f20 <USART0_Handler+0x68>)
   80ec0:	4798      	blx	r3
   80ec2:	4604      	mov	r4, r0

	if(dw_status & US_CSR_RXRDY)
   80ec4:	f010 0f01 	tst.w	r0, #1
   80ec8:	d116      	bne.n	80ef8 <USART0_Handler+0x40>
	{
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
	}

	if(dw_status & US_CSR_TXRDY)
   80eca:	f014 0f02 	tst.w	r4, #2
   80ece:	d011      	beq.n	80ef4 <USART0_Handler+0x3c>
	{
				
		if(pTxRead!=pTxWrite)
   80ed0:	4a14      	ldr	r2, [pc, #80]	; (80f24 <USART0_Handler+0x6c>)
   80ed2:	6853      	ldr	r3, [r2, #4]
   80ed4:	6812      	ldr	r2, [r2, #0]
   80ed6:	4293      	cmp	r3, r2
   80ed8:	d01a      	beq.n	80f10 <USART0_Handler+0x58>
		{
			USART_SERIAL->US_THR = US_THR_TXCHR(*pTxRead++);
   80eda:	1c5a      	adds	r2, r3, #1
   80edc:	4911      	ldr	r1, [pc, #68]	; (80f24 <USART0_Handler+0x6c>)
   80ede:	604a      	str	r2, [r1, #4]
   80ee0:	7819      	ldrb	r1, [r3, #0]
   80ee2:	4b0e      	ldr	r3, [pc, #56]	; (80f1c <USART0_Handler+0x64>)
   80ee4:	61d9      	str	r1, [r3, #28]
			if(pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxRead = shellcomTxBuf;
   80ee6:	4b10      	ldr	r3, [pc, #64]	; (80f28 <USART0_Handler+0x70>)
   80ee8:	429a      	cmp	r2, r3
   80eea:	d303      	bcc.n	80ef4 <USART0_Handler+0x3c>
   80eec:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80ef0:	4b0c      	ldr	r3, [pc, #48]	; (80f24 <USART0_Handler+0x6c>)
   80ef2:	605a      	str	r2, [r3, #4]
		else
		{
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
		}
	}
   80ef4:	b003      	add	sp, #12
   80ef6:	bd30      	pop	{r4, r5, pc}
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
   80ef8:	4b08      	ldr	r3, [pc, #32]	; (80f1c <USART0_Handler+0x64>)
   80efa:	699b      	ldr	r3, [r3, #24]
   80efc:	2200      	movs	r2, #0
   80efe:	9200      	str	r2, [sp, #0]
   80f00:	f3c3 0308 	ubfx	r3, r3, #0, #9
   80f04:	2201      	movs	r2, #1
   80f06:	4909      	ldr	r1, [pc, #36]	; (80f2c <USART0_Handler+0x74>)
   80f08:	2066      	movs	r0, #102	; 0x66
   80f0a:	4d09      	ldr	r5, [pc, #36]	; (80f30 <USART0_Handler+0x78>)
   80f0c:	47a8      	blx	r5
   80f0e:	e7dc      	b.n	80eca <USART0_Handler+0x12>
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80f10:	2102      	movs	r1, #2
   80f12:	4802      	ldr	r0, [pc, #8]	; (80f1c <USART0_Handler+0x64>)
   80f14:	4b07      	ldr	r3, [pc, #28]	; (80f34 <USART0_Handler+0x7c>)
   80f16:	4798      	blx	r3
   80f18:	e7ec      	b.n	80ef4 <USART0_Handler+0x3c>
   80f1a:	bf00      	nop
   80f1c:	40098000 	.word	0x40098000
   80f20:	000804b9 	.word	0x000804b9
   80f24:	2007114c 	.word	0x2007114c
   80f28:	20071254 	.word	0x20071254
   80f2c:	000806c1 	.word	0x000806c1
   80f30:	00080f39 	.word	0x00080f39
   80f34:	000804b5 	.word	0x000804b5

00080f38 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   80f38:	b40f      	push	{r0, r1, r2, r3}
   80f3a:	b5f0      	push	{r4, r5, r6, r7, lr}
   80f3c:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   80f3e:	9908      	ldr	r1, [sp, #32]
   80f40:	2964      	cmp	r1, #100	; 0x64
   80f42:	d024      	beq.n	80f8e <Taskman+0x56>
   80f44:	d917      	bls.n	80f76 <Taskman+0x3e>
   80f46:	2966      	cmp	r1, #102	; 0x66
   80f48:	d067      	beq.n	8101a <Taskman+0xe2>
   80f4a:	2967      	cmp	r1, #103	; 0x67
   80f4c:	f040 80c8 	bne.w	810e0 <Taskman+0x1a8>
#undef _delay
#undef k
		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   80f50:	4a66      	ldr	r2, [pc, #408]	; (810ec <Taskman+0x1b4>)
   80f52:	6853      	ldr	r3, [r2, #4]
   80f54:	6812      	ldr	r2, [r2, #0]
   80f56:	4293      	cmp	r3, r2
   80f58:	d059      	beq.n	8100e <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   80f5a:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   80f5c:	6858      	ldr	r0, [r3, #4]
   80f5e:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   80f60:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   80f62:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   80f64:	4c62      	ldr	r4, [pc, #392]	; (810f0 <Taskman+0x1b8>)
   80f66:	42a3      	cmp	r3, r4
   80f68:	f0c0 80a3 	bcc.w	810b2 <Taskman+0x17a>
   80f6c:	4c61      	ldr	r4, [pc, #388]	; (810f4 <Taskman+0x1bc>)
   80f6e:	4b5f      	ldr	r3, [pc, #380]	; (810ec <Taskman+0x1b4>)
   80f70:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   80f72:	4790      	blx	r2
   80f74:	e04b      	b.n	8100e <Taskman+0xd6>
	switch(sc)
   80f76:	2901      	cmp	r1, #1
   80f78:	f040 80b2 	bne.w	810e0 <Taskman+0x1a8>
		}
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   80f7c:	2002      	movs	r0, #2
   80f7e:	4b5e      	ldr	r3, [pc, #376]	; (810f8 <Taskman+0x1c0>)
   80f80:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80f82:	2500      	movs	r5, #0
   80f84:	9508      	str	r5, [sp, #32]
   80f86:	4c5d      	ldr	r4, [pc, #372]	; (810fc <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   80f88:	462f      	mov	r7, r5
   80f8a:	2666      	movs	r6, #102	; 0x66
   80f8c:	e099      	b.n	810c2 <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   80f8e:	4b57      	ldr	r3, [pc, #348]	; (810ec <Taskman+0x1b4>)
   80f90:	4a58      	ldr	r2, [pc, #352]	; (810f4 <Taskman+0x1bc>)
   80f92:	601a      	str	r2, [r3, #0]
   80f94:	605a      	str	r2, [r3, #4]
   80f96:	4b59      	ldr	r3, [pc, #356]	; (810fc <Taskman+0x1c4>)
   80f98:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   80f9c:	2200      	movs	r2, #0
   80f9e:	60da      	str	r2, [r3, #12]
   80fa0:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80fa2:	428b      	cmp	r3, r1
   80fa4:	d1fb      	bne.n	80f9e <Taskman+0x66>
		base->PIO_PUDR = mask;
   80fa6:	4b56      	ldr	r3, [pc, #344]	; (81100 <Taskman+0x1c8>)
   80fa8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   80fac:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_MDDR = mask;
   80fae:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   80fb0:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   80fb2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   80fb6:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80fb8:	4311      	orrs	r1, r2
   80fba:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80fbc:	605a      	str	r2, [r3, #4]
   80fbe:	201b      	movs	r0, #27
   80fc0:	4b50      	ldr	r3, [pc, #320]	; (81104 <Taskman+0x1cc>)
   80fc2:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   80fc4:	4c50      	ldr	r4, [pc, #320]	; (81108 <Taskman+0x1d0>)
   80fc6:	4a51      	ldr	r2, [pc, #324]	; (8110c <Taskman+0x1d4>)
   80fc8:	2100      	movs	r1, #0
   80fca:	4620      	mov	r0, r4
   80fcc:	4b50      	ldr	r3, [pc, #320]	; (81110 <Taskman+0x1d8>)
   80fce:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   80fd0:	f44f 7224 	mov.w	r2, #656	; 0x290
   80fd4:	2100      	movs	r1, #0
   80fd6:	4620      	mov	r0, r4
   80fd8:	4b4e      	ldr	r3, [pc, #312]	; (81114 <Taskman+0x1dc>)
   80fda:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   80fdc:	f240 12cb 	movw	r2, #459	; 0x1cb
   80fe0:	2100      	movs	r1, #0
   80fe2:	4620      	mov	r0, r4
   80fe4:	4b4c      	ldr	r3, [pc, #304]	; (81118 <Taskman+0x1e0>)
   80fe6:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   80fe8:	2100      	movs	r1, #0
   80fea:	4620      	mov	r0, r4
   80fec:	4b4b      	ldr	r3, [pc, #300]	; (8111c <Taskman+0x1e4>)
   80fee:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   80ff0:	4b4b      	ldr	r3, [pc, #300]	; (81120 <Taskman+0x1e8>)
   80ff2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80ff6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   80ffa:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   80ffe:	2100      	movs	r1, #0
   81000:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81004:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   81006:	2204      	movs	r2, #4
   81008:	4620      	mov	r0, r4
   8100a:	4b46      	ldr	r3, [pc, #280]	; (81124 <Taskman+0x1ec>)
   8100c:	4798      	blx	r3
 }
   8100e:	2000      	movs	r0, #0
   81010:	b003      	add	sp, #12
   81012:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81016:	b004      	add	sp, #16
   81018:	4770      	bx	lr
		cpu_irq_enter_critical();
   8101a:	4b43      	ldr	r3, [pc, #268]	; (81128 <Taskman+0x1f0>)
   8101c:	4798      	blx	r3
		if(_delay)
   8101e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81020:	b34d      	cbz	r5, 81076 <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   81022:	2300      	movs	r3, #0
   81024:	9308      	str	r3, [sp, #32]
   81026:	4b35      	ldr	r3, [pc, #212]	; (810fc <Taskman+0x1c4>)
   81028:	68db      	ldr	r3, [r3, #12]
   8102a:	b1ab      	cbz	r3, 81058 <Taskman+0x120>
   8102c:	2301      	movs	r3, #1
   8102e:	9308      	str	r3, [sp, #32]
   81030:	4a32      	ldr	r2, [pc, #200]	; (810fc <Taskman+0x1c4>)
   81032:	2000      	movs	r0, #0
   81034:	461c      	mov	r4, r3
   81036:	69d1      	ldr	r1, [r2, #28]
   81038:	b159      	cbz	r1, 81052 <Taskman+0x11a>
   8103a:	3301      	adds	r3, #1
   8103c:	3210      	adds	r2, #16
   8103e:	4620      	mov	r0, r4
   81040:	2b0a      	cmp	r3, #10
   81042:	d1f8      	bne.n	81036 <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   81044:	4b39      	ldr	r3, [pc, #228]	; (8112c <Taskman+0x1f4>)
   81046:	681b      	ldr	r3, [r3, #0]
   81048:	2100      	movs	r1, #0
   8104a:	2016      	movs	r0, #22
   8104c:	4798      	blx	r3
   8104e:	230a      	movs	r3, #10
   81050:	e002      	b.n	81058 <Taskman+0x120>
   81052:	b970      	cbnz	r0, 81072 <Taskman+0x13a>
   81054:	2b0a      	cmp	r3, #10
   81056:	d0f5      	beq.n	81044 <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   81058:	4928      	ldr	r1, [pc, #160]	; (810fc <Taskman+0x1c4>)
   8105a:	011b      	lsls	r3, r3, #4
   8105c:	18ca      	adds	r2, r1, r3
   8105e:	9809      	ldr	r0, [sp, #36]	; 0x24
   81060:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   81062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81064:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   81066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81068:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   8106a:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   8106c:	4b30      	ldr	r3, [pc, #192]	; (81130 <Taskman+0x1f8>)
   8106e:	4798      	blx	r3
		break;
   81070:	e7cd      	b.n	8100e <Taskman+0xd6>
   81072:	9308      	str	r3, [sp, #32]
   81074:	e7ee      	b.n	81054 <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   81076:	4b1d      	ldr	r3, [pc, #116]	; (810ec <Taskman+0x1b4>)
   81078:	681a      	ldr	r2, [r3, #0]
   8107a:	9909      	ldr	r1, [sp, #36]	; 0x24
   8107c:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   8107e:	681b      	ldr	r3, [r3, #0]
   81080:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   81082:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   81084:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   81086:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   81088:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   8108a:	4a19      	ldr	r2, [pc, #100]	; (810f0 <Taskman+0x1b8>)
   8108c:	4293      	cmp	r3, r2
   8108e:	d20c      	bcs.n	810aa <Taskman+0x172>
			taskman.pPush++;
   81090:	4a16      	ldr	r2, [pc, #88]	; (810ec <Taskman+0x1b4>)
   81092:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   81094:	4b15      	ldr	r3, [pc, #84]	; (810ec <Taskman+0x1b4>)
   81096:	681a      	ldr	r2, [r3, #0]
   81098:	685b      	ldr	r3, [r3, #4]
   8109a:	429a      	cmp	r2, r3
   8109c:	d1e6      	bne.n	8106c <Taskman+0x134>
   8109e:	4b23      	ldr	r3, [pc, #140]	; (8112c <Taskman+0x1f4>)
   810a0:	681b      	ldr	r3, [r3, #0]
   810a2:	2100      	movs	r1, #0
   810a4:	2015      	movs	r0, #21
   810a6:	4798      	blx	r3
   810a8:	e7e0      	b.n	8106c <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   810aa:	4a12      	ldr	r2, [pc, #72]	; (810f4 <Taskman+0x1bc>)
   810ac:	4b0f      	ldr	r3, [pc, #60]	; (810ec <Taskman+0x1b4>)
   810ae:	601a      	str	r2, [r3, #0]
   810b0:	e7f0      	b.n	81094 <Taskman+0x15c>
			taskman.pPop++;
   810b2:	4c0e      	ldr	r4, [pc, #56]	; (810ec <Taskman+0x1b4>)
   810b4:	6063      	str	r3, [r4, #4]
   810b6:	e75c      	b.n	80f72 <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   810b8:	3501      	adds	r5, #1
   810ba:	9508      	str	r5, [sp, #32]
   810bc:	3410      	adds	r4, #16
   810be:	2d0a      	cmp	r5, #10
   810c0:	d0a5      	beq.n	8100e <Taskman+0xd6>
			if(dTasks[k].delay)
   810c2:	68e3      	ldr	r3, [r4, #12]
   810c4:	2b00      	cmp	r3, #0
   810c6:	d0f7      	beq.n	810b8 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   810c8:	3b01      	subs	r3, #1
   810ca:	60e3      	str	r3, [r4, #12]
   810cc:	2b00      	cmp	r3, #0
   810ce:	d1f3      	bne.n	810b8 <Taskman+0x180>
					PushTask(
   810d0:	68a3      	ldr	r3, [r4, #8]
   810d2:	6862      	ldr	r2, [r4, #4]
   810d4:	6821      	ldr	r1, [r4, #0]
   810d6:	9700      	str	r7, [sp, #0]
   810d8:	4630      	mov	r0, r6
   810da:	f7ff ff2d 	bl	80f38 <Taskman>
   810de:	e7eb      	b.n	810b8 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   810e0:	4b12      	ldr	r3, [pc, #72]	; (8112c <Taskman+0x1f4>)
   810e2:	681b      	ldr	r3, [r3, #0]
   810e4:	200b      	movs	r0, #11
   810e6:	4798      	blx	r3
	return 0;
   810e8:	e791      	b.n	8100e <Taskman+0xd6>
   810ea:	bf00      	nop
   810ec:	200712f4 	.word	0x200712f4
   810f0:	200712f4 	.word	0x200712f4
   810f4:	20071254 	.word	0x20071254
   810f8:	000814c1 	.word	0x000814c1
   810fc:	200712fc 	.word	0x200712fc
   81100:	400e1000 	.word	0x400e1000
   81104:	00081845 	.word	0x00081845
   81108:	40080000 	.word	0x40080000
   8110c:	0009c003 	.word	0x0009c003
   81110:	00080391 	.word	0x00080391
   81114:	000803b9 	.word	0x000803b9
   81118:	000803b1 	.word	0x000803b1
   8111c:	000803a9 	.word	0x000803a9
   81120:	e000e100 	.word	0xe000e100
   81124:	000803c1 	.word	0x000803c1
   81128:	000812b5 	.word	0x000812b5
   8112c:	20070538 	.word	0x20070538
   81130:	000812f1 	.word	0x000812f1

00081134 <TC0_Handler>:
 {
   81134:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   81136:	2100      	movs	r1, #0
   81138:	4803      	ldr	r0, [pc, #12]	; (81148 <TC0_Handler+0x14>)
   8113a:	4b04      	ldr	r3, [pc, #16]	; (8114c <TC0_Handler+0x18>)
   8113c:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   8113e:	2001      	movs	r0, #1
   81140:	4b03      	ldr	r3, [pc, #12]	; (81150 <TC0_Handler+0x1c>)
   81142:	4798      	blx	r3
   81144:	bd08      	pop	{r3, pc}
   81146:	bf00      	nop
   81148:	40080000 	.word	0x40080000
   8114c:	000803c9 	.word	0x000803c9
   81150:	00080f39 	.word	0x00080f39

00081154 <Appli>:
 const uint32_t flashSequApp[]={
	 100,500,100,500,100,2200,0
 };

uint32_t Appli(uint32_t sc,...)
{
   81154:	b40f      	push	{r0, r1, r2, r3}
   81156:	b510      	push	{r4, lr}
   81158:	b082      	sub	sp, #8
	switch(sc)
   8115a:	9904      	ldr	r1, [sp, #16]
   8115c:	2964      	cmp	r1, #100	; 0x64
   8115e:	d006      	beq.n	8116e <Appli+0x1a>
   81160:	2966      	cmp	r1, #102	; 0x66
   81162:	d01b      	beq.n	8119c <Appli+0x48>
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
#undef k
		break;

	default:
		Error(ERR_APPLI_SWITHC_BAD_SC, sc);
   81164:	4b1c      	ldr	r3, [pc, #112]	; (811d8 <Appli+0x84>)
   81166:	681b      	ldr	r3, [r3, #0]
   81168:	200f      	movs	r0, #15
   8116a:	4798      	blx	r3
		break;
   8116c:	e011      	b.n	81192 <Appli+0x3e>
		gpio_configure_pin(PIO_PC1_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   8116e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81172:	2041      	movs	r0, #65	; 0x41
   81174:	4c19      	ldr	r4, [pc, #100]	; (811dc <Appli+0x88>)
   81176:	47a0      	blx	r4
		gpio_configure_pin(PIO_PC2_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   81178:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8117c:	2042      	movs	r0, #66	; 0x42
   8117e:	47a0      	blx	r4
		PushTask(Appli, APPLI_RUN, 0, 800);
   81180:	f44f 7348 	mov.w	r3, #800	; 0x320
   81184:	9300      	str	r3, [sp, #0]
   81186:	2300      	movs	r3, #0
   81188:	2266      	movs	r2, #102	; 0x66
   8118a:	4915      	ldr	r1, [pc, #84]	; (811e0 <Appli+0x8c>)
   8118c:	4610      	mov	r0, r2
   8118e:	4c15      	ldr	r4, [pc, #84]	; (811e4 <Appli+0x90>)
   81190:	47a0      	blx	r4
	}
   81192:	b002      	add	sp, #8
   81194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81198:	b004      	add	sp, #16
   8119a:	4770      	bx	lr
		k++; if(flashSequApp[k]==0) k=0;
   8119c:	9c05      	ldr	r4, [sp, #20]
   8119e:	3401      	adds	r4, #1
   811a0:	9405      	str	r4, [sp, #20]
   811a2:	4b11      	ldr	r3, [pc, #68]	; (811e8 <Appli+0x94>)
   811a4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   811a8:	b133      	cbz	r3, 811b8 <Appli+0x64>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   811aa:	f014 0f01 	tst.w	r4, #1
   811ae:	d004      	beq.n	811ba <Appli+0x66>
		else gpio_set_pin_low(PIO_PC1_IDX);
   811b0:	2041      	movs	r0, #65	; 0x41
   811b2:	4b0e      	ldr	r3, [pc, #56]	; (811ec <Appli+0x98>)
   811b4:	4798      	blx	r3
   811b6:	e003      	b.n	811c0 <Appli+0x6c>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   811b8:	2400      	movs	r4, #0
   811ba:	2041      	movs	r0, #65	; 0x41
   811bc:	4b0c      	ldr	r3, [pc, #48]	; (811f0 <Appli+0x9c>)
   811be:	4798      	blx	r3
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
   811c0:	4b09      	ldr	r3, [pc, #36]	; (811e8 <Appli+0x94>)
   811c2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   811c6:	9300      	str	r3, [sp, #0]
   811c8:	4623      	mov	r3, r4
   811ca:	2266      	movs	r2, #102	; 0x66
   811cc:	4904      	ldr	r1, [pc, #16]	; (811e0 <Appli+0x8c>)
   811ce:	4610      	mov	r0, r2
   811d0:	4c04      	ldr	r4, [pc, #16]	; (811e4 <Appli+0x90>)
   811d2:	47a0      	blx	r4
		break;
   811d4:	e7dd      	b.n	81192 <Appli+0x3e>
   811d6:	bf00      	nop
   811d8:	20070538 	.word	0x20070538
   811dc:	000814e1 	.word	0x000814e1
   811e0:	00081155 	.word	0x00081155
   811e4:	00080f39 	.word	0x00080f39
   811e8:	000866a4 	.word	0x000866a4
   811ec:	000814a7 	.word	0x000814a7
   811f0:	0008148d 	.word	0x0008148d

000811f4 <main>:
void Prompt(uint32_t sc, uint32_t i);

char buf[256];

int main (void)
{
   811f4:	b508      	push	{r3, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   811f6:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   811f8:	f3bf 8f5f 	dmb	sy
	/* Insert system clock initialization code here (sysclk_init()). */
		
	cpu_irq_disable();
   811fc:	4c0d      	ldr	r4, [pc, #52]	; (81234 <main+0x40>)
   811fe:	2300      	movs	r3, #0
   81200:	7023      	strb	r3, [r4, #0]
	sysclk_init();
   81202:	4b0d      	ldr	r3, [pc, #52]	; (81238 <main+0x44>)
   81204:	4798      	blx	r3
	board_init();
   81206:	4b0d      	ldr	r3, [pc, #52]	; (8123c <main+0x48>)
   81208:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());
	//////////////////////////////////////////////////////////////////
	
	Taskman(TASKMAN_NEW);
   8120a:	2064      	movs	r0, #100	; 0x64
   8120c:	4b0c      	ldr	r3, [pc, #48]	; (81240 <main+0x4c>)
   8120e:	4798      	blx	r3
	Shell(SHELL_NEW);
   81210:	2064      	movs	r0, #100	; 0x64
   81212:	4b0c      	ldr	r3, [pc, #48]	; (81244 <main+0x50>)
   81214:	4798      	blx	r3
	Putstr("\r\n\n\tATMEL ATSAM3U STARTED\r\n\n");
   81216:	490c      	ldr	r1, [pc, #48]	; (81248 <main+0x54>)
   81218:	2067      	movs	r0, #103	; 0x67
   8121a:	4b0c      	ldr	r3, [pc, #48]	; (8124c <main+0x58>)
   8121c:	4798      	blx	r3


	//PushTask(Sablier, SABLIER_NEW, 0, 0);
	//PushTask(Prompt, 0, 0, 800);
	
	cpu_irq_enable();
   8121e:	2301      	movs	r3, #1
   81220:	7023      	strb	r3, [r4, #0]
   81222:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81226:	b662      	cpsie	i



	for(;;)
	{
		PopTask();
   81228:	2567      	movs	r5, #103	; 0x67
   8122a:	4c05      	ldr	r4, [pc, #20]	; (81240 <main+0x4c>)
   8122c:	4628      	mov	r0, r5
   8122e:	47a0      	blx	r4
   81230:	e7fc      	b.n	8122c <main+0x38>
   81232:	bf00      	nop
   81234:	20070588 	.word	0x20070588
   81238:	00081251 	.word	0x00081251
   8123c:	0008131d 	.word	0x0008131d
   81240:	00080f39 	.word	0x00080f39
   81244:	000806c1 	.word	0x000806c1
   81248:	000866c0 	.word	0x000866c0
   8124c:	00080d21 	.word	0x00080d21

00081250 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   81250:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   81252:	480e      	ldr	r0, [pc, #56]	; (8128c <sysclk_init+0x3c>)
   81254:	4b0e      	ldr	r3, [pc, #56]	; (81290 <sysclk_init+0x40>)
   81256:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   81258:	213e      	movs	r1, #62	; 0x3e
   8125a:	2000      	movs	r0, #0
   8125c:	4b0d      	ldr	r3, [pc, #52]	; (81294 <sysclk_init+0x44>)
   8125e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   81260:	4c0d      	ldr	r4, [pc, #52]	; (81298 <sysclk_init+0x48>)
   81262:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   81264:	2800      	cmp	r0, #0
   81266:	d0fc      	beq.n	81262 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   81268:	4b0c      	ldr	r3, [pc, #48]	; (8129c <sysclk_init+0x4c>)
   8126a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   8126c:	4a0c      	ldr	r2, [pc, #48]	; (812a0 <sysclk_init+0x50>)
   8126e:	4b0d      	ldr	r3, [pc, #52]	; (812a4 <sysclk_init+0x54>)
   81270:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   81272:	4c0d      	ldr	r4, [pc, #52]	; (812a8 <sysclk_init+0x58>)
   81274:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   81276:	2800      	cmp	r0, #0
   81278:	d0fc      	beq.n	81274 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   8127a:	2010      	movs	r0, #16
   8127c:	4b0b      	ldr	r3, [pc, #44]	; (812ac <sysclk_init+0x5c>)
   8127e:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   81280:	4b0b      	ldr	r3, [pc, #44]	; (812b0 <sysclk_init+0x60>)
   81282:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   81284:	4801      	ldr	r0, [pc, #4]	; (8128c <sysclk_init+0x3c>)
   81286:	4b02      	ldr	r3, [pc, #8]	; (81290 <sysclk_init+0x40>)
   81288:	4798      	blx	r3
   8128a:	bd10      	pop	{r4, pc}
   8128c:	0501bd00 	.word	0x0501bd00
   81290:	200700b1 	.word	0x200700b1
   81294:	000817c1 	.word	0x000817c1
   81298:	00081815 	.word	0x00081815
   8129c:	00081825 	.word	0x00081825
   812a0:	200d3f01 	.word	0x200d3f01
   812a4:	400e0600 	.word	0x400e0600
   812a8:	00081835 	.word	0x00081835
   812ac:	0008175d 	.word	0x0008175d
   812b0:	00081935 	.word	0x00081935

000812b4 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   812b4:	4b0b      	ldr	r3, [pc, #44]	; (812e4 <cpu_irq_enter_critical+0x30>)
   812b6:	681b      	ldr	r3, [r3, #0]
   812b8:	b92b      	cbnz	r3, 812c6 <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   812ba:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   812be:	b13b      	cbz	r3, 812d0 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   812c0:	2200      	movs	r2, #0
   812c2:	4b09      	ldr	r3, [pc, #36]	; (812e8 <cpu_irq_enter_critical+0x34>)
   812c4:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   812c6:	4a07      	ldr	r2, [pc, #28]	; (812e4 <cpu_irq_enter_critical+0x30>)
   812c8:	6813      	ldr	r3, [r2, #0]
   812ca:	3301      	adds	r3, #1
   812cc:	6013      	str	r3, [r2, #0]
   812ce:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   812d0:	b672      	cpsid	i
   812d2:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   812d6:	2200      	movs	r2, #0
   812d8:	4b04      	ldr	r3, [pc, #16]	; (812ec <cpu_irq_enter_critical+0x38>)
   812da:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   812dc:	2201      	movs	r2, #1
   812de:	4b02      	ldr	r3, [pc, #8]	; (812e8 <cpu_irq_enter_critical+0x34>)
   812e0:	701a      	strb	r2, [r3, #0]
   812e2:	e7f0      	b.n	812c6 <cpu_irq_enter_critical+0x12>
   812e4:	20070f64 	.word	0x20070f64
   812e8:	20070f68 	.word	0x20070f68
   812ec:	20070588 	.word	0x20070588

000812f0 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   812f0:	4b07      	ldr	r3, [pc, #28]	; (81310 <cpu_irq_leave_critical+0x20>)
   812f2:	681a      	ldr	r2, [r3, #0]
   812f4:	3a01      	subs	r2, #1
   812f6:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   812f8:	681b      	ldr	r3, [r3, #0]
   812fa:	b943      	cbnz	r3, 8130e <cpu_irq_leave_critical+0x1e>
   812fc:	4b05      	ldr	r3, [pc, #20]	; (81314 <cpu_irq_leave_critical+0x24>)
   812fe:	781b      	ldrb	r3, [r3, #0]
   81300:	b12b      	cbz	r3, 8130e <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   81302:	2201      	movs	r2, #1
   81304:	4b04      	ldr	r3, [pc, #16]	; (81318 <cpu_irq_leave_critical+0x28>)
   81306:	701a      	strb	r2, [r3, #0]
   81308:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8130c:	b662      	cpsie	i
   8130e:	4770      	bx	lr
   81310:	20070f64 	.word	0x20070f64
   81314:	20070f68 	.word	0x20070f68
   81318:	20070588 	.word	0x20070588

0008131c <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   8131c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8131e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   81322:	4b16      	ldr	r3, [pc, #88]	; (8137c <board_init+0x60>)
   81324:	605a      	str	r2, [r3, #4]
   81326:	200b      	movs	r0, #11
   81328:	4c15      	ldr	r4, [pc, #84]	; (81380 <board_init+0x64>)
   8132a:	47a0      	blx	r4
   8132c:	200c      	movs	r0, #12
   8132e:	47a0      	blx	r4
   81330:	200d      	movs	r0, #13
   81332:	47a0      	blx	r4
   81334:	200e      	movs	r0, #14
   81336:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   81338:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8133c:	203b      	movs	r0, #59	; 0x3b
   8133e:	4c11      	ldr	r4, [pc, #68]	; (81384 <board_init+0x68>)
   81340:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   81342:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81346:	2055      	movs	r0, #85	; 0x55
   81348:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8134a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8134e:	2056      	movs	r0, #86	; 0x56
   81350:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   81352:	490d      	ldr	r1, [pc, #52]	; (81388 <board_init+0x6c>)
   81354:	2068      	movs	r0, #104	; 0x68
   81356:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   81358:	490c      	ldr	r1, [pc, #48]	; (8138c <board_init+0x70>)
   8135a:	205c      	movs	r0, #92	; 0x5c
   8135c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8135e:	4a0c      	ldr	r2, [pc, #48]	; (81390 <board_init+0x74>)
   81360:	f44f 7140 	mov.w	r1, #768	; 0x300
   81364:	480b      	ldr	r0, [pc, #44]	; (81394 <board_init+0x78>)
   81366:	4b0c      	ldr	r3, [pc, #48]	; (81398 <board_init+0x7c>)
   81368:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8136a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8136e:	202b      	movs	r0, #43	; 0x2b
   81370:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   81372:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81376:	202a      	movs	r0, #42	; 0x2a
   81378:	47a0      	blx	r4
   8137a:	bd10      	pop	{r4, pc}
   8137c:	400e1a50 	.word	0x400e1a50
   81380:	00081845 	.word	0x00081845
   81384:	000814e1 	.word	0x000814e1
   81388:	28000079 	.word	0x28000079
   8138c:	28000001 	.word	0x28000001
   81390:	08000001 	.word	0x08000001
   81394:	400e0e00 	.word	0x400e0e00
   81398:	000815b1 	.word	0x000815b1

0008139c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
   8139c:	6301      	str	r1, [r0, #48]	; 0x30
   8139e:	4770      	bx	lr

000813a0 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
   813a0:	6341      	str	r1, [r0, #52]	; 0x34
   813a2:	4770      	bx	lr

000813a4 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
   813a4:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
   813a8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
		ul_reg = p_pio->PIO_ODSR;
   813ac:	bf0c      	ite	eq
   813ae:	6b83      	ldreq	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
   813b0:	6bc3      	ldrne	r3, [r0, #60]	; 0x3c
	}

	if ((ul_reg & ul_mask) == 0) {
   813b2:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
   813b4:	bf14      	ite	ne
   813b6:	2001      	movne	r0, #1
   813b8:	2000      	moveq	r0, #0
   813ba:	4770      	bx	lr

000813bc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   813bc:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   813be:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   813c2:	d016      	beq.n	813f2 <pio_set_peripheral+0x36>
   813c4:	d80b      	bhi.n	813de <pio_set_peripheral+0x22>
   813c6:	b149      	cbz	r1, 813dc <pio_set_peripheral+0x20>
   813c8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   813cc:	d105      	bne.n	813da <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   813ce:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   813d0:	6f01      	ldr	r1, [r0, #112]	; 0x70
   813d2:	400b      	ands	r3, r1
   813d4:	ea23 0302 	bic.w	r3, r3, r2
   813d8:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   813da:	6042      	str	r2, [r0, #4]
   813dc:	4770      	bx	lr
	switch (ul_type) {
   813de:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   813e2:	d0fb      	beq.n	813dc <pio_set_peripheral+0x20>
   813e4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   813e8:	d0f8      	beq.n	813dc <pio_set_peripheral+0x20>
   813ea:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   813ee:	d1f4      	bne.n	813da <pio_set_peripheral+0x1e>
   813f0:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   813f2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   813f4:	4313      	orrs	r3, r2
   813f6:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   813f8:	e7ef      	b.n	813da <pio_set_peripheral+0x1e>

000813fa <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   813fa:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   813fc:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   81400:	bf14      	ite	ne
   81402:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81404:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   81406:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8140a:	bf14      	ite	ne
   8140c:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   8140e:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   81410:	f012 0f02 	tst.w	r2, #2
   81414:	d107      	bne.n	81426 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   81416:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8141a:	bf18      	it	ne
   8141c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   81420:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   81422:	6001      	str	r1, [r0, #0]
   81424:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   81426:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8142a:	e7f9      	b.n	81420 <pio_set_input+0x26>

0008142c <pio_set_output>:
{
   8142c:	b410      	push	{r4}
   8142e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   81430:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   81432:	b944      	cbnz	r4, 81446 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   81434:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   81436:	b143      	cbz	r3, 8144a <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   81438:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8143a:	b942      	cbnz	r2, 8144e <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   8143c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   8143e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   81440:	6001      	str	r1, [r0, #0]
}
   81442:	bc10      	pop	{r4}
   81444:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   81446:	6641      	str	r1, [r0, #100]	; 0x64
   81448:	e7f5      	b.n	81436 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   8144a:	6541      	str	r1, [r0, #84]	; 0x54
   8144c:	e7f5      	b.n	8143a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   8144e:	6301      	str	r1, [r0, #48]	; 0x30
   81450:	e7f5      	b.n	8143e <pio_set_output+0x12>

00081452 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
   81452:	f012 0f10 	tst.w	r2, #16
   81456:	d010      	beq.n	8147a <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
   81458:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
   8145c:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
   81460:	bf14      	ite	ne
   81462:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
   81466:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
   8146a:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
   8146e:	bf14      	ite	ne
   81470:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
   81474:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   81478:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
   8147a:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   8147e:	4770      	bx	lr

00081480 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
   81480:	6401      	str	r1, [r0, #64]	; 0x40
   81482:	4770      	bx	lr

00081484 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   81484:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   81486:	4770      	bx	lr

00081488 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   81488:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8148a:	4770      	bx	lr

0008148c <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8148c:	0943      	lsrs	r3, r0, #5
   8148e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81492:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81496:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81498:	f000 001f 	and.w	r0, r0, #31
   8149c:	2201      	movs	r2, #1
   8149e:	fa02 f000 	lsl.w	r0, r2, r0
   814a2:	6318      	str	r0, [r3, #48]	; 0x30
   814a4:	4770      	bx	lr

000814a6 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   814a6:	0943      	lsrs	r3, r0, #5
   814a8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   814ac:	f203 7307 	addw	r3, r3, #1799	; 0x707
   814b0:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   814b2:	f000 001f 	and.w	r0, r0, #31
   814b6:	2201      	movs	r2, #1
   814b8:	fa02 f000 	lsl.w	r0, r2, r0
   814bc:	6358      	str	r0, [r3, #52]	; 0x34
   814be:	4770      	bx	lr

000814c0 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   814c0:	0943      	lsrs	r3, r0, #5
   814c2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   814c6:	f203 7307 	addw	r3, r3, #1799	; 0x707
   814ca:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   814cc:	6b99      	ldr	r1, [r3, #56]	; 0x38
   814ce:	f000 021f 	and.w	r2, r0, #31
   814d2:	2001      	movs	r0, #1
   814d4:	4090      	lsls	r0, r2
   814d6:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   814d8:	bf14      	ite	ne
   814da:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   814dc:	6318      	streq	r0, [r3, #48]	; 0x30
   814de:	4770      	bx	lr

000814e0 <pio_configure_pin>:
{
   814e0:	b570      	push	{r4, r5, r6, lr}
   814e2:	b082      	sub	sp, #8
   814e4:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   814e6:	0943      	lsrs	r3, r0, #5
   814e8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   814ec:	f203 7307 	addw	r3, r3, #1799	; 0x707
   814f0:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   814f2:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   814f6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   814fa:	d031      	beq.n	81560 <pio_configure_pin+0x80>
   814fc:	d816      	bhi.n	8152c <pio_configure_pin+0x4c>
   814fe:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   81502:	d01b      	beq.n	8153c <pio_configure_pin+0x5c>
   81504:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   81508:	d116      	bne.n	81538 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8150a:	f000 001f 	and.w	r0, r0, #31
   8150e:	2601      	movs	r6, #1
   81510:	4086      	lsls	r6, r0
   81512:	4632      	mov	r2, r6
   81514:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81518:	4620      	mov	r0, r4
   8151a:	4b22      	ldr	r3, [pc, #136]	; (815a4 <pio_configure_pin+0xc4>)
   8151c:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8151e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   81522:	bf14      	ite	ne
   81524:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81526:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81528:	2001      	movs	r0, #1
   8152a:	e017      	b.n	8155c <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   8152c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   81530:	d021      	beq.n	81576 <pio_configure_pin+0x96>
   81532:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   81536:	d01e      	beq.n	81576 <pio_configure_pin+0x96>
		return 0;
   81538:	2000      	movs	r0, #0
   8153a:	e00f      	b.n	8155c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   8153c:	f000 001f 	and.w	r0, r0, #31
   81540:	2601      	movs	r6, #1
   81542:	4086      	lsls	r6, r0
   81544:	4632      	mov	r2, r6
   81546:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8154a:	4620      	mov	r0, r4
   8154c:	4b15      	ldr	r3, [pc, #84]	; (815a4 <pio_configure_pin+0xc4>)
   8154e:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81550:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   81554:	bf14      	ite	ne
   81556:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81558:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   8155a:	2001      	movs	r0, #1
}
   8155c:	b002      	add	sp, #8
   8155e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   81560:	f000 011f 	and.w	r1, r0, #31
   81564:	2601      	movs	r6, #1
   81566:	462a      	mov	r2, r5
   81568:	fa06 f101 	lsl.w	r1, r6, r1
   8156c:	4620      	mov	r0, r4
   8156e:	4b0e      	ldr	r3, [pc, #56]	; (815a8 <pio_configure_pin+0xc8>)
   81570:	4798      	blx	r3
	return 1;
   81572:	4630      	mov	r0, r6
		break;
   81574:	e7f2      	b.n	8155c <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   81576:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8157a:	f000 011f 	and.w	r1, r0, #31
   8157e:	2601      	movs	r6, #1
   81580:	ea05 0306 	and.w	r3, r5, r6
   81584:	9300      	str	r3, [sp, #0]
   81586:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8158a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8158e:	bf14      	ite	ne
   81590:	2200      	movne	r2, #0
   81592:	2201      	moveq	r2, #1
   81594:	fa06 f101 	lsl.w	r1, r6, r1
   81598:	4620      	mov	r0, r4
   8159a:	4c04      	ldr	r4, [pc, #16]	; (815ac <pio_configure_pin+0xcc>)
   8159c:	47a0      	blx	r4
	return 1;
   8159e:	4630      	mov	r0, r6
		break;
   815a0:	e7dc      	b.n	8155c <pio_configure_pin+0x7c>
   815a2:	bf00      	nop
   815a4:	000813bd 	.word	0x000813bd
   815a8:	000813fb 	.word	0x000813fb
   815ac:	0008142d 	.word	0x0008142d

000815b0 <pio_configure_pin_group>:
{
   815b0:	b570      	push	{r4, r5, r6, lr}
   815b2:	b082      	sub	sp, #8
   815b4:	4605      	mov	r5, r0
   815b6:	460e      	mov	r6, r1
   815b8:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   815ba:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   815be:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   815c2:	d027      	beq.n	81614 <pio_configure_pin_group+0x64>
   815c4:	d811      	bhi.n	815ea <pio_configure_pin_group+0x3a>
   815c6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   815ca:	d016      	beq.n	815fa <pio_configure_pin_group+0x4a>
   815cc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   815d0:	d111      	bne.n	815f6 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   815d2:	460a      	mov	r2, r1
   815d4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   815d8:	4b19      	ldr	r3, [pc, #100]	; (81640 <pio_configure_pin_group+0x90>)
   815da:	4798      	blx	r3
	if (ul_pull_up_enable) {
   815dc:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   815e0:	bf14      	ite	ne
   815e2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   815e4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   815e6:	2001      	movs	r0, #1
   815e8:	e012      	b.n	81610 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   815ea:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   815ee:	d015      	beq.n	8161c <pio_configure_pin_group+0x6c>
   815f0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   815f4:	d012      	beq.n	8161c <pio_configure_pin_group+0x6c>
		return 0;
   815f6:	2000      	movs	r0, #0
   815f8:	e00a      	b.n	81610 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   815fa:	460a      	mov	r2, r1
   815fc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81600:	4b0f      	ldr	r3, [pc, #60]	; (81640 <pio_configure_pin_group+0x90>)
   81602:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81604:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   81608:	bf14      	ite	ne
   8160a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8160c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8160e:	2001      	movs	r0, #1
}
   81610:	b002      	add	sp, #8
   81612:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   81614:	4b0b      	ldr	r3, [pc, #44]	; (81644 <pio_configure_pin_group+0x94>)
   81616:	4798      	blx	r3
	return 1;
   81618:	2001      	movs	r0, #1
		break;
   8161a:	e7f9      	b.n	81610 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8161c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   81620:	f004 0301 	and.w	r3, r4, #1
   81624:	9300      	str	r3, [sp, #0]
   81626:	f3c4 0380 	ubfx	r3, r4, #2, #1
   8162a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8162e:	bf14      	ite	ne
   81630:	2200      	movne	r2, #0
   81632:	2201      	moveq	r2, #1
   81634:	4631      	mov	r1, r6
   81636:	4628      	mov	r0, r5
   81638:	4c03      	ldr	r4, [pc, #12]	; (81648 <pio_configure_pin_group+0x98>)
   8163a:	47a0      	blx	r4
	return 1;
   8163c:	2001      	movs	r0, #1
		break;
   8163e:	e7e7      	b.n	81610 <pio_configure_pin_group+0x60>
   81640:	000813bd 	.word	0x000813bd
   81644:	000813fb 	.word	0x000813fb
   81648:	0008142d 	.word	0x0008142d

0008164c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   8164c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81650:	4604      	mov	r4, r0
   81652:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   81654:	4b0e      	ldr	r3, [pc, #56]	; (81690 <pio_handler_process+0x44>)
   81656:	4798      	blx	r3
   81658:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   8165a:	4620      	mov	r0, r4
   8165c:	4b0d      	ldr	r3, [pc, #52]	; (81694 <pio_handler_process+0x48>)
   8165e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   81660:	4005      	ands	r5, r0
   81662:	d013      	beq.n	8168c <pio_handler_process+0x40>
   81664:	4c0c      	ldr	r4, [pc, #48]	; (81698 <pio_handler_process+0x4c>)
   81666:	f104 0660 	add.w	r6, r4, #96	; 0x60
   8166a:	e003      	b.n	81674 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   8166c:	42b4      	cmp	r4, r6
   8166e:	d00d      	beq.n	8168c <pio_handler_process+0x40>
   81670:	3410      	adds	r4, #16
		while (status != 0) {
   81672:	b15d      	cbz	r5, 8168c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   81674:	6820      	ldr	r0, [r4, #0]
   81676:	4540      	cmp	r0, r8
   81678:	d1f8      	bne.n	8166c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8167a:	6861      	ldr	r1, [r4, #4]
   8167c:	4229      	tst	r1, r5
   8167e:	d0f5      	beq.n	8166c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81680:	68e3      	ldr	r3, [r4, #12]
   81682:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81684:	6863      	ldr	r3, [r4, #4]
   81686:	ea25 0503 	bic.w	r5, r5, r3
   8168a:	e7ef      	b.n	8166c <pio_handler_process+0x20>
   8168c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81690:	00081485 	.word	0x00081485
   81694:	00081489 	.word	0x00081489
   81698:	20070f6c 	.word	0x20070f6c

0008169c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   8169c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   8169e:	4c18      	ldr	r4, [pc, #96]	; (81700 <pio_handler_set+0x64>)
   816a0:	6826      	ldr	r6, [r4, #0]
   816a2:	2e06      	cmp	r6, #6
   816a4:	d829      	bhi.n	816fa <pio_handler_set+0x5e>
   816a6:	f04f 0c00 	mov.w	ip, #0
   816aa:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   816ac:	4f15      	ldr	r7, [pc, #84]	; (81704 <pio_handler_set+0x68>)
   816ae:	e004      	b.n	816ba <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
   816b0:	3401      	adds	r4, #1
   816b2:	b2e4      	uxtb	r4, r4
   816b4:	46a4      	mov	ip, r4
   816b6:	42a6      	cmp	r6, r4
   816b8:	d309      	bcc.n	816ce <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
   816ba:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   816bc:	0125      	lsls	r5, r4, #4
   816be:	597d      	ldr	r5, [r7, r5]
   816c0:	428d      	cmp	r5, r1
   816c2:	d1f5      	bne.n	816b0 <pio_handler_set+0x14>
   816c4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   816c8:	686d      	ldr	r5, [r5, #4]
   816ca:	4295      	cmp	r5, r2
   816cc:	d1f0      	bne.n	816b0 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
   816ce:	4d0d      	ldr	r5, [pc, #52]	; (81704 <pio_handler_set+0x68>)
   816d0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   816d4:	eb05 040e 	add.w	r4, r5, lr
   816d8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
   816dc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
   816de:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
   816e0:	9906      	ldr	r1, [sp, #24]
   816e2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
   816e4:	3601      	adds	r6, #1
   816e6:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
   816e8:	bf04      	itt	eq
   816ea:	4905      	ldreq	r1, [pc, #20]	; (81700 <pio_handler_set+0x64>)
   816ec:	600e      	streq	r6, [r1, #0]
   816ee:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   816f0:	461a      	mov	r2, r3
   816f2:	4b05      	ldr	r3, [pc, #20]	; (81708 <pio_handler_set+0x6c>)
   816f4:	4798      	blx	r3

	return 0;
   816f6:	2000      	movs	r0, #0
   816f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
   816fa:	2001      	movs	r0, #1
}
   816fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   816fe:	bf00      	nop
   81700:	20070fdc 	.word	0x20070fdc
   81704:	20070f6c 	.word	0x20070f6c
   81708:	00081453 	.word	0x00081453

0008170c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8170c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8170e:	210b      	movs	r1, #11
   81710:	4801      	ldr	r0, [pc, #4]	; (81718 <PIOA_Handler+0xc>)
   81712:	4b02      	ldr	r3, [pc, #8]	; (8171c <PIOA_Handler+0x10>)
   81714:	4798      	blx	r3
   81716:	bd08      	pop	{r3, pc}
   81718:	400e0e00 	.word	0x400e0e00
   8171c:	0008164d 	.word	0x0008164d

00081720 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   81720:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   81722:	210c      	movs	r1, #12
   81724:	4801      	ldr	r0, [pc, #4]	; (8172c <PIOB_Handler+0xc>)
   81726:	4b02      	ldr	r3, [pc, #8]	; (81730 <PIOB_Handler+0x10>)
   81728:	4798      	blx	r3
   8172a:	bd08      	pop	{r3, pc}
   8172c:	400e1000 	.word	0x400e1000
   81730:	0008164d 	.word	0x0008164d

00081734 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   81734:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   81736:	210d      	movs	r1, #13
   81738:	4801      	ldr	r0, [pc, #4]	; (81740 <PIOC_Handler+0xc>)
   8173a:	4b02      	ldr	r3, [pc, #8]	; (81744 <PIOC_Handler+0x10>)
   8173c:	4798      	blx	r3
   8173e:	bd08      	pop	{r3, pc}
   81740:	400e1200 	.word	0x400e1200
   81744:	0008164d 	.word	0x0008164d

00081748 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   81748:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   8174a:	210e      	movs	r1, #14
   8174c:	4801      	ldr	r0, [pc, #4]	; (81754 <PIOD_Handler+0xc>)
   8174e:	4b02      	ldr	r3, [pc, #8]	; (81758 <PIOD_Handler+0x10>)
   81750:	4798      	blx	r3
   81752:	bd08      	pop	{r3, pc}
   81754:	400e1400 	.word	0x400e1400
   81758:	0008164d 	.word	0x0008164d

0008175c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8175c:	4a17      	ldr	r2, [pc, #92]	; (817bc <pmc_switch_mck_to_pllack+0x60>)
   8175e:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81760:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   81764:	4318      	orrs	r0, r3
   81766:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81768:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8176a:	f013 0f08 	tst.w	r3, #8
   8176e:	d10a      	bne.n	81786 <pmc_switch_mck_to_pllack+0x2a>
   81770:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81774:	4911      	ldr	r1, [pc, #68]	; (817bc <pmc_switch_mck_to_pllack+0x60>)
   81776:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81778:	f012 0f08 	tst.w	r2, #8
   8177c:	d103      	bne.n	81786 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8177e:	3b01      	subs	r3, #1
   81780:	d1f9      	bne.n	81776 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   81782:	2001      	movs	r0, #1
   81784:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   81786:	4a0d      	ldr	r2, [pc, #52]	; (817bc <pmc_switch_mck_to_pllack+0x60>)
   81788:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8178a:	f023 0303 	bic.w	r3, r3, #3
   8178e:	f043 0302 	orr.w	r3, r3, #2
   81792:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81794:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81796:	f013 0f08 	tst.w	r3, #8
   8179a:	d10a      	bne.n	817b2 <pmc_switch_mck_to_pllack+0x56>
   8179c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   817a0:	4906      	ldr	r1, [pc, #24]	; (817bc <pmc_switch_mck_to_pllack+0x60>)
   817a2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   817a4:	f012 0f08 	tst.w	r2, #8
   817a8:	d105      	bne.n	817b6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   817aa:	3b01      	subs	r3, #1
   817ac:	d1f9      	bne.n	817a2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   817ae:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   817b0:	4770      	bx	lr
	return 0;
   817b2:	2000      	movs	r0, #0
   817b4:	4770      	bx	lr
   817b6:	2000      	movs	r0, #0
   817b8:	4770      	bx	lr
   817ba:	bf00      	nop
   817bc:	400e0600 	.word	0x400e0600

000817c0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   817c0:	b9c8      	cbnz	r0, 817f6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   817c2:	4a11      	ldr	r2, [pc, #68]	; (81808 <pmc_switch_mainck_to_xtal+0x48>)
   817c4:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   817c6:	0209      	lsls	r1, r1, #8
   817c8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   817ca:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   817ce:	f023 0303 	bic.w	r3, r3, #3
   817d2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   817d6:	f043 0301 	orr.w	r3, r3, #1
   817da:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   817dc:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   817de:	6e93      	ldr	r3, [r2, #104]	; 0x68
   817e0:	f013 0f01 	tst.w	r3, #1
   817e4:	d0fb      	beq.n	817de <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   817e6:	4a08      	ldr	r2, [pc, #32]	; (81808 <pmc_switch_mainck_to_xtal+0x48>)
   817e8:	6a13      	ldr	r3, [r2, #32]
   817ea:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   817ee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   817f2:	6213      	str	r3, [r2, #32]
   817f4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   817f6:	4904      	ldr	r1, [pc, #16]	; (81808 <pmc_switch_mainck_to_xtal+0x48>)
   817f8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   817fa:	4a04      	ldr	r2, [pc, #16]	; (8180c <pmc_switch_mainck_to_xtal+0x4c>)
   817fc:	401a      	ands	r2, r3
   817fe:	4b04      	ldr	r3, [pc, #16]	; (81810 <pmc_switch_mainck_to_xtal+0x50>)
   81800:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81802:	620b      	str	r3, [r1, #32]
   81804:	4770      	bx	lr
   81806:	bf00      	nop
   81808:	400e0600 	.word	0x400e0600
   8180c:	fec8fffc 	.word	0xfec8fffc
   81810:	01370002 	.word	0x01370002

00081814 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   81814:	4b02      	ldr	r3, [pc, #8]	; (81820 <pmc_osc_is_ready_mainck+0xc>)
   81816:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81818:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   8181c:	4770      	bx	lr
   8181e:	bf00      	nop
   81820:	400e0600 	.word	0x400e0600

00081824 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   81824:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81828:	4b01      	ldr	r3, [pc, #4]	; (81830 <pmc_disable_pllack+0xc>)
   8182a:	629a      	str	r2, [r3, #40]	; 0x28
   8182c:	4770      	bx	lr
   8182e:	bf00      	nop
   81830:	400e0600 	.word	0x400e0600

00081834 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   81834:	4b02      	ldr	r3, [pc, #8]	; (81840 <pmc_is_locked_pllack+0xc>)
   81836:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81838:	f000 0002 	and.w	r0, r0, #2
   8183c:	4770      	bx	lr
   8183e:	bf00      	nop
   81840:	400e0600 	.word	0x400e0600

00081844 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   81844:	282c      	cmp	r0, #44	; 0x2c
   81846:	d81e      	bhi.n	81886 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   81848:	281f      	cmp	r0, #31
   8184a:	d80c      	bhi.n	81866 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   8184c:	4b11      	ldr	r3, [pc, #68]	; (81894 <pmc_enable_periph_clk+0x50>)
   8184e:	699a      	ldr	r2, [r3, #24]
   81850:	2301      	movs	r3, #1
   81852:	4083      	lsls	r3, r0
   81854:	4393      	bics	r3, r2
   81856:	d018      	beq.n	8188a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   81858:	2301      	movs	r3, #1
   8185a:	fa03 f000 	lsl.w	r0, r3, r0
   8185e:	4b0d      	ldr	r3, [pc, #52]	; (81894 <pmc_enable_periph_clk+0x50>)
   81860:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   81862:	2000      	movs	r0, #0
   81864:	4770      	bx	lr
		ul_id -= 32;
   81866:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   81868:	4b0a      	ldr	r3, [pc, #40]	; (81894 <pmc_enable_periph_clk+0x50>)
   8186a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   8186e:	2301      	movs	r3, #1
   81870:	4083      	lsls	r3, r0
   81872:	4393      	bics	r3, r2
   81874:	d00b      	beq.n	8188e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   81876:	2301      	movs	r3, #1
   81878:	fa03 f000 	lsl.w	r0, r3, r0
   8187c:	4b05      	ldr	r3, [pc, #20]	; (81894 <pmc_enable_periph_clk+0x50>)
   8187e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   81882:	2000      	movs	r0, #0
   81884:	4770      	bx	lr
		return 1;
   81886:	2001      	movs	r0, #1
   81888:	4770      	bx	lr
	return 0;
   8188a:	2000      	movs	r0, #0
   8188c:	4770      	bx	lr
   8188e:	2000      	movs	r0, #0
}
   81890:	4770      	bx	lr
   81892:	bf00      	nop
   81894:	400e0600 	.word	0x400e0600

00081898 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81898:	e7fe      	b.n	81898 <Dummy_Handler>
	...

0008189c <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   8189c:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8189e:	4b1c      	ldr	r3, [pc, #112]	; (81910 <Reset_Handler+0x74>)
   818a0:	4a1c      	ldr	r2, [pc, #112]	; (81914 <Reset_Handler+0x78>)
   818a2:	429a      	cmp	r2, r3
   818a4:	d010      	beq.n	818c8 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   818a6:	4b1c      	ldr	r3, [pc, #112]	; (81918 <Reset_Handler+0x7c>)
   818a8:	4a19      	ldr	r2, [pc, #100]	; (81910 <Reset_Handler+0x74>)
   818aa:	429a      	cmp	r2, r3
   818ac:	d20c      	bcs.n	818c8 <Reset_Handler+0x2c>
   818ae:	3b01      	subs	r3, #1
   818b0:	1a9b      	subs	r3, r3, r2
   818b2:	f023 0303 	bic.w	r3, r3, #3
   818b6:	3304      	adds	r3, #4
   818b8:	4413      	add	r3, r2
   818ba:	4916      	ldr	r1, [pc, #88]	; (81914 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   818bc:	f851 0b04 	ldr.w	r0, [r1], #4
   818c0:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   818c4:	429a      	cmp	r2, r3
   818c6:	d1f9      	bne.n	818bc <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   818c8:	4b14      	ldr	r3, [pc, #80]	; (8191c <Reset_Handler+0x80>)
   818ca:	4a15      	ldr	r2, [pc, #84]	; (81920 <Reset_Handler+0x84>)
   818cc:	429a      	cmp	r2, r3
   818ce:	d20a      	bcs.n	818e6 <Reset_Handler+0x4a>
   818d0:	3b01      	subs	r3, #1
   818d2:	1a9b      	subs	r3, r3, r2
   818d4:	f023 0303 	bic.w	r3, r3, #3
   818d8:	3304      	adds	r3, #4
   818da:	4413      	add	r3, r2
		*pDest++ = 0;
   818dc:	2100      	movs	r1, #0
   818de:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   818e2:	4293      	cmp	r3, r2
   818e4:	d1fb      	bne.n	818de <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   818e6:	4b0f      	ldr	r3, [pc, #60]	; (81924 <Reset_Handler+0x88>)
   818e8:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   818ec:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   818f0:	490d      	ldr	r1, [pc, #52]	; (81928 <Reset_Handler+0x8c>)
   818f2:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   818f4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   818f8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   818fc:	d203      	bcs.n	81906 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   818fe:	688b      	ldr	r3, [r1, #8]
   81900:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81904:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81906:	4b09      	ldr	r3, [pc, #36]	; (8192c <Reset_Handler+0x90>)
   81908:	4798      	blx	r3

	/* Branch to main function */
	main();
   8190a:	4b09      	ldr	r3, [pc, #36]	; (81930 <Reset_Handler+0x94>)
   8190c:	4798      	blx	r3
   8190e:	e7fe      	b.n	8190e <Reset_Handler+0x72>
   81910:	20070000 	.word	0x20070000
   81914:	00086994 	.word	0x00086994
   81918:	20070f40 	.word	0x20070f40
   8191c:	200714c4 	.word	0x200714c4
   81920:	20070f40 	.word	0x20070f40
   81924:	00080000 	.word	0x00080000
   81928:	e000ed00 	.word	0xe000ed00
   8192c:	00081a8d 	.word	0x00081a8d
   81930:	000811f5 	.word	0x000811f5

00081934 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81934:	4b3d      	ldr	r3, [pc, #244]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   81936:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81938:	f003 0303 	and.w	r3, r3, #3
   8193c:	2b03      	cmp	r3, #3
   8193e:	d80e      	bhi.n	8195e <SystemCoreClockUpdate+0x2a>
   81940:	e8df f003 	tbb	[pc, r3]
   81944:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   81948:	4b39      	ldr	r3, [pc, #228]	; (81a30 <SystemCoreClockUpdate+0xfc>)
   8194a:	695b      	ldr	r3, [r3, #20]
   8194c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   81950:	bf14      	ite	ne
   81952:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   81956:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   8195a:	4b36      	ldr	r3, [pc, #216]	; (81a34 <SystemCoreClockUpdate+0x100>)
   8195c:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   8195e:	4b33      	ldr	r3, [pc, #204]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   81960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81962:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81966:	2b70      	cmp	r3, #112	; 0x70
   81968:	d057      	beq.n	81a1a <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   8196a:	4b30      	ldr	r3, [pc, #192]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   8196c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   8196e:	4931      	ldr	r1, [pc, #196]	; (81a34 <SystemCoreClockUpdate+0x100>)
   81970:	f3c2 1202 	ubfx	r2, r2, #4, #3
   81974:	680b      	ldr	r3, [r1, #0]
   81976:	40d3      	lsrs	r3, r2
   81978:	600b      	str	r3, [r1, #0]
   8197a:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8197c:	4b2b      	ldr	r3, [pc, #172]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   8197e:	6a1b      	ldr	r3, [r3, #32]
   81980:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81984:	d003      	beq.n	8198e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81986:	4a2c      	ldr	r2, [pc, #176]	; (81a38 <SystemCoreClockUpdate+0x104>)
   81988:	4b2a      	ldr	r3, [pc, #168]	; (81a34 <SystemCoreClockUpdate+0x100>)
   8198a:	601a      	str	r2, [r3, #0]
   8198c:	e7e7      	b.n	8195e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   8198e:	4a2b      	ldr	r2, [pc, #172]	; (81a3c <SystemCoreClockUpdate+0x108>)
   81990:	4b28      	ldr	r3, [pc, #160]	; (81a34 <SystemCoreClockUpdate+0x100>)
   81992:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81994:	4b25      	ldr	r3, [pc, #148]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   81996:	6a1b      	ldr	r3, [r3, #32]
   81998:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8199c:	2b10      	cmp	r3, #16
   8199e:	d005      	beq.n	819ac <SystemCoreClockUpdate+0x78>
   819a0:	2b20      	cmp	r3, #32
   819a2:	d1dc      	bne.n	8195e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   819a4:	4a24      	ldr	r2, [pc, #144]	; (81a38 <SystemCoreClockUpdate+0x104>)
   819a6:	4b23      	ldr	r3, [pc, #140]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819a8:	601a      	str	r2, [r3, #0]
				break;
   819aa:	e7d8      	b.n	8195e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   819ac:	4a24      	ldr	r2, [pc, #144]	; (81a40 <SystemCoreClockUpdate+0x10c>)
   819ae:	4b21      	ldr	r3, [pc, #132]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819b0:	601a      	str	r2, [r3, #0]
				break;
   819b2:	e7d4      	b.n	8195e <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   819b4:	4b1d      	ldr	r3, [pc, #116]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   819b6:	6a1b      	ldr	r3, [r3, #32]
   819b8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   819bc:	d00c      	beq.n	819d8 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   819be:	4a1e      	ldr	r2, [pc, #120]	; (81a38 <SystemCoreClockUpdate+0x104>)
   819c0:	4b1c      	ldr	r3, [pc, #112]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819c2:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   819c4:	4b19      	ldr	r3, [pc, #100]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   819c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   819c8:	f003 0303 	and.w	r3, r3, #3
   819cc:	2b02      	cmp	r3, #2
   819ce:	d016      	beq.n	819fe <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   819d0:	4a1c      	ldr	r2, [pc, #112]	; (81a44 <SystemCoreClockUpdate+0x110>)
   819d2:	4b18      	ldr	r3, [pc, #96]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819d4:	601a      	str	r2, [r3, #0]
   819d6:	e7c2      	b.n	8195e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   819d8:	4a18      	ldr	r2, [pc, #96]	; (81a3c <SystemCoreClockUpdate+0x108>)
   819da:	4b16      	ldr	r3, [pc, #88]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819dc:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   819de:	4b13      	ldr	r3, [pc, #76]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   819e0:	6a1b      	ldr	r3, [r3, #32]
   819e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   819e6:	2b10      	cmp	r3, #16
   819e8:	d005      	beq.n	819f6 <SystemCoreClockUpdate+0xc2>
   819ea:	2b20      	cmp	r3, #32
   819ec:	d1ea      	bne.n	819c4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   819ee:	4a12      	ldr	r2, [pc, #72]	; (81a38 <SystemCoreClockUpdate+0x104>)
   819f0:	4b10      	ldr	r3, [pc, #64]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819f2:	601a      	str	r2, [r3, #0]
				break;
   819f4:	e7e6      	b.n	819c4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   819f6:	4a12      	ldr	r2, [pc, #72]	; (81a40 <SystemCoreClockUpdate+0x10c>)
   819f8:	4b0e      	ldr	r3, [pc, #56]	; (81a34 <SystemCoreClockUpdate+0x100>)
   819fa:	601a      	str	r2, [r3, #0]
				break;
   819fc:	e7e2      	b.n	819c4 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   819fe:	4a0b      	ldr	r2, [pc, #44]	; (81a2c <SystemCoreClockUpdate+0xf8>)
   81a00:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81a02:	6a92      	ldr	r2, [r2, #40]	; 0x28
   81a04:	480b      	ldr	r0, [pc, #44]	; (81a34 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81a06:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81a0a:	6803      	ldr	r3, [r0, #0]
   81a0c:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81a10:	b2d2      	uxtb	r2, r2
   81a12:	fbb3 f3f2 	udiv	r3, r3, r2
   81a16:	6003      	str	r3, [r0, #0]
   81a18:	e7a1      	b.n	8195e <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81a1a:	4a06      	ldr	r2, [pc, #24]	; (81a34 <SystemCoreClockUpdate+0x100>)
   81a1c:	6813      	ldr	r3, [r2, #0]
   81a1e:	490a      	ldr	r1, [pc, #40]	; (81a48 <SystemCoreClockUpdate+0x114>)
   81a20:	fba1 1303 	umull	r1, r3, r1, r3
   81a24:	085b      	lsrs	r3, r3, #1
   81a26:	6013      	str	r3, [r2, #0]
   81a28:	4770      	bx	lr
   81a2a:	bf00      	nop
   81a2c:	400e0600 	.word	0x400e0600
   81a30:	400e1a10 	.word	0x400e1a10
   81a34:	2007058c 	.word	0x2007058c
   81a38:	00b71b00 	.word	0x00b71b00
   81a3c:	003d0900 	.word	0x003d0900
   81a40:	007a1200 	.word	0x007a1200
   81a44:	0e4e1c00 	.word	0x0e4e1c00
   81a48:	aaaaaaab 	.word	0xaaaaaaab

00081a4c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81a4c:	4b0a      	ldr	r3, [pc, #40]	; (81a78 <_sbrk+0x2c>)
   81a4e:	681b      	ldr	r3, [r3, #0]
   81a50:	b153      	cbz	r3, 81a68 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   81a52:	4b09      	ldr	r3, [pc, #36]	; (81a78 <_sbrk+0x2c>)
   81a54:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81a56:	181a      	adds	r2, r3, r0
   81a58:	4908      	ldr	r1, [pc, #32]	; (81a7c <_sbrk+0x30>)
   81a5a:	4291      	cmp	r1, r2
   81a5c:	db08      	blt.n	81a70 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   81a5e:	4610      	mov	r0, r2
   81a60:	4a05      	ldr	r2, [pc, #20]	; (81a78 <_sbrk+0x2c>)
   81a62:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81a64:	4618      	mov	r0, r3
   81a66:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   81a68:	4a05      	ldr	r2, [pc, #20]	; (81a80 <_sbrk+0x34>)
   81a6a:	4b03      	ldr	r3, [pc, #12]	; (81a78 <_sbrk+0x2c>)
   81a6c:	601a      	str	r2, [r3, #0]
   81a6e:	e7f0      	b.n	81a52 <_sbrk+0x6>
		return (caddr_t) -1;	
   81a70:	f04f 30ff 	mov.w	r0, #4294967295
}
   81a74:	4770      	bx	lr
   81a76:	bf00      	nop
   81a78:	20070fe0 	.word	0x20070fe0
   81a7c:	20087ffc 	.word	0x20087ffc
   81a80:	200734c8 	.word	0x200734c8

00081a84 <atoi>:
   81a84:	220a      	movs	r2, #10
   81a86:	2100      	movs	r1, #0
   81a88:	f000 b998 	b.w	81dbc <strtol>

00081a8c <__libc_init_array>:
   81a8c:	b570      	push	{r4, r5, r6, lr}
   81a8e:	4e0f      	ldr	r6, [pc, #60]	; (81acc <__libc_init_array+0x40>)
   81a90:	4d0f      	ldr	r5, [pc, #60]	; (81ad0 <__libc_init_array+0x44>)
   81a92:	1b76      	subs	r6, r6, r5
   81a94:	10b6      	asrs	r6, r6, #2
   81a96:	bf18      	it	ne
   81a98:	2400      	movne	r4, #0
   81a9a:	d005      	beq.n	81aa8 <__libc_init_array+0x1c>
   81a9c:	3401      	adds	r4, #1
   81a9e:	f855 3b04 	ldr.w	r3, [r5], #4
   81aa2:	4798      	blx	r3
   81aa4:	42a6      	cmp	r6, r4
   81aa6:	d1f9      	bne.n	81a9c <__libc_init_array+0x10>
   81aa8:	4e0a      	ldr	r6, [pc, #40]	; (81ad4 <__libc_init_array+0x48>)
   81aaa:	4d0b      	ldr	r5, [pc, #44]	; (81ad8 <__libc_init_array+0x4c>)
   81aac:	f004 ff5c 	bl	86968 <_init>
   81ab0:	1b76      	subs	r6, r6, r5
   81ab2:	10b6      	asrs	r6, r6, #2
   81ab4:	bf18      	it	ne
   81ab6:	2400      	movne	r4, #0
   81ab8:	d006      	beq.n	81ac8 <__libc_init_array+0x3c>
   81aba:	3401      	adds	r4, #1
   81abc:	f855 3b04 	ldr.w	r3, [r5], #4
   81ac0:	4798      	blx	r3
   81ac2:	42a6      	cmp	r6, r4
   81ac4:	d1f9      	bne.n	81aba <__libc_init_array+0x2e>
   81ac6:	bd70      	pop	{r4, r5, r6, pc}
   81ac8:	bd70      	pop	{r4, r5, r6, pc}
   81aca:	bf00      	nop
   81acc:	00086974 	.word	0x00086974
   81ad0:	00086974 	.word	0x00086974
   81ad4:	0008697c 	.word	0x0008697c
   81ad8:	00086974 	.word	0x00086974

00081adc <memset>:
   81adc:	b470      	push	{r4, r5, r6}
   81ade:	0786      	lsls	r6, r0, #30
   81ae0:	d046      	beq.n	81b70 <memset+0x94>
   81ae2:	1e54      	subs	r4, r2, #1
   81ae4:	2a00      	cmp	r2, #0
   81ae6:	d041      	beq.n	81b6c <memset+0x90>
   81ae8:	b2ca      	uxtb	r2, r1
   81aea:	4603      	mov	r3, r0
   81aec:	e002      	b.n	81af4 <memset+0x18>
   81aee:	f114 34ff 	adds.w	r4, r4, #4294967295
   81af2:	d33b      	bcc.n	81b6c <memset+0x90>
   81af4:	f803 2b01 	strb.w	r2, [r3], #1
   81af8:	079d      	lsls	r5, r3, #30
   81afa:	d1f8      	bne.n	81aee <memset+0x12>
   81afc:	2c03      	cmp	r4, #3
   81afe:	d92e      	bls.n	81b5e <memset+0x82>
   81b00:	b2cd      	uxtb	r5, r1
   81b02:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81b06:	2c0f      	cmp	r4, #15
   81b08:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81b0c:	d919      	bls.n	81b42 <memset+0x66>
   81b0e:	4626      	mov	r6, r4
   81b10:	f103 0210 	add.w	r2, r3, #16
   81b14:	3e10      	subs	r6, #16
   81b16:	2e0f      	cmp	r6, #15
   81b18:	f842 5c10 	str.w	r5, [r2, #-16]
   81b1c:	f842 5c0c 	str.w	r5, [r2, #-12]
   81b20:	f842 5c08 	str.w	r5, [r2, #-8]
   81b24:	f842 5c04 	str.w	r5, [r2, #-4]
   81b28:	f102 0210 	add.w	r2, r2, #16
   81b2c:	d8f2      	bhi.n	81b14 <memset+0x38>
   81b2e:	f1a4 0210 	sub.w	r2, r4, #16
   81b32:	f022 020f 	bic.w	r2, r2, #15
   81b36:	f004 040f 	and.w	r4, r4, #15
   81b3a:	3210      	adds	r2, #16
   81b3c:	2c03      	cmp	r4, #3
   81b3e:	4413      	add	r3, r2
   81b40:	d90d      	bls.n	81b5e <memset+0x82>
   81b42:	461e      	mov	r6, r3
   81b44:	4622      	mov	r2, r4
   81b46:	3a04      	subs	r2, #4
   81b48:	2a03      	cmp	r2, #3
   81b4a:	f846 5b04 	str.w	r5, [r6], #4
   81b4e:	d8fa      	bhi.n	81b46 <memset+0x6a>
   81b50:	1f22      	subs	r2, r4, #4
   81b52:	f022 0203 	bic.w	r2, r2, #3
   81b56:	3204      	adds	r2, #4
   81b58:	4413      	add	r3, r2
   81b5a:	f004 0403 	and.w	r4, r4, #3
   81b5e:	b12c      	cbz	r4, 81b6c <memset+0x90>
   81b60:	b2c9      	uxtb	r1, r1
   81b62:	441c      	add	r4, r3
   81b64:	f803 1b01 	strb.w	r1, [r3], #1
   81b68:	429c      	cmp	r4, r3
   81b6a:	d1fb      	bne.n	81b64 <memset+0x88>
   81b6c:	bc70      	pop	{r4, r5, r6}
   81b6e:	4770      	bx	lr
   81b70:	4614      	mov	r4, r2
   81b72:	4603      	mov	r3, r0
   81b74:	e7c2      	b.n	81afc <memset+0x20>
   81b76:	bf00      	nop

00081b78 <sprintf>:
   81b78:	b40e      	push	{r1, r2, r3}
   81b7a:	4601      	mov	r1, r0
   81b7c:	b5f0      	push	{r4, r5, r6, r7, lr}
   81b7e:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81b82:	f44f 7702 	mov.w	r7, #520	; 0x208
   81b86:	f64f 76ff 	movw	r6, #65535	; 0xffff
   81b8a:	b09c      	sub	sp, #112	; 0x70
   81b8c:	ac21      	add	r4, sp, #132	; 0x84
   81b8e:	f854 2b04 	ldr.w	r2, [r4], #4
   81b92:	4b0b      	ldr	r3, [pc, #44]	; (81bc0 <sprintf+0x48>)
   81b94:	9102      	str	r1, [sp, #8]
   81b96:	9106      	str	r1, [sp, #24]
   81b98:	6818      	ldr	r0, [r3, #0]
   81b9a:	a902      	add	r1, sp, #8
   81b9c:	4623      	mov	r3, r4
   81b9e:	9401      	str	r4, [sp, #4]
   81ba0:	f8ad 7014 	strh.w	r7, [sp, #20]
   81ba4:	9504      	str	r5, [sp, #16]
   81ba6:	9507      	str	r5, [sp, #28]
   81ba8:	f8ad 6016 	strh.w	r6, [sp, #22]
   81bac:	f000 f91c 	bl	81de8 <_svfprintf_r>
   81bb0:	2200      	movs	r2, #0
   81bb2:	9b02      	ldr	r3, [sp, #8]
   81bb4:	701a      	strb	r2, [r3, #0]
   81bb6:	b01c      	add	sp, #112	; 0x70
   81bb8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81bbc:	b003      	add	sp, #12
   81bbe:	4770      	bx	lr
   81bc0:	20070590 	.word	0x20070590

00081bc4 <strlen>:
   81bc4:	f020 0103 	bic.w	r1, r0, #3
   81bc8:	f010 0003 	ands.w	r0, r0, #3
   81bcc:	f1c0 0000 	rsb	r0, r0, #0
   81bd0:	f851 3b04 	ldr.w	r3, [r1], #4
   81bd4:	f100 0c04 	add.w	ip, r0, #4
   81bd8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81bdc:	f06f 0200 	mvn.w	r2, #0
   81be0:	bf1c      	itt	ne
   81be2:	fa22 f20c 	lsrne.w	r2, r2, ip
   81be6:	4313      	orrne	r3, r2
   81be8:	f04f 0c01 	mov.w	ip, #1
   81bec:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81bf0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81bf4:	eba3 020c 	sub.w	r2, r3, ip
   81bf8:	ea22 0203 	bic.w	r2, r2, r3
   81bfc:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81c00:	bf04      	itt	eq
   81c02:	f851 3b04 	ldreq.w	r3, [r1], #4
   81c06:	3004      	addeq	r0, #4
   81c08:	d0f4      	beq.n	81bf4 <strlen+0x30>
   81c0a:	f1c2 0100 	rsb	r1, r2, #0
   81c0e:	ea02 0201 	and.w	r2, r2, r1
   81c12:	fab2 f282 	clz	r2, r2
   81c16:	f1c2 021f 	rsb	r2, r2, #31
   81c1a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81c1e:	4770      	bx	lr

00081c20 <strtok>:
   81c20:	4a02      	ldr	r2, [pc, #8]	; (81c2c <strtok+0xc>)
   81c22:	2301      	movs	r3, #1
   81c24:	6812      	ldr	r2, [r2, #0]
   81c26:	325c      	adds	r2, #92	; 0x5c
   81c28:	f000 b802 	b.w	81c30 <__strtok_r>
   81c2c:	20070590 	.word	0x20070590

00081c30 <__strtok_r>:
   81c30:	b4f0      	push	{r4, r5, r6, r7}
   81c32:	b318      	cbz	r0, 81c7c <__strtok_r+0x4c>
   81c34:	4607      	mov	r7, r0
   81c36:	460d      	mov	r5, r1
   81c38:	f817 6b01 	ldrb.w	r6, [r7], #1
   81c3c:	e001      	b.n	81c42 <__strtok_r+0x12>
   81c3e:	42a6      	cmp	r6, r4
   81c40:	d017      	beq.n	81c72 <__strtok_r+0x42>
   81c42:	f815 4b01 	ldrb.w	r4, [r5], #1
   81c46:	2c00      	cmp	r4, #0
   81c48:	d1f9      	bne.n	81c3e <__strtok_r+0xe>
   81c4a:	b1e6      	cbz	r6, 81c86 <__strtok_r+0x56>
   81c4c:	460c      	mov	r4, r1
   81c4e:	f817 5b01 	ldrb.w	r5, [r7], #1
   81c52:	e001      	b.n	81c58 <__strtok_r+0x28>
   81c54:	2b00      	cmp	r3, #0
   81c56:	d0f9      	beq.n	81c4c <__strtok_r+0x1c>
   81c58:	f814 3b01 	ldrb.w	r3, [r4], #1
   81c5c:	429d      	cmp	r5, r3
   81c5e:	d1f9      	bne.n	81c54 <__strtok_r+0x24>
   81c60:	b155      	cbz	r5, 81c78 <__strtok_r+0x48>
   81c62:	2300      	movs	r3, #0
   81c64:	f807 3c01 	strb.w	r3, [r7, #-1]
   81c68:	4606      	mov	r6, r0
   81c6a:	6017      	str	r7, [r2, #0]
   81c6c:	4630      	mov	r0, r6
   81c6e:	bcf0      	pop	{r4, r5, r6, r7}
   81c70:	4770      	bx	lr
   81c72:	b153      	cbz	r3, 81c8a <__strtok_r+0x5a>
   81c74:	4638      	mov	r0, r7
   81c76:	e7dd      	b.n	81c34 <__strtok_r+0x4>
   81c78:	462f      	mov	r7, r5
   81c7a:	e7f5      	b.n	81c68 <__strtok_r+0x38>
   81c7c:	6810      	ldr	r0, [r2, #0]
   81c7e:	2800      	cmp	r0, #0
   81c80:	d1d8      	bne.n	81c34 <__strtok_r+0x4>
   81c82:	4606      	mov	r6, r0
   81c84:	e7f2      	b.n	81c6c <__strtok_r+0x3c>
   81c86:	6016      	str	r6, [r2, #0]
   81c88:	e7f0      	b.n	81c6c <__strtok_r+0x3c>
   81c8a:	6017      	str	r7, [r2, #0]
   81c8c:	4606      	mov	r6, r0
   81c8e:	7003      	strb	r3, [r0, #0]
   81c90:	e7ec      	b.n	81c6c <__strtok_r+0x3c>
   81c92:	bf00      	nop

00081c94 <_strtol_l.isra.0>:
   81c94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81c98:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81c9c:	460f      	mov	r7, r1
   81c9e:	4680      	mov	r8, r0
   81ca0:	4616      	mov	r6, r2
   81ca2:	461d      	mov	r5, r3
   81ca4:	468a      	mov	sl, r1
   81ca6:	e000      	b.n	81caa <_strtol_l.isra.0+0x16>
   81ca8:	46a2      	mov	sl, r4
   81caa:	4654      	mov	r4, sl
   81cac:	4648      	mov	r0, r9
   81cae:	f814 bb01 	ldrb.w	fp, [r4], #1
   81cb2:	f002 faf9 	bl	842a8 <__locale_ctype_ptr_l>
   81cb6:	4458      	add	r0, fp
   81cb8:	7842      	ldrb	r2, [r0, #1]
   81cba:	f012 0208 	ands.w	r2, r2, #8
   81cbe:	d1f3      	bne.n	81ca8 <_strtol_l.isra.0+0x14>
   81cc0:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   81cc4:	d04f      	beq.n	81d66 <_strtol_l.isra.0+0xd2>
   81cc6:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   81cca:	bf04      	itt	eq
   81ccc:	f894 b000 	ldrbeq.w	fp, [r4]
   81cd0:	f10a 0402 	addeq.w	r4, sl, #2
   81cd4:	b11d      	cbz	r5, 81cde <_strtol_l.isra.0+0x4a>
   81cd6:	2d10      	cmp	r5, #16
   81cd8:	d056      	beq.n	81d88 <_strtol_l.isra.0+0xf4>
   81cda:	46ac      	mov	ip, r5
   81cdc:	e004      	b.n	81ce8 <_strtol_l.isra.0+0x54>
   81cde:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81ce2:	d060      	beq.n	81da6 <_strtol_l.isra.0+0x112>
   81ce4:	250a      	movs	r5, #10
   81ce6:	46ac      	mov	ip, r5
   81ce8:	2a00      	cmp	r2, #0
   81cea:	bf0c      	ite	eq
   81cec:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   81cf0:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   81cf4:	2100      	movs	r1, #0
   81cf6:	fbb9 fefc 	udiv	lr, r9, ip
   81cfa:	4608      	mov	r0, r1
   81cfc:	fb0c 9a1e 	mls	sl, ip, lr, r9
   81d00:	e005      	b.n	81d0e <_strtol_l.isra.0+0x7a>
   81d02:	d029      	beq.n	81d58 <_strtol_l.isra.0+0xc4>
   81d04:	2101      	movs	r1, #1
   81d06:	fb0c 3000 	mla	r0, ip, r0, r3
   81d0a:	f814 bb01 	ldrb.w	fp, [r4], #1
   81d0e:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   81d12:	2b09      	cmp	r3, #9
   81d14:	d905      	bls.n	81d22 <_strtol_l.isra.0+0x8e>
   81d16:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   81d1a:	2b19      	cmp	r3, #25
   81d1c:	d80b      	bhi.n	81d36 <_strtol_l.isra.0+0xa2>
   81d1e:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   81d22:	429d      	cmp	r5, r3
   81d24:	dd0f      	ble.n	81d46 <_strtol_l.isra.0+0xb2>
   81d26:	f1b1 3fff 	cmp.w	r1, #4294967295
   81d2a:	d0ee      	beq.n	81d0a <_strtol_l.isra.0+0x76>
   81d2c:	4586      	cmp	lr, r0
   81d2e:	d2e8      	bcs.n	81d02 <_strtol_l.isra.0+0x6e>
   81d30:	f04f 31ff 	mov.w	r1, #4294967295
   81d34:	e7e9      	b.n	81d0a <_strtol_l.isra.0+0x76>
   81d36:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   81d3a:	2b19      	cmp	r3, #25
   81d3c:	d803      	bhi.n	81d46 <_strtol_l.isra.0+0xb2>
   81d3e:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   81d42:	429d      	cmp	r5, r3
   81d44:	dcef      	bgt.n	81d26 <_strtol_l.isra.0+0x92>
   81d46:	1c4b      	adds	r3, r1, #1
   81d48:	d013      	beq.n	81d72 <_strtol_l.isra.0+0xde>
   81d4a:	b102      	cbz	r2, 81d4e <_strtol_l.isra.0+0xba>
   81d4c:	4240      	negs	r0, r0
   81d4e:	b146      	cbz	r6, 81d62 <_strtol_l.isra.0+0xce>
   81d50:	b9c1      	cbnz	r1, 81d84 <_strtol_l.isra.0+0xf0>
   81d52:	6037      	str	r7, [r6, #0]
   81d54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81d58:	459a      	cmp	sl, r3
   81d5a:	dad3      	bge.n	81d04 <_strtol_l.isra.0+0x70>
   81d5c:	f04f 31ff 	mov.w	r1, #4294967295
   81d60:	e7d3      	b.n	81d0a <_strtol_l.isra.0+0x76>
   81d62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81d66:	f894 b000 	ldrb.w	fp, [r4]
   81d6a:	2201      	movs	r2, #1
   81d6c:	f10a 0402 	add.w	r4, sl, #2
   81d70:	e7b0      	b.n	81cd4 <_strtol_l.isra.0+0x40>
   81d72:	2322      	movs	r3, #34	; 0x22
   81d74:	f8c8 3000 	str.w	r3, [r8]
   81d78:	b1ee      	cbz	r6, 81db6 <_strtol_l.isra.0+0x122>
   81d7a:	1e67      	subs	r7, r4, #1
   81d7c:	4648      	mov	r0, r9
   81d7e:	6037      	str	r7, [r6, #0]
   81d80:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81d84:	4681      	mov	r9, r0
   81d86:	e7f8      	b.n	81d7a <_strtol_l.isra.0+0xe6>
   81d88:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81d8c:	d1a5      	bne.n	81cda <_strtol_l.isra.0+0x46>
   81d8e:	7823      	ldrb	r3, [r4, #0]
   81d90:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81d94:	2b58      	cmp	r3, #88	; 0x58
   81d96:	d1a0      	bne.n	81cda <_strtol_l.isra.0+0x46>
   81d98:	f04f 0c10 	mov.w	ip, #16
   81d9c:	f894 b001 	ldrb.w	fp, [r4, #1]
   81da0:	4665      	mov	r5, ip
   81da2:	3402      	adds	r4, #2
   81da4:	e7a0      	b.n	81ce8 <_strtol_l.isra.0+0x54>
   81da6:	7823      	ldrb	r3, [r4, #0]
   81da8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81dac:	2b58      	cmp	r3, #88	; 0x58
   81dae:	d0f3      	beq.n	81d98 <_strtol_l.isra.0+0x104>
   81db0:	2508      	movs	r5, #8
   81db2:	46ac      	mov	ip, r5
   81db4:	e798      	b.n	81ce8 <_strtol_l.isra.0+0x54>
   81db6:	4648      	mov	r0, r9
   81db8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00081dbc <strtol>:
   81dbc:	4b08      	ldr	r3, [pc, #32]	; (81de0 <strtol+0x24>)
   81dbe:	b570      	push	{r4, r5, r6, lr}
   81dc0:	681d      	ldr	r5, [r3, #0]
   81dc2:	4e08      	ldr	r6, [pc, #32]	; (81de4 <strtol+0x28>)
   81dc4:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   81dc6:	b082      	sub	sp, #8
   81dc8:	2c00      	cmp	r4, #0
   81dca:	bf08      	it	eq
   81dcc:	4634      	moveq	r4, r6
   81dce:	4613      	mov	r3, r2
   81dd0:	9400      	str	r4, [sp, #0]
   81dd2:	460a      	mov	r2, r1
   81dd4:	4601      	mov	r1, r0
   81dd6:	4628      	mov	r0, r5
   81dd8:	f7ff ff5c 	bl	81c94 <_strtol_l.isra.0>
   81ddc:	b002      	add	sp, #8
   81dde:	bd70      	pop	{r4, r5, r6, pc}
   81de0:	20070590 	.word	0x20070590
   81de4:	200709c4 	.word	0x200709c4

00081de8 <_svfprintf_r>:
   81de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81dec:	b0c3      	sub	sp, #268	; 0x10c
   81dee:	460c      	mov	r4, r1
   81df0:	910b      	str	r1, [sp, #44]	; 0x2c
   81df2:	4692      	mov	sl, r2
   81df4:	930f      	str	r3, [sp, #60]	; 0x3c
   81df6:	900c      	str	r0, [sp, #48]	; 0x30
   81df8:	f002 fa5a 	bl	842b0 <_localeconv_r>
   81dfc:	6803      	ldr	r3, [r0, #0]
   81dfe:	4618      	mov	r0, r3
   81e00:	931a      	str	r3, [sp, #104]	; 0x68
   81e02:	f7ff fedf 	bl	81bc4 <strlen>
   81e06:	89a3      	ldrh	r3, [r4, #12]
   81e08:	9019      	str	r0, [sp, #100]	; 0x64
   81e0a:	0619      	lsls	r1, r3, #24
   81e0c:	d503      	bpl.n	81e16 <_svfprintf_r+0x2e>
   81e0e:	6923      	ldr	r3, [r4, #16]
   81e10:	2b00      	cmp	r3, #0
   81e12:	f001 8035 	beq.w	82e80 <_svfprintf_r+0x1098>
   81e16:	2300      	movs	r3, #0
   81e18:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81e1c:	46c8      	mov	r8, r9
   81e1e:	9315      	str	r3, [sp, #84]	; 0x54
   81e20:	9313      	str	r3, [sp, #76]	; 0x4c
   81e22:	9314      	str	r3, [sp, #80]	; 0x50
   81e24:	9318      	str	r3, [sp, #96]	; 0x60
   81e26:	931b      	str	r3, [sp, #108]	; 0x6c
   81e28:	9309      	str	r3, [sp, #36]	; 0x24
   81e2a:	9316      	str	r3, [sp, #88]	; 0x58
   81e2c:	9317      	str	r3, [sp, #92]	; 0x5c
   81e2e:	9327      	str	r3, [sp, #156]	; 0x9c
   81e30:	9326      	str	r3, [sp, #152]	; 0x98
   81e32:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81e36:	f89a 3000 	ldrb.w	r3, [sl]
   81e3a:	4654      	mov	r4, sl
   81e3c:	b1eb      	cbz	r3, 81e7a <_svfprintf_r+0x92>
   81e3e:	2b25      	cmp	r3, #37	; 0x25
   81e40:	d102      	bne.n	81e48 <_svfprintf_r+0x60>
   81e42:	e01a      	b.n	81e7a <_svfprintf_r+0x92>
   81e44:	2b25      	cmp	r3, #37	; 0x25
   81e46:	d003      	beq.n	81e50 <_svfprintf_r+0x68>
   81e48:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81e4c:	2b00      	cmp	r3, #0
   81e4e:	d1f9      	bne.n	81e44 <_svfprintf_r+0x5c>
   81e50:	eba4 050a 	sub.w	r5, r4, sl
   81e54:	b18d      	cbz	r5, 81e7a <_svfprintf_r+0x92>
   81e56:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e58:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81e5a:	3301      	adds	r3, #1
   81e5c:	442a      	add	r2, r5
   81e5e:	2b07      	cmp	r3, #7
   81e60:	f8c8 a000 	str.w	sl, [r8]
   81e64:	f8c8 5004 	str.w	r5, [r8, #4]
   81e68:	9227      	str	r2, [sp, #156]	; 0x9c
   81e6a:	9326      	str	r3, [sp, #152]	; 0x98
   81e6c:	f300 808a 	bgt.w	81f84 <_svfprintf_r+0x19c>
   81e70:	f108 0808 	add.w	r8, r8, #8
   81e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81e76:	442b      	add	r3, r5
   81e78:	9309      	str	r3, [sp, #36]	; 0x24
   81e7a:	7823      	ldrb	r3, [r4, #0]
   81e7c:	2b00      	cmp	r3, #0
   81e7e:	f000 8089 	beq.w	81f94 <_svfprintf_r+0x1ac>
   81e82:	2300      	movs	r3, #0
   81e84:	f04f 30ff 	mov.w	r0, #4294967295
   81e88:	461a      	mov	r2, r3
   81e8a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81e8e:	4619      	mov	r1, r3
   81e90:	930d      	str	r3, [sp, #52]	; 0x34
   81e92:	469b      	mov	fp, r3
   81e94:	7863      	ldrb	r3, [r4, #1]
   81e96:	f104 0a01 	add.w	sl, r4, #1
   81e9a:	900a      	str	r0, [sp, #40]	; 0x28
   81e9c:	f10a 0a01 	add.w	sl, sl, #1
   81ea0:	f1a3 0020 	sub.w	r0, r3, #32
   81ea4:	2858      	cmp	r0, #88	; 0x58
   81ea6:	f200 83b7 	bhi.w	82618 <_svfprintf_r+0x830>
   81eaa:	e8df f010 	tbh	[pc, r0, lsl #1]
   81eae:	034c      	.short	0x034c
   81eb0:	03b503b5 	.word	0x03b503b5
   81eb4:	03b50354 	.word	0x03b50354
   81eb8:	03b503b5 	.word	0x03b503b5
   81ebc:	03b503b5 	.word	0x03b503b5
   81ec0:	005903b5 	.word	0x005903b5
   81ec4:	03b50359 	.word	0x03b50359
   81ec8:	02140066 	.word	0x02140066
   81ecc:	022f03b5 	.word	0x022f03b5
   81ed0:	03a503a5 	.word	0x03a503a5
   81ed4:	03a503a5 	.word	0x03a503a5
   81ed8:	03a503a5 	.word	0x03a503a5
   81edc:	03a503a5 	.word	0x03a503a5
   81ee0:	03b503a5 	.word	0x03b503a5
   81ee4:	03b503b5 	.word	0x03b503b5
   81ee8:	03b503b5 	.word	0x03b503b5
   81eec:	03b503b5 	.word	0x03b503b5
   81ef0:	03b503b5 	.word	0x03b503b5
   81ef4:	028b03b5 	.word	0x028b03b5
   81ef8:	03b502d3 	.word	0x03b502d3
   81efc:	03b502d3 	.word	0x03b502d3
   81f00:	03b503b5 	.word	0x03b503b5
   81f04:	031b03b5 	.word	0x031b03b5
   81f08:	03b503b5 	.word	0x03b503b5
   81f0c:	03b50320 	.word	0x03b50320
   81f10:	03b503b5 	.word	0x03b503b5
   81f14:	03b503b5 	.word	0x03b503b5
   81f18:	03b50234 	.word	0x03b50234
   81f1c:	024b03b5 	.word	0x024b03b5
   81f20:	03b503b5 	.word	0x03b503b5
   81f24:	03b503b5 	.word	0x03b503b5
   81f28:	03b503b5 	.word	0x03b503b5
   81f2c:	03b503b5 	.word	0x03b503b5
   81f30:	03b503b5 	.word	0x03b503b5
   81f34:	039e0276 	.word	0x039e0276
   81f38:	02d302d3 	.word	0x02d302d3
   81f3c:	036302d3 	.word	0x036302d3
   81f40:	03b5039e 	.word	0x03b5039e
   81f44:	036803b5 	.word	0x036803b5
   81f48:	037503b5 	.word	0x037503b5
   81f4c:	038c01dd 	.word	0x038c01dd
   81f50:	03b5035e 	.word	0x03b5035e
   81f54:	03b501f2 	.word	0x03b501f2
   81f58:	03b50087 	.word	0x03b50087
   81f5c:	033203b5 	.word	0x033203b5
   81f60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81f62:	6823      	ldr	r3, [r4, #0]
   81f64:	4618      	mov	r0, r3
   81f66:	930d      	str	r3, [sp, #52]	; 0x34
   81f68:	4623      	mov	r3, r4
   81f6a:	2800      	cmp	r0, #0
   81f6c:	f103 0304 	add.w	r3, r3, #4
   81f70:	930f      	str	r3, [sp, #60]	; 0x3c
   81f72:	da04      	bge.n	81f7e <_svfprintf_r+0x196>
   81f74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81f76:	425b      	negs	r3, r3
   81f78:	930d      	str	r3, [sp, #52]	; 0x34
   81f7a:	f04b 0b04 	orr.w	fp, fp, #4
   81f7e:	f89a 3000 	ldrb.w	r3, [sl]
   81f82:	e78b      	b.n	81e9c <_svfprintf_r+0xb4>
   81f84:	aa25      	add	r2, sp, #148	; 0x94
   81f86:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81f88:	980c      	ldr	r0, [sp, #48]	; 0x30
   81f8a:	f003 f831 	bl	84ff0 <__ssprint_r>
   81f8e:	b940      	cbnz	r0, 81fa2 <_svfprintf_r+0x1ba>
   81f90:	46c8      	mov	r8, r9
   81f92:	e76f      	b.n	81e74 <_svfprintf_r+0x8c>
   81f94:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f96:	b123      	cbz	r3, 81fa2 <_svfprintf_r+0x1ba>
   81f98:	980c      	ldr	r0, [sp, #48]	; 0x30
   81f9a:	aa25      	add	r2, sp, #148	; 0x94
   81f9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81f9e:	f003 f827 	bl	84ff0 <__ssprint_r>
   81fa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81fa4:	899b      	ldrh	r3, [r3, #12]
   81fa6:	f013 0f40 	tst.w	r3, #64	; 0x40
   81faa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81fac:	bf18      	it	ne
   81fae:	f04f 33ff 	movne.w	r3, #4294967295
   81fb2:	9309      	str	r3, [sp, #36]	; 0x24
   81fb4:	9809      	ldr	r0, [sp, #36]	; 0x24
   81fb6:	b043      	add	sp, #268	; 0x10c
   81fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81fbc:	f01b 0f20 	tst.w	fp, #32
   81fc0:	9311      	str	r3, [sp, #68]	; 0x44
   81fc2:	f040 81af 	bne.w	82324 <_svfprintf_r+0x53c>
   81fc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81fc8:	f01b 0f10 	tst.w	fp, #16
   81fcc:	4613      	mov	r3, r2
   81fce:	f040 859a 	bne.w	82b06 <_svfprintf_r+0xd1e>
   81fd2:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81fd6:	f000 8596 	beq.w	82b06 <_svfprintf_r+0xd1e>
   81fda:	2500      	movs	r5, #0
   81fdc:	2301      	movs	r3, #1
   81fde:	8814      	ldrh	r4, [r2, #0]
   81fe0:	3204      	adds	r2, #4
   81fe2:	920f      	str	r2, [sp, #60]	; 0x3c
   81fe4:	2200      	movs	r2, #0
   81fe6:	4617      	mov	r7, r2
   81fe8:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   81fec:	990a      	ldr	r1, [sp, #40]	; 0x28
   81fee:	1c4a      	adds	r2, r1, #1
   81ff0:	f000 8210 	beq.w	82414 <_svfprintf_r+0x62c>
   81ff4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   81ff8:	9207      	str	r2, [sp, #28]
   81ffa:	ea54 0205 	orrs.w	r2, r4, r5
   81ffe:	f040 820f 	bne.w	82420 <_svfprintf_r+0x638>
   82002:	2900      	cmp	r1, #0
   82004:	f040 8431 	bne.w	8286a <_svfprintf_r+0xa82>
   82008:	2b00      	cmp	r3, #0
   8200a:	f040 8539 	bne.w	82a80 <_svfprintf_r+0xc98>
   8200e:	f01b 0301 	ands.w	r3, fp, #1
   82012:	930e      	str	r3, [sp, #56]	; 0x38
   82014:	f000 8662 	beq.w	82cdc <_svfprintf_r+0xef4>
   82018:	2330      	movs	r3, #48	; 0x30
   8201a:	ae42      	add	r6, sp, #264	; 0x108
   8201c:	f806 3d41 	strb.w	r3, [r6, #-65]!
   82020:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82022:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82024:	4293      	cmp	r3, r2
   82026:	bfb8      	it	lt
   82028:	4613      	movlt	r3, r2
   8202a:	9308      	str	r3, [sp, #32]
   8202c:	2300      	movs	r3, #0
   8202e:	9312      	str	r3, [sp, #72]	; 0x48
   82030:	b117      	cbz	r7, 82038 <_svfprintf_r+0x250>
   82032:	9b08      	ldr	r3, [sp, #32]
   82034:	3301      	adds	r3, #1
   82036:	9308      	str	r3, [sp, #32]
   82038:	9b07      	ldr	r3, [sp, #28]
   8203a:	f013 0302 	ands.w	r3, r3, #2
   8203e:	9310      	str	r3, [sp, #64]	; 0x40
   82040:	d002      	beq.n	82048 <_svfprintf_r+0x260>
   82042:	9b08      	ldr	r3, [sp, #32]
   82044:	3302      	adds	r3, #2
   82046:	9308      	str	r3, [sp, #32]
   82048:	9b07      	ldr	r3, [sp, #28]
   8204a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   8204e:	f040 8310 	bne.w	82672 <_svfprintf_r+0x88a>
   82052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82054:	9a08      	ldr	r2, [sp, #32]
   82056:	eba3 0b02 	sub.w	fp, r3, r2
   8205a:	f1bb 0f00 	cmp.w	fp, #0
   8205e:	f340 8308 	ble.w	82672 <_svfprintf_r+0x88a>
   82062:	f1bb 0f10 	cmp.w	fp, #16
   82066:	f340 87b2 	ble.w	82fce <_svfprintf_r+0x11e6>
   8206a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8206c:	4643      	mov	r3, r8
   8206e:	4621      	mov	r1, r4
   82070:	46a8      	mov	r8, r5
   82072:	2710      	movs	r7, #16
   82074:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82076:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82078:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8207a:	e006      	b.n	8208a <_svfprintf_r+0x2a2>
   8207c:	f1ab 0b10 	sub.w	fp, fp, #16
   82080:	f1bb 0f10 	cmp.w	fp, #16
   82084:	f103 0308 	add.w	r3, r3, #8
   82088:	dd18      	ble.n	820bc <_svfprintf_r+0x2d4>
   8208a:	3201      	adds	r2, #1
   8208c:	48ab      	ldr	r0, [pc, #684]	; (8233c <_svfprintf_r+0x554>)
   8208e:	3110      	adds	r1, #16
   82090:	2a07      	cmp	r2, #7
   82092:	9127      	str	r1, [sp, #156]	; 0x9c
   82094:	9226      	str	r2, [sp, #152]	; 0x98
   82096:	e883 0081 	stmia.w	r3, {r0, r7}
   8209a:	ddef      	ble.n	8207c <_svfprintf_r+0x294>
   8209c:	aa25      	add	r2, sp, #148	; 0x94
   8209e:	4629      	mov	r1, r5
   820a0:	4620      	mov	r0, r4
   820a2:	f002 ffa5 	bl	84ff0 <__ssprint_r>
   820a6:	2800      	cmp	r0, #0
   820a8:	f47f af7b 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   820ac:	f1ab 0b10 	sub.w	fp, fp, #16
   820b0:	f1bb 0f10 	cmp.w	fp, #16
   820b4:	464b      	mov	r3, r9
   820b6:	9927      	ldr	r1, [sp, #156]	; 0x9c
   820b8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   820ba:	dce6      	bgt.n	8208a <_svfprintf_r+0x2a2>
   820bc:	4645      	mov	r5, r8
   820be:	460c      	mov	r4, r1
   820c0:	4698      	mov	r8, r3
   820c2:	3201      	adds	r2, #1
   820c4:	4b9d      	ldr	r3, [pc, #628]	; (8233c <_svfprintf_r+0x554>)
   820c6:	445c      	add	r4, fp
   820c8:	2a07      	cmp	r2, #7
   820ca:	9427      	str	r4, [sp, #156]	; 0x9c
   820cc:	9226      	str	r2, [sp, #152]	; 0x98
   820ce:	e888 0808 	stmia.w	r8, {r3, fp}
   820d2:	f300 82c3 	bgt.w	8265c <_svfprintf_r+0x874>
   820d6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   820da:	f108 0808 	add.w	r8, r8, #8
   820de:	b187      	cbz	r7, 82102 <_svfprintf_r+0x31a>
   820e0:	2101      	movs	r1, #1
   820e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   820e4:	440c      	add	r4, r1
   820e6:	440b      	add	r3, r1
   820e8:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   820ec:	2b07      	cmp	r3, #7
   820ee:	9427      	str	r4, [sp, #156]	; 0x9c
   820f0:	9326      	str	r3, [sp, #152]	; 0x98
   820f2:	f8c8 1004 	str.w	r1, [r8, #4]
   820f6:	f8c8 2000 	str.w	r2, [r8]
   820fa:	f300 83cd 	bgt.w	82898 <_svfprintf_r+0xab0>
   820fe:	f108 0808 	add.w	r8, r8, #8
   82102:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82104:	b17b      	cbz	r3, 82126 <_svfprintf_r+0x33e>
   82106:	2102      	movs	r1, #2
   82108:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8210a:	440c      	add	r4, r1
   8210c:	3301      	adds	r3, #1
   8210e:	aa1e      	add	r2, sp, #120	; 0x78
   82110:	2b07      	cmp	r3, #7
   82112:	9427      	str	r4, [sp, #156]	; 0x9c
   82114:	9326      	str	r3, [sp, #152]	; 0x98
   82116:	f8c8 1004 	str.w	r1, [r8, #4]
   8211a:	f8c8 2000 	str.w	r2, [r8]
   8211e:	f300 8411 	bgt.w	82944 <_svfprintf_r+0xb5c>
   82122:	f108 0808 	add.w	r8, r8, #8
   82126:	2d80      	cmp	r5, #128	; 0x80
   82128:	f000 8304 	beq.w	82734 <_svfprintf_r+0x94c>
   8212c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8212e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82130:	1a9f      	subs	r7, r3, r2
   82132:	2f00      	cmp	r7, #0
   82134:	dd37      	ble.n	821a6 <_svfprintf_r+0x3be>
   82136:	2f10      	cmp	r7, #16
   82138:	f340 8679 	ble.w	82e2e <_svfprintf_r+0x1046>
   8213c:	4d80      	ldr	r5, [pc, #512]	; (82340 <_svfprintf_r+0x558>)
   8213e:	4642      	mov	r2, r8
   82140:	4621      	mov	r1, r4
   82142:	46b0      	mov	r8, r6
   82144:	f04f 0b10 	mov.w	fp, #16
   82148:	462e      	mov	r6, r5
   8214a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8214c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8214e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82150:	e004      	b.n	8215c <_svfprintf_r+0x374>
   82152:	3f10      	subs	r7, #16
   82154:	2f10      	cmp	r7, #16
   82156:	f102 0208 	add.w	r2, r2, #8
   8215a:	dd15      	ble.n	82188 <_svfprintf_r+0x3a0>
   8215c:	3301      	adds	r3, #1
   8215e:	3110      	adds	r1, #16
   82160:	2b07      	cmp	r3, #7
   82162:	9127      	str	r1, [sp, #156]	; 0x9c
   82164:	9326      	str	r3, [sp, #152]	; 0x98
   82166:	e882 0840 	stmia.w	r2, {r6, fp}
   8216a:	ddf2      	ble.n	82152 <_svfprintf_r+0x36a>
   8216c:	aa25      	add	r2, sp, #148	; 0x94
   8216e:	4629      	mov	r1, r5
   82170:	4620      	mov	r0, r4
   82172:	f002 ff3d 	bl	84ff0 <__ssprint_r>
   82176:	2800      	cmp	r0, #0
   82178:	f47f af13 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8217c:	3f10      	subs	r7, #16
   8217e:	2f10      	cmp	r7, #16
   82180:	464a      	mov	r2, r9
   82182:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82184:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82186:	dce9      	bgt.n	8215c <_svfprintf_r+0x374>
   82188:	4635      	mov	r5, r6
   8218a:	460c      	mov	r4, r1
   8218c:	4646      	mov	r6, r8
   8218e:	4690      	mov	r8, r2
   82190:	3301      	adds	r3, #1
   82192:	443c      	add	r4, r7
   82194:	2b07      	cmp	r3, #7
   82196:	9427      	str	r4, [sp, #156]	; 0x9c
   82198:	9326      	str	r3, [sp, #152]	; 0x98
   8219a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8219e:	f300 8370 	bgt.w	82882 <_svfprintf_r+0xa9a>
   821a2:	f108 0808 	add.w	r8, r8, #8
   821a6:	9b07      	ldr	r3, [sp, #28]
   821a8:	05df      	lsls	r7, r3, #23
   821aa:	f100 8264 	bmi.w	82676 <_svfprintf_r+0x88e>
   821ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821b0:	990e      	ldr	r1, [sp, #56]	; 0x38
   821b2:	3301      	adds	r3, #1
   821b4:	440c      	add	r4, r1
   821b6:	2b07      	cmp	r3, #7
   821b8:	9427      	str	r4, [sp, #156]	; 0x9c
   821ba:	f8c8 6000 	str.w	r6, [r8]
   821be:	f8c8 1004 	str.w	r1, [r8, #4]
   821c2:	9326      	str	r3, [sp, #152]	; 0x98
   821c4:	f300 83b3 	bgt.w	8292e <_svfprintf_r+0xb46>
   821c8:	f108 0808 	add.w	r8, r8, #8
   821cc:	9b07      	ldr	r3, [sp, #28]
   821ce:	075b      	lsls	r3, r3, #29
   821d0:	d53b      	bpl.n	8224a <_svfprintf_r+0x462>
   821d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   821d4:	9a08      	ldr	r2, [sp, #32]
   821d6:	1a9d      	subs	r5, r3, r2
   821d8:	2d00      	cmp	r5, #0
   821da:	dd36      	ble.n	8224a <_svfprintf_r+0x462>
   821dc:	2d10      	cmp	r5, #16
   821de:	f340 8721 	ble.w	83024 <_svfprintf_r+0x123c>
   821e2:	2610      	movs	r6, #16
   821e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821e6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   821e8:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   821ec:	e004      	b.n	821f8 <_svfprintf_r+0x410>
   821ee:	3d10      	subs	r5, #16
   821f0:	2d10      	cmp	r5, #16
   821f2:	f108 0808 	add.w	r8, r8, #8
   821f6:	dd16      	ble.n	82226 <_svfprintf_r+0x43e>
   821f8:	3301      	adds	r3, #1
   821fa:	4a50      	ldr	r2, [pc, #320]	; (8233c <_svfprintf_r+0x554>)
   821fc:	3410      	adds	r4, #16
   821fe:	2b07      	cmp	r3, #7
   82200:	9427      	str	r4, [sp, #156]	; 0x9c
   82202:	9326      	str	r3, [sp, #152]	; 0x98
   82204:	e888 0044 	stmia.w	r8, {r2, r6}
   82208:	ddf1      	ble.n	821ee <_svfprintf_r+0x406>
   8220a:	aa25      	add	r2, sp, #148	; 0x94
   8220c:	4659      	mov	r1, fp
   8220e:	4638      	mov	r0, r7
   82210:	f002 feee 	bl	84ff0 <__ssprint_r>
   82214:	2800      	cmp	r0, #0
   82216:	f47f aec4 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8221a:	3d10      	subs	r5, #16
   8221c:	2d10      	cmp	r5, #16
   8221e:	46c8      	mov	r8, r9
   82220:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82222:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82224:	dce8      	bgt.n	821f8 <_svfprintf_r+0x410>
   82226:	3301      	adds	r3, #1
   82228:	4a44      	ldr	r2, [pc, #272]	; (8233c <_svfprintf_r+0x554>)
   8222a:	442c      	add	r4, r5
   8222c:	2b07      	cmp	r3, #7
   8222e:	9427      	str	r4, [sp, #156]	; 0x9c
   82230:	9326      	str	r3, [sp, #152]	; 0x98
   82232:	e888 0024 	stmia.w	r8, {r2, r5}
   82236:	dd08      	ble.n	8224a <_svfprintf_r+0x462>
   82238:	aa25      	add	r2, sp, #148	; 0x94
   8223a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8223c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8223e:	f002 fed7 	bl	84ff0 <__ssprint_r>
   82242:	2800      	cmp	r0, #0
   82244:	f47f aead 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82248:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8224a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8224c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   8224e:	9908      	ldr	r1, [sp, #32]
   82250:	428a      	cmp	r2, r1
   82252:	bfac      	ite	ge
   82254:	189b      	addge	r3, r3, r2
   82256:	185b      	addlt	r3, r3, r1
   82258:	9309      	str	r3, [sp, #36]	; 0x24
   8225a:	2c00      	cmp	r4, #0
   8225c:	f040 82fb 	bne.w	82856 <_svfprintf_r+0xa6e>
   82260:	2300      	movs	r3, #0
   82262:	46c8      	mov	r8, r9
   82264:	9326      	str	r3, [sp, #152]	; 0x98
   82266:	e5e6      	b.n	81e36 <_svfprintf_r+0x4e>
   82268:	9311      	str	r3, [sp, #68]	; 0x44
   8226a:	f01b 0320 	ands.w	r3, fp, #32
   8226e:	f040 8145 	bne.w	824fc <_svfprintf_r+0x714>
   82272:	f01b 0210 	ands.w	r2, fp, #16
   82276:	f040 8466 	bne.w	82b46 <_svfprintf_r+0xd5e>
   8227a:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   8227e:	f000 8462 	beq.w	82b46 <_svfprintf_r+0xd5e>
   82282:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82284:	4613      	mov	r3, r2
   82286:	460a      	mov	r2, r1
   82288:	3204      	adds	r2, #4
   8228a:	880c      	ldrh	r4, [r1, #0]
   8228c:	2500      	movs	r5, #0
   8228e:	920f      	str	r2, [sp, #60]	; 0x3c
   82290:	e6a8      	b.n	81fe4 <_svfprintf_r+0x1fc>
   82292:	2500      	movs	r5, #0
   82294:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82296:	9311      	str	r3, [sp, #68]	; 0x44
   82298:	6816      	ldr	r6, [r2, #0]
   8229a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   8229e:	1d14      	adds	r4, r2, #4
   822a0:	2e00      	cmp	r6, #0
   822a2:	f000 86cd 	beq.w	83040 <_svfprintf_r+0x1258>
   822a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   822a8:	1c53      	adds	r3, r2, #1
   822aa:	f000 861b 	beq.w	82ee4 <_svfprintf_r+0x10fc>
   822ae:	4629      	mov	r1, r5
   822b0:	4630      	mov	r0, r6
   822b2:	f002 fac7 	bl	84844 <memchr>
   822b6:	2800      	cmp	r0, #0
   822b8:	f000 870d 	beq.w	830d6 <_svfprintf_r+0x12ee>
   822bc:	1b83      	subs	r3, r0, r6
   822be:	950a      	str	r5, [sp, #40]	; 0x28
   822c0:	930e      	str	r3, [sp, #56]	; 0x38
   822c2:	940f      	str	r4, [sp, #60]	; 0x3c
   822c4:	f8cd b01c 	str.w	fp, [sp, #28]
   822c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   822cc:	9308      	str	r3, [sp, #32]
   822ce:	9512      	str	r5, [sp, #72]	; 0x48
   822d0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   822d4:	e6ac      	b.n	82030 <_svfprintf_r+0x248>
   822d6:	f89a 3000 	ldrb.w	r3, [sl]
   822da:	f10a 0401 	add.w	r4, sl, #1
   822de:	2b2a      	cmp	r3, #42	; 0x2a
   822e0:	f000 87c2 	beq.w	83268 <_svfprintf_r+0x1480>
   822e4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   822e8:	2809      	cmp	r0, #9
   822ea:	46a2      	mov	sl, r4
   822ec:	f200 8718 	bhi.w	83120 <_svfprintf_r+0x1338>
   822f0:	2300      	movs	r3, #0
   822f2:	461c      	mov	r4, r3
   822f4:	f81a 3b01 	ldrb.w	r3, [sl], #1
   822f8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   822fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82300:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82304:	2809      	cmp	r0, #9
   82306:	d9f5      	bls.n	822f4 <_svfprintf_r+0x50c>
   82308:	940a      	str	r4, [sp, #40]	; 0x28
   8230a:	e5c9      	b.n	81ea0 <_svfprintf_r+0xb8>
   8230c:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   82310:	f89a 3000 	ldrb.w	r3, [sl]
   82314:	e5c2      	b.n	81e9c <_svfprintf_r+0xb4>
   82316:	f04b 0b10 	orr.w	fp, fp, #16
   8231a:	f01b 0f20 	tst.w	fp, #32
   8231e:	9311      	str	r3, [sp, #68]	; 0x44
   82320:	f43f ae51 	beq.w	81fc6 <_svfprintf_r+0x1de>
   82324:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82326:	3407      	adds	r4, #7
   82328:	f024 0307 	bic.w	r3, r4, #7
   8232c:	f103 0208 	add.w	r2, r3, #8
   82330:	e9d3 4500 	ldrd	r4, r5, [r3]
   82334:	920f      	str	r2, [sp, #60]	; 0x3c
   82336:	2301      	movs	r3, #1
   82338:	e654      	b.n	81fe4 <_svfprintf_r+0x1fc>
   8233a:	bf00      	nop
   8233c:	00086728 	.word	0x00086728
   82340:	00086738 	.word	0x00086738
   82344:	9311      	str	r3, [sp, #68]	; 0x44
   82346:	2a00      	cmp	r2, #0
   82348:	f040 87ad 	bne.w	832a6 <_svfprintf_r+0x14be>
   8234c:	4bbe      	ldr	r3, [pc, #760]	; (82648 <_svfprintf_r+0x860>)
   8234e:	f01b 0f20 	tst.w	fp, #32
   82352:	9318      	str	r3, [sp, #96]	; 0x60
   82354:	f040 80e7 	bne.w	82526 <_svfprintf_r+0x73e>
   82358:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8235a:	f01b 0f10 	tst.w	fp, #16
   8235e:	4613      	mov	r3, r2
   82360:	f040 83d8 	bne.w	82b14 <_svfprintf_r+0xd2c>
   82364:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82368:	f000 83d4 	beq.w	82b14 <_svfprintf_r+0xd2c>
   8236c:	2500      	movs	r5, #0
   8236e:	3304      	adds	r3, #4
   82370:	8814      	ldrh	r4, [r2, #0]
   82372:	930f      	str	r3, [sp, #60]	; 0x3c
   82374:	f01b 0f01 	tst.w	fp, #1
   82378:	f000 80e3 	beq.w	82542 <_svfprintf_r+0x75a>
   8237c:	ea54 0305 	orrs.w	r3, r4, r5
   82380:	f000 80df 	beq.w	82542 <_svfprintf_r+0x75a>
   82384:	2330      	movs	r3, #48	; 0x30
   82386:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   8238a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   8238e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   82392:	f04b 0b02 	orr.w	fp, fp, #2
   82396:	2302      	movs	r3, #2
   82398:	e624      	b.n	81fe4 <_svfprintf_r+0x1fc>
   8239a:	2201      	movs	r2, #1
   8239c:	9311      	str	r3, [sp, #68]	; 0x44
   8239e:	2300      	movs	r3, #0
   823a0:	4611      	mov	r1, r2
   823a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
   823a4:	9208      	str	r2, [sp, #32]
   823a6:	6802      	ldr	r2, [r0, #0]
   823a8:	461f      	mov	r7, r3
   823aa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   823ae:	930a      	str	r3, [sp, #40]	; 0x28
   823b0:	9312      	str	r3, [sp, #72]	; 0x48
   823b2:	1d03      	adds	r3, r0, #4
   823b4:	f8cd b01c 	str.w	fp, [sp, #28]
   823b8:	910e      	str	r1, [sp, #56]	; 0x38
   823ba:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   823be:	930f      	str	r3, [sp, #60]	; 0x3c
   823c0:	ae28      	add	r6, sp, #160	; 0xa0
   823c2:	e639      	b.n	82038 <_svfprintf_r+0x250>
   823c4:	9311      	str	r3, [sp, #68]	; 0x44
   823c6:	2a00      	cmp	r2, #0
   823c8:	f040 8784 	bne.w	832d4 <_svfprintf_r+0x14ec>
   823cc:	f04b 0b10 	orr.w	fp, fp, #16
   823d0:	f01b 0f20 	tst.w	fp, #32
   823d4:	f040 8475 	bne.w	82cc2 <_svfprintf_r+0xeda>
   823d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   823da:	f01b 0f10 	tst.w	fp, #16
   823de:	4613      	mov	r3, r2
   823e0:	f040 839d 	bne.w	82b1e <_svfprintf_r+0xd36>
   823e4:	f01b 0f40 	tst.w	fp, #64	; 0x40
   823e8:	f000 8399 	beq.w	82b1e <_svfprintf_r+0xd36>
   823ec:	f9b2 4000 	ldrsh.w	r4, [r2]
   823f0:	3304      	adds	r3, #4
   823f2:	17e5      	asrs	r5, r4, #31
   823f4:	930f      	str	r3, [sp, #60]	; 0x3c
   823f6:	4622      	mov	r2, r4
   823f8:	462b      	mov	r3, r5
   823fa:	2a00      	cmp	r2, #0
   823fc:	f173 0300 	sbcs.w	r3, r3, #0
   82400:	f2c0 8398 	blt.w	82b34 <_svfprintf_r+0xd4c>
   82404:	990a      	ldr	r1, [sp, #40]	; 0x28
   82406:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8240a:	1c4a      	adds	r2, r1, #1
   8240c:	f04f 0301 	mov.w	r3, #1
   82410:	f47f adf0 	bne.w	81ff4 <_svfprintf_r+0x20c>
   82414:	ea54 0205 	orrs.w	r2, r4, r5
   82418:	f000 8229 	beq.w	8286e <_svfprintf_r+0xa86>
   8241c:	f8cd b01c 	str.w	fp, [sp, #28]
   82420:	2b01      	cmp	r3, #1
   82422:	f000 830e 	beq.w	82a42 <_svfprintf_r+0xc5a>
   82426:	2b02      	cmp	r3, #2
   82428:	f040 829c 	bne.w	82964 <_svfprintf_r+0xb7c>
   8242c:	464e      	mov	r6, r9
   8242e:	9818      	ldr	r0, [sp, #96]	; 0x60
   82430:	0923      	lsrs	r3, r4, #4
   82432:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   82436:	0929      	lsrs	r1, r5, #4
   82438:	f004 020f 	and.w	r2, r4, #15
   8243c:	460d      	mov	r5, r1
   8243e:	461c      	mov	r4, r3
   82440:	5c83      	ldrb	r3, [r0, r2]
   82442:	f806 3d01 	strb.w	r3, [r6, #-1]!
   82446:	ea54 0305 	orrs.w	r3, r4, r5
   8244a:	d1f1      	bne.n	82430 <_svfprintf_r+0x648>
   8244c:	eba9 0306 	sub.w	r3, r9, r6
   82450:	930e      	str	r3, [sp, #56]	; 0x38
   82452:	e5e5      	b.n	82020 <_svfprintf_r+0x238>
   82454:	9311      	str	r3, [sp, #68]	; 0x44
   82456:	2a00      	cmp	r2, #0
   82458:	f040 8738 	bne.w	832cc <_svfprintf_r+0x14e4>
   8245c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8245e:	f01b 0f08 	tst.w	fp, #8
   82462:	f104 0407 	add.w	r4, r4, #7
   82466:	f000 84cf 	beq.w	82e08 <_svfprintf_r+0x1020>
   8246a:	f024 0307 	bic.w	r3, r4, #7
   8246e:	f103 0208 	add.w	r2, r3, #8
   82472:	920f      	str	r2, [sp, #60]	; 0x3c
   82474:	681a      	ldr	r2, [r3, #0]
   82476:	685b      	ldr	r3, [r3, #4]
   82478:	9215      	str	r2, [sp, #84]	; 0x54
   8247a:	9314      	str	r3, [sp, #80]	; 0x50
   8247c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8247e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82480:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   82484:	4628      	mov	r0, r5
   82486:	4621      	mov	r1, r4
   82488:	f04f 32ff 	mov.w	r2, #4294967295
   8248c:	4b6f      	ldr	r3, [pc, #444]	; (8264c <_svfprintf_r+0x864>)
   8248e:	f003 fe6d 	bl	8616c <__aeabi_dcmpun>
   82492:	2800      	cmp	r0, #0
   82494:	f040 8434 	bne.w	82d00 <_svfprintf_r+0xf18>
   82498:	4628      	mov	r0, r5
   8249a:	4621      	mov	r1, r4
   8249c:	f04f 32ff 	mov.w	r2, #4294967295
   824a0:	4b6a      	ldr	r3, [pc, #424]	; (8264c <_svfprintf_r+0x864>)
   824a2:	f003 fe45 	bl	86130 <__aeabi_dcmple>
   824a6:	2800      	cmp	r0, #0
   824a8:	f040 842a 	bne.w	82d00 <_svfprintf_r+0xf18>
   824ac:	a815      	add	r0, sp, #84	; 0x54
   824ae:	c80d      	ldmia	r0, {r0, r2, r3}
   824b0:	9914      	ldr	r1, [sp, #80]	; 0x50
   824b2:	f003 fe33 	bl	8611c <__aeabi_dcmplt>
   824b6:	2800      	cmp	r0, #0
   824b8:	f040 85d4 	bne.w	83064 <_svfprintf_r+0x127c>
   824bc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   824c0:	2303      	movs	r3, #3
   824c2:	461a      	mov	r2, r3
   824c4:	9308      	str	r3, [sp, #32]
   824c6:	2300      	movs	r3, #0
   824c8:	4e61      	ldr	r6, [pc, #388]	; (82650 <_svfprintf_r+0x868>)
   824ca:	4619      	mov	r1, r3
   824cc:	930a      	str	r3, [sp, #40]	; 0x28
   824ce:	4b61      	ldr	r3, [pc, #388]	; (82654 <_svfprintf_r+0x86c>)
   824d0:	920e      	str	r2, [sp, #56]	; 0x38
   824d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   824d4:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   824d8:	9007      	str	r0, [sp, #28]
   824da:	9112      	str	r1, [sp, #72]	; 0x48
   824dc:	2a47      	cmp	r2, #71	; 0x47
   824de:	bfd8      	it	le
   824e0:	461e      	movle	r6, r3
   824e2:	e5a5      	b.n	82030 <_svfprintf_r+0x248>
   824e4:	f04b 0b08 	orr.w	fp, fp, #8
   824e8:	f89a 3000 	ldrb.w	r3, [sl]
   824ec:	e4d6      	b.n	81e9c <_svfprintf_r+0xb4>
   824ee:	f04b 0b10 	orr.w	fp, fp, #16
   824f2:	9311      	str	r3, [sp, #68]	; 0x44
   824f4:	f01b 0320 	ands.w	r3, fp, #32
   824f8:	f43f aebb 	beq.w	82272 <_svfprintf_r+0x48a>
   824fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   824fe:	3407      	adds	r4, #7
   82500:	f024 0307 	bic.w	r3, r4, #7
   82504:	f103 0208 	add.w	r2, r3, #8
   82508:	e9d3 4500 	ldrd	r4, r5, [r3]
   8250c:	920f      	str	r2, [sp, #60]	; 0x3c
   8250e:	2300      	movs	r3, #0
   82510:	e568      	b.n	81fe4 <_svfprintf_r+0x1fc>
   82512:	9311      	str	r3, [sp, #68]	; 0x44
   82514:	2a00      	cmp	r2, #0
   82516:	f040 86c2 	bne.w	8329e <_svfprintf_r+0x14b6>
   8251a:	4b4f      	ldr	r3, [pc, #316]	; (82658 <_svfprintf_r+0x870>)
   8251c:	f01b 0f20 	tst.w	fp, #32
   82520:	9318      	str	r3, [sp, #96]	; 0x60
   82522:	f43f af19 	beq.w	82358 <_svfprintf_r+0x570>
   82526:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82528:	f01b 0f01 	tst.w	fp, #1
   8252c:	f104 0407 	add.w	r4, r4, #7
   82530:	f024 0307 	bic.w	r3, r4, #7
   82534:	f103 0208 	add.w	r2, r3, #8
   82538:	920f      	str	r2, [sp, #60]	; 0x3c
   8253a:	e9d3 4500 	ldrd	r4, r5, [r3]
   8253e:	f47f af1d 	bne.w	8237c <_svfprintf_r+0x594>
   82542:	2302      	movs	r3, #2
   82544:	e54e      	b.n	81fe4 <_svfprintf_r+0x1fc>
   82546:	f89a 3000 	ldrb.w	r3, [sl]
   8254a:	2900      	cmp	r1, #0
   8254c:	f47f aca6 	bne.w	81e9c <_svfprintf_r+0xb4>
   82550:	2201      	movs	r2, #1
   82552:	2120      	movs	r1, #32
   82554:	e4a2      	b.n	81e9c <_svfprintf_r+0xb4>
   82556:	f04b 0b01 	orr.w	fp, fp, #1
   8255a:	f89a 3000 	ldrb.w	r3, [sl]
   8255e:	e49d      	b.n	81e9c <_svfprintf_r+0xb4>
   82560:	f89a 3000 	ldrb.w	r3, [sl]
   82564:	2201      	movs	r2, #1
   82566:	212b      	movs	r1, #43	; 0x2b
   82568:	e498      	b.n	81e9c <_svfprintf_r+0xb4>
   8256a:	f04b 0b20 	orr.w	fp, fp, #32
   8256e:	f89a 3000 	ldrb.w	r3, [sl]
   82572:	e493      	b.n	81e9c <_svfprintf_r+0xb4>
   82574:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   82578:	f89a 3000 	ldrb.w	r3, [sl]
   8257c:	e48e      	b.n	81e9c <_svfprintf_r+0xb4>
   8257e:	f89a 3000 	ldrb.w	r3, [sl]
   82582:	2b6c      	cmp	r3, #108	; 0x6c
   82584:	bf03      	ittte	eq
   82586:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   8258a:	f04b 0b20 	orreq.w	fp, fp, #32
   8258e:	f10a 0a01 	addeq.w	sl, sl, #1
   82592:	f04b 0b10 	orrne.w	fp, fp, #16
   82596:	e481      	b.n	81e9c <_svfprintf_r+0xb4>
   82598:	2a00      	cmp	r2, #0
   8259a:	f040 867c 	bne.w	83296 <_svfprintf_r+0x14ae>
   8259e:	f01b 0f20 	tst.w	fp, #32
   825a2:	f040 8452 	bne.w	82e4a <_svfprintf_r+0x1062>
   825a6:	f01b 0f10 	tst.w	fp, #16
   825aa:	f040 8438 	bne.w	82e1e <_svfprintf_r+0x1036>
   825ae:	f01b 0f40 	tst.w	fp, #64	; 0x40
   825b2:	f000 8434 	beq.w	82e1e <_svfprintf_r+0x1036>
   825b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   825b8:	6813      	ldr	r3, [r2, #0]
   825ba:	3204      	adds	r2, #4
   825bc:	920f      	str	r2, [sp, #60]	; 0x3c
   825be:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   825c2:	801a      	strh	r2, [r3, #0]
   825c4:	e437      	b.n	81e36 <_svfprintf_r+0x4e>
   825c6:	2378      	movs	r3, #120	; 0x78
   825c8:	2230      	movs	r2, #48	; 0x30
   825ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
   825cc:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   825d0:	9311      	str	r3, [sp, #68]	; 0x44
   825d2:	1d03      	adds	r3, r0, #4
   825d4:	930f      	str	r3, [sp, #60]	; 0x3c
   825d6:	4b20      	ldr	r3, [pc, #128]	; (82658 <_svfprintf_r+0x870>)
   825d8:	6804      	ldr	r4, [r0, #0]
   825da:	9318      	str	r3, [sp, #96]	; 0x60
   825dc:	f04b 0b02 	orr.w	fp, fp, #2
   825e0:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   825e4:	2500      	movs	r5, #0
   825e6:	2302      	movs	r3, #2
   825e8:	e4fc      	b.n	81fe4 <_svfprintf_r+0x1fc>
   825ea:	9311      	str	r3, [sp, #68]	; 0x44
   825ec:	2a00      	cmp	r2, #0
   825ee:	f43f aeef 	beq.w	823d0 <_svfprintf_r+0x5e8>
   825f2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   825f6:	e6eb      	b.n	823d0 <_svfprintf_r+0x5e8>
   825f8:	2000      	movs	r0, #0
   825fa:	4604      	mov	r4, r0
   825fc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82600:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82604:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82608:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   8260c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82610:	2809      	cmp	r0, #9
   82612:	d9f5      	bls.n	82600 <_svfprintf_r+0x818>
   82614:	940d      	str	r4, [sp, #52]	; 0x34
   82616:	e443      	b.n	81ea0 <_svfprintf_r+0xb8>
   82618:	9311      	str	r3, [sp, #68]	; 0x44
   8261a:	2a00      	cmp	r2, #0
   8261c:	f040 864a 	bne.w	832b4 <_svfprintf_r+0x14cc>
   82620:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82622:	2a00      	cmp	r2, #0
   82624:	f43f acb6 	beq.w	81f94 <_svfprintf_r+0x1ac>
   82628:	2300      	movs	r3, #0
   8262a:	2101      	movs	r1, #1
   8262c:	461f      	mov	r7, r3
   8262e:	9108      	str	r1, [sp, #32]
   82630:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82634:	f8cd b01c 	str.w	fp, [sp, #28]
   82638:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8263c:	930a      	str	r3, [sp, #40]	; 0x28
   8263e:	9312      	str	r3, [sp, #72]	; 0x48
   82640:	910e      	str	r1, [sp, #56]	; 0x38
   82642:	ae28      	add	r6, sp, #160	; 0xa0
   82644:	e4f8      	b.n	82038 <_svfprintf_r+0x250>
   82646:	bf00      	nop
   82648:	000866f4 	.word	0x000866f4
   8264c:	7fefffff 	.word	0x7fefffff
   82650:	000866e8 	.word	0x000866e8
   82654:	000866e4 	.word	0x000866e4
   82658:	00086708 	.word	0x00086708
   8265c:	aa25      	add	r2, sp, #148	; 0x94
   8265e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82660:	980c      	ldr	r0, [sp, #48]	; 0x30
   82662:	f002 fcc5 	bl	84ff0 <__ssprint_r>
   82666:	2800      	cmp	r0, #0
   82668:	f47f ac9b 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8266c:	46c8      	mov	r8, r9
   8266e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82672:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82674:	e533      	b.n	820de <_svfprintf_r+0x2f6>
   82676:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82678:	2b65      	cmp	r3, #101	; 0x65
   8267a:	f340 809a 	ble.w	827b2 <_svfprintf_r+0x9ca>
   8267e:	a815      	add	r0, sp, #84	; 0x54
   82680:	c80d      	ldmia	r0, {r0, r2, r3}
   82682:	9914      	ldr	r1, [sp, #80]	; 0x50
   82684:	f003 fd40 	bl	86108 <__aeabi_dcmpeq>
   82688:	2800      	cmp	r0, #0
   8268a:	f000 8193 	beq.w	829b4 <_svfprintf_r+0xbcc>
   8268e:	2101      	movs	r1, #1
   82690:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82692:	4ab5      	ldr	r2, [pc, #724]	; (82968 <_svfprintf_r+0xb80>)
   82694:	440b      	add	r3, r1
   82696:	440c      	add	r4, r1
   82698:	2b07      	cmp	r3, #7
   8269a:	9427      	str	r4, [sp, #156]	; 0x9c
   8269c:	9326      	str	r3, [sp, #152]	; 0x98
   8269e:	f8c8 1004 	str.w	r1, [r8, #4]
   826a2:	f8c8 2000 	str.w	r2, [r8]
   826a6:	f300 83c6 	bgt.w	82e36 <_svfprintf_r+0x104e>
   826aa:	f108 0808 	add.w	r8, r8, #8
   826ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   826b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   826b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   826b4:	4293      	cmp	r3, r2
   826b6:	db03      	blt.n	826c0 <_svfprintf_r+0x8d8>
   826b8:	9b07      	ldr	r3, [sp, #28]
   826ba:	07dd      	lsls	r5, r3, #31
   826bc:	f57f ad86 	bpl.w	821cc <_svfprintf_r+0x3e4>
   826c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   826c2:	9919      	ldr	r1, [sp, #100]	; 0x64
   826c4:	3301      	adds	r3, #1
   826c6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   826c8:	440c      	add	r4, r1
   826ca:	2b07      	cmp	r3, #7
   826cc:	f8c8 2000 	str.w	r2, [r8]
   826d0:	f8c8 1004 	str.w	r1, [r8, #4]
   826d4:	9427      	str	r4, [sp, #156]	; 0x9c
   826d6:	9326      	str	r3, [sp, #152]	; 0x98
   826d8:	f300 83c4 	bgt.w	82e64 <_svfprintf_r+0x107c>
   826dc:	f108 0808 	add.w	r8, r8, #8
   826e0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   826e2:	1e5e      	subs	r6, r3, #1
   826e4:	2e00      	cmp	r6, #0
   826e6:	f77f ad71 	ble.w	821cc <_svfprintf_r+0x3e4>
   826ea:	2e10      	cmp	r6, #16
   826ec:	f340 8575 	ble.w	831da <_svfprintf_r+0x13f2>
   826f0:	4622      	mov	r2, r4
   826f2:	2710      	movs	r7, #16
   826f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   826f6:	4d9d      	ldr	r5, [pc, #628]	; (8296c <_svfprintf_r+0xb84>)
   826f8:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   826fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   826fe:	e005      	b.n	8270c <_svfprintf_r+0x924>
   82700:	f108 0808 	add.w	r8, r8, #8
   82704:	3e10      	subs	r6, #16
   82706:	2e10      	cmp	r6, #16
   82708:	f340 8225 	ble.w	82b56 <_svfprintf_r+0xd6e>
   8270c:	3301      	adds	r3, #1
   8270e:	3210      	adds	r2, #16
   82710:	2b07      	cmp	r3, #7
   82712:	9227      	str	r2, [sp, #156]	; 0x9c
   82714:	9326      	str	r3, [sp, #152]	; 0x98
   82716:	e888 00a0 	stmia.w	r8, {r5, r7}
   8271a:	ddf1      	ble.n	82700 <_svfprintf_r+0x918>
   8271c:	aa25      	add	r2, sp, #148	; 0x94
   8271e:	4621      	mov	r1, r4
   82720:	4658      	mov	r0, fp
   82722:	f002 fc65 	bl	84ff0 <__ssprint_r>
   82726:	2800      	cmp	r0, #0
   82728:	f47f ac3b 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8272c:	46c8      	mov	r8, r9
   8272e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82730:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82732:	e7e7      	b.n	82704 <_svfprintf_r+0x91c>
   82734:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82736:	9a08      	ldr	r2, [sp, #32]
   82738:	1a9f      	subs	r7, r3, r2
   8273a:	2f00      	cmp	r7, #0
   8273c:	f77f acf6 	ble.w	8212c <_svfprintf_r+0x344>
   82740:	2f10      	cmp	r7, #16
   82742:	f340 84a8 	ble.w	83096 <_svfprintf_r+0x12ae>
   82746:	4d89      	ldr	r5, [pc, #548]	; (8296c <_svfprintf_r+0xb84>)
   82748:	4642      	mov	r2, r8
   8274a:	4621      	mov	r1, r4
   8274c:	46b0      	mov	r8, r6
   8274e:	f04f 0b10 	mov.w	fp, #16
   82752:	462e      	mov	r6, r5
   82754:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82756:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82758:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8275a:	e004      	b.n	82766 <_svfprintf_r+0x97e>
   8275c:	3f10      	subs	r7, #16
   8275e:	2f10      	cmp	r7, #16
   82760:	f102 0208 	add.w	r2, r2, #8
   82764:	dd15      	ble.n	82792 <_svfprintf_r+0x9aa>
   82766:	3301      	adds	r3, #1
   82768:	3110      	adds	r1, #16
   8276a:	2b07      	cmp	r3, #7
   8276c:	9127      	str	r1, [sp, #156]	; 0x9c
   8276e:	9326      	str	r3, [sp, #152]	; 0x98
   82770:	e882 0840 	stmia.w	r2, {r6, fp}
   82774:	ddf2      	ble.n	8275c <_svfprintf_r+0x974>
   82776:	aa25      	add	r2, sp, #148	; 0x94
   82778:	4629      	mov	r1, r5
   8277a:	4620      	mov	r0, r4
   8277c:	f002 fc38 	bl	84ff0 <__ssprint_r>
   82780:	2800      	cmp	r0, #0
   82782:	f47f ac0e 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82786:	3f10      	subs	r7, #16
   82788:	2f10      	cmp	r7, #16
   8278a:	464a      	mov	r2, r9
   8278c:	9927      	ldr	r1, [sp, #156]	; 0x9c
   8278e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82790:	dce9      	bgt.n	82766 <_svfprintf_r+0x97e>
   82792:	4635      	mov	r5, r6
   82794:	460c      	mov	r4, r1
   82796:	4646      	mov	r6, r8
   82798:	4690      	mov	r8, r2
   8279a:	3301      	adds	r3, #1
   8279c:	443c      	add	r4, r7
   8279e:	2b07      	cmp	r3, #7
   827a0:	9427      	str	r4, [sp, #156]	; 0x9c
   827a2:	9326      	str	r3, [sp, #152]	; 0x98
   827a4:	e888 00a0 	stmia.w	r8, {r5, r7}
   827a8:	f300 829e 	bgt.w	82ce8 <_svfprintf_r+0xf00>
   827ac:	f108 0808 	add.w	r8, r8, #8
   827b0:	e4bc      	b.n	8212c <_svfprintf_r+0x344>
   827b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   827b4:	2b01      	cmp	r3, #1
   827b6:	f340 824f 	ble.w	82c58 <_svfprintf_r+0xe70>
   827ba:	2301      	movs	r3, #1
   827bc:	9f26      	ldr	r7, [sp, #152]	; 0x98
   827be:	441c      	add	r4, r3
   827c0:	441f      	add	r7, r3
   827c2:	2f07      	cmp	r7, #7
   827c4:	9427      	str	r4, [sp, #156]	; 0x9c
   827c6:	f8c8 6000 	str.w	r6, [r8]
   827ca:	9726      	str	r7, [sp, #152]	; 0x98
   827cc:	f8c8 3004 	str.w	r3, [r8, #4]
   827d0:	f300 825f 	bgt.w	82c92 <_svfprintf_r+0xeaa>
   827d4:	f108 0808 	add.w	r8, r8, #8
   827d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
   827da:	3701      	adds	r7, #1
   827dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   827de:	4414      	add	r4, r2
   827e0:	2f07      	cmp	r7, #7
   827e2:	9427      	str	r4, [sp, #156]	; 0x9c
   827e4:	9726      	str	r7, [sp, #152]	; 0x98
   827e6:	f8c8 3000 	str.w	r3, [r8]
   827ea:	f8c8 2004 	str.w	r2, [r8, #4]
   827ee:	f300 825c 	bgt.w	82caa <_svfprintf_r+0xec2>
   827f2:	f108 0808 	add.w	r8, r8, #8
   827f6:	a815      	add	r0, sp, #84	; 0x54
   827f8:	c80d      	ldmia	r0, {r0, r2, r3}
   827fa:	9914      	ldr	r1, [sp, #80]	; 0x50
   827fc:	f003 fc84 	bl	86108 <__aeabi_dcmpeq>
   82800:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82802:	2800      	cmp	r0, #0
   82804:	f040 8141 	bne.w	82a8a <_svfprintf_r+0xca2>
   82808:	3b01      	subs	r3, #1
   8280a:	3701      	adds	r7, #1
   8280c:	3601      	adds	r6, #1
   8280e:	441c      	add	r4, r3
   82810:	2f07      	cmp	r7, #7
   82812:	f8c8 6000 	str.w	r6, [r8]
   82816:	9726      	str	r7, [sp, #152]	; 0x98
   82818:	9427      	str	r4, [sp, #156]	; 0x9c
   8281a:	f8c8 3004 	str.w	r3, [r8, #4]
   8281e:	f300 8166 	bgt.w	82aee <_svfprintf_r+0xd06>
   82822:	f108 0808 	add.w	r8, r8, #8
   82826:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   82828:	3701      	adds	r7, #1
   8282a:	4414      	add	r4, r2
   8282c:	ab21      	add	r3, sp, #132	; 0x84
   8282e:	2f07      	cmp	r7, #7
   82830:	9427      	str	r4, [sp, #156]	; 0x9c
   82832:	9726      	str	r7, [sp, #152]	; 0x98
   82834:	f8c8 2004 	str.w	r2, [r8, #4]
   82838:	f8c8 3000 	str.w	r3, [r8]
   8283c:	f77f acc4 	ble.w	821c8 <_svfprintf_r+0x3e0>
   82840:	aa25      	add	r2, sp, #148	; 0x94
   82842:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82844:	980c      	ldr	r0, [sp, #48]	; 0x30
   82846:	f002 fbd3 	bl	84ff0 <__ssprint_r>
   8284a:	2800      	cmp	r0, #0
   8284c:	f47f aba9 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82850:	46c8      	mov	r8, r9
   82852:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82854:	e4ba      	b.n	821cc <_svfprintf_r+0x3e4>
   82856:	aa25      	add	r2, sp, #148	; 0x94
   82858:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8285a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8285c:	f002 fbc8 	bl	84ff0 <__ssprint_r>
   82860:	2800      	cmp	r0, #0
   82862:	f43f acfd 	beq.w	82260 <_svfprintf_r+0x478>
   82866:	f7ff bb9c 	b.w	81fa2 <_svfprintf_r+0x1ba>
   8286a:	f8dd b01c 	ldr.w	fp, [sp, #28]
   8286e:	2b01      	cmp	r3, #1
   82870:	f000 817e 	beq.w	82b70 <_svfprintf_r+0xd88>
   82874:	2b02      	cmp	r3, #2
   82876:	d171      	bne.n	8295c <_svfprintf_r+0xb74>
   82878:	f8cd b01c 	str.w	fp, [sp, #28]
   8287c:	2400      	movs	r4, #0
   8287e:	2500      	movs	r5, #0
   82880:	e5d4      	b.n	8242c <_svfprintf_r+0x644>
   82882:	aa25      	add	r2, sp, #148	; 0x94
   82884:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82886:	980c      	ldr	r0, [sp, #48]	; 0x30
   82888:	f002 fbb2 	bl	84ff0 <__ssprint_r>
   8288c:	2800      	cmp	r0, #0
   8288e:	f47f ab88 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82892:	46c8      	mov	r8, r9
   82894:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82896:	e486      	b.n	821a6 <_svfprintf_r+0x3be>
   82898:	aa25      	add	r2, sp, #148	; 0x94
   8289a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8289c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8289e:	f002 fba7 	bl	84ff0 <__ssprint_r>
   828a2:	2800      	cmp	r0, #0
   828a4:	f47f ab7d 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   828a8:	46c8      	mov	r8, r9
   828aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828ac:	e429      	b.n	82102 <_svfprintf_r+0x31a>
   828ae:	2001      	movs	r0, #1
   828b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   828b2:	4a2d      	ldr	r2, [pc, #180]	; (82968 <_svfprintf_r+0xb80>)
   828b4:	4403      	add	r3, r0
   828b6:	4404      	add	r4, r0
   828b8:	2b07      	cmp	r3, #7
   828ba:	9427      	str	r4, [sp, #156]	; 0x9c
   828bc:	9326      	str	r3, [sp, #152]	; 0x98
   828be:	f8c8 0004 	str.w	r0, [r8, #4]
   828c2:	f8c8 2000 	str.w	r2, [r8]
   828c6:	f340 82d8 	ble.w	82e7a <_svfprintf_r+0x1092>
   828ca:	aa25      	add	r2, sp, #148	; 0x94
   828cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828ce:	980c      	ldr	r0, [sp, #48]	; 0x30
   828d0:	f002 fb8e 	bl	84ff0 <__ssprint_r>
   828d4:	2800      	cmp	r0, #0
   828d6:	f47f ab64 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   828da:	46c8      	mov	r8, r9
   828dc:	991f      	ldr	r1, [sp, #124]	; 0x7c
   828de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828e0:	b929      	cbnz	r1, 828ee <_svfprintf_r+0xb06>
   828e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   828e4:	b91b      	cbnz	r3, 828ee <_svfprintf_r+0xb06>
   828e6:	9b07      	ldr	r3, [sp, #28]
   828e8:	07d8      	lsls	r0, r3, #31
   828ea:	f57f ac6f 	bpl.w	821cc <_svfprintf_r+0x3e4>
   828ee:	9819      	ldr	r0, [sp, #100]	; 0x64
   828f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   828f2:	4602      	mov	r2, r0
   828f4:	3301      	adds	r3, #1
   828f6:	4422      	add	r2, r4
   828f8:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   828fa:	2b07      	cmp	r3, #7
   828fc:	9227      	str	r2, [sp, #156]	; 0x9c
   828fe:	f8c8 4000 	str.w	r4, [r8]
   82902:	f8c8 0004 	str.w	r0, [r8, #4]
   82906:	9326      	str	r3, [sp, #152]	; 0x98
   82908:	f300 8431 	bgt.w	8316e <_svfprintf_r+0x1386>
   8290c:	f108 0808 	add.w	r8, r8, #8
   82910:	2900      	cmp	r1, #0
   82912:	f2c0 8409 	blt.w	83128 <_svfprintf_r+0x1340>
   82916:	9913      	ldr	r1, [sp, #76]	; 0x4c
   82918:	3301      	adds	r3, #1
   8291a:	188c      	adds	r4, r1, r2
   8291c:	2b07      	cmp	r3, #7
   8291e:	9427      	str	r4, [sp, #156]	; 0x9c
   82920:	9326      	str	r3, [sp, #152]	; 0x98
   82922:	f8c8 6000 	str.w	r6, [r8]
   82926:	f8c8 1004 	str.w	r1, [r8, #4]
   8292a:	f77f ac4d 	ble.w	821c8 <_svfprintf_r+0x3e0>
   8292e:	aa25      	add	r2, sp, #148	; 0x94
   82930:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82932:	980c      	ldr	r0, [sp, #48]	; 0x30
   82934:	f002 fb5c 	bl	84ff0 <__ssprint_r>
   82938:	2800      	cmp	r0, #0
   8293a:	f47f ab32 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8293e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82940:	46c8      	mov	r8, r9
   82942:	e443      	b.n	821cc <_svfprintf_r+0x3e4>
   82944:	aa25      	add	r2, sp, #148	; 0x94
   82946:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82948:	980c      	ldr	r0, [sp, #48]	; 0x30
   8294a:	f002 fb51 	bl	84ff0 <__ssprint_r>
   8294e:	2800      	cmp	r0, #0
   82950:	f47f ab27 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82954:	46c8      	mov	r8, r9
   82956:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82958:	f7ff bbe5 	b.w	82126 <_svfprintf_r+0x33e>
   8295c:	2400      	movs	r4, #0
   8295e:	2500      	movs	r5, #0
   82960:	f8cd b01c 	str.w	fp, [sp, #28]
   82964:	4649      	mov	r1, r9
   82966:	e004      	b.n	82972 <_svfprintf_r+0xb8a>
   82968:	00086724 	.word	0x00086724
   8296c:	00086738 	.word	0x00086738
   82970:	4631      	mov	r1, r6
   82972:	08e2      	lsrs	r2, r4, #3
   82974:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   82978:	08e8      	lsrs	r0, r5, #3
   8297a:	f004 0307 	and.w	r3, r4, #7
   8297e:	4605      	mov	r5, r0
   82980:	4614      	mov	r4, r2
   82982:	3330      	adds	r3, #48	; 0x30
   82984:	ea54 0205 	orrs.w	r2, r4, r5
   82988:	f801 3c01 	strb.w	r3, [r1, #-1]
   8298c:	f101 36ff 	add.w	r6, r1, #4294967295
   82990:	d1ee      	bne.n	82970 <_svfprintf_r+0xb88>
   82992:	9a07      	ldr	r2, [sp, #28]
   82994:	07d2      	lsls	r2, r2, #31
   82996:	f57f ad59 	bpl.w	8244c <_svfprintf_r+0x664>
   8299a:	2b30      	cmp	r3, #48	; 0x30
   8299c:	f43f ad56 	beq.w	8244c <_svfprintf_r+0x664>
   829a0:	2330      	movs	r3, #48	; 0x30
   829a2:	3902      	subs	r1, #2
   829a4:	f806 3c01 	strb.w	r3, [r6, #-1]
   829a8:	eba9 0301 	sub.w	r3, r9, r1
   829ac:	930e      	str	r3, [sp, #56]	; 0x38
   829ae:	460e      	mov	r6, r1
   829b0:	f7ff bb36 	b.w	82020 <_svfprintf_r+0x238>
   829b4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   829b6:	2900      	cmp	r1, #0
   829b8:	f77f af79 	ble.w	828ae <_svfprintf_r+0xac6>
   829bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   829be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   829c0:	4293      	cmp	r3, r2
   829c2:	bfa8      	it	ge
   829c4:	4613      	movge	r3, r2
   829c6:	2b00      	cmp	r3, #0
   829c8:	461f      	mov	r7, r3
   829ca:	dd0b      	ble.n	829e4 <_svfprintf_r+0xbfc>
   829cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   829ce:	443c      	add	r4, r7
   829d0:	3301      	adds	r3, #1
   829d2:	2b07      	cmp	r3, #7
   829d4:	9427      	str	r4, [sp, #156]	; 0x9c
   829d6:	e888 00c0 	stmia.w	r8, {r6, r7}
   829da:	9326      	str	r3, [sp, #152]	; 0x98
   829dc:	f300 82fb 	bgt.w	82fd6 <_svfprintf_r+0x11ee>
   829e0:	f108 0808 	add.w	r8, r8, #8
   829e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   829e6:	2f00      	cmp	r7, #0
   829e8:	bfa8      	it	ge
   829ea:	1bdb      	subge	r3, r3, r7
   829ec:	2b00      	cmp	r3, #0
   829ee:	461f      	mov	r7, r3
   829f0:	f340 80d7 	ble.w	82ba2 <_svfprintf_r+0xdba>
   829f4:	2b10      	cmp	r3, #16
   829f6:	f340 8434 	ble.w	83262 <_svfprintf_r+0x147a>
   829fa:	4dba      	ldr	r5, [pc, #744]	; (82ce4 <_svfprintf_r+0xefc>)
   829fc:	4642      	mov	r2, r8
   829fe:	4621      	mov	r1, r4
   82a00:	46b0      	mov	r8, r6
   82a02:	f04f 0b10 	mov.w	fp, #16
   82a06:	462e      	mov	r6, r5
   82a08:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82a0c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82a0e:	e004      	b.n	82a1a <_svfprintf_r+0xc32>
   82a10:	3208      	adds	r2, #8
   82a12:	3f10      	subs	r7, #16
   82a14:	2f10      	cmp	r7, #16
   82a16:	f340 80b5 	ble.w	82b84 <_svfprintf_r+0xd9c>
   82a1a:	3301      	adds	r3, #1
   82a1c:	3110      	adds	r1, #16
   82a1e:	2b07      	cmp	r3, #7
   82a20:	9127      	str	r1, [sp, #156]	; 0x9c
   82a22:	9326      	str	r3, [sp, #152]	; 0x98
   82a24:	e882 0840 	stmia.w	r2, {r6, fp}
   82a28:	ddf2      	ble.n	82a10 <_svfprintf_r+0xc28>
   82a2a:	aa25      	add	r2, sp, #148	; 0x94
   82a2c:	4629      	mov	r1, r5
   82a2e:	4620      	mov	r0, r4
   82a30:	f002 fade 	bl	84ff0 <__ssprint_r>
   82a34:	2800      	cmp	r0, #0
   82a36:	f47f aab4 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82a3a:	464a      	mov	r2, r9
   82a3c:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82a3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a40:	e7e7      	b.n	82a12 <_svfprintf_r+0xc2a>
   82a42:	2d00      	cmp	r5, #0
   82a44:	bf08      	it	eq
   82a46:	2c0a      	cmpeq	r4, #10
   82a48:	f0c0 8090 	bcc.w	82b6c <_svfprintf_r+0xd84>
   82a4c:	464e      	mov	r6, r9
   82a4e:	4620      	mov	r0, r4
   82a50:	4629      	mov	r1, r5
   82a52:	220a      	movs	r2, #10
   82a54:	2300      	movs	r3, #0
   82a56:	f003 fbc7 	bl	861e8 <__aeabi_uldivmod>
   82a5a:	3230      	adds	r2, #48	; 0x30
   82a5c:	f806 2d01 	strb.w	r2, [r6, #-1]!
   82a60:	4620      	mov	r0, r4
   82a62:	4629      	mov	r1, r5
   82a64:	2300      	movs	r3, #0
   82a66:	220a      	movs	r2, #10
   82a68:	f003 fbbe 	bl	861e8 <__aeabi_uldivmod>
   82a6c:	4604      	mov	r4, r0
   82a6e:	460d      	mov	r5, r1
   82a70:	ea54 0305 	orrs.w	r3, r4, r5
   82a74:	d1eb      	bne.n	82a4e <_svfprintf_r+0xc66>
   82a76:	eba9 0306 	sub.w	r3, r9, r6
   82a7a:	930e      	str	r3, [sp, #56]	; 0x38
   82a7c:	f7ff bad0 	b.w	82020 <_svfprintf_r+0x238>
   82a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82a82:	464e      	mov	r6, r9
   82a84:	930e      	str	r3, [sp, #56]	; 0x38
   82a86:	f7ff bacb 	b.w	82020 <_svfprintf_r+0x238>
   82a8a:	1e5e      	subs	r6, r3, #1
   82a8c:	2e00      	cmp	r6, #0
   82a8e:	f77f aeca 	ble.w	82826 <_svfprintf_r+0xa3e>
   82a92:	2e10      	cmp	r6, #16
   82a94:	f340 83e3 	ble.w	8325e <_svfprintf_r+0x1476>
   82a98:	4622      	mov	r2, r4
   82a9a:	f04f 0b10 	mov.w	fp, #16
   82a9e:	4d91      	ldr	r5, [pc, #580]	; (82ce4 <_svfprintf_r+0xefc>)
   82aa0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82aa2:	e004      	b.n	82aae <_svfprintf_r+0xcc6>
   82aa4:	3e10      	subs	r6, #16
   82aa6:	2e10      	cmp	r6, #16
   82aa8:	f108 0808 	add.w	r8, r8, #8
   82aac:	dd15      	ble.n	82ada <_svfprintf_r+0xcf2>
   82aae:	3701      	adds	r7, #1
   82ab0:	3210      	adds	r2, #16
   82ab2:	2f07      	cmp	r7, #7
   82ab4:	9227      	str	r2, [sp, #156]	; 0x9c
   82ab6:	9726      	str	r7, [sp, #152]	; 0x98
   82ab8:	e888 0820 	stmia.w	r8, {r5, fp}
   82abc:	ddf2      	ble.n	82aa4 <_svfprintf_r+0xcbc>
   82abe:	aa25      	add	r2, sp, #148	; 0x94
   82ac0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ac2:	4620      	mov	r0, r4
   82ac4:	f002 fa94 	bl	84ff0 <__ssprint_r>
   82ac8:	2800      	cmp	r0, #0
   82aca:	f47f aa6a 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82ace:	3e10      	subs	r6, #16
   82ad0:	2e10      	cmp	r6, #16
   82ad2:	46c8      	mov	r8, r9
   82ad4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82ad6:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82ad8:	dce9      	bgt.n	82aae <_svfprintf_r+0xcc6>
   82ada:	4614      	mov	r4, r2
   82adc:	3701      	adds	r7, #1
   82ade:	4434      	add	r4, r6
   82ae0:	2f07      	cmp	r7, #7
   82ae2:	9427      	str	r4, [sp, #156]	; 0x9c
   82ae4:	9726      	str	r7, [sp, #152]	; 0x98
   82ae6:	e888 0060 	stmia.w	r8, {r5, r6}
   82aea:	f77f ae9a 	ble.w	82822 <_svfprintf_r+0xa3a>
   82aee:	aa25      	add	r2, sp, #148	; 0x94
   82af0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82af2:	980c      	ldr	r0, [sp, #48]	; 0x30
   82af4:	f002 fa7c 	bl	84ff0 <__ssprint_r>
   82af8:	2800      	cmp	r0, #0
   82afa:	f47f aa52 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82afe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82b00:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82b02:	46c8      	mov	r8, r9
   82b04:	e68f      	b.n	82826 <_svfprintf_r+0xa3e>
   82b06:	3204      	adds	r2, #4
   82b08:	681c      	ldr	r4, [r3, #0]
   82b0a:	2500      	movs	r5, #0
   82b0c:	2301      	movs	r3, #1
   82b0e:	920f      	str	r2, [sp, #60]	; 0x3c
   82b10:	f7ff ba68 	b.w	81fe4 <_svfprintf_r+0x1fc>
   82b14:	681c      	ldr	r4, [r3, #0]
   82b16:	3304      	adds	r3, #4
   82b18:	930f      	str	r3, [sp, #60]	; 0x3c
   82b1a:	2500      	movs	r5, #0
   82b1c:	e42a      	b.n	82374 <_svfprintf_r+0x58c>
   82b1e:	681c      	ldr	r4, [r3, #0]
   82b20:	3304      	adds	r3, #4
   82b22:	17e5      	asrs	r5, r4, #31
   82b24:	4622      	mov	r2, r4
   82b26:	930f      	str	r3, [sp, #60]	; 0x3c
   82b28:	462b      	mov	r3, r5
   82b2a:	2a00      	cmp	r2, #0
   82b2c:	f173 0300 	sbcs.w	r3, r3, #0
   82b30:	f6bf ac68 	bge.w	82404 <_svfprintf_r+0x61c>
   82b34:	272d      	movs	r7, #45	; 0x2d
   82b36:	4264      	negs	r4, r4
   82b38:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82b3c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82b40:	2301      	movs	r3, #1
   82b42:	f7ff ba53 	b.w	81fec <_svfprintf_r+0x204>
   82b46:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82b48:	2500      	movs	r5, #0
   82b4a:	460a      	mov	r2, r1
   82b4c:	3204      	adds	r2, #4
   82b4e:	680c      	ldr	r4, [r1, #0]
   82b50:	920f      	str	r2, [sp, #60]	; 0x3c
   82b52:	f7ff ba47 	b.w	81fe4 <_svfprintf_r+0x1fc>
   82b56:	4614      	mov	r4, r2
   82b58:	3301      	adds	r3, #1
   82b5a:	4434      	add	r4, r6
   82b5c:	2b07      	cmp	r3, #7
   82b5e:	9427      	str	r4, [sp, #156]	; 0x9c
   82b60:	9326      	str	r3, [sp, #152]	; 0x98
   82b62:	e888 0060 	stmia.w	r8, {r5, r6}
   82b66:	f77f ab2f 	ble.w	821c8 <_svfprintf_r+0x3e0>
   82b6a:	e6e0      	b.n	8292e <_svfprintf_r+0xb46>
   82b6c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82b70:	2301      	movs	r3, #1
   82b72:	ae42      	add	r6, sp, #264	; 0x108
   82b74:	3430      	adds	r4, #48	; 0x30
   82b76:	f8cd b01c 	str.w	fp, [sp, #28]
   82b7a:	f806 4d41 	strb.w	r4, [r6, #-65]!
   82b7e:	930e      	str	r3, [sp, #56]	; 0x38
   82b80:	f7ff ba4e 	b.w	82020 <_svfprintf_r+0x238>
   82b84:	4635      	mov	r5, r6
   82b86:	460c      	mov	r4, r1
   82b88:	4646      	mov	r6, r8
   82b8a:	4690      	mov	r8, r2
   82b8c:	3301      	adds	r3, #1
   82b8e:	443c      	add	r4, r7
   82b90:	2b07      	cmp	r3, #7
   82b92:	9427      	str	r4, [sp, #156]	; 0x9c
   82b94:	9326      	str	r3, [sp, #152]	; 0x98
   82b96:	e888 00a0 	stmia.w	r8, {r5, r7}
   82b9a:	f300 8246 	bgt.w	8302a <_svfprintf_r+0x1242>
   82b9e:	f108 0808 	add.w	r8, r8, #8
   82ba2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82ba4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82ba6:	429a      	cmp	r2, r3
   82ba8:	db45      	blt.n	82c36 <_svfprintf_r+0xe4e>
   82baa:	9b07      	ldr	r3, [sp, #28]
   82bac:	07d9      	lsls	r1, r3, #31
   82bae:	d442      	bmi.n	82c36 <_svfprintf_r+0xe4e>
   82bb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82bb2:	9812      	ldr	r0, [sp, #72]	; 0x48
   82bb4:	1a9a      	subs	r2, r3, r2
   82bb6:	1a1d      	subs	r5, r3, r0
   82bb8:	4295      	cmp	r5, r2
   82bba:	bfa8      	it	ge
   82bbc:	4615      	movge	r5, r2
   82bbe:	2d00      	cmp	r5, #0
   82bc0:	dd0e      	ble.n	82be0 <_svfprintf_r+0xdf8>
   82bc2:	9926      	ldr	r1, [sp, #152]	; 0x98
   82bc4:	4406      	add	r6, r0
   82bc6:	3101      	adds	r1, #1
   82bc8:	442c      	add	r4, r5
   82bca:	2907      	cmp	r1, #7
   82bcc:	f8c8 6000 	str.w	r6, [r8]
   82bd0:	9427      	str	r4, [sp, #156]	; 0x9c
   82bd2:	f8c8 5004 	str.w	r5, [r8, #4]
   82bd6:	9126      	str	r1, [sp, #152]	; 0x98
   82bd8:	f300 8216 	bgt.w	83008 <_svfprintf_r+0x1220>
   82bdc:	f108 0808 	add.w	r8, r8, #8
   82be0:	2d00      	cmp	r5, #0
   82be2:	bfb4      	ite	lt
   82be4:	4616      	movlt	r6, r2
   82be6:	1b56      	subge	r6, r2, r5
   82be8:	2e00      	cmp	r6, #0
   82bea:	f77f aaef 	ble.w	821cc <_svfprintf_r+0x3e4>
   82bee:	2e10      	cmp	r6, #16
   82bf0:	f340 82f3 	ble.w	831da <_svfprintf_r+0x13f2>
   82bf4:	4622      	mov	r2, r4
   82bf6:	2710      	movs	r7, #16
   82bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82bfa:	4d3a      	ldr	r5, [pc, #232]	; (82ce4 <_svfprintf_r+0xefc>)
   82bfc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82c00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82c02:	e004      	b.n	82c0e <_svfprintf_r+0xe26>
   82c04:	f108 0808 	add.w	r8, r8, #8
   82c08:	3e10      	subs	r6, #16
   82c0a:	2e10      	cmp	r6, #16
   82c0c:	dda3      	ble.n	82b56 <_svfprintf_r+0xd6e>
   82c0e:	3301      	adds	r3, #1
   82c10:	3210      	adds	r2, #16
   82c12:	2b07      	cmp	r3, #7
   82c14:	9227      	str	r2, [sp, #156]	; 0x9c
   82c16:	9326      	str	r3, [sp, #152]	; 0x98
   82c18:	e888 00a0 	stmia.w	r8, {r5, r7}
   82c1c:	ddf2      	ble.n	82c04 <_svfprintf_r+0xe1c>
   82c1e:	aa25      	add	r2, sp, #148	; 0x94
   82c20:	4621      	mov	r1, r4
   82c22:	4658      	mov	r0, fp
   82c24:	f002 f9e4 	bl	84ff0 <__ssprint_r>
   82c28:	2800      	cmp	r0, #0
   82c2a:	f47f a9ba 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82c2e:	46c8      	mov	r8, r9
   82c30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c34:	e7e8      	b.n	82c08 <_svfprintf_r+0xe20>
   82c36:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c38:	9819      	ldr	r0, [sp, #100]	; 0x64
   82c3a:	3301      	adds	r3, #1
   82c3c:	991a      	ldr	r1, [sp, #104]	; 0x68
   82c3e:	4404      	add	r4, r0
   82c40:	2b07      	cmp	r3, #7
   82c42:	9427      	str	r4, [sp, #156]	; 0x9c
   82c44:	f8c8 1000 	str.w	r1, [r8]
   82c48:	f8c8 0004 	str.w	r0, [r8, #4]
   82c4c:	9326      	str	r3, [sp, #152]	; 0x98
   82c4e:	f300 81cf 	bgt.w	82ff0 <_svfprintf_r+0x1208>
   82c52:	f108 0808 	add.w	r8, r8, #8
   82c56:	e7ab      	b.n	82bb0 <_svfprintf_r+0xdc8>
   82c58:	9b07      	ldr	r3, [sp, #28]
   82c5a:	07da      	lsls	r2, r3, #31
   82c5c:	f53f adad 	bmi.w	827ba <_svfprintf_r+0x9d2>
   82c60:	2301      	movs	r3, #1
   82c62:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82c64:	441c      	add	r4, r3
   82c66:	441f      	add	r7, r3
   82c68:	2f07      	cmp	r7, #7
   82c6a:	9427      	str	r4, [sp, #156]	; 0x9c
   82c6c:	f8c8 6000 	str.w	r6, [r8]
   82c70:	9726      	str	r7, [sp, #152]	; 0x98
   82c72:	f8c8 3004 	str.w	r3, [r8, #4]
   82c76:	f77f add4 	ble.w	82822 <_svfprintf_r+0xa3a>
   82c7a:	aa25      	add	r2, sp, #148	; 0x94
   82c7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c7e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82c80:	f002 f9b6 	bl	84ff0 <__ssprint_r>
   82c84:	2800      	cmp	r0, #0
   82c86:	f47f a98c 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82c8a:	46c8      	mov	r8, r9
   82c8c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82c8e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82c90:	e5c9      	b.n	82826 <_svfprintf_r+0xa3e>
   82c92:	aa25      	add	r2, sp, #148	; 0x94
   82c94:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c96:	980c      	ldr	r0, [sp, #48]	; 0x30
   82c98:	f002 f9aa 	bl	84ff0 <__ssprint_r>
   82c9c:	2800      	cmp	r0, #0
   82c9e:	f47f a980 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82ca2:	46c8      	mov	r8, r9
   82ca4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ca6:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82ca8:	e596      	b.n	827d8 <_svfprintf_r+0x9f0>
   82caa:	aa25      	add	r2, sp, #148	; 0x94
   82cac:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82cae:	980c      	ldr	r0, [sp, #48]	; 0x30
   82cb0:	f002 f99e 	bl	84ff0 <__ssprint_r>
   82cb4:	2800      	cmp	r0, #0
   82cb6:	f47f a974 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82cba:	46c8      	mov	r8, r9
   82cbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82cbe:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82cc0:	e599      	b.n	827f6 <_svfprintf_r+0xa0e>
   82cc2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82cc4:	3407      	adds	r4, #7
   82cc6:	f024 0407 	bic.w	r4, r4, #7
   82cca:	f104 0108 	add.w	r1, r4, #8
   82cce:	e9d4 2300 	ldrd	r2, r3, [r4]
   82cd2:	910f      	str	r1, [sp, #60]	; 0x3c
   82cd4:	4614      	mov	r4, r2
   82cd6:	461d      	mov	r5, r3
   82cd8:	f7ff bb8f 	b.w	823fa <_svfprintf_r+0x612>
   82cdc:	464e      	mov	r6, r9
   82cde:	f7ff b99f 	b.w	82020 <_svfprintf_r+0x238>
   82ce2:	bf00      	nop
   82ce4:	00086738 	.word	0x00086738
   82ce8:	aa25      	add	r2, sp, #148	; 0x94
   82cea:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82cec:	980c      	ldr	r0, [sp, #48]	; 0x30
   82cee:	f002 f97f 	bl	84ff0 <__ssprint_r>
   82cf2:	2800      	cmp	r0, #0
   82cf4:	f47f a955 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82cf8:	46c8      	mov	r8, r9
   82cfa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82cfc:	f7ff ba16 	b.w	8212c <_svfprintf_r+0x344>
   82d00:	9c15      	ldr	r4, [sp, #84]	; 0x54
   82d02:	4622      	mov	r2, r4
   82d04:	4620      	mov	r0, r4
   82d06:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82d08:	4623      	mov	r3, r4
   82d0a:	4621      	mov	r1, r4
   82d0c:	f003 fa2e 	bl	8616c <__aeabi_dcmpun>
   82d10:	2800      	cmp	r0, #0
   82d12:	f040 8273 	bne.w	831fc <_svfprintf_r+0x1414>
   82d16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d18:	3301      	adds	r3, #1
   82d1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82d1c:	f023 0320 	bic.w	r3, r3, #32
   82d20:	930e      	str	r3, [sp, #56]	; 0x38
   82d22:	f000 819c 	beq.w	8305e <_svfprintf_r+0x1276>
   82d26:	2b47      	cmp	r3, #71	; 0x47
   82d28:	f000 80d6 	beq.w	82ed8 <_svfprintf_r+0x10f0>
   82d2c:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   82d30:	9307      	str	r3, [sp, #28]
   82d32:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82d34:	1e1f      	subs	r7, r3, #0
   82d36:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82d38:	9308      	str	r3, [sp, #32]
   82d3a:	bfb7      	itett	lt
   82d3c:	463b      	movlt	r3, r7
   82d3e:	2300      	movge	r3, #0
   82d40:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82d44:	232d      	movlt	r3, #45	; 0x2d
   82d46:	9310      	str	r3, [sp, #64]	; 0x40
   82d48:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82d4a:	2b66      	cmp	r3, #102	; 0x66
   82d4c:	f000 8190 	beq.w	83070 <_svfprintf_r+0x1288>
   82d50:	2b46      	cmp	r3, #70	; 0x46
   82d52:	f000 80a4 	beq.w	82e9e <_svfprintf_r+0x10b6>
   82d56:	2002      	movs	r0, #2
   82d58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d5a:	a923      	add	r1, sp, #140	; 0x8c
   82d5c:	2b45      	cmp	r3, #69	; 0x45
   82d5e:	bf0a      	itet	eq
   82d60:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   82d62:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82d64:	1c5d      	addeq	r5, r3, #1
   82d66:	e88d 0021 	stmia.w	sp, {r0, r5}
   82d6a:	9104      	str	r1, [sp, #16]
   82d6c:	a820      	add	r0, sp, #128	; 0x80
   82d6e:	a91f      	add	r1, sp, #124	; 0x7c
   82d70:	463b      	mov	r3, r7
   82d72:	9003      	str	r0, [sp, #12]
   82d74:	9a08      	ldr	r2, [sp, #32]
   82d76:	9102      	str	r1, [sp, #8]
   82d78:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d7a:	f000 fb59 	bl	83430 <_dtoa_r>
   82d7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82d80:	4606      	mov	r6, r0
   82d82:	2b67      	cmp	r3, #103	; 0x67
   82d84:	f040 81ba 	bne.w	830fc <_svfprintf_r+0x1314>
   82d88:	f01b 0f01 	tst.w	fp, #1
   82d8c:	f000 8223 	beq.w	831d6 <_svfprintf_r+0x13ee>
   82d90:	1974      	adds	r4, r6, r5
   82d92:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82d94:	9808      	ldr	r0, [sp, #32]
   82d96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82d98:	4639      	mov	r1, r7
   82d9a:	f003 f9b5 	bl	86108 <__aeabi_dcmpeq>
   82d9e:	2800      	cmp	r0, #0
   82da0:	f040 8124 	bne.w	82fec <_svfprintf_r+0x1204>
   82da4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82da6:	42a3      	cmp	r3, r4
   82da8:	d206      	bcs.n	82db8 <_svfprintf_r+0xfd0>
   82daa:	2130      	movs	r1, #48	; 0x30
   82dac:	1c5a      	adds	r2, r3, #1
   82dae:	9223      	str	r2, [sp, #140]	; 0x8c
   82db0:	7019      	strb	r1, [r3, #0]
   82db2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82db4:	429c      	cmp	r4, r3
   82db6:	d8f9      	bhi.n	82dac <_svfprintf_r+0xfc4>
   82db8:	1b9b      	subs	r3, r3, r6
   82dba:	9313      	str	r3, [sp, #76]	; 0x4c
   82dbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82dbe:	2b47      	cmp	r3, #71	; 0x47
   82dc0:	f000 80a2 	beq.w	82f08 <_svfprintf_r+0x1120>
   82dc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82dc6:	2b65      	cmp	r3, #101	; 0x65
   82dc8:	f340 81a7 	ble.w	8311a <_svfprintf_r+0x1332>
   82dcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82dce:	2b66      	cmp	r3, #102	; 0x66
   82dd0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82dd2:	9312      	str	r3, [sp, #72]	; 0x48
   82dd4:	f000 8171 	beq.w	830ba <_svfprintf_r+0x12d2>
   82dd8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82dda:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82ddc:	4619      	mov	r1, r3
   82dde:	4291      	cmp	r1, r2
   82de0:	f300 815d 	bgt.w	8309e <_svfprintf_r+0x12b6>
   82de4:	f01b 0f01 	tst.w	fp, #1
   82de8:	f040 81f0 	bne.w	831cc <_svfprintf_r+0x13e4>
   82dec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82df0:	9308      	str	r3, [sp, #32]
   82df2:	2367      	movs	r3, #103	; 0x67
   82df4:	920e      	str	r2, [sp, #56]	; 0x38
   82df6:	9311      	str	r3, [sp, #68]	; 0x44
   82df8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82dfa:	2b00      	cmp	r3, #0
   82dfc:	d17d      	bne.n	82efa <_svfprintf_r+0x1112>
   82dfe:	930a      	str	r3, [sp, #40]	; 0x28
   82e00:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82e04:	f7ff b914 	b.w	82030 <_svfprintf_r+0x248>
   82e08:	f024 0407 	bic.w	r4, r4, #7
   82e0c:	6823      	ldr	r3, [r4, #0]
   82e0e:	9315      	str	r3, [sp, #84]	; 0x54
   82e10:	6863      	ldr	r3, [r4, #4]
   82e12:	9314      	str	r3, [sp, #80]	; 0x50
   82e14:	f104 0308 	add.w	r3, r4, #8
   82e18:	930f      	str	r3, [sp, #60]	; 0x3c
   82e1a:	f7ff bb2f 	b.w	8247c <_svfprintf_r+0x694>
   82e1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82e20:	6813      	ldr	r3, [r2, #0]
   82e22:	3204      	adds	r2, #4
   82e24:	920f      	str	r2, [sp, #60]	; 0x3c
   82e26:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82e28:	601a      	str	r2, [r3, #0]
   82e2a:	f7ff b804 	b.w	81e36 <_svfprintf_r+0x4e>
   82e2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82e30:	4daf      	ldr	r5, [pc, #700]	; (830f0 <_svfprintf_r+0x1308>)
   82e32:	f7ff b9ad 	b.w	82190 <_svfprintf_r+0x3a8>
   82e36:	aa25      	add	r2, sp, #148	; 0x94
   82e38:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e3a:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e3c:	f002 f8d8 	bl	84ff0 <__ssprint_r>
   82e40:	2800      	cmp	r0, #0
   82e42:	f47f a8ae 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82e46:	46c8      	mov	r8, r9
   82e48:	e431      	b.n	826ae <_svfprintf_r+0x8c6>
   82e4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82e4c:	4613      	mov	r3, r2
   82e4e:	3304      	adds	r3, #4
   82e50:	930f      	str	r3, [sp, #60]	; 0x3c
   82e52:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82e54:	6811      	ldr	r1, [r2, #0]
   82e56:	17dd      	asrs	r5, r3, #31
   82e58:	461a      	mov	r2, r3
   82e5a:	462b      	mov	r3, r5
   82e5c:	e9c1 2300 	strd	r2, r3, [r1]
   82e60:	f7fe bfe9 	b.w	81e36 <_svfprintf_r+0x4e>
   82e64:	aa25      	add	r2, sp, #148	; 0x94
   82e66:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e68:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e6a:	f002 f8c1 	bl	84ff0 <__ssprint_r>
   82e6e:	2800      	cmp	r0, #0
   82e70:	f47f a897 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82e74:	46c8      	mov	r8, r9
   82e76:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e78:	e432      	b.n	826e0 <_svfprintf_r+0x8f8>
   82e7a:	f108 0808 	add.w	r8, r8, #8
   82e7e:	e52f      	b.n	828e0 <_svfprintf_r+0xaf8>
   82e80:	2140      	movs	r1, #64	; 0x40
   82e82:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e84:	f001 fa26 	bl	842d4 <_malloc_r>
   82e88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82e8a:	6010      	str	r0, [r2, #0]
   82e8c:	6110      	str	r0, [r2, #16]
   82e8e:	2800      	cmp	r0, #0
   82e90:	f000 8214 	beq.w	832bc <_svfprintf_r+0x14d4>
   82e94:	2340      	movs	r3, #64	; 0x40
   82e96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82e98:	6153      	str	r3, [r2, #20]
   82e9a:	f7fe bfbc 	b.w	81e16 <_svfprintf_r+0x2e>
   82e9e:	2003      	movs	r0, #3
   82ea0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82ea2:	a923      	add	r1, sp, #140	; 0x8c
   82ea4:	e88d 0011 	stmia.w	sp, {r0, r4}
   82ea8:	9104      	str	r1, [sp, #16]
   82eaa:	a820      	add	r0, sp, #128	; 0x80
   82eac:	a91f      	add	r1, sp, #124	; 0x7c
   82eae:	9003      	str	r0, [sp, #12]
   82eb0:	9a08      	ldr	r2, [sp, #32]
   82eb2:	463b      	mov	r3, r7
   82eb4:	9102      	str	r1, [sp, #8]
   82eb6:	980c      	ldr	r0, [sp, #48]	; 0x30
   82eb8:	f000 faba 	bl	83430 <_dtoa_r>
   82ebc:	4625      	mov	r5, r4
   82ebe:	4606      	mov	r6, r0
   82ec0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82ec2:	1974      	adds	r4, r6, r5
   82ec4:	2b46      	cmp	r3, #70	; 0x46
   82ec6:	f47f af64 	bne.w	82d92 <_svfprintf_r+0xfaa>
   82eca:	7833      	ldrb	r3, [r6, #0]
   82ecc:	2b30      	cmp	r3, #48	; 0x30
   82ece:	f000 8187 	beq.w	831e0 <_svfprintf_r+0x13f8>
   82ed2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   82ed4:	442c      	add	r4, r5
   82ed6:	e75c      	b.n	82d92 <_svfprintf_r+0xfaa>
   82ed8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82eda:	2b00      	cmp	r3, #0
   82edc:	bf08      	it	eq
   82ede:	2301      	moveq	r3, #1
   82ee0:	930a      	str	r3, [sp, #40]	; 0x28
   82ee2:	e723      	b.n	82d2c <_svfprintf_r+0xf44>
   82ee4:	4630      	mov	r0, r6
   82ee6:	950a      	str	r5, [sp, #40]	; 0x28
   82ee8:	f7fe fe6c 	bl	81bc4 <strlen>
   82eec:	940f      	str	r4, [sp, #60]	; 0x3c
   82eee:	900e      	str	r0, [sp, #56]	; 0x38
   82ef0:	f8cd b01c 	str.w	fp, [sp, #28]
   82ef4:	4603      	mov	r3, r0
   82ef6:	f7ff b9e7 	b.w	822c8 <_svfprintf_r+0x4e0>
   82efa:	272d      	movs	r7, #45	; 0x2d
   82efc:	2300      	movs	r3, #0
   82efe:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82f02:	930a      	str	r3, [sp, #40]	; 0x28
   82f04:	f7ff b895 	b.w	82032 <_svfprintf_r+0x24a>
   82f08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82f0a:	461a      	mov	r2, r3
   82f0c:	9312      	str	r3, [sp, #72]	; 0x48
   82f0e:	3303      	adds	r3, #3
   82f10:	db04      	blt.n	82f1c <_svfprintf_r+0x1134>
   82f12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82f14:	4619      	mov	r1, r3
   82f16:	4291      	cmp	r1, r2
   82f18:	f6bf af5e 	bge.w	82dd8 <_svfprintf_r+0xff0>
   82f1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f1e:	3b02      	subs	r3, #2
   82f20:	9311      	str	r3, [sp, #68]	; 0x44
   82f22:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82f24:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82f28:	3b01      	subs	r3, #1
   82f2a:	2b00      	cmp	r3, #0
   82f2c:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   82f30:	bfb4      	ite	lt
   82f32:	222d      	movlt	r2, #45	; 0x2d
   82f34:	222b      	movge	r2, #43	; 0x2b
   82f36:	931f      	str	r3, [sp, #124]	; 0x7c
   82f38:	bfb8      	it	lt
   82f3a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   82f3c:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   82f40:	bfb8      	it	lt
   82f42:	f1c3 0301 	rsblt	r3, r3, #1
   82f46:	2b09      	cmp	r3, #9
   82f48:	f340 811f 	ble.w	8318a <_svfprintf_r+0x13a2>
   82f4c:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   82f50:	4601      	mov	r1, r0
   82f52:	4c68      	ldr	r4, [pc, #416]	; (830f4 <_svfprintf_r+0x130c>)
   82f54:	e000      	b.n	82f58 <_svfprintf_r+0x1170>
   82f56:	4611      	mov	r1, r2
   82f58:	fb84 5203 	smull	r5, r2, r4, r3
   82f5c:	17dd      	asrs	r5, r3, #31
   82f5e:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   82f62:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   82f66:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82f6a:	3230      	adds	r2, #48	; 0x30
   82f6c:	2d09      	cmp	r5, #9
   82f6e:	f801 2c01 	strb.w	r2, [r1, #-1]
   82f72:	462b      	mov	r3, r5
   82f74:	f101 32ff 	add.w	r2, r1, #4294967295
   82f78:	dced      	bgt.n	82f56 <_svfprintf_r+0x116e>
   82f7a:	3330      	adds	r3, #48	; 0x30
   82f7c:	3902      	subs	r1, #2
   82f7e:	b2dc      	uxtb	r4, r3
   82f80:	4288      	cmp	r0, r1
   82f82:	f802 4c01 	strb.w	r4, [r2, #-1]
   82f86:	f240 8192 	bls.w	832ae <_svfprintf_r+0x14c6>
   82f8a:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   82f8e:	4613      	mov	r3, r2
   82f90:	e001      	b.n	82f96 <_svfprintf_r+0x11ae>
   82f92:	f813 4b01 	ldrb.w	r4, [r3], #1
   82f96:	4283      	cmp	r3, r0
   82f98:	f801 4b01 	strb.w	r4, [r1], #1
   82f9c:	d1f9      	bne.n	82f92 <_svfprintf_r+0x11aa>
   82f9e:	3301      	adds	r3, #1
   82fa0:	1a9b      	subs	r3, r3, r2
   82fa2:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   82fa6:	4413      	add	r3, r2
   82fa8:	aa21      	add	r2, sp, #132	; 0x84
   82faa:	1a9b      	subs	r3, r3, r2
   82fac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82fae:	931b      	str	r3, [sp, #108]	; 0x6c
   82fb0:	2a01      	cmp	r2, #1
   82fb2:	4413      	add	r3, r2
   82fb4:	930e      	str	r3, [sp, #56]	; 0x38
   82fb6:	f340 8148 	ble.w	8324a <_svfprintf_r+0x1462>
   82fba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82fbc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82fbe:	4413      	add	r3, r2
   82fc0:	930e      	str	r3, [sp, #56]	; 0x38
   82fc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82fc6:	9308      	str	r3, [sp, #32]
   82fc8:	2300      	movs	r3, #0
   82fca:	9312      	str	r3, [sp, #72]	; 0x48
   82fcc:	e714      	b.n	82df8 <_svfprintf_r+0x1010>
   82fce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82fd0:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82fd2:	f7ff b876 	b.w	820c2 <_svfprintf_r+0x2da>
   82fd6:	aa25      	add	r2, sp, #148	; 0x94
   82fd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82fda:	980c      	ldr	r0, [sp, #48]	; 0x30
   82fdc:	f002 f808 	bl	84ff0 <__ssprint_r>
   82fe0:	2800      	cmp	r0, #0
   82fe2:	f47e afde 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   82fe6:	46c8      	mov	r8, r9
   82fe8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82fea:	e4fb      	b.n	829e4 <_svfprintf_r+0xbfc>
   82fec:	4623      	mov	r3, r4
   82fee:	e6e3      	b.n	82db8 <_svfprintf_r+0xfd0>
   82ff0:	aa25      	add	r2, sp, #148	; 0x94
   82ff2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ff4:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ff6:	f001 fffb 	bl	84ff0 <__ssprint_r>
   82ffa:	2800      	cmp	r0, #0
   82ffc:	f47e afd1 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   83000:	46c8      	mov	r8, r9
   83002:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83004:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83006:	e5d3      	b.n	82bb0 <_svfprintf_r+0xdc8>
   83008:	aa25      	add	r2, sp, #148	; 0x94
   8300a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8300c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8300e:	f001 ffef 	bl	84ff0 <__ssprint_r>
   83012:	2800      	cmp	r0, #0
   83014:	f47e afc5 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   83018:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8301a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8301c:	46c8      	mov	r8, r9
   8301e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83020:	1a9a      	subs	r2, r3, r2
   83022:	e5dd      	b.n	82be0 <_svfprintf_r+0xdf8>
   83024:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83026:	f7ff b8fe 	b.w	82226 <_svfprintf_r+0x43e>
   8302a:	aa25      	add	r2, sp, #148	; 0x94
   8302c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8302e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83030:	f001 ffde 	bl	84ff0 <__ssprint_r>
   83034:	2800      	cmp	r0, #0
   83036:	f47e afb4 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8303a:	46c8      	mov	r8, r9
   8303c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8303e:	e5b0      	b.n	82ba2 <_svfprintf_r+0xdba>
   83040:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83042:	4637      	mov	r7, r6
   83044:	2b06      	cmp	r3, #6
   83046:	bf28      	it	cs
   83048:	2306      	movcs	r3, #6
   8304a:	960a      	str	r6, [sp, #40]	; 0x28
   8304c:	9612      	str	r6, [sp, #72]	; 0x48
   8304e:	9308      	str	r3, [sp, #32]
   83050:	940f      	str	r4, [sp, #60]	; 0x3c
   83052:	f8cd b01c 	str.w	fp, [sp, #28]
   83056:	930e      	str	r3, [sp, #56]	; 0x38
   83058:	4e27      	ldr	r6, [pc, #156]	; (830f8 <_svfprintf_r+0x1310>)
   8305a:	f7fe bfe9 	b.w	82030 <_svfprintf_r+0x248>
   8305e:	2306      	movs	r3, #6
   83060:	930a      	str	r3, [sp, #40]	; 0x28
   83062:	e663      	b.n	82d2c <_svfprintf_r+0xf44>
   83064:	232d      	movs	r3, #45	; 0x2d
   83066:	461f      	mov	r7, r3
   83068:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8306c:	f7ff ba28 	b.w	824c0 <_svfprintf_r+0x6d8>
   83070:	2003      	movs	r0, #3
   83072:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83074:	a923      	add	r1, sp, #140	; 0x8c
   83076:	e88d 0011 	stmia.w	sp, {r0, r4}
   8307a:	9104      	str	r1, [sp, #16]
   8307c:	a820      	add	r0, sp, #128	; 0x80
   8307e:	a91f      	add	r1, sp, #124	; 0x7c
   83080:	9003      	str	r0, [sp, #12]
   83082:	9a08      	ldr	r2, [sp, #32]
   83084:	463b      	mov	r3, r7
   83086:	9102      	str	r1, [sp, #8]
   83088:	980c      	ldr	r0, [sp, #48]	; 0x30
   8308a:	f000 f9d1 	bl	83430 <_dtoa_r>
   8308e:	4625      	mov	r5, r4
   83090:	4606      	mov	r6, r0
   83092:	1904      	adds	r4, r0, r4
   83094:	e719      	b.n	82eca <_svfprintf_r+0x10e2>
   83096:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83098:	4d15      	ldr	r5, [pc, #84]	; (830f0 <_svfprintf_r+0x1308>)
   8309a:	f7ff bb7e 	b.w	8279a <_svfprintf_r+0x9b2>
   8309e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   830a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   830a2:	4413      	add	r3, r2
   830a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
   830a6:	930e      	str	r3, [sp, #56]	; 0x38
   830a8:	2a00      	cmp	r2, #0
   830aa:	f340 80c7 	ble.w	8323c <_svfprintf_r+0x1454>
   830ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   830b2:	9308      	str	r3, [sp, #32]
   830b4:	2367      	movs	r3, #103	; 0x67
   830b6:	9311      	str	r3, [sp, #68]	; 0x44
   830b8:	e69e      	b.n	82df8 <_svfprintf_r+0x1010>
   830ba:	2b00      	cmp	r3, #0
   830bc:	f340 80e1 	ble.w	83282 <_svfprintf_r+0x149a>
   830c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   830c2:	2a00      	cmp	r2, #0
   830c4:	f040 80b0 	bne.w	83228 <_svfprintf_r+0x1440>
   830c8:	f01b 0f01 	tst.w	fp, #1
   830cc:	f040 80ac 	bne.w	83228 <_svfprintf_r+0x1440>
   830d0:	9308      	str	r3, [sp, #32]
   830d2:	930e      	str	r3, [sp, #56]	; 0x38
   830d4:	e690      	b.n	82df8 <_svfprintf_r+0x1010>
   830d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   830d8:	940f      	str	r4, [sp, #60]	; 0x3c
   830da:	9308      	str	r3, [sp, #32]
   830dc:	930e      	str	r3, [sp, #56]	; 0x38
   830de:	900a      	str	r0, [sp, #40]	; 0x28
   830e0:	f8cd b01c 	str.w	fp, [sp, #28]
   830e4:	9012      	str	r0, [sp, #72]	; 0x48
   830e6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   830ea:	f7fe bfa1 	b.w	82030 <_svfprintf_r+0x248>
   830ee:	bf00      	nop
   830f0:	00086738 	.word	0x00086738
   830f4:	66666667 	.word	0x66666667
   830f8:	0008671c 	.word	0x0008671c
   830fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   830fe:	2b47      	cmp	r3, #71	; 0x47
   83100:	f47f ae46 	bne.w	82d90 <_svfprintf_r+0xfa8>
   83104:	f01b 0f01 	tst.w	fp, #1
   83108:	f47f aeda 	bne.w	82ec0 <_svfprintf_r+0x10d8>
   8310c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8310e:	1b9b      	subs	r3, r3, r6
   83110:	9313      	str	r3, [sp, #76]	; 0x4c
   83112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83114:	2b47      	cmp	r3, #71	; 0x47
   83116:	f43f aef7 	beq.w	82f08 <_svfprintf_r+0x1120>
   8311a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8311c:	9312      	str	r3, [sp, #72]	; 0x48
   8311e:	e700      	b.n	82f22 <_svfprintf_r+0x113a>
   83120:	2000      	movs	r0, #0
   83122:	900a      	str	r0, [sp, #40]	; 0x28
   83124:	f7fe bebc 	b.w	81ea0 <_svfprintf_r+0xb8>
   83128:	424f      	negs	r7, r1
   8312a:	3110      	adds	r1, #16
   8312c:	da35      	bge.n	8319a <_svfprintf_r+0x13b2>
   8312e:	2410      	movs	r4, #16
   83130:	4d6a      	ldr	r5, [pc, #424]	; (832dc <_svfprintf_r+0x14f4>)
   83132:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83136:	e004      	b.n	83142 <_svfprintf_r+0x135a>
   83138:	f108 0808 	add.w	r8, r8, #8
   8313c:	3f10      	subs	r7, #16
   8313e:	2f10      	cmp	r7, #16
   83140:	dd2c      	ble.n	8319c <_svfprintf_r+0x13b4>
   83142:	3301      	adds	r3, #1
   83144:	3210      	adds	r2, #16
   83146:	2b07      	cmp	r3, #7
   83148:	9227      	str	r2, [sp, #156]	; 0x9c
   8314a:	9326      	str	r3, [sp, #152]	; 0x98
   8314c:	f8c8 5000 	str.w	r5, [r8]
   83150:	f8c8 4004 	str.w	r4, [r8, #4]
   83154:	ddf0      	ble.n	83138 <_svfprintf_r+0x1350>
   83156:	aa25      	add	r2, sp, #148	; 0x94
   83158:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8315a:	4658      	mov	r0, fp
   8315c:	f001 ff48 	bl	84ff0 <__ssprint_r>
   83160:	2800      	cmp	r0, #0
   83162:	f47e af1e 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   83166:	46c8      	mov	r8, r9
   83168:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8316a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8316c:	e7e6      	b.n	8313c <_svfprintf_r+0x1354>
   8316e:	aa25      	add	r2, sp, #148	; 0x94
   83170:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83172:	980c      	ldr	r0, [sp, #48]	; 0x30
   83174:	f001 ff3c 	bl	84ff0 <__ssprint_r>
   83178:	2800      	cmp	r0, #0
   8317a:	f47e af12 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   8317e:	46c8      	mov	r8, r9
   83180:	991f      	ldr	r1, [sp, #124]	; 0x7c
   83182:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83184:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83186:	f7ff bbc3 	b.w	82910 <_svfprintf_r+0xb28>
   8318a:	2230      	movs	r2, #48	; 0x30
   8318c:	4413      	add	r3, r2
   8318e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   83192:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   83196:	ab22      	add	r3, sp, #136	; 0x88
   83198:	e706      	b.n	82fa8 <_svfprintf_r+0x11c0>
   8319a:	4d50      	ldr	r5, [pc, #320]	; (832dc <_svfprintf_r+0x14f4>)
   8319c:	3301      	adds	r3, #1
   8319e:	443a      	add	r2, r7
   831a0:	2b07      	cmp	r3, #7
   831a2:	e888 00a0 	stmia.w	r8, {r5, r7}
   831a6:	9227      	str	r2, [sp, #156]	; 0x9c
   831a8:	9326      	str	r3, [sp, #152]	; 0x98
   831aa:	f108 0808 	add.w	r8, r8, #8
   831ae:	f77f abb2 	ble.w	82916 <_svfprintf_r+0xb2e>
   831b2:	aa25      	add	r2, sp, #148	; 0x94
   831b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831b6:	980c      	ldr	r0, [sp, #48]	; 0x30
   831b8:	f001 ff1a 	bl	84ff0 <__ssprint_r>
   831bc:	2800      	cmp	r0, #0
   831be:	f47e aef0 	bne.w	81fa2 <_svfprintf_r+0x1ba>
   831c2:	46c8      	mov	r8, r9
   831c4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   831c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   831c8:	f7ff bba5 	b.w	82916 <_svfprintf_r+0xb2e>
   831cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   831ce:	9a19      	ldr	r2, [sp, #100]	; 0x64
   831d0:	4413      	add	r3, r2
   831d2:	930e      	str	r3, [sp, #56]	; 0x38
   831d4:	e76b      	b.n	830ae <_svfprintf_r+0x12c6>
   831d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   831d8:	e5ee      	b.n	82db8 <_svfprintf_r+0xfd0>
   831da:	9b26      	ldr	r3, [sp, #152]	; 0x98
   831dc:	4d3f      	ldr	r5, [pc, #252]	; (832dc <_svfprintf_r+0x14f4>)
   831de:	e4bb      	b.n	82b58 <_svfprintf_r+0xd70>
   831e0:	9a16      	ldr	r2, [sp, #88]	; 0x58
   831e2:	9808      	ldr	r0, [sp, #32]
   831e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   831e6:	4639      	mov	r1, r7
   831e8:	f002 ff8e 	bl	86108 <__aeabi_dcmpeq>
   831ec:	2800      	cmp	r0, #0
   831ee:	f47f ae70 	bne.w	82ed2 <_svfprintf_r+0x10ea>
   831f2:	f1c5 0501 	rsb	r5, r5, #1
   831f6:	951f      	str	r5, [sp, #124]	; 0x7c
   831f8:	442c      	add	r4, r5
   831fa:	e5ca      	b.n	82d92 <_svfprintf_r+0xfaa>
   831fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   831fe:	4e38      	ldr	r6, [pc, #224]	; (832e0 <_svfprintf_r+0x14f8>)
   83200:	2b00      	cmp	r3, #0
   83202:	bfbe      	ittt	lt
   83204:	232d      	movlt	r3, #45	; 0x2d
   83206:	461f      	movlt	r7, r3
   83208:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   8320c:	f04f 0303 	mov.w	r3, #3
   83210:	461a      	mov	r2, r3
   83212:	9308      	str	r3, [sp, #32]
   83214:	f04f 0300 	mov.w	r3, #0
   83218:	bfa8      	it	ge
   8321a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   8321e:	4619      	mov	r1, r3
   83220:	930a      	str	r3, [sp, #40]	; 0x28
   83222:	4b30      	ldr	r3, [pc, #192]	; (832e4 <_svfprintf_r+0x14fc>)
   83224:	f7ff b954 	b.w	824d0 <_svfprintf_r+0x6e8>
   83228:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8322a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8322c:	4413      	add	r3, r2
   8322e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83230:	441a      	add	r2, r3
   83232:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   83236:	920e      	str	r2, [sp, #56]	; 0x38
   83238:	9308      	str	r3, [sp, #32]
   8323a:	e5dd      	b.n	82df8 <_svfprintf_r+0x1010>
   8323c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8323e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83240:	f1c3 0301 	rsb	r3, r3, #1
   83244:	441a      	add	r2, r3
   83246:	4613      	mov	r3, r2
   83248:	e7c3      	b.n	831d2 <_svfprintf_r+0x13ea>
   8324a:	f01b 0301 	ands.w	r3, fp, #1
   8324e:	9312      	str	r3, [sp, #72]	; 0x48
   83250:	f47f aeb3 	bne.w	82fba <_svfprintf_r+0x11d2>
   83254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83256:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8325a:	9308      	str	r3, [sp, #32]
   8325c:	e5cc      	b.n	82df8 <_svfprintf_r+0x1010>
   8325e:	4d1f      	ldr	r5, [pc, #124]	; (832dc <_svfprintf_r+0x14f4>)
   83260:	e43c      	b.n	82adc <_svfprintf_r+0xcf4>
   83262:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83264:	4d1d      	ldr	r5, [pc, #116]	; (832dc <_svfprintf_r+0x14f4>)
   83266:	e491      	b.n	82b8c <_svfprintf_r+0xda4>
   83268:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8326a:	f89a 3001 	ldrb.w	r3, [sl, #1]
   8326e:	6828      	ldr	r0, [r5, #0]
   83270:	46a2      	mov	sl, r4
   83272:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   83276:	900a      	str	r0, [sp, #40]	; 0x28
   83278:	4628      	mov	r0, r5
   8327a:	3004      	adds	r0, #4
   8327c:	900f      	str	r0, [sp, #60]	; 0x3c
   8327e:	f7fe be0d 	b.w	81e9c <_svfprintf_r+0xb4>
   83282:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83284:	b913      	cbnz	r3, 8328c <_svfprintf_r+0x14a4>
   83286:	f01b 0f01 	tst.w	fp, #1
   8328a:	d002      	beq.n	83292 <_svfprintf_r+0x14aa>
   8328c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   8328e:	3301      	adds	r3, #1
   83290:	e7cd      	b.n	8322e <_svfprintf_r+0x1446>
   83292:	2301      	movs	r3, #1
   83294:	e71c      	b.n	830d0 <_svfprintf_r+0x12e8>
   83296:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8329a:	f7ff b980 	b.w	8259e <_svfprintf_r+0x7b6>
   8329e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832a2:	f7ff b93a 	b.w	8251a <_svfprintf_r+0x732>
   832a6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832aa:	f7ff b84f 	b.w	8234c <_svfprintf_r+0x564>
   832ae:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   832b2:	e679      	b.n	82fa8 <_svfprintf_r+0x11c0>
   832b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832b8:	f7ff b9b2 	b.w	82620 <_svfprintf_r+0x838>
   832bc:	f04f 32ff 	mov.w	r2, #4294967295
   832c0:	230c      	movs	r3, #12
   832c2:	9209      	str	r2, [sp, #36]	; 0x24
   832c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   832c6:	6013      	str	r3, [r2, #0]
   832c8:	f7fe be74 	b.w	81fb4 <_svfprintf_r+0x1cc>
   832cc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832d0:	f7ff b8c4 	b.w	8245c <_svfprintf_r+0x674>
   832d4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832d8:	f7ff b878 	b.w	823cc <_svfprintf_r+0x5e4>
   832dc:	00086738 	.word	0x00086738
   832e0:	000866f0 	.word	0x000866f0
   832e4:	000866ec 	.word	0x000866ec

000832e8 <register_fini>:
   832e8:	4b02      	ldr	r3, [pc, #8]	; (832f4 <register_fini+0xc>)
   832ea:	b113      	cbz	r3, 832f2 <register_fini+0xa>
   832ec:	4802      	ldr	r0, [pc, #8]	; (832f8 <register_fini+0x10>)
   832ee:	f000 b805 	b.w	832fc <atexit>
   832f2:	4770      	bx	lr
   832f4:	00000000 	.word	0x00000000
   832f8:	00084275 	.word	0x00084275

000832fc <atexit>:
   832fc:	2300      	movs	r3, #0
   832fe:	4601      	mov	r1, r0
   83300:	461a      	mov	r2, r3
   83302:	4618      	mov	r0, r3
   83304:	f001 befe 	b.w	85104 <__register_exitproc>

00083308 <quorem>:
   83308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8330c:	6903      	ldr	r3, [r0, #16]
   8330e:	690f      	ldr	r7, [r1, #16]
   83310:	b083      	sub	sp, #12
   83312:	429f      	cmp	r7, r3
   83314:	f300 8088 	bgt.w	83428 <quorem+0x120>
   83318:	3f01      	subs	r7, #1
   8331a:	f101 0614 	add.w	r6, r1, #20
   8331e:	f100 0a14 	add.w	sl, r0, #20
   83322:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   83326:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8332a:	3301      	adds	r3, #1
   8332c:	fbb2 f8f3 	udiv	r8, r2, r3
   83330:	00bb      	lsls	r3, r7, #2
   83332:	9300      	str	r3, [sp, #0]
   83334:	eb06 0903 	add.w	r9, r6, r3
   83338:	4453      	add	r3, sl
   8333a:	9301      	str	r3, [sp, #4]
   8333c:	f1b8 0f00 	cmp.w	r8, #0
   83340:	d03b      	beq.n	833ba <quorem+0xb2>
   83342:	2300      	movs	r3, #0
   83344:	46b4      	mov	ip, r6
   83346:	461c      	mov	r4, r3
   83348:	46d6      	mov	lr, sl
   8334a:	f85c 2b04 	ldr.w	r2, [ip], #4
   8334e:	f8de 5000 	ldr.w	r5, [lr]
   83352:	fa1f fb82 	uxth.w	fp, r2
   83356:	fb08 330b 	mla	r3, r8, fp, r3
   8335a:	0c12      	lsrs	r2, r2, #16
   8335c:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   83360:	fb08 bb02 	mla	fp, r8, r2, fp
   83364:	b29a      	uxth	r2, r3
   83366:	1aa2      	subs	r2, r4, r2
   83368:	b2ab      	uxth	r3, r5
   8336a:	fa1f f48b 	uxth.w	r4, fp
   8336e:	441a      	add	r2, r3
   83370:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   83374:	eb04 4422 	add.w	r4, r4, r2, asr #16
   83378:	b292      	uxth	r2, r2
   8337a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   8337e:	45e1      	cmp	r9, ip
   83380:	f84e 2b04 	str.w	r2, [lr], #4
   83384:	ea4f 4424 	mov.w	r4, r4, asr #16
   83388:	ea4f 431b 	mov.w	r3, fp, lsr #16
   8338c:	d2dd      	bcs.n	8334a <quorem+0x42>
   8338e:	9b00      	ldr	r3, [sp, #0]
   83390:	f85a 3003 	ldr.w	r3, [sl, r3]
   83394:	b98b      	cbnz	r3, 833ba <quorem+0xb2>
   83396:	9c01      	ldr	r4, [sp, #4]
   83398:	1f23      	subs	r3, r4, #4
   8339a:	459a      	cmp	sl, r3
   8339c:	d20c      	bcs.n	833b8 <quorem+0xb0>
   8339e:	f854 3c04 	ldr.w	r3, [r4, #-4]
   833a2:	b94b      	cbnz	r3, 833b8 <quorem+0xb0>
   833a4:	f1a4 0308 	sub.w	r3, r4, #8
   833a8:	e002      	b.n	833b0 <quorem+0xa8>
   833aa:	681a      	ldr	r2, [r3, #0]
   833ac:	3b04      	subs	r3, #4
   833ae:	b91a      	cbnz	r2, 833b8 <quorem+0xb0>
   833b0:	459a      	cmp	sl, r3
   833b2:	f107 37ff 	add.w	r7, r7, #4294967295
   833b6:	d3f8      	bcc.n	833aa <quorem+0xa2>
   833b8:	6107      	str	r7, [r0, #16]
   833ba:	4604      	mov	r4, r0
   833bc:	f001 fd08 	bl	84dd0 <__mcmp>
   833c0:	2800      	cmp	r0, #0
   833c2:	db2d      	blt.n	83420 <quorem+0x118>
   833c4:	4655      	mov	r5, sl
   833c6:	2300      	movs	r3, #0
   833c8:	f108 0801 	add.w	r8, r8, #1
   833cc:	f856 1b04 	ldr.w	r1, [r6], #4
   833d0:	6828      	ldr	r0, [r5, #0]
   833d2:	b28a      	uxth	r2, r1
   833d4:	1a9a      	subs	r2, r3, r2
   833d6:	0c0b      	lsrs	r3, r1, #16
   833d8:	b281      	uxth	r1, r0
   833da:	440a      	add	r2, r1
   833dc:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   833e0:	eb03 4322 	add.w	r3, r3, r2, asr #16
   833e4:	b292      	uxth	r2, r2
   833e6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   833ea:	45b1      	cmp	r9, r6
   833ec:	f845 2b04 	str.w	r2, [r5], #4
   833f0:	ea4f 4323 	mov.w	r3, r3, asr #16
   833f4:	d2ea      	bcs.n	833cc <quorem+0xc4>
   833f6:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   833fa:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   833fe:	b97a      	cbnz	r2, 83420 <quorem+0x118>
   83400:	1f1a      	subs	r2, r3, #4
   83402:	4592      	cmp	sl, r2
   83404:	d20b      	bcs.n	8341e <quorem+0x116>
   83406:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8340a:	b942      	cbnz	r2, 8341e <quorem+0x116>
   8340c:	3b08      	subs	r3, #8
   8340e:	e002      	b.n	83416 <quorem+0x10e>
   83410:	681a      	ldr	r2, [r3, #0]
   83412:	3b04      	subs	r3, #4
   83414:	b91a      	cbnz	r2, 8341e <quorem+0x116>
   83416:	459a      	cmp	sl, r3
   83418:	f107 37ff 	add.w	r7, r7, #4294967295
   8341c:	d3f8      	bcc.n	83410 <quorem+0x108>
   8341e:	6127      	str	r7, [r4, #16]
   83420:	4640      	mov	r0, r8
   83422:	b003      	add	sp, #12
   83424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83428:	2000      	movs	r0, #0
   8342a:	b003      	add	sp, #12
   8342c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00083430 <_dtoa_r>:
   83430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83434:	6c05      	ldr	r5, [r0, #64]	; 0x40
   83436:	b09b      	sub	sp, #108	; 0x6c
   83438:	4604      	mov	r4, r0
   8343a:	4692      	mov	sl, r2
   8343c:	469b      	mov	fp, r3
   8343e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   83440:	b14d      	cbz	r5, 83456 <_dtoa_r+0x26>
   83442:	2301      	movs	r3, #1
   83444:	6c42      	ldr	r2, [r0, #68]	; 0x44
   83446:	4629      	mov	r1, r5
   83448:	4093      	lsls	r3, r2
   8344a:	60ab      	str	r3, [r5, #8]
   8344c:	606a      	str	r2, [r5, #4]
   8344e:	f001 fae7 	bl	84a20 <_Bfree>
   83452:	2300      	movs	r3, #0
   83454:	6423      	str	r3, [r4, #64]	; 0x40
   83456:	f1bb 0f00 	cmp.w	fp, #0
   8345a:	465d      	mov	r5, fp
   8345c:	db35      	blt.n	834ca <_dtoa_r+0x9a>
   8345e:	2300      	movs	r3, #0
   83460:	6033      	str	r3, [r6, #0]
   83462:	4b9d      	ldr	r3, [pc, #628]	; (836d8 <_dtoa_r+0x2a8>)
   83464:	43ab      	bics	r3, r5
   83466:	d015      	beq.n	83494 <_dtoa_r+0x64>
   83468:	2200      	movs	r2, #0
   8346a:	2300      	movs	r3, #0
   8346c:	4650      	mov	r0, sl
   8346e:	4659      	mov	r1, fp
   83470:	f002 fe4a 	bl	86108 <__aeabi_dcmpeq>
   83474:	4680      	mov	r8, r0
   83476:	2800      	cmp	r0, #0
   83478:	d02d      	beq.n	834d6 <_dtoa_r+0xa6>
   8347a:	2301      	movs	r3, #1
   8347c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8347e:	6013      	str	r3, [r2, #0]
   83480:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83482:	2b00      	cmp	r3, #0
   83484:	f000 80bd 	beq.w	83602 <_dtoa_r+0x1d2>
   83488:	4894      	ldr	r0, [pc, #592]	; (836dc <_dtoa_r+0x2ac>)
   8348a:	6018      	str	r0, [r3, #0]
   8348c:	3801      	subs	r0, #1
   8348e:	b01b      	add	sp, #108	; 0x6c
   83490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83494:	f242 730f 	movw	r3, #9999	; 0x270f
   83498:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8349a:	6013      	str	r3, [r2, #0]
   8349c:	f1ba 0f00 	cmp.w	sl, #0
   834a0:	d10d      	bne.n	834be <_dtoa_r+0x8e>
   834a2:	f3c5 0513 	ubfx	r5, r5, #0, #20
   834a6:	b955      	cbnz	r5, 834be <_dtoa_r+0x8e>
   834a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   834aa:	488d      	ldr	r0, [pc, #564]	; (836e0 <_dtoa_r+0x2b0>)
   834ac:	2b00      	cmp	r3, #0
   834ae:	d0ee      	beq.n	8348e <_dtoa_r+0x5e>
   834b0:	f100 0308 	add.w	r3, r0, #8
   834b4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   834b6:	6013      	str	r3, [r2, #0]
   834b8:	b01b      	add	sp, #108	; 0x6c
   834ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   834be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   834c0:	4888      	ldr	r0, [pc, #544]	; (836e4 <_dtoa_r+0x2b4>)
   834c2:	2b00      	cmp	r3, #0
   834c4:	d0e3      	beq.n	8348e <_dtoa_r+0x5e>
   834c6:	1cc3      	adds	r3, r0, #3
   834c8:	e7f4      	b.n	834b4 <_dtoa_r+0x84>
   834ca:	2301      	movs	r3, #1
   834cc:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   834d0:	6033      	str	r3, [r6, #0]
   834d2:	46ab      	mov	fp, r5
   834d4:	e7c5      	b.n	83462 <_dtoa_r+0x32>
   834d6:	aa18      	add	r2, sp, #96	; 0x60
   834d8:	ab19      	add	r3, sp, #100	; 0x64
   834da:	9201      	str	r2, [sp, #4]
   834dc:	9300      	str	r3, [sp, #0]
   834de:	4652      	mov	r2, sl
   834e0:	465b      	mov	r3, fp
   834e2:	4620      	mov	r0, r4
   834e4:	f001 fd1e 	bl	84f24 <__d2b>
   834e8:	0d2b      	lsrs	r3, r5, #20
   834ea:	4681      	mov	r9, r0
   834ec:	d071      	beq.n	835d2 <_dtoa_r+0x1a2>
   834ee:	4650      	mov	r0, sl
   834f0:	f3cb 0213 	ubfx	r2, fp, #0, #20
   834f4:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   834f8:	9f18      	ldr	r7, [sp, #96]	; 0x60
   834fa:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   834fe:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   83502:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   83506:	2200      	movs	r2, #0
   83508:	4b77      	ldr	r3, [pc, #476]	; (836e8 <_dtoa_r+0x2b8>)
   8350a:	f002 f9e1 	bl	858d0 <__aeabi_dsub>
   8350e:	a36c      	add	r3, pc, #432	; (adr r3, 836c0 <_dtoa_r+0x290>)
   83510:	e9d3 2300 	ldrd	r2, r3, [r3]
   83514:	f002 fb90 	bl	85c38 <__aeabi_dmul>
   83518:	a36b      	add	r3, pc, #428	; (adr r3, 836c8 <_dtoa_r+0x298>)
   8351a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8351e:	f002 f9d9 	bl	858d4 <__adddf3>
   83522:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83526:	4630      	mov	r0, r6
   83528:	f002 fb20 	bl	85b6c <__aeabi_i2d>
   8352c:	a368      	add	r3, pc, #416	; (adr r3, 836d0 <_dtoa_r+0x2a0>)
   8352e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83532:	f002 fb81 	bl	85c38 <__aeabi_dmul>
   83536:	4602      	mov	r2, r0
   83538:	460b      	mov	r3, r1
   8353a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8353e:	f002 f9c9 	bl	858d4 <__adddf3>
   83542:	e9cd 0104 	strd	r0, r1, [sp, #16]
   83546:	f002 fe27 	bl	86198 <__aeabi_d2iz>
   8354a:	2200      	movs	r2, #0
   8354c:	9002      	str	r0, [sp, #8]
   8354e:	2300      	movs	r3, #0
   83550:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83554:	f002 fde2 	bl	8611c <__aeabi_dcmplt>
   83558:	2800      	cmp	r0, #0
   8355a:	f040 816d 	bne.w	83838 <_dtoa_r+0x408>
   8355e:	9d02      	ldr	r5, [sp, #8]
   83560:	2d16      	cmp	r5, #22
   83562:	f200 8157 	bhi.w	83814 <_dtoa_r+0x3e4>
   83566:	4961      	ldr	r1, [pc, #388]	; (836ec <_dtoa_r+0x2bc>)
   83568:	4652      	mov	r2, sl
   8356a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   8356e:	465b      	mov	r3, fp
   83570:	e9d1 0100 	ldrd	r0, r1, [r1]
   83574:	f002 fdf0 	bl	86158 <__aeabi_dcmpgt>
   83578:	2800      	cmp	r0, #0
   8357a:	f000 81be 	beq.w	838fa <_dtoa_r+0x4ca>
   8357e:	1e6b      	subs	r3, r5, #1
   83580:	9302      	str	r3, [sp, #8]
   83582:	2300      	movs	r3, #0
   83584:	930e      	str	r3, [sp, #56]	; 0x38
   83586:	1bbf      	subs	r7, r7, r6
   83588:	1e7b      	subs	r3, r7, #1
   8358a:	9308      	str	r3, [sp, #32]
   8358c:	f100 814e 	bmi.w	8382c <_dtoa_r+0x3fc>
   83590:	2300      	movs	r3, #0
   83592:	930a      	str	r3, [sp, #40]	; 0x28
   83594:	9b02      	ldr	r3, [sp, #8]
   83596:	2b00      	cmp	r3, #0
   83598:	f2c0 813f 	blt.w	8381a <_dtoa_r+0x3ea>
   8359c:	9a08      	ldr	r2, [sp, #32]
   8359e:	930d      	str	r3, [sp, #52]	; 0x34
   835a0:	4611      	mov	r1, r2
   835a2:	4419      	add	r1, r3
   835a4:	2300      	movs	r3, #0
   835a6:	9108      	str	r1, [sp, #32]
   835a8:	930c      	str	r3, [sp, #48]	; 0x30
   835aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
   835ac:	2b09      	cmp	r3, #9
   835ae:	d82a      	bhi.n	83606 <_dtoa_r+0x1d6>
   835b0:	2b05      	cmp	r3, #5
   835b2:	f340 8658 	ble.w	84266 <_dtoa_r+0xe36>
   835b6:	2500      	movs	r5, #0
   835b8:	3b04      	subs	r3, #4
   835ba:	9324      	str	r3, [sp, #144]	; 0x90
   835bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   835be:	3b02      	subs	r3, #2
   835c0:	2b03      	cmp	r3, #3
   835c2:	f200 863f 	bhi.w	84244 <_dtoa_r+0xe14>
   835c6:	e8df f013 	tbh	[pc, r3, lsl #1]
   835ca:	03ce      	.short	0x03ce
   835cc:	03d902c3 	.word	0x03d902c3
   835d0:	045b      	.short	0x045b
   835d2:	9f18      	ldr	r7, [sp, #96]	; 0x60
   835d4:	9e19      	ldr	r6, [sp, #100]	; 0x64
   835d6:	443e      	add	r6, r7
   835d8:	f206 4332 	addw	r3, r6, #1074	; 0x432
   835dc:	2b20      	cmp	r3, #32
   835de:	f340 8187 	ble.w	838f0 <_dtoa_r+0x4c0>
   835e2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   835e6:	f206 4012 	addw	r0, r6, #1042	; 0x412
   835ea:	409d      	lsls	r5, r3
   835ec:	fa2a f000 	lsr.w	r0, sl, r0
   835f0:	4328      	orrs	r0, r5
   835f2:	f002 faab 	bl	85b4c <__aeabi_ui2d>
   835f6:	2301      	movs	r3, #1
   835f8:	3e01      	subs	r6, #1
   835fa:	9314      	str	r3, [sp, #80]	; 0x50
   835fc:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   83600:	e781      	b.n	83506 <_dtoa_r+0xd6>
   83602:	483b      	ldr	r0, [pc, #236]	; (836f0 <_dtoa_r+0x2c0>)
   83604:	e743      	b.n	8348e <_dtoa_r+0x5e>
   83606:	2100      	movs	r1, #0
   83608:	4620      	mov	r0, r4
   8360a:	6461      	str	r1, [r4, #68]	; 0x44
   8360c:	9125      	str	r1, [sp, #148]	; 0x94
   8360e:	f001 f9e1 	bl	849d4 <_Balloc>
   83612:	f04f 33ff 	mov.w	r3, #4294967295
   83616:	9307      	str	r3, [sp, #28]
   83618:	930f      	str	r3, [sp, #60]	; 0x3c
   8361a:	2301      	movs	r3, #1
   8361c:	9a25      	ldr	r2, [sp, #148]	; 0x94
   8361e:	9004      	str	r0, [sp, #16]
   83620:	6420      	str	r0, [r4, #64]	; 0x40
   83622:	9224      	str	r2, [sp, #144]	; 0x90
   83624:	930b      	str	r3, [sp, #44]	; 0x2c
   83626:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83628:	2b00      	cmp	r3, #0
   8362a:	f2c0 80d3 	blt.w	837d4 <_dtoa_r+0x3a4>
   8362e:	9a02      	ldr	r2, [sp, #8]
   83630:	2a0e      	cmp	r2, #14
   83632:	f300 80cf 	bgt.w	837d4 <_dtoa_r+0x3a4>
   83636:	4b2d      	ldr	r3, [pc, #180]	; (836ec <_dtoa_r+0x2bc>)
   83638:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8363c:	e9d3 2300 	ldrd	r2, r3, [r3]
   83640:	e9cd 2308 	strd	r2, r3, [sp, #32]
   83644:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83646:	2b00      	cmp	r3, #0
   83648:	f2c0 83b4 	blt.w	83db4 <_dtoa_r+0x984>
   8364c:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   83650:	4650      	mov	r0, sl
   83652:	462a      	mov	r2, r5
   83654:	4633      	mov	r3, r6
   83656:	4659      	mov	r1, fp
   83658:	f002 fc18 	bl	85e8c <__aeabi_ddiv>
   8365c:	f002 fd9c 	bl	86198 <__aeabi_d2iz>
   83660:	4680      	mov	r8, r0
   83662:	f002 fa83 	bl	85b6c <__aeabi_i2d>
   83666:	462a      	mov	r2, r5
   83668:	4633      	mov	r3, r6
   8366a:	f002 fae5 	bl	85c38 <__aeabi_dmul>
   8366e:	4602      	mov	r2, r0
   83670:	460b      	mov	r3, r1
   83672:	4650      	mov	r0, sl
   83674:	4659      	mov	r1, fp
   83676:	f002 f92b 	bl	858d0 <__aeabi_dsub>
   8367a:	9e07      	ldr	r6, [sp, #28]
   8367c:	9f04      	ldr	r7, [sp, #16]
   8367e:	f108 0530 	add.w	r5, r8, #48	; 0x30
   83682:	2e01      	cmp	r6, #1
   83684:	703d      	strb	r5, [r7, #0]
   83686:	4602      	mov	r2, r0
   83688:	460b      	mov	r3, r1
   8368a:	f107 0501 	add.w	r5, r7, #1
   8368e:	d064      	beq.n	8375a <_dtoa_r+0x32a>
   83690:	2200      	movs	r2, #0
   83692:	4b18      	ldr	r3, [pc, #96]	; (836f4 <_dtoa_r+0x2c4>)
   83694:	f002 fad0 	bl	85c38 <__aeabi_dmul>
   83698:	2200      	movs	r2, #0
   8369a:	2300      	movs	r3, #0
   8369c:	4606      	mov	r6, r0
   8369e:	460f      	mov	r7, r1
   836a0:	f002 fd32 	bl	86108 <__aeabi_dcmpeq>
   836a4:	2800      	cmp	r0, #0
   836a6:	f040 8082 	bne.w	837ae <_dtoa_r+0x37e>
   836aa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   836ae:	f04f 0a00 	mov.w	sl, #0
   836b2:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   836b6:	f04f 0b00 	mov.w	fp, #0
   836ba:	940b      	str	r4, [sp, #44]	; 0x2c
   836bc:	e029      	b.n	83712 <_dtoa_r+0x2e2>
   836be:	bf00      	nop
   836c0:	636f4361 	.word	0x636f4361
   836c4:	3fd287a7 	.word	0x3fd287a7
   836c8:	8b60c8b3 	.word	0x8b60c8b3
   836cc:	3fc68a28 	.word	0x3fc68a28
   836d0:	509f79fb 	.word	0x509f79fb
   836d4:	3fd34413 	.word	0x3fd34413
   836d8:	7ff00000 	.word	0x7ff00000
   836dc:	00086725 	.word	0x00086725
   836e0:	00086748 	.word	0x00086748
   836e4:	00086754 	.word	0x00086754
   836e8:	3ff80000 	.word	0x3ff80000
   836ec:	00086790 	.word	0x00086790
   836f0:	00086724 	.word	0x00086724
   836f4:	40240000 	.word	0x40240000
   836f8:	2200      	movs	r2, #0
   836fa:	4b81      	ldr	r3, [pc, #516]	; (83900 <_dtoa_r+0x4d0>)
   836fc:	f002 fa9c 	bl	85c38 <__aeabi_dmul>
   83700:	4652      	mov	r2, sl
   83702:	465b      	mov	r3, fp
   83704:	4606      	mov	r6, r0
   83706:	460f      	mov	r7, r1
   83708:	f002 fcfe 	bl	86108 <__aeabi_dcmpeq>
   8370c:	2800      	cmp	r0, #0
   8370e:	f040 83ba 	bne.w	83e86 <_dtoa_r+0xa56>
   83712:	4642      	mov	r2, r8
   83714:	464b      	mov	r3, r9
   83716:	4630      	mov	r0, r6
   83718:	4639      	mov	r1, r7
   8371a:	f002 fbb7 	bl	85e8c <__aeabi_ddiv>
   8371e:	f002 fd3b 	bl	86198 <__aeabi_d2iz>
   83722:	4604      	mov	r4, r0
   83724:	f002 fa22 	bl	85b6c <__aeabi_i2d>
   83728:	4642      	mov	r2, r8
   8372a:	464b      	mov	r3, r9
   8372c:	f002 fa84 	bl	85c38 <__aeabi_dmul>
   83730:	4602      	mov	r2, r0
   83732:	460b      	mov	r3, r1
   83734:	4630      	mov	r0, r6
   83736:	4639      	mov	r1, r7
   83738:	f002 f8ca 	bl	858d0 <__aeabi_dsub>
   8373c:	f104 0630 	add.w	r6, r4, #48	; 0x30
   83740:	f805 6b01 	strb.w	r6, [r5], #1
   83744:	9e04      	ldr	r6, [sp, #16]
   83746:	9f07      	ldr	r7, [sp, #28]
   83748:	1bae      	subs	r6, r5, r6
   8374a:	42be      	cmp	r6, r7
   8374c:	4602      	mov	r2, r0
   8374e:	460b      	mov	r3, r1
   83750:	d1d2      	bne.n	836f8 <_dtoa_r+0x2c8>
   83752:	46a0      	mov	r8, r4
   83754:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83758:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8375a:	4610      	mov	r0, r2
   8375c:	4619      	mov	r1, r3
   8375e:	f002 f8b9 	bl	858d4 <__adddf3>
   83762:	4606      	mov	r6, r0
   83764:	460f      	mov	r7, r1
   83766:	4602      	mov	r2, r0
   83768:	460b      	mov	r3, r1
   8376a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   8376e:	f002 fcd5 	bl	8611c <__aeabi_dcmplt>
   83772:	b948      	cbnz	r0, 83788 <_dtoa_r+0x358>
   83774:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83778:	4632      	mov	r2, r6
   8377a:	463b      	mov	r3, r7
   8377c:	f002 fcc4 	bl	86108 <__aeabi_dcmpeq>
   83780:	b1a8      	cbz	r0, 837ae <_dtoa_r+0x37e>
   83782:	f018 0f01 	tst.w	r8, #1
   83786:	d012      	beq.n	837ae <_dtoa_r+0x37e>
   83788:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   8378c:	1e6b      	subs	r3, r5, #1
   8378e:	9a04      	ldr	r2, [sp, #16]
   83790:	e004      	b.n	8379c <_dtoa_r+0x36c>
   83792:	429a      	cmp	r2, r3
   83794:	f000 8402 	beq.w	83f9c <_dtoa_r+0xb6c>
   83798:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   8379c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   837a0:	f103 0501 	add.w	r5, r3, #1
   837a4:	d0f5      	beq.n	83792 <_dtoa_r+0x362>
   837a6:	f108 0801 	add.w	r8, r8, #1
   837aa:	f883 8000 	strb.w	r8, [r3]
   837ae:	4649      	mov	r1, r9
   837b0:	4620      	mov	r0, r4
   837b2:	f001 f935 	bl	84a20 <_Bfree>
   837b6:	2200      	movs	r2, #0
   837b8:	9b02      	ldr	r3, [sp, #8]
   837ba:	702a      	strb	r2, [r5, #0]
   837bc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   837be:	3301      	adds	r3, #1
   837c0:	6013      	str	r3, [r2, #0]
   837c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   837c4:	2b00      	cmp	r3, #0
   837c6:	f000 839f 	beq.w	83f08 <_dtoa_r+0xad8>
   837ca:	9804      	ldr	r0, [sp, #16]
   837cc:	601d      	str	r5, [r3, #0]
   837ce:	b01b      	add	sp, #108	; 0x6c
   837d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   837d6:	2a00      	cmp	r2, #0
   837d8:	d03e      	beq.n	83858 <_dtoa_r+0x428>
   837da:	9a24      	ldr	r2, [sp, #144]	; 0x90
   837dc:	2a01      	cmp	r2, #1
   837de:	f340 8311 	ble.w	83e04 <_dtoa_r+0x9d4>
   837e2:	9b07      	ldr	r3, [sp, #28]
   837e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   837e6:	1e5f      	subs	r7, r3, #1
   837e8:	42ba      	cmp	r2, r7
   837ea:	f2c0 8390 	blt.w	83f0e <_dtoa_r+0xade>
   837ee:	1bd7      	subs	r7, r2, r7
   837f0:	9b07      	ldr	r3, [sp, #28]
   837f2:	2b00      	cmp	r3, #0
   837f4:	f2c0 848c 	blt.w	84110 <_dtoa_r+0xce0>
   837f8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   837fa:	9b07      	ldr	r3, [sp, #28]
   837fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   837fe:	2101      	movs	r1, #1
   83800:	441a      	add	r2, r3
   83802:	920a      	str	r2, [sp, #40]	; 0x28
   83804:	9a08      	ldr	r2, [sp, #32]
   83806:	4620      	mov	r0, r4
   83808:	441a      	add	r2, r3
   8380a:	9208      	str	r2, [sp, #32]
   8380c:	f001 f9a4 	bl	84b58 <__i2b>
   83810:	4606      	mov	r6, r0
   83812:	e023      	b.n	8385c <_dtoa_r+0x42c>
   83814:	2301      	movs	r3, #1
   83816:	930e      	str	r3, [sp, #56]	; 0x38
   83818:	e6b5      	b.n	83586 <_dtoa_r+0x156>
   8381a:	2300      	movs	r3, #0
   8381c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8381e:	930d      	str	r3, [sp, #52]	; 0x34
   83820:	9b02      	ldr	r3, [sp, #8]
   83822:	1ad2      	subs	r2, r2, r3
   83824:	425b      	negs	r3, r3
   83826:	920a      	str	r2, [sp, #40]	; 0x28
   83828:	930c      	str	r3, [sp, #48]	; 0x30
   8382a:	e6be      	b.n	835aa <_dtoa_r+0x17a>
   8382c:	f1c7 0301 	rsb	r3, r7, #1
   83830:	930a      	str	r3, [sp, #40]	; 0x28
   83832:	2300      	movs	r3, #0
   83834:	9308      	str	r3, [sp, #32]
   83836:	e6ad      	b.n	83594 <_dtoa_r+0x164>
   83838:	9d02      	ldr	r5, [sp, #8]
   8383a:	4628      	mov	r0, r5
   8383c:	f002 f996 	bl	85b6c <__aeabi_i2d>
   83840:	4602      	mov	r2, r0
   83842:	460b      	mov	r3, r1
   83844:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83848:	f002 fc5e 	bl	86108 <__aeabi_dcmpeq>
   8384c:	2800      	cmp	r0, #0
   8384e:	f47f ae86 	bne.w	8355e <_dtoa_r+0x12e>
   83852:	1e6b      	subs	r3, r5, #1
   83854:	9302      	str	r3, [sp, #8]
   83856:	e682      	b.n	8355e <_dtoa_r+0x12e>
   83858:	ad0a      	add	r5, sp, #40	; 0x28
   8385a:	cde0      	ldmia	r5, {r5, r6, r7}
   8385c:	2d00      	cmp	r5, #0
   8385e:	dd0c      	ble.n	8387a <_dtoa_r+0x44a>
   83860:	9908      	ldr	r1, [sp, #32]
   83862:	2900      	cmp	r1, #0
   83864:	460b      	mov	r3, r1
   83866:	dd08      	ble.n	8387a <_dtoa_r+0x44a>
   83868:	42a9      	cmp	r1, r5
   8386a:	bfa8      	it	ge
   8386c:	462b      	movge	r3, r5
   8386e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83870:	1aed      	subs	r5, r5, r3
   83872:	1ad2      	subs	r2, r2, r3
   83874:	1acb      	subs	r3, r1, r3
   83876:	920a      	str	r2, [sp, #40]	; 0x28
   83878:	9308      	str	r3, [sp, #32]
   8387a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8387c:	b1d3      	cbz	r3, 838b4 <_dtoa_r+0x484>
   8387e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83880:	2b00      	cmp	r3, #0
   83882:	f000 82b8 	beq.w	83df6 <_dtoa_r+0x9c6>
   83886:	2f00      	cmp	r7, #0
   83888:	dd10      	ble.n	838ac <_dtoa_r+0x47c>
   8388a:	4631      	mov	r1, r6
   8388c:	463a      	mov	r2, r7
   8388e:	4620      	mov	r0, r4
   83890:	f001 f9fe 	bl	84c90 <__pow5mult>
   83894:	464a      	mov	r2, r9
   83896:	4601      	mov	r1, r0
   83898:	4606      	mov	r6, r0
   8389a:	4620      	mov	r0, r4
   8389c:	f001 f966 	bl	84b6c <__multiply>
   838a0:	4603      	mov	r3, r0
   838a2:	4649      	mov	r1, r9
   838a4:	4620      	mov	r0, r4
   838a6:	4699      	mov	r9, r3
   838a8:	f001 f8ba 	bl	84a20 <_Bfree>
   838ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   838ae:	1bda      	subs	r2, r3, r7
   838b0:	f040 82a2 	bne.w	83df8 <_dtoa_r+0x9c8>
   838b4:	2101      	movs	r1, #1
   838b6:	4620      	mov	r0, r4
   838b8:	f001 f94e 	bl	84b58 <__i2b>
   838bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   838be:	4680      	mov	r8, r0
   838c0:	2b00      	cmp	r3, #0
   838c2:	dd1f      	ble.n	83904 <_dtoa_r+0x4d4>
   838c4:	4601      	mov	r1, r0
   838c6:	461a      	mov	r2, r3
   838c8:	4620      	mov	r0, r4
   838ca:	f001 f9e1 	bl	84c90 <__pow5mult>
   838ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
   838d0:	4680      	mov	r8, r0
   838d2:	2b01      	cmp	r3, #1
   838d4:	f340 8255 	ble.w	83d82 <_dtoa_r+0x952>
   838d8:	2300      	movs	r3, #0
   838da:	930c      	str	r3, [sp, #48]	; 0x30
   838dc:	f8d8 3010 	ldr.w	r3, [r8, #16]
   838e0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   838e4:	6918      	ldr	r0, [r3, #16]
   838e6:	f001 f8e7 	bl	84ab8 <__hi0bits>
   838ea:	f1c0 0020 	rsb	r0, r0, #32
   838ee:	e013      	b.n	83918 <_dtoa_r+0x4e8>
   838f0:	f1c3 0520 	rsb	r5, r3, #32
   838f4:	fa0a f005 	lsl.w	r0, sl, r5
   838f8:	e67b      	b.n	835f2 <_dtoa_r+0x1c2>
   838fa:	900e      	str	r0, [sp, #56]	; 0x38
   838fc:	e643      	b.n	83586 <_dtoa_r+0x156>
   838fe:	bf00      	nop
   83900:	40240000 	.word	0x40240000
   83904:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83906:	2b01      	cmp	r3, #1
   83908:	f340 8285 	ble.w	83e16 <_dtoa_r+0x9e6>
   8390c:	2300      	movs	r3, #0
   8390e:	930c      	str	r3, [sp, #48]	; 0x30
   83910:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83912:	2001      	movs	r0, #1
   83914:	2b00      	cmp	r3, #0
   83916:	d1e1      	bne.n	838dc <_dtoa_r+0x4ac>
   83918:	9a08      	ldr	r2, [sp, #32]
   8391a:	4410      	add	r0, r2
   8391c:	f010 001f 	ands.w	r0, r0, #31
   83920:	f000 80a1 	beq.w	83a66 <_dtoa_r+0x636>
   83924:	f1c0 0320 	rsb	r3, r0, #32
   83928:	2b04      	cmp	r3, #4
   8392a:	f340 8486 	ble.w	8423a <_dtoa_r+0xe0a>
   8392e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83930:	f1c0 001c 	rsb	r0, r0, #28
   83934:	4403      	add	r3, r0
   83936:	930a      	str	r3, [sp, #40]	; 0x28
   83938:	4613      	mov	r3, r2
   8393a:	4403      	add	r3, r0
   8393c:	4405      	add	r5, r0
   8393e:	9308      	str	r3, [sp, #32]
   83940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83942:	2b00      	cmp	r3, #0
   83944:	dd05      	ble.n	83952 <_dtoa_r+0x522>
   83946:	4649      	mov	r1, r9
   83948:	461a      	mov	r2, r3
   8394a:	4620      	mov	r0, r4
   8394c:	f001 f9f0 	bl	84d30 <__lshift>
   83950:	4681      	mov	r9, r0
   83952:	9b08      	ldr	r3, [sp, #32]
   83954:	2b00      	cmp	r3, #0
   83956:	dd05      	ble.n	83964 <_dtoa_r+0x534>
   83958:	4641      	mov	r1, r8
   8395a:	461a      	mov	r2, r3
   8395c:	4620      	mov	r0, r4
   8395e:	f001 f9e7 	bl	84d30 <__lshift>
   83962:	4680      	mov	r8, r0
   83964:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83966:	2b00      	cmp	r3, #0
   83968:	f040 8086 	bne.w	83a78 <_dtoa_r+0x648>
   8396c:	9b07      	ldr	r3, [sp, #28]
   8396e:	2b00      	cmp	r3, #0
   83970:	f340 8264 	ble.w	83e3c <_dtoa_r+0xa0c>
   83974:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83976:	2b00      	cmp	r3, #0
   83978:	f000 8098 	beq.w	83aac <_dtoa_r+0x67c>
   8397c:	2d00      	cmp	r5, #0
   8397e:	dd05      	ble.n	8398c <_dtoa_r+0x55c>
   83980:	4631      	mov	r1, r6
   83982:	462a      	mov	r2, r5
   83984:	4620      	mov	r0, r4
   83986:	f001 f9d3 	bl	84d30 <__lshift>
   8398a:	4606      	mov	r6, r0
   8398c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8398e:	2b00      	cmp	r3, #0
   83990:	f040 8336 	bne.w	84000 <_dtoa_r+0xbd0>
   83994:	9608      	str	r6, [sp, #32]
   83996:	9b07      	ldr	r3, [sp, #28]
   83998:	9a04      	ldr	r2, [sp, #16]
   8399a:	3b01      	subs	r3, #1
   8399c:	18d3      	adds	r3, r2, r3
   8399e:	930b      	str	r3, [sp, #44]	; 0x2c
   839a0:	4617      	mov	r7, r2
   839a2:	f00a 0301 	and.w	r3, sl, #1
   839a6:	46c2      	mov	sl, r8
   839a8:	f8dd b020 	ldr.w	fp, [sp, #32]
   839ac:	930c      	str	r3, [sp, #48]	; 0x30
   839ae:	4651      	mov	r1, sl
   839b0:	4648      	mov	r0, r9
   839b2:	f7ff fca9 	bl	83308 <quorem>
   839b6:	4631      	mov	r1, r6
   839b8:	4605      	mov	r5, r0
   839ba:	4648      	mov	r0, r9
   839bc:	f001 fa08 	bl	84dd0 <__mcmp>
   839c0:	465a      	mov	r2, fp
   839c2:	9007      	str	r0, [sp, #28]
   839c4:	4651      	mov	r1, sl
   839c6:	4620      	mov	r0, r4
   839c8:	f001 fa1e 	bl	84e08 <__mdiff>
   839cc:	68c2      	ldr	r2, [r0, #12]
   839ce:	4680      	mov	r8, r0
   839d0:	f105 0330 	add.w	r3, r5, #48	; 0x30
   839d4:	2a00      	cmp	r2, #0
   839d6:	f040 8229 	bne.w	83e2c <_dtoa_r+0x9fc>
   839da:	4601      	mov	r1, r0
   839dc:	4648      	mov	r0, r9
   839de:	930a      	str	r3, [sp, #40]	; 0x28
   839e0:	f001 f9f6 	bl	84dd0 <__mcmp>
   839e4:	4641      	mov	r1, r8
   839e6:	9008      	str	r0, [sp, #32]
   839e8:	4620      	mov	r0, r4
   839ea:	f001 f819 	bl	84a20 <_Bfree>
   839ee:	9a08      	ldr	r2, [sp, #32]
   839f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   839f2:	b932      	cbnz	r2, 83a02 <_dtoa_r+0x5d2>
   839f4:	9924      	ldr	r1, [sp, #144]	; 0x90
   839f6:	b921      	cbnz	r1, 83a02 <_dtoa_r+0x5d2>
   839f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   839fa:	2a00      	cmp	r2, #0
   839fc:	f000 83ee 	beq.w	841dc <_dtoa_r+0xdac>
   83a00:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83a02:	9907      	ldr	r1, [sp, #28]
   83a04:	2900      	cmp	r1, #0
   83a06:	f2c0 829f 	blt.w	83f48 <_dtoa_r+0xb18>
   83a0a:	d105      	bne.n	83a18 <_dtoa_r+0x5e8>
   83a0c:	9924      	ldr	r1, [sp, #144]	; 0x90
   83a0e:	b919      	cbnz	r1, 83a18 <_dtoa_r+0x5e8>
   83a10:	990c      	ldr	r1, [sp, #48]	; 0x30
   83a12:	2900      	cmp	r1, #0
   83a14:	f000 8298 	beq.w	83f48 <_dtoa_r+0xb18>
   83a18:	2a00      	cmp	r2, #0
   83a1a:	f300 8305 	bgt.w	84028 <_dtoa_r+0xbf8>
   83a1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a20:	f107 0801 	add.w	r8, r7, #1
   83a24:	4297      	cmp	r7, r2
   83a26:	703b      	strb	r3, [r7, #0]
   83a28:	4645      	mov	r5, r8
   83a2a:	f000 830b 	beq.w	84044 <_dtoa_r+0xc14>
   83a2e:	4649      	mov	r1, r9
   83a30:	2300      	movs	r3, #0
   83a32:	220a      	movs	r2, #10
   83a34:	4620      	mov	r0, r4
   83a36:	f000 fffd 	bl	84a34 <__multadd>
   83a3a:	455e      	cmp	r6, fp
   83a3c:	4681      	mov	r9, r0
   83a3e:	4631      	mov	r1, r6
   83a40:	f04f 0300 	mov.w	r3, #0
   83a44:	f04f 020a 	mov.w	r2, #10
   83a48:	4620      	mov	r0, r4
   83a4a:	f000 81e9 	beq.w	83e20 <_dtoa_r+0x9f0>
   83a4e:	f000 fff1 	bl	84a34 <__multadd>
   83a52:	4659      	mov	r1, fp
   83a54:	4606      	mov	r6, r0
   83a56:	2300      	movs	r3, #0
   83a58:	220a      	movs	r2, #10
   83a5a:	4620      	mov	r0, r4
   83a5c:	f000 ffea 	bl	84a34 <__multadd>
   83a60:	4647      	mov	r7, r8
   83a62:	4683      	mov	fp, r0
   83a64:	e7a3      	b.n	839ae <_dtoa_r+0x57e>
   83a66:	201c      	movs	r0, #28
   83a68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83a6a:	4405      	add	r5, r0
   83a6c:	4403      	add	r3, r0
   83a6e:	930a      	str	r3, [sp, #40]	; 0x28
   83a70:	9b08      	ldr	r3, [sp, #32]
   83a72:	4403      	add	r3, r0
   83a74:	9308      	str	r3, [sp, #32]
   83a76:	e763      	b.n	83940 <_dtoa_r+0x510>
   83a78:	4641      	mov	r1, r8
   83a7a:	4648      	mov	r0, r9
   83a7c:	f001 f9a8 	bl	84dd0 <__mcmp>
   83a80:	2800      	cmp	r0, #0
   83a82:	f6bf af73 	bge.w	8396c <_dtoa_r+0x53c>
   83a86:	9f02      	ldr	r7, [sp, #8]
   83a88:	4649      	mov	r1, r9
   83a8a:	2300      	movs	r3, #0
   83a8c:	220a      	movs	r2, #10
   83a8e:	4620      	mov	r0, r4
   83a90:	3f01      	subs	r7, #1
   83a92:	9702      	str	r7, [sp, #8]
   83a94:	f000 ffce 	bl	84a34 <__multadd>
   83a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83a9a:	4681      	mov	r9, r0
   83a9c:	2b00      	cmp	r3, #0
   83a9e:	f040 83b5 	bne.w	8420c <_dtoa_r+0xddc>
   83aa2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83aa4:	2b00      	cmp	r3, #0
   83aa6:	f340 83be 	ble.w	84226 <_dtoa_r+0xdf6>
   83aaa:	9307      	str	r3, [sp, #28]
   83aac:	f8dd a010 	ldr.w	sl, [sp, #16]
   83ab0:	9f07      	ldr	r7, [sp, #28]
   83ab2:	4655      	mov	r5, sl
   83ab4:	e006      	b.n	83ac4 <_dtoa_r+0x694>
   83ab6:	4649      	mov	r1, r9
   83ab8:	2300      	movs	r3, #0
   83aba:	220a      	movs	r2, #10
   83abc:	4620      	mov	r0, r4
   83abe:	f000 ffb9 	bl	84a34 <__multadd>
   83ac2:	4681      	mov	r9, r0
   83ac4:	4641      	mov	r1, r8
   83ac6:	4648      	mov	r0, r9
   83ac8:	f7ff fc1e 	bl	83308 <quorem>
   83acc:	3030      	adds	r0, #48	; 0x30
   83ace:	f805 0b01 	strb.w	r0, [r5], #1
   83ad2:	eba5 030a 	sub.w	r3, r5, sl
   83ad6:	42bb      	cmp	r3, r7
   83ad8:	dbed      	blt.n	83ab6 <_dtoa_r+0x686>
   83ada:	9b04      	ldr	r3, [sp, #16]
   83adc:	9a07      	ldr	r2, [sp, #28]
   83ade:	4682      	mov	sl, r0
   83ae0:	2a01      	cmp	r2, #1
   83ae2:	bfac      	ite	ge
   83ae4:	189b      	addge	r3, r3, r2
   83ae6:	3301      	addlt	r3, #1
   83ae8:	f04f 0b00 	mov.w	fp, #0
   83aec:	461d      	mov	r5, r3
   83aee:	4649      	mov	r1, r9
   83af0:	2201      	movs	r2, #1
   83af2:	4620      	mov	r0, r4
   83af4:	f001 f91c 	bl	84d30 <__lshift>
   83af8:	4641      	mov	r1, r8
   83afa:	4681      	mov	r9, r0
   83afc:	f001 f968 	bl	84dd0 <__mcmp>
   83b00:	2800      	cmp	r0, #0
   83b02:	f340 823f 	ble.w	83f84 <_dtoa_r+0xb54>
   83b06:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   83b0a:	1e6b      	subs	r3, r5, #1
   83b0c:	9904      	ldr	r1, [sp, #16]
   83b0e:	e004      	b.n	83b1a <_dtoa_r+0x6ea>
   83b10:	428b      	cmp	r3, r1
   83b12:	f000 81ae 	beq.w	83e72 <_dtoa_r+0xa42>
   83b16:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   83b1a:	2a39      	cmp	r2, #57	; 0x39
   83b1c:	f103 0501 	add.w	r5, r3, #1
   83b20:	d0f6      	beq.n	83b10 <_dtoa_r+0x6e0>
   83b22:	3201      	adds	r2, #1
   83b24:	701a      	strb	r2, [r3, #0]
   83b26:	4641      	mov	r1, r8
   83b28:	4620      	mov	r0, r4
   83b2a:	f000 ff79 	bl	84a20 <_Bfree>
   83b2e:	2e00      	cmp	r6, #0
   83b30:	f43f ae3d 	beq.w	837ae <_dtoa_r+0x37e>
   83b34:	f1bb 0f00 	cmp.w	fp, #0
   83b38:	d005      	beq.n	83b46 <_dtoa_r+0x716>
   83b3a:	45b3      	cmp	fp, r6
   83b3c:	d003      	beq.n	83b46 <_dtoa_r+0x716>
   83b3e:	4659      	mov	r1, fp
   83b40:	4620      	mov	r0, r4
   83b42:	f000 ff6d 	bl	84a20 <_Bfree>
   83b46:	4631      	mov	r1, r6
   83b48:	4620      	mov	r0, r4
   83b4a:	f000 ff69 	bl	84a20 <_Bfree>
   83b4e:	e62e      	b.n	837ae <_dtoa_r+0x37e>
   83b50:	2300      	movs	r3, #0
   83b52:	930b      	str	r3, [sp, #44]	; 0x2c
   83b54:	9b02      	ldr	r3, [sp, #8]
   83b56:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83b58:	4413      	add	r3, r2
   83b5a:	930f      	str	r3, [sp, #60]	; 0x3c
   83b5c:	3301      	adds	r3, #1
   83b5e:	2b01      	cmp	r3, #1
   83b60:	461f      	mov	r7, r3
   83b62:	461e      	mov	r6, r3
   83b64:	bfb8      	it	lt
   83b66:	2701      	movlt	r7, #1
   83b68:	9307      	str	r3, [sp, #28]
   83b6a:	2100      	movs	r1, #0
   83b6c:	2f17      	cmp	r7, #23
   83b6e:	6461      	str	r1, [r4, #68]	; 0x44
   83b70:	d90a      	bls.n	83b88 <_dtoa_r+0x758>
   83b72:	2201      	movs	r2, #1
   83b74:	2304      	movs	r3, #4
   83b76:	005b      	lsls	r3, r3, #1
   83b78:	f103 0014 	add.w	r0, r3, #20
   83b7c:	4287      	cmp	r7, r0
   83b7e:	4611      	mov	r1, r2
   83b80:	f102 0201 	add.w	r2, r2, #1
   83b84:	d2f7      	bcs.n	83b76 <_dtoa_r+0x746>
   83b86:	6461      	str	r1, [r4, #68]	; 0x44
   83b88:	4620      	mov	r0, r4
   83b8a:	f000 ff23 	bl	849d4 <_Balloc>
   83b8e:	2e0e      	cmp	r6, #14
   83b90:	9004      	str	r0, [sp, #16]
   83b92:	6420      	str	r0, [r4, #64]	; 0x40
   83b94:	f63f ad47 	bhi.w	83626 <_dtoa_r+0x1f6>
   83b98:	2d00      	cmp	r5, #0
   83b9a:	f43f ad44 	beq.w	83626 <_dtoa_r+0x1f6>
   83b9e:	9902      	ldr	r1, [sp, #8]
   83ba0:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   83ba4:	2900      	cmp	r1, #0
   83ba6:	f340 8203 	ble.w	83fb0 <_dtoa_r+0xb80>
   83baa:	4bb9      	ldr	r3, [pc, #740]	; (83e90 <_dtoa_r+0xa60>)
   83bac:	f001 020f 	and.w	r2, r1, #15
   83bb0:	110d      	asrs	r5, r1, #4
   83bb2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83bb6:	06e9      	lsls	r1, r5, #27
   83bb8:	e9d3 6700 	ldrd	r6, r7, [r3]
   83bbc:	f140 81af 	bpl.w	83f1e <_dtoa_r+0xaee>
   83bc0:	4bb4      	ldr	r3, [pc, #720]	; (83e94 <_dtoa_r+0xa64>)
   83bc2:	4650      	mov	r0, sl
   83bc4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83bc8:	4659      	mov	r1, fp
   83bca:	f002 f95f 	bl	85e8c <__aeabi_ddiv>
   83bce:	f04f 0a03 	mov.w	sl, #3
   83bd2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   83bd6:	f005 050f 	and.w	r5, r5, #15
   83bda:	b18d      	cbz	r5, 83c00 <_dtoa_r+0x7d0>
   83bdc:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 83e94 <_dtoa_r+0xa64>
   83be0:	07ea      	lsls	r2, r5, #31
   83be2:	d509      	bpl.n	83bf8 <_dtoa_r+0x7c8>
   83be4:	e9d8 2300 	ldrd	r2, r3, [r8]
   83be8:	4630      	mov	r0, r6
   83bea:	4639      	mov	r1, r7
   83bec:	f002 f824 	bl	85c38 <__aeabi_dmul>
   83bf0:	4606      	mov	r6, r0
   83bf2:	460f      	mov	r7, r1
   83bf4:	f10a 0a01 	add.w	sl, sl, #1
   83bf8:	106d      	asrs	r5, r5, #1
   83bfa:	f108 0808 	add.w	r8, r8, #8
   83bfe:	d1ef      	bne.n	83be0 <_dtoa_r+0x7b0>
   83c00:	463b      	mov	r3, r7
   83c02:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   83c06:	4632      	mov	r2, r6
   83c08:	f002 f940 	bl	85e8c <__aeabi_ddiv>
   83c0c:	4607      	mov	r7, r0
   83c0e:	4688      	mov	r8, r1
   83c10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83c12:	b143      	cbz	r3, 83c26 <_dtoa_r+0x7f6>
   83c14:	2200      	movs	r2, #0
   83c16:	4ba0      	ldr	r3, [pc, #640]	; (83e98 <_dtoa_r+0xa68>)
   83c18:	4638      	mov	r0, r7
   83c1a:	4641      	mov	r1, r8
   83c1c:	f002 fa7e 	bl	8611c <__aeabi_dcmplt>
   83c20:	2800      	cmp	r0, #0
   83c22:	f040 8287 	bne.w	84134 <_dtoa_r+0xd04>
   83c26:	4650      	mov	r0, sl
   83c28:	f001 ffa0 	bl	85b6c <__aeabi_i2d>
   83c2c:	463a      	mov	r2, r7
   83c2e:	4643      	mov	r3, r8
   83c30:	f002 f802 	bl	85c38 <__aeabi_dmul>
   83c34:	4b99      	ldr	r3, [pc, #612]	; (83e9c <_dtoa_r+0xa6c>)
   83c36:	2200      	movs	r2, #0
   83c38:	f001 fe4c 	bl	858d4 <__adddf3>
   83c3c:	9b07      	ldr	r3, [sp, #28]
   83c3e:	4605      	mov	r5, r0
   83c40:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83c44:	2b00      	cmp	r3, #0
   83c46:	f000 813f 	beq.w	83ec8 <_dtoa_r+0xa98>
   83c4a:	9b02      	ldr	r3, [sp, #8]
   83c4c:	9315      	str	r3, [sp, #84]	; 0x54
   83c4e:	9b07      	ldr	r3, [sp, #28]
   83c50:	9312      	str	r3, [sp, #72]	; 0x48
   83c52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83c54:	2b00      	cmp	r3, #0
   83c56:	f000 81fb 	beq.w	84050 <_dtoa_r+0xc20>
   83c5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83c5c:	4b8c      	ldr	r3, [pc, #560]	; (83e90 <_dtoa_r+0xa60>)
   83c5e:	2000      	movs	r0, #0
   83c60:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83c64:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83c68:	498d      	ldr	r1, [pc, #564]	; (83ea0 <_dtoa_r+0xa70>)
   83c6a:	f002 f90f 	bl	85e8c <__aeabi_ddiv>
   83c6e:	462a      	mov	r2, r5
   83c70:	4633      	mov	r3, r6
   83c72:	f001 fe2d 	bl	858d0 <__aeabi_dsub>
   83c76:	4682      	mov	sl, r0
   83c78:	468b      	mov	fp, r1
   83c7a:	4638      	mov	r0, r7
   83c7c:	4641      	mov	r1, r8
   83c7e:	f002 fa8b 	bl	86198 <__aeabi_d2iz>
   83c82:	4605      	mov	r5, r0
   83c84:	f001 ff72 	bl	85b6c <__aeabi_i2d>
   83c88:	4602      	mov	r2, r0
   83c8a:	460b      	mov	r3, r1
   83c8c:	4638      	mov	r0, r7
   83c8e:	4641      	mov	r1, r8
   83c90:	f001 fe1e 	bl	858d0 <__aeabi_dsub>
   83c94:	3530      	adds	r5, #48	; 0x30
   83c96:	fa5f f885 	uxtb.w	r8, r5
   83c9a:	9d04      	ldr	r5, [sp, #16]
   83c9c:	4606      	mov	r6, r0
   83c9e:	460f      	mov	r7, r1
   83ca0:	f885 8000 	strb.w	r8, [r5]
   83ca4:	4602      	mov	r2, r0
   83ca6:	460b      	mov	r3, r1
   83ca8:	4650      	mov	r0, sl
   83caa:	4659      	mov	r1, fp
   83cac:	3501      	adds	r5, #1
   83cae:	f002 fa53 	bl	86158 <__aeabi_dcmpgt>
   83cb2:	2800      	cmp	r0, #0
   83cb4:	d154      	bne.n	83d60 <_dtoa_r+0x930>
   83cb6:	4632      	mov	r2, r6
   83cb8:	463b      	mov	r3, r7
   83cba:	2000      	movs	r0, #0
   83cbc:	4976      	ldr	r1, [pc, #472]	; (83e98 <_dtoa_r+0xa68>)
   83cbe:	f001 fe07 	bl	858d0 <__aeabi_dsub>
   83cc2:	4602      	mov	r2, r0
   83cc4:	460b      	mov	r3, r1
   83cc6:	4650      	mov	r0, sl
   83cc8:	4659      	mov	r1, fp
   83cca:	f002 fa45 	bl	86158 <__aeabi_dcmpgt>
   83cce:	2800      	cmp	r0, #0
   83cd0:	f040 8270 	bne.w	841b4 <_dtoa_r+0xd84>
   83cd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83cd6:	2a01      	cmp	r2, #1
   83cd8:	f000 8112 	beq.w	83f00 <_dtoa_r+0xad0>
   83cdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83cde:	9a04      	ldr	r2, [sp, #16]
   83ce0:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83ce4:	4413      	add	r3, r2
   83ce6:	4699      	mov	r9, r3
   83ce8:	e00f      	b.n	83d0a <_dtoa_r+0x8da>
   83cea:	4632      	mov	r2, r6
   83cec:	463b      	mov	r3, r7
   83cee:	2000      	movs	r0, #0
   83cf0:	4969      	ldr	r1, [pc, #420]	; (83e98 <_dtoa_r+0xa68>)
   83cf2:	f001 fded 	bl	858d0 <__aeabi_dsub>
   83cf6:	4652      	mov	r2, sl
   83cf8:	465b      	mov	r3, fp
   83cfa:	f002 fa0f 	bl	8611c <__aeabi_dcmplt>
   83cfe:	2800      	cmp	r0, #0
   83d00:	f040 8256 	bne.w	841b0 <_dtoa_r+0xd80>
   83d04:	454d      	cmp	r5, r9
   83d06:	f000 80f9 	beq.w	83efc <_dtoa_r+0xacc>
   83d0a:	4650      	mov	r0, sl
   83d0c:	4659      	mov	r1, fp
   83d0e:	2200      	movs	r2, #0
   83d10:	4b64      	ldr	r3, [pc, #400]	; (83ea4 <_dtoa_r+0xa74>)
   83d12:	f001 ff91 	bl	85c38 <__aeabi_dmul>
   83d16:	2200      	movs	r2, #0
   83d18:	4b62      	ldr	r3, [pc, #392]	; (83ea4 <_dtoa_r+0xa74>)
   83d1a:	4682      	mov	sl, r0
   83d1c:	468b      	mov	fp, r1
   83d1e:	4630      	mov	r0, r6
   83d20:	4639      	mov	r1, r7
   83d22:	f001 ff89 	bl	85c38 <__aeabi_dmul>
   83d26:	460f      	mov	r7, r1
   83d28:	4606      	mov	r6, r0
   83d2a:	f002 fa35 	bl	86198 <__aeabi_d2iz>
   83d2e:	4680      	mov	r8, r0
   83d30:	f001 ff1c 	bl	85b6c <__aeabi_i2d>
   83d34:	4602      	mov	r2, r0
   83d36:	460b      	mov	r3, r1
   83d38:	4630      	mov	r0, r6
   83d3a:	4639      	mov	r1, r7
   83d3c:	f001 fdc8 	bl	858d0 <__aeabi_dsub>
   83d40:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83d44:	fa5f f888 	uxtb.w	r8, r8
   83d48:	f805 8b01 	strb.w	r8, [r5], #1
   83d4c:	4652      	mov	r2, sl
   83d4e:	465b      	mov	r3, fp
   83d50:	4606      	mov	r6, r0
   83d52:	460f      	mov	r7, r1
   83d54:	f002 f9e2 	bl	8611c <__aeabi_dcmplt>
   83d58:	2800      	cmp	r0, #0
   83d5a:	d0c6      	beq.n	83cea <_dtoa_r+0x8ba>
   83d5c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83d60:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83d62:	9302      	str	r3, [sp, #8]
   83d64:	e523      	b.n	837ae <_dtoa_r+0x37e>
   83d66:	2300      	movs	r3, #0
   83d68:	930b      	str	r3, [sp, #44]	; 0x2c
   83d6a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83d6c:	2b00      	cmp	r3, #0
   83d6e:	f340 80dd 	ble.w	83f2c <_dtoa_r+0xafc>
   83d72:	461f      	mov	r7, r3
   83d74:	461e      	mov	r6, r3
   83d76:	930f      	str	r3, [sp, #60]	; 0x3c
   83d78:	9307      	str	r3, [sp, #28]
   83d7a:	e6f6      	b.n	83b6a <_dtoa_r+0x73a>
   83d7c:	2301      	movs	r3, #1
   83d7e:	930b      	str	r3, [sp, #44]	; 0x2c
   83d80:	e7f3      	b.n	83d6a <_dtoa_r+0x93a>
   83d82:	f1ba 0f00 	cmp.w	sl, #0
   83d86:	f47f ada7 	bne.w	838d8 <_dtoa_r+0x4a8>
   83d8a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83d8e:	2b00      	cmp	r3, #0
   83d90:	f47f adbc 	bne.w	8390c <_dtoa_r+0x4dc>
   83d94:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83d98:	0d3f      	lsrs	r7, r7, #20
   83d9a:	053f      	lsls	r7, r7, #20
   83d9c:	2f00      	cmp	r7, #0
   83d9e:	f000 820d 	beq.w	841bc <_dtoa_r+0xd8c>
   83da2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83da4:	3301      	adds	r3, #1
   83da6:	930a      	str	r3, [sp, #40]	; 0x28
   83da8:	9b08      	ldr	r3, [sp, #32]
   83daa:	3301      	adds	r3, #1
   83dac:	9308      	str	r3, [sp, #32]
   83dae:	2301      	movs	r3, #1
   83db0:	930c      	str	r3, [sp, #48]	; 0x30
   83db2:	e5ad      	b.n	83910 <_dtoa_r+0x4e0>
   83db4:	9b07      	ldr	r3, [sp, #28]
   83db6:	2b00      	cmp	r3, #0
   83db8:	f73f ac48 	bgt.w	8364c <_dtoa_r+0x21c>
   83dbc:	f040 8222 	bne.w	84204 <_dtoa_r+0xdd4>
   83dc0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83dc4:	2200      	movs	r2, #0
   83dc6:	4b38      	ldr	r3, [pc, #224]	; (83ea8 <_dtoa_r+0xa78>)
   83dc8:	f001 ff36 	bl	85c38 <__aeabi_dmul>
   83dcc:	4652      	mov	r2, sl
   83dce:	465b      	mov	r3, fp
   83dd0:	f002 f9b8 	bl	86144 <__aeabi_dcmpge>
   83dd4:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83dd8:	4646      	mov	r6, r8
   83dda:	2800      	cmp	r0, #0
   83ddc:	d041      	beq.n	83e62 <_dtoa_r+0xa32>
   83dde:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83de0:	9d04      	ldr	r5, [sp, #16]
   83de2:	43db      	mvns	r3, r3
   83de4:	9302      	str	r3, [sp, #8]
   83de6:	4641      	mov	r1, r8
   83de8:	4620      	mov	r0, r4
   83dea:	f000 fe19 	bl	84a20 <_Bfree>
   83dee:	2e00      	cmp	r6, #0
   83df0:	f43f acdd 	beq.w	837ae <_dtoa_r+0x37e>
   83df4:	e6a7      	b.n	83b46 <_dtoa_r+0x716>
   83df6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83df8:	4649      	mov	r1, r9
   83dfa:	4620      	mov	r0, r4
   83dfc:	f000 ff48 	bl	84c90 <__pow5mult>
   83e00:	4681      	mov	r9, r0
   83e02:	e557      	b.n	838b4 <_dtoa_r+0x484>
   83e04:	9a14      	ldr	r2, [sp, #80]	; 0x50
   83e06:	2a00      	cmp	r2, #0
   83e08:	f000 8188 	beq.w	8411c <_dtoa_r+0xcec>
   83e0c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83e10:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83e12:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83e14:	e4f2      	b.n	837fc <_dtoa_r+0x3cc>
   83e16:	f1ba 0f00 	cmp.w	sl, #0
   83e1a:	f47f ad77 	bne.w	8390c <_dtoa_r+0x4dc>
   83e1e:	e7b4      	b.n	83d8a <_dtoa_r+0x95a>
   83e20:	f000 fe08 	bl	84a34 <__multadd>
   83e24:	4647      	mov	r7, r8
   83e26:	4606      	mov	r6, r0
   83e28:	4683      	mov	fp, r0
   83e2a:	e5c0      	b.n	839ae <_dtoa_r+0x57e>
   83e2c:	4601      	mov	r1, r0
   83e2e:	4620      	mov	r0, r4
   83e30:	9308      	str	r3, [sp, #32]
   83e32:	f000 fdf5 	bl	84a20 <_Bfree>
   83e36:	2201      	movs	r2, #1
   83e38:	9b08      	ldr	r3, [sp, #32]
   83e3a:	e5e2      	b.n	83a02 <_dtoa_r+0x5d2>
   83e3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83e3e:	2b02      	cmp	r3, #2
   83e40:	f77f ad98 	ble.w	83974 <_dtoa_r+0x544>
   83e44:	9b07      	ldr	r3, [sp, #28]
   83e46:	2b00      	cmp	r3, #0
   83e48:	d1c9      	bne.n	83dde <_dtoa_r+0x9ae>
   83e4a:	4641      	mov	r1, r8
   83e4c:	2205      	movs	r2, #5
   83e4e:	4620      	mov	r0, r4
   83e50:	f000 fdf0 	bl	84a34 <__multadd>
   83e54:	4601      	mov	r1, r0
   83e56:	4680      	mov	r8, r0
   83e58:	4648      	mov	r0, r9
   83e5a:	f000 ffb9 	bl	84dd0 <__mcmp>
   83e5e:	2800      	cmp	r0, #0
   83e60:	ddbd      	ble.n	83dde <_dtoa_r+0x9ae>
   83e62:	2331      	movs	r3, #49	; 0x31
   83e64:	9a02      	ldr	r2, [sp, #8]
   83e66:	9904      	ldr	r1, [sp, #16]
   83e68:	3201      	adds	r2, #1
   83e6a:	9202      	str	r2, [sp, #8]
   83e6c:	700b      	strb	r3, [r1, #0]
   83e6e:	1c4d      	adds	r5, r1, #1
   83e70:	e7b9      	b.n	83de6 <_dtoa_r+0x9b6>
   83e72:	2331      	movs	r3, #49	; 0x31
   83e74:	9a02      	ldr	r2, [sp, #8]
   83e76:	3201      	adds	r2, #1
   83e78:	9202      	str	r2, [sp, #8]
   83e7a:	9a04      	ldr	r2, [sp, #16]
   83e7c:	7013      	strb	r3, [r2, #0]
   83e7e:	e652      	b.n	83b26 <_dtoa_r+0x6f6>
   83e80:	2301      	movs	r3, #1
   83e82:	930b      	str	r3, [sp, #44]	; 0x2c
   83e84:	e666      	b.n	83b54 <_dtoa_r+0x724>
   83e86:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83e8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83e8c:	e48f      	b.n	837ae <_dtoa_r+0x37e>
   83e8e:	bf00      	nop
   83e90:	00086790 	.word	0x00086790
   83e94:	00086768 	.word	0x00086768
   83e98:	3ff00000 	.word	0x3ff00000
   83e9c:	401c0000 	.word	0x401c0000
   83ea0:	3fe00000 	.word	0x3fe00000
   83ea4:	40240000 	.word	0x40240000
   83ea8:	40140000 	.word	0x40140000
   83eac:	4650      	mov	r0, sl
   83eae:	f001 fe5d 	bl	85b6c <__aeabi_i2d>
   83eb2:	463a      	mov	r2, r7
   83eb4:	4643      	mov	r3, r8
   83eb6:	f001 febf 	bl	85c38 <__aeabi_dmul>
   83eba:	2200      	movs	r2, #0
   83ebc:	4bc1      	ldr	r3, [pc, #772]	; (841c4 <_dtoa_r+0xd94>)
   83ebe:	f001 fd09 	bl	858d4 <__adddf3>
   83ec2:	4605      	mov	r5, r0
   83ec4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83ec8:	4641      	mov	r1, r8
   83eca:	2200      	movs	r2, #0
   83ecc:	4bbe      	ldr	r3, [pc, #760]	; (841c8 <_dtoa_r+0xd98>)
   83ece:	4638      	mov	r0, r7
   83ed0:	f001 fcfe 	bl	858d0 <__aeabi_dsub>
   83ed4:	462a      	mov	r2, r5
   83ed6:	4633      	mov	r3, r6
   83ed8:	4682      	mov	sl, r0
   83eda:	468b      	mov	fp, r1
   83edc:	f002 f93c 	bl	86158 <__aeabi_dcmpgt>
   83ee0:	4680      	mov	r8, r0
   83ee2:	2800      	cmp	r0, #0
   83ee4:	f040 8110 	bne.w	84108 <_dtoa_r+0xcd8>
   83ee8:	462a      	mov	r2, r5
   83eea:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   83eee:	4650      	mov	r0, sl
   83ef0:	4659      	mov	r1, fp
   83ef2:	f002 f913 	bl	8611c <__aeabi_dcmplt>
   83ef6:	b118      	cbz	r0, 83f00 <_dtoa_r+0xad0>
   83ef8:	4646      	mov	r6, r8
   83efa:	e770      	b.n	83dde <_dtoa_r+0x9ae>
   83efc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83f00:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   83f04:	f7ff bb8f 	b.w	83626 <_dtoa_r+0x1f6>
   83f08:	9804      	ldr	r0, [sp, #16]
   83f0a:	f7ff bac0 	b.w	8348e <_dtoa_r+0x5e>
   83f0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83f10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83f12:	1afb      	subs	r3, r7, r3
   83f14:	441a      	add	r2, r3
   83f16:	970c      	str	r7, [sp, #48]	; 0x30
   83f18:	920d      	str	r2, [sp, #52]	; 0x34
   83f1a:	2700      	movs	r7, #0
   83f1c:	e468      	b.n	837f0 <_dtoa_r+0x3c0>
   83f1e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   83f22:	f04f 0a02 	mov.w	sl, #2
   83f26:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   83f2a:	e656      	b.n	83bda <_dtoa_r+0x7aa>
   83f2c:	2100      	movs	r1, #0
   83f2e:	2301      	movs	r3, #1
   83f30:	4620      	mov	r0, r4
   83f32:	6461      	str	r1, [r4, #68]	; 0x44
   83f34:	9325      	str	r3, [sp, #148]	; 0x94
   83f36:	f000 fd4d 	bl	849d4 <_Balloc>
   83f3a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83f3c:	9004      	str	r0, [sp, #16]
   83f3e:	9307      	str	r3, [sp, #28]
   83f40:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83f42:	6420      	str	r0, [r4, #64]	; 0x40
   83f44:	930f      	str	r3, [sp, #60]	; 0x3c
   83f46:	e627      	b.n	83b98 <_dtoa_r+0x768>
   83f48:	2a00      	cmp	r2, #0
   83f4a:	46d0      	mov	r8, sl
   83f4c:	f8cd b020 	str.w	fp, [sp, #32]
   83f50:	469a      	mov	sl, r3
   83f52:	dd11      	ble.n	83f78 <_dtoa_r+0xb48>
   83f54:	4649      	mov	r1, r9
   83f56:	2201      	movs	r2, #1
   83f58:	4620      	mov	r0, r4
   83f5a:	f000 fee9 	bl	84d30 <__lshift>
   83f5e:	4641      	mov	r1, r8
   83f60:	4681      	mov	r9, r0
   83f62:	f000 ff35 	bl	84dd0 <__mcmp>
   83f66:	2800      	cmp	r0, #0
   83f68:	f340 8145 	ble.w	841f6 <_dtoa_r+0xdc6>
   83f6c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83f70:	f000 8105 	beq.w	8417e <_dtoa_r+0xd4e>
   83f74:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83f78:	46b3      	mov	fp, r6
   83f7a:	f887 a000 	strb.w	sl, [r7]
   83f7e:	1c7d      	adds	r5, r7, #1
   83f80:	9e08      	ldr	r6, [sp, #32]
   83f82:	e5d0      	b.n	83b26 <_dtoa_r+0x6f6>
   83f84:	d104      	bne.n	83f90 <_dtoa_r+0xb60>
   83f86:	f01a 0f01 	tst.w	sl, #1
   83f8a:	d001      	beq.n	83f90 <_dtoa_r+0xb60>
   83f8c:	e5bb      	b.n	83b06 <_dtoa_r+0x6d6>
   83f8e:	4615      	mov	r5, r2
   83f90:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83f94:	1e6a      	subs	r2, r5, #1
   83f96:	2b30      	cmp	r3, #48	; 0x30
   83f98:	d0f9      	beq.n	83f8e <_dtoa_r+0xb5e>
   83f9a:	e5c4      	b.n	83b26 <_dtoa_r+0x6f6>
   83f9c:	2230      	movs	r2, #48	; 0x30
   83f9e:	9904      	ldr	r1, [sp, #16]
   83fa0:	700a      	strb	r2, [r1, #0]
   83fa2:	9a02      	ldr	r2, [sp, #8]
   83fa4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83fa8:	3201      	adds	r2, #1
   83faa:	9202      	str	r2, [sp, #8]
   83fac:	f7ff bbfb 	b.w	837a6 <_dtoa_r+0x376>
   83fb0:	f000 80bb 	beq.w	8412a <_dtoa_r+0xcfa>
   83fb4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83fb8:	9b02      	ldr	r3, [sp, #8]
   83fba:	f04f 0a02 	mov.w	sl, #2
   83fbe:	425d      	negs	r5, r3
   83fc0:	4b82      	ldr	r3, [pc, #520]	; (841cc <_dtoa_r+0xd9c>)
   83fc2:	f005 020f 	and.w	r2, r5, #15
   83fc6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83fca:	e9d3 2300 	ldrd	r2, r3, [r3]
   83fce:	f001 fe33 	bl	85c38 <__aeabi_dmul>
   83fd2:	112d      	asrs	r5, r5, #4
   83fd4:	4607      	mov	r7, r0
   83fd6:	4688      	mov	r8, r1
   83fd8:	f43f ae1a 	beq.w	83c10 <_dtoa_r+0x7e0>
   83fdc:	4e7c      	ldr	r6, [pc, #496]	; (841d0 <_dtoa_r+0xda0>)
   83fde:	07eb      	lsls	r3, r5, #31
   83fe0:	d509      	bpl.n	83ff6 <_dtoa_r+0xbc6>
   83fe2:	e9d6 2300 	ldrd	r2, r3, [r6]
   83fe6:	4638      	mov	r0, r7
   83fe8:	4641      	mov	r1, r8
   83fea:	f001 fe25 	bl	85c38 <__aeabi_dmul>
   83fee:	4607      	mov	r7, r0
   83ff0:	4688      	mov	r8, r1
   83ff2:	f10a 0a01 	add.w	sl, sl, #1
   83ff6:	106d      	asrs	r5, r5, #1
   83ff8:	f106 0608 	add.w	r6, r6, #8
   83ffc:	d1ef      	bne.n	83fde <_dtoa_r+0xbae>
   83ffe:	e607      	b.n	83c10 <_dtoa_r+0x7e0>
   84000:	6871      	ldr	r1, [r6, #4]
   84002:	4620      	mov	r0, r4
   84004:	f000 fce6 	bl	849d4 <_Balloc>
   84008:	4605      	mov	r5, r0
   8400a:	6933      	ldr	r3, [r6, #16]
   8400c:	f106 010c 	add.w	r1, r6, #12
   84010:	3302      	adds	r3, #2
   84012:	009a      	lsls	r2, r3, #2
   84014:	300c      	adds	r0, #12
   84016:	f000 fc5b 	bl	848d0 <memcpy>
   8401a:	4629      	mov	r1, r5
   8401c:	2201      	movs	r2, #1
   8401e:	4620      	mov	r0, r4
   84020:	f000 fe86 	bl	84d30 <__lshift>
   84024:	9008      	str	r0, [sp, #32]
   84026:	e4b6      	b.n	83996 <_dtoa_r+0x566>
   84028:	2b39      	cmp	r3, #57	; 0x39
   8402a:	f8cd b020 	str.w	fp, [sp, #32]
   8402e:	46d0      	mov	r8, sl
   84030:	f000 80a5 	beq.w	8417e <_dtoa_r+0xd4e>
   84034:	f103 0a01 	add.w	sl, r3, #1
   84038:	46b3      	mov	fp, r6
   8403a:	f887 a000 	strb.w	sl, [r7]
   8403e:	1c7d      	adds	r5, r7, #1
   84040:	9e08      	ldr	r6, [sp, #32]
   84042:	e570      	b.n	83b26 <_dtoa_r+0x6f6>
   84044:	465a      	mov	r2, fp
   84046:	46d0      	mov	r8, sl
   84048:	46b3      	mov	fp, r6
   8404a:	469a      	mov	sl, r3
   8404c:	4616      	mov	r6, r2
   8404e:	e54e      	b.n	83aee <_dtoa_r+0x6be>
   84050:	9812      	ldr	r0, [sp, #72]	; 0x48
   84052:	495e      	ldr	r1, [pc, #376]	; (841cc <_dtoa_r+0xd9c>)
   84054:	462a      	mov	r2, r5
   84056:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   8405a:	4633      	mov	r3, r6
   8405c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   84060:	f001 fdea 	bl	85c38 <__aeabi_dmul>
   84064:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   84068:	4638      	mov	r0, r7
   8406a:	4641      	mov	r1, r8
   8406c:	f002 f894 	bl	86198 <__aeabi_d2iz>
   84070:	4605      	mov	r5, r0
   84072:	f001 fd7b 	bl	85b6c <__aeabi_i2d>
   84076:	4602      	mov	r2, r0
   84078:	460b      	mov	r3, r1
   8407a:	4638      	mov	r0, r7
   8407c:	4641      	mov	r1, r8
   8407e:	f001 fc27 	bl	858d0 <__aeabi_dsub>
   84082:	4606      	mov	r6, r0
   84084:	9812      	ldr	r0, [sp, #72]	; 0x48
   84086:	9a04      	ldr	r2, [sp, #16]
   84088:	3530      	adds	r5, #48	; 0x30
   8408a:	2801      	cmp	r0, #1
   8408c:	7015      	strb	r5, [r2, #0]
   8408e:	460f      	mov	r7, r1
   84090:	f102 0501 	add.w	r5, r2, #1
   84094:	d026      	beq.n	840e4 <_dtoa_r+0xcb4>
   84096:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84098:	9a04      	ldr	r2, [sp, #16]
   8409a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   8409e:	4413      	add	r3, r2
   840a0:	f04f 0a00 	mov.w	sl, #0
   840a4:	4699      	mov	r9, r3
   840a6:	f8df b130 	ldr.w	fp, [pc, #304]	; 841d8 <_dtoa_r+0xda8>
   840aa:	4652      	mov	r2, sl
   840ac:	465b      	mov	r3, fp
   840ae:	4630      	mov	r0, r6
   840b0:	4639      	mov	r1, r7
   840b2:	f001 fdc1 	bl	85c38 <__aeabi_dmul>
   840b6:	460f      	mov	r7, r1
   840b8:	4606      	mov	r6, r0
   840ba:	f002 f86d 	bl	86198 <__aeabi_d2iz>
   840be:	4680      	mov	r8, r0
   840c0:	f001 fd54 	bl	85b6c <__aeabi_i2d>
   840c4:	4602      	mov	r2, r0
   840c6:	460b      	mov	r3, r1
   840c8:	4630      	mov	r0, r6
   840ca:	4639      	mov	r1, r7
   840cc:	f001 fc00 	bl	858d0 <__aeabi_dsub>
   840d0:	f108 0830 	add.w	r8, r8, #48	; 0x30
   840d4:	f805 8b01 	strb.w	r8, [r5], #1
   840d8:	454d      	cmp	r5, r9
   840da:	4606      	mov	r6, r0
   840dc:	460f      	mov	r7, r1
   840de:	d1e4      	bne.n	840aa <_dtoa_r+0xc7a>
   840e0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   840e4:	2200      	movs	r2, #0
   840e6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   840ea:	4b3a      	ldr	r3, [pc, #232]	; (841d4 <_dtoa_r+0xda4>)
   840ec:	f001 fbf2 	bl	858d4 <__adddf3>
   840f0:	4632      	mov	r2, r6
   840f2:	463b      	mov	r3, r7
   840f4:	f002 f812 	bl	8611c <__aeabi_dcmplt>
   840f8:	2800      	cmp	r0, #0
   840fa:	d046      	beq.n	8418a <_dtoa_r+0xd5a>
   840fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   840fe:	9302      	str	r3, [sp, #8]
   84100:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84104:	f7ff bb42 	b.w	8378c <_dtoa_r+0x35c>
   84108:	f04f 0800 	mov.w	r8, #0
   8410c:	4646      	mov	r6, r8
   8410e:	e6a8      	b.n	83e62 <_dtoa_r+0xa32>
   84110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84112:	9a07      	ldr	r2, [sp, #28]
   84114:	1a9d      	subs	r5, r3, r2
   84116:	2300      	movs	r3, #0
   84118:	f7ff bb70 	b.w	837fc <_dtoa_r+0x3cc>
   8411c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   8411e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84120:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   84124:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84126:	f7ff bb69 	b.w	837fc <_dtoa_r+0x3cc>
   8412a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   8412e:	f04f 0a02 	mov.w	sl, #2
   84132:	e56d      	b.n	83c10 <_dtoa_r+0x7e0>
   84134:	9b07      	ldr	r3, [sp, #28]
   84136:	2b00      	cmp	r3, #0
   84138:	f43f aeb8 	beq.w	83eac <_dtoa_r+0xa7c>
   8413c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8413e:	2b00      	cmp	r3, #0
   84140:	f77f aede 	ble.w	83f00 <_dtoa_r+0xad0>
   84144:	2200      	movs	r2, #0
   84146:	4b24      	ldr	r3, [pc, #144]	; (841d8 <_dtoa_r+0xda8>)
   84148:	4638      	mov	r0, r7
   8414a:	4641      	mov	r1, r8
   8414c:	f001 fd74 	bl	85c38 <__aeabi_dmul>
   84150:	4607      	mov	r7, r0
   84152:	4688      	mov	r8, r1
   84154:	f10a 0001 	add.w	r0, sl, #1
   84158:	f001 fd08 	bl	85b6c <__aeabi_i2d>
   8415c:	463a      	mov	r2, r7
   8415e:	4643      	mov	r3, r8
   84160:	f001 fd6a 	bl	85c38 <__aeabi_dmul>
   84164:	2200      	movs	r2, #0
   84166:	4b17      	ldr	r3, [pc, #92]	; (841c4 <_dtoa_r+0xd94>)
   84168:	f001 fbb4 	bl	858d4 <__adddf3>
   8416c:	9a02      	ldr	r2, [sp, #8]
   8416e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84170:	3a01      	subs	r2, #1
   84172:	4605      	mov	r5, r0
   84174:	9215      	str	r2, [sp, #84]	; 0x54
   84176:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8417a:	9312      	str	r3, [sp, #72]	; 0x48
   8417c:	e569      	b.n	83c52 <_dtoa_r+0x822>
   8417e:	2239      	movs	r2, #57	; 0x39
   84180:	46b3      	mov	fp, r6
   84182:	703a      	strb	r2, [r7, #0]
   84184:	9e08      	ldr	r6, [sp, #32]
   84186:	1c7d      	adds	r5, r7, #1
   84188:	e4bf      	b.n	83b0a <_dtoa_r+0x6da>
   8418a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8418e:	2000      	movs	r0, #0
   84190:	4910      	ldr	r1, [pc, #64]	; (841d4 <_dtoa_r+0xda4>)
   84192:	f001 fb9d 	bl	858d0 <__aeabi_dsub>
   84196:	4632      	mov	r2, r6
   84198:	463b      	mov	r3, r7
   8419a:	f001 ffdd 	bl	86158 <__aeabi_dcmpgt>
   8419e:	b908      	cbnz	r0, 841a4 <_dtoa_r+0xd74>
   841a0:	e6ae      	b.n	83f00 <_dtoa_r+0xad0>
   841a2:	4615      	mov	r5, r2
   841a4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   841a8:	1e6a      	subs	r2, r5, #1
   841aa:	2b30      	cmp	r3, #48	; 0x30
   841ac:	d0f9      	beq.n	841a2 <_dtoa_r+0xd72>
   841ae:	e5d7      	b.n	83d60 <_dtoa_r+0x930>
   841b0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   841b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   841b6:	9302      	str	r3, [sp, #8]
   841b8:	f7ff bae8 	b.w	8378c <_dtoa_r+0x35c>
   841bc:	970c      	str	r7, [sp, #48]	; 0x30
   841be:	f7ff bba7 	b.w	83910 <_dtoa_r+0x4e0>
   841c2:	bf00      	nop
   841c4:	401c0000 	.word	0x401c0000
   841c8:	40140000 	.word	0x40140000
   841cc:	00086790 	.word	0x00086790
   841d0:	00086768 	.word	0x00086768
   841d4:	3fe00000 	.word	0x3fe00000
   841d8:	40240000 	.word	0x40240000
   841dc:	2b39      	cmp	r3, #57	; 0x39
   841de:	f8cd b020 	str.w	fp, [sp, #32]
   841e2:	46d0      	mov	r8, sl
   841e4:	f8dd b01c 	ldr.w	fp, [sp, #28]
   841e8:	469a      	mov	sl, r3
   841ea:	d0c8      	beq.n	8417e <_dtoa_r+0xd4e>
   841ec:	f1bb 0f00 	cmp.w	fp, #0
   841f0:	f73f aec0 	bgt.w	83f74 <_dtoa_r+0xb44>
   841f4:	e6c0      	b.n	83f78 <_dtoa_r+0xb48>
   841f6:	f47f aebf 	bne.w	83f78 <_dtoa_r+0xb48>
   841fa:	f01a 0f01 	tst.w	sl, #1
   841fe:	f43f aebb 	beq.w	83f78 <_dtoa_r+0xb48>
   84202:	e6b3      	b.n	83f6c <_dtoa_r+0xb3c>
   84204:	f04f 0800 	mov.w	r8, #0
   84208:	4646      	mov	r6, r8
   8420a:	e5e8      	b.n	83dde <_dtoa_r+0x9ae>
   8420c:	4631      	mov	r1, r6
   8420e:	2300      	movs	r3, #0
   84210:	220a      	movs	r2, #10
   84212:	4620      	mov	r0, r4
   84214:	f000 fc0e 	bl	84a34 <__multadd>
   84218:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8421a:	4606      	mov	r6, r0
   8421c:	2b00      	cmp	r3, #0
   8421e:	dd07      	ble.n	84230 <_dtoa_r+0xe00>
   84220:	9307      	str	r3, [sp, #28]
   84222:	f7ff bbab 	b.w	8397c <_dtoa_r+0x54c>
   84226:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84228:	2b02      	cmp	r3, #2
   8422a:	dc1f      	bgt.n	8426c <_dtoa_r+0xe3c>
   8422c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8422e:	e43c      	b.n	83aaa <_dtoa_r+0x67a>
   84230:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84232:	2b02      	cmp	r3, #2
   84234:	dc1a      	bgt.n	8426c <_dtoa_r+0xe3c>
   84236:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84238:	e7f2      	b.n	84220 <_dtoa_r+0xdf0>
   8423a:	f43f ab81 	beq.w	83940 <_dtoa_r+0x510>
   8423e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   84242:	e411      	b.n	83a68 <_dtoa_r+0x638>
   84244:	2500      	movs	r5, #0
   84246:	4620      	mov	r0, r4
   84248:	6465      	str	r5, [r4, #68]	; 0x44
   8424a:	4629      	mov	r1, r5
   8424c:	f000 fbc2 	bl	849d4 <_Balloc>
   84250:	f04f 33ff 	mov.w	r3, #4294967295
   84254:	9307      	str	r3, [sp, #28]
   84256:	930f      	str	r3, [sp, #60]	; 0x3c
   84258:	2301      	movs	r3, #1
   8425a:	9004      	str	r0, [sp, #16]
   8425c:	9525      	str	r5, [sp, #148]	; 0x94
   8425e:	6420      	str	r0, [r4, #64]	; 0x40
   84260:	930b      	str	r3, [sp, #44]	; 0x2c
   84262:	f7ff b9e0 	b.w	83626 <_dtoa_r+0x1f6>
   84266:	2501      	movs	r5, #1
   84268:	f7ff b9a8 	b.w	835bc <_dtoa_r+0x18c>
   8426c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8426e:	9307      	str	r3, [sp, #28]
   84270:	e5e8      	b.n	83e44 <_dtoa_r+0xa14>
   84272:	bf00      	nop

00084274 <__libc_fini_array>:
   84274:	b538      	push	{r3, r4, r5, lr}
   84276:	4c0a      	ldr	r4, [pc, #40]	; (842a0 <__libc_fini_array+0x2c>)
   84278:	4d0a      	ldr	r5, [pc, #40]	; (842a4 <__libc_fini_array+0x30>)
   8427a:	1b64      	subs	r4, r4, r5
   8427c:	10a4      	asrs	r4, r4, #2
   8427e:	d00a      	beq.n	84296 <__libc_fini_array+0x22>
   84280:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   84284:	3b01      	subs	r3, #1
   84286:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8428a:	3c01      	subs	r4, #1
   8428c:	f855 3904 	ldr.w	r3, [r5], #-4
   84290:	4798      	blx	r3
   84292:	2c00      	cmp	r4, #0
   84294:	d1f9      	bne.n	8428a <__libc_fini_array+0x16>
   84296:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8429a:	f002 bb6f 	b.w	8697c <_fini>
   8429e:	bf00      	nop
   842a0:	0008698c 	.word	0x0008698c
   842a4:	00086988 	.word	0x00086988

000842a8 <__locale_ctype_ptr_l>:
   842a8:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   842ac:	4770      	bx	lr
   842ae:	bf00      	nop

000842b0 <_localeconv_r>:
   842b0:	4a04      	ldr	r2, [pc, #16]	; (842c4 <_localeconv_r+0x14>)
   842b2:	4b05      	ldr	r3, [pc, #20]	; (842c8 <_localeconv_r+0x18>)
   842b4:	6812      	ldr	r2, [r2, #0]
   842b6:	6b50      	ldr	r0, [r2, #52]	; 0x34
   842b8:	2800      	cmp	r0, #0
   842ba:	bf08      	it	eq
   842bc:	4618      	moveq	r0, r3
   842be:	30f0      	adds	r0, #240	; 0xf0
   842c0:	4770      	bx	lr
   842c2:	bf00      	nop
   842c4:	20070590 	.word	0x20070590
   842c8:	200709c4 	.word	0x200709c4

000842cc <__retarget_lock_acquire_recursive>:
   842cc:	4770      	bx	lr
   842ce:	bf00      	nop

000842d0 <__retarget_lock_release_recursive>:
   842d0:	4770      	bx	lr
   842d2:	bf00      	nop

000842d4 <_malloc_r>:
   842d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   842d8:	f101 060b 	add.w	r6, r1, #11
   842dc:	2e16      	cmp	r6, #22
   842de:	b083      	sub	sp, #12
   842e0:	4605      	mov	r5, r0
   842e2:	f240 809e 	bls.w	84422 <_malloc_r+0x14e>
   842e6:	f036 0607 	bics.w	r6, r6, #7
   842ea:	f100 80bd 	bmi.w	84468 <_malloc_r+0x194>
   842ee:	42b1      	cmp	r1, r6
   842f0:	f200 80ba 	bhi.w	84468 <_malloc_r+0x194>
   842f4:	f000 fb62 	bl	849bc <__malloc_lock>
   842f8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   842fc:	f0c0 8285 	bcc.w	8480a <_malloc_r+0x536>
   84300:	0a73      	lsrs	r3, r6, #9
   84302:	f000 80b8 	beq.w	84476 <_malloc_r+0x1a2>
   84306:	2b04      	cmp	r3, #4
   84308:	f200 816c 	bhi.w	845e4 <_malloc_r+0x310>
   8430c:	09b3      	lsrs	r3, r6, #6
   8430e:	f103 0039 	add.w	r0, r3, #57	; 0x39
   84312:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   84316:	00c1      	lsls	r1, r0, #3
   84318:	4fb8      	ldr	r7, [pc, #736]	; (845fc <_malloc_r+0x328>)
   8431a:	4439      	add	r1, r7
   8431c:	684c      	ldr	r4, [r1, #4]
   8431e:	3908      	subs	r1, #8
   84320:	42a1      	cmp	r1, r4
   84322:	d106      	bne.n	84332 <_malloc_r+0x5e>
   84324:	e00c      	b.n	84340 <_malloc_r+0x6c>
   84326:	2a00      	cmp	r2, #0
   84328:	f280 80ab 	bge.w	84482 <_malloc_r+0x1ae>
   8432c:	68e4      	ldr	r4, [r4, #12]
   8432e:	42a1      	cmp	r1, r4
   84330:	d006      	beq.n	84340 <_malloc_r+0x6c>
   84332:	6863      	ldr	r3, [r4, #4]
   84334:	f023 0303 	bic.w	r3, r3, #3
   84338:	1b9a      	subs	r2, r3, r6
   8433a:	2a0f      	cmp	r2, #15
   8433c:	ddf3      	ble.n	84326 <_malloc_r+0x52>
   8433e:	4670      	mov	r0, lr
   84340:	693c      	ldr	r4, [r7, #16]
   84342:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 84610 <_malloc_r+0x33c>
   84346:	4574      	cmp	r4, lr
   84348:	f000 819e 	beq.w	84688 <_malloc_r+0x3b4>
   8434c:	6863      	ldr	r3, [r4, #4]
   8434e:	f023 0303 	bic.w	r3, r3, #3
   84352:	1b9a      	subs	r2, r3, r6
   84354:	2a0f      	cmp	r2, #15
   84356:	f300 8183 	bgt.w	84660 <_malloc_r+0x38c>
   8435a:	2a00      	cmp	r2, #0
   8435c:	f8c7 e014 	str.w	lr, [r7, #20]
   84360:	f8c7 e010 	str.w	lr, [r7, #16]
   84364:	f280 8091 	bge.w	8448a <_malloc_r+0x1b6>
   84368:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8436c:	f080 8154 	bcs.w	84618 <_malloc_r+0x344>
   84370:	2201      	movs	r2, #1
   84372:	08db      	lsrs	r3, r3, #3
   84374:	6879      	ldr	r1, [r7, #4]
   84376:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   8437a:	4413      	add	r3, r2
   8437c:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   84380:	fa02 f20c 	lsl.w	r2, r2, ip
   84384:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   84388:	430a      	orrs	r2, r1
   8438a:	f1ac 0108 	sub.w	r1, ip, #8
   8438e:	60e1      	str	r1, [r4, #12]
   84390:	f8c4 8008 	str.w	r8, [r4, #8]
   84394:	607a      	str	r2, [r7, #4]
   84396:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   8439a:	f8c8 400c 	str.w	r4, [r8, #12]
   8439e:	2401      	movs	r4, #1
   843a0:	1083      	asrs	r3, r0, #2
   843a2:	409c      	lsls	r4, r3
   843a4:	4294      	cmp	r4, r2
   843a6:	d87d      	bhi.n	844a4 <_malloc_r+0x1d0>
   843a8:	4214      	tst	r4, r2
   843aa:	d106      	bne.n	843ba <_malloc_r+0xe6>
   843ac:	f020 0003 	bic.w	r0, r0, #3
   843b0:	0064      	lsls	r4, r4, #1
   843b2:	4214      	tst	r4, r2
   843b4:	f100 0004 	add.w	r0, r0, #4
   843b8:	d0fa      	beq.n	843b0 <_malloc_r+0xdc>
   843ba:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   843be:	46cc      	mov	ip, r9
   843c0:	4680      	mov	r8, r0
   843c2:	f8dc 300c 	ldr.w	r3, [ip, #12]
   843c6:	459c      	cmp	ip, r3
   843c8:	d107      	bne.n	843da <_malloc_r+0x106>
   843ca:	e15f      	b.n	8468c <_malloc_r+0x3b8>
   843cc:	2a00      	cmp	r2, #0
   843ce:	f280 816d 	bge.w	846ac <_malloc_r+0x3d8>
   843d2:	68db      	ldr	r3, [r3, #12]
   843d4:	459c      	cmp	ip, r3
   843d6:	f000 8159 	beq.w	8468c <_malloc_r+0x3b8>
   843da:	6859      	ldr	r1, [r3, #4]
   843dc:	f021 0103 	bic.w	r1, r1, #3
   843e0:	1b8a      	subs	r2, r1, r6
   843e2:	2a0f      	cmp	r2, #15
   843e4:	ddf2      	ble.n	843cc <_malloc_r+0xf8>
   843e6:	68dc      	ldr	r4, [r3, #12]
   843e8:	f8d3 c008 	ldr.w	ip, [r3, #8]
   843ec:	f046 0801 	orr.w	r8, r6, #1
   843f0:	4628      	mov	r0, r5
   843f2:	441e      	add	r6, r3
   843f4:	f042 0501 	orr.w	r5, r2, #1
   843f8:	f8c3 8004 	str.w	r8, [r3, #4]
   843fc:	f8cc 400c 	str.w	r4, [ip, #12]
   84400:	f8c4 c008 	str.w	ip, [r4, #8]
   84404:	617e      	str	r6, [r7, #20]
   84406:	613e      	str	r6, [r7, #16]
   84408:	f8c6 e00c 	str.w	lr, [r6, #12]
   8440c:	f8c6 e008 	str.w	lr, [r6, #8]
   84410:	6075      	str	r5, [r6, #4]
   84412:	505a      	str	r2, [r3, r1]
   84414:	9300      	str	r3, [sp, #0]
   84416:	f000 fad7 	bl	849c8 <__malloc_unlock>
   8441a:	9b00      	ldr	r3, [sp, #0]
   8441c:	f103 0408 	add.w	r4, r3, #8
   84420:	e01e      	b.n	84460 <_malloc_r+0x18c>
   84422:	2910      	cmp	r1, #16
   84424:	d820      	bhi.n	84468 <_malloc_r+0x194>
   84426:	f000 fac9 	bl	849bc <__malloc_lock>
   8442a:	2610      	movs	r6, #16
   8442c:	2318      	movs	r3, #24
   8442e:	2002      	movs	r0, #2
   84430:	4f72      	ldr	r7, [pc, #456]	; (845fc <_malloc_r+0x328>)
   84432:	443b      	add	r3, r7
   84434:	685c      	ldr	r4, [r3, #4]
   84436:	f1a3 0208 	sub.w	r2, r3, #8
   8443a:	4294      	cmp	r4, r2
   8443c:	f000 812f 	beq.w	8469e <_malloc_r+0x3ca>
   84440:	6863      	ldr	r3, [r4, #4]
   84442:	68e1      	ldr	r1, [r4, #12]
   84444:	f023 0303 	bic.w	r3, r3, #3
   84448:	4423      	add	r3, r4
   8444a:	685a      	ldr	r2, [r3, #4]
   8444c:	68a6      	ldr	r6, [r4, #8]
   8444e:	f042 0201 	orr.w	r2, r2, #1
   84452:	60f1      	str	r1, [r6, #12]
   84454:	4628      	mov	r0, r5
   84456:	608e      	str	r6, [r1, #8]
   84458:	605a      	str	r2, [r3, #4]
   8445a:	f000 fab5 	bl	849c8 <__malloc_unlock>
   8445e:	3408      	adds	r4, #8
   84460:	4620      	mov	r0, r4
   84462:	b003      	add	sp, #12
   84464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84468:	2400      	movs	r4, #0
   8446a:	230c      	movs	r3, #12
   8446c:	4620      	mov	r0, r4
   8446e:	602b      	str	r3, [r5, #0]
   84470:	b003      	add	sp, #12
   84472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84476:	2040      	movs	r0, #64	; 0x40
   84478:	f44f 7100 	mov.w	r1, #512	; 0x200
   8447c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   84480:	e74a      	b.n	84318 <_malloc_r+0x44>
   84482:	4423      	add	r3, r4
   84484:	685a      	ldr	r2, [r3, #4]
   84486:	68e1      	ldr	r1, [r4, #12]
   84488:	e7e0      	b.n	8444c <_malloc_r+0x178>
   8448a:	4423      	add	r3, r4
   8448c:	685a      	ldr	r2, [r3, #4]
   8448e:	4628      	mov	r0, r5
   84490:	f042 0201 	orr.w	r2, r2, #1
   84494:	605a      	str	r2, [r3, #4]
   84496:	3408      	adds	r4, #8
   84498:	f000 fa96 	bl	849c8 <__malloc_unlock>
   8449c:	4620      	mov	r0, r4
   8449e:	b003      	add	sp, #12
   844a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   844a4:	68bc      	ldr	r4, [r7, #8]
   844a6:	6863      	ldr	r3, [r4, #4]
   844a8:	f023 0803 	bic.w	r8, r3, #3
   844ac:	45b0      	cmp	r8, r6
   844ae:	d304      	bcc.n	844ba <_malloc_r+0x1e6>
   844b0:	eba8 0306 	sub.w	r3, r8, r6
   844b4:	2b0f      	cmp	r3, #15
   844b6:	f300 8085 	bgt.w	845c4 <_malloc_r+0x2f0>
   844ba:	f8df 9158 	ldr.w	r9, [pc, #344]	; 84614 <_malloc_r+0x340>
   844be:	4b50      	ldr	r3, [pc, #320]	; (84600 <_malloc_r+0x32c>)
   844c0:	f8d9 2000 	ldr.w	r2, [r9]
   844c4:	681b      	ldr	r3, [r3, #0]
   844c6:	3201      	adds	r2, #1
   844c8:	4433      	add	r3, r6
   844ca:	eb04 0a08 	add.w	sl, r4, r8
   844ce:	f000 8154 	beq.w	8477a <_malloc_r+0x4a6>
   844d2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   844d6:	330f      	adds	r3, #15
   844d8:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   844dc:	f02b 0b0f 	bic.w	fp, fp, #15
   844e0:	4659      	mov	r1, fp
   844e2:	4628      	mov	r0, r5
   844e4:	f000 fd72 	bl	84fcc <_sbrk_r>
   844e8:	1c41      	adds	r1, r0, #1
   844ea:	4602      	mov	r2, r0
   844ec:	f000 80fb 	beq.w	846e6 <_malloc_r+0x412>
   844f0:	4582      	cmp	sl, r0
   844f2:	f200 80f6 	bhi.w	846e2 <_malloc_r+0x40e>
   844f6:	4b43      	ldr	r3, [pc, #268]	; (84604 <_malloc_r+0x330>)
   844f8:	6819      	ldr	r1, [r3, #0]
   844fa:	4459      	add	r1, fp
   844fc:	6019      	str	r1, [r3, #0]
   844fe:	f000 814c 	beq.w	8479a <_malloc_r+0x4c6>
   84502:	f8d9 0000 	ldr.w	r0, [r9]
   84506:	3001      	adds	r0, #1
   84508:	bf1b      	ittet	ne
   8450a:	eba2 0a0a 	subne.w	sl, r2, sl
   8450e:	4451      	addne	r1, sl
   84510:	f8c9 2000 	streq.w	r2, [r9]
   84514:	6019      	strne	r1, [r3, #0]
   84516:	f012 0107 	ands.w	r1, r2, #7
   8451a:	f000 8114 	beq.w	84746 <_malloc_r+0x472>
   8451e:	f1c1 0008 	rsb	r0, r1, #8
   84522:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   84526:	4402      	add	r2, r0
   84528:	3108      	adds	r1, #8
   8452a:	eb02 090b 	add.w	r9, r2, fp
   8452e:	f3c9 090b 	ubfx	r9, r9, #0, #12
   84532:	eba1 0909 	sub.w	r9, r1, r9
   84536:	4649      	mov	r1, r9
   84538:	4628      	mov	r0, r5
   8453a:	9301      	str	r3, [sp, #4]
   8453c:	9200      	str	r2, [sp, #0]
   8453e:	f000 fd45 	bl	84fcc <_sbrk_r>
   84542:	1c43      	adds	r3, r0, #1
   84544:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84548:	f000 8142 	beq.w	847d0 <_malloc_r+0x4fc>
   8454c:	1a80      	subs	r0, r0, r2
   8454e:	4448      	add	r0, r9
   84550:	f040 0001 	orr.w	r0, r0, #1
   84554:	6819      	ldr	r1, [r3, #0]
   84556:	42bc      	cmp	r4, r7
   84558:	4449      	add	r1, r9
   8455a:	60ba      	str	r2, [r7, #8]
   8455c:	6019      	str	r1, [r3, #0]
   8455e:	6050      	str	r0, [r2, #4]
   84560:	d017      	beq.n	84592 <_malloc_r+0x2be>
   84562:	f1b8 0f0f 	cmp.w	r8, #15
   84566:	f240 80fa 	bls.w	8475e <_malloc_r+0x48a>
   8456a:	f04f 0c05 	mov.w	ip, #5
   8456e:	6862      	ldr	r2, [r4, #4]
   84570:	f1a8 000c 	sub.w	r0, r8, #12
   84574:	f020 0007 	bic.w	r0, r0, #7
   84578:	f002 0201 	and.w	r2, r2, #1
   8457c:	eb04 0e00 	add.w	lr, r4, r0
   84580:	4302      	orrs	r2, r0
   84582:	280f      	cmp	r0, #15
   84584:	6062      	str	r2, [r4, #4]
   84586:	f8ce c004 	str.w	ip, [lr, #4]
   8458a:	f8ce c008 	str.w	ip, [lr, #8]
   8458e:	f200 8116 	bhi.w	847be <_malloc_r+0x4ea>
   84592:	4b1d      	ldr	r3, [pc, #116]	; (84608 <_malloc_r+0x334>)
   84594:	68bc      	ldr	r4, [r7, #8]
   84596:	681a      	ldr	r2, [r3, #0]
   84598:	4291      	cmp	r1, r2
   8459a:	bf88      	it	hi
   8459c:	6019      	strhi	r1, [r3, #0]
   8459e:	4b1b      	ldr	r3, [pc, #108]	; (8460c <_malloc_r+0x338>)
   845a0:	681a      	ldr	r2, [r3, #0]
   845a2:	4291      	cmp	r1, r2
   845a4:	6862      	ldr	r2, [r4, #4]
   845a6:	bf88      	it	hi
   845a8:	6019      	strhi	r1, [r3, #0]
   845aa:	f022 0203 	bic.w	r2, r2, #3
   845ae:	4296      	cmp	r6, r2
   845b0:	eba2 0306 	sub.w	r3, r2, r6
   845b4:	d801      	bhi.n	845ba <_malloc_r+0x2e6>
   845b6:	2b0f      	cmp	r3, #15
   845b8:	dc04      	bgt.n	845c4 <_malloc_r+0x2f0>
   845ba:	4628      	mov	r0, r5
   845bc:	f000 fa04 	bl	849c8 <__malloc_unlock>
   845c0:	2400      	movs	r4, #0
   845c2:	e74d      	b.n	84460 <_malloc_r+0x18c>
   845c4:	f046 0201 	orr.w	r2, r6, #1
   845c8:	f043 0301 	orr.w	r3, r3, #1
   845cc:	4426      	add	r6, r4
   845ce:	6062      	str	r2, [r4, #4]
   845d0:	4628      	mov	r0, r5
   845d2:	60be      	str	r6, [r7, #8]
   845d4:	3408      	adds	r4, #8
   845d6:	6073      	str	r3, [r6, #4]
   845d8:	f000 f9f6 	bl	849c8 <__malloc_unlock>
   845dc:	4620      	mov	r0, r4
   845de:	b003      	add	sp, #12
   845e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845e4:	2b14      	cmp	r3, #20
   845e6:	d970      	bls.n	846ca <_malloc_r+0x3f6>
   845e8:	2b54      	cmp	r3, #84	; 0x54
   845ea:	f200 80a2 	bhi.w	84732 <_malloc_r+0x45e>
   845ee:	0b33      	lsrs	r3, r6, #12
   845f0:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   845f4:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   845f8:	00c1      	lsls	r1, r0, #3
   845fa:	e68d      	b.n	84318 <_malloc_r+0x44>
   845fc:	20070b30 	.word	0x20070b30
   84600:	20071014 	.word	0x20071014
   84604:	20070fe4 	.word	0x20070fe4
   84608:	2007100c 	.word	0x2007100c
   8460c:	20071010 	.word	0x20071010
   84610:	20070b38 	.word	0x20070b38
   84614:	20070f38 	.word	0x20070f38
   84618:	0a5a      	lsrs	r2, r3, #9
   8461a:	2a04      	cmp	r2, #4
   8461c:	d95b      	bls.n	846d6 <_malloc_r+0x402>
   8461e:	2a14      	cmp	r2, #20
   84620:	f200 80ae 	bhi.w	84780 <_malloc_r+0x4ac>
   84624:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   84628:	00c9      	lsls	r1, r1, #3
   8462a:	325b      	adds	r2, #91	; 0x5b
   8462c:	eb07 0c01 	add.w	ip, r7, r1
   84630:	5879      	ldr	r1, [r7, r1]
   84632:	f1ac 0c08 	sub.w	ip, ip, #8
   84636:	458c      	cmp	ip, r1
   84638:	f000 8088 	beq.w	8474c <_malloc_r+0x478>
   8463c:	684a      	ldr	r2, [r1, #4]
   8463e:	f022 0203 	bic.w	r2, r2, #3
   84642:	4293      	cmp	r3, r2
   84644:	d273      	bcs.n	8472e <_malloc_r+0x45a>
   84646:	6889      	ldr	r1, [r1, #8]
   84648:	458c      	cmp	ip, r1
   8464a:	d1f7      	bne.n	8463c <_malloc_r+0x368>
   8464c:	f8dc 300c 	ldr.w	r3, [ip, #12]
   84650:	687a      	ldr	r2, [r7, #4]
   84652:	60e3      	str	r3, [r4, #12]
   84654:	f8c4 c008 	str.w	ip, [r4, #8]
   84658:	609c      	str	r4, [r3, #8]
   8465a:	f8cc 400c 	str.w	r4, [ip, #12]
   8465e:	e69e      	b.n	8439e <_malloc_r+0xca>
   84660:	f046 0c01 	orr.w	ip, r6, #1
   84664:	f042 0101 	orr.w	r1, r2, #1
   84668:	4426      	add	r6, r4
   8466a:	f8c4 c004 	str.w	ip, [r4, #4]
   8466e:	4628      	mov	r0, r5
   84670:	617e      	str	r6, [r7, #20]
   84672:	613e      	str	r6, [r7, #16]
   84674:	f8c6 e00c 	str.w	lr, [r6, #12]
   84678:	f8c6 e008 	str.w	lr, [r6, #8]
   8467c:	6071      	str	r1, [r6, #4]
   8467e:	50e2      	str	r2, [r4, r3]
   84680:	f000 f9a2 	bl	849c8 <__malloc_unlock>
   84684:	3408      	adds	r4, #8
   84686:	e6eb      	b.n	84460 <_malloc_r+0x18c>
   84688:	687a      	ldr	r2, [r7, #4]
   8468a:	e688      	b.n	8439e <_malloc_r+0xca>
   8468c:	f108 0801 	add.w	r8, r8, #1
   84690:	f018 0f03 	tst.w	r8, #3
   84694:	f10c 0c08 	add.w	ip, ip, #8
   84698:	f47f ae93 	bne.w	843c2 <_malloc_r+0xee>
   8469c:	e02d      	b.n	846fa <_malloc_r+0x426>
   8469e:	68dc      	ldr	r4, [r3, #12]
   846a0:	42a3      	cmp	r3, r4
   846a2:	bf08      	it	eq
   846a4:	3002      	addeq	r0, #2
   846a6:	f43f ae4b 	beq.w	84340 <_malloc_r+0x6c>
   846aa:	e6c9      	b.n	84440 <_malloc_r+0x16c>
   846ac:	461c      	mov	r4, r3
   846ae:	4419      	add	r1, r3
   846b0:	684a      	ldr	r2, [r1, #4]
   846b2:	68db      	ldr	r3, [r3, #12]
   846b4:	f854 6f08 	ldr.w	r6, [r4, #8]!
   846b8:	f042 0201 	orr.w	r2, r2, #1
   846bc:	604a      	str	r2, [r1, #4]
   846be:	4628      	mov	r0, r5
   846c0:	60f3      	str	r3, [r6, #12]
   846c2:	609e      	str	r6, [r3, #8]
   846c4:	f000 f980 	bl	849c8 <__malloc_unlock>
   846c8:	e6ca      	b.n	84460 <_malloc_r+0x18c>
   846ca:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   846ce:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   846d2:	00c1      	lsls	r1, r0, #3
   846d4:	e620      	b.n	84318 <_malloc_r+0x44>
   846d6:	099a      	lsrs	r2, r3, #6
   846d8:	f102 0139 	add.w	r1, r2, #57	; 0x39
   846dc:	00c9      	lsls	r1, r1, #3
   846de:	3238      	adds	r2, #56	; 0x38
   846e0:	e7a4      	b.n	8462c <_malloc_r+0x358>
   846e2:	42bc      	cmp	r4, r7
   846e4:	d054      	beq.n	84790 <_malloc_r+0x4bc>
   846e6:	68bc      	ldr	r4, [r7, #8]
   846e8:	6862      	ldr	r2, [r4, #4]
   846ea:	f022 0203 	bic.w	r2, r2, #3
   846ee:	e75e      	b.n	845ae <_malloc_r+0x2da>
   846f0:	f859 3908 	ldr.w	r3, [r9], #-8
   846f4:	4599      	cmp	r9, r3
   846f6:	f040 8086 	bne.w	84806 <_malloc_r+0x532>
   846fa:	f010 0f03 	tst.w	r0, #3
   846fe:	f100 30ff 	add.w	r0, r0, #4294967295
   84702:	d1f5      	bne.n	846f0 <_malloc_r+0x41c>
   84704:	687b      	ldr	r3, [r7, #4]
   84706:	ea23 0304 	bic.w	r3, r3, r4
   8470a:	607b      	str	r3, [r7, #4]
   8470c:	0064      	lsls	r4, r4, #1
   8470e:	429c      	cmp	r4, r3
   84710:	f63f aec8 	bhi.w	844a4 <_malloc_r+0x1d0>
   84714:	2c00      	cmp	r4, #0
   84716:	f43f aec5 	beq.w	844a4 <_malloc_r+0x1d0>
   8471a:	421c      	tst	r4, r3
   8471c:	4640      	mov	r0, r8
   8471e:	f47f ae4c 	bne.w	843ba <_malloc_r+0xe6>
   84722:	0064      	lsls	r4, r4, #1
   84724:	421c      	tst	r4, r3
   84726:	f100 0004 	add.w	r0, r0, #4
   8472a:	d0fa      	beq.n	84722 <_malloc_r+0x44e>
   8472c:	e645      	b.n	843ba <_malloc_r+0xe6>
   8472e:	468c      	mov	ip, r1
   84730:	e78c      	b.n	8464c <_malloc_r+0x378>
   84732:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   84736:	d815      	bhi.n	84764 <_malloc_r+0x490>
   84738:	0bf3      	lsrs	r3, r6, #15
   8473a:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8473e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   84742:	00c1      	lsls	r1, r0, #3
   84744:	e5e8      	b.n	84318 <_malloc_r+0x44>
   84746:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   8474a:	e6ee      	b.n	8452a <_malloc_r+0x256>
   8474c:	2101      	movs	r1, #1
   8474e:	687b      	ldr	r3, [r7, #4]
   84750:	1092      	asrs	r2, r2, #2
   84752:	fa01 f202 	lsl.w	r2, r1, r2
   84756:	431a      	orrs	r2, r3
   84758:	607a      	str	r2, [r7, #4]
   8475a:	4663      	mov	r3, ip
   8475c:	e779      	b.n	84652 <_malloc_r+0x37e>
   8475e:	2301      	movs	r3, #1
   84760:	6053      	str	r3, [r2, #4]
   84762:	e72a      	b.n	845ba <_malloc_r+0x2e6>
   84764:	f240 5254 	movw	r2, #1364	; 0x554
   84768:	4293      	cmp	r3, r2
   8476a:	d822      	bhi.n	847b2 <_malloc_r+0x4de>
   8476c:	0cb3      	lsrs	r3, r6, #18
   8476e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   84772:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   84776:	00c1      	lsls	r1, r0, #3
   84778:	e5ce      	b.n	84318 <_malloc_r+0x44>
   8477a:	f103 0b10 	add.w	fp, r3, #16
   8477e:	e6af      	b.n	844e0 <_malloc_r+0x20c>
   84780:	2a54      	cmp	r2, #84	; 0x54
   84782:	d829      	bhi.n	847d8 <_malloc_r+0x504>
   84784:	0b1a      	lsrs	r2, r3, #12
   84786:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   8478a:	00c9      	lsls	r1, r1, #3
   8478c:	326e      	adds	r2, #110	; 0x6e
   8478e:	e74d      	b.n	8462c <_malloc_r+0x358>
   84790:	4b20      	ldr	r3, [pc, #128]	; (84814 <_malloc_r+0x540>)
   84792:	6819      	ldr	r1, [r3, #0]
   84794:	4459      	add	r1, fp
   84796:	6019      	str	r1, [r3, #0]
   84798:	e6b3      	b.n	84502 <_malloc_r+0x22e>
   8479a:	f3ca 000b 	ubfx	r0, sl, #0, #12
   8479e:	2800      	cmp	r0, #0
   847a0:	f47f aeaf 	bne.w	84502 <_malloc_r+0x22e>
   847a4:	eb08 030b 	add.w	r3, r8, fp
   847a8:	68ba      	ldr	r2, [r7, #8]
   847aa:	f043 0301 	orr.w	r3, r3, #1
   847ae:	6053      	str	r3, [r2, #4]
   847b0:	e6ef      	b.n	84592 <_malloc_r+0x2be>
   847b2:	207f      	movs	r0, #127	; 0x7f
   847b4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   847b8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   847bc:	e5ac      	b.n	84318 <_malloc_r+0x44>
   847be:	f104 0108 	add.w	r1, r4, #8
   847c2:	4628      	mov	r0, r5
   847c4:	9300      	str	r3, [sp, #0]
   847c6:	f000 fd7f 	bl	852c8 <_free_r>
   847ca:	9b00      	ldr	r3, [sp, #0]
   847cc:	6819      	ldr	r1, [r3, #0]
   847ce:	e6e0      	b.n	84592 <_malloc_r+0x2be>
   847d0:	2001      	movs	r0, #1
   847d2:	f04f 0900 	mov.w	r9, #0
   847d6:	e6bd      	b.n	84554 <_malloc_r+0x280>
   847d8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   847dc:	d805      	bhi.n	847ea <_malloc_r+0x516>
   847de:	0bda      	lsrs	r2, r3, #15
   847e0:	f102 0178 	add.w	r1, r2, #120	; 0x78
   847e4:	00c9      	lsls	r1, r1, #3
   847e6:	3277      	adds	r2, #119	; 0x77
   847e8:	e720      	b.n	8462c <_malloc_r+0x358>
   847ea:	f240 5154 	movw	r1, #1364	; 0x554
   847ee:	428a      	cmp	r2, r1
   847f0:	d805      	bhi.n	847fe <_malloc_r+0x52a>
   847f2:	0c9a      	lsrs	r2, r3, #18
   847f4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   847f8:	00c9      	lsls	r1, r1, #3
   847fa:	327c      	adds	r2, #124	; 0x7c
   847fc:	e716      	b.n	8462c <_malloc_r+0x358>
   847fe:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84802:	227e      	movs	r2, #126	; 0x7e
   84804:	e712      	b.n	8462c <_malloc_r+0x358>
   84806:	687b      	ldr	r3, [r7, #4]
   84808:	e780      	b.n	8470c <_malloc_r+0x438>
   8480a:	08f0      	lsrs	r0, r6, #3
   8480c:	f106 0308 	add.w	r3, r6, #8
   84810:	e60e      	b.n	84430 <_malloc_r+0x15c>
   84812:	bf00      	nop
   84814:	20070fe4 	.word	0x20070fe4

00084818 <__ascii_mbtowc>:
   84818:	b082      	sub	sp, #8
   8481a:	b149      	cbz	r1, 84830 <__ascii_mbtowc+0x18>
   8481c:	b15a      	cbz	r2, 84836 <__ascii_mbtowc+0x1e>
   8481e:	b16b      	cbz	r3, 8483c <__ascii_mbtowc+0x24>
   84820:	7813      	ldrb	r3, [r2, #0]
   84822:	600b      	str	r3, [r1, #0]
   84824:	7812      	ldrb	r2, [r2, #0]
   84826:	1c10      	adds	r0, r2, #0
   84828:	bf18      	it	ne
   8482a:	2001      	movne	r0, #1
   8482c:	b002      	add	sp, #8
   8482e:	4770      	bx	lr
   84830:	a901      	add	r1, sp, #4
   84832:	2a00      	cmp	r2, #0
   84834:	d1f3      	bne.n	8481e <__ascii_mbtowc+0x6>
   84836:	4610      	mov	r0, r2
   84838:	b002      	add	sp, #8
   8483a:	4770      	bx	lr
   8483c:	f06f 0001 	mvn.w	r0, #1
   84840:	e7f4      	b.n	8482c <__ascii_mbtowc+0x14>
   84842:	bf00      	nop

00084844 <memchr>:
   84844:	0783      	lsls	r3, r0, #30
   84846:	b470      	push	{r4, r5, r6}
   84848:	b2cd      	uxtb	r5, r1
   8484a:	d03d      	beq.n	848c8 <memchr+0x84>
   8484c:	1e54      	subs	r4, r2, #1
   8484e:	b30a      	cbz	r2, 84894 <memchr+0x50>
   84850:	7803      	ldrb	r3, [r0, #0]
   84852:	42ab      	cmp	r3, r5
   84854:	d01f      	beq.n	84896 <memchr+0x52>
   84856:	1c43      	adds	r3, r0, #1
   84858:	e005      	b.n	84866 <memchr+0x22>
   8485a:	f114 34ff 	adds.w	r4, r4, #4294967295
   8485e:	d319      	bcc.n	84894 <memchr+0x50>
   84860:	7802      	ldrb	r2, [r0, #0]
   84862:	42aa      	cmp	r2, r5
   84864:	d017      	beq.n	84896 <memchr+0x52>
   84866:	f013 0f03 	tst.w	r3, #3
   8486a:	4618      	mov	r0, r3
   8486c:	f103 0301 	add.w	r3, r3, #1
   84870:	d1f3      	bne.n	8485a <memchr+0x16>
   84872:	2c03      	cmp	r4, #3
   84874:	d811      	bhi.n	8489a <memchr+0x56>
   84876:	b34c      	cbz	r4, 848cc <memchr+0x88>
   84878:	7803      	ldrb	r3, [r0, #0]
   8487a:	42ab      	cmp	r3, r5
   8487c:	d00b      	beq.n	84896 <memchr+0x52>
   8487e:	4404      	add	r4, r0
   84880:	1c43      	adds	r3, r0, #1
   84882:	e002      	b.n	8488a <memchr+0x46>
   84884:	7802      	ldrb	r2, [r0, #0]
   84886:	42aa      	cmp	r2, r5
   84888:	d005      	beq.n	84896 <memchr+0x52>
   8488a:	429c      	cmp	r4, r3
   8488c:	4618      	mov	r0, r3
   8488e:	f103 0301 	add.w	r3, r3, #1
   84892:	d1f7      	bne.n	84884 <memchr+0x40>
   84894:	2000      	movs	r0, #0
   84896:	bc70      	pop	{r4, r5, r6}
   84898:	4770      	bx	lr
   8489a:	0209      	lsls	r1, r1, #8
   8489c:	b289      	uxth	r1, r1
   8489e:	4329      	orrs	r1, r5
   848a0:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   848a4:	6803      	ldr	r3, [r0, #0]
   848a6:	4606      	mov	r6, r0
   848a8:	404b      	eors	r3, r1
   848aa:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   848ae:	ea22 0303 	bic.w	r3, r2, r3
   848b2:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   848b6:	f100 0004 	add.w	r0, r0, #4
   848ba:	d103      	bne.n	848c4 <memchr+0x80>
   848bc:	3c04      	subs	r4, #4
   848be:	2c03      	cmp	r4, #3
   848c0:	d8f0      	bhi.n	848a4 <memchr+0x60>
   848c2:	e7d8      	b.n	84876 <memchr+0x32>
   848c4:	4630      	mov	r0, r6
   848c6:	e7d7      	b.n	84878 <memchr+0x34>
   848c8:	4614      	mov	r4, r2
   848ca:	e7d2      	b.n	84872 <memchr+0x2e>
   848cc:	4620      	mov	r0, r4
   848ce:	e7e2      	b.n	84896 <memchr+0x52>

000848d0 <memcpy>:
   848d0:	4684      	mov	ip, r0
   848d2:	ea41 0300 	orr.w	r3, r1, r0
   848d6:	f013 0303 	ands.w	r3, r3, #3
   848da:	d149      	bne.n	84970 <memcpy+0xa0>
   848dc:	3a40      	subs	r2, #64	; 0x40
   848de:	d323      	bcc.n	84928 <memcpy+0x58>
   848e0:	680b      	ldr	r3, [r1, #0]
   848e2:	6003      	str	r3, [r0, #0]
   848e4:	684b      	ldr	r3, [r1, #4]
   848e6:	6043      	str	r3, [r0, #4]
   848e8:	688b      	ldr	r3, [r1, #8]
   848ea:	6083      	str	r3, [r0, #8]
   848ec:	68cb      	ldr	r3, [r1, #12]
   848ee:	60c3      	str	r3, [r0, #12]
   848f0:	690b      	ldr	r3, [r1, #16]
   848f2:	6103      	str	r3, [r0, #16]
   848f4:	694b      	ldr	r3, [r1, #20]
   848f6:	6143      	str	r3, [r0, #20]
   848f8:	698b      	ldr	r3, [r1, #24]
   848fa:	6183      	str	r3, [r0, #24]
   848fc:	69cb      	ldr	r3, [r1, #28]
   848fe:	61c3      	str	r3, [r0, #28]
   84900:	6a0b      	ldr	r3, [r1, #32]
   84902:	6203      	str	r3, [r0, #32]
   84904:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   84906:	6243      	str	r3, [r0, #36]	; 0x24
   84908:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8490a:	6283      	str	r3, [r0, #40]	; 0x28
   8490c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8490e:	62c3      	str	r3, [r0, #44]	; 0x2c
   84910:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   84912:	6303      	str	r3, [r0, #48]	; 0x30
   84914:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   84916:	6343      	str	r3, [r0, #52]	; 0x34
   84918:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8491a:	6383      	str	r3, [r0, #56]	; 0x38
   8491c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8491e:	63c3      	str	r3, [r0, #60]	; 0x3c
   84920:	3040      	adds	r0, #64	; 0x40
   84922:	3140      	adds	r1, #64	; 0x40
   84924:	3a40      	subs	r2, #64	; 0x40
   84926:	d2db      	bcs.n	848e0 <memcpy+0x10>
   84928:	3230      	adds	r2, #48	; 0x30
   8492a:	d30b      	bcc.n	84944 <memcpy+0x74>
   8492c:	680b      	ldr	r3, [r1, #0]
   8492e:	6003      	str	r3, [r0, #0]
   84930:	684b      	ldr	r3, [r1, #4]
   84932:	6043      	str	r3, [r0, #4]
   84934:	688b      	ldr	r3, [r1, #8]
   84936:	6083      	str	r3, [r0, #8]
   84938:	68cb      	ldr	r3, [r1, #12]
   8493a:	60c3      	str	r3, [r0, #12]
   8493c:	3010      	adds	r0, #16
   8493e:	3110      	adds	r1, #16
   84940:	3a10      	subs	r2, #16
   84942:	d2f3      	bcs.n	8492c <memcpy+0x5c>
   84944:	320c      	adds	r2, #12
   84946:	d305      	bcc.n	84954 <memcpy+0x84>
   84948:	f851 3b04 	ldr.w	r3, [r1], #4
   8494c:	f840 3b04 	str.w	r3, [r0], #4
   84950:	3a04      	subs	r2, #4
   84952:	d2f9      	bcs.n	84948 <memcpy+0x78>
   84954:	3204      	adds	r2, #4
   84956:	d008      	beq.n	8496a <memcpy+0x9a>
   84958:	07d2      	lsls	r2, r2, #31
   8495a:	bf1c      	itt	ne
   8495c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84960:	f800 3b01 	strbne.w	r3, [r0], #1
   84964:	d301      	bcc.n	8496a <memcpy+0x9a>
   84966:	880b      	ldrh	r3, [r1, #0]
   84968:	8003      	strh	r3, [r0, #0]
   8496a:	4660      	mov	r0, ip
   8496c:	4770      	bx	lr
   8496e:	bf00      	nop
   84970:	2a08      	cmp	r2, #8
   84972:	d313      	bcc.n	8499c <memcpy+0xcc>
   84974:	078b      	lsls	r3, r1, #30
   84976:	d0b1      	beq.n	848dc <memcpy+0xc>
   84978:	f010 0303 	ands.w	r3, r0, #3
   8497c:	d0ae      	beq.n	848dc <memcpy+0xc>
   8497e:	f1c3 0304 	rsb	r3, r3, #4
   84982:	1ad2      	subs	r2, r2, r3
   84984:	07db      	lsls	r3, r3, #31
   84986:	bf1c      	itt	ne
   84988:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8498c:	f800 3b01 	strbne.w	r3, [r0], #1
   84990:	d3a4      	bcc.n	848dc <memcpy+0xc>
   84992:	f831 3b02 	ldrh.w	r3, [r1], #2
   84996:	f820 3b02 	strh.w	r3, [r0], #2
   8499a:	e79f      	b.n	848dc <memcpy+0xc>
   8499c:	3a04      	subs	r2, #4
   8499e:	d3d9      	bcc.n	84954 <memcpy+0x84>
   849a0:	3a01      	subs	r2, #1
   849a2:	f811 3b01 	ldrb.w	r3, [r1], #1
   849a6:	f800 3b01 	strb.w	r3, [r0], #1
   849aa:	d2f9      	bcs.n	849a0 <memcpy+0xd0>
   849ac:	780b      	ldrb	r3, [r1, #0]
   849ae:	7003      	strb	r3, [r0, #0]
   849b0:	784b      	ldrb	r3, [r1, #1]
   849b2:	7043      	strb	r3, [r0, #1]
   849b4:	788b      	ldrb	r3, [r1, #2]
   849b6:	7083      	strb	r3, [r0, #2]
   849b8:	4660      	mov	r0, ip
   849ba:	4770      	bx	lr

000849bc <__malloc_lock>:
   849bc:	4801      	ldr	r0, [pc, #4]	; (849c4 <__malloc_lock+0x8>)
   849be:	f7ff bc85 	b.w	842cc <__retarget_lock_acquire_recursive>
   849c2:	bf00      	nop
   849c4:	200714ac 	.word	0x200714ac

000849c8 <__malloc_unlock>:
   849c8:	4801      	ldr	r0, [pc, #4]	; (849d0 <__malloc_unlock+0x8>)
   849ca:	f7ff bc81 	b.w	842d0 <__retarget_lock_release_recursive>
   849ce:	bf00      	nop
   849d0:	200714ac 	.word	0x200714ac

000849d4 <_Balloc>:
   849d4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   849d6:	b570      	push	{r4, r5, r6, lr}
   849d8:	4605      	mov	r5, r0
   849da:	460c      	mov	r4, r1
   849dc:	b14b      	cbz	r3, 849f2 <_Balloc+0x1e>
   849de:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   849e2:	b180      	cbz	r0, 84a06 <_Balloc+0x32>
   849e4:	6802      	ldr	r2, [r0, #0]
   849e6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   849ea:	2300      	movs	r3, #0
   849ec:	6103      	str	r3, [r0, #16]
   849ee:	60c3      	str	r3, [r0, #12]
   849f0:	bd70      	pop	{r4, r5, r6, pc}
   849f2:	2221      	movs	r2, #33	; 0x21
   849f4:	2104      	movs	r1, #4
   849f6:	f000 fbe7 	bl	851c8 <_calloc_r>
   849fa:	64e8      	str	r0, [r5, #76]	; 0x4c
   849fc:	4603      	mov	r3, r0
   849fe:	2800      	cmp	r0, #0
   84a00:	d1ed      	bne.n	849de <_Balloc+0xa>
   84a02:	2000      	movs	r0, #0
   84a04:	bd70      	pop	{r4, r5, r6, pc}
   84a06:	2101      	movs	r1, #1
   84a08:	fa01 f604 	lsl.w	r6, r1, r4
   84a0c:	1d72      	adds	r2, r6, #5
   84a0e:	4628      	mov	r0, r5
   84a10:	0092      	lsls	r2, r2, #2
   84a12:	f000 fbd9 	bl	851c8 <_calloc_r>
   84a16:	2800      	cmp	r0, #0
   84a18:	d0f3      	beq.n	84a02 <_Balloc+0x2e>
   84a1a:	6044      	str	r4, [r0, #4]
   84a1c:	6086      	str	r6, [r0, #8]
   84a1e:	e7e4      	b.n	849ea <_Balloc+0x16>

00084a20 <_Bfree>:
   84a20:	b131      	cbz	r1, 84a30 <_Bfree+0x10>
   84a22:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84a24:	684a      	ldr	r2, [r1, #4]
   84a26:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   84a2a:	6008      	str	r0, [r1, #0]
   84a2c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   84a30:	4770      	bx	lr
   84a32:	bf00      	nop

00084a34 <__multadd>:
   84a34:	b5f0      	push	{r4, r5, r6, r7, lr}
   84a36:	460c      	mov	r4, r1
   84a38:	4605      	mov	r5, r0
   84a3a:	f04f 0e00 	mov.w	lr, #0
   84a3e:	690e      	ldr	r6, [r1, #16]
   84a40:	b083      	sub	sp, #12
   84a42:	f101 0714 	add.w	r7, r1, #20
   84a46:	6838      	ldr	r0, [r7, #0]
   84a48:	f10e 0e01 	add.w	lr, lr, #1
   84a4c:	b281      	uxth	r1, r0
   84a4e:	fb02 3301 	mla	r3, r2, r1, r3
   84a52:	0c01      	lsrs	r1, r0, #16
   84a54:	0c18      	lsrs	r0, r3, #16
   84a56:	fb02 0101 	mla	r1, r2, r1, r0
   84a5a:	b29b      	uxth	r3, r3
   84a5c:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   84a60:	4576      	cmp	r6, lr
   84a62:	f847 3b04 	str.w	r3, [r7], #4
   84a66:	ea4f 4311 	mov.w	r3, r1, lsr #16
   84a6a:	dcec      	bgt.n	84a46 <__multadd+0x12>
   84a6c:	b13b      	cbz	r3, 84a7e <__multadd+0x4a>
   84a6e:	68a2      	ldr	r2, [r4, #8]
   84a70:	4296      	cmp	r6, r2
   84a72:	da07      	bge.n	84a84 <__multadd+0x50>
   84a74:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84a78:	3601      	adds	r6, #1
   84a7a:	6153      	str	r3, [r2, #20]
   84a7c:	6126      	str	r6, [r4, #16]
   84a7e:	4620      	mov	r0, r4
   84a80:	b003      	add	sp, #12
   84a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84a84:	6861      	ldr	r1, [r4, #4]
   84a86:	4628      	mov	r0, r5
   84a88:	3101      	adds	r1, #1
   84a8a:	9301      	str	r3, [sp, #4]
   84a8c:	f7ff ffa2 	bl	849d4 <_Balloc>
   84a90:	4607      	mov	r7, r0
   84a92:	6922      	ldr	r2, [r4, #16]
   84a94:	f104 010c 	add.w	r1, r4, #12
   84a98:	3202      	adds	r2, #2
   84a9a:	0092      	lsls	r2, r2, #2
   84a9c:	300c      	adds	r0, #12
   84a9e:	f7ff ff17 	bl	848d0 <memcpy>
   84aa2:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84aa4:	6861      	ldr	r1, [r4, #4]
   84aa6:	9b01      	ldr	r3, [sp, #4]
   84aa8:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84aac:	6020      	str	r0, [r4, #0]
   84aae:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   84ab2:	463c      	mov	r4, r7
   84ab4:	e7de      	b.n	84a74 <__multadd+0x40>
   84ab6:	bf00      	nop

00084ab8 <__hi0bits>:
   84ab8:	0c02      	lsrs	r2, r0, #16
   84aba:	0412      	lsls	r2, r2, #16
   84abc:	4603      	mov	r3, r0
   84abe:	b9b2      	cbnz	r2, 84aee <__hi0bits+0x36>
   84ac0:	0403      	lsls	r3, r0, #16
   84ac2:	2010      	movs	r0, #16
   84ac4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84ac8:	bf04      	itt	eq
   84aca:	021b      	lsleq	r3, r3, #8
   84acc:	3008      	addeq	r0, #8
   84ace:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   84ad2:	bf04      	itt	eq
   84ad4:	011b      	lsleq	r3, r3, #4
   84ad6:	3004      	addeq	r0, #4
   84ad8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84adc:	bf04      	itt	eq
   84ade:	009b      	lsleq	r3, r3, #2
   84ae0:	3002      	addeq	r0, #2
   84ae2:	2b00      	cmp	r3, #0
   84ae4:	db02      	blt.n	84aec <__hi0bits+0x34>
   84ae6:	005b      	lsls	r3, r3, #1
   84ae8:	d403      	bmi.n	84af2 <__hi0bits+0x3a>
   84aea:	2020      	movs	r0, #32
   84aec:	4770      	bx	lr
   84aee:	2000      	movs	r0, #0
   84af0:	e7e8      	b.n	84ac4 <__hi0bits+0xc>
   84af2:	3001      	adds	r0, #1
   84af4:	4770      	bx	lr
   84af6:	bf00      	nop

00084af8 <__lo0bits>:
   84af8:	6803      	ldr	r3, [r0, #0]
   84afa:	4601      	mov	r1, r0
   84afc:	f013 0207 	ands.w	r2, r3, #7
   84b00:	d007      	beq.n	84b12 <__lo0bits+0x1a>
   84b02:	07da      	lsls	r2, r3, #31
   84b04:	d421      	bmi.n	84b4a <__lo0bits+0x52>
   84b06:	0798      	lsls	r0, r3, #30
   84b08:	d421      	bmi.n	84b4e <__lo0bits+0x56>
   84b0a:	089b      	lsrs	r3, r3, #2
   84b0c:	600b      	str	r3, [r1, #0]
   84b0e:	2002      	movs	r0, #2
   84b10:	4770      	bx	lr
   84b12:	b298      	uxth	r0, r3
   84b14:	b198      	cbz	r0, 84b3e <__lo0bits+0x46>
   84b16:	4610      	mov	r0, r2
   84b18:	f013 0fff 	tst.w	r3, #255	; 0xff
   84b1c:	bf04      	itt	eq
   84b1e:	0a1b      	lsreq	r3, r3, #8
   84b20:	3008      	addeq	r0, #8
   84b22:	071a      	lsls	r2, r3, #28
   84b24:	bf04      	itt	eq
   84b26:	091b      	lsreq	r3, r3, #4
   84b28:	3004      	addeq	r0, #4
   84b2a:	079a      	lsls	r2, r3, #30
   84b2c:	bf04      	itt	eq
   84b2e:	089b      	lsreq	r3, r3, #2
   84b30:	3002      	addeq	r0, #2
   84b32:	07da      	lsls	r2, r3, #31
   84b34:	d407      	bmi.n	84b46 <__lo0bits+0x4e>
   84b36:	085b      	lsrs	r3, r3, #1
   84b38:	d104      	bne.n	84b44 <__lo0bits+0x4c>
   84b3a:	2020      	movs	r0, #32
   84b3c:	4770      	bx	lr
   84b3e:	0c1b      	lsrs	r3, r3, #16
   84b40:	2010      	movs	r0, #16
   84b42:	e7e9      	b.n	84b18 <__lo0bits+0x20>
   84b44:	3001      	adds	r0, #1
   84b46:	600b      	str	r3, [r1, #0]
   84b48:	4770      	bx	lr
   84b4a:	2000      	movs	r0, #0
   84b4c:	4770      	bx	lr
   84b4e:	085b      	lsrs	r3, r3, #1
   84b50:	600b      	str	r3, [r1, #0]
   84b52:	2001      	movs	r0, #1
   84b54:	4770      	bx	lr
   84b56:	bf00      	nop

00084b58 <__i2b>:
   84b58:	b510      	push	{r4, lr}
   84b5a:	460c      	mov	r4, r1
   84b5c:	2101      	movs	r1, #1
   84b5e:	f7ff ff39 	bl	849d4 <_Balloc>
   84b62:	2201      	movs	r2, #1
   84b64:	6144      	str	r4, [r0, #20]
   84b66:	6102      	str	r2, [r0, #16]
   84b68:	bd10      	pop	{r4, pc}
   84b6a:	bf00      	nop

00084b6c <__multiply>:
   84b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84b70:	690c      	ldr	r4, [r1, #16]
   84b72:	6915      	ldr	r5, [r2, #16]
   84b74:	b083      	sub	sp, #12
   84b76:	42ac      	cmp	r4, r5
   84b78:	468b      	mov	fp, r1
   84b7a:	4616      	mov	r6, r2
   84b7c:	da04      	bge.n	84b88 <__multiply+0x1c>
   84b7e:	4622      	mov	r2, r4
   84b80:	46b3      	mov	fp, r6
   84b82:	462c      	mov	r4, r5
   84b84:	460e      	mov	r6, r1
   84b86:	4615      	mov	r5, r2
   84b88:	f8db 3008 	ldr.w	r3, [fp, #8]
   84b8c:	eb04 0805 	add.w	r8, r4, r5
   84b90:	f8db 1004 	ldr.w	r1, [fp, #4]
   84b94:	4598      	cmp	r8, r3
   84b96:	bfc8      	it	gt
   84b98:	3101      	addgt	r1, #1
   84b9a:	f7ff ff1b 	bl	849d4 <_Balloc>
   84b9e:	f100 0914 	add.w	r9, r0, #20
   84ba2:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   84ba6:	45d1      	cmp	r9, sl
   84ba8:	9000      	str	r0, [sp, #0]
   84baa:	d205      	bcs.n	84bb8 <__multiply+0x4c>
   84bac:	464b      	mov	r3, r9
   84bae:	2100      	movs	r1, #0
   84bb0:	f843 1b04 	str.w	r1, [r3], #4
   84bb4:	459a      	cmp	sl, r3
   84bb6:	d8fb      	bhi.n	84bb0 <__multiply+0x44>
   84bb8:	f106 0c14 	add.w	ip, r6, #20
   84bbc:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84bc0:	f10b 0b14 	add.w	fp, fp, #20
   84bc4:	459c      	cmp	ip, r3
   84bc6:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84bca:	d24b      	bcs.n	84c64 <__multiply+0xf8>
   84bcc:	f8cd a004 	str.w	sl, [sp, #4]
   84bd0:	469a      	mov	sl, r3
   84bd2:	f8dc 5000 	ldr.w	r5, [ip]
   84bd6:	b2af      	uxth	r7, r5
   84bd8:	b1e7      	cbz	r7, 84c14 <__multiply+0xa8>
   84bda:	464d      	mov	r5, r9
   84bdc:	465e      	mov	r6, fp
   84bde:	2100      	movs	r1, #0
   84be0:	f856 2b04 	ldr.w	r2, [r6], #4
   84be4:	6828      	ldr	r0, [r5, #0]
   84be6:	b293      	uxth	r3, r2
   84be8:	b284      	uxth	r4, r0
   84bea:	0c12      	lsrs	r2, r2, #16
   84bec:	fb07 4303 	mla	r3, r7, r3, r4
   84bf0:	0c00      	lsrs	r0, r0, #16
   84bf2:	fb07 0202 	mla	r2, r7, r2, r0
   84bf6:	440b      	add	r3, r1
   84bf8:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   84bfc:	b29b      	uxth	r3, r3
   84bfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   84c02:	45b6      	cmp	lr, r6
   84c04:	f845 3b04 	str.w	r3, [r5], #4
   84c08:	ea4f 4111 	mov.w	r1, r1, lsr #16
   84c0c:	d8e8      	bhi.n	84be0 <__multiply+0x74>
   84c0e:	6029      	str	r1, [r5, #0]
   84c10:	f8dc 5000 	ldr.w	r5, [ip]
   84c14:	0c2d      	lsrs	r5, r5, #16
   84c16:	d01d      	beq.n	84c54 <__multiply+0xe8>
   84c18:	f8d9 3000 	ldr.w	r3, [r9]
   84c1c:	4648      	mov	r0, r9
   84c1e:	461c      	mov	r4, r3
   84c20:	4659      	mov	r1, fp
   84c22:	2200      	movs	r2, #0
   84c24:	880e      	ldrh	r6, [r1, #0]
   84c26:	0c24      	lsrs	r4, r4, #16
   84c28:	fb05 4406 	mla	r4, r5, r6, r4
   84c2c:	b29b      	uxth	r3, r3
   84c2e:	4422      	add	r2, r4
   84c30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84c34:	f840 3b04 	str.w	r3, [r0], #4
   84c38:	f851 3b04 	ldr.w	r3, [r1], #4
   84c3c:	6804      	ldr	r4, [r0, #0]
   84c3e:	0c1b      	lsrs	r3, r3, #16
   84c40:	b2a6      	uxth	r6, r4
   84c42:	fb05 6303 	mla	r3, r5, r3, r6
   84c46:	458e      	cmp	lr, r1
   84c48:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   84c4c:	ea4f 4213 	mov.w	r2, r3, lsr #16
   84c50:	d8e8      	bhi.n	84c24 <__multiply+0xb8>
   84c52:	6003      	str	r3, [r0, #0]
   84c54:	f10c 0c04 	add.w	ip, ip, #4
   84c58:	45e2      	cmp	sl, ip
   84c5a:	f109 0904 	add.w	r9, r9, #4
   84c5e:	d8b8      	bhi.n	84bd2 <__multiply+0x66>
   84c60:	f8dd a004 	ldr.w	sl, [sp, #4]
   84c64:	f1b8 0f00 	cmp.w	r8, #0
   84c68:	dd0b      	ble.n	84c82 <__multiply+0x116>
   84c6a:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   84c6e:	f1aa 0a04 	sub.w	sl, sl, #4
   84c72:	b11b      	cbz	r3, 84c7c <__multiply+0x110>
   84c74:	e005      	b.n	84c82 <__multiply+0x116>
   84c76:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   84c7a:	b913      	cbnz	r3, 84c82 <__multiply+0x116>
   84c7c:	f1b8 0801 	subs.w	r8, r8, #1
   84c80:	d1f9      	bne.n	84c76 <__multiply+0x10a>
   84c82:	9800      	ldr	r0, [sp, #0]
   84c84:	f8c0 8010 	str.w	r8, [r0, #16]
   84c88:	b003      	add	sp, #12
   84c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84c8e:	bf00      	nop

00084c90 <__pow5mult>:
   84c90:	f012 0303 	ands.w	r3, r2, #3
   84c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84c98:	4614      	mov	r4, r2
   84c9a:	4607      	mov	r7, r0
   84c9c:	d12e      	bne.n	84cfc <__pow5mult+0x6c>
   84c9e:	460d      	mov	r5, r1
   84ca0:	10a4      	asrs	r4, r4, #2
   84ca2:	d01c      	beq.n	84cde <__pow5mult+0x4e>
   84ca4:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   84ca6:	b396      	cbz	r6, 84d0e <__pow5mult+0x7e>
   84ca8:	07e3      	lsls	r3, r4, #31
   84caa:	f04f 0800 	mov.w	r8, #0
   84cae:	d406      	bmi.n	84cbe <__pow5mult+0x2e>
   84cb0:	1064      	asrs	r4, r4, #1
   84cb2:	d014      	beq.n	84cde <__pow5mult+0x4e>
   84cb4:	6830      	ldr	r0, [r6, #0]
   84cb6:	b1a8      	cbz	r0, 84ce4 <__pow5mult+0x54>
   84cb8:	4606      	mov	r6, r0
   84cba:	07e3      	lsls	r3, r4, #31
   84cbc:	d5f8      	bpl.n	84cb0 <__pow5mult+0x20>
   84cbe:	4632      	mov	r2, r6
   84cc0:	4629      	mov	r1, r5
   84cc2:	4638      	mov	r0, r7
   84cc4:	f7ff ff52 	bl	84b6c <__multiply>
   84cc8:	b1b5      	cbz	r5, 84cf8 <__pow5mult+0x68>
   84cca:	686a      	ldr	r2, [r5, #4]
   84ccc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84cce:	1064      	asrs	r4, r4, #1
   84cd0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84cd4:	6029      	str	r1, [r5, #0]
   84cd6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84cda:	4605      	mov	r5, r0
   84cdc:	d1ea      	bne.n	84cb4 <__pow5mult+0x24>
   84cde:	4628      	mov	r0, r5
   84ce0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84ce4:	4632      	mov	r2, r6
   84ce6:	4631      	mov	r1, r6
   84ce8:	4638      	mov	r0, r7
   84cea:	f7ff ff3f 	bl	84b6c <__multiply>
   84cee:	6030      	str	r0, [r6, #0]
   84cf0:	f8c0 8000 	str.w	r8, [r0]
   84cf4:	4606      	mov	r6, r0
   84cf6:	e7e0      	b.n	84cba <__pow5mult+0x2a>
   84cf8:	4605      	mov	r5, r0
   84cfa:	e7d9      	b.n	84cb0 <__pow5mult+0x20>
   84cfc:	4a0b      	ldr	r2, [pc, #44]	; (84d2c <__pow5mult+0x9c>)
   84cfe:	3b01      	subs	r3, #1
   84d00:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   84d04:	2300      	movs	r3, #0
   84d06:	f7ff fe95 	bl	84a34 <__multadd>
   84d0a:	4605      	mov	r5, r0
   84d0c:	e7c8      	b.n	84ca0 <__pow5mult+0x10>
   84d0e:	2101      	movs	r1, #1
   84d10:	4638      	mov	r0, r7
   84d12:	f7ff fe5f 	bl	849d4 <_Balloc>
   84d16:	f240 2171 	movw	r1, #625	; 0x271
   84d1a:	2201      	movs	r2, #1
   84d1c:	2300      	movs	r3, #0
   84d1e:	6141      	str	r1, [r0, #20]
   84d20:	6102      	str	r2, [r0, #16]
   84d22:	4606      	mov	r6, r0
   84d24:	64b8      	str	r0, [r7, #72]	; 0x48
   84d26:	6003      	str	r3, [r0, #0]
   84d28:	e7be      	b.n	84ca8 <__pow5mult+0x18>
   84d2a:	bf00      	nop
   84d2c:	00086858 	.word	0x00086858

00084d30 <__lshift>:
   84d30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84d34:	690b      	ldr	r3, [r1, #16]
   84d36:	1154      	asrs	r4, r2, #5
   84d38:	eb04 0803 	add.w	r8, r4, r3
   84d3c:	688b      	ldr	r3, [r1, #8]
   84d3e:	f108 0501 	add.w	r5, r8, #1
   84d42:	429d      	cmp	r5, r3
   84d44:	460e      	mov	r6, r1
   84d46:	4691      	mov	r9, r2
   84d48:	4607      	mov	r7, r0
   84d4a:	6849      	ldr	r1, [r1, #4]
   84d4c:	dd04      	ble.n	84d58 <__lshift+0x28>
   84d4e:	005b      	lsls	r3, r3, #1
   84d50:	429d      	cmp	r5, r3
   84d52:	f101 0101 	add.w	r1, r1, #1
   84d56:	dcfa      	bgt.n	84d4e <__lshift+0x1e>
   84d58:	4638      	mov	r0, r7
   84d5a:	f7ff fe3b 	bl	849d4 <_Balloc>
   84d5e:	2c00      	cmp	r4, #0
   84d60:	f100 0314 	add.w	r3, r0, #20
   84d64:	dd06      	ble.n	84d74 <__lshift+0x44>
   84d66:	2100      	movs	r1, #0
   84d68:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84d6c:	f843 1b04 	str.w	r1, [r3], #4
   84d70:	429a      	cmp	r2, r3
   84d72:	d1fb      	bne.n	84d6c <__lshift+0x3c>
   84d74:	6934      	ldr	r4, [r6, #16]
   84d76:	f106 0114 	add.w	r1, r6, #20
   84d7a:	f019 091f 	ands.w	r9, r9, #31
   84d7e:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   84d82:	d01d      	beq.n	84dc0 <__lshift+0x90>
   84d84:	2200      	movs	r2, #0
   84d86:	f1c9 0c20 	rsb	ip, r9, #32
   84d8a:	680c      	ldr	r4, [r1, #0]
   84d8c:	fa04 f409 	lsl.w	r4, r4, r9
   84d90:	4314      	orrs	r4, r2
   84d92:	f843 4b04 	str.w	r4, [r3], #4
   84d96:	f851 2b04 	ldr.w	r2, [r1], #4
   84d9a:	458e      	cmp	lr, r1
   84d9c:	fa22 f20c 	lsr.w	r2, r2, ip
   84da0:	d8f3      	bhi.n	84d8a <__lshift+0x5a>
   84da2:	601a      	str	r2, [r3, #0]
   84da4:	b10a      	cbz	r2, 84daa <__lshift+0x7a>
   84da6:	f108 0502 	add.w	r5, r8, #2
   84daa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84dac:	6872      	ldr	r2, [r6, #4]
   84dae:	3d01      	subs	r5, #1
   84db0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84db4:	6105      	str	r5, [r0, #16]
   84db6:	6031      	str	r1, [r6, #0]
   84db8:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84dbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84dc0:	3b04      	subs	r3, #4
   84dc2:	f851 2b04 	ldr.w	r2, [r1], #4
   84dc6:	458e      	cmp	lr, r1
   84dc8:	f843 2f04 	str.w	r2, [r3, #4]!
   84dcc:	d8f9      	bhi.n	84dc2 <__lshift+0x92>
   84dce:	e7ec      	b.n	84daa <__lshift+0x7a>

00084dd0 <__mcmp>:
   84dd0:	b430      	push	{r4, r5}
   84dd2:	690b      	ldr	r3, [r1, #16]
   84dd4:	4605      	mov	r5, r0
   84dd6:	6900      	ldr	r0, [r0, #16]
   84dd8:	1ac0      	subs	r0, r0, r3
   84dda:	d10f      	bne.n	84dfc <__mcmp+0x2c>
   84ddc:	009b      	lsls	r3, r3, #2
   84dde:	3514      	adds	r5, #20
   84de0:	3114      	adds	r1, #20
   84de2:	4419      	add	r1, r3
   84de4:	442b      	add	r3, r5
   84de6:	e001      	b.n	84dec <__mcmp+0x1c>
   84de8:	429d      	cmp	r5, r3
   84dea:	d207      	bcs.n	84dfc <__mcmp+0x2c>
   84dec:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   84df0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84df4:	4294      	cmp	r4, r2
   84df6:	d0f7      	beq.n	84de8 <__mcmp+0x18>
   84df8:	d302      	bcc.n	84e00 <__mcmp+0x30>
   84dfa:	2001      	movs	r0, #1
   84dfc:	bc30      	pop	{r4, r5}
   84dfe:	4770      	bx	lr
   84e00:	f04f 30ff 	mov.w	r0, #4294967295
   84e04:	e7fa      	b.n	84dfc <__mcmp+0x2c>
   84e06:	bf00      	nop

00084e08 <__mdiff>:
   84e08:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84e0c:	690c      	ldr	r4, [r1, #16]
   84e0e:	4689      	mov	r9, r1
   84e10:	6911      	ldr	r1, [r2, #16]
   84e12:	4692      	mov	sl, r2
   84e14:	1a64      	subs	r4, r4, r1
   84e16:	2c00      	cmp	r4, #0
   84e18:	d117      	bne.n	84e4a <__mdiff+0x42>
   84e1a:	0089      	lsls	r1, r1, #2
   84e1c:	f109 0714 	add.w	r7, r9, #20
   84e20:	f102 0614 	add.w	r6, r2, #20
   84e24:	187b      	adds	r3, r7, r1
   84e26:	4431      	add	r1, r6
   84e28:	e001      	b.n	84e2e <__mdiff+0x26>
   84e2a:	429f      	cmp	r7, r3
   84e2c:	d265      	bcs.n	84efa <__mdiff+0xf2>
   84e2e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   84e32:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84e36:	4295      	cmp	r5, r2
   84e38:	d0f7      	beq.n	84e2a <__mdiff+0x22>
   84e3a:	d267      	bcs.n	84f0c <__mdiff+0x104>
   84e3c:	464b      	mov	r3, r9
   84e3e:	46bb      	mov	fp, r7
   84e40:	46d1      	mov	r9, sl
   84e42:	4637      	mov	r7, r6
   84e44:	469a      	mov	sl, r3
   84e46:	2401      	movs	r4, #1
   84e48:	e005      	b.n	84e56 <__mdiff+0x4e>
   84e4a:	db61      	blt.n	84f10 <__mdiff+0x108>
   84e4c:	2400      	movs	r4, #0
   84e4e:	f109 0714 	add.w	r7, r9, #20
   84e52:	f10a 0b14 	add.w	fp, sl, #20
   84e56:	f8d9 1004 	ldr.w	r1, [r9, #4]
   84e5a:	f7ff fdbb 	bl	849d4 <_Balloc>
   84e5e:	465d      	mov	r5, fp
   84e60:	f04f 0800 	mov.w	r8, #0
   84e64:	f8d9 e010 	ldr.w	lr, [r9, #16]
   84e68:	f8da 3010 	ldr.w	r3, [sl, #16]
   84e6c:	463e      	mov	r6, r7
   84e6e:	60c4      	str	r4, [r0, #12]
   84e70:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   84e74:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   84e78:	f100 0414 	add.w	r4, r0, #20
   84e7c:	f856 9b04 	ldr.w	r9, [r6], #4
   84e80:	f855 2b04 	ldr.w	r2, [r5], #4
   84e84:	fa1f f389 	uxth.w	r3, r9
   84e88:	4443      	add	r3, r8
   84e8a:	fa1f f882 	uxth.w	r8, r2
   84e8e:	0c12      	lsrs	r2, r2, #16
   84e90:	eba3 0308 	sub.w	r3, r3, r8
   84e94:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   84e98:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84e9c:	b29b      	uxth	r3, r3
   84e9e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84ea2:	45ac      	cmp	ip, r5
   84ea4:	f844 3b04 	str.w	r3, [r4], #4
   84ea8:	ea4f 4822 	mov.w	r8, r2, asr #16
   84eac:	d8e6      	bhi.n	84e7c <__mdiff+0x74>
   84eae:	42b7      	cmp	r7, r6
   84eb0:	d917      	bls.n	84ee2 <__mdiff+0xda>
   84eb2:	46a4      	mov	ip, r4
   84eb4:	4635      	mov	r5, r6
   84eb6:	f855 3b04 	ldr.w	r3, [r5], #4
   84eba:	b299      	uxth	r1, r3
   84ebc:	4441      	add	r1, r8
   84ebe:	140a      	asrs	r2, r1, #16
   84ec0:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   84ec4:	b289      	uxth	r1, r1
   84ec6:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   84eca:	42af      	cmp	r7, r5
   84ecc:	f84c 3b04 	str.w	r3, [ip], #4
   84ed0:	ea4f 4822 	mov.w	r8, r2, asr #16
   84ed4:	d8ef      	bhi.n	84eb6 <__mdiff+0xae>
   84ed6:	43f6      	mvns	r6, r6
   84ed8:	4437      	add	r7, r6
   84eda:	f027 0703 	bic.w	r7, r7, #3
   84ede:	3704      	adds	r7, #4
   84ee0:	443c      	add	r4, r7
   84ee2:	3c04      	subs	r4, #4
   84ee4:	b92b      	cbnz	r3, 84ef2 <__mdiff+0xea>
   84ee6:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   84eea:	f10e 3eff 	add.w	lr, lr, #4294967295
   84eee:	2b00      	cmp	r3, #0
   84ef0:	d0f9      	beq.n	84ee6 <__mdiff+0xde>
   84ef2:	f8c0 e010 	str.w	lr, [r0, #16]
   84ef6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84efa:	2100      	movs	r1, #0
   84efc:	f7ff fd6a 	bl	849d4 <_Balloc>
   84f00:	2201      	movs	r2, #1
   84f02:	2300      	movs	r3, #0
   84f04:	6102      	str	r2, [r0, #16]
   84f06:	6143      	str	r3, [r0, #20]
   84f08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84f0c:	46b3      	mov	fp, r6
   84f0e:	e7a2      	b.n	84e56 <__mdiff+0x4e>
   84f10:	464b      	mov	r3, r9
   84f12:	f109 0b14 	add.w	fp, r9, #20
   84f16:	f102 0714 	add.w	r7, r2, #20
   84f1a:	4691      	mov	r9, r2
   84f1c:	2401      	movs	r4, #1
   84f1e:	469a      	mov	sl, r3
   84f20:	e799      	b.n	84e56 <__mdiff+0x4e>
   84f22:	bf00      	nop

00084f24 <__d2b>:
   84f24:	b5f0      	push	{r4, r5, r6, r7, lr}
   84f26:	2101      	movs	r1, #1
   84f28:	b083      	sub	sp, #12
   84f2a:	461c      	mov	r4, r3
   84f2c:	f3c3 550a 	ubfx	r5, r3, #20, #11
   84f30:	4616      	mov	r6, r2
   84f32:	f7ff fd4f 	bl	849d4 <_Balloc>
   84f36:	f3c4 0413 	ubfx	r4, r4, #0, #20
   84f3a:	4607      	mov	r7, r0
   84f3c:	b10d      	cbz	r5, 84f42 <__d2b+0x1e>
   84f3e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   84f42:	9401      	str	r4, [sp, #4]
   84f44:	b306      	cbz	r6, 84f88 <__d2b+0x64>
   84f46:	a802      	add	r0, sp, #8
   84f48:	f840 6d08 	str.w	r6, [r0, #-8]!
   84f4c:	f7ff fdd4 	bl	84af8 <__lo0bits>
   84f50:	2800      	cmp	r0, #0
   84f52:	d130      	bne.n	84fb6 <__d2b+0x92>
   84f54:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84f58:	617a      	str	r2, [r7, #20]
   84f5a:	2b00      	cmp	r3, #0
   84f5c:	bf0c      	ite	eq
   84f5e:	2101      	moveq	r1, #1
   84f60:	2102      	movne	r1, #2
   84f62:	61bb      	str	r3, [r7, #24]
   84f64:	6139      	str	r1, [r7, #16]
   84f66:	b9d5      	cbnz	r5, 84f9e <__d2b+0x7a>
   84f68:	9a08      	ldr	r2, [sp, #32]
   84f6a:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   84f6e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84f72:	6010      	str	r0, [r2, #0]
   84f74:	6918      	ldr	r0, [r3, #16]
   84f76:	f7ff fd9f 	bl	84ab8 <__hi0bits>
   84f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84f7c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   84f80:	6018      	str	r0, [r3, #0]
   84f82:	4638      	mov	r0, r7
   84f84:	b003      	add	sp, #12
   84f86:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84f88:	a801      	add	r0, sp, #4
   84f8a:	f7ff fdb5 	bl	84af8 <__lo0bits>
   84f8e:	2201      	movs	r2, #1
   84f90:	9b01      	ldr	r3, [sp, #4]
   84f92:	4611      	mov	r1, r2
   84f94:	3020      	adds	r0, #32
   84f96:	613a      	str	r2, [r7, #16]
   84f98:	617b      	str	r3, [r7, #20]
   84f9a:	2d00      	cmp	r5, #0
   84f9c:	d0e4      	beq.n	84f68 <__d2b+0x44>
   84f9e:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   84fa2:	9a08      	ldr	r2, [sp, #32]
   84fa4:	4403      	add	r3, r0
   84fa6:	6013      	str	r3, [r2, #0]
   84fa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84faa:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84fae:	6018      	str	r0, [r3, #0]
   84fb0:	4638      	mov	r0, r7
   84fb2:	b003      	add	sp, #12
   84fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84fb6:	9b01      	ldr	r3, [sp, #4]
   84fb8:	f1c0 0220 	rsb	r2, r0, #32
   84fbc:	9900      	ldr	r1, [sp, #0]
   84fbe:	fa03 f202 	lsl.w	r2, r3, r2
   84fc2:	430a      	orrs	r2, r1
   84fc4:	40c3      	lsrs	r3, r0
   84fc6:	9301      	str	r3, [sp, #4]
   84fc8:	617a      	str	r2, [r7, #20]
   84fca:	e7c6      	b.n	84f5a <__d2b+0x36>

00084fcc <_sbrk_r>:
   84fcc:	b538      	push	{r3, r4, r5, lr}
   84fce:	2300      	movs	r3, #0
   84fd0:	4c06      	ldr	r4, [pc, #24]	; (84fec <_sbrk_r+0x20>)
   84fd2:	4605      	mov	r5, r0
   84fd4:	4608      	mov	r0, r1
   84fd6:	6023      	str	r3, [r4, #0]
   84fd8:	f7fc fd38 	bl	81a4c <_sbrk>
   84fdc:	1c43      	adds	r3, r0, #1
   84fde:	d000      	beq.n	84fe2 <_sbrk_r+0x16>
   84fe0:	bd38      	pop	{r3, r4, r5, pc}
   84fe2:	6823      	ldr	r3, [r4, #0]
   84fe4:	2b00      	cmp	r3, #0
   84fe6:	d0fb      	beq.n	84fe0 <_sbrk_r+0x14>
   84fe8:	602b      	str	r3, [r5, #0]
   84fea:	bd38      	pop	{r3, r4, r5, pc}
   84fec:	200714c0 	.word	0x200714c0

00084ff0 <__ssprint_r>:
   84ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84ff4:	6893      	ldr	r3, [r2, #8]
   84ff6:	b083      	sub	sp, #12
   84ff8:	4690      	mov	r8, r2
   84ffa:	2b00      	cmp	r3, #0
   84ffc:	d070      	beq.n	850e0 <__ssprint_r+0xf0>
   84ffe:	4682      	mov	sl, r0
   85000:	460c      	mov	r4, r1
   85002:	6817      	ldr	r7, [r2, #0]
   85004:	688d      	ldr	r5, [r1, #8]
   85006:	6808      	ldr	r0, [r1, #0]
   85008:	e042      	b.n	85090 <__ssprint_r+0xa0>
   8500a:	89a3      	ldrh	r3, [r4, #12]
   8500c:	f413 6f90 	tst.w	r3, #1152	; 0x480
   85010:	d02e      	beq.n	85070 <__ssprint_r+0x80>
   85012:	6965      	ldr	r5, [r4, #20]
   85014:	6921      	ldr	r1, [r4, #16]
   85016:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   8501a:	eba0 0b01 	sub.w	fp, r0, r1
   8501e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   85022:	f10b 0001 	add.w	r0, fp, #1
   85026:	106d      	asrs	r5, r5, #1
   85028:	4430      	add	r0, r6
   8502a:	42a8      	cmp	r0, r5
   8502c:	462a      	mov	r2, r5
   8502e:	bf84      	itt	hi
   85030:	4605      	movhi	r5, r0
   85032:	462a      	movhi	r2, r5
   85034:	055b      	lsls	r3, r3, #21
   85036:	d538      	bpl.n	850aa <__ssprint_r+0xba>
   85038:	4611      	mov	r1, r2
   8503a:	4650      	mov	r0, sl
   8503c:	f7ff f94a 	bl	842d4 <_malloc_r>
   85040:	2800      	cmp	r0, #0
   85042:	d03c      	beq.n	850be <__ssprint_r+0xce>
   85044:	465a      	mov	r2, fp
   85046:	6921      	ldr	r1, [r4, #16]
   85048:	9001      	str	r0, [sp, #4]
   8504a:	f7ff fc41 	bl	848d0 <memcpy>
   8504e:	89a2      	ldrh	r2, [r4, #12]
   85050:	9b01      	ldr	r3, [sp, #4]
   85052:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   85056:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8505a:	81a2      	strh	r2, [r4, #12]
   8505c:	eba5 020b 	sub.w	r2, r5, fp
   85060:	eb03 000b 	add.w	r0, r3, fp
   85064:	6165      	str	r5, [r4, #20]
   85066:	46b3      	mov	fp, r6
   85068:	4635      	mov	r5, r6
   8506a:	6123      	str	r3, [r4, #16]
   8506c:	6020      	str	r0, [r4, #0]
   8506e:	60a2      	str	r2, [r4, #8]
   85070:	465a      	mov	r2, fp
   85072:	4649      	mov	r1, r9
   85074:	f000 fa0e 	bl	85494 <memmove>
   85078:	f8d8 3008 	ldr.w	r3, [r8, #8]
   8507c:	68a2      	ldr	r2, [r4, #8]
   8507e:	6820      	ldr	r0, [r4, #0]
   85080:	1b55      	subs	r5, r2, r5
   85082:	4458      	add	r0, fp
   85084:	1b9e      	subs	r6, r3, r6
   85086:	60a5      	str	r5, [r4, #8]
   85088:	6020      	str	r0, [r4, #0]
   8508a:	f8c8 6008 	str.w	r6, [r8, #8]
   8508e:	b33e      	cbz	r6, 850e0 <__ssprint_r+0xf0>
   85090:	687e      	ldr	r6, [r7, #4]
   85092:	463b      	mov	r3, r7
   85094:	3708      	adds	r7, #8
   85096:	2e00      	cmp	r6, #0
   85098:	d0fa      	beq.n	85090 <__ssprint_r+0xa0>
   8509a:	42ae      	cmp	r6, r5
   8509c:	f8d3 9000 	ldr.w	r9, [r3]
   850a0:	46ab      	mov	fp, r5
   850a2:	d2b2      	bcs.n	8500a <__ssprint_r+0x1a>
   850a4:	4635      	mov	r5, r6
   850a6:	46b3      	mov	fp, r6
   850a8:	e7e2      	b.n	85070 <__ssprint_r+0x80>
   850aa:	4650      	mov	r0, sl
   850ac:	f000 fa56 	bl	8555c <_realloc_r>
   850b0:	4603      	mov	r3, r0
   850b2:	2800      	cmp	r0, #0
   850b4:	d1d2      	bne.n	8505c <__ssprint_r+0x6c>
   850b6:	6921      	ldr	r1, [r4, #16]
   850b8:	4650      	mov	r0, sl
   850ba:	f000 f905 	bl	852c8 <_free_r>
   850be:	230c      	movs	r3, #12
   850c0:	2200      	movs	r2, #0
   850c2:	f04f 30ff 	mov.w	r0, #4294967295
   850c6:	f8ca 3000 	str.w	r3, [sl]
   850ca:	89a3      	ldrh	r3, [r4, #12]
   850cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   850d0:	81a3      	strh	r3, [r4, #12]
   850d2:	f8c8 2008 	str.w	r2, [r8, #8]
   850d6:	f8c8 2004 	str.w	r2, [r8, #4]
   850da:	b003      	add	sp, #12
   850dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850e0:	2000      	movs	r0, #0
   850e2:	f8c8 0004 	str.w	r0, [r8, #4]
   850e6:	b003      	add	sp, #12
   850e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000850ec <__ascii_wctomb>:
   850ec:	b119      	cbz	r1, 850f6 <__ascii_wctomb+0xa>
   850ee:	2aff      	cmp	r2, #255	; 0xff
   850f0:	d803      	bhi.n	850fa <__ascii_wctomb+0xe>
   850f2:	700a      	strb	r2, [r1, #0]
   850f4:	2101      	movs	r1, #1
   850f6:	4608      	mov	r0, r1
   850f8:	4770      	bx	lr
   850fa:	238a      	movs	r3, #138	; 0x8a
   850fc:	f04f 31ff 	mov.w	r1, #4294967295
   85100:	6003      	str	r3, [r0, #0]
   85102:	e7f8      	b.n	850f6 <__ascii_wctomb+0xa>

00085104 <__register_exitproc>:
   85104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85108:	4d2c      	ldr	r5, [pc, #176]	; (851bc <__register_exitproc+0xb8>)
   8510a:	4606      	mov	r6, r0
   8510c:	6828      	ldr	r0, [r5, #0]
   8510e:	4698      	mov	r8, r3
   85110:	460f      	mov	r7, r1
   85112:	4691      	mov	r9, r2
   85114:	f7ff f8da 	bl	842cc <__retarget_lock_acquire_recursive>
   85118:	4b29      	ldr	r3, [pc, #164]	; (851c0 <__register_exitproc+0xbc>)
   8511a:	681c      	ldr	r4, [r3, #0]
   8511c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   85120:	2b00      	cmp	r3, #0
   85122:	d03e      	beq.n	851a2 <__register_exitproc+0x9e>
   85124:	685a      	ldr	r2, [r3, #4]
   85126:	2a1f      	cmp	r2, #31
   85128:	dc1c      	bgt.n	85164 <__register_exitproc+0x60>
   8512a:	f102 0e01 	add.w	lr, r2, #1
   8512e:	b176      	cbz	r6, 8514e <__register_exitproc+0x4a>
   85130:	2101      	movs	r1, #1
   85132:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   85136:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8513a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   8513e:	4091      	lsls	r1, r2
   85140:	4308      	orrs	r0, r1
   85142:	2e02      	cmp	r6, #2
   85144:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   85148:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   8514c:	d023      	beq.n	85196 <__register_exitproc+0x92>
   8514e:	3202      	adds	r2, #2
   85150:	f8c3 e004 	str.w	lr, [r3, #4]
   85154:	6828      	ldr	r0, [r5, #0]
   85156:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   8515a:	f7ff f8b9 	bl	842d0 <__retarget_lock_release_recursive>
   8515e:	2000      	movs	r0, #0
   85160:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85164:	4b17      	ldr	r3, [pc, #92]	; (851c4 <__register_exitproc+0xc0>)
   85166:	b30b      	cbz	r3, 851ac <__register_exitproc+0xa8>
   85168:	f44f 70c8 	mov.w	r0, #400	; 0x190
   8516c:	f3af 8000 	nop.w
   85170:	4603      	mov	r3, r0
   85172:	b1d8      	cbz	r0, 851ac <__register_exitproc+0xa8>
   85174:	2000      	movs	r0, #0
   85176:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8517a:	f04f 0e01 	mov.w	lr, #1
   8517e:	6058      	str	r0, [r3, #4]
   85180:	6019      	str	r1, [r3, #0]
   85182:	4602      	mov	r2, r0
   85184:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   85188:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   8518c:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   85190:	2e00      	cmp	r6, #0
   85192:	d0dc      	beq.n	8514e <__register_exitproc+0x4a>
   85194:	e7cc      	b.n	85130 <__register_exitproc+0x2c>
   85196:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   8519a:	4301      	orrs	r1, r0
   8519c:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   851a0:	e7d5      	b.n	8514e <__register_exitproc+0x4a>
   851a2:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   851a6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   851aa:	e7bb      	b.n	85124 <__register_exitproc+0x20>
   851ac:	6828      	ldr	r0, [r5, #0]
   851ae:	f7ff f88f 	bl	842d0 <__retarget_lock_release_recursive>
   851b2:	f04f 30ff 	mov.w	r0, #4294967295
   851b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   851ba:	bf00      	nop
   851bc:	200709c0 	.word	0x200709c0
   851c0:	000866e0 	.word	0x000866e0
   851c4:	00000000 	.word	0x00000000

000851c8 <_calloc_r>:
   851c8:	b510      	push	{r4, lr}
   851ca:	fb02 f101 	mul.w	r1, r2, r1
   851ce:	f7ff f881 	bl	842d4 <_malloc_r>
   851d2:	4604      	mov	r4, r0
   851d4:	b1d8      	cbz	r0, 8520e <_calloc_r+0x46>
   851d6:	f850 2c04 	ldr.w	r2, [r0, #-4]
   851da:	f022 0203 	bic.w	r2, r2, #3
   851de:	3a04      	subs	r2, #4
   851e0:	2a24      	cmp	r2, #36	; 0x24
   851e2:	d818      	bhi.n	85216 <_calloc_r+0x4e>
   851e4:	2a13      	cmp	r2, #19
   851e6:	d914      	bls.n	85212 <_calloc_r+0x4a>
   851e8:	2300      	movs	r3, #0
   851ea:	2a1b      	cmp	r2, #27
   851ec:	6003      	str	r3, [r0, #0]
   851ee:	6043      	str	r3, [r0, #4]
   851f0:	d916      	bls.n	85220 <_calloc_r+0x58>
   851f2:	2a24      	cmp	r2, #36	; 0x24
   851f4:	6083      	str	r3, [r0, #8]
   851f6:	60c3      	str	r3, [r0, #12]
   851f8:	bf11      	iteee	ne
   851fa:	f100 0210 	addne.w	r2, r0, #16
   851fe:	6103      	streq	r3, [r0, #16]
   85200:	6143      	streq	r3, [r0, #20]
   85202:	f100 0218 	addeq.w	r2, r0, #24
   85206:	2300      	movs	r3, #0
   85208:	6013      	str	r3, [r2, #0]
   8520a:	6053      	str	r3, [r2, #4]
   8520c:	6093      	str	r3, [r2, #8]
   8520e:	4620      	mov	r0, r4
   85210:	bd10      	pop	{r4, pc}
   85212:	4602      	mov	r2, r0
   85214:	e7f7      	b.n	85206 <_calloc_r+0x3e>
   85216:	2100      	movs	r1, #0
   85218:	f7fc fc60 	bl	81adc <memset>
   8521c:	4620      	mov	r0, r4
   8521e:	bd10      	pop	{r4, pc}
   85220:	f100 0208 	add.w	r2, r0, #8
   85224:	e7ef      	b.n	85206 <_calloc_r+0x3e>
   85226:	bf00      	nop

00085228 <_malloc_trim_r>:
   85228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8522a:	460c      	mov	r4, r1
   8522c:	4f23      	ldr	r7, [pc, #140]	; (852bc <_malloc_trim_r+0x94>)
   8522e:	4606      	mov	r6, r0
   85230:	f7ff fbc4 	bl	849bc <__malloc_lock>
   85234:	68bb      	ldr	r3, [r7, #8]
   85236:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8523a:	685d      	ldr	r5, [r3, #4]
   8523c:	310f      	adds	r1, #15
   8523e:	f025 0503 	bic.w	r5, r5, #3
   85242:	4429      	add	r1, r5
   85244:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   85248:	f021 010f 	bic.w	r1, r1, #15
   8524c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   85250:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   85254:	db07      	blt.n	85266 <_malloc_trim_r+0x3e>
   85256:	2100      	movs	r1, #0
   85258:	4630      	mov	r0, r6
   8525a:	f7ff feb7 	bl	84fcc <_sbrk_r>
   8525e:	68bb      	ldr	r3, [r7, #8]
   85260:	442b      	add	r3, r5
   85262:	4298      	cmp	r0, r3
   85264:	d004      	beq.n	85270 <_malloc_trim_r+0x48>
   85266:	4630      	mov	r0, r6
   85268:	f7ff fbae 	bl	849c8 <__malloc_unlock>
   8526c:	2000      	movs	r0, #0
   8526e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85270:	4261      	negs	r1, r4
   85272:	4630      	mov	r0, r6
   85274:	f7ff feaa 	bl	84fcc <_sbrk_r>
   85278:	3001      	adds	r0, #1
   8527a:	d00d      	beq.n	85298 <_malloc_trim_r+0x70>
   8527c:	4b10      	ldr	r3, [pc, #64]	; (852c0 <_malloc_trim_r+0x98>)
   8527e:	68ba      	ldr	r2, [r7, #8]
   85280:	6819      	ldr	r1, [r3, #0]
   85282:	1b2d      	subs	r5, r5, r4
   85284:	f045 0501 	orr.w	r5, r5, #1
   85288:	4630      	mov	r0, r6
   8528a:	1b09      	subs	r1, r1, r4
   8528c:	6055      	str	r5, [r2, #4]
   8528e:	6019      	str	r1, [r3, #0]
   85290:	f7ff fb9a 	bl	849c8 <__malloc_unlock>
   85294:	2001      	movs	r0, #1
   85296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85298:	2100      	movs	r1, #0
   8529a:	4630      	mov	r0, r6
   8529c:	f7ff fe96 	bl	84fcc <_sbrk_r>
   852a0:	68ba      	ldr	r2, [r7, #8]
   852a2:	1a83      	subs	r3, r0, r2
   852a4:	2b0f      	cmp	r3, #15
   852a6:	ddde      	ble.n	85266 <_malloc_trim_r+0x3e>
   852a8:	4c06      	ldr	r4, [pc, #24]	; (852c4 <_malloc_trim_r+0x9c>)
   852aa:	4905      	ldr	r1, [pc, #20]	; (852c0 <_malloc_trim_r+0x98>)
   852ac:	6824      	ldr	r4, [r4, #0]
   852ae:	f043 0301 	orr.w	r3, r3, #1
   852b2:	1b00      	subs	r0, r0, r4
   852b4:	6053      	str	r3, [r2, #4]
   852b6:	6008      	str	r0, [r1, #0]
   852b8:	e7d5      	b.n	85266 <_malloc_trim_r+0x3e>
   852ba:	bf00      	nop
   852bc:	20070b30 	.word	0x20070b30
   852c0:	20070fe4 	.word	0x20070fe4
   852c4:	20070f38 	.word	0x20070f38

000852c8 <_free_r>:
   852c8:	2900      	cmp	r1, #0
   852ca:	d044      	beq.n	85356 <_free_r+0x8e>
   852cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   852d0:	460d      	mov	r5, r1
   852d2:	4680      	mov	r8, r0
   852d4:	f7ff fb72 	bl	849bc <__malloc_lock>
   852d8:	f855 7c04 	ldr.w	r7, [r5, #-4]
   852dc:	4969      	ldr	r1, [pc, #420]	; (85484 <_free_r+0x1bc>)
   852de:	f1a5 0408 	sub.w	r4, r5, #8
   852e2:	f027 0301 	bic.w	r3, r7, #1
   852e6:	18e2      	adds	r2, r4, r3
   852e8:	688e      	ldr	r6, [r1, #8]
   852ea:	6850      	ldr	r0, [r2, #4]
   852ec:	42b2      	cmp	r2, r6
   852ee:	f020 0003 	bic.w	r0, r0, #3
   852f2:	d05e      	beq.n	853b2 <_free_r+0xea>
   852f4:	07fe      	lsls	r6, r7, #31
   852f6:	6050      	str	r0, [r2, #4]
   852f8:	d40b      	bmi.n	85312 <_free_r+0x4a>
   852fa:	f855 7c08 	ldr.w	r7, [r5, #-8]
   852fe:	f101 0e08 	add.w	lr, r1, #8
   85302:	1be4      	subs	r4, r4, r7
   85304:	68a5      	ldr	r5, [r4, #8]
   85306:	443b      	add	r3, r7
   85308:	4575      	cmp	r5, lr
   8530a:	d06d      	beq.n	853e8 <_free_r+0x120>
   8530c:	68e7      	ldr	r7, [r4, #12]
   8530e:	60ef      	str	r7, [r5, #12]
   85310:	60bd      	str	r5, [r7, #8]
   85312:	1815      	adds	r5, r2, r0
   85314:	686d      	ldr	r5, [r5, #4]
   85316:	07ed      	lsls	r5, r5, #31
   85318:	d53e      	bpl.n	85398 <_free_r+0xd0>
   8531a:	f043 0201 	orr.w	r2, r3, #1
   8531e:	6062      	str	r2, [r4, #4]
   85320:	50e3      	str	r3, [r4, r3]
   85322:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   85326:	d217      	bcs.n	85358 <_free_r+0x90>
   85328:	2201      	movs	r2, #1
   8532a:	08db      	lsrs	r3, r3, #3
   8532c:	1098      	asrs	r0, r3, #2
   8532e:	684d      	ldr	r5, [r1, #4]
   85330:	4413      	add	r3, r2
   85332:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   85336:	4082      	lsls	r2, r0
   85338:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   8533c:	432a      	orrs	r2, r5
   8533e:	3808      	subs	r0, #8
   85340:	60e0      	str	r0, [r4, #12]
   85342:	60a7      	str	r7, [r4, #8]
   85344:	604a      	str	r2, [r1, #4]
   85346:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   8534a:	60fc      	str	r4, [r7, #12]
   8534c:	4640      	mov	r0, r8
   8534e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   85352:	f7ff bb39 	b.w	849c8 <__malloc_unlock>
   85356:	4770      	bx	lr
   85358:	0a5a      	lsrs	r2, r3, #9
   8535a:	2a04      	cmp	r2, #4
   8535c:	d852      	bhi.n	85404 <_free_r+0x13c>
   8535e:	099a      	lsrs	r2, r3, #6
   85360:	f102 0739 	add.w	r7, r2, #57	; 0x39
   85364:	00ff      	lsls	r7, r7, #3
   85366:	f102 0538 	add.w	r5, r2, #56	; 0x38
   8536a:	19c8      	adds	r0, r1, r7
   8536c:	59ca      	ldr	r2, [r1, r7]
   8536e:	3808      	subs	r0, #8
   85370:	4290      	cmp	r0, r2
   85372:	d04f      	beq.n	85414 <_free_r+0x14c>
   85374:	6851      	ldr	r1, [r2, #4]
   85376:	f021 0103 	bic.w	r1, r1, #3
   8537a:	428b      	cmp	r3, r1
   8537c:	d232      	bcs.n	853e4 <_free_r+0x11c>
   8537e:	6892      	ldr	r2, [r2, #8]
   85380:	4290      	cmp	r0, r2
   85382:	d1f7      	bne.n	85374 <_free_r+0xac>
   85384:	68c3      	ldr	r3, [r0, #12]
   85386:	60a0      	str	r0, [r4, #8]
   85388:	60e3      	str	r3, [r4, #12]
   8538a:	609c      	str	r4, [r3, #8]
   8538c:	60c4      	str	r4, [r0, #12]
   8538e:	4640      	mov	r0, r8
   85390:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   85394:	f7ff bb18 	b.w	849c8 <__malloc_unlock>
   85398:	6895      	ldr	r5, [r2, #8]
   8539a:	4f3b      	ldr	r7, [pc, #236]	; (85488 <_free_r+0x1c0>)
   8539c:	4403      	add	r3, r0
   8539e:	42bd      	cmp	r5, r7
   853a0:	d040      	beq.n	85424 <_free_r+0x15c>
   853a2:	68d0      	ldr	r0, [r2, #12]
   853a4:	f043 0201 	orr.w	r2, r3, #1
   853a8:	60e8      	str	r0, [r5, #12]
   853aa:	6085      	str	r5, [r0, #8]
   853ac:	6062      	str	r2, [r4, #4]
   853ae:	50e3      	str	r3, [r4, r3]
   853b0:	e7b7      	b.n	85322 <_free_r+0x5a>
   853b2:	07ff      	lsls	r7, r7, #31
   853b4:	4403      	add	r3, r0
   853b6:	d407      	bmi.n	853c8 <_free_r+0x100>
   853b8:	f855 5c08 	ldr.w	r5, [r5, #-8]
   853bc:	1b64      	subs	r4, r4, r5
   853be:	68e2      	ldr	r2, [r4, #12]
   853c0:	68a0      	ldr	r0, [r4, #8]
   853c2:	442b      	add	r3, r5
   853c4:	60c2      	str	r2, [r0, #12]
   853c6:	6090      	str	r0, [r2, #8]
   853c8:	4a30      	ldr	r2, [pc, #192]	; (8548c <_free_r+0x1c4>)
   853ca:	f043 0001 	orr.w	r0, r3, #1
   853ce:	6812      	ldr	r2, [r2, #0]
   853d0:	6060      	str	r0, [r4, #4]
   853d2:	4293      	cmp	r3, r2
   853d4:	608c      	str	r4, [r1, #8]
   853d6:	d3b9      	bcc.n	8534c <_free_r+0x84>
   853d8:	4b2d      	ldr	r3, [pc, #180]	; (85490 <_free_r+0x1c8>)
   853da:	4640      	mov	r0, r8
   853dc:	6819      	ldr	r1, [r3, #0]
   853de:	f7ff ff23 	bl	85228 <_malloc_trim_r>
   853e2:	e7b3      	b.n	8534c <_free_r+0x84>
   853e4:	4610      	mov	r0, r2
   853e6:	e7cd      	b.n	85384 <_free_r+0xbc>
   853e8:	1811      	adds	r1, r2, r0
   853ea:	6849      	ldr	r1, [r1, #4]
   853ec:	07c9      	lsls	r1, r1, #31
   853ee:	d444      	bmi.n	8547a <_free_r+0x1b2>
   853f0:	6891      	ldr	r1, [r2, #8]
   853f2:	4403      	add	r3, r0
   853f4:	68d2      	ldr	r2, [r2, #12]
   853f6:	f043 0001 	orr.w	r0, r3, #1
   853fa:	60ca      	str	r2, [r1, #12]
   853fc:	6091      	str	r1, [r2, #8]
   853fe:	6060      	str	r0, [r4, #4]
   85400:	50e3      	str	r3, [r4, r3]
   85402:	e7a3      	b.n	8534c <_free_r+0x84>
   85404:	2a14      	cmp	r2, #20
   85406:	d816      	bhi.n	85436 <_free_r+0x16e>
   85408:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   8540c:	00ff      	lsls	r7, r7, #3
   8540e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   85412:	e7aa      	b.n	8536a <_free_r+0xa2>
   85414:	2301      	movs	r3, #1
   85416:	10aa      	asrs	r2, r5, #2
   85418:	684d      	ldr	r5, [r1, #4]
   8541a:	4093      	lsls	r3, r2
   8541c:	432b      	orrs	r3, r5
   8541e:	604b      	str	r3, [r1, #4]
   85420:	4603      	mov	r3, r0
   85422:	e7b0      	b.n	85386 <_free_r+0xbe>
   85424:	f043 0201 	orr.w	r2, r3, #1
   85428:	614c      	str	r4, [r1, #20]
   8542a:	610c      	str	r4, [r1, #16]
   8542c:	60e5      	str	r5, [r4, #12]
   8542e:	60a5      	str	r5, [r4, #8]
   85430:	6062      	str	r2, [r4, #4]
   85432:	50e3      	str	r3, [r4, r3]
   85434:	e78a      	b.n	8534c <_free_r+0x84>
   85436:	2a54      	cmp	r2, #84	; 0x54
   85438:	d806      	bhi.n	85448 <_free_r+0x180>
   8543a:	0b1a      	lsrs	r2, r3, #12
   8543c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   85440:	00ff      	lsls	r7, r7, #3
   85442:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   85446:	e790      	b.n	8536a <_free_r+0xa2>
   85448:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8544c:	d806      	bhi.n	8545c <_free_r+0x194>
   8544e:	0bda      	lsrs	r2, r3, #15
   85450:	f102 0778 	add.w	r7, r2, #120	; 0x78
   85454:	00ff      	lsls	r7, r7, #3
   85456:	f102 0577 	add.w	r5, r2, #119	; 0x77
   8545a:	e786      	b.n	8536a <_free_r+0xa2>
   8545c:	f240 5054 	movw	r0, #1364	; 0x554
   85460:	4282      	cmp	r2, r0
   85462:	d806      	bhi.n	85472 <_free_r+0x1aa>
   85464:	0c9a      	lsrs	r2, r3, #18
   85466:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   8546a:	00ff      	lsls	r7, r7, #3
   8546c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   85470:	e77b      	b.n	8536a <_free_r+0xa2>
   85472:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   85476:	257e      	movs	r5, #126	; 0x7e
   85478:	e777      	b.n	8536a <_free_r+0xa2>
   8547a:	f043 0101 	orr.w	r1, r3, #1
   8547e:	6061      	str	r1, [r4, #4]
   85480:	6013      	str	r3, [r2, #0]
   85482:	e763      	b.n	8534c <_free_r+0x84>
   85484:	20070b30 	.word	0x20070b30
   85488:	20070b38 	.word	0x20070b38
   8548c:	20070f3c 	.word	0x20070f3c
   85490:	20071014 	.word	0x20071014

00085494 <memmove>:
   85494:	4288      	cmp	r0, r1
   85496:	b5f0      	push	{r4, r5, r6, r7, lr}
   85498:	d90d      	bls.n	854b6 <memmove+0x22>
   8549a:	188b      	adds	r3, r1, r2
   8549c:	4298      	cmp	r0, r3
   8549e:	d20a      	bcs.n	854b6 <memmove+0x22>
   854a0:	1884      	adds	r4, r0, r2
   854a2:	2a00      	cmp	r2, #0
   854a4:	d051      	beq.n	8554a <memmove+0xb6>
   854a6:	4622      	mov	r2, r4
   854a8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   854ac:	4299      	cmp	r1, r3
   854ae:	f802 4d01 	strb.w	r4, [r2, #-1]!
   854b2:	d1f9      	bne.n	854a8 <memmove+0x14>
   854b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   854b6:	2a0f      	cmp	r2, #15
   854b8:	d948      	bls.n	8554c <memmove+0xb8>
   854ba:	ea41 0300 	orr.w	r3, r1, r0
   854be:	079b      	lsls	r3, r3, #30
   854c0:	d146      	bne.n	85550 <memmove+0xbc>
   854c2:	4615      	mov	r5, r2
   854c4:	f100 0410 	add.w	r4, r0, #16
   854c8:	f101 0310 	add.w	r3, r1, #16
   854cc:	f853 6c10 	ldr.w	r6, [r3, #-16]
   854d0:	3d10      	subs	r5, #16
   854d2:	f844 6c10 	str.w	r6, [r4, #-16]
   854d6:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   854da:	2d0f      	cmp	r5, #15
   854dc:	f844 6c0c 	str.w	r6, [r4, #-12]
   854e0:	f853 6c08 	ldr.w	r6, [r3, #-8]
   854e4:	f104 0410 	add.w	r4, r4, #16
   854e8:	f844 6c18 	str.w	r6, [r4, #-24]
   854ec:	f853 6c04 	ldr.w	r6, [r3, #-4]
   854f0:	f103 0310 	add.w	r3, r3, #16
   854f4:	f844 6c14 	str.w	r6, [r4, #-20]
   854f8:	d8e8      	bhi.n	854cc <memmove+0x38>
   854fa:	f1a2 0310 	sub.w	r3, r2, #16
   854fe:	f023 030f 	bic.w	r3, r3, #15
   85502:	f002 0e0f 	and.w	lr, r2, #15
   85506:	3310      	adds	r3, #16
   85508:	f1be 0f03 	cmp.w	lr, #3
   8550c:	4419      	add	r1, r3
   8550e:	4403      	add	r3, r0
   85510:	d921      	bls.n	85556 <memmove+0xc2>
   85512:	460e      	mov	r6, r1
   85514:	4674      	mov	r4, lr
   85516:	1f1d      	subs	r5, r3, #4
   85518:	f856 7b04 	ldr.w	r7, [r6], #4
   8551c:	3c04      	subs	r4, #4
   8551e:	2c03      	cmp	r4, #3
   85520:	f845 7f04 	str.w	r7, [r5, #4]!
   85524:	d8f8      	bhi.n	85518 <memmove+0x84>
   85526:	f1ae 0404 	sub.w	r4, lr, #4
   8552a:	f024 0403 	bic.w	r4, r4, #3
   8552e:	3404      	adds	r4, #4
   85530:	4421      	add	r1, r4
   85532:	4423      	add	r3, r4
   85534:	f002 0203 	and.w	r2, r2, #3
   85538:	b162      	cbz	r2, 85554 <memmove+0xc0>
   8553a:	3b01      	subs	r3, #1
   8553c:	440a      	add	r2, r1
   8553e:	f811 4b01 	ldrb.w	r4, [r1], #1
   85542:	428a      	cmp	r2, r1
   85544:	f803 4f01 	strb.w	r4, [r3, #1]!
   85548:	d1f9      	bne.n	8553e <memmove+0xaa>
   8554a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8554c:	4603      	mov	r3, r0
   8554e:	e7f3      	b.n	85538 <memmove+0xa4>
   85550:	4603      	mov	r3, r0
   85552:	e7f2      	b.n	8553a <memmove+0xa6>
   85554:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85556:	4672      	mov	r2, lr
   85558:	e7ee      	b.n	85538 <memmove+0xa4>
   8555a:	bf00      	nop

0008555c <_realloc_r>:
   8555c:	2900      	cmp	r1, #0
   8555e:	f000 8094 	beq.w	8568a <_realloc_r+0x12e>
   85562:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85566:	460c      	mov	r4, r1
   85568:	4615      	mov	r5, r2
   8556a:	b083      	sub	sp, #12
   8556c:	4680      	mov	r8, r0
   8556e:	f105 060b 	add.w	r6, r5, #11
   85572:	f7ff fa23 	bl	849bc <__malloc_lock>
   85576:	f854 ec04 	ldr.w	lr, [r4, #-4]
   8557a:	2e16      	cmp	r6, #22
   8557c:	f02e 0703 	bic.w	r7, lr, #3
   85580:	f1a4 0908 	sub.w	r9, r4, #8
   85584:	d83c      	bhi.n	85600 <_realloc_r+0xa4>
   85586:	2210      	movs	r2, #16
   85588:	4616      	mov	r6, r2
   8558a:	42b5      	cmp	r5, r6
   8558c:	d83d      	bhi.n	8560a <_realloc_r+0xae>
   8558e:	4297      	cmp	r7, r2
   85590:	da43      	bge.n	8561a <_realloc_r+0xbe>
   85592:	4bc6      	ldr	r3, [pc, #792]	; (858ac <_realloc_r+0x350>)
   85594:	eb09 0007 	add.w	r0, r9, r7
   85598:	6899      	ldr	r1, [r3, #8]
   8559a:	4288      	cmp	r0, r1
   8559c:	f000 80c3 	beq.w	85726 <_realloc_r+0x1ca>
   855a0:	6843      	ldr	r3, [r0, #4]
   855a2:	f023 0101 	bic.w	r1, r3, #1
   855a6:	4401      	add	r1, r0
   855a8:	6849      	ldr	r1, [r1, #4]
   855aa:	07c9      	lsls	r1, r1, #31
   855ac:	d54d      	bpl.n	8564a <_realloc_r+0xee>
   855ae:	f01e 0f01 	tst.w	lr, #1
   855b2:	f000 809b 	beq.w	856ec <_realloc_r+0x190>
   855b6:	4629      	mov	r1, r5
   855b8:	4640      	mov	r0, r8
   855ba:	f7fe fe8b 	bl	842d4 <_malloc_r>
   855be:	4605      	mov	r5, r0
   855c0:	2800      	cmp	r0, #0
   855c2:	d03b      	beq.n	8563c <_realloc_r+0xe0>
   855c4:	f854 3c04 	ldr.w	r3, [r4, #-4]
   855c8:	f1a0 0208 	sub.w	r2, r0, #8
   855cc:	f023 0301 	bic.w	r3, r3, #1
   855d0:	444b      	add	r3, r9
   855d2:	429a      	cmp	r2, r3
   855d4:	f000 812b 	beq.w	8582e <_realloc_r+0x2d2>
   855d8:	1f3a      	subs	r2, r7, #4
   855da:	2a24      	cmp	r2, #36	; 0x24
   855dc:	f200 8118 	bhi.w	85810 <_realloc_r+0x2b4>
   855e0:	2a13      	cmp	r2, #19
   855e2:	f200 80eb 	bhi.w	857bc <_realloc_r+0x260>
   855e6:	4603      	mov	r3, r0
   855e8:	4622      	mov	r2, r4
   855ea:	6811      	ldr	r1, [r2, #0]
   855ec:	6019      	str	r1, [r3, #0]
   855ee:	6851      	ldr	r1, [r2, #4]
   855f0:	6059      	str	r1, [r3, #4]
   855f2:	6892      	ldr	r2, [r2, #8]
   855f4:	609a      	str	r2, [r3, #8]
   855f6:	4621      	mov	r1, r4
   855f8:	4640      	mov	r0, r8
   855fa:	f7ff fe65 	bl	852c8 <_free_r>
   855fe:	e01d      	b.n	8563c <_realloc_r+0xe0>
   85600:	f026 0607 	bic.w	r6, r6, #7
   85604:	2e00      	cmp	r6, #0
   85606:	4632      	mov	r2, r6
   85608:	dabf      	bge.n	8558a <_realloc_r+0x2e>
   8560a:	2500      	movs	r5, #0
   8560c:	230c      	movs	r3, #12
   8560e:	4628      	mov	r0, r5
   85610:	f8c8 3000 	str.w	r3, [r8]
   85614:	b003      	add	sp, #12
   85616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8561a:	4625      	mov	r5, r4
   8561c:	1bbb      	subs	r3, r7, r6
   8561e:	2b0f      	cmp	r3, #15
   85620:	f8d9 2004 	ldr.w	r2, [r9, #4]
   85624:	d81d      	bhi.n	85662 <_realloc_r+0x106>
   85626:	f002 0201 	and.w	r2, r2, #1
   8562a:	433a      	orrs	r2, r7
   8562c:	eb09 0107 	add.w	r1, r9, r7
   85630:	f8c9 2004 	str.w	r2, [r9, #4]
   85634:	684b      	ldr	r3, [r1, #4]
   85636:	f043 0301 	orr.w	r3, r3, #1
   8563a:	604b      	str	r3, [r1, #4]
   8563c:	4640      	mov	r0, r8
   8563e:	f7ff f9c3 	bl	849c8 <__malloc_unlock>
   85642:	4628      	mov	r0, r5
   85644:	b003      	add	sp, #12
   85646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8564a:	f023 0303 	bic.w	r3, r3, #3
   8564e:	18f9      	adds	r1, r7, r3
   85650:	4291      	cmp	r1, r2
   85652:	db1d      	blt.n	85690 <_realloc_r+0x134>
   85654:	68c3      	ldr	r3, [r0, #12]
   85656:	6882      	ldr	r2, [r0, #8]
   85658:	4625      	mov	r5, r4
   8565a:	60d3      	str	r3, [r2, #12]
   8565c:	460f      	mov	r7, r1
   8565e:	609a      	str	r2, [r3, #8]
   85660:	e7dc      	b.n	8561c <_realloc_r+0xc0>
   85662:	f002 0201 	and.w	r2, r2, #1
   85666:	eb09 0106 	add.w	r1, r9, r6
   8566a:	f043 0301 	orr.w	r3, r3, #1
   8566e:	4332      	orrs	r2, r6
   85670:	f8c9 2004 	str.w	r2, [r9, #4]
   85674:	444f      	add	r7, r9
   85676:	604b      	str	r3, [r1, #4]
   85678:	687b      	ldr	r3, [r7, #4]
   8567a:	3108      	adds	r1, #8
   8567c:	f043 0301 	orr.w	r3, r3, #1
   85680:	607b      	str	r3, [r7, #4]
   85682:	4640      	mov	r0, r8
   85684:	f7ff fe20 	bl	852c8 <_free_r>
   85688:	e7d8      	b.n	8563c <_realloc_r+0xe0>
   8568a:	4611      	mov	r1, r2
   8568c:	f7fe be22 	b.w	842d4 <_malloc_r>
   85690:	f01e 0f01 	tst.w	lr, #1
   85694:	d18f      	bne.n	855b6 <_realloc_r+0x5a>
   85696:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8569a:	eba9 0a01 	sub.w	sl, r9, r1
   8569e:	f8da 1004 	ldr.w	r1, [sl, #4]
   856a2:	f021 0103 	bic.w	r1, r1, #3
   856a6:	440b      	add	r3, r1
   856a8:	443b      	add	r3, r7
   856aa:	4293      	cmp	r3, r2
   856ac:	db26      	blt.n	856fc <_realloc_r+0x1a0>
   856ae:	4655      	mov	r5, sl
   856b0:	68c1      	ldr	r1, [r0, #12]
   856b2:	6880      	ldr	r0, [r0, #8]
   856b4:	1f3a      	subs	r2, r7, #4
   856b6:	60c1      	str	r1, [r0, #12]
   856b8:	6088      	str	r0, [r1, #8]
   856ba:	f855 0f08 	ldr.w	r0, [r5, #8]!
   856be:	f8da 100c 	ldr.w	r1, [sl, #12]
   856c2:	2a24      	cmp	r2, #36	; 0x24
   856c4:	60c1      	str	r1, [r0, #12]
   856c6:	6088      	str	r0, [r1, #8]
   856c8:	d826      	bhi.n	85718 <_realloc_r+0x1bc>
   856ca:	2a13      	cmp	r2, #19
   856cc:	f240 8081 	bls.w	857d2 <_realloc_r+0x276>
   856d0:	6821      	ldr	r1, [r4, #0]
   856d2:	2a1b      	cmp	r2, #27
   856d4:	f8ca 1008 	str.w	r1, [sl, #8]
   856d8:	6861      	ldr	r1, [r4, #4]
   856da:	f8ca 100c 	str.w	r1, [sl, #12]
   856de:	f200 80ad 	bhi.w	8583c <_realloc_r+0x2e0>
   856e2:	f104 0008 	add.w	r0, r4, #8
   856e6:	f10a 0210 	add.w	r2, sl, #16
   856ea:	e074      	b.n	857d6 <_realloc_r+0x27a>
   856ec:	f854 3c08 	ldr.w	r3, [r4, #-8]
   856f0:	eba9 0a03 	sub.w	sl, r9, r3
   856f4:	f8da 1004 	ldr.w	r1, [sl, #4]
   856f8:	f021 0103 	bic.w	r1, r1, #3
   856fc:	187b      	adds	r3, r7, r1
   856fe:	4293      	cmp	r3, r2
   85700:	f6ff af59 	blt.w	855b6 <_realloc_r+0x5a>
   85704:	4655      	mov	r5, sl
   85706:	f8da 100c 	ldr.w	r1, [sl, #12]
   8570a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8570e:	1f3a      	subs	r2, r7, #4
   85710:	2a24      	cmp	r2, #36	; 0x24
   85712:	60c1      	str	r1, [r0, #12]
   85714:	6088      	str	r0, [r1, #8]
   85716:	d9d8      	bls.n	856ca <_realloc_r+0x16e>
   85718:	4621      	mov	r1, r4
   8571a:	4628      	mov	r0, r5
   8571c:	461f      	mov	r7, r3
   8571e:	46d1      	mov	r9, sl
   85720:	f7ff feb8 	bl	85494 <memmove>
   85724:	e77a      	b.n	8561c <_realloc_r+0xc0>
   85726:	6841      	ldr	r1, [r0, #4]
   85728:	f106 0010 	add.w	r0, r6, #16
   8572c:	f021 0b03 	bic.w	fp, r1, #3
   85730:	44bb      	add	fp, r7
   85732:	4583      	cmp	fp, r0
   85734:	da58      	bge.n	857e8 <_realloc_r+0x28c>
   85736:	f01e 0f01 	tst.w	lr, #1
   8573a:	f47f af3c 	bne.w	855b6 <_realloc_r+0x5a>
   8573e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85742:	eba9 0a01 	sub.w	sl, r9, r1
   85746:	f8da 1004 	ldr.w	r1, [sl, #4]
   8574a:	f021 0103 	bic.w	r1, r1, #3
   8574e:	448b      	add	fp, r1
   85750:	4558      	cmp	r0, fp
   85752:	dcd3      	bgt.n	856fc <_realloc_r+0x1a0>
   85754:	4655      	mov	r5, sl
   85756:	f8da 100c 	ldr.w	r1, [sl, #12]
   8575a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8575e:	1f3a      	subs	r2, r7, #4
   85760:	2a24      	cmp	r2, #36	; 0x24
   85762:	60c1      	str	r1, [r0, #12]
   85764:	6088      	str	r0, [r1, #8]
   85766:	f200 808d 	bhi.w	85884 <_realloc_r+0x328>
   8576a:	2a13      	cmp	r2, #19
   8576c:	f240 8087 	bls.w	8587e <_realloc_r+0x322>
   85770:	6821      	ldr	r1, [r4, #0]
   85772:	2a1b      	cmp	r2, #27
   85774:	f8ca 1008 	str.w	r1, [sl, #8]
   85778:	6861      	ldr	r1, [r4, #4]
   8577a:	f8ca 100c 	str.w	r1, [sl, #12]
   8577e:	f200 8088 	bhi.w	85892 <_realloc_r+0x336>
   85782:	f104 0108 	add.w	r1, r4, #8
   85786:	f10a 0210 	add.w	r2, sl, #16
   8578a:	6808      	ldr	r0, [r1, #0]
   8578c:	6010      	str	r0, [r2, #0]
   8578e:	6848      	ldr	r0, [r1, #4]
   85790:	6050      	str	r0, [r2, #4]
   85792:	6889      	ldr	r1, [r1, #8]
   85794:	6091      	str	r1, [r2, #8]
   85796:	ebab 0206 	sub.w	r2, fp, r6
   8579a:	eb0a 0106 	add.w	r1, sl, r6
   8579e:	f042 0201 	orr.w	r2, r2, #1
   857a2:	6099      	str	r1, [r3, #8]
   857a4:	604a      	str	r2, [r1, #4]
   857a6:	f8da 3004 	ldr.w	r3, [sl, #4]
   857aa:	4640      	mov	r0, r8
   857ac:	f003 0301 	and.w	r3, r3, #1
   857b0:	431e      	orrs	r6, r3
   857b2:	f8ca 6004 	str.w	r6, [sl, #4]
   857b6:	f7ff f907 	bl	849c8 <__malloc_unlock>
   857ba:	e742      	b.n	85642 <_realloc_r+0xe6>
   857bc:	6823      	ldr	r3, [r4, #0]
   857be:	2a1b      	cmp	r2, #27
   857c0:	6003      	str	r3, [r0, #0]
   857c2:	6863      	ldr	r3, [r4, #4]
   857c4:	6043      	str	r3, [r0, #4]
   857c6:	d827      	bhi.n	85818 <_realloc_r+0x2bc>
   857c8:	f100 0308 	add.w	r3, r0, #8
   857cc:	f104 0208 	add.w	r2, r4, #8
   857d0:	e70b      	b.n	855ea <_realloc_r+0x8e>
   857d2:	4620      	mov	r0, r4
   857d4:	462a      	mov	r2, r5
   857d6:	6801      	ldr	r1, [r0, #0]
   857d8:	461f      	mov	r7, r3
   857da:	6011      	str	r1, [r2, #0]
   857dc:	6841      	ldr	r1, [r0, #4]
   857de:	46d1      	mov	r9, sl
   857e0:	6051      	str	r1, [r2, #4]
   857e2:	6883      	ldr	r3, [r0, #8]
   857e4:	6093      	str	r3, [r2, #8]
   857e6:	e719      	b.n	8561c <_realloc_r+0xc0>
   857e8:	ebab 0b06 	sub.w	fp, fp, r6
   857ec:	eb09 0106 	add.w	r1, r9, r6
   857f0:	f04b 0201 	orr.w	r2, fp, #1
   857f4:	6099      	str	r1, [r3, #8]
   857f6:	604a      	str	r2, [r1, #4]
   857f8:	f854 3c04 	ldr.w	r3, [r4, #-4]
   857fc:	4640      	mov	r0, r8
   857fe:	f003 0301 	and.w	r3, r3, #1
   85802:	431e      	orrs	r6, r3
   85804:	f844 6c04 	str.w	r6, [r4, #-4]
   85808:	f7ff f8de 	bl	849c8 <__malloc_unlock>
   8580c:	4625      	mov	r5, r4
   8580e:	e718      	b.n	85642 <_realloc_r+0xe6>
   85810:	4621      	mov	r1, r4
   85812:	f7ff fe3f 	bl	85494 <memmove>
   85816:	e6ee      	b.n	855f6 <_realloc_r+0x9a>
   85818:	68a3      	ldr	r3, [r4, #8]
   8581a:	2a24      	cmp	r2, #36	; 0x24
   8581c:	6083      	str	r3, [r0, #8]
   8581e:	68e3      	ldr	r3, [r4, #12]
   85820:	60c3      	str	r3, [r0, #12]
   85822:	d018      	beq.n	85856 <_realloc_r+0x2fa>
   85824:	f100 0310 	add.w	r3, r0, #16
   85828:	f104 0210 	add.w	r2, r4, #16
   8582c:	e6dd      	b.n	855ea <_realloc_r+0x8e>
   8582e:	f850 3c04 	ldr.w	r3, [r0, #-4]
   85832:	4625      	mov	r5, r4
   85834:	f023 0303 	bic.w	r3, r3, #3
   85838:	441f      	add	r7, r3
   8583a:	e6ef      	b.n	8561c <_realloc_r+0xc0>
   8583c:	68a1      	ldr	r1, [r4, #8]
   8583e:	2a24      	cmp	r2, #36	; 0x24
   85840:	f8ca 1010 	str.w	r1, [sl, #16]
   85844:	68e1      	ldr	r1, [r4, #12]
   85846:	f8ca 1014 	str.w	r1, [sl, #20]
   8584a:	d00d      	beq.n	85868 <_realloc_r+0x30c>
   8584c:	f104 0010 	add.w	r0, r4, #16
   85850:	f10a 0218 	add.w	r2, sl, #24
   85854:	e7bf      	b.n	857d6 <_realloc_r+0x27a>
   85856:	6922      	ldr	r2, [r4, #16]
   85858:	f100 0318 	add.w	r3, r0, #24
   8585c:	6102      	str	r2, [r0, #16]
   8585e:	6961      	ldr	r1, [r4, #20]
   85860:	f104 0218 	add.w	r2, r4, #24
   85864:	6141      	str	r1, [r0, #20]
   85866:	e6c0      	b.n	855ea <_realloc_r+0x8e>
   85868:	6922      	ldr	r2, [r4, #16]
   8586a:	f104 0018 	add.w	r0, r4, #24
   8586e:	f8ca 2018 	str.w	r2, [sl, #24]
   85872:	6961      	ldr	r1, [r4, #20]
   85874:	f10a 0220 	add.w	r2, sl, #32
   85878:	f8ca 101c 	str.w	r1, [sl, #28]
   8587c:	e7ab      	b.n	857d6 <_realloc_r+0x27a>
   8587e:	4621      	mov	r1, r4
   85880:	462a      	mov	r2, r5
   85882:	e782      	b.n	8578a <_realloc_r+0x22e>
   85884:	4621      	mov	r1, r4
   85886:	4628      	mov	r0, r5
   85888:	9301      	str	r3, [sp, #4]
   8588a:	f7ff fe03 	bl	85494 <memmove>
   8588e:	9b01      	ldr	r3, [sp, #4]
   85890:	e781      	b.n	85796 <_realloc_r+0x23a>
   85892:	68a1      	ldr	r1, [r4, #8]
   85894:	2a24      	cmp	r2, #36	; 0x24
   85896:	f8ca 1010 	str.w	r1, [sl, #16]
   8589a:	68e1      	ldr	r1, [r4, #12]
   8589c:	f8ca 1014 	str.w	r1, [sl, #20]
   858a0:	d006      	beq.n	858b0 <_realloc_r+0x354>
   858a2:	f104 0110 	add.w	r1, r4, #16
   858a6:	f10a 0218 	add.w	r2, sl, #24
   858aa:	e76e      	b.n	8578a <_realloc_r+0x22e>
   858ac:	20070b30 	.word	0x20070b30
   858b0:	6922      	ldr	r2, [r4, #16]
   858b2:	f104 0118 	add.w	r1, r4, #24
   858b6:	f8ca 2018 	str.w	r2, [sl, #24]
   858ba:	6960      	ldr	r0, [r4, #20]
   858bc:	f10a 0220 	add.w	r2, sl, #32
   858c0:	f8ca 001c 	str.w	r0, [sl, #28]
   858c4:	e761      	b.n	8578a <_realloc_r+0x22e>
   858c6:	bf00      	nop

000858c8 <__aeabi_drsub>:
   858c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   858cc:	e002      	b.n	858d4 <__adddf3>
   858ce:	bf00      	nop

000858d0 <__aeabi_dsub>:
   858d0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000858d4 <__adddf3>:
   858d4:	b530      	push	{r4, r5, lr}
   858d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   858da:	ea4f 0543 	mov.w	r5, r3, lsl #1
   858de:	ea94 0f05 	teq	r4, r5
   858e2:	bf08      	it	eq
   858e4:	ea90 0f02 	teqeq	r0, r2
   858e8:	bf1f      	itttt	ne
   858ea:	ea54 0c00 	orrsne.w	ip, r4, r0
   858ee:	ea55 0c02 	orrsne.w	ip, r5, r2
   858f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   858f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   858fa:	f000 80e2 	beq.w	85ac2 <__adddf3+0x1ee>
   858fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
   85902:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   85906:	bfb8      	it	lt
   85908:	426d      	neglt	r5, r5
   8590a:	dd0c      	ble.n	85926 <__adddf3+0x52>
   8590c:	442c      	add	r4, r5
   8590e:	ea80 0202 	eor.w	r2, r0, r2
   85912:	ea81 0303 	eor.w	r3, r1, r3
   85916:	ea82 0000 	eor.w	r0, r2, r0
   8591a:	ea83 0101 	eor.w	r1, r3, r1
   8591e:	ea80 0202 	eor.w	r2, r0, r2
   85922:	ea81 0303 	eor.w	r3, r1, r3
   85926:	2d36      	cmp	r5, #54	; 0x36
   85928:	bf88      	it	hi
   8592a:	bd30      	pophi	{r4, r5, pc}
   8592c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85930:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85934:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   85938:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8593c:	d002      	beq.n	85944 <__adddf3+0x70>
   8593e:	4240      	negs	r0, r0
   85940:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85944:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   85948:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8594c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   85950:	d002      	beq.n	85958 <__adddf3+0x84>
   85952:	4252      	negs	r2, r2
   85954:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85958:	ea94 0f05 	teq	r4, r5
   8595c:	f000 80a7 	beq.w	85aae <__adddf3+0x1da>
   85960:	f1a4 0401 	sub.w	r4, r4, #1
   85964:	f1d5 0e20 	rsbs	lr, r5, #32
   85968:	db0d      	blt.n	85986 <__adddf3+0xb2>
   8596a:	fa02 fc0e 	lsl.w	ip, r2, lr
   8596e:	fa22 f205 	lsr.w	r2, r2, r5
   85972:	1880      	adds	r0, r0, r2
   85974:	f141 0100 	adc.w	r1, r1, #0
   85978:	fa03 f20e 	lsl.w	r2, r3, lr
   8597c:	1880      	adds	r0, r0, r2
   8597e:	fa43 f305 	asr.w	r3, r3, r5
   85982:	4159      	adcs	r1, r3
   85984:	e00e      	b.n	859a4 <__adddf3+0xd0>
   85986:	f1a5 0520 	sub.w	r5, r5, #32
   8598a:	f10e 0e20 	add.w	lr, lr, #32
   8598e:	2a01      	cmp	r2, #1
   85990:	fa03 fc0e 	lsl.w	ip, r3, lr
   85994:	bf28      	it	cs
   85996:	f04c 0c02 	orrcs.w	ip, ip, #2
   8599a:	fa43 f305 	asr.w	r3, r3, r5
   8599e:	18c0      	adds	r0, r0, r3
   859a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   859a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   859a8:	d507      	bpl.n	859ba <__adddf3+0xe6>
   859aa:	f04f 0e00 	mov.w	lr, #0
   859ae:	f1dc 0c00 	rsbs	ip, ip, #0
   859b2:	eb7e 0000 	sbcs.w	r0, lr, r0
   859b6:	eb6e 0101 	sbc.w	r1, lr, r1
   859ba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   859be:	d31b      	bcc.n	859f8 <__adddf3+0x124>
   859c0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   859c4:	d30c      	bcc.n	859e0 <__adddf3+0x10c>
   859c6:	0849      	lsrs	r1, r1, #1
   859c8:	ea5f 0030 	movs.w	r0, r0, rrx
   859cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   859d0:	f104 0401 	add.w	r4, r4, #1
   859d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   859d8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   859dc:	f080 809a 	bcs.w	85b14 <__adddf3+0x240>
   859e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   859e4:	bf08      	it	eq
   859e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   859ea:	f150 0000 	adcs.w	r0, r0, #0
   859ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   859f2:	ea41 0105 	orr.w	r1, r1, r5
   859f6:	bd30      	pop	{r4, r5, pc}
   859f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   859fc:	4140      	adcs	r0, r0
   859fe:	eb41 0101 	adc.w	r1, r1, r1
   85a02:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85a06:	f1a4 0401 	sub.w	r4, r4, #1
   85a0a:	d1e9      	bne.n	859e0 <__adddf3+0x10c>
   85a0c:	f091 0f00 	teq	r1, #0
   85a10:	bf04      	itt	eq
   85a12:	4601      	moveq	r1, r0
   85a14:	2000      	moveq	r0, #0
   85a16:	fab1 f381 	clz	r3, r1
   85a1a:	bf08      	it	eq
   85a1c:	3320      	addeq	r3, #32
   85a1e:	f1a3 030b 	sub.w	r3, r3, #11
   85a22:	f1b3 0220 	subs.w	r2, r3, #32
   85a26:	da0c      	bge.n	85a42 <__adddf3+0x16e>
   85a28:	320c      	adds	r2, #12
   85a2a:	dd08      	ble.n	85a3e <__adddf3+0x16a>
   85a2c:	f102 0c14 	add.w	ip, r2, #20
   85a30:	f1c2 020c 	rsb	r2, r2, #12
   85a34:	fa01 f00c 	lsl.w	r0, r1, ip
   85a38:	fa21 f102 	lsr.w	r1, r1, r2
   85a3c:	e00c      	b.n	85a58 <__adddf3+0x184>
   85a3e:	f102 0214 	add.w	r2, r2, #20
   85a42:	bfd8      	it	le
   85a44:	f1c2 0c20 	rsble	ip, r2, #32
   85a48:	fa01 f102 	lsl.w	r1, r1, r2
   85a4c:	fa20 fc0c 	lsr.w	ip, r0, ip
   85a50:	bfdc      	itt	le
   85a52:	ea41 010c 	orrle.w	r1, r1, ip
   85a56:	4090      	lslle	r0, r2
   85a58:	1ae4      	subs	r4, r4, r3
   85a5a:	bfa2      	ittt	ge
   85a5c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   85a60:	4329      	orrge	r1, r5
   85a62:	bd30      	popge	{r4, r5, pc}
   85a64:	ea6f 0404 	mvn.w	r4, r4
   85a68:	3c1f      	subs	r4, #31
   85a6a:	da1c      	bge.n	85aa6 <__adddf3+0x1d2>
   85a6c:	340c      	adds	r4, #12
   85a6e:	dc0e      	bgt.n	85a8e <__adddf3+0x1ba>
   85a70:	f104 0414 	add.w	r4, r4, #20
   85a74:	f1c4 0220 	rsb	r2, r4, #32
   85a78:	fa20 f004 	lsr.w	r0, r0, r4
   85a7c:	fa01 f302 	lsl.w	r3, r1, r2
   85a80:	ea40 0003 	orr.w	r0, r0, r3
   85a84:	fa21 f304 	lsr.w	r3, r1, r4
   85a88:	ea45 0103 	orr.w	r1, r5, r3
   85a8c:	bd30      	pop	{r4, r5, pc}
   85a8e:	f1c4 040c 	rsb	r4, r4, #12
   85a92:	f1c4 0220 	rsb	r2, r4, #32
   85a96:	fa20 f002 	lsr.w	r0, r0, r2
   85a9a:	fa01 f304 	lsl.w	r3, r1, r4
   85a9e:	ea40 0003 	orr.w	r0, r0, r3
   85aa2:	4629      	mov	r1, r5
   85aa4:	bd30      	pop	{r4, r5, pc}
   85aa6:	fa21 f004 	lsr.w	r0, r1, r4
   85aaa:	4629      	mov	r1, r5
   85aac:	bd30      	pop	{r4, r5, pc}
   85aae:	f094 0f00 	teq	r4, #0
   85ab2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   85ab6:	bf06      	itte	eq
   85ab8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   85abc:	3401      	addeq	r4, #1
   85abe:	3d01      	subne	r5, #1
   85ac0:	e74e      	b.n	85960 <__adddf3+0x8c>
   85ac2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85ac6:	bf18      	it	ne
   85ac8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85acc:	d029      	beq.n	85b22 <__adddf3+0x24e>
   85ace:	ea94 0f05 	teq	r4, r5
   85ad2:	bf08      	it	eq
   85ad4:	ea90 0f02 	teqeq	r0, r2
   85ad8:	d005      	beq.n	85ae6 <__adddf3+0x212>
   85ada:	ea54 0c00 	orrs.w	ip, r4, r0
   85ade:	bf04      	itt	eq
   85ae0:	4619      	moveq	r1, r3
   85ae2:	4610      	moveq	r0, r2
   85ae4:	bd30      	pop	{r4, r5, pc}
   85ae6:	ea91 0f03 	teq	r1, r3
   85aea:	bf1e      	ittt	ne
   85aec:	2100      	movne	r1, #0
   85aee:	2000      	movne	r0, #0
   85af0:	bd30      	popne	{r4, r5, pc}
   85af2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   85af6:	d105      	bne.n	85b04 <__adddf3+0x230>
   85af8:	0040      	lsls	r0, r0, #1
   85afa:	4149      	adcs	r1, r1
   85afc:	bf28      	it	cs
   85afe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   85b02:	bd30      	pop	{r4, r5, pc}
   85b04:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   85b08:	bf3c      	itt	cc
   85b0a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   85b0e:	bd30      	popcc	{r4, r5, pc}
   85b10:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85b14:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   85b18:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85b1c:	f04f 0000 	mov.w	r0, #0
   85b20:	bd30      	pop	{r4, r5, pc}
   85b22:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85b26:	bf1a      	itte	ne
   85b28:	4619      	movne	r1, r3
   85b2a:	4610      	movne	r0, r2
   85b2c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   85b30:	bf1c      	itt	ne
   85b32:	460b      	movne	r3, r1
   85b34:	4602      	movne	r2, r0
   85b36:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85b3a:	bf06      	itte	eq
   85b3c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   85b40:	ea91 0f03 	teqeq	r1, r3
   85b44:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   85b48:	bd30      	pop	{r4, r5, pc}
   85b4a:	bf00      	nop

00085b4c <__aeabi_ui2d>:
   85b4c:	f090 0f00 	teq	r0, #0
   85b50:	bf04      	itt	eq
   85b52:	2100      	moveq	r1, #0
   85b54:	4770      	bxeq	lr
   85b56:	b530      	push	{r4, r5, lr}
   85b58:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85b5c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85b60:	f04f 0500 	mov.w	r5, #0
   85b64:	f04f 0100 	mov.w	r1, #0
   85b68:	e750      	b.n	85a0c <__adddf3+0x138>
   85b6a:	bf00      	nop

00085b6c <__aeabi_i2d>:
   85b6c:	f090 0f00 	teq	r0, #0
   85b70:	bf04      	itt	eq
   85b72:	2100      	moveq	r1, #0
   85b74:	4770      	bxeq	lr
   85b76:	b530      	push	{r4, r5, lr}
   85b78:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85b7c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85b80:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85b84:	bf48      	it	mi
   85b86:	4240      	negmi	r0, r0
   85b88:	f04f 0100 	mov.w	r1, #0
   85b8c:	e73e      	b.n	85a0c <__adddf3+0x138>
   85b8e:	bf00      	nop

00085b90 <__aeabi_f2d>:
   85b90:	0042      	lsls	r2, r0, #1
   85b92:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85b96:	ea4f 0131 	mov.w	r1, r1, rrx
   85b9a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   85b9e:	bf1f      	itttt	ne
   85ba0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85ba4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85ba8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   85bac:	4770      	bxne	lr
   85bae:	f092 0f00 	teq	r2, #0
   85bb2:	bf14      	ite	ne
   85bb4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85bb8:	4770      	bxeq	lr
   85bba:	b530      	push	{r4, r5, lr}
   85bbc:	f44f 7460 	mov.w	r4, #896	; 0x380
   85bc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85bc4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85bc8:	e720      	b.n	85a0c <__adddf3+0x138>
   85bca:	bf00      	nop

00085bcc <__aeabi_ul2d>:
   85bcc:	ea50 0201 	orrs.w	r2, r0, r1
   85bd0:	bf08      	it	eq
   85bd2:	4770      	bxeq	lr
   85bd4:	b530      	push	{r4, r5, lr}
   85bd6:	f04f 0500 	mov.w	r5, #0
   85bda:	e00a      	b.n	85bf2 <__aeabi_l2d+0x16>

00085bdc <__aeabi_l2d>:
   85bdc:	ea50 0201 	orrs.w	r2, r0, r1
   85be0:	bf08      	it	eq
   85be2:	4770      	bxeq	lr
   85be4:	b530      	push	{r4, r5, lr}
   85be6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   85bea:	d502      	bpl.n	85bf2 <__aeabi_l2d+0x16>
   85bec:	4240      	negs	r0, r0
   85bee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85bf2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85bf6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85bfa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   85bfe:	f43f aedc 	beq.w	859ba <__adddf3+0xe6>
   85c02:	f04f 0203 	mov.w	r2, #3
   85c06:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85c0a:	bf18      	it	ne
   85c0c:	3203      	addne	r2, #3
   85c0e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85c12:	bf18      	it	ne
   85c14:	3203      	addne	r2, #3
   85c16:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   85c1a:	f1c2 0320 	rsb	r3, r2, #32
   85c1e:	fa00 fc03 	lsl.w	ip, r0, r3
   85c22:	fa20 f002 	lsr.w	r0, r0, r2
   85c26:	fa01 fe03 	lsl.w	lr, r1, r3
   85c2a:	ea40 000e 	orr.w	r0, r0, lr
   85c2e:	fa21 f102 	lsr.w	r1, r1, r2
   85c32:	4414      	add	r4, r2
   85c34:	e6c1      	b.n	859ba <__adddf3+0xe6>
   85c36:	bf00      	nop

00085c38 <__aeabi_dmul>:
   85c38:	b570      	push	{r4, r5, r6, lr}
   85c3a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85c3e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85c42:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85c46:	bf1d      	ittte	ne
   85c48:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85c4c:	ea94 0f0c 	teqne	r4, ip
   85c50:	ea95 0f0c 	teqne	r5, ip
   85c54:	f000 f8de 	bleq	85e14 <__aeabi_dmul+0x1dc>
   85c58:	442c      	add	r4, r5
   85c5a:	ea81 0603 	eor.w	r6, r1, r3
   85c5e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85c62:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85c66:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   85c6a:	bf18      	it	ne
   85c6c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85c70:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85c74:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85c78:	d038      	beq.n	85cec <__aeabi_dmul+0xb4>
   85c7a:	fba0 ce02 	umull	ip, lr, r0, r2
   85c7e:	f04f 0500 	mov.w	r5, #0
   85c82:	fbe1 e502 	umlal	lr, r5, r1, r2
   85c86:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   85c8a:	fbe0 e503 	umlal	lr, r5, r0, r3
   85c8e:	f04f 0600 	mov.w	r6, #0
   85c92:	fbe1 5603 	umlal	r5, r6, r1, r3
   85c96:	f09c 0f00 	teq	ip, #0
   85c9a:	bf18      	it	ne
   85c9c:	f04e 0e01 	orrne.w	lr, lr, #1
   85ca0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85ca4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85ca8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   85cac:	d204      	bcs.n	85cb8 <__aeabi_dmul+0x80>
   85cae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85cb2:	416d      	adcs	r5, r5
   85cb4:	eb46 0606 	adc.w	r6, r6, r6
   85cb8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   85cbc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85cc0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85cc4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85cc8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   85ccc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85cd0:	bf88      	it	hi
   85cd2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85cd6:	d81e      	bhi.n	85d16 <__aeabi_dmul+0xde>
   85cd8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   85cdc:	bf08      	it	eq
   85cde:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85ce2:	f150 0000 	adcs.w	r0, r0, #0
   85ce6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85cea:	bd70      	pop	{r4, r5, r6, pc}
   85cec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85cf0:	ea46 0101 	orr.w	r1, r6, r1
   85cf4:	ea40 0002 	orr.w	r0, r0, r2
   85cf8:	ea81 0103 	eor.w	r1, r1, r3
   85cfc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85d00:	bfc2      	ittt	gt
   85d02:	ebd4 050c 	rsbsgt	r5, r4, ip
   85d06:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85d0a:	bd70      	popgt	{r4, r5, r6, pc}
   85d0c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85d10:	f04f 0e00 	mov.w	lr, #0
   85d14:	3c01      	subs	r4, #1
   85d16:	f300 80ab 	bgt.w	85e70 <__aeabi_dmul+0x238>
   85d1a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   85d1e:	bfde      	ittt	le
   85d20:	2000      	movle	r0, #0
   85d22:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   85d26:	bd70      	pople	{r4, r5, r6, pc}
   85d28:	f1c4 0400 	rsb	r4, r4, #0
   85d2c:	3c20      	subs	r4, #32
   85d2e:	da35      	bge.n	85d9c <__aeabi_dmul+0x164>
   85d30:	340c      	adds	r4, #12
   85d32:	dc1b      	bgt.n	85d6c <__aeabi_dmul+0x134>
   85d34:	f104 0414 	add.w	r4, r4, #20
   85d38:	f1c4 0520 	rsb	r5, r4, #32
   85d3c:	fa00 f305 	lsl.w	r3, r0, r5
   85d40:	fa20 f004 	lsr.w	r0, r0, r4
   85d44:	fa01 f205 	lsl.w	r2, r1, r5
   85d48:	ea40 0002 	orr.w	r0, r0, r2
   85d4c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85d50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85d54:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85d58:	fa21 f604 	lsr.w	r6, r1, r4
   85d5c:	eb42 0106 	adc.w	r1, r2, r6
   85d60:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85d64:	bf08      	it	eq
   85d66:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85d6a:	bd70      	pop	{r4, r5, r6, pc}
   85d6c:	f1c4 040c 	rsb	r4, r4, #12
   85d70:	f1c4 0520 	rsb	r5, r4, #32
   85d74:	fa00 f304 	lsl.w	r3, r0, r4
   85d78:	fa20 f005 	lsr.w	r0, r0, r5
   85d7c:	fa01 f204 	lsl.w	r2, r1, r4
   85d80:	ea40 0002 	orr.w	r0, r0, r2
   85d84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85d88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85d8c:	f141 0100 	adc.w	r1, r1, #0
   85d90:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85d94:	bf08      	it	eq
   85d96:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85d9a:	bd70      	pop	{r4, r5, r6, pc}
   85d9c:	f1c4 0520 	rsb	r5, r4, #32
   85da0:	fa00 f205 	lsl.w	r2, r0, r5
   85da4:	ea4e 0e02 	orr.w	lr, lr, r2
   85da8:	fa20 f304 	lsr.w	r3, r0, r4
   85dac:	fa01 f205 	lsl.w	r2, r1, r5
   85db0:	ea43 0302 	orr.w	r3, r3, r2
   85db4:	fa21 f004 	lsr.w	r0, r1, r4
   85db8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85dbc:	fa21 f204 	lsr.w	r2, r1, r4
   85dc0:	ea20 0002 	bic.w	r0, r0, r2
   85dc4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85dc8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85dcc:	bf08      	it	eq
   85dce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85dd2:	bd70      	pop	{r4, r5, r6, pc}
   85dd4:	f094 0f00 	teq	r4, #0
   85dd8:	d10f      	bne.n	85dfa <__aeabi_dmul+0x1c2>
   85dda:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   85dde:	0040      	lsls	r0, r0, #1
   85de0:	eb41 0101 	adc.w	r1, r1, r1
   85de4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85de8:	bf08      	it	eq
   85dea:	3c01      	subeq	r4, #1
   85dec:	d0f7      	beq.n	85dde <__aeabi_dmul+0x1a6>
   85dee:	ea41 0106 	orr.w	r1, r1, r6
   85df2:	f095 0f00 	teq	r5, #0
   85df6:	bf18      	it	ne
   85df8:	4770      	bxne	lr
   85dfa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85dfe:	0052      	lsls	r2, r2, #1
   85e00:	eb43 0303 	adc.w	r3, r3, r3
   85e04:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85e08:	bf08      	it	eq
   85e0a:	3d01      	subeq	r5, #1
   85e0c:	d0f7      	beq.n	85dfe <__aeabi_dmul+0x1c6>
   85e0e:	ea43 0306 	orr.w	r3, r3, r6
   85e12:	4770      	bx	lr
   85e14:	ea94 0f0c 	teq	r4, ip
   85e18:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85e1c:	bf18      	it	ne
   85e1e:	ea95 0f0c 	teqne	r5, ip
   85e22:	d00c      	beq.n	85e3e <__aeabi_dmul+0x206>
   85e24:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85e28:	bf18      	it	ne
   85e2a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85e2e:	d1d1      	bne.n	85dd4 <__aeabi_dmul+0x19c>
   85e30:	ea81 0103 	eor.w	r1, r1, r3
   85e34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85e38:	f04f 0000 	mov.w	r0, #0
   85e3c:	bd70      	pop	{r4, r5, r6, pc}
   85e3e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85e42:	bf06      	itte	eq
   85e44:	4610      	moveq	r0, r2
   85e46:	4619      	moveq	r1, r3
   85e48:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85e4c:	d019      	beq.n	85e82 <__aeabi_dmul+0x24a>
   85e4e:	ea94 0f0c 	teq	r4, ip
   85e52:	d102      	bne.n	85e5a <__aeabi_dmul+0x222>
   85e54:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85e58:	d113      	bne.n	85e82 <__aeabi_dmul+0x24a>
   85e5a:	ea95 0f0c 	teq	r5, ip
   85e5e:	d105      	bne.n	85e6c <__aeabi_dmul+0x234>
   85e60:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85e64:	bf1c      	itt	ne
   85e66:	4610      	movne	r0, r2
   85e68:	4619      	movne	r1, r3
   85e6a:	d10a      	bne.n	85e82 <__aeabi_dmul+0x24a>
   85e6c:	ea81 0103 	eor.w	r1, r1, r3
   85e70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85e74:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85e78:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85e7c:	f04f 0000 	mov.w	r0, #0
   85e80:	bd70      	pop	{r4, r5, r6, pc}
   85e82:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85e86:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   85e8a:	bd70      	pop	{r4, r5, r6, pc}

00085e8c <__aeabi_ddiv>:
   85e8c:	b570      	push	{r4, r5, r6, lr}
   85e8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85e92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85e96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85e9a:	bf1d      	ittte	ne
   85e9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85ea0:	ea94 0f0c 	teqne	r4, ip
   85ea4:	ea95 0f0c 	teqne	r5, ip
   85ea8:	f000 f8a7 	bleq	85ffa <__aeabi_ddiv+0x16e>
   85eac:	eba4 0405 	sub.w	r4, r4, r5
   85eb0:	ea81 0e03 	eor.w	lr, r1, r3
   85eb4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85eb8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85ebc:	f000 8088 	beq.w	85fd0 <__aeabi_ddiv+0x144>
   85ec0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85ec4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85ec8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   85ecc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85ed0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85ed4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85ed8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   85edc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85ee0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85ee4:	429d      	cmp	r5, r3
   85ee6:	bf08      	it	eq
   85ee8:	4296      	cmpeq	r6, r2
   85eea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85eee:	f504 7440 	add.w	r4, r4, #768	; 0x300
   85ef2:	d202      	bcs.n	85efa <__aeabi_ddiv+0x6e>
   85ef4:	085b      	lsrs	r3, r3, #1
   85ef6:	ea4f 0232 	mov.w	r2, r2, rrx
   85efa:	1ab6      	subs	r6, r6, r2
   85efc:	eb65 0503 	sbc.w	r5, r5, r3
   85f00:	085b      	lsrs	r3, r3, #1
   85f02:	ea4f 0232 	mov.w	r2, r2, rrx
   85f06:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85f0a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85f0e:	ebb6 0e02 	subs.w	lr, r6, r2
   85f12:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f16:	bf22      	ittt	cs
   85f18:	1ab6      	subcs	r6, r6, r2
   85f1a:	4675      	movcs	r5, lr
   85f1c:	ea40 000c 	orrcs.w	r0, r0, ip
   85f20:	085b      	lsrs	r3, r3, #1
   85f22:	ea4f 0232 	mov.w	r2, r2, rrx
   85f26:	ebb6 0e02 	subs.w	lr, r6, r2
   85f2a:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f2e:	bf22      	ittt	cs
   85f30:	1ab6      	subcs	r6, r6, r2
   85f32:	4675      	movcs	r5, lr
   85f34:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85f38:	085b      	lsrs	r3, r3, #1
   85f3a:	ea4f 0232 	mov.w	r2, r2, rrx
   85f3e:	ebb6 0e02 	subs.w	lr, r6, r2
   85f42:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f46:	bf22      	ittt	cs
   85f48:	1ab6      	subcs	r6, r6, r2
   85f4a:	4675      	movcs	r5, lr
   85f4c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85f50:	085b      	lsrs	r3, r3, #1
   85f52:	ea4f 0232 	mov.w	r2, r2, rrx
   85f56:	ebb6 0e02 	subs.w	lr, r6, r2
   85f5a:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f5e:	bf22      	ittt	cs
   85f60:	1ab6      	subcs	r6, r6, r2
   85f62:	4675      	movcs	r5, lr
   85f64:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85f68:	ea55 0e06 	orrs.w	lr, r5, r6
   85f6c:	d018      	beq.n	85fa0 <__aeabi_ddiv+0x114>
   85f6e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85f72:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85f76:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85f7a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85f7e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85f82:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85f86:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   85f8a:	d1c0      	bne.n	85f0e <__aeabi_ddiv+0x82>
   85f8c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85f90:	d10b      	bne.n	85faa <__aeabi_ddiv+0x11e>
   85f92:	ea41 0100 	orr.w	r1, r1, r0
   85f96:	f04f 0000 	mov.w	r0, #0
   85f9a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   85f9e:	e7b6      	b.n	85f0e <__aeabi_ddiv+0x82>
   85fa0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85fa4:	bf04      	itt	eq
   85fa6:	4301      	orreq	r1, r0
   85fa8:	2000      	moveq	r0, #0
   85faa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85fae:	bf88      	it	hi
   85fb0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85fb4:	f63f aeaf 	bhi.w	85d16 <__aeabi_dmul+0xde>
   85fb8:	ebb5 0c03 	subs.w	ip, r5, r3
   85fbc:	bf04      	itt	eq
   85fbe:	ebb6 0c02 	subseq.w	ip, r6, r2
   85fc2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85fc6:	f150 0000 	adcs.w	r0, r0, #0
   85fca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85fce:	bd70      	pop	{r4, r5, r6, pc}
   85fd0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   85fd4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85fd8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85fdc:	bfc2      	ittt	gt
   85fde:	ebd4 050c 	rsbsgt	r5, r4, ip
   85fe2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85fe6:	bd70      	popgt	{r4, r5, r6, pc}
   85fe8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85fec:	f04f 0e00 	mov.w	lr, #0
   85ff0:	3c01      	subs	r4, #1
   85ff2:	e690      	b.n	85d16 <__aeabi_dmul+0xde>
   85ff4:	ea45 0e06 	orr.w	lr, r5, r6
   85ff8:	e68d      	b.n	85d16 <__aeabi_dmul+0xde>
   85ffa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85ffe:	ea94 0f0c 	teq	r4, ip
   86002:	bf08      	it	eq
   86004:	ea95 0f0c 	teqeq	r5, ip
   86008:	f43f af3b 	beq.w	85e82 <__aeabi_dmul+0x24a>
   8600c:	ea94 0f0c 	teq	r4, ip
   86010:	d10a      	bne.n	86028 <__aeabi_ddiv+0x19c>
   86012:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86016:	f47f af34 	bne.w	85e82 <__aeabi_dmul+0x24a>
   8601a:	ea95 0f0c 	teq	r5, ip
   8601e:	f47f af25 	bne.w	85e6c <__aeabi_dmul+0x234>
   86022:	4610      	mov	r0, r2
   86024:	4619      	mov	r1, r3
   86026:	e72c      	b.n	85e82 <__aeabi_dmul+0x24a>
   86028:	ea95 0f0c 	teq	r5, ip
   8602c:	d106      	bne.n	8603c <__aeabi_ddiv+0x1b0>
   8602e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86032:	f43f aefd 	beq.w	85e30 <__aeabi_dmul+0x1f8>
   86036:	4610      	mov	r0, r2
   86038:	4619      	mov	r1, r3
   8603a:	e722      	b.n	85e82 <__aeabi_dmul+0x24a>
   8603c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86040:	bf18      	it	ne
   86042:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86046:	f47f aec5 	bne.w	85dd4 <__aeabi_dmul+0x19c>
   8604a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8604e:	f47f af0d 	bne.w	85e6c <__aeabi_dmul+0x234>
   86052:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   86056:	f47f aeeb 	bne.w	85e30 <__aeabi_dmul+0x1f8>
   8605a:	e712      	b.n	85e82 <__aeabi_dmul+0x24a>

0008605c <__gedf2>:
   8605c:	f04f 3cff 	mov.w	ip, #4294967295
   86060:	e006      	b.n	86070 <__cmpdf2+0x4>
   86062:	bf00      	nop

00086064 <__ledf2>:
   86064:	f04f 0c01 	mov.w	ip, #1
   86068:	e002      	b.n	86070 <__cmpdf2+0x4>
   8606a:	bf00      	nop

0008606c <__cmpdf2>:
   8606c:	f04f 0c01 	mov.w	ip, #1
   86070:	f84d cd04 	str.w	ip, [sp, #-4]!
   86074:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86078:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8607c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86080:	bf18      	it	ne
   86082:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   86086:	d01b      	beq.n	860c0 <__cmpdf2+0x54>
   86088:	b001      	add	sp, #4
   8608a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8608e:	bf0c      	ite	eq
   86090:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   86094:	ea91 0f03 	teqne	r1, r3
   86098:	bf02      	ittt	eq
   8609a:	ea90 0f02 	teqeq	r0, r2
   8609e:	2000      	moveq	r0, #0
   860a0:	4770      	bxeq	lr
   860a2:	f110 0f00 	cmn.w	r0, #0
   860a6:	ea91 0f03 	teq	r1, r3
   860aa:	bf58      	it	pl
   860ac:	4299      	cmppl	r1, r3
   860ae:	bf08      	it	eq
   860b0:	4290      	cmpeq	r0, r2
   860b2:	bf2c      	ite	cs
   860b4:	17d8      	asrcs	r0, r3, #31
   860b6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   860ba:	f040 0001 	orr.w	r0, r0, #1
   860be:	4770      	bx	lr
   860c0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   860c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   860c8:	d102      	bne.n	860d0 <__cmpdf2+0x64>
   860ca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   860ce:	d107      	bne.n	860e0 <__cmpdf2+0x74>
   860d0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   860d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   860d8:	d1d6      	bne.n	86088 <__cmpdf2+0x1c>
   860da:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   860de:	d0d3      	beq.n	86088 <__cmpdf2+0x1c>
   860e0:	f85d 0b04 	ldr.w	r0, [sp], #4
   860e4:	4770      	bx	lr
   860e6:	bf00      	nop

000860e8 <__aeabi_cdrcmple>:
   860e8:	4684      	mov	ip, r0
   860ea:	4610      	mov	r0, r2
   860ec:	4662      	mov	r2, ip
   860ee:	468c      	mov	ip, r1
   860f0:	4619      	mov	r1, r3
   860f2:	4663      	mov	r3, ip
   860f4:	e000      	b.n	860f8 <__aeabi_cdcmpeq>
   860f6:	bf00      	nop

000860f8 <__aeabi_cdcmpeq>:
   860f8:	b501      	push	{r0, lr}
   860fa:	f7ff ffb7 	bl	8606c <__cmpdf2>
   860fe:	2800      	cmp	r0, #0
   86100:	bf48      	it	mi
   86102:	f110 0f00 	cmnmi.w	r0, #0
   86106:	bd01      	pop	{r0, pc}

00086108 <__aeabi_dcmpeq>:
   86108:	f84d ed08 	str.w	lr, [sp, #-8]!
   8610c:	f7ff fff4 	bl	860f8 <__aeabi_cdcmpeq>
   86110:	bf0c      	ite	eq
   86112:	2001      	moveq	r0, #1
   86114:	2000      	movne	r0, #0
   86116:	f85d fb08 	ldr.w	pc, [sp], #8
   8611a:	bf00      	nop

0008611c <__aeabi_dcmplt>:
   8611c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86120:	f7ff ffea 	bl	860f8 <__aeabi_cdcmpeq>
   86124:	bf34      	ite	cc
   86126:	2001      	movcc	r0, #1
   86128:	2000      	movcs	r0, #0
   8612a:	f85d fb08 	ldr.w	pc, [sp], #8
   8612e:	bf00      	nop

00086130 <__aeabi_dcmple>:
   86130:	f84d ed08 	str.w	lr, [sp, #-8]!
   86134:	f7ff ffe0 	bl	860f8 <__aeabi_cdcmpeq>
   86138:	bf94      	ite	ls
   8613a:	2001      	movls	r0, #1
   8613c:	2000      	movhi	r0, #0
   8613e:	f85d fb08 	ldr.w	pc, [sp], #8
   86142:	bf00      	nop

00086144 <__aeabi_dcmpge>:
   86144:	f84d ed08 	str.w	lr, [sp, #-8]!
   86148:	f7ff ffce 	bl	860e8 <__aeabi_cdrcmple>
   8614c:	bf94      	ite	ls
   8614e:	2001      	movls	r0, #1
   86150:	2000      	movhi	r0, #0
   86152:	f85d fb08 	ldr.w	pc, [sp], #8
   86156:	bf00      	nop

00086158 <__aeabi_dcmpgt>:
   86158:	f84d ed08 	str.w	lr, [sp, #-8]!
   8615c:	f7ff ffc4 	bl	860e8 <__aeabi_cdrcmple>
   86160:	bf34      	ite	cc
   86162:	2001      	movcc	r0, #1
   86164:	2000      	movcs	r0, #0
   86166:	f85d fb08 	ldr.w	pc, [sp], #8
   8616a:	bf00      	nop

0008616c <__aeabi_dcmpun>:
   8616c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86170:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86174:	d102      	bne.n	8617c <__aeabi_dcmpun+0x10>
   86176:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8617a:	d10a      	bne.n	86192 <__aeabi_dcmpun+0x26>
   8617c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86180:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86184:	d102      	bne.n	8618c <__aeabi_dcmpun+0x20>
   86186:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8618a:	d102      	bne.n	86192 <__aeabi_dcmpun+0x26>
   8618c:	f04f 0000 	mov.w	r0, #0
   86190:	4770      	bx	lr
   86192:	f04f 0001 	mov.w	r0, #1
   86196:	4770      	bx	lr

00086198 <__aeabi_d2iz>:
   86198:	ea4f 0241 	mov.w	r2, r1, lsl #1
   8619c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   861a0:	d215      	bcs.n	861ce <__aeabi_d2iz+0x36>
   861a2:	d511      	bpl.n	861c8 <__aeabi_d2iz+0x30>
   861a4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   861a8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   861ac:	d912      	bls.n	861d4 <__aeabi_d2iz+0x3c>
   861ae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   861b2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   861b6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   861ba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   861be:	fa23 f002 	lsr.w	r0, r3, r2
   861c2:	bf18      	it	ne
   861c4:	4240      	negne	r0, r0
   861c6:	4770      	bx	lr
   861c8:	f04f 0000 	mov.w	r0, #0
   861cc:	4770      	bx	lr
   861ce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   861d2:	d105      	bne.n	861e0 <__aeabi_d2iz+0x48>
   861d4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   861d8:	bf08      	it	eq
   861da:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   861de:	4770      	bx	lr
   861e0:	f04f 0000 	mov.w	r0, #0
   861e4:	4770      	bx	lr
   861e6:	bf00      	nop

000861e8 <__aeabi_uldivmod>:
   861e8:	b953      	cbnz	r3, 86200 <__aeabi_uldivmod+0x18>
   861ea:	b94a      	cbnz	r2, 86200 <__aeabi_uldivmod+0x18>
   861ec:	2900      	cmp	r1, #0
   861ee:	bf08      	it	eq
   861f0:	2800      	cmpeq	r0, #0
   861f2:	bf1c      	itt	ne
   861f4:	f04f 31ff 	movne.w	r1, #4294967295
   861f8:	f04f 30ff 	movne.w	r0, #4294967295
   861fc:	f000 b97a 	b.w	864f4 <__aeabi_idiv0>
   86200:	f1ad 0c08 	sub.w	ip, sp, #8
   86204:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   86208:	f000 f806 	bl	86218 <__udivmoddi4>
   8620c:	f8dd e004 	ldr.w	lr, [sp, #4]
   86210:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86214:	b004      	add	sp, #16
   86216:	4770      	bx	lr

00086218 <__udivmoddi4>:
   86218:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8621c:	468c      	mov	ip, r1
   8621e:	460e      	mov	r6, r1
   86220:	4604      	mov	r4, r0
   86222:	9d08      	ldr	r5, [sp, #32]
   86224:	2b00      	cmp	r3, #0
   86226:	d150      	bne.n	862ca <__udivmoddi4+0xb2>
   86228:	428a      	cmp	r2, r1
   8622a:	4617      	mov	r7, r2
   8622c:	d96c      	bls.n	86308 <__udivmoddi4+0xf0>
   8622e:	fab2 fe82 	clz	lr, r2
   86232:	f1be 0f00 	cmp.w	lr, #0
   86236:	d00b      	beq.n	86250 <__udivmoddi4+0x38>
   86238:	f1ce 0c20 	rsb	ip, lr, #32
   8623c:	fa01 f60e 	lsl.w	r6, r1, lr
   86240:	fa20 fc0c 	lsr.w	ip, r0, ip
   86244:	fa02 f70e 	lsl.w	r7, r2, lr
   86248:	ea4c 0c06 	orr.w	ip, ip, r6
   8624c:	fa00 f40e 	lsl.w	r4, r0, lr
   86250:	0c3a      	lsrs	r2, r7, #16
   86252:	fbbc f9f2 	udiv	r9, ip, r2
   86256:	b2bb      	uxth	r3, r7
   86258:	fb02 cc19 	mls	ip, r2, r9, ip
   8625c:	fb09 fa03 	mul.w	sl, r9, r3
   86260:	ea4f 4814 	mov.w	r8, r4, lsr #16
   86264:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   86268:	45b2      	cmp	sl, r6
   8626a:	d90a      	bls.n	86282 <__udivmoddi4+0x6a>
   8626c:	19f6      	adds	r6, r6, r7
   8626e:	f109 31ff 	add.w	r1, r9, #4294967295
   86272:	f080 8125 	bcs.w	864c0 <__udivmoddi4+0x2a8>
   86276:	45b2      	cmp	sl, r6
   86278:	f240 8122 	bls.w	864c0 <__udivmoddi4+0x2a8>
   8627c:	f1a9 0902 	sub.w	r9, r9, #2
   86280:	443e      	add	r6, r7
   86282:	eba6 060a 	sub.w	r6, r6, sl
   86286:	fbb6 f0f2 	udiv	r0, r6, r2
   8628a:	fb02 6610 	mls	r6, r2, r0, r6
   8628e:	fb00 f303 	mul.w	r3, r0, r3
   86292:	b2a4      	uxth	r4, r4
   86294:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   86298:	42a3      	cmp	r3, r4
   8629a:	d909      	bls.n	862b0 <__udivmoddi4+0x98>
   8629c:	19e4      	adds	r4, r4, r7
   8629e:	f100 32ff 	add.w	r2, r0, #4294967295
   862a2:	f080 810b 	bcs.w	864bc <__udivmoddi4+0x2a4>
   862a6:	42a3      	cmp	r3, r4
   862a8:	f240 8108 	bls.w	864bc <__udivmoddi4+0x2a4>
   862ac:	3802      	subs	r0, #2
   862ae:	443c      	add	r4, r7
   862b0:	2100      	movs	r1, #0
   862b2:	1ae4      	subs	r4, r4, r3
   862b4:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   862b8:	2d00      	cmp	r5, #0
   862ba:	d062      	beq.n	86382 <__udivmoddi4+0x16a>
   862bc:	2300      	movs	r3, #0
   862be:	fa24 f40e 	lsr.w	r4, r4, lr
   862c2:	602c      	str	r4, [r5, #0]
   862c4:	606b      	str	r3, [r5, #4]
   862c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   862ca:	428b      	cmp	r3, r1
   862cc:	d907      	bls.n	862de <__udivmoddi4+0xc6>
   862ce:	2d00      	cmp	r5, #0
   862d0:	d055      	beq.n	8637e <__udivmoddi4+0x166>
   862d2:	2100      	movs	r1, #0
   862d4:	e885 0041 	stmia.w	r5, {r0, r6}
   862d8:	4608      	mov	r0, r1
   862da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   862de:	fab3 f183 	clz	r1, r3
   862e2:	2900      	cmp	r1, #0
   862e4:	f040 808f 	bne.w	86406 <__udivmoddi4+0x1ee>
   862e8:	42b3      	cmp	r3, r6
   862ea:	d302      	bcc.n	862f2 <__udivmoddi4+0xda>
   862ec:	4282      	cmp	r2, r0
   862ee:	f200 80fc 	bhi.w	864ea <__udivmoddi4+0x2d2>
   862f2:	1a84      	subs	r4, r0, r2
   862f4:	eb66 0603 	sbc.w	r6, r6, r3
   862f8:	2001      	movs	r0, #1
   862fa:	46b4      	mov	ip, r6
   862fc:	2d00      	cmp	r5, #0
   862fe:	d040      	beq.n	86382 <__udivmoddi4+0x16a>
   86300:	e885 1010 	stmia.w	r5, {r4, ip}
   86304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86308:	b912      	cbnz	r2, 86310 <__udivmoddi4+0xf8>
   8630a:	2701      	movs	r7, #1
   8630c:	fbb7 f7f2 	udiv	r7, r7, r2
   86310:	fab7 fe87 	clz	lr, r7
   86314:	f1be 0f00 	cmp.w	lr, #0
   86318:	d135      	bne.n	86386 <__udivmoddi4+0x16e>
   8631a:	2101      	movs	r1, #1
   8631c:	1bf6      	subs	r6, r6, r7
   8631e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86322:	fa1f f887 	uxth.w	r8, r7
   86326:	fbb6 f2fc 	udiv	r2, r6, ip
   8632a:	fb0c 6612 	mls	r6, ip, r2, r6
   8632e:	fb08 f002 	mul.w	r0, r8, r2
   86332:	0c23      	lsrs	r3, r4, #16
   86334:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   86338:	42b0      	cmp	r0, r6
   8633a:	d907      	bls.n	8634c <__udivmoddi4+0x134>
   8633c:	19f6      	adds	r6, r6, r7
   8633e:	f102 33ff 	add.w	r3, r2, #4294967295
   86342:	d202      	bcs.n	8634a <__udivmoddi4+0x132>
   86344:	42b0      	cmp	r0, r6
   86346:	f200 80d2 	bhi.w	864ee <__udivmoddi4+0x2d6>
   8634a:	461a      	mov	r2, r3
   8634c:	1a36      	subs	r6, r6, r0
   8634e:	fbb6 f0fc 	udiv	r0, r6, ip
   86352:	fb0c 6610 	mls	r6, ip, r0, r6
   86356:	fb08 f800 	mul.w	r8, r8, r0
   8635a:	b2a3      	uxth	r3, r4
   8635c:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   86360:	45a0      	cmp	r8, r4
   86362:	d907      	bls.n	86374 <__udivmoddi4+0x15c>
   86364:	19e4      	adds	r4, r4, r7
   86366:	f100 33ff 	add.w	r3, r0, #4294967295
   8636a:	d202      	bcs.n	86372 <__udivmoddi4+0x15a>
   8636c:	45a0      	cmp	r8, r4
   8636e:	f200 80b9 	bhi.w	864e4 <__udivmoddi4+0x2cc>
   86372:	4618      	mov	r0, r3
   86374:	eba4 0408 	sub.w	r4, r4, r8
   86378:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   8637c:	e79c      	b.n	862b8 <__udivmoddi4+0xa0>
   8637e:	4629      	mov	r1, r5
   86380:	4628      	mov	r0, r5
   86382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86386:	fa07 f70e 	lsl.w	r7, r7, lr
   8638a:	f1ce 0320 	rsb	r3, lr, #32
   8638e:	fa26 f203 	lsr.w	r2, r6, r3
   86392:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86396:	fbb2 f1fc 	udiv	r1, r2, ip
   8639a:	fa1f f887 	uxth.w	r8, r7
   8639e:	fb0c 2211 	mls	r2, ip, r1, r2
   863a2:	fa06 f60e 	lsl.w	r6, r6, lr
   863a6:	fa20 f303 	lsr.w	r3, r0, r3
   863aa:	fb01 f908 	mul.w	r9, r1, r8
   863ae:	4333      	orrs	r3, r6
   863b0:	0c1e      	lsrs	r6, r3, #16
   863b2:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   863b6:	45b1      	cmp	r9, r6
   863b8:	fa00 f40e 	lsl.w	r4, r0, lr
   863bc:	d909      	bls.n	863d2 <__udivmoddi4+0x1ba>
   863be:	19f6      	adds	r6, r6, r7
   863c0:	f101 32ff 	add.w	r2, r1, #4294967295
   863c4:	f080 808c 	bcs.w	864e0 <__udivmoddi4+0x2c8>
   863c8:	45b1      	cmp	r9, r6
   863ca:	f240 8089 	bls.w	864e0 <__udivmoddi4+0x2c8>
   863ce:	3902      	subs	r1, #2
   863d0:	443e      	add	r6, r7
   863d2:	eba6 0609 	sub.w	r6, r6, r9
   863d6:	fbb6 f0fc 	udiv	r0, r6, ip
   863da:	fb0c 6210 	mls	r2, ip, r0, r6
   863de:	fb00 f908 	mul.w	r9, r0, r8
   863e2:	b29e      	uxth	r6, r3
   863e4:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   863e8:	45b1      	cmp	r9, r6
   863ea:	d907      	bls.n	863fc <__udivmoddi4+0x1e4>
   863ec:	19f6      	adds	r6, r6, r7
   863ee:	f100 33ff 	add.w	r3, r0, #4294967295
   863f2:	d271      	bcs.n	864d8 <__udivmoddi4+0x2c0>
   863f4:	45b1      	cmp	r9, r6
   863f6:	d96f      	bls.n	864d8 <__udivmoddi4+0x2c0>
   863f8:	3802      	subs	r0, #2
   863fa:	443e      	add	r6, r7
   863fc:	eba6 0609 	sub.w	r6, r6, r9
   86400:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   86404:	e78f      	b.n	86326 <__udivmoddi4+0x10e>
   86406:	f1c1 0720 	rsb	r7, r1, #32
   8640a:	fa22 f807 	lsr.w	r8, r2, r7
   8640e:	408b      	lsls	r3, r1
   86410:	ea48 0303 	orr.w	r3, r8, r3
   86414:	fa26 f407 	lsr.w	r4, r6, r7
   86418:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   8641c:	fbb4 f9fe 	udiv	r9, r4, lr
   86420:	fa1f fc83 	uxth.w	ip, r3
   86424:	fb0e 4419 	mls	r4, lr, r9, r4
   86428:	408e      	lsls	r6, r1
   8642a:	fa20 f807 	lsr.w	r8, r0, r7
   8642e:	fb09 fa0c 	mul.w	sl, r9, ip
   86432:	ea48 0806 	orr.w	r8, r8, r6
   86436:	ea4f 4618 	mov.w	r6, r8, lsr #16
   8643a:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   8643e:	45a2      	cmp	sl, r4
   86440:	fa02 f201 	lsl.w	r2, r2, r1
   86444:	fa00 f601 	lsl.w	r6, r0, r1
   86448:	d908      	bls.n	8645c <__udivmoddi4+0x244>
   8644a:	18e4      	adds	r4, r4, r3
   8644c:	f109 30ff 	add.w	r0, r9, #4294967295
   86450:	d244      	bcs.n	864dc <__udivmoddi4+0x2c4>
   86452:	45a2      	cmp	sl, r4
   86454:	d942      	bls.n	864dc <__udivmoddi4+0x2c4>
   86456:	f1a9 0902 	sub.w	r9, r9, #2
   8645a:	441c      	add	r4, r3
   8645c:	eba4 040a 	sub.w	r4, r4, sl
   86460:	fbb4 f0fe 	udiv	r0, r4, lr
   86464:	fb0e 4410 	mls	r4, lr, r0, r4
   86468:	fb00 fc0c 	mul.w	ip, r0, ip
   8646c:	fa1f f888 	uxth.w	r8, r8
   86470:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   86474:	45a4      	cmp	ip, r4
   86476:	d907      	bls.n	86488 <__udivmoddi4+0x270>
   86478:	18e4      	adds	r4, r4, r3
   8647a:	f100 3eff 	add.w	lr, r0, #4294967295
   8647e:	d229      	bcs.n	864d4 <__udivmoddi4+0x2bc>
   86480:	45a4      	cmp	ip, r4
   86482:	d927      	bls.n	864d4 <__udivmoddi4+0x2bc>
   86484:	3802      	subs	r0, #2
   86486:	441c      	add	r4, r3
   86488:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   8648c:	fba0 8902 	umull	r8, r9, r0, r2
   86490:	eba4 0c0c 	sub.w	ip, r4, ip
   86494:	45cc      	cmp	ip, r9
   86496:	46c2      	mov	sl, r8
   86498:	46ce      	mov	lr, r9
   8649a:	d315      	bcc.n	864c8 <__udivmoddi4+0x2b0>
   8649c:	d012      	beq.n	864c4 <__udivmoddi4+0x2ac>
   8649e:	b155      	cbz	r5, 864b6 <__udivmoddi4+0x29e>
   864a0:	ebb6 030a 	subs.w	r3, r6, sl
   864a4:	eb6c 060e 	sbc.w	r6, ip, lr
   864a8:	fa06 f707 	lsl.w	r7, r6, r7
   864ac:	40cb      	lsrs	r3, r1
   864ae:	431f      	orrs	r7, r3
   864b0:	40ce      	lsrs	r6, r1
   864b2:	602f      	str	r7, [r5, #0]
   864b4:	606e      	str	r6, [r5, #4]
   864b6:	2100      	movs	r1, #0
   864b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   864bc:	4610      	mov	r0, r2
   864be:	e6f7      	b.n	862b0 <__udivmoddi4+0x98>
   864c0:	4689      	mov	r9, r1
   864c2:	e6de      	b.n	86282 <__udivmoddi4+0x6a>
   864c4:	4546      	cmp	r6, r8
   864c6:	d2ea      	bcs.n	8649e <__udivmoddi4+0x286>
   864c8:	ebb8 0a02 	subs.w	sl, r8, r2
   864cc:	eb69 0e03 	sbc.w	lr, r9, r3
   864d0:	3801      	subs	r0, #1
   864d2:	e7e4      	b.n	8649e <__udivmoddi4+0x286>
   864d4:	4670      	mov	r0, lr
   864d6:	e7d7      	b.n	86488 <__udivmoddi4+0x270>
   864d8:	4618      	mov	r0, r3
   864da:	e78f      	b.n	863fc <__udivmoddi4+0x1e4>
   864dc:	4681      	mov	r9, r0
   864de:	e7bd      	b.n	8645c <__udivmoddi4+0x244>
   864e0:	4611      	mov	r1, r2
   864e2:	e776      	b.n	863d2 <__udivmoddi4+0x1ba>
   864e4:	3802      	subs	r0, #2
   864e6:	443c      	add	r4, r7
   864e8:	e744      	b.n	86374 <__udivmoddi4+0x15c>
   864ea:	4608      	mov	r0, r1
   864ec:	e706      	b.n	862fc <__udivmoddi4+0xe4>
   864ee:	3a02      	subs	r2, #2
   864f0:	443e      	add	r6, r7
   864f2:	e72b      	b.n	8634c <__udivmoddi4+0x134>

000864f4 <__aeabi_idiv0>:
   864f4:	4770      	bx	lr
   864f6:	bf00      	nop
   864f8:	003e0a0d 	.word	0x003e0a0d
   864fc:	3e3e0a0d 	.word	0x3e3e0a0d
   86500:	0000003e 	.word	0x0000003e
   86504:	00000a0d 	.word	0x00000a0d
   86508:	000a0d20 	.word	0x000a0d20
   8650c:	6e750a0d 	.word	0x6e750a0d
   86510:	776f6e6b 	.word	0x776f6e6b
   86514:	6d63206e 	.word	0x6d63206e
   86518:	25203a64 	.word	0x25203a64
   8651c:	0d583430 	.word	0x0d583430
   86520:	0000000a 	.word	0x0000000a
   86524:	6b5b1b0d 	.word	0x6b5b1b0d
   86528:	3230250d 	.word	0x3230250d
   8652c:	30253a64 	.word	0x30253a64
   86530:	253a6432 	.word	0x253a6432
   86534:	00643230 	.word	0x00643230
   86538:	20732509 	.word	0x20732509
   8653c:	64323025 	.word	0x64323025
   86540:	20732520 	.word	0x20732520
   86544:	64323025 	.word	0x64323025
   86548:	00000000 	.word	0x00000000

0008654c <flashSequ>:
   8654c:	00000032 000001f4 00000032 000004b0     2.......2.......
   8655c:	00000000 0a0d6425 00000000 00006874     ....%d......th..
   8656c:	0000646e 00006472 756e614a 00797261     nd..rd..January.
   8657c:	72626546 79726175 00000000 6372614d     February....Marc
   8658c:	00000068 69727041 0000006c 0079614d     h...April...May.
   8659c:	656e754a 00000000 796c754a 00000000     June....July....
   865ac:	75677541 00007473 74706553 65626d65     August..Septembe
   865bc:	00000072 6f74634f 00726562 65766f4e     r...October.Nove
   865cc:	7265626d 00000000 65636544 7265626d     mber....December
   865dc:	00000000 646e7553 00007961 646e6f4d     ....Sunday..Mond
   865ec:	00007961 73657554 00796164 6e646557     ay..Tuesday.Wedn
   865fc:	61647365 00000079 72756854 79616473     esday...Thursday
   8660c:	00000000 64697246 00007961 75746153     ....Friday..Satu
   8661c:	79616472 00000000                       rday....

00086624 <_cmdEntries>:
   86624:	00006cab 00080b4d 0000aaf6 00080c9d     .l..M...........
	...
   8663c:	0d203a20 0000000a 7465274c 64207461      : .....L'etat d
   8664c:	616c2065 6f726220 20656863 69617465     e la broche etai
   8665c:	61682074 0d207475 0000000a 7465274c     t haut .....L'et
   8666c:	64207461 616c2065 6f726220 20656863     at de la broche 
   8667c:	69617465 61622074 0a0d2073 00000000     etait bas ......

0008668c <usart_console_settings>:
   8668c:	0001c200 000000c0 00000800 00000000     ................
	...

000866a4 <flashSequApp>:
   866a4:	00000064 000001f4 00000064 000001f4     d.......d.......
   866b4:	00000064 00000898 00000000 090a0a0d     d...............
   866c4:	454d5441 5441204c 334d4153 54532055     ATMEL ATSAM3U ST
   866d4:	45545241 0a0a0d44 00000000              ARTED.......

000866e0 <_global_impure_ptr>:
   866e0:	20070598 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   866f0:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   86700:	46454443 00000000 33323130 37363534     CDEF....01234567
   86710:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   86720:	0000296c 00000030                       l)..0...

00086728 <blanks.7223>:
   86728:	20202020 20202020 20202020 20202020                     

00086738 <zeroes.7224>:
   86738:	30303030 30303030 30303030 30303030     0000000000000000
   86748:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   86758:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00086768 <__mprec_bigtens>:
   86768:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   86778:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   86788:	7f73bf3c 75154fdd                       <.s..O.u

00086790 <__mprec_tens>:
   86790:	00000000 3ff00000 00000000 40240000     .......?......$@
   867a0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   867b0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   867c0:	00000000 412e8480 00000000 416312d0     .......A......cA
   867d0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   867e0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   867f0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   86800:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   86810:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   86820:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   86830:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   86840:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   86850:	79d99db4 44ea7843                       ...yCx.D

00086858 <p05.6055>:
   86858:	00000005 00000019 0000007d              ........}...

00086864 <_ctype_>:
   86864:	20202000 20202020 28282020 20282828     .         ((((( 
   86874:	20202020 20202020 20202020 20202020                     
   86884:	10108820 10101010 10101010 10101010      ...............
   86894:	04040410 04040404 10040404 10101010     ................
   868a4:	41411010 41414141 01010101 01010101     ..AAAAAA........
   868b4:	01010101 01010101 01010101 10101010     ................
   868c4:	42421010 42424242 02020202 02020202     ..BBBBBB........
   868d4:	02020202 02020202 02020202 10101010     ................
   868e4:	00000020 00000000 00000000 00000000      ...............
	...

00086968 <_init>:
   86968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8696a:	bf00      	nop
   8696c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8696e:	bc08      	pop	{r3}
   86970:	469e      	mov	lr, r3
   86972:	4770      	bx	lr

00086974 <__init_array_start>:
   86974:	000832e9 	.word	0x000832e9

00086978 <__frame_dummy_init_array_entry>:
   86978:	00080119                                ....

0008697c <_fini>:
   8697c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8697e:	bf00      	nop
   86980:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86982:	bc08      	pop	{r3}
   86984:	469e      	mov	lr, r3
   86986:	4770      	bx	lr

00086988 <__fini_array_start>:
   86988:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007058c 	.word	0x2007058c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <wCRCTable>:
20070138:	00000000 0000c0c1 0000c181 00000140     ............@...
20070148:	0000c301 000003c0 00000280 0000c241     ............A...
20070158:	0000c601 000006c0 00000780 0000c741     ............A...
20070168:	00000500 0000c5c1 0000c481 00000440     ............@...
20070178:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20070188:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
20070198:	00000a00 0000cac1 0000cb81 00000b40     ............@...
200701a8:	0000c901 000009c0 00000880 0000c841     ............A...
200701b8:	0000d801 000018c0 00001980 0000d941     ............A...
200701c8:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200701d8:	00001e00 0000dec1 0000df81 00001f40     ............@...
200701e8:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200701f8:	00001400 0000d4c1 0000d581 00001540     ............@...
20070208:	0000d701 000017c0 00001680 0000d641     ............A...
20070218:	0000d201 000012c0 00001380 0000d341     ............A...
20070228:	00001100 0000d1c1 0000d081 00001040     ............@...
20070238:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20070248:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20070258:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20070268:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20070278:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20070288:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
20070298:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
200702a8:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200702b8:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200702c8:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200702d8:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200702e8:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200702f8:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
20070308:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20070318:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20070328:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20070338:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20070348:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20070358:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20070368:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20070378:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20070388:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
20070398:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
200703a8:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200703b8:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200703c8:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200703d8:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200703e8:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200703f8:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
20070408:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20070418:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20070428:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20070438:	00005000 000090c1 00009181 00005140     .P..........@Q..
20070448:	00009301 000053c0 00005280 00009241     .....S...R..A...
20070458:	00009601 000056c0 00005780 00009741     .....V...W..A...
20070468:	00005500 000095c1 00009481 00005440     .U..........@T..
20070478:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20070488:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
20070498:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
200704a8:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200704b8:	00008801 000048c0 00004980 00008941     .....H...I..A...
200704c8:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200704d8:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200704e8:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200704f8:	00004400 000084c1 00008581 00004540     .D..........@E..
20070508:	00008701 000047c0 00004680 00008641     .....G...F..A...
20070518:	00008201 000042c0 00004380 00008341     .....B...C..A...
20070528:	00004100 000081c1 00008081 00004040     .A..........@@..

20070538 <pErrorFunc>:
20070538:	000804f1                                ....

2007053c <daysOfWeek>:
2007053c:	000865e0 000865e8 000865f0 000865f8     .e...e...e...e..
2007054c:	00086604 00086610 00086618              .f...f...f..

20070558 <months>:
20070558:	00086574 0008657c 00086588 00086590     te..|e...e...e..
20070568:	00086598 0008659c 000865a4 000865ac     .e...e...e...e..
20070578:	000865b4 000865c0 000865c8 000865d4     .e...e...e...e..

20070588 <g_interrupt_enabled>:
20070588:	00000001                                ....

2007058c <SystemCoreClock>:
2007058c:	003d0900                                ..=.

20070590 <_impure_ptr>:
20070590:	20070598 00000000                       ... ....

20070598 <impure_data>:
20070598:	00000000 20070884 200708ec 20070954     ....... ... T.. 
	...
20070640:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070650:	0005deec 0000000b 00000000 00000000     ................
	...

200709c0 <__atexit_recursive_mutex>:
200709c0:	2007149c                                ... 

200709c4 <__global_locale>:
200709c4:	00000043 00000000 00000000 00000000     C...............
	...
200709e4:	00000043 00000000 00000000 00000000     C...............
	...
20070a04:	00000043 00000000 00000000 00000000     C...............
	...
20070a24:	00000043 00000000 00000000 00000000     C...............
	...
20070a44:	00000043 00000000 00000000 00000000     C...............
	...
20070a64:	00000043 00000000 00000000 00000000     C...............
	...
20070a84:	00000043 00000000 00000000 00000000     C...............
	...
20070aa4:	000850ed 00084819 00000000 00086864     .P...H......dh..
20070ab4:	00086764 000866dc 000866dc 000866dc     dg...f...f...f..
20070ac4:	000866dc 000866dc 000866dc 000866dc     .f...f...f...f..
20070ad4:	000866dc 000866dc ffffffff ffffffff     .f...f..........
20070ae4:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070b0c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070b30 <__malloc_av_>:
	...
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 
20070b88:	20070b80 20070b80 20070b88 20070b88     ... ... ... ... 
20070b98:	20070b90 20070b90 20070b98 20070b98     ... ... ... ... 
20070ba8:	20070ba0 20070ba0 20070ba8 20070ba8     ... ... ... ... 
20070bb8:	20070bb0 20070bb0 20070bb8 20070bb8     ... ... ... ... 
20070bc8:	20070bc0 20070bc0 20070bc8 20070bc8     ... ... ... ... 
20070bd8:	20070bd0 20070bd0 20070bd8 20070bd8     ... ... ... ... 
20070be8:	20070be0 20070be0 20070be8 20070be8     ... ... ... ... 
20070bf8:	20070bf0 20070bf0 20070bf8 20070bf8     ... ... ... ... 
20070c08:	20070c00 20070c00 20070c08 20070c08     ... ... ... ... 
20070c18:	20070c10 20070c10 20070c18 20070c18     ... ... ... ... 
20070c28:	20070c20 20070c20 20070c28 20070c28      ..  .. (.. (.. 
20070c38:	20070c30 20070c30 20070c38 20070c38     0.. 0.. 8.. 8.. 
20070c48:	20070c40 20070c40 20070c48 20070c48     @.. @.. H.. H.. 
20070c58:	20070c50 20070c50 20070c58 20070c58     P.. P.. X.. X.. 
20070c68:	20070c60 20070c60 20070c68 20070c68     `.. `.. h.. h.. 
20070c78:	20070c70 20070c70 20070c78 20070c78     p.. p.. x.. x.. 
20070c88:	20070c80 20070c80 20070c88 20070c88     ... ... ... ... 
20070c98:	20070c90 20070c90 20070c98 20070c98     ... ... ... ... 
20070ca8:	20070ca0 20070ca0 20070ca8 20070ca8     ... ... ... ... 
20070cb8:	20070cb0 20070cb0 20070cb8 20070cb8     ... ... ... ... 
20070cc8:	20070cc0 20070cc0 20070cc8 20070cc8     ... ... ... ... 
20070cd8:	20070cd0 20070cd0 20070cd8 20070cd8     ... ... ... ... 
20070ce8:	20070ce0 20070ce0 20070ce8 20070ce8     ... ... ... ... 
20070cf8:	20070cf0 20070cf0 20070cf8 20070cf8     ... ... ... ... 
20070d08:	20070d00 20070d00 20070d08 20070d08     ... ... ... ... 
20070d18:	20070d10 20070d10 20070d18 20070d18     ... ... ... ... 
20070d28:	20070d20 20070d20 20070d28 20070d28      ..  .. (.. (.. 
20070d38:	20070d30 20070d30 20070d38 20070d38     0.. 0.. 8.. 8.. 
20070d48:	20070d40 20070d40 20070d48 20070d48     @.. @.. H.. H.. 
20070d58:	20070d50 20070d50 20070d58 20070d58     P.. P.. X.. X.. 
20070d68:	20070d60 20070d60 20070d68 20070d68     `.. `.. h.. h.. 
20070d78:	20070d70 20070d70 20070d78 20070d78     p.. p.. x.. x.. 
20070d88:	20070d80 20070d80 20070d88 20070d88     ... ... ... ... 
20070d98:	20070d90 20070d90 20070d98 20070d98     ... ... ... ... 
20070da8:	20070da0 20070da0 20070da8 20070da8     ... ... ... ... 
20070db8:	20070db0 20070db0 20070db8 20070db8     ... ... ... ... 
20070dc8:	20070dc0 20070dc0 20070dc8 20070dc8     ... ... ... ... 
20070dd8:	20070dd0 20070dd0 20070dd8 20070dd8     ... ... ... ... 
20070de8:	20070de0 20070de0 20070de8 20070de8     ... ... ... ... 
20070df8:	20070df0 20070df0 20070df8 20070df8     ... ... ... ... 
20070e08:	20070e00 20070e00 20070e08 20070e08     ... ... ... ... 
20070e18:	20070e10 20070e10 20070e18 20070e18     ... ... ... ... 
20070e28:	20070e20 20070e20 20070e28 20070e28      ..  .. (.. (.. 
20070e38:	20070e30 20070e30 20070e38 20070e38     0.. 0.. 8.. 8.. 
20070e48:	20070e40 20070e40 20070e48 20070e48     @.. @.. H.. H.. 
20070e58:	20070e50 20070e50 20070e58 20070e58     P.. P.. X.. X.. 
20070e68:	20070e60 20070e60 20070e68 20070e68     `.. `.. h.. h.. 
20070e78:	20070e70 20070e70 20070e78 20070e78     p.. p.. x.. x.. 
20070e88:	20070e80 20070e80 20070e88 20070e88     ... ... ... ... 
20070e98:	20070e90 20070e90 20070e98 20070e98     ... ... ... ... 
20070ea8:	20070ea0 20070ea0 20070ea8 20070ea8     ... ... ... ... 
20070eb8:	20070eb0 20070eb0 20070eb8 20070eb8     ... ... ... ... 
20070ec8:	20070ec0 20070ec0 20070ec8 20070ec8     ... ... ... ... 
20070ed8:	20070ed0 20070ed0 20070ed8 20070ed8     ... ... ... ... 
20070ee8:	20070ee0 20070ee0 20070ee8 20070ee8     ... ... ... ... 
20070ef8:	20070ef0 20070ef0 20070ef8 20070ef8     ... ... ... ... 
20070f08:	20070f00 20070f00 20070f08 20070f08     ... ... ... ... 
20070f18:	20070f10 20070f10 20070f18 20070f18     ... ... ... ... 
20070f28:	20070f20 20070f20 20070f28 20070f28      ..  .. (.. (.. 

20070f38 <__malloc_sbrk_base>:
20070f38:	ffffffff                                ....

20070f3c <__malloc_trim_threshold>:
20070f3c:	00020000                                ....
