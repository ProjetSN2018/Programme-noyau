
Noyau.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006a1c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00086a1c  00086a1c  00016a1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000f50  20070000  00086a24  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000584  20070f50  00087974  00020f50  2**2
                  ALLOC
  4 .stack        00002004  200714d4  00087ef8  00020f50  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020f50  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020f79  2**0
                  CONTENTS, READONLY
  7 .debug_info   00019442  00000000  00000000  00020fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003d40  00000000  00000000  0003a414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004b1e  00000000  00000000  0003e154  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ab8  00000000  00000000  00042c72  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000990  00000000  00000000  0004372a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001b0e4  00000000  00000000  000440ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00012999  00000000  00000000  0005f19e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00064e66  00000000  00000000  00071b37  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000023d4  00000000  00000000  000d69a0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	d8 34 07 20 fd 18 08 00 f9 18 08 00 f9 18 08 00     .4. ............
   80010:	f9 18 08 00 f9 18 08 00 f9 18 08 00 00 00 00 00     ................
	...
   8002c:	f9 18 08 00 f9 18 08 00 00 00 00 00 f9 18 08 00     ................
   8003c:	f9 18 08 00 f9 18 08 00 f9 18 08 00 b5 06 08 00     ................
   8004c:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................
   8005c:	f9 18 08 00 f9 18 08 00 f9 18 08 00 00 00 00 00     ................
   8006c:	6d 17 08 00 81 17 08 00 95 17 08 00 a9 17 08 00     m...............
	...
   80084:	21 0f 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     !...............
   80094:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................
   800a4:	00 00 00 00 f9 18 08 00 9d 11 08 00 f9 18 08 00     ................
   800b4:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................
   800c4:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................
   800d4:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................
   800e4:	f9 18 08 00 f9 18 08 00 f9 18 08 00 f9 18 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070f50 	.word	0x20070f50
   80110:	00000000 	.word	0x00000000
   80114:	00086a24 	.word	0x00086a24

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00086a24 	.word	0x00086a24
   80154:	20070f54 	.word	0x20070f54
   80158:	00086a24 	.word	0x00086a24
   8015c:	00000000 	.word	0x00000000

00080160 <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
   80160:	b921      	cbnz	r1, 8016c <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
   80162:	6843      	ldr	r3, [r0, #4]
   80164:	f023 0301 	bic.w	r3, r3, #1
   80168:	6043      	str	r3, [r0, #4]
   8016a:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
   8016c:	6843      	ldr	r3, [r0, #4]
   8016e:	f043 0301 	orr.w	r3, r3, #1
   80172:	6043      	str	r3, [r0, #4]
   80174:	4770      	bx	lr

00080176 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
   80176:	6201      	str	r1, [r0, #32]
   80178:	4770      	bx	lr

0008017a <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
   8017a:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
   8017c:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   8017e:	6884      	ldr	r4, [r0, #8]
   80180:	42a5      	cmp	r5, r4
   80182:	d003      	beq.n	8018c <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
   80184:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   80186:	6884      	ldr	r4, [r0, #8]
   80188:	42ac      	cmp	r4, r5
   8018a:	d1fb      	bne.n	80184 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
   8018c:	b161      	cbz	r1, 801a8 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8018e:	f3c4 5001 	ubfx	r0, r4, #20, #2
   80192:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80196:	f3c4 4003 	ubfx	r0, r4, #16, #4
   8019a:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
   8019e:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
   801a2:	bf18      	it	ne
   801a4:	300c      	addne	r0, #12
   801a6:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
   801a8:	b142      	cbz	r2, 801bc <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
   801aa:	f3c4 3102 	ubfx	r1, r4, #12, #3
   801ae:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   801b2:	f3c4 2003 	ubfx	r0, r4, #8, #4
   801b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   801ba:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
   801bc:	b143      	cbz	r3, 801d0 <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   801be:	f3c4 1202 	ubfx	r2, r4, #4, #3
   801c2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   801c6:	f004 040f 	and.w	r4, r4, #15
   801ca:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   801ce:	601c      	str	r4, [r3, #0]
	}
}
   801d0:	bc30      	pop	{r4, r5}
   801d2:	4770      	bx	lr

000801d4 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
   801d4:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
   801d6:	6844      	ldr	r4, [r0, #4]
   801d8:	f014 0f01 	tst.w	r4, #1
   801dc:	d005      	beq.n	801ea <rtc_set_time+0x16>
		if (ul_hour > 12) {
   801de:	290c      	cmp	r1, #12
   801e0:	d93d      	bls.n	8025e <rtc_set_time+0x8a>
			ul_hour -= 12;
   801e2:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
   801e4:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   801e8:	e000      	b.n	801ec <rtc_set_time+0x18>
	uint32_t ul_time = 0;
   801ea:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   801ec:	4c1d      	ldr	r4, [pc, #116]	; (80264 <rtc_set_time+0x90>)
   801ee:	fba4 5603 	umull	r5, r6, r4, r3
   801f2:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
   801f4:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   801f8:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   801fc:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
   80200:	fba4 6502 	umull	r6, r5, r4, r2
   80204:	08ed      	lsrs	r5, r5, #3
   80206:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
   8020a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8020e:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   80212:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80216:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
   80218:	fba4 4201 	umull	r4, r2, r4, r1
   8021c:	08d2      	lsrs	r2, r2, #3
   8021e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
   80222:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80226:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   8022a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   8022e:	6983      	ldr	r3, [r0, #24]
   80230:	f013 0f04 	tst.w	r3, #4
   80234:	d0fb      	beq.n	8022e <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
   80236:	6803      	ldr	r3, [r0, #0]
   80238:	f043 0301 	orr.w	r3, r3, #1
   8023c:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   8023e:	6983      	ldr	r3, [r0, #24]
   80240:	f013 0f01 	tst.w	r3, #1
   80244:	d0fb      	beq.n	8023e <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80246:	2301      	movs	r3, #1
   80248:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
   8024a:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
   8024c:	6803      	ldr	r3, [r0, #0]
   8024e:	f023 0301 	bic.w	r3, r3, #1
   80252:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
   80254:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80256:	f000 0001 	and.w	r0, r0, #1
   8025a:	bcf0      	pop	{r4, r5, r6, r7}
   8025c:	4770      	bx	lr
	uint32_t ul_time = 0;
   8025e:	2700      	movs	r7, #0
   80260:	e7c4      	b.n	801ec <rtc_set_time+0x18>
   80262:	bf00      	nop
   80264:	cccccccd 	.word	0xcccccccd

00080268 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
   80268:	b4f0      	push	{r4, r5, r6, r7}
   8026a:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
   8026c:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   8026e:	68c4      	ldr	r4, [r0, #12]
   80270:	42a5      	cmp	r5, r4
   80272:	d003      	beq.n	8027c <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
   80274:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   80276:	68c4      	ldr	r4, [r0, #12]
   80278:	42ac      	cmp	r4, r5
   8027a:	d1fb      	bne.n	80274 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
   8027c:	b199      	cbz	r1, 802a6 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8027e:	f3c4 3003 	ubfx	r0, r4, #12, #4
   80282:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80286:	f3c4 2703 	ubfx	r7, r4, #8, #4
   8028a:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8028e:	f3c4 1002 	ubfx	r0, r4, #4, #3
   80292:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80296:	f004 000f 	and.w	r0, r4, #15
   8029a:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8029e:	2564      	movs	r5, #100	; 0x64
   802a0:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
   802a4:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
   802a6:	b142      	cbz	r2, 802ba <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802a8:	f3c4 5000 	ubfx	r0, r4, #20, #1
   802ac:	0081      	lsls	r1, r0, #2
   802ae:	4408      	add	r0, r1
   802b0:	f3c4 4103 	ubfx	r1, r4, #16, #4
   802b4:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   802b8:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
   802ba:	b143      	cbz	r3, 802ce <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   802bc:	f3c4 7201 	ubfx	r2, r4, #28, #2
   802c0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   802c4:	f3c4 6103 	ubfx	r1, r4, #24, #4
   802c8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   802cc:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
   802ce:	b116      	cbz	r6, 802d6 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
   802d0:	f3c4 5442 	ubfx	r4, r4, #21, #3
   802d4:	6034      	str	r4, [r6, #0]
	}
}
   802d6:	bcf0      	pop	{r4, r5, r6, r7}
   802d8:	4770      	bx	lr
	...

000802dc <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
   802dc:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802de:	4d2a      	ldr	r5, [pc, #168]	; (80388 <rtc_set_date+0xac>)
   802e0:	fba5 4603 	umull	r4, r6, r5, r3
   802e4:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
   802e6:	9c03      	ldr	r4, [sp, #12]
   802e8:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802ea:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
   802ee:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   802f2:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   802f6:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
   802fa:	fba5 6402 	umull	r6, r4, r5, r2
   802fe:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80300:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
   80304:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80308:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   8030c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
   80310:	4b1e      	ldr	r3, [pc, #120]	; (8038c <rtc_set_date+0xb0>)
   80312:	fba3 4301 	umull	r4, r3, r3, r1
   80316:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80318:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
   8031c:	4b1c      	ldr	r3, [pc, #112]	; (80390 <rtc_set_date+0xb4>)
   8031e:	fba3 4301 	umull	r4, r3, r3, r1
   80322:	095b      	lsrs	r3, r3, #5
   80324:	fba5 6403 	umull	r6, r4, r5, r3
   80328:	08e4      	lsrs	r4, r4, #3
   8032a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8032e:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80332:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
   80334:	fba5 4301 	umull	r4, r3, r5, r1
   80338:	08db      	lsrs	r3, r3, #3
   8033a:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   8033e:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80342:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
   80346:	fba5 1503 	umull	r1, r5, r5, r3
   8034a:	08ed      	lsrs	r5, r5, #3
   8034c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80350:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
   80354:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   80358:	6983      	ldr	r3, [r0, #24]
   8035a:	f013 0f04 	tst.w	r3, #4
   8035e:	d0fb      	beq.n	80358 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
   80360:	6803      	ldr	r3, [r0, #0]
   80362:	f043 0302 	orr.w	r3, r3, #2
   80366:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   80368:	6983      	ldr	r3, [r0, #24]
   8036a:	f013 0f01 	tst.w	r3, #1
   8036e:	d0fb      	beq.n	80368 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   80370:	2301      	movs	r3, #1
   80372:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
   80374:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
   80376:	6803      	ldr	r3, [r0, #0]
   80378:	f023 0302 	bic.w	r3, r3, #2
   8037c:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
   8037e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   80380:	f000 0002 	and.w	r0, r0, #2
   80384:	bc70      	pop	{r4, r5, r6}
   80386:	4770      	bx	lr
   80388:	cccccccd 	.word	0xcccccccd
   8038c:	10624dd3 	.word	0x10624dd3
   80390:	51eb851f 	.word	0x51eb851f

00080394 <Menu>:
	  ("\r\nvous?\r\n")
  };
  int i = 0;

  int Menu(int sc, ...)
  {
   80394:	b40f      	push	{r0, r1, r2, r3}
   80396:	b570      	push	{r4, r5, r6, lr}
   80398:	b082      	sub	sp, #8
   8039a:	9906      	ldr	r1, [sp, #24]
	switch(sc)
   8039c:	2965      	cmp	r1, #101	; 0x65
   8039e:	d039      	beq.n	80414 <Menu+0x80>
   803a0:	2966      	cmp	r1, #102	; 0x66
   803a2:	d032      	beq.n	8040a <Menu+0x76>
   803a4:	2964      	cmp	r1, #100	; 0x64
   803a6:	d004      	beq.n	803b2 <Menu+0x1e>

	case MENU_SELECTED:
		
		break;
	default:
		Error(ERR_MENU_SWITCH_BAD_SC, sc);
   803a8:	4b27      	ldr	r3, [pc, #156]	; (80448 <Menu+0xb4>)
   803aa:	681b      	ldr	r3, [r3, #0]
   803ac:	2010      	movs	r0, #16
   803ae:	4798      	blx	r3
   803b0:	e02b      	b.n	8040a <Menu+0x76>
		pmc_enable_periph_clk(ID_PIOA);
   803b2:	200b      	movs	r0, #11
   803b4:	4b25      	ldr	r3, [pc, #148]	; (8044c <Menu+0xb8>)
   803b6:	4798      	blx	r3
		pio_set_output(PIOA, PIO_PA23, LOW, DISABLE, ENABLE);
   803b8:	4c25      	ldr	r4, [pc, #148]	; (80450 <Menu+0xbc>)
   803ba:	2501      	movs	r5, #1
   803bc:	9500      	str	r5, [sp, #0]
   803be:	2300      	movs	r3, #0
   803c0:	461a      	mov	r2, r3
   803c2:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
   803c6:	4620      	mov	r0, r4
   803c8:	4e22      	ldr	r6, [pc, #136]	; (80454 <Menu+0xc0>)
   803ca:	47b0      	blx	r6
		pio_set_output(PIOA, PIO_PA24, LOW, DISABLE, ENABLE);
   803cc:	9500      	str	r5, [sp, #0]
   803ce:	2300      	movs	r3, #0
   803d0:	461a      	mov	r2, r3
   803d2:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
   803d6:	4620      	mov	r0, r4
   803d8:	47b0      	blx	r6
		pio_set_input(PIOA, PIO_PA16, PIO_PULLUP);
   803da:	462a      	mov	r2, r5
   803dc:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   803e0:	4620      	mov	r0, r4
   803e2:	4b1d      	ldr	r3, [pc, #116]	; (80458 <Menu+0xc4>)
   803e4:	4798      	blx	r3
		pio_handler_set(PIOA, ID_PIOA, PIO_PA16, PIO_IT_FALL_EDGE, pin_edge_handler);
   803e6:	4b1d      	ldr	r3, [pc, #116]	; (8045c <Menu+0xc8>)
   803e8:	9300      	str	r3, [sp, #0]
   803ea:	2350      	movs	r3, #80	; 0x50
   803ec:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   803f0:	210b      	movs	r1, #11
   803f2:	4620      	mov	r0, r4
   803f4:	4d1a      	ldr	r5, [pc, #104]	; (80460 <Menu+0xcc>)
   803f6:	47a8      	blx	r5
		pio_enable_interrupt(PIOA, PIO_PA16);
   803f8:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   803fc:	4620      	mov	r0, r4
   803fe:	4b19      	ldr	r3, [pc, #100]	; (80464 <Menu+0xd0>)
   80400:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80402:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80406:	4b18      	ldr	r3, [pc, #96]	; (80468 <Menu+0xd4>)
   80408:	601a      	str	r2, [r3, #0]
	}
  }
   8040a:	b002      	add	sp, #8
   8040c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   80410:	b004      	add	sp, #16
   80412:	4770      	bx	lr
		 pio_toggle_pin(PIO_PA23_IDX);
   80414:	2017      	movs	r0, #23
   80416:	4b15      	ldr	r3, [pc, #84]	; (8046c <Menu+0xd8>)
   80418:	4798      	blx	r3
		 sprintf(buf, tabl[i]);
   8041a:	4c15      	ldr	r4, [pc, #84]	; (80470 <Menu+0xdc>)
   8041c:	6822      	ldr	r2, [r4, #0]
   8041e:	4d15      	ldr	r5, [pc, #84]	; (80474 <Menu+0xe0>)
   80420:	4b15      	ldr	r3, [pc, #84]	; (80478 <Menu+0xe4>)
   80422:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   80426:	4628      	mov	r0, r5
   80428:	4b14      	ldr	r3, [pc, #80]	; (8047c <Menu+0xe8>)
   8042a:	4798      	blx	r3
		 Putstr(buf);
   8042c:	4629      	mov	r1, r5
   8042e:	2067      	movs	r0, #103	; 0x67
   80430:	4b13      	ldr	r3, [pc, #76]	; (80480 <Menu+0xec>)
   80432:	4798      	blx	r3
		 i++;
   80434:	6823      	ldr	r3, [r4, #0]
   80436:	3301      	adds	r3, #1
		 if(i >=4) i =0;
   80438:	2b03      	cmp	r3, #3
   8043a:	dc01      	bgt.n	80440 <Menu+0xac>
		 i++;
   8043c:	6023      	str	r3, [r4, #0]
   8043e:	e7e4      	b.n	8040a <Menu+0x76>
		 if(i >=4) i =0;
   80440:	2200      	movs	r2, #0
   80442:	4b0b      	ldr	r3, [pc, #44]	; (80470 <Menu+0xdc>)
   80444:	601a      	str	r2, [r3, #0]
   80446:	e7e0      	b.n	8040a <Menu+0x76>
   80448:	20070548 	.word	0x20070548
   8044c:	000818a5 	.word	0x000818a5
   80450:	400e0e00 	.word	0x400e0e00
   80454:	0008148d 	.word	0x0008148d
   80458:	0008145b 	.word	0x0008145b
   8045c:	00080485 	.word	0x00080485
   80460:	000816fd 	.word	0x000816fd
   80464:	000814e1 	.word	0x000814e1
   80468:	e000e100 	.word	0xe000e100
   8046c:	00081521 	.word	0x00081521
   80470:	20070f6c 	.word	0x20070f6c
   80474:	200713ac 	.word	0x200713ac
   80478:	20070138 	.word	0x20070138
   8047c:	00081bd9 	.word	0x00081bd9
   80480:	00080d89 	.word	0x00080d89

00080484 <pin_edge_handler>:

   void pin_edge_handler()
   {
   80484:	b510      	push	{r4, lr}
   80486:	b082      	sub	sp, #8
	   PushTask(Menu,MENU_BUTTON,0,0);
   80488:	2300      	movs	r3, #0
   8048a:	9300      	str	r3, [sp, #0]
   8048c:	2265      	movs	r2, #101	; 0x65
   8048e:	4903      	ldr	r1, [pc, #12]	; (8049c <pin_edge_handler+0x18>)
   80490:	2066      	movs	r0, #102	; 0x66
   80492:	4c03      	ldr	r4, [pc, #12]	; (804a0 <pin_edge_handler+0x1c>)
   80494:	47a0      	blx	r4
   }
   80496:	b002      	add	sp, #8
   80498:	bd10      	pop	{r4, pc}
   8049a:	bf00      	nop
   8049c:	00080395 	.word	0x00080395
   804a0:	00080fa1 	.word	0x00080fa1

000804a4 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   804a4:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   804a6:	0189      	lsls	r1, r1, #6
   804a8:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   804aa:	2402      	movs	r4, #2
   804ac:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   804ae:	f04f 31ff 	mov.w	r1, #4294967295
   804b2:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   804b4:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   804b6:	605a      	str	r2, [r3, #4]
}
   804b8:	bc10      	pop	{r4}
   804ba:	4770      	bx	lr

000804bc <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   804bc:	0189      	lsls	r1, r1, #6
   804be:	2305      	movs	r3, #5
   804c0:	5043      	str	r3, [r0, r1]
   804c2:	4770      	bx	lr

000804c4 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   804c4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   804c8:	614a      	str	r2, [r1, #20]
   804ca:	4770      	bx	lr

000804cc <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   804cc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   804d0:	61ca      	str	r2, [r1, #28]
   804d2:	4770      	bx	lr

000804d4 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   804d4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   804d8:	624a      	str	r2, [r1, #36]	; 0x24
   804da:	4770      	bx	lr

000804dc <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   804dc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   804e0:	6a08      	ldr	r0, [r1, #32]
}
   804e2:	4770      	bx	lr

000804e4 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
   804e4:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
   804e6:	010b      	lsls	r3, r1, #4
   804e8:	4293      	cmp	r3, r2
   804ea:	d914      	bls.n	80516 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   804ec:	00c9      	lsls	r1, r1, #3
   804ee:	084b      	lsrs	r3, r1, #1
   804f0:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
   804f4:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
   804f8:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   804fa:	1e5c      	subs	r4, r3, #1
   804fc:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   80500:	428c      	cmp	r4, r1
   80502:	d901      	bls.n	80508 <usart_set_async_baudrate+0x24>
		return 1;
   80504:	2001      	movs	r0, #1
   80506:	e017      	b.n	80538 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
   80508:	6841      	ldr	r1, [r0, #4]
   8050a:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
   8050e:	6041      	str	r1, [r0, #4]
   80510:	e00c      	b.n	8052c <usart_set_async_baudrate+0x48>
		return 1;
   80512:	2001      	movs	r0, #1
   80514:	e010      	b.n	80538 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
   80516:	0859      	lsrs	r1, r3, #1
   80518:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8051c:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
   80520:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
   80522:	1e5c      	subs	r4, r3, #1
   80524:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   80528:	428c      	cmp	r4, r1
   8052a:	d8f2      	bhi.n	80512 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
   8052c:	0412      	lsls	r2, r2, #16
   8052e:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
   80532:	431a      	orrs	r2, r3
   80534:	6202      	str	r2, [r0, #32]

	return 0;
   80536:	2000      	movs	r0, #0
}
   80538:	bc10      	pop	{r4}
   8053a:	4770      	bx	lr

0008053c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   8053c:	4b08      	ldr	r3, [pc, #32]	; (80560 <usart_reset+0x24>)
   8053e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
   80542:	2300      	movs	r3, #0
   80544:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
   80546:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   80548:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   8054a:	2388      	movs	r3, #136	; 0x88
   8054c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8054e:	2324      	movs	r3, #36	; 0x24
   80550:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
   80552:	f44f 7380 	mov.w	r3, #256	; 0x100
   80556:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
   80558:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   8055c:	6003      	str	r3, [r0, #0]
   8055e:	4770      	bx	lr
   80560:	55534100 	.word	0x55534100

00080564 <usart_init_rs232>:
{
   80564:	b570      	push	{r4, r5, r6, lr}
   80566:	4605      	mov	r5, r0
   80568:	460c      	mov	r4, r1
   8056a:	4616      	mov	r6, r2
	usart_reset(p_usart);
   8056c:	4b0f      	ldr	r3, [pc, #60]	; (805ac <usart_init_rs232+0x48>)
   8056e:	4798      	blx	r3
	ul_reg_val = 0;
   80570:	2200      	movs	r2, #0
   80572:	4b0f      	ldr	r3, [pc, #60]	; (805b0 <usart_init_rs232+0x4c>)
   80574:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
   80576:	b1a4      	cbz	r4, 805a2 <usart_init_rs232+0x3e>
   80578:	4632      	mov	r2, r6
   8057a:	6821      	ldr	r1, [r4, #0]
   8057c:	4628      	mov	r0, r5
   8057e:	4b0d      	ldr	r3, [pc, #52]	; (805b4 <usart_init_rs232+0x50>)
   80580:	4798      	blx	r3
   80582:	4602      	mov	r2, r0
   80584:	b978      	cbnz	r0, 805a6 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80586:	6863      	ldr	r3, [r4, #4]
   80588:	68a1      	ldr	r1, [r4, #8]
   8058a:	430b      	orrs	r3, r1
   8058c:	6921      	ldr	r1, [r4, #16]
   8058e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
   80590:	68e1      	ldr	r1, [r4, #12]
   80592:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
   80594:	4906      	ldr	r1, [pc, #24]	; (805b0 <usart_init_rs232+0x4c>)
   80596:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
   80598:	6869      	ldr	r1, [r5, #4]
   8059a:	430b      	orrs	r3, r1
   8059c:	606b      	str	r3, [r5, #4]
}
   8059e:	4610      	mov	r0, r2
   805a0:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
   805a2:	2201      	movs	r2, #1
   805a4:	e7fb      	b.n	8059e <usart_init_rs232+0x3a>
   805a6:	2201      	movs	r2, #1
   805a8:	e7f9      	b.n	8059e <usart_init_rs232+0x3a>
   805aa:	bf00      	nop
   805ac:	0008053d 	.word	0x0008053d
   805b0:	20070f70 	.word	0x20070f70
   805b4:	000804e5 	.word	0x000804e5

000805b8 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   805b8:	2340      	movs	r3, #64	; 0x40
   805ba:	6003      	str	r3, [r0, #0]
   805bc:	4770      	bx	lr

000805be <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
   805be:	2310      	movs	r3, #16
   805c0:	6003      	str	r3, [r0, #0]
   805c2:	4770      	bx	lr

000805c4 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
   805c4:	6081      	str	r1, [r0, #8]
   805c6:	4770      	bx	lr

000805c8 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
   805c8:	60c1      	str	r1, [r0, #12]
   805ca:	4770      	bx	lr

000805cc <usart_get_status>:
	return p_usart->US_CSR;
   805cc:	6940      	ldr	r0, [r0, #20]
}
   805ce:	4770      	bx	lr

000805d0 <CRC16MODBUSFRAME>:
unsigned int CRC16MODBUSFRAME (unsigned char *nData, unsigned int wLength)
{
    unsigned char  nTemp;
    unsigned int  wCRCWord = 0xFFFF;

    while (wLength--)
   805d0:	b189      	cbz	r1, 805f6 <CRC16MODBUSFRAME+0x26>
{
   805d2:	b410      	push	{r4}
   805d4:	1841      	adds	r1, r0, r1
    while (wLength--)
   805d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
    {
        nTemp = *nData++ ^ wCRCWord;
        wCRCWord >>= 8;
        wCRCWord ^= wCRCTable[nTemp];
   805da:	4c09      	ldr	r4, [pc, #36]	; (80600 <CRC16MODBUSFRAME+0x30>)
        nTemp = *nData++ ^ wCRCWord;
   805dc:	f810 3b01 	ldrb.w	r3, [r0], #1
   805e0:	4053      	eors	r3, r2
        wCRCWord ^= wCRCTable[nTemp];
   805e2:	b2db      	uxtb	r3, r3
   805e4:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   805e8:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
    while (wLength--)
   805ec:	4281      	cmp	r1, r0
   805ee:	d1f5      	bne.n	805dc <CRC16MODBUSFRAME+0xc>
    }
    return wCRCWord;
}
   805f0:	4610      	mov	r0, r2
   805f2:	bc10      	pop	{r4}
   805f4:	4770      	bx	lr
    unsigned int  wCRCWord = 0xFFFF;
   805f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
}
   805fa:	4610      	mov	r0, r2
   805fc:	4770      	bx	lr
   805fe:	bf00      	nop
   80600:	20070148 	.word	0x20070148

00080604 <ErrorLed>:
 #include "../Headers/appli.h"

 t_ptf32 pErrorFunc = ErrorLed;

 uint32_t ErrorLed(uint32_t err, ...)
 {
   80604:	b40f      	push	{r0, r1, r2, r3}
   80606:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8060a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(LED0_GPIO);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   8060c:	f8df 809c 	ldr.w	r8, [pc, #156]	; 806ac <ErrorLed+0xa8>
   80610:	fba8 2803 	umull	r2, r8, r8, r3
   80614:	ea4f 08d8 	mov.w	r8, r8, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   80618:	eb08 0a88 	add.w	sl, r8, r8, lsl #2
   8061c:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(LED0_GPIO);
   80620:	253b      	movs	r5, #59	; 0x3b
		delay_ms(2000);
   80622:	4c1c      	ldr	r4, [pc, #112]	; (80694 <ErrorLed+0x90>)
		delay_ms(500);
   80624:	f8df b088 	ldr.w	fp, [pc, #136]	; 806b0 <ErrorLed+0xac>
   80628:	e001      	b.n	8062e <ErrorLed+0x2a>
			gpio_set_pin_high(LED0_GPIO);
			delay_ms(200);
			gpio_set_pin_low(LED0_GPIO);
			delay_ms(200);
		}
		delay_ms(1000);
   8062a:	481b      	ldr	r0, [pc, #108]	; (80698 <ErrorLed+0x94>)
   8062c:	47a0      	blx	r4
		gpio_set_pin_high(LED0_GPIO);
   8062e:	4628      	mov	r0, r5
   80630:	4b1a      	ldr	r3, [pc, #104]	; (8069c <ErrorLed+0x98>)
   80632:	4798      	blx	r3
		delay_ms(2000);
   80634:	481a      	ldr	r0, [pc, #104]	; (806a0 <ErrorLed+0x9c>)
   80636:	47a0      	blx	r4
		gpio_set_pin_low(LED0_GPIO);
   80638:	4628      	mov	r0, r5
   8063a:	4b1a      	ldr	r3, [pc, #104]	; (806a4 <ErrorLed+0xa0>)
   8063c:	4798      	blx	r3
		delay_ms(500);
   8063e:	4658      	mov	r0, fp
   80640:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   80642:	f1b8 0f00 	cmp.w	r8, #0
   80646:	d00f      	beq.n	80668 <ErrorLed+0x64>
   80648:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   8064a:	f8df 9050 	ldr.w	r9, [pc, #80]	; 8069c <ErrorLed+0x98>
			delay_ms(200);
   8064e:	4f16      	ldr	r7, [pc, #88]	; (806a8 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   80650:	4628      	mov	r0, r5
   80652:	47c8      	blx	r9
			delay_ms(200);
   80654:	4638      	mov	r0, r7
   80656:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80658:	4628      	mov	r0, r5
   8065a:	4b12      	ldr	r3, [pc, #72]	; (806a4 <ErrorLed+0xa0>)
   8065c:	4798      	blx	r3
			delay_ms(200);
   8065e:	4638      	mov	r0, r7
   80660:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   80662:	3601      	adds	r6, #1
   80664:	4546      	cmp	r6, r8
   80666:	d1f3      	bne.n	80650 <ErrorLed+0x4c>
		delay_ms(500);
   80668:	4658      	mov	r0, fp
   8066a:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   8066c:	f1ba 0f00 	cmp.w	sl, #0
   80670:	d0db      	beq.n	8062a <ErrorLed+0x26>
   80672:	2600      	movs	r6, #0
			gpio_set_pin_high(LED0_GPIO);
   80674:	f8df 9024 	ldr.w	r9, [pc, #36]	; 8069c <ErrorLed+0x98>
			delay_ms(200);
   80678:	4f0b      	ldr	r7, [pc, #44]	; (806a8 <ErrorLed+0xa4>)
			gpio_set_pin_high(LED0_GPIO);
   8067a:	4628      	mov	r0, r5
   8067c:	47c8      	blx	r9
			delay_ms(200);
   8067e:	4638      	mov	r0, r7
   80680:	47a0      	blx	r4
			gpio_set_pin_low(LED0_GPIO);
   80682:	4628      	mov	r0, r5
   80684:	4b07      	ldr	r3, [pc, #28]	; (806a4 <ErrorLed+0xa0>)
   80686:	4798      	blx	r3
			delay_ms(200);
   80688:	4638      	mov	r0, r7
   8068a:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   8068c:	3601      	adds	r6, #1
   8068e:	4556      	cmp	r6, sl
   80690:	d1f3      	bne.n	8067a <ErrorLed+0x76>
   80692:	e7ca      	b.n	8062a <ErrorLed+0x26>
   80694:	20070001 	.word	0x20070001
   80698:	005b8d80 	.word	0x005b8d80
   8069c:	000814ed 	.word	0x000814ed
   806a0:	00b71b00 	.word	0x00b71b00
   806a4:	00081507 	.word	0x00081507
   806a8:	00124f80 	.word	0x00124f80
   806ac:	cccccccd 	.word	0xcccccccd
   806b0:	002dc6c0 	.word	0x002dc6c0

000806b4 <RTC_Handler>:
	return 0;
 }


 void RTC_Handler(void )
 {
   806b4:	b510      	push	{r4, lr}
   806b6:	b082      	sub	sp, #8
	PushTask(Shell,_SHELL_PROMPT,0,0);
   806b8:	2300      	movs	r3, #0
   806ba:	9300      	str	r3, [sp, #0]
   806bc:	2204      	movs	r2, #4
   806be:	4903      	ldr	r1, [pc, #12]	; (806cc <RTC_Handler+0x18>)
   806c0:	2066      	movs	r0, #102	; 0x66
   806c2:	4c03      	ldr	r4, [pc, #12]	; (806d0 <RTC_Handler+0x1c>)
   806c4:	47a0      	blx	r4
 }
   806c6:	b002      	add	sp, #8
   806c8:	bd10      	pop	{r4, pc}
   806ca:	bf00      	nop
   806cc:	00080779 	.word	0x00080779
   806d0:	00080fa1 	.word	0x00080fa1

000806d4 <__RTCdayByDate>:
 uint8_t __RTCdayByDate(uint32_t date, uint32_t month, uint32_t centYear)
 {
	uint8_t  D; //Day of the week
#define y   centYear
	//Mike Keith algorithme ----------------------------------------------------------------//
	if(month>=3)
   806d4:	2902      	cmp	r1, #2
   806d6:	d824      	bhi.n	80722 <__RTCdayByDate+0x4e>
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
	}
	else
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + (y-1)/4 - (y-1)/100 + (y-1)/400 ) % 7 + 1;
   806d8:	1e53      	subs	r3, r2, #1
   806da:	3204      	adds	r2, #4
   806dc:	4410      	add	r0, r2
   806de:	eb00 0093 	add.w	r0, r0, r3, lsr #2
   806e2:	4a22      	ldr	r2, [pc, #136]	; (8076c <__RTCdayByDate+0x98>)
   806e4:	fba2 2303 	umull	r2, r3, r2, r3
   806e8:	eb00 10d3 	add.w	r0, r0, r3, lsr #7
   806ec:	eba0 1053 	sub.w	r0, r0, r3, lsr #5
   806f0:	b289      	uxth	r1, r1
   806f2:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   806f6:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   806fa:	4b1d      	ldr	r3, [pc, #116]	; (80770 <__RTCdayByDate+0x9c>)
   806fc:	fb83 2301 	smull	r2, r3, r3, r1
   80700:	17c9      	asrs	r1, r1, #31
   80702:	ebc1 0163 	rsb	r1, r1, r3, asr #1
   80706:	4408      	add	r0, r1
   80708:	4b1a      	ldr	r3, [pc, #104]	; (80774 <__RTCdayByDate+0xa0>)
   8070a:	fba3 2300 	umull	r2, r3, r3, r0
   8070e:	1ac2      	subs	r2, r0, r3
   80710:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   80714:	089b      	lsrs	r3, r3, #2
   80716:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   8071a:	1ac0      	subs	r0, r0, r3
   8071c:	3001      	adds	r0, #1
   8071e:	b2c0      	uxtb	r0, r0
	}
#undef y
	return D; //Normaly 1 to 7 !!!!
 }
   80720:	4770      	bx	lr
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
   80722:	1c93      	adds	r3, r2, #2
   80724:	4418      	add	r0, r3
   80726:	eb00 0092 	add.w	r0, r0, r2, lsr #2
   8072a:	4b10      	ldr	r3, [pc, #64]	; (8076c <__RTCdayByDate+0x98>)
   8072c:	fba3 3202 	umull	r3, r2, r3, r2
   80730:	eb00 10d2 	add.w	r0, r0, r2, lsr #7
   80734:	eba0 1252 	sub.w	r2, r0, r2, lsr #5
   80738:	b289      	uxth	r1, r1
   8073a:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   8073e:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   80742:	480b      	ldr	r0, [pc, #44]	; (80770 <__RTCdayByDate+0x9c>)
   80744:	fb80 3001 	smull	r3, r0, r0, r1
   80748:	17c9      	asrs	r1, r1, #31
   8074a:	ebc1 0160 	rsb	r1, r1, r0, asr #1
   8074e:	440a      	add	r2, r1
   80750:	4808      	ldr	r0, [pc, #32]	; (80774 <__RTCdayByDate+0xa0>)
   80752:	fba0 3002 	umull	r3, r0, r0, r2
   80756:	1a13      	subs	r3, r2, r0
   80758:	eb00 0053 	add.w	r0, r0, r3, lsr #1
   8075c:	0880      	lsrs	r0, r0, #2
   8075e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   80762:	1a10      	subs	r0, r2, r0
   80764:	3001      	adds	r0, #1
   80766:	b2c0      	uxtb	r0, r0
   80768:	4770      	bx	lr
   8076a:	bf00      	nop
   8076c:	51eb851f 	.word	0x51eb851f
   80770:	38e38e39 	.word	0x38e38e39
   80774:	24924925 	.word	0x24924925

00080778 <Shell>:
 {
   80778:	b40f      	push	{r0, r1, r2, r3}
   8077a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8077e:	b087      	sub	sp, #28
	switch(sc)
   80780:	990e      	ldr	r1, [sp, #56]	; 0x38
   80782:	2902      	cmp	r1, #2
   80784:	f000 8153 	beq.w	80a2e <Shell+0x2b6>
   80788:	d944      	bls.n	80814 <Shell+0x9c>
   8078a:	2904      	cmp	r1, #4
   8078c:	f000 81a2 	beq.w	80ad4 <Shell+0x35c>
   80790:	2964      	cmp	r1, #100	; 0x64
   80792:	f040 81ea 	bne.w	80b6a <Shell+0x3f2>
		gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80796:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8079a:	203b      	movs	r0, #59	; 0x3b
   8079c:	4bb2      	ldr	r3, [pc, #712]	; (80a68 <Shell+0x2f0>)
   8079e:	4798      	blx	r3
		gpio_set_pin_low(LED0_GPIO);
   807a0:	203b      	movs	r0, #59	; 0x3b
   807a2:	4bb2      	ldr	r3, [pc, #712]	; (80a6c <Shell+0x2f4>)
   807a4:	4798      	blx	r3
		PushTask(Shellcom,SHELLCOM_NEW, 0, 0);
   807a6:	2400      	movs	r4, #0
   807a8:	9400      	str	r4, [sp, #0]
   807aa:	4623      	mov	r3, r4
   807ac:	2264      	movs	r2, #100	; 0x64
   807ae:	49b0      	ldr	r1, [pc, #704]	; (80a70 <Shell+0x2f8>)
   807b0:	2066      	movs	r0, #102	; 0x66
   807b2:	4db0      	ldr	r5, [pc, #704]	; (80a74 <Shell+0x2fc>)
   807b4:	47a8      	blx	r5
		state = IDLE;
   807b6:	4bb0      	ldr	r3, [pc, #704]	; (80a78 <Shell+0x300>)
   807b8:	701c      	strb	r4, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   807ba:	2002      	movs	r0, #2
   807bc:	4baf      	ldr	r3, [pc, #700]	; (80a7c <Shell+0x304>)
   807be:	4798      	blx	r3
		rtc_set_hour_mode(RTC, 0);
   807c0:	4eaf      	ldr	r6, [pc, #700]	; (80a80 <Shell+0x308>)
   807c2:	4621      	mov	r1, r4
   807c4:	4630      	mov	r0, r6
   807c6:	4baf      	ldr	r3, [pc, #700]	; (80a84 <Shell+0x30c>)
   807c8:	4798      	blx	r3
		rtc_set_time(RTC, 1, 2, 3);
   807ca:	2303      	movs	r3, #3
   807cc:	2202      	movs	r2, #2
   807ce:	2101      	movs	r1, #1
   807d0:	4630      	mov	r0, r6
   807d2:	4fad      	ldr	r7, [pc, #692]	; (80a88 <Shell+0x310>)
   807d4:	47b8      	blx	r7
		rtc_enable_interrupt(RTC, RTC_IER_SECEN);
   807d6:	2104      	movs	r1, #4
   807d8:	4630      	mov	r0, r6
   807da:	4bac      	ldr	r3, [pc, #688]	; (80a8c <Shell+0x314>)
   807dc:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   807de:	4fac      	ldr	r7, [pc, #688]	; (80a90 <Shell+0x318>)
   807e0:	9400      	str	r4, [sp, #0]
   807e2:	4623      	mov	r3, r4
   807e4:	2202      	movs	r2, #2
   807e6:	4639      	mov	r1, r7
   807e8:	2066      	movs	r0, #102	; 0x66
   807ea:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,500);
   807ec:	f44f 76fa 	mov.w	r6, #500	; 0x1f4
   807f0:	9600      	str	r6, [sp, #0]
   807f2:	4623      	mov	r3, r4
   807f4:	2204      	movs	r2, #4
   807f6:	4639      	mov	r1, r7
   807f8:	2066      	movs	r0, #102	; 0x66
   807fa:	47a8      	blx	r5
		PushTask(Appli, APPLI_NEW, 0, 500);
   807fc:	9600      	str	r6, [sp, #0]
   807fe:	4623      	mov	r3, r4
   80800:	2264      	movs	r2, #100	; 0x64
   80802:	49a4      	ldr	r1, [pc, #656]	; (80a94 <Shell+0x31c>)
   80804:	2066      	movs	r0, #102	; 0x66
   80806:	47a8      	blx	r5
 }
   80808:	2000      	movs	r0, #0
   8080a:	b007      	add	sp, #28
   8080c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   80810:	b004      	add	sp, #16
   80812:	4770      	bx	lr
	switch(sc)
   80814:	2901      	cmp	r1, #1
   80816:	f040 81a8 	bne.w	80b6a <Shell+0x3f2>
		switch(state)
   8081a:	4b97      	ldr	r3, [pc, #604]	; (80a78 <Shell+0x300>)
   8081c:	781b      	ldrb	r3, [r3, #0]
   8081e:	2b06      	cmp	r3, #6
   80820:	f200 80ff 	bhi.w	80a22 <Shell+0x2aa>
   80824:	a201      	add	r2, pc, #4	; (adr r2, 8082c <Shell+0xb4>)
   80826:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8082a:	bf00      	nop
   8082c:	00080849 	.word	0x00080849
   80830:	000808e1 	.word	0x000808e1
   80834:	00080985 	.word	0x00080985
   80838:	00080809 	.word	0x00080809
   8083c:	00080809 	.word	0x00080809
   80840:	00080809 	.word	0x00080809
   80844:	00080809 	.word	0x00080809
			switch(_kbhitChar)
   80848:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8084a:	b2ec      	uxtb	r4, r5
   8084c:	f1a4 0308 	sub.w	r3, r4, #8
   80850:	2b18      	cmp	r3, #24
   80852:	d835      	bhi.n	808c0 <Shell+0x148>
   80854:	a201      	add	r2, pc, #4	; (adr r2, 8085c <Shell+0xe4>)
   80856:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8085a:	bf00      	nop
   8085c:	00080809 	.word	0x00080809
   80860:	00080809 	.word	0x00080809
   80864:	00080809 	.word	0x00080809
   80868:	000808c1 	.word	0x000808c1
   8086c:	000808c1 	.word	0x000808c1
   80870:	00080809 	.word	0x00080809
   80874:	000808c1 	.word	0x000808c1
   80878:	000808c1 	.word	0x000808c1
   8087c:	000808c1 	.word	0x000808c1
   80880:	000808c1 	.word	0x000808c1
   80884:	000808c1 	.word	0x000808c1
   80888:	000808c1 	.word	0x000808c1
   8088c:	000808c1 	.word	0x000808c1
   80890:	000808c1 	.word	0x000808c1
   80894:	000808c1 	.word	0x000808c1
   80898:	000808c1 	.word	0x000808c1
   8089c:	000808c1 	.word	0x000808c1
   808a0:	000808c1 	.word	0x000808c1
   808a4:	000808c1 	.word	0x000808c1
   808a8:	00080809 	.word	0x00080809
   808ac:	000808c1 	.word	0x000808c1
   808b0:	000808c1 	.word	0x000808c1
   808b4:	000808c1 	.word	0x000808c1
   808b8:	000808c1 	.word	0x000808c1
   808bc:	00080809 	.word	0x00080809
				Putstr("\r\n>");
   808c0:	4975      	ldr	r1, [pc, #468]	; (80a98 <Shell+0x320>)
   808c2:	2067      	movs	r0, #103	; 0x67
   808c4:	4f6a      	ldr	r7, [pc, #424]	; (80a70 <Shell+0x2f8>)
   808c6:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   808c8:	4e6b      	ldr	r6, [pc, #428]	; (80a78 <Shell+0x300>)
   808ca:	4b74      	ldr	r3, [pc, #464]	; (80a9c <Shell+0x324>)
   808cc:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   808ce:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   808d2:	2501      	movs	r5, #1
   808d4:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   808d6:	4621      	mov	r1, r4
   808d8:	2066      	movs	r0, #102	; 0x66
   808da:	47b8      	blx	r7
				state = EDITION;
   808dc:	7035      	strb	r5, [r6, #0]
				break;
   808de:	e793      	b.n	80808 <Shell+0x90>
			switch(_kbhitChar)
   808e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   808e2:	b2d1      	uxtb	r1, r2
   808e4:	f1a1 0308 	sub.w	r3, r1, #8
   808e8:	2b13      	cmp	r3, #19
   808ea:	d83a      	bhi.n	80962 <Shell+0x1ea>
   808ec:	a001      	add	r0, pc, #4	; (adr r0, 808f4 <Shell+0x17c>)
   808ee:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   808f2:	bf00      	nop
   808f4:	00080809 	.word	0x00080809
   808f8:	00080809 	.word	0x00080809
   808fc:	00080809 	.word	0x00080809
   80900:	00080963 	.word	0x00080963
   80904:	00080963 	.word	0x00080963
   80908:	00080945 	.word	0x00080945
   8090c:	00080963 	.word	0x00080963
   80910:	00080963 	.word	0x00080963
   80914:	00080963 	.word	0x00080963
   80918:	00080963 	.word	0x00080963
   8091c:	00080963 	.word	0x00080963
   80920:	00080963 	.word	0x00080963
   80924:	00080963 	.word	0x00080963
   80928:	00080963 	.word	0x00080963
   8092c:	00080963 	.word	0x00080963
   80930:	00080963 	.word	0x00080963
   80934:	00080963 	.word	0x00080963
   80938:	00080963 	.word	0x00080963
   8093c:	00080963 	.word	0x00080963
   80940:	00080809 	.word	0x00080809
				*pEdit++ = '\0';
   80944:	4a4c      	ldr	r2, [pc, #304]	; (80a78 <Shell+0x300>)
   80946:	6891      	ldr	r1, [r2, #8]
   80948:	1c4b      	adds	r3, r1, #1
   8094a:	6093      	str	r3, [r2, #8]
   8094c:	2300      	movs	r3, #0
   8094e:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   80950:	2102      	movs	r1, #2
   80952:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   80954:	9300      	str	r3, [sp, #0]
   80956:	2201      	movs	r2, #1
   80958:	494d      	ldr	r1, [pc, #308]	; (80a90 <Shell+0x318>)
   8095a:	2066      	movs	r0, #102	; 0x66
   8095c:	4c45      	ldr	r4, [pc, #276]	; (80a74 <Shell+0x2fc>)
   8095e:	47a0      	blx	r4
				break;
   80960:	e752      	b.n	80808 <Shell+0x90>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   80962:	4b45      	ldr	r3, [pc, #276]	; (80a78 <Shell+0x300>)
   80964:	68db      	ldr	r3, [r3, #12]
   80966:	2bfd      	cmp	r3, #253	; 0xfd
   80968:	f63f af4e 	bhi.w	80808 <Shell+0x90>
					*pEdit++ = _kbhitChar;
   8096c:	4b42      	ldr	r3, [pc, #264]	; (80a78 <Shell+0x300>)
   8096e:	6898      	ldr	r0, [r3, #8]
   80970:	1c44      	adds	r4, r0, #1
   80972:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   80974:	7002      	strb	r2, [r0, #0]
					nbChar++;
   80976:	68da      	ldr	r2, [r3, #12]
   80978:	3201      	adds	r2, #1
   8097a:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   8097c:	2066      	movs	r0, #102	; 0x66
   8097e:	4b3c      	ldr	r3, [pc, #240]	; (80a70 <Shell+0x2f8>)
   80980:	4798      	blx	r3
   80982:	e741      	b.n	80808 <Shell+0x90>
			Putstr("\r\n>>>");
   80984:	4946      	ldr	r1, [pc, #280]	; (80aa0 <Shell+0x328>)
   80986:	2067      	movs	r0, #103	; 0x67
   80988:	4c39      	ldr	r4, [pc, #228]	; (80a70 <Shell+0x2f8>)
   8098a:	47a0      	blx	r4
			Putstr(shellBuf);
   8098c:	4d45      	ldr	r5, [pc, #276]	; (80aa4 <Shell+0x32c>)
   8098e:	4629      	mov	r1, r5
   80990:	2067      	movs	r0, #103	; 0x67
   80992:	47a0      	blx	r4
			Putstr("\r\n");
   80994:	4944      	ldr	r1, [pc, #272]	; (80aa8 <Shell+0x330>)
   80996:	2067      	movs	r0, #103	; 0x67
   80998:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   8099a:	4944      	ldr	r1, [pc, #272]	; (80aac <Shell+0x334>)
   8099c:	4628      	mov	r0, r5
   8099e:	4b44      	ldr	r3, [pc, #272]	; (80ab0 <Shell+0x338>)
   809a0:	4798      	blx	r3
   809a2:	4607      	mov	r7, r0
   809a4:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   809a6:	b918      	cbnz	r0, 809b0 <Shell+0x238>
			state = IDLE;
   809a8:	2200      	movs	r2, #0
   809aa:	4b33      	ldr	r3, [pc, #204]	; (80a78 <Shell+0x300>)
   809ac:	701a      	strb	r2, [r3, #0]
			break;
   809ae:	e72b      	b.n	80808 <Shell+0x90>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   809b0:	4b40      	ldr	r3, [pc, #256]	; (80ab4 <Shell+0x33c>)
   809b2:	4798      	blx	r3
   809b4:	4601      	mov	r1, r0
   809b6:	4638      	mov	r0, r7
   809b8:	4b3f      	ldr	r3, [pc, #252]	; (80ab8 <Shell+0x340>)
   809ba:	4798      	blx	r3
   809bc:	b285      	uxth	r5, r0
   809be:	4b2e      	ldr	r3, [pc, #184]	; (80a78 <Shell+0x300>)
   809c0:	821d      	strh	r5, [r3, #16]
				k = 0;
   809c2:	2300      	movs	r3, #0
   809c4:	9305      	str	r3, [sp, #20]
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   809c6:	4b3d      	ldr	r3, [pc, #244]	; (80abc <Shell+0x344>)
   809c8:	881b      	ldrh	r3, [r3, #0]
   809ca:	b1db      	cbz	r3, 80a04 <Shell+0x28c>
   809cc:	429d      	cmp	r5, r3
   809ce:	d01b      	beq.n	80a08 <Shell+0x290>
   809d0:	2301      	movs	r3, #1
   809d2:	4e3a      	ldr	r6, [pc, #232]	; (80abc <Shell+0x344>)
   809d4:	e000      	b.n	809d8 <Shell+0x260>
   809d6:	4623      	mov	r3, r4
   809d8:	f836 1033 	ldrh.w	r1, [r6, r3, lsl #3]
   809dc:	b121      	cbz	r1, 809e8 <Shell+0x270>
   809de:	1c5c      	adds	r4, r3, #1
   809e0:	428d      	cmp	r5, r1
   809e2:	d1f8      	bne.n	809d6 <Shell+0x25e>
   809e4:	9305      	str	r3, [sp, #20]
   809e6:	e000      	b.n	809ea <Shell+0x272>
   809e8:	9305      	str	r3, [sp, #20]
				if(_cmdEntries[k].pCmdFunc)
   809ea:	4934      	ldr	r1, [pc, #208]	; (80abc <Shell+0x344>)
   809ec:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   809f0:	685c      	ldr	r4, [r3, #4]
   809f2:	b15c      	cbz	r4, 80a0c <Shell+0x294>
					_cmdEntries[k].pCmdFunc(0, shellBuf + strlen(pToken) + 1);
   809f4:	4638      	mov	r0, r7
   809f6:	4b2f      	ldr	r3, [pc, #188]	; (80ab4 <Shell+0x33c>)
   809f8:	4798      	blx	r3
   809fa:	4928      	ldr	r1, [pc, #160]	; (80a9c <Shell+0x324>)
   809fc:	4401      	add	r1, r0
   809fe:	2000      	movs	r0, #0
   80a00:	47a0      	blx	r4
   80a02:	e7d1      	b.n	809a8 <Shell+0x230>
				while(_cmdEntries[k].cmdCode && (_cmdEntries[k].cmdCode != crc)) k++;
   80a04:	2300      	movs	r3, #0
   80a06:	e7f0      	b.n	809ea <Shell+0x272>
   80a08:	2300      	movs	r3, #0
   80a0a:	e7ee      	b.n	809ea <Shell+0x272>
					sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80a0c:	4c2c      	ldr	r4, [pc, #176]	; (80ac0 <Shell+0x348>)
   80a0e:	b282      	uxth	r2, r0
   80a10:	492c      	ldr	r1, [pc, #176]	; (80ac4 <Shell+0x34c>)
   80a12:	4620      	mov	r0, r4
   80a14:	4b2c      	ldr	r3, [pc, #176]	; (80ac8 <Shell+0x350>)
   80a16:	4798      	blx	r3
					Putstr(buf);
   80a18:	4621      	mov	r1, r4
   80a1a:	2067      	movs	r0, #103	; 0x67
   80a1c:	4b14      	ldr	r3, [pc, #80]	; (80a70 <Shell+0x2f8>)
   80a1e:	4798      	blx	r3
   80a20:	e7c2      	b.n	809a8 <Shell+0x230>
			Putch(_kbhitChar);
   80a22:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   80a26:	2066      	movs	r0, #102	; 0x66
   80a28:	4b11      	ldr	r3, [pc, #68]	; (80a70 <Shell+0x2f8>)
   80a2a:	4798      	blx	r3
			break;
   80a2c:	e6ec      	b.n	80808 <Shell+0x90>
		k++; if(flashSequ[k]==0) k=0;
   80a2e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   80a30:	3401      	adds	r4, #1
   80a32:	940f      	str	r4, [sp, #60]	; 0x3c
   80a34:	4b25      	ldr	r3, [pc, #148]	; (80acc <Shell+0x354>)
   80a36:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80a3a:	b133      	cbz	r3, 80a4a <Shell+0x2d2>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80a3c:	f014 0f01 	tst.w	r4, #1
   80a40:	d004      	beq.n	80a4c <Shell+0x2d4>
		else gpio_set_pin_low(LED0_GPIO);
   80a42:	203b      	movs	r0, #59	; 0x3b
   80a44:	4b09      	ldr	r3, [pc, #36]	; (80a6c <Shell+0x2f4>)
   80a46:	4798      	blx	r3
   80a48:	e003      	b.n	80a52 <Shell+0x2da>
		if(k%2==0) gpio_set_pin_high(LED0_GPIO);
   80a4a:	2400      	movs	r4, #0
   80a4c:	203b      	movs	r0, #59	; 0x3b
   80a4e:	4b20      	ldr	r3, [pc, #128]	; (80ad0 <Shell+0x358>)
   80a50:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   80a52:	4b1e      	ldr	r3, [pc, #120]	; (80acc <Shell+0x354>)
   80a54:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80a58:	9300      	str	r3, [sp, #0]
   80a5a:	4623      	mov	r3, r4
   80a5c:	2202      	movs	r2, #2
   80a5e:	490c      	ldr	r1, [pc, #48]	; (80a90 <Shell+0x318>)
   80a60:	2066      	movs	r0, #102	; 0x66
   80a62:	4c04      	ldr	r4, [pc, #16]	; (80a74 <Shell+0x2fc>)
   80a64:	47a0      	blx	r4
		break;
   80a66:	e6cf      	b.n	80808 <Shell+0x90>
   80a68:	00081541 	.word	0x00081541
   80a6c:	00081507 	.word	0x00081507
   80a70:	00080d89 	.word	0x00080d89
   80a74:	00080fa1 	.word	0x00080fa1
   80a78:	20071028 	.word	0x20071028
   80a7c:	000818a5 	.word	0x000818a5
   80a80:	400e1a60 	.word	0x400e1a60
   80a84:	00080161 	.word	0x00080161
   80a88:	000801d5 	.word	0x000801d5
   80a8c:	00080177 	.word	0x00080177
   80a90:	00080779 	.word	0x00080779
   80a94:	000811bd 	.word	0x000811bd
   80a98:	0008658c 	.word	0x0008658c
   80a9c:	2007103d 	.word	0x2007103d
   80aa0:	00086590 	.word	0x00086590
   80aa4:	2007103c 	.word	0x2007103c
   80aa8:	00086598 	.word	0x00086598
   80aac:	0008659c 	.word	0x0008659c
   80ab0:	00081c81 	.word	0x00081c81
   80ab4:	00081c25 	.word	0x00081c25
   80ab8:	000805d1 	.word	0x000805d1
   80abc:	000866b0 	.word	0x000866b0
   80ac0:	200713ac 	.word	0x200713ac
   80ac4:	000865a0 	.word	0x000865a0
   80ac8:	00081bd9 	.word	0x00081bd9
   80acc:	000865e0 	.word	0x000865e0
   80ad0:	000814ed 	.word	0x000814ed
		if(state==IDLE)
   80ad4:	4b27      	ldr	r3, [pc, #156]	; (80b74 <Shell+0x3fc>)
   80ad6:	781b      	ldrb	r3, [r3, #0]
   80ad8:	b14b      	cbz	r3, 80aee <Shell+0x376>
		PushTask(Shell,_SHELL_PROMPT,0,300);
   80ada:	f44f 7396 	mov.w	r3, #300	; 0x12c
   80ade:	9300      	str	r3, [sp, #0]
   80ae0:	2300      	movs	r3, #0
   80ae2:	2204      	movs	r2, #4
   80ae4:	4924      	ldr	r1, [pc, #144]	; (80b78 <Shell+0x400>)
   80ae6:	2066      	movs	r0, #102	; 0x66
   80ae8:	4c24      	ldr	r4, [pc, #144]	; (80b7c <Shell+0x404>)
   80aea:	47a0      	blx	r4
		break;
   80aec:	e68c      	b.n	80808 <Shell+0x90>
			rtc_get_time(RTC, &hh, &mn, &sec);
   80aee:	f10d 0808 	add.w	r8, sp, #8
   80af2:	4d23      	ldr	r5, [pc, #140]	; (80b80 <Shell+0x408>)
   80af4:	4643      	mov	r3, r8
   80af6:	aa03      	add	r2, sp, #12
   80af8:	a904      	add	r1, sp, #16
   80afa:	4628      	mov	r0, r5
   80afc:	4c21      	ldr	r4, [pc, #132]	; (80b84 <Shell+0x40c>)
   80afe:	47a0      	blx	r4
			sprintf(buf, "\r\e[k\r%02d:%02d:%02d", hh, mn, sec);
   80b00:	4c21      	ldr	r4, [pc, #132]	; (80b88 <Shell+0x410>)
   80b02:	9b02      	ldr	r3, [sp, #8]
   80b04:	9300      	str	r3, [sp, #0]
   80b06:	9b03      	ldr	r3, [sp, #12]
   80b08:	9a04      	ldr	r2, [sp, #16]
   80b0a:	4920      	ldr	r1, [pc, #128]	; (80b8c <Shell+0x414>)
   80b0c:	4620      	mov	r0, r4
   80b0e:	4f20      	ldr	r7, [pc, #128]	; (80b90 <Shell+0x418>)
   80b10:	47b8      	blx	r7
			Putstr(buf);
   80b12:	4621      	mov	r1, r4
   80b14:	2067      	movs	r0, #103	; 0x67
   80b16:	4e1f      	ldr	r6, [pc, #124]	; (80b94 <Shell+0x41c>)
   80b18:	47b0      	blx	r6
			rtc_get_date(RTC, &yr, &mm, &dd, &wk);
   80b1a:	f8cd 8000 	str.w	r8, [sp]
   80b1e:	ab03      	add	r3, sp, #12
   80b20:	aa04      	add	r2, sp, #16
   80b22:	a905      	add	r1, sp, #20
   80b24:	4628      	mov	r0, r5
   80b26:	4d1c      	ldr	r5, [pc, #112]	; (80b98 <Shell+0x420>)
   80b28:	47a8      	blx	r5
			day = __RTCdayByDate(dd, mm, yr/100);
   80b2a:	f8dd 800c 	ldr.w	r8, [sp, #12]
   80b2e:	9d04      	ldr	r5, [sp, #16]
   80b30:	f8dd 9014 	ldr.w	r9, [sp, #20]
   80b34:	4a19      	ldr	r2, [pc, #100]	; (80b9c <Shell+0x424>)
   80b36:	fba2 3209 	umull	r3, r2, r2, r9
   80b3a:	0952      	lsrs	r2, r2, #5
   80b3c:	4629      	mov	r1, r5
   80b3e:	4640      	mov	r0, r8
   80b40:	4b17      	ldr	r3, [pc, #92]	; (80ba0 <Shell+0x428>)
   80b42:	4798      	blx	r3
			sprintf(buf, "	%s %02d %s %02d", daysOfWeek[day - 3], dd, months[mm-1], yr);
   80b44:	3803      	subs	r0, #3
   80b46:	4b17      	ldr	r3, [pc, #92]	; (80ba4 <Shell+0x42c>)
   80b48:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
   80b4c:	f8cd 9004 	str.w	r9, [sp, #4]
   80b50:	3d01      	subs	r5, #1
   80b52:	4b15      	ldr	r3, [pc, #84]	; (80ba8 <Shell+0x430>)
   80b54:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
   80b58:	9300      	str	r3, [sp, #0]
   80b5a:	4643      	mov	r3, r8
   80b5c:	4913      	ldr	r1, [pc, #76]	; (80bac <Shell+0x434>)
   80b5e:	4620      	mov	r0, r4
   80b60:	47b8      	blx	r7
			Putstr(buf);
   80b62:	4621      	mov	r1, r4
   80b64:	2067      	movs	r0, #103	; 0x67
   80b66:	47b0      	blx	r6
   80b68:	e7b7      	b.n	80ada <Shell+0x362>
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   80b6a:	4b11      	ldr	r3, [pc, #68]	; (80bb0 <Shell+0x438>)
   80b6c:	681b      	ldr	r3, [r3, #0]
   80b6e:	200e      	movs	r0, #14
   80b70:	4798      	blx	r3
   80b72:	e649      	b.n	80808 <Shell+0x90>
   80b74:	20071028 	.word	0x20071028
   80b78:	00080779 	.word	0x00080779
   80b7c:	00080fa1 	.word	0x00080fa1
   80b80:	400e1a60 	.word	0x400e1a60
   80b84:	0008017b 	.word	0x0008017b
   80b88:	200713ac 	.word	0x200713ac
   80b8c:	000865b8 	.word	0x000865b8
   80b90:	00081bd9 	.word	0x00081bd9
   80b94:	00080d89 	.word	0x00080d89
   80b98:	00080269 	.word	0x00080269
   80b9c:	51eb851f 	.word	0x51eb851f
   80ba0:	000806d5 	.word	0x000806d5
   80ba4:	2007054c 	.word	0x2007054c
   80ba8:	20070568 	.word	0x20070568
   80bac:	000865cc 	.word	0x000865cc
   80bb0:	20070548 	.word	0x20070548

00080bb4 <_cmd_set>:


uint32_t u1, u2, u3, u4;

void _cmd_set(uint32_t sc, void* pParam)
{
   80bb4:	b510      	push	{r4, lr}
   80bb6:	b082      	sub	sp, #8
   80bb8:	4608      	mov	r0, r1
	uint16_t crc;
#define pToken sc
	pToken = (uint32_t)strtok(pParam, " \r\n");
   80bba:	4940      	ldr	r1, [pc, #256]	; (80cbc <_cmd_set+0x108>)
   80bbc:	4b40      	ldr	r3, [pc, #256]	; (80cc0 <_cmd_set+0x10c>)
   80bbe:	4798      	blx	r3
	if(pToken)
   80bc0:	b908      	cbnz	r0, 80bc6 <_cmd_set+0x12>
#undef pToken
	}
	


}
   80bc2:	b002      	add	sp, #8
   80bc4:	bd10      	pop	{r4, pc}
   80bc6:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   80bc8:	4b3e      	ldr	r3, [pc, #248]	; (80cc4 <_cmd_set+0x110>)
   80bca:	4798      	blx	r3
   80bcc:	4601      	mov	r1, r0
   80bce:	4620      	mov	r0, r4
   80bd0:	4b3d      	ldr	r3, [pc, #244]	; (80cc8 <_cmd_set+0x114>)
   80bd2:	4798      	blx	r3
   80bd4:	b282      	uxth	r2, r0
		switch(crc)
   80bd6:	f247 3327 	movw	r3, #29479	; 0x7327
   80bda:	429a      	cmp	r2, r3
   80bdc:	d00d      	beq.n	80bfa <_cmd_set+0x46>
   80bde:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   80be2:	429a      	cmp	r2, r3
   80be4:	d034      	beq.n	80c50 <_cmd_set+0x9c>
			sprintf(buf,"\r\nunknown cmd: %04X\r\n",crc);
   80be6:	4c39      	ldr	r4, [pc, #228]	; (80ccc <_cmd_set+0x118>)
   80be8:	4939      	ldr	r1, [pc, #228]	; (80cd0 <_cmd_set+0x11c>)
   80bea:	4620      	mov	r0, r4
   80bec:	4b39      	ldr	r3, [pc, #228]	; (80cd4 <_cmd_set+0x120>)
   80bee:	4798      	blx	r3
			Putstr(buf);
   80bf0:	4621      	mov	r1, r4
   80bf2:	2067      	movs	r0, #103	; 0x67
   80bf4:	4b38      	ldr	r3, [pc, #224]	; (80cd8 <_cmd_set+0x124>)
   80bf6:	4798      	blx	r3
}
   80bf8:	e7e3      	b.n	80bc2 <_cmd_set+0xe>
			pToken = strtok(NULL, " : \r\n");
   80bfa:	4938      	ldr	r1, [pc, #224]	; (80cdc <_cmd_set+0x128>)
   80bfc:	2000      	movs	r0, #0
   80bfe:	4b30      	ldr	r3, [pc, #192]	; (80cc0 <_cmd_set+0x10c>)
   80c00:	4798      	blx	r3
			if(pToken) hh = atoi(pToken);
   80c02:	b9b0      	cbnz	r0, 80c32 <_cmd_set+0x7e>
			pToken = strtok(NULL, " : \r\n");
   80c04:	4935      	ldr	r1, [pc, #212]	; (80cdc <_cmd_set+0x128>)
   80c06:	2000      	movs	r0, #0
   80c08:	4b2d      	ldr	r3, [pc, #180]	; (80cc0 <_cmd_set+0x10c>)
   80c0a:	4798      	blx	r3
			if(pToken) mn = atoi(pToken);
   80c0c:	b9b0      	cbnz	r0, 80c3c <_cmd_set+0x88>
			pToken = strtok(NULL, " : \r\n");
   80c0e:	4933      	ldr	r1, [pc, #204]	; (80cdc <_cmd_set+0x128>)
   80c10:	2000      	movs	r0, #0
   80c12:	4b2b      	ldr	r3, [pc, #172]	; (80cc0 <_cmd_set+0x10c>)
   80c14:	4798      	blx	r3
			if(pToken) sec = atoi(pToken);
   80c16:	b9b0      	cbnz	r0, 80c46 <_cmd_set+0x92>
			rtc_set_time(RTC, hh, mn, sec);
   80c18:	4b31      	ldr	r3, [pc, #196]	; (80ce0 <_cmd_set+0x12c>)
   80c1a:	681b      	ldr	r3, [r3, #0]
   80c1c:	4a31      	ldr	r2, [pc, #196]	; (80ce4 <_cmd_set+0x130>)
   80c1e:	6812      	ldr	r2, [r2, #0]
   80c20:	4931      	ldr	r1, [pc, #196]	; (80ce8 <_cmd_set+0x134>)
   80c22:	6809      	ldr	r1, [r1, #0]
   80c24:	4831      	ldr	r0, [pc, #196]	; (80cec <_cmd_set+0x138>)
   80c26:	4c32      	ldr	r4, [pc, #200]	; (80cf0 <_cmd_set+0x13c>)
   80c28:	47a0      	blx	r4
			gpio_set_pin_high(PIO_PA16_IDX);
   80c2a:	2010      	movs	r0, #16
   80c2c:	4b31      	ldr	r3, [pc, #196]	; (80cf4 <_cmd_set+0x140>)
   80c2e:	4798      	blx	r3
			break;
   80c30:	e7c7      	b.n	80bc2 <_cmd_set+0xe>
			if(pToken) hh = atoi(pToken);
   80c32:	4b31      	ldr	r3, [pc, #196]	; (80cf8 <_cmd_set+0x144>)
   80c34:	4798      	blx	r3
   80c36:	4b2c      	ldr	r3, [pc, #176]	; (80ce8 <_cmd_set+0x134>)
   80c38:	6018      	str	r0, [r3, #0]
   80c3a:	e7e3      	b.n	80c04 <_cmd_set+0x50>
			if(pToken) mn = atoi(pToken);
   80c3c:	4b2e      	ldr	r3, [pc, #184]	; (80cf8 <_cmd_set+0x144>)
   80c3e:	4798      	blx	r3
   80c40:	4b28      	ldr	r3, [pc, #160]	; (80ce4 <_cmd_set+0x130>)
   80c42:	6018      	str	r0, [r3, #0]
   80c44:	e7e3      	b.n	80c0e <_cmd_set+0x5a>
			if(pToken) sec = atoi(pToken);
   80c46:	4b2c      	ldr	r3, [pc, #176]	; (80cf8 <_cmd_set+0x144>)
   80c48:	4798      	blx	r3
   80c4a:	4b25      	ldr	r3, [pc, #148]	; (80ce0 <_cmd_set+0x12c>)
   80c4c:	6018      	str	r0, [r3, #0]
   80c4e:	e7e3      	b.n	80c18 <_cmd_set+0x64>
			pToken = strtok(NULL, " : \r\n");
   80c50:	4922      	ldr	r1, [pc, #136]	; (80cdc <_cmd_set+0x128>)
   80c52:	2000      	movs	r0, #0
   80c54:	4b1a      	ldr	r3, [pc, #104]	; (80cc0 <_cmd_set+0x10c>)
   80c56:	4798      	blx	r3
			if(pToken) yr = atoi(pToken);
   80c58:	b9d8      	cbnz	r0, 80c92 <_cmd_set+0xde>
			pToken = strtok(NULL, " : \r\n");
   80c5a:	4920      	ldr	r1, [pc, #128]	; (80cdc <_cmd_set+0x128>)
   80c5c:	2000      	movs	r0, #0
   80c5e:	4b18      	ldr	r3, [pc, #96]	; (80cc0 <_cmd_set+0x10c>)
   80c60:	4798      	blx	r3
			if(pToken) mm = atoi(pToken);
   80c62:	b9d8      	cbnz	r0, 80c9c <_cmd_set+0xe8>
			pToken = strtok(NULL, " : \r\n");
   80c64:	491d      	ldr	r1, [pc, #116]	; (80cdc <_cmd_set+0x128>)
   80c66:	2000      	movs	r0, #0
   80c68:	4b15      	ldr	r3, [pc, #84]	; (80cc0 <_cmd_set+0x10c>)
   80c6a:	4798      	blx	r3
			if(pToken) dd = atoi(pToken);
   80c6c:	b9d8      	cbnz	r0, 80ca6 <_cmd_set+0xf2>
			pToken = strtok(NULL, " : \r\n");
   80c6e:	491b      	ldr	r1, [pc, #108]	; (80cdc <_cmd_set+0x128>)
   80c70:	2000      	movs	r0, #0
   80c72:	4b13      	ldr	r3, [pc, #76]	; (80cc0 <_cmd_set+0x10c>)
   80c74:	4798      	blx	r3
			if(pToken) wk = atoi(pToken);
   80c76:	b9d8      	cbnz	r0, 80cb0 <_cmd_set+0xfc>
			rtc_set_date(RTC, yr, mm, dd, wk);
   80c78:	4b19      	ldr	r3, [pc, #100]	; (80ce0 <_cmd_set+0x12c>)
   80c7a:	681b      	ldr	r3, [r3, #0]
   80c7c:	4a19      	ldr	r2, [pc, #100]	; (80ce4 <_cmd_set+0x130>)
   80c7e:	6812      	ldr	r2, [r2, #0]
   80c80:	4919      	ldr	r1, [pc, #100]	; (80ce8 <_cmd_set+0x134>)
   80c82:	6809      	ldr	r1, [r1, #0]
   80c84:	481d      	ldr	r0, [pc, #116]	; (80cfc <_cmd_set+0x148>)
   80c86:	6800      	ldr	r0, [r0, #0]
   80c88:	9000      	str	r0, [sp, #0]
   80c8a:	4818      	ldr	r0, [pc, #96]	; (80cec <_cmd_set+0x138>)
   80c8c:	4c1c      	ldr	r4, [pc, #112]	; (80d00 <_cmd_set+0x14c>)
   80c8e:	47a0      	blx	r4
			break;
   80c90:	e797      	b.n	80bc2 <_cmd_set+0xe>
			if(pToken) yr = atoi(pToken);
   80c92:	4b19      	ldr	r3, [pc, #100]	; (80cf8 <_cmd_set+0x144>)
   80c94:	4798      	blx	r3
   80c96:	4b14      	ldr	r3, [pc, #80]	; (80ce8 <_cmd_set+0x134>)
   80c98:	6018      	str	r0, [r3, #0]
   80c9a:	e7de      	b.n	80c5a <_cmd_set+0xa6>
			if(pToken) mm = atoi(pToken);
   80c9c:	4b16      	ldr	r3, [pc, #88]	; (80cf8 <_cmd_set+0x144>)
   80c9e:	4798      	blx	r3
   80ca0:	4b10      	ldr	r3, [pc, #64]	; (80ce4 <_cmd_set+0x130>)
   80ca2:	6018      	str	r0, [r3, #0]
   80ca4:	e7de      	b.n	80c64 <_cmd_set+0xb0>
			if(pToken) dd = atoi(pToken);
   80ca6:	4b14      	ldr	r3, [pc, #80]	; (80cf8 <_cmd_set+0x144>)
   80ca8:	4798      	blx	r3
   80caa:	4b0d      	ldr	r3, [pc, #52]	; (80ce0 <_cmd_set+0x12c>)
   80cac:	6018      	str	r0, [r3, #0]
   80cae:	e7de      	b.n	80c6e <_cmd_set+0xba>
			if(pToken) wk = atoi(pToken);
   80cb0:	4b11      	ldr	r3, [pc, #68]	; (80cf8 <_cmd_set+0x144>)
   80cb2:	4798      	blx	r3
   80cb4:	4b11      	ldr	r3, [pc, #68]	; (80cfc <_cmd_set+0x148>)
   80cb6:	6018      	str	r0, [r3, #0]
   80cb8:	e7de      	b.n	80c78 <_cmd_set+0xc4>
   80cba:	bf00      	nop
   80cbc:	0008659c 	.word	0x0008659c
   80cc0:	00081c81 	.word	0x00081c81
   80cc4:	00081c25 	.word	0x00081c25
   80cc8:	000805d1 	.word	0x000805d1
   80ccc:	200713ac 	.word	0x200713ac
   80cd0:	000865a0 	.word	0x000865a0
   80cd4:	00081bd9 	.word	0x00081bd9
   80cd8:	00080d89 	.word	0x00080d89
   80cdc:	000866c8 	.word	0x000866c8
   80ce0:	20071158 	.word	0x20071158
   80ce4:	2007114c 	.word	0x2007114c
   80ce8:	20071150 	.word	0x20071150
   80cec:	400e1a60 	.word	0x400e1a60
   80cf0:	000801d5 	.word	0x000801d5
   80cf4:	000814ed 	.word	0x000814ed
   80cf8:	00081ae5 	.word	0x00081ae5
   80cfc:	20071154 	.word	0x20071154
   80d00:	000802dd 	.word	0x000802dd

00080d04 <_cmd_show>:

void _cmd_show(uint32_t sc, void* pParam)
 {
   80d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80d06:	4b1b      	ldr	r3, [pc, #108]	; (80d74 <_cmd_show+0x70>)
   80d08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	if(ioport_get_pin_level(PIO_PC23_IDX))
   80d0a:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80d0e:	d118      	bne.n	80d42 <_cmd_show+0x3e>
		ioport_set_pin_level(PIO_PC23_IDX,0);
		Putstr(buf);
	}
	else
	{
	sprintf(buf, "L'etat de la broche etait bas \r\n");
   80d10:	4e19      	ldr	r6, [pc, #100]	; (80d78 <_cmd_show+0x74>)
   80d12:	4c1a      	ldr	r4, [pc, #104]	; (80d7c <_cmd_show+0x78>)
   80d14:	f106 0720 	add.w	r7, r6, #32
   80d18:	4635      	mov	r5, r6
   80d1a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80d1c:	6020      	str	r0, [r4, #0]
   80d1e:	6061      	str	r1, [r4, #4]
   80d20:	60a2      	str	r2, [r4, #8]
   80d22:	60e3      	str	r3, [r4, #12]
   80d24:	462e      	mov	r6, r5
   80d26:	3410      	adds	r4, #16
   80d28:	42bd      	cmp	r5, r7
   80d2a:	d1f5      	bne.n	80d18 <_cmd_show+0x14>
   80d2c:	782b      	ldrb	r3, [r5, #0]
   80d2e:	7023      	strb	r3, [r4, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80d30:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80d34:	4b0f      	ldr	r3, [pc, #60]	; (80d74 <_cmd_show+0x70>)
   80d36:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(PIO_PC23_IDX,1);
	Putstr(buf);
   80d38:	4910      	ldr	r1, [pc, #64]	; (80d7c <_cmd_show+0x78>)
   80d3a:	2067      	movs	r0, #103	; 0x67
   80d3c:	4b10      	ldr	r3, [pc, #64]	; (80d80 <_cmd_show+0x7c>)
   80d3e:	4798      	blx	r3
   80d40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		sprintf(buf, "L'etat de la broche etait haut \r\n");
   80d42:	4e10      	ldr	r6, [pc, #64]	; (80d84 <_cmd_show+0x80>)
   80d44:	4c0d      	ldr	r4, [pc, #52]	; (80d7c <_cmd_show+0x78>)
   80d46:	f106 0720 	add.w	r7, r6, #32
   80d4a:	4635      	mov	r5, r6
   80d4c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80d4e:	6020      	str	r0, [r4, #0]
   80d50:	6061      	str	r1, [r4, #4]
   80d52:	60a2      	str	r2, [r4, #8]
   80d54:	60e3      	str	r3, [r4, #12]
   80d56:	462e      	mov	r6, r5
   80d58:	3410      	adds	r4, #16
   80d5a:	42bd      	cmp	r5, r7
   80d5c:	d1f5      	bne.n	80d4a <_cmd_show+0x46>
   80d5e:	882b      	ldrh	r3, [r5, #0]
   80d60:	8023      	strh	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80d62:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80d66:	4b03      	ldr	r3, [pc, #12]	; (80d74 <_cmd_show+0x70>)
   80d68:	635a      	str	r2, [r3, #52]	; 0x34
		Putstr(buf);
   80d6a:	4904      	ldr	r1, [pc, #16]	; (80d7c <_cmd_show+0x78>)
   80d6c:	2067      	movs	r0, #103	; 0x67
   80d6e:	4b04      	ldr	r3, [pc, #16]	; (80d80 <_cmd_show+0x7c>)
   80d70:	4798      	blx	r3
   80d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80d74:	400e1200 	.word	0x400e1200
   80d78:	000866f4 	.word	0x000866f4
   80d7c:	200713ac 	.word	0x200713ac
   80d80:	00080d89 	.word	0x00080d89
   80d84:	000866d0 	.word	0x000866d0

00080d88 <Shellcom>:




 uint32_t Shellcom(uint32_t sc , ...)
 {
   80d88:	b40f      	push	{r0, r1, r2, r3}
   80d8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(sc)
   80d8c:	9906      	ldr	r1, [sp, #24]
   80d8e:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   80d92:	2b05      	cmp	r3, #5
   80d94:	f200 80a2 	bhi.w	80edc <Shellcom+0x154>
   80d98:	e8df f003 	tbb	[pc, r3]
   80d9c:	2376a045 	.word	0x2376a045
   80da0:	7103      	.short	0x7103
#undef _pStr
		break;
	case SHELLCOM_PUTSTRLEN:
#define _pStr pa1
#define _len  pa2
	while(_len)
   80da2:	9d08      	ldr	r5, [sp, #32]
   80da4:	2d00      	cmp	r5, #0
   80da6:	d06a      	beq.n	80e7e <Shellcom+0xf6>
	{
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80da8:	4c4f      	ldr	r4, [pc, #316]	; (80ee8 <Shellcom+0x160>)
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80daa:	4e50      	ldr	r6, [pc, #320]	; (80eec <Shellcom+0x164>)
   80dac:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
		*pTxWrite++ = *(char*)_pStr++; _len--;
   80db0:	6823      	ldr	r3, [r4, #0]
   80db2:	1c5a      	adds	r2, r3, #1
   80db4:	6022      	str	r2, [r4, #0]
   80db6:	9a07      	ldr	r2, [sp, #28]
   80db8:	1c51      	adds	r1, r2, #1
   80dba:	9107      	str	r1, [sp, #28]
   80dbc:	7812      	ldrb	r2, [r2, #0]
   80dbe:	701a      	strb	r2, [r3, #0]
   80dc0:	3d01      	subs	r5, #1
   80dc2:	9508      	str	r5, [sp, #32]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80dc4:	6823      	ldr	r3, [r4, #0]
   80dc6:	42b3      	cmp	r3, r6
   80dc8:	bf28      	it	cs
   80dca:	6027      	strcs	r7, [r4, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80dcc:	6822      	ldr	r2, [r4, #0]
   80dce:	6863      	ldr	r3, [r4, #4]
   80dd0:	429a      	cmp	r2, r3
   80dd2:	d07d      	beq.n	80ed0 <Shellcom+0x148>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80dd4:	2102      	movs	r1, #2
   80dd6:	4846      	ldr	r0, [pc, #280]	; (80ef0 <Shellcom+0x168>)
   80dd8:	4b46      	ldr	r3, [pc, #280]	; (80ef4 <Shellcom+0x16c>)
   80dda:	4798      	blx	r3
	while(_len)
   80ddc:	2d00      	cmp	r5, #0
   80dde:	d1e7      	bne.n	80db0 <Shellcom+0x28>
   80de0:	e04d      	b.n	80e7e <Shellcom+0xf6>
		while(*(char*)_pStr)
   80de2:	9d07      	ldr	r5, [sp, #28]
   80de4:	462a      	mov	r2, r5
   80de6:	782b      	ldrb	r3, [r5, #0]
   80de8:	2b00      	cmp	r3, #0
   80dea:	d048      	beq.n	80e7e <Shellcom+0xf6>
   80dec:	3501      	adds	r5, #1
			*pTxWrite++ = *(char*)_pStr++;
   80dee:	4c3e      	ldr	r4, [pc, #248]	; (80ee8 <Shellcom+0x160>)
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80df0:	4e3e      	ldr	r6, [pc, #248]	; (80eec <Shellcom+0x164>)
   80df2:	f5a6 7780 	sub.w	r7, r6, #256	; 0x100
			*pTxWrite++ = *(char*)_pStr++;
   80df6:	6823      	ldr	r3, [r4, #0]
   80df8:	1c59      	adds	r1, r3, #1
   80dfa:	6021      	str	r1, [r4, #0]
   80dfc:	9507      	str	r5, [sp, #28]
   80dfe:	7812      	ldrb	r2, [r2, #0]
   80e00:	701a      	strb	r2, [r3, #0]
			if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80e02:	6823      	ldr	r3, [r4, #0]
   80e04:	42b3      	cmp	r3, r6
   80e06:	bf28      	it	cs
   80e08:	6027      	strcs	r7, [r4, #0]
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80e0a:	6822      	ldr	r2, [r4, #0]
   80e0c:	6863      	ldr	r3, [r4, #4]
   80e0e:	429a      	cmp	r2, r3
   80e10:	d058      	beq.n	80ec4 <Shellcom+0x13c>
			usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80e12:	2102      	movs	r1, #2
   80e14:	4836      	ldr	r0, [pc, #216]	; (80ef0 <Shellcom+0x168>)
   80e16:	4b37      	ldr	r3, [pc, #220]	; (80ef4 <Shellcom+0x16c>)
   80e18:	4798      	blx	r3
		while(*(char*)_pStr)
   80e1a:	462a      	mov	r2, r5
   80e1c:	f815 3b01 	ldrb.w	r3, [r5], #1
   80e20:	2b00      	cmp	r3, #0
   80e22:	d1e8      	bne.n	80df6 <Shellcom+0x6e>
   80e24:	e02b      	b.n	80e7e <Shellcom+0xf6>
		pTxWrite = pTxRead = shellcomTxBuf;
   80e26:	4b30      	ldr	r3, [pc, #192]	; (80ee8 <Shellcom+0x160>)
   80e28:	4a33      	ldr	r2, [pc, #204]	; (80ef8 <Shellcom+0x170>)
   80e2a:	605a      	str	r2, [r3, #4]
   80e2c:	601a      	str	r2, [r3, #0]
   80e2e:	2011      	movs	r0, #17
   80e30:	4c32      	ldr	r4, [pc, #200]	; (80efc <Shellcom+0x174>)
   80e32:	47a0      	blx	r4
		usart_init_rs232(USART_SERIAL, &usart_console_settings,	sysclk_get_cpu_hz());
   80e34:	4d2e      	ldr	r5, [pc, #184]	; (80ef0 <Shellcom+0x168>)
   80e36:	4a32      	ldr	r2, [pc, #200]	; (80f00 <Shellcom+0x178>)
   80e38:	4932      	ldr	r1, [pc, #200]	; (80f04 <Shellcom+0x17c>)
   80e3a:	4628      	mov	r0, r5
   80e3c:	4b32      	ldr	r3, [pc, #200]	; (80f08 <Shellcom+0x180>)
   80e3e:	4798      	blx	r3
		gpio_configure_pin(USART_SERIAL_TXD_IDX,USART_SERIAL_TXD_FLAGS);
   80e40:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80e44:	200b      	movs	r0, #11
   80e46:	4e31      	ldr	r6, [pc, #196]	; (80f0c <Shellcom+0x184>)
   80e48:	47b0      	blx	r6
		gpio_configure_pin(USART_SERIAL_RXD_IDX,USART_SERIAL_RXD_FLAGS);
   80e4a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80e4e:	200a      	movs	r0, #10
   80e50:	47b0      	blx	r6
		usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
   80e52:	2101      	movs	r1, #1
   80e54:	4628      	mov	r0, r5
   80e56:	4b27      	ldr	r3, [pc, #156]	; (80ef4 <Shellcom+0x16c>)
   80e58:	4798      	blx	r3
   80e5a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80e5e:	4b2c      	ldr	r3, [pc, #176]	; (80f10 <Shellcom+0x188>)
   80e60:	601a      	str	r2, [r3, #0]
		usart_enable_tx(USART_SERIAL);
   80e62:	4628      	mov	r0, r5
   80e64:	4b2b      	ldr	r3, [pc, #172]	; (80f14 <Shellcom+0x18c>)
   80e66:	4798      	blx	r3
		usart_enable_rx(USART_SERIAL);
   80e68:	4628      	mov	r0, r5
   80e6a:	4b2b      	ldr	r3, [pc, #172]	; (80f18 <Shellcom+0x190>)
   80e6c:	4798      	blx	r3
   80e6e:	200b      	movs	r0, #11
   80e70:	47a0      	blx	r4
   80e72:	200c      	movs	r0, #12
   80e74:	47a0      	blx	r4
   80e76:	200d      	movs	r0, #13
   80e78:	47a0      	blx	r4
   80e7a:	200e      	movs	r0, #14
   80e7c:	47a0      	blx	r4
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
	}

	return 0;
 }
   80e7e:	2000      	movs	r0, #0
   80e80:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80e84:	b004      	add	sp, #16
   80e86:	4770      	bx	lr
		*pTxWrite++ = _ch;
   80e88:	4b17      	ldr	r3, [pc, #92]	; (80ee8 <Shellcom+0x160>)
   80e8a:	681a      	ldr	r2, [r3, #0]
   80e8c:	1c51      	adds	r1, r2, #1
   80e8e:	6019      	str	r1, [r3, #0]
   80e90:	9907      	ldr	r1, [sp, #28]
   80e92:	7011      	strb	r1, [r2, #0]
		if(pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxWrite=shellcomTxBuf;
   80e94:	681a      	ldr	r2, [r3, #0]
   80e96:	4b15      	ldr	r3, [pc, #84]	; (80eec <Shellcom+0x164>)
   80e98:	429a      	cmp	r2, r3
   80e9a:	d303      	bcc.n	80ea4 <Shellcom+0x11c>
   80e9c:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80ea0:	4b11      	ldr	r3, [pc, #68]	; (80ee8 <Shellcom+0x160>)
   80ea2:	601a      	str	r2, [r3, #0]
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80ea4:	4b10      	ldr	r3, [pc, #64]	; (80ee8 <Shellcom+0x160>)
   80ea6:	681a      	ldr	r2, [r3, #0]
   80ea8:	685b      	ldr	r3, [r3, #4]
   80eaa:	429a      	cmp	r2, r3
   80eac:	d004      	beq.n	80eb8 <Shellcom+0x130>
		usart_enable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80eae:	2102      	movs	r1, #2
   80eb0:	480f      	ldr	r0, [pc, #60]	; (80ef0 <Shellcom+0x168>)
   80eb2:	4b10      	ldr	r3, [pc, #64]	; (80ef4 <Shellcom+0x16c>)
   80eb4:	4798      	blx	r3
		break;
   80eb6:	e7e2      	b.n	80e7e <Shellcom+0xf6>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTC);
   80eb8:	4b18      	ldr	r3, [pc, #96]	; (80f1c <Shellcom+0x194>)
   80eba:	681b      	ldr	r3, [r3, #0]
   80ebc:	2166      	movs	r1, #102	; 0x66
   80ebe:	2017      	movs	r0, #23
   80ec0:	4798      	blx	r3
   80ec2:	e7f4      	b.n	80eae <Shellcom+0x126>
			if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80ec4:	4b15      	ldr	r3, [pc, #84]	; (80f1c <Shellcom+0x194>)
   80ec6:	681b      	ldr	r3, [r3, #0]
   80ec8:	2167      	movs	r1, #103	; 0x67
   80eca:	2017      	movs	r0, #23
   80ecc:	4798      	blx	r3
   80ece:	e7a0      	b.n	80e12 <Shellcom+0x8a>
		if(pTxWrite==pTxRead) Error(ERR_SHELCOM_TXBUF_FULL,SHELLCOM_PUTSTR);
   80ed0:	4b12      	ldr	r3, [pc, #72]	; (80f1c <Shellcom+0x194>)
   80ed2:	681b      	ldr	r3, [r3, #0]
   80ed4:	2167      	movs	r1, #103	; 0x67
   80ed6:	2017      	movs	r0, #23
   80ed8:	4798      	blx	r3
   80eda:	e77b      	b.n	80dd4 <Shellcom+0x4c>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC,sc);
   80edc:	4b0f      	ldr	r3, [pc, #60]	; (80f1c <Shellcom+0x194>)
   80ede:	681b      	ldr	r3, [r3, #0]
   80ee0:	200d      	movs	r0, #13
   80ee2:	4798      	blx	r3
   80ee4:	e7cb      	b.n	80e7e <Shellcom+0xf6>
   80ee6:	bf00      	nop
   80ee8:	2007115c 	.word	0x2007115c
   80eec:	20071264 	.word	0x20071264
   80ef0:	40098000 	.word	0x40098000
   80ef4:	000805c5 	.word	0x000805c5
   80ef8:	20071164 	.word	0x20071164
   80efc:	000818a5 	.word	0x000818a5
   80f00:	0501bd00 	.word	0x0501bd00
   80f04:	00086718 	.word	0x00086718
   80f08:	00080565 	.word	0x00080565
   80f0c:	00081541 	.word	0x00081541
   80f10:	e000e100 	.word	0xe000e100
   80f14:	000805b9 	.word	0x000805b9
   80f18:	000805bf 	.word	0x000805bf
   80f1c:	20070548 	.word	0x20070548

00080f20 <USART0_Handler>:
	 _SHELL_KBHIT = 1,
 };

 
 void USART0_Handler()
 {
   80f20:	b530      	push	{r4, r5, lr}
   80f22:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
   80f24:	4817      	ldr	r0, [pc, #92]	; (80f84 <USART0_Handler+0x64>)
   80f26:	4b18      	ldr	r3, [pc, #96]	; (80f88 <USART0_Handler+0x68>)
   80f28:	4798      	blx	r3
   80f2a:	4604      	mov	r4, r0

	if(dw_status & US_CSR_RXRDY)
   80f2c:	f010 0f01 	tst.w	r0, #1
   80f30:	d116      	bne.n	80f60 <USART0_Handler+0x40>
	{
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
	}

	if(dw_status & US_CSR_TXRDY)
   80f32:	f014 0f02 	tst.w	r4, #2
   80f36:	d011      	beq.n	80f5c <USART0_Handler+0x3c>
	{
				
		if(pTxRead!=pTxWrite)
   80f38:	4a14      	ldr	r2, [pc, #80]	; (80f8c <USART0_Handler+0x6c>)
   80f3a:	6853      	ldr	r3, [r2, #4]
   80f3c:	6812      	ldr	r2, [r2, #0]
   80f3e:	4293      	cmp	r3, r2
   80f40:	d01a      	beq.n	80f78 <USART0_Handler+0x58>
		{
			USART_SERIAL->US_THR = US_THR_TXCHR(*pTxRead++);
   80f42:	1c5a      	adds	r2, r3, #1
   80f44:	4911      	ldr	r1, [pc, #68]	; (80f8c <USART0_Handler+0x6c>)
   80f46:	604a      	str	r2, [r1, #4]
   80f48:	7819      	ldrb	r1, [r3, #0]
   80f4a:	4b0e      	ldr	r3, [pc, #56]	; (80f84 <USART0_Handler+0x64>)
   80f4c:	61d9      	str	r1, [r3, #28]
			if(pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) pTxRead = shellcomTxBuf;
   80f4e:	4b10      	ldr	r3, [pc, #64]	; (80f90 <USART0_Handler+0x70>)
   80f50:	429a      	cmp	r2, r3
   80f52:	d303      	bcc.n	80f5c <USART0_Handler+0x3c>
   80f54:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80f58:	4b0c      	ldr	r3, [pc, #48]	; (80f8c <USART0_Handler+0x6c>)
   80f5a:	605a      	str	r2, [r3, #4]
		else
		{
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
		}
	}
 }
   80f5c:	b003      	add	sp, #12
   80f5e:	bd30      	pop	{r4, r5, pc}
		PushTask(Shell, _SHELL_KBHIT, USART_SERIAL->US_RHR & US_RHR_RXCHR_Msk, 0);
   80f60:	4b08      	ldr	r3, [pc, #32]	; (80f84 <USART0_Handler+0x64>)
   80f62:	699b      	ldr	r3, [r3, #24]
   80f64:	2200      	movs	r2, #0
   80f66:	9200      	str	r2, [sp, #0]
   80f68:	f3c3 0308 	ubfx	r3, r3, #0, #9
   80f6c:	2201      	movs	r2, #1
   80f6e:	4909      	ldr	r1, [pc, #36]	; (80f94 <USART0_Handler+0x74>)
   80f70:	2066      	movs	r0, #102	; 0x66
   80f72:	4d09      	ldr	r5, [pc, #36]	; (80f98 <USART0_Handler+0x78>)
   80f74:	47a8      	blx	r5
   80f76:	e7dc      	b.n	80f32 <USART0_Handler+0x12>
			usart_disable_interrupt(USART_SERIAL, US_IER_TXRDY);
   80f78:	2102      	movs	r1, #2
   80f7a:	4802      	ldr	r0, [pc, #8]	; (80f84 <USART0_Handler+0x64>)
   80f7c:	4b07      	ldr	r3, [pc, #28]	; (80f9c <USART0_Handler+0x7c>)
   80f7e:	4798      	blx	r3
 }
   80f80:	e7ec      	b.n	80f5c <USART0_Handler+0x3c>
   80f82:	bf00      	nop
   80f84:	40098000 	.word	0x40098000
   80f88:	000805cd 	.word	0x000805cd
   80f8c:	2007115c 	.word	0x2007115c
   80f90:	20071264 	.word	0x20071264
   80f94:	00080779 	.word	0x00080779
   80f98:	00080fa1 	.word	0x00080fa1
   80f9c:	000805c9 	.word	0x000805c9

00080fa0 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   80fa0:	b40f      	push	{r0, r1, r2, r3}
   80fa2:	b5f0      	push	{r4, r5, r6, r7, lr}
   80fa4:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   80fa6:	9908      	ldr	r1, [sp, #32]
   80fa8:	2964      	cmp	r1, #100	; 0x64
   80faa:	d024      	beq.n	80ff6 <Taskman+0x56>
   80fac:	d917      	bls.n	80fde <Taskman+0x3e>
   80fae:	2966      	cmp	r1, #102	; 0x66
   80fb0:	d067      	beq.n	81082 <Taskman+0xe2>
   80fb2:	2967      	cmp	r1, #103	; 0x67
   80fb4:	f040 80c8 	bne.w	81148 <Taskman+0x1a8>
#undef _delay
#undef k
		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   80fb8:	4a66      	ldr	r2, [pc, #408]	; (81154 <Taskman+0x1b4>)
   80fba:	6853      	ldr	r3, [r2, #4]
   80fbc:	6812      	ldr	r2, [r2, #0]
   80fbe:	4293      	cmp	r3, r2
   80fc0:	d059      	beq.n	81076 <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   80fc2:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   80fc4:	6858      	ldr	r0, [r3, #4]
   80fc6:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   80fc8:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   80fca:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   80fcc:	4c62      	ldr	r4, [pc, #392]	; (81158 <Taskman+0x1b8>)
   80fce:	42a3      	cmp	r3, r4
   80fd0:	f0c0 80a3 	bcc.w	8111a <Taskman+0x17a>
   80fd4:	4c61      	ldr	r4, [pc, #388]	; (8115c <Taskman+0x1bc>)
   80fd6:	4b5f      	ldr	r3, [pc, #380]	; (81154 <Taskman+0x1b4>)
   80fd8:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   80fda:	4790      	blx	r2
   80fdc:	e04b      	b.n	81076 <Taskman+0xd6>
	switch(sc)
   80fde:	2901      	cmp	r1, #1
   80fe0:	f040 80b2 	bne.w	81148 <Taskman+0x1a8>
		}
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   80fe4:	2002      	movs	r0, #2
   80fe6:	4b5e      	ldr	r3, [pc, #376]	; (81160 <Taskman+0x1c0>)
   80fe8:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80fea:	2500      	movs	r5, #0
   80fec:	9508      	str	r5, [sp, #32]
   80fee:	4c5d      	ldr	r4, [pc, #372]	; (81164 <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   80ff0:	462f      	mov	r7, r5
   80ff2:	2666      	movs	r6, #102	; 0x66
   80ff4:	e099      	b.n	8112a <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   80ff6:	4b57      	ldr	r3, [pc, #348]	; (81154 <Taskman+0x1b4>)
   80ff8:	4a58      	ldr	r2, [pc, #352]	; (8115c <Taskman+0x1bc>)
   80ffa:	601a      	str	r2, [r3, #0]
   80ffc:	605a      	str	r2, [r3, #4]
   80ffe:	4b59      	ldr	r3, [pc, #356]	; (81164 <Taskman+0x1c4>)
   81000:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   81004:	2200      	movs	r2, #0
   81006:	60da      	str	r2, [r3, #12]
   81008:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   8100a:	428b      	cmp	r3, r1
   8100c:	d1fb      	bne.n	81006 <Taskman+0x66>
		base->PIO_PUDR = mask;
   8100e:	4b56      	ldr	r3, [pc, #344]	; (81168 <Taskman+0x1c8>)
   81010:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   81014:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_MDDR = mask;
   81016:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   81018:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   8101a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   8101e:	6f19      	ldr	r1, [r3, #112]	; 0x70
   81020:	4311      	orrs	r1, r2
   81022:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   81024:	605a      	str	r2, [r3, #4]
   81026:	201b      	movs	r0, #27
   81028:	4b50      	ldr	r3, [pc, #320]	; (8116c <Taskman+0x1cc>)
   8102a:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   8102c:	4c50      	ldr	r4, [pc, #320]	; (81170 <Taskman+0x1d0>)
   8102e:	4a51      	ldr	r2, [pc, #324]	; (81174 <Taskman+0x1d4>)
   81030:	2100      	movs	r1, #0
   81032:	4620      	mov	r0, r4
   81034:	4b50      	ldr	r3, [pc, #320]	; (81178 <Taskman+0x1d8>)
   81036:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   81038:	f44f 7224 	mov.w	r2, #656	; 0x290
   8103c:	2100      	movs	r1, #0
   8103e:	4620      	mov	r0, r4
   81040:	4b4e      	ldr	r3, [pc, #312]	; (8117c <Taskman+0x1dc>)
   81042:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   81044:	f240 12cb 	movw	r2, #459	; 0x1cb
   81048:	2100      	movs	r1, #0
   8104a:	4620      	mov	r0, r4
   8104c:	4b4c      	ldr	r3, [pc, #304]	; (81180 <Taskman+0x1e0>)
   8104e:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   81050:	2100      	movs	r1, #0
   81052:	4620      	mov	r0, r4
   81054:	4b4b      	ldr	r3, [pc, #300]	; (81184 <Taskman+0x1e4>)
   81056:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   81058:	4b4b      	ldr	r3, [pc, #300]	; (81188 <Taskman+0x1e8>)
   8105a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8105e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   81062:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81066:	2100      	movs	r1, #0
   81068:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8106c:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   8106e:	2204      	movs	r2, #4
   81070:	4620      	mov	r0, r4
   81072:	4b46      	ldr	r3, [pc, #280]	; (8118c <Taskman+0x1ec>)
   81074:	4798      	blx	r3
 }
   81076:	2000      	movs	r0, #0
   81078:	b003      	add	sp, #12
   8107a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8107e:	b004      	add	sp, #16
   81080:	4770      	bx	lr
		cpu_irq_enter_critical();
   81082:	4b43      	ldr	r3, [pc, #268]	; (81190 <Taskman+0x1f0>)
   81084:	4798      	blx	r3
		if(_delay)
   81086:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81088:	b34d      	cbz	r5, 810de <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   8108a:	2300      	movs	r3, #0
   8108c:	9308      	str	r3, [sp, #32]
   8108e:	4b35      	ldr	r3, [pc, #212]	; (81164 <Taskman+0x1c4>)
   81090:	68db      	ldr	r3, [r3, #12]
   81092:	b1ab      	cbz	r3, 810c0 <Taskman+0x120>
   81094:	2301      	movs	r3, #1
   81096:	9308      	str	r3, [sp, #32]
   81098:	4a32      	ldr	r2, [pc, #200]	; (81164 <Taskman+0x1c4>)
   8109a:	2000      	movs	r0, #0
   8109c:	461c      	mov	r4, r3
   8109e:	69d1      	ldr	r1, [r2, #28]
   810a0:	b159      	cbz	r1, 810ba <Taskman+0x11a>
   810a2:	3301      	adds	r3, #1
   810a4:	3210      	adds	r2, #16
   810a6:	4620      	mov	r0, r4
   810a8:	2b0a      	cmp	r3, #10
   810aa:	d1f8      	bne.n	8109e <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   810ac:	4b39      	ldr	r3, [pc, #228]	; (81194 <Taskman+0x1f4>)
   810ae:	681b      	ldr	r3, [r3, #0]
   810b0:	2100      	movs	r1, #0
   810b2:	2016      	movs	r0, #22
   810b4:	4798      	blx	r3
   810b6:	230a      	movs	r3, #10
   810b8:	e002      	b.n	810c0 <Taskman+0x120>
   810ba:	b970      	cbnz	r0, 810da <Taskman+0x13a>
   810bc:	2b0a      	cmp	r3, #10
   810be:	d0f5      	beq.n	810ac <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   810c0:	4928      	ldr	r1, [pc, #160]	; (81164 <Taskman+0x1c4>)
   810c2:	011b      	lsls	r3, r3, #4
   810c4:	18ca      	adds	r2, r1, r3
   810c6:	9809      	ldr	r0, [sp, #36]	; 0x24
   810c8:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   810ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   810cc:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   810ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   810d0:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   810d2:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   810d4:	4b30      	ldr	r3, [pc, #192]	; (81198 <Taskman+0x1f8>)
   810d6:	4798      	blx	r3
		break;
   810d8:	e7cd      	b.n	81076 <Taskman+0xd6>
   810da:	9308      	str	r3, [sp, #32]
   810dc:	e7ee      	b.n	810bc <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   810de:	4b1d      	ldr	r3, [pc, #116]	; (81154 <Taskman+0x1b4>)
   810e0:	681a      	ldr	r2, [r3, #0]
   810e2:	9909      	ldr	r1, [sp, #36]	; 0x24
   810e4:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   810e6:	681b      	ldr	r3, [r3, #0]
   810e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   810ea:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   810ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   810ee:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   810f0:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   810f2:	4a19      	ldr	r2, [pc, #100]	; (81158 <Taskman+0x1b8>)
   810f4:	4293      	cmp	r3, r2
   810f6:	d20c      	bcs.n	81112 <Taskman+0x172>
			taskman.pPush++;
   810f8:	4a16      	ldr	r2, [pc, #88]	; (81154 <Taskman+0x1b4>)
   810fa:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   810fc:	4b15      	ldr	r3, [pc, #84]	; (81154 <Taskman+0x1b4>)
   810fe:	681a      	ldr	r2, [r3, #0]
   81100:	685b      	ldr	r3, [r3, #4]
   81102:	429a      	cmp	r2, r3
   81104:	d1e6      	bne.n	810d4 <Taskman+0x134>
   81106:	4b23      	ldr	r3, [pc, #140]	; (81194 <Taskman+0x1f4>)
   81108:	681b      	ldr	r3, [r3, #0]
   8110a:	2100      	movs	r1, #0
   8110c:	2015      	movs	r0, #21
   8110e:	4798      	blx	r3
   81110:	e7e0      	b.n	810d4 <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   81112:	4a12      	ldr	r2, [pc, #72]	; (8115c <Taskman+0x1bc>)
   81114:	4b0f      	ldr	r3, [pc, #60]	; (81154 <Taskman+0x1b4>)
   81116:	601a      	str	r2, [r3, #0]
   81118:	e7f0      	b.n	810fc <Taskman+0x15c>
			taskman.pPop++;
   8111a:	4c0e      	ldr	r4, [pc, #56]	; (81154 <Taskman+0x1b4>)
   8111c:	6063      	str	r3, [r4, #4]
   8111e:	e75c      	b.n	80fda <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   81120:	3501      	adds	r5, #1
   81122:	9508      	str	r5, [sp, #32]
   81124:	3410      	adds	r4, #16
   81126:	2d0a      	cmp	r5, #10
   81128:	d0a5      	beq.n	81076 <Taskman+0xd6>
			if(dTasks[k].delay)
   8112a:	68e3      	ldr	r3, [r4, #12]
   8112c:	2b00      	cmp	r3, #0
   8112e:	d0f7      	beq.n	81120 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   81130:	3b01      	subs	r3, #1
   81132:	60e3      	str	r3, [r4, #12]
   81134:	2b00      	cmp	r3, #0
   81136:	d1f3      	bne.n	81120 <Taskman+0x180>
					PushTask(
   81138:	68a3      	ldr	r3, [r4, #8]
   8113a:	6862      	ldr	r2, [r4, #4]
   8113c:	6821      	ldr	r1, [r4, #0]
   8113e:	9700      	str	r7, [sp, #0]
   81140:	4630      	mov	r0, r6
   81142:	f7ff ff2d 	bl	80fa0 <Taskman>
   81146:	e7eb      	b.n	81120 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   81148:	4b12      	ldr	r3, [pc, #72]	; (81194 <Taskman+0x1f4>)
   8114a:	681b      	ldr	r3, [r3, #0]
   8114c:	200b      	movs	r0, #11
   8114e:	4798      	blx	r3
	return 0;
   81150:	e791      	b.n	81076 <Taskman+0xd6>
   81152:	bf00      	nop
   81154:	20071304 	.word	0x20071304
   81158:	20071304 	.word	0x20071304
   8115c:	20071264 	.word	0x20071264
   81160:	00081521 	.word	0x00081521
   81164:	2007130c 	.word	0x2007130c
   81168:	400e1000 	.word	0x400e1000
   8116c:	000818a5 	.word	0x000818a5
   81170:	40080000 	.word	0x40080000
   81174:	0009c003 	.word	0x0009c003
   81178:	000804a5 	.word	0x000804a5
   8117c:	000804cd 	.word	0x000804cd
   81180:	000804c5 	.word	0x000804c5
   81184:	000804bd 	.word	0x000804bd
   81188:	e000e100 	.word	0xe000e100
   8118c:	000804d5 	.word	0x000804d5
   81190:	00081335 	.word	0x00081335
   81194:	20070548 	.word	0x20070548
   81198:	00081371 	.word	0x00081371

0008119c <TC0_Handler>:
 {
   8119c:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   8119e:	2100      	movs	r1, #0
   811a0:	4803      	ldr	r0, [pc, #12]	; (811b0 <TC0_Handler+0x14>)
   811a2:	4b04      	ldr	r3, [pc, #16]	; (811b4 <TC0_Handler+0x18>)
   811a4:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   811a6:	2001      	movs	r0, #1
   811a8:	4b03      	ldr	r3, [pc, #12]	; (811b8 <TC0_Handler+0x1c>)
   811aa:	4798      	blx	r3
   811ac:	bd08      	pop	{r3, pc}
   811ae:	bf00      	nop
   811b0:	40080000 	.word	0x40080000
   811b4:	000804dd 	.word	0x000804dd
   811b8:	00080fa1 	.word	0x00080fa1

000811bc <Appli>:
	 100,500,100,500,100,2200,0
 };


uint32_t Appli(uint32_t sc,...)
{
   811bc:	b40f      	push	{r0, r1, r2, r3}
   811be:	b510      	push	{r4, lr}
   811c0:	b082      	sub	sp, #8
	switch(sc)
   811c2:	9904      	ldr	r1, [sp, #16]
   811c4:	2964      	cmp	r1, #100	; 0x64
   811c6:	d006      	beq.n	811d6 <Appli+0x1a>
   811c8:	2966      	cmp	r1, #102	; 0x66
   811ca:	d01b      	beq.n	81204 <Appli+0x48>

#undef k
		break;

	default:
		Error(ERR_APPLI_SWITHC_BAD_SC, sc);
   811cc:	4b1c      	ldr	r3, [pc, #112]	; (81240 <Appli+0x84>)
   811ce:	681b      	ldr	r3, [r3, #0]
   811d0:	200f      	movs	r0, #15
   811d2:	4798      	blx	r3
		break;
   811d4:	e011      	b.n	811fa <Appli+0x3e>
		gpio_configure_pin(PIO_PC1_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   811d6:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   811da:	2041      	movs	r0, #65	; 0x41
   811dc:	4c19      	ldr	r4, [pc, #100]	; (81244 <Appli+0x88>)
   811de:	47a0      	blx	r4
		gpio_configure_pin(PIO_PC2_IDX, (PIO_TYPE_PIO_OUTPUT_1 | PIO_DEFAULT));
   811e0:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   811e4:	2042      	movs	r0, #66	; 0x42
   811e6:	47a0      	blx	r4
		PushTask(Appli, APPLI_RUN, 0, 800);
   811e8:	f44f 7348 	mov.w	r3, #800	; 0x320
   811ec:	9300      	str	r3, [sp, #0]
   811ee:	2300      	movs	r3, #0
   811f0:	2266      	movs	r2, #102	; 0x66
   811f2:	4915      	ldr	r1, [pc, #84]	; (81248 <Appli+0x8c>)
   811f4:	4610      	mov	r0, r2
   811f6:	4c15      	ldr	r4, [pc, #84]	; (8124c <Appli+0x90>)
   811f8:	47a0      	blx	r4
	}
   811fa:	b002      	add	sp, #8
   811fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81200:	b004      	add	sp, #16
   81202:	4770      	bx	lr
		k++; if(flashSequApp[k]==0) k=0;
   81204:	9c05      	ldr	r4, [sp, #20]
   81206:	3401      	adds	r4, #1
   81208:	9405      	str	r4, [sp, #20]
   8120a:	4b11      	ldr	r3, [pc, #68]	; (81250 <Appli+0x94>)
   8120c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   81210:	b133      	cbz	r3, 81220 <Appli+0x64>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   81212:	f014 0f01 	tst.w	r4, #1
   81216:	d004      	beq.n	81222 <Appli+0x66>
		else gpio_set_pin_low(PIO_PC1_IDX);
   81218:	2041      	movs	r0, #65	; 0x41
   8121a:	4b0e      	ldr	r3, [pc, #56]	; (81254 <Appli+0x98>)
   8121c:	4798      	blx	r3
   8121e:	e003      	b.n	81228 <Appli+0x6c>
		if(k%2==0) gpio_set_pin_high(PIO_PC1_IDX);
   81220:	2400      	movs	r4, #0
   81222:	2041      	movs	r0, #65	; 0x41
   81224:	4b0c      	ldr	r3, [pc, #48]	; (81258 <Appli+0x9c>)
   81226:	4798      	blx	r3
		PushTask(Appli,APPLI_RUN,k,flashSequApp[k]);
   81228:	4b09      	ldr	r3, [pc, #36]	; (81250 <Appli+0x94>)
   8122a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   8122e:	9300      	str	r3, [sp, #0]
   81230:	4623      	mov	r3, r4
   81232:	2266      	movs	r2, #102	; 0x66
   81234:	4904      	ldr	r1, [pc, #16]	; (81248 <Appli+0x8c>)
   81236:	4610      	mov	r0, r2
   81238:	4c04      	ldr	r4, [pc, #16]	; (8124c <Appli+0x90>)
   8123a:	47a0      	blx	r4
		break;
   8123c:	e7dd      	b.n	811fa <Appli+0x3e>
   8123e:	bf00      	nop
   81240:	20070548 	.word	0x20070548
   81244:	00081541 	.word	0x00081541
   81248:	000811bd 	.word	0x000811bd
   8124c:	00080fa1 	.word	0x00080fa1
   81250:	00086730 	.word	0x00086730
   81254:	00081507 	.word	0x00081507
   81258:	000814ed 	.word	0x000814ed

0008125c <main>:
void Prompt(uint32_t sc, uint32_t i);

char buf[256];

int main (void)
{
   8125c:	b500      	push	{lr}
   8125e:	b083      	sub	sp, #12
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   81260:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   81262:	f3bf 8f5f 	dmb	sy
	/* Insert system clock initialization code here (sysclk_init()). */
		
	cpu_irq_disable();
   81266:	4e12      	ldr	r6, [pc, #72]	; (812b0 <main+0x54>)
   81268:	2400      	movs	r4, #0
   8126a:	7034      	strb	r4, [r6, #0]
	sysclk_init();
   8126c:	4b11      	ldr	r3, [pc, #68]	; (812b4 <main+0x58>)
   8126e:	4798      	blx	r3
	board_init();
   81270:	4b11      	ldr	r3, [pc, #68]	; (812b8 <main+0x5c>)
   81272:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());
	//////////////////////////////////////////////////////////////////
	
	Taskman(TASKMAN_NEW);
   81274:	2064      	movs	r0, #100	; 0x64
   81276:	4d11      	ldr	r5, [pc, #68]	; (812bc <main+0x60>)
   81278:	47a8      	blx	r5
		
	PushTask(Shell,SHELL_NEW, 0, 0);
   8127a:	9400      	str	r4, [sp, #0]
   8127c:	4623      	mov	r3, r4
   8127e:	2264      	movs	r2, #100	; 0x64
   81280:	490f      	ldr	r1, [pc, #60]	; (812c0 <main+0x64>)
   81282:	2066      	movs	r0, #102	; 0x66
   81284:	47a8      	blx	r5
	PushTask(Menu, MENU_NEW,0 , 0);
   81286:	9400      	str	r4, [sp, #0]
   81288:	4623      	mov	r3, r4
   8128a:	2264      	movs	r2, #100	; 0x64
   8128c:	490d      	ldr	r1, [pc, #52]	; (812c4 <main+0x68>)
   8128e:	2066      	movs	r0, #102	; 0x66
   81290:	47a8      	blx	r5

	Putstr("\r\n\n\tATMEL ATSAM3U STARTED\r\n\n");
   81292:	490d      	ldr	r1, [pc, #52]	; (812c8 <main+0x6c>)
   81294:	2067      	movs	r0, #103	; 0x67
   81296:	4b0d      	ldr	r3, [pc, #52]	; (812cc <main+0x70>)
   81298:	4798      	blx	r3


	//PushTask(Sablier, SABLIER_NEW, 0, 0);
	//PushTask(Prompt, 0, 0, 800);
	
	cpu_irq_enable();
   8129a:	2301      	movs	r3, #1
   8129c:	7033      	strb	r3, [r6, #0]
   8129e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   812a2:	b662      	cpsie	i



	for(;;)
	{
		PopTask();
   812a4:	2567      	movs	r5, #103	; 0x67
   812a6:	4c05      	ldr	r4, [pc, #20]	; (812bc <main+0x60>)
   812a8:	4628      	mov	r0, r5
   812aa:	47a0      	blx	r4
   812ac:	e7fc      	b.n	812a8 <main+0x4c>
   812ae:	bf00      	nop
   812b0:	20070598 	.word	0x20070598
   812b4:	000812d1 	.word	0x000812d1
   812b8:	0008139d 	.word	0x0008139d
   812bc:	00080fa1 	.word	0x00080fa1
   812c0:	00080779 	.word	0x00080779
   812c4:	00080395 	.word	0x00080395
   812c8:	0008674c 	.word	0x0008674c
   812cc:	00080d89 	.word	0x00080d89

000812d0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   812d0:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   812d2:	480e      	ldr	r0, [pc, #56]	; (8130c <sysclk_init+0x3c>)
   812d4:	4b0e      	ldr	r3, [pc, #56]	; (81310 <sysclk_init+0x40>)
   812d6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   812d8:	213e      	movs	r1, #62	; 0x3e
   812da:	2000      	movs	r0, #0
   812dc:	4b0d      	ldr	r3, [pc, #52]	; (81314 <sysclk_init+0x44>)
   812de:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   812e0:	4c0d      	ldr	r4, [pc, #52]	; (81318 <sysclk_init+0x48>)
   812e2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   812e4:	2800      	cmp	r0, #0
   812e6:	d0fc      	beq.n	812e2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   812e8:	4b0c      	ldr	r3, [pc, #48]	; (8131c <sysclk_init+0x4c>)
   812ea:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   812ec:	4a0c      	ldr	r2, [pc, #48]	; (81320 <sysclk_init+0x50>)
   812ee:	4b0d      	ldr	r3, [pc, #52]	; (81324 <sysclk_init+0x54>)
   812f0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   812f2:	4c0d      	ldr	r4, [pc, #52]	; (81328 <sysclk_init+0x58>)
   812f4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   812f6:	2800      	cmp	r0, #0
   812f8:	d0fc      	beq.n	812f4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   812fa:	2010      	movs	r0, #16
   812fc:	4b0b      	ldr	r3, [pc, #44]	; (8132c <sysclk_init+0x5c>)
   812fe:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   81300:	4b0b      	ldr	r3, [pc, #44]	; (81330 <sysclk_init+0x60>)
   81302:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   81304:	4801      	ldr	r0, [pc, #4]	; (8130c <sysclk_init+0x3c>)
   81306:	4b02      	ldr	r3, [pc, #8]	; (81310 <sysclk_init+0x40>)
   81308:	4798      	blx	r3
   8130a:	bd10      	pop	{r4, pc}
   8130c:	0501bd00 	.word	0x0501bd00
   81310:	200700b1 	.word	0x200700b1
   81314:	00081821 	.word	0x00081821
   81318:	00081875 	.word	0x00081875
   8131c:	00081885 	.word	0x00081885
   81320:	200d3f01 	.word	0x200d3f01
   81324:	400e0600 	.word	0x400e0600
   81328:	00081895 	.word	0x00081895
   8132c:	000817bd 	.word	0x000817bd
   81330:	00081995 	.word	0x00081995

00081334 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   81334:	4b0b      	ldr	r3, [pc, #44]	; (81364 <cpu_irq_enter_critical+0x30>)
   81336:	681b      	ldr	r3, [r3, #0]
   81338:	b92b      	cbnz	r3, 81346 <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8133a:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   8133e:	b13b      	cbz	r3, 81350 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   81340:	2200      	movs	r2, #0
   81342:	4b09      	ldr	r3, [pc, #36]	; (81368 <cpu_irq_enter_critical+0x34>)
   81344:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   81346:	4a07      	ldr	r2, [pc, #28]	; (81364 <cpu_irq_enter_critical+0x30>)
   81348:	6813      	ldr	r3, [r2, #0]
   8134a:	3301      	adds	r3, #1
   8134c:	6013      	str	r3, [r2, #0]
   8134e:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   81350:	b672      	cpsid	i
   81352:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   81356:	2200      	movs	r2, #0
   81358:	4b04      	ldr	r3, [pc, #16]	; (8136c <cpu_irq_enter_critical+0x38>)
   8135a:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   8135c:	2201      	movs	r2, #1
   8135e:	4b02      	ldr	r3, [pc, #8]	; (81368 <cpu_irq_enter_critical+0x34>)
   81360:	701a      	strb	r2, [r3, #0]
   81362:	e7f0      	b.n	81346 <cpu_irq_enter_critical+0x12>
   81364:	20070f74 	.word	0x20070f74
   81368:	20070f78 	.word	0x20070f78
   8136c:	20070598 	.word	0x20070598

00081370 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   81370:	4b07      	ldr	r3, [pc, #28]	; (81390 <cpu_irq_leave_critical+0x20>)
   81372:	681a      	ldr	r2, [r3, #0]
   81374:	3a01      	subs	r2, #1
   81376:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   81378:	681b      	ldr	r3, [r3, #0]
   8137a:	b943      	cbnz	r3, 8138e <cpu_irq_leave_critical+0x1e>
   8137c:	4b05      	ldr	r3, [pc, #20]	; (81394 <cpu_irq_leave_critical+0x24>)
   8137e:	781b      	ldrb	r3, [r3, #0]
   81380:	b12b      	cbz	r3, 8138e <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   81382:	2201      	movs	r2, #1
   81384:	4b04      	ldr	r3, [pc, #16]	; (81398 <cpu_irq_leave_critical+0x28>)
   81386:	701a      	strb	r2, [r3, #0]
   81388:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8138c:	b662      	cpsie	i
   8138e:	4770      	bx	lr
   81390:	20070f74 	.word	0x20070f74
   81394:	20070f78 	.word	0x20070f78
   81398:	20070598 	.word	0x20070598

0008139c <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   8139c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8139e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   813a2:	4b16      	ldr	r3, [pc, #88]	; (813fc <board_init+0x60>)
   813a4:	605a      	str	r2, [r3, #4]
   813a6:	200b      	movs	r0, #11
   813a8:	4c15      	ldr	r4, [pc, #84]	; (81400 <board_init+0x64>)
   813aa:	47a0      	blx	r4
   813ac:	200c      	movs	r0, #12
   813ae:	47a0      	blx	r4
   813b0:	200d      	movs	r0, #13
   813b2:	47a0      	blx	r4
   813b4:	200e      	movs	r0, #14
   813b6:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   813b8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   813bc:	203b      	movs	r0, #59	; 0x3b
   813be:	4c11      	ldr	r4, [pc, #68]	; (81404 <board_init+0x68>)
   813c0:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   813c2:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   813c6:	2055      	movs	r0, #85	; 0x55
   813c8:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   813ca:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   813ce:	2056      	movs	r0, #86	; 0x56
   813d0:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   813d2:	490d      	ldr	r1, [pc, #52]	; (81408 <board_init+0x6c>)
   813d4:	2068      	movs	r0, #104	; 0x68
   813d6:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   813d8:	490c      	ldr	r1, [pc, #48]	; (8140c <board_init+0x70>)
   813da:	205c      	movs	r0, #92	; 0x5c
   813dc:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   813de:	4a0c      	ldr	r2, [pc, #48]	; (81410 <board_init+0x74>)
   813e0:	f44f 7140 	mov.w	r1, #768	; 0x300
   813e4:	480b      	ldr	r0, [pc, #44]	; (81414 <board_init+0x78>)
   813e6:	4b0c      	ldr	r3, [pc, #48]	; (81418 <board_init+0x7c>)
   813e8:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   813ea:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   813ee:	202b      	movs	r0, #43	; 0x2b
   813f0:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   813f2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   813f6:	202a      	movs	r0, #42	; 0x2a
   813f8:	47a0      	blx	r4
   813fa:	bd10      	pop	{r4, pc}
   813fc:	400e1a50 	.word	0x400e1a50
   81400:	000818a5 	.word	0x000818a5
   81404:	00081541 	.word	0x00081541
   81408:	28000079 	.word	0x28000079
   8140c:	28000001 	.word	0x28000001
   81410:	08000001 	.word	0x08000001
   81414:	400e0e00 	.word	0x400e0e00
   81418:	00081611 	.word	0x00081611

0008141c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   8141c:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   8141e:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   81422:	d016      	beq.n	81452 <pio_set_peripheral+0x36>
   81424:	d80b      	bhi.n	8143e <pio_set_peripheral+0x22>
   81426:	b149      	cbz	r1, 8143c <pio_set_peripheral+0x20>
   81428:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   8142c:	d105      	bne.n	8143a <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   8142e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   81430:	6f01      	ldr	r1, [r0, #112]	; 0x70
   81432:	400b      	ands	r3, r1
   81434:	ea23 0302 	bic.w	r3, r3, r2
   81438:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   8143a:	6042      	str	r2, [r0, #4]
   8143c:	4770      	bx	lr
	switch (ul_type) {
   8143e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   81442:	d0fb      	beq.n	8143c <pio_set_peripheral+0x20>
   81444:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   81448:	d0f8      	beq.n	8143c <pio_set_peripheral+0x20>
   8144a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   8144e:	d1f4      	bne.n	8143a <pio_set_peripheral+0x1e>
   81450:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   81452:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   81454:	4313      	orrs	r3, r2
   81456:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   81458:	e7ef      	b.n	8143a <pio_set_peripheral+0x1e>

0008145a <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8145a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   8145c:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   81460:	bf14      	ite	ne
   81462:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81464:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   81466:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8146a:	bf14      	ite	ne
   8146c:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   8146e:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   81470:	f012 0f02 	tst.w	r2, #2
   81474:	d107      	bne.n	81486 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   81476:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8147a:	bf18      	it	ne
   8147c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   81480:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   81482:	6001      	str	r1, [r0, #0]
   81484:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   81486:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8148a:	e7f9      	b.n	81480 <pio_set_input+0x26>

0008148c <pio_set_output>:
{
   8148c:	b410      	push	{r4}
   8148e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   81490:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   81492:	b944      	cbnz	r4, 814a6 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   81494:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   81496:	b143      	cbz	r3, 814aa <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   81498:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8149a:	b942      	cbnz	r2, 814ae <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   8149c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   8149e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   814a0:	6001      	str	r1, [r0, #0]
}
   814a2:	bc10      	pop	{r4}
   814a4:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   814a6:	6641      	str	r1, [r0, #100]	; 0x64
   814a8:	e7f5      	b.n	81496 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   814aa:	6541      	str	r1, [r0, #84]	; 0x54
   814ac:	e7f5      	b.n	8149a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   814ae:	6301      	str	r1, [r0, #48]	; 0x30
   814b0:	e7f5      	b.n	8149e <pio_set_output+0x12>

000814b2 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
   814b2:	f012 0f10 	tst.w	r2, #16
   814b6:	d010      	beq.n	814da <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
   814b8:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
   814bc:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
   814c0:	bf14      	ite	ne
   814c2:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
   814c6:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
   814ca:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
   814ce:	bf14      	ite	ne
   814d0:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
   814d4:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   814d8:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
   814da:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   814de:	4770      	bx	lr

000814e0 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
   814e0:	6401      	str	r1, [r0, #64]	; 0x40
   814e2:	4770      	bx	lr

000814e4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   814e4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   814e6:	4770      	bx	lr

000814e8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   814e8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   814ea:	4770      	bx	lr

000814ec <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   814ec:	0943      	lsrs	r3, r0, #5
   814ee:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   814f2:	f203 7307 	addw	r3, r3, #1799	; 0x707
   814f6:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   814f8:	f000 001f 	and.w	r0, r0, #31
   814fc:	2201      	movs	r2, #1
   814fe:	fa02 f000 	lsl.w	r0, r2, r0
   81502:	6318      	str	r0, [r3, #48]	; 0x30
   81504:	4770      	bx	lr

00081506 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81506:	0943      	lsrs	r3, r0, #5
   81508:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8150c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81510:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81512:	f000 001f 	and.w	r0, r0, #31
   81516:	2201      	movs	r2, #1
   81518:	fa02 f000 	lsl.w	r0, r2, r0
   8151c:	6358      	str	r0, [r3, #52]	; 0x34
   8151e:	4770      	bx	lr

00081520 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81520:	0943      	lsrs	r3, r0, #5
   81522:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81526:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8152a:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   8152c:	6b99      	ldr	r1, [r3, #56]	; 0x38
   8152e:	f000 021f 	and.w	r2, r0, #31
   81532:	2001      	movs	r0, #1
   81534:	4090      	lsls	r0, r2
   81536:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81538:	bf14      	ite	ne
   8153a:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   8153c:	6318      	streq	r0, [r3, #48]	; 0x30
   8153e:	4770      	bx	lr

00081540 <pio_configure_pin>:
{
   81540:	b570      	push	{r4, r5, r6, lr}
   81542:	b082      	sub	sp, #8
   81544:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81546:	0943      	lsrs	r3, r0, #5
   81548:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8154c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81550:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   81552:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   81556:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8155a:	d031      	beq.n	815c0 <pio_configure_pin+0x80>
   8155c:	d816      	bhi.n	8158c <pio_configure_pin+0x4c>
   8155e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   81562:	d01b      	beq.n	8159c <pio_configure_pin+0x5c>
   81564:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   81568:	d116      	bne.n	81598 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8156a:	f000 001f 	and.w	r0, r0, #31
   8156e:	2601      	movs	r6, #1
   81570:	4086      	lsls	r6, r0
   81572:	4632      	mov	r2, r6
   81574:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81578:	4620      	mov	r0, r4
   8157a:	4b22      	ldr	r3, [pc, #136]	; (81604 <pio_configure_pin+0xc4>)
   8157c:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8157e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   81582:	bf14      	ite	ne
   81584:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81586:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   81588:	2001      	movs	r0, #1
   8158a:	e017      	b.n	815bc <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   8158c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   81590:	d021      	beq.n	815d6 <pio_configure_pin+0x96>
   81592:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   81596:	d01e      	beq.n	815d6 <pio_configure_pin+0x96>
		return 0;
   81598:	2000      	movs	r0, #0
   8159a:	e00f      	b.n	815bc <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   8159c:	f000 001f 	and.w	r0, r0, #31
   815a0:	2601      	movs	r6, #1
   815a2:	4086      	lsls	r6, r0
   815a4:	4632      	mov	r2, r6
   815a6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   815aa:	4620      	mov	r0, r4
   815ac:	4b15      	ldr	r3, [pc, #84]	; (81604 <pio_configure_pin+0xc4>)
   815ae:	4798      	blx	r3
	if (ul_pull_up_enable) {
   815b0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   815b4:	bf14      	ite	ne
   815b6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   815b8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   815ba:	2001      	movs	r0, #1
}
   815bc:	b002      	add	sp, #8
   815be:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   815c0:	f000 011f 	and.w	r1, r0, #31
   815c4:	2601      	movs	r6, #1
   815c6:	462a      	mov	r2, r5
   815c8:	fa06 f101 	lsl.w	r1, r6, r1
   815cc:	4620      	mov	r0, r4
   815ce:	4b0e      	ldr	r3, [pc, #56]	; (81608 <pio_configure_pin+0xc8>)
   815d0:	4798      	blx	r3
	return 1;
   815d2:	4630      	mov	r0, r6
		break;
   815d4:	e7f2      	b.n	815bc <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   815d6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   815da:	f000 011f 	and.w	r1, r0, #31
   815de:	2601      	movs	r6, #1
   815e0:	ea05 0306 	and.w	r3, r5, r6
   815e4:	9300      	str	r3, [sp, #0]
   815e6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   815ea:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   815ee:	bf14      	ite	ne
   815f0:	2200      	movne	r2, #0
   815f2:	2201      	moveq	r2, #1
   815f4:	fa06 f101 	lsl.w	r1, r6, r1
   815f8:	4620      	mov	r0, r4
   815fa:	4c04      	ldr	r4, [pc, #16]	; (8160c <pio_configure_pin+0xcc>)
   815fc:	47a0      	blx	r4
	return 1;
   815fe:	4630      	mov	r0, r6
		break;
   81600:	e7dc      	b.n	815bc <pio_configure_pin+0x7c>
   81602:	bf00      	nop
   81604:	0008141d 	.word	0x0008141d
   81608:	0008145b 	.word	0x0008145b
   8160c:	0008148d 	.word	0x0008148d

00081610 <pio_configure_pin_group>:
{
   81610:	b570      	push	{r4, r5, r6, lr}
   81612:	b082      	sub	sp, #8
   81614:	4605      	mov	r5, r0
   81616:	460e      	mov	r6, r1
   81618:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8161a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8161e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   81622:	d027      	beq.n	81674 <pio_configure_pin_group+0x64>
   81624:	d811      	bhi.n	8164a <pio_configure_pin_group+0x3a>
   81626:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8162a:	d016      	beq.n	8165a <pio_configure_pin_group+0x4a>
   8162c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   81630:	d111      	bne.n	81656 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   81632:	460a      	mov	r2, r1
   81634:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   81638:	4b19      	ldr	r3, [pc, #100]	; (816a0 <pio_configure_pin_group+0x90>)
   8163a:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8163c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   81640:	bf14      	ite	ne
   81642:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81644:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   81646:	2001      	movs	r0, #1
   81648:	e012      	b.n	81670 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   8164a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8164e:	d015      	beq.n	8167c <pio_configure_pin_group+0x6c>
   81650:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   81654:	d012      	beq.n	8167c <pio_configure_pin_group+0x6c>
		return 0;
   81656:	2000      	movs	r0, #0
   81658:	e00a      	b.n	81670 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   8165a:	460a      	mov	r2, r1
   8165c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81660:	4b0f      	ldr	r3, [pc, #60]	; (816a0 <pio_configure_pin_group+0x90>)
   81662:	4798      	blx	r3
	if (ul_pull_up_enable) {
   81664:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   81668:	bf14      	ite	ne
   8166a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8166c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8166e:	2001      	movs	r0, #1
}
   81670:	b002      	add	sp, #8
   81672:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   81674:	4b0b      	ldr	r3, [pc, #44]	; (816a4 <pio_configure_pin_group+0x94>)
   81676:	4798      	blx	r3
	return 1;
   81678:	2001      	movs	r0, #1
		break;
   8167a:	e7f9      	b.n	81670 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8167c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   81680:	f004 0301 	and.w	r3, r4, #1
   81684:	9300      	str	r3, [sp, #0]
   81686:	f3c4 0380 	ubfx	r3, r4, #2, #1
   8168a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8168e:	bf14      	ite	ne
   81690:	2200      	movne	r2, #0
   81692:	2201      	moveq	r2, #1
   81694:	4631      	mov	r1, r6
   81696:	4628      	mov	r0, r5
   81698:	4c03      	ldr	r4, [pc, #12]	; (816a8 <pio_configure_pin_group+0x98>)
   8169a:	47a0      	blx	r4
	return 1;
   8169c:	2001      	movs	r0, #1
		break;
   8169e:	e7e7      	b.n	81670 <pio_configure_pin_group+0x60>
   816a0:	0008141d 	.word	0x0008141d
   816a4:	0008145b 	.word	0x0008145b
   816a8:	0008148d 	.word	0x0008148d

000816ac <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   816ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   816b0:	4604      	mov	r4, r0
   816b2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   816b4:	4b0e      	ldr	r3, [pc, #56]	; (816f0 <pio_handler_process+0x44>)
   816b6:	4798      	blx	r3
   816b8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   816ba:	4620      	mov	r0, r4
   816bc:	4b0d      	ldr	r3, [pc, #52]	; (816f4 <pio_handler_process+0x48>)
   816be:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   816c0:	4005      	ands	r5, r0
   816c2:	d013      	beq.n	816ec <pio_handler_process+0x40>
   816c4:	4c0c      	ldr	r4, [pc, #48]	; (816f8 <pio_handler_process+0x4c>)
   816c6:	f104 0660 	add.w	r6, r4, #96	; 0x60
   816ca:	e003      	b.n	816d4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   816cc:	42b4      	cmp	r4, r6
   816ce:	d00d      	beq.n	816ec <pio_handler_process+0x40>
   816d0:	3410      	adds	r4, #16
		while (status != 0) {
   816d2:	b15d      	cbz	r5, 816ec <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   816d4:	6820      	ldr	r0, [r4, #0]
   816d6:	4540      	cmp	r0, r8
   816d8:	d1f8      	bne.n	816cc <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   816da:	6861      	ldr	r1, [r4, #4]
   816dc:	4229      	tst	r1, r5
   816de:	d0f5      	beq.n	816cc <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   816e0:	68e3      	ldr	r3, [r4, #12]
   816e2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   816e4:	6863      	ldr	r3, [r4, #4]
   816e6:	ea25 0503 	bic.w	r5, r5, r3
   816ea:	e7ef      	b.n	816cc <pio_handler_process+0x20>
   816ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   816f0:	000814e5 	.word	0x000814e5
   816f4:	000814e9 	.word	0x000814e9
   816f8:	20070f7c 	.word	0x20070f7c

000816fc <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   816fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   816fe:	4c18      	ldr	r4, [pc, #96]	; (81760 <pio_handler_set+0x64>)
   81700:	6826      	ldr	r6, [r4, #0]
   81702:	2e06      	cmp	r6, #6
   81704:	d829      	bhi.n	8175a <pio_handler_set+0x5e>
   81706:	f04f 0c00 	mov.w	ip, #0
   8170a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   8170c:	4f15      	ldr	r7, [pc, #84]	; (81764 <pio_handler_set+0x68>)
   8170e:	e004      	b.n	8171a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
   81710:	3401      	adds	r4, #1
   81712:	b2e4      	uxtb	r4, r4
   81714:	46a4      	mov	ip, r4
   81716:	42a6      	cmp	r6, r4
   81718:	d309      	bcc.n	8172e <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
   8171a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   8171c:	0125      	lsls	r5, r4, #4
   8171e:	597d      	ldr	r5, [r7, r5]
   81720:	428d      	cmp	r5, r1
   81722:	d1f5      	bne.n	81710 <pio_handler_set+0x14>
   81724:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   81728:	686d      	ldr	r5, [r5, #4]
   8172a:	4295      	cmp	r5, r2
   8172c:	d1f0      	bne.n	81710 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
   8172e:	4d0d      	ldr	r5, [pc, #52]	; (81764 <pio_handler_set+0x68>)
   81730:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   81734:	eb05 040e 	add.w	r4, r5, lr
   81738:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
   8173c:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
   8173e:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
   81740:	9906      	ldr	r1, [sp, #24]
   81742:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
   81744:	3601      	adds	r6, #1
   81746:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
   81748:	bf04      	itt	eq
   8174a:	4905      	ldreq	r1, [pc, #20]	; (81760 <pio_handler_set+0x64>)
   8174c:	600e      	streq	r6, [r1, #0]
   8174e:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   81750:	461a      	mov	r2, r3
   81752:	4b05      	ldr	r3, [pc, #20]	; (81768 <pio_handler_set+0x6c>)
   81754:	4798      	blx	r3

	return 0;
   81756:	2000      	movs	r0, #0
   81758:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
   8175a:	2001      	movs	r0, #1
}
   8175c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8175e:	bf00      	nop
   81760:	20070fec 	.word	0x20070fec
   81764:	20070f7c 	.word	0x20070f7c
   81768:	000814b3 	.word	0x000814b3

0008176c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8176c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8176e:	210b      	movs	r1, #11
   81770:	4801      	ldr	r0, [pc, #4]	; (81778 <PIOA_Handler+0xc>)
   81772:	4b02      	ldr	r3, [pc, #8]	; (8177c <PIOA_Handler+0x10>)
   81774:	4798      	blx	r3
   81776:	bd08      	pop	{r3, pc}
   81778:	400e0e00 	.word	0x400e0e00
   8177c:	000816ad 	.word	0x000816ad

00081780 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   81780:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   81782:	210c      	movs	r1, #12
   81784:	4801      	ldr	r0, [pc, #4]	; (8178c <PIOB_Handler+0xc>)
   81786:	4b02      	ldr	r3, [pc, #8]	; (81790 <PIOB_Handler+0x10>)
   81788:	4798      	blx	r3
   8178a:	bd08      	pop	{r3, pc}
   8178c:	400e1000 	.word	0x400e1000
   81790:	000816ad 	.word	0x000816ad

00081794 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   81794:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   81796:	210d      	movs	r1, #13
   81798:	4801      	ldr	r0, [pc, #4]	; (817a0 <PIOC_Handler+0xc>)
   8179a:	4b02      	ldr	r3, [pc, #8]	; (817a4 <PIOC_Handler+0x10>)
   8179c:	4798      	blx	r3
   8179e:	bd08      	pop	{r3, pc}
   817a0:	400e1200 	.word	0x400e1200
   817a4:	000816ad 	.word	0x000816ad

000817a8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   817a8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   817aa:	210e      	movs	r1, #14
   817ac:	4801      	ldr	r0, [pc, #4]	; (817b4 <PIOD_Handler+0xc>)
   817ae:	4b02      	ldr	r3, [pc, #8]	; (817b8 <PIOD_Handler+0x10>)
   817b0:	4798      	blx	r3
   817b2:	bd08      	pop	{r3, pc}
   817b4:	400e1400 	.word	0x400e1400
   817b8:	000816ad 	.word	0x000816ad

000817bc <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   817bc:	4a17      	ldr	r2, [pc, #92]	; (8181c <pmc_switch_mck_to_pllack+0x60>)
   817be:	6b13      	ldr	r3, [r2, #48]	; 0x30
   817c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   817c4:	4318      	orrs	r0, r3
   817c6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   817c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   817ca:	f013 0f08 	tst.w	r3, #8
   817ce:	d10a      	bne.n	817e6 <pmc_switch_mck_to_pllack+0x2a>
   817d0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   817d4:	4911      	ldr	r1, [pc, #68]	; (8181c <pmc_switch_mck_to_pllack+0x60>)
   817d6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   817d8:	f012 0f08 	tst.w	r2, #8
   817dc:	d103      	bne.n	817e6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   817de:	3b01      	subs	r3, #1
   817e0:	d1f9      	bne.n	817d6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   817e2:	2001      	movs	r0, #1
   817e4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   817e6:	4a0d      	ldr	r2, [pc, #52]	; (8181c <pmc_switch_mck_to_pllack+0x60>)
   817e8:	6b13      	ldr	r3, [r2, #48]	; 0x30
   817ea:	f023 0303 	bic.w	r3, r3, #3
   817ee:	f043 0302 	orr.w	r3, r3, #2
   817f2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   817f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   817f6:	f013 0f08 	tst.w	r3, #8
   817fa:	d10a      	bne.n	81812 <pmc_switch_mck_to_pllack+0x56>
   817fc:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81800:	4906      	ldr	r1, [pc, #24]	; (8181c <pmc_switch_mck_to_pllack+0x60>)
   81802:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81804:	f012 0f08 	tst.w	r2, #8
   81808:	d105      	bne.n	81816 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8180a:	3b01      	subs	r3, #1
   8180c:	d1f9      	bne.n	81802 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   8180e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81810:	4770      	bx	lr
	return 0;
   81812:	2000      	movs	r0, #0
   81814:	4770      	bx	lr
   81816:	2000      	movs	r0, #0
   81818:	4770      	bx	lr
   8181a:	bf00      	nop
   8181c:	400e0600 	.word	0x400e0600

00081820 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81820:	b9c8      	cbnz	r0, 81856 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81822:	4a11      	ldr	r2, [pc, #68]	; (81868 <pmc_switch_mainck_to_xtal+0x48>)
   81824:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   81826:	0209      	lsls	r1, r1, #8
   81828:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   8182a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   8182e:	f023 0303 	bic.w	r3, r3, #3
   81832:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81836:	f043 0301 	orr.w	r3, r3, #1
   8183a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8183c:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   8183e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81840:	f013 0f01 	tst.w	r3, #1
   81844:	d0fb      	beq.n	8183e <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   81846:	4a08      	ldr	r2, [pc, #32]	; (81868 <pmc_switch_mainck_to_xtal+0x48>)
   81848:	6a13      	ldr	r3, [r2, #32]
   8184a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   8184e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   81852:	6213      	str	r3, [r2, #32]
   81854:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81856:	4904      	ldr	r1, [pc, #16]	; (81868 <pmc_switch_mainck_to_xtal+0x48>)
   81858:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   8185a:	4a04      	ldr	r2, [pc, #16]	; (8186c <pmc_switch_mainck_to_xtal+0x4c>)
   8185c:	401a      	ands	r2, r3
   8185e:	4b04      	ldr	r3, [pc, #16]	; (81870 <pmc_switch_mainck_to_xtal+0x50>)
   81860:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81862:	620b      	str	r3, [r1, #32]
   81864:	4770      	bx	lr
   81866:	bf00      	nop
   81868:	400e0600 	.word	0x400e0600
   8186c:	fec8fffc 	.word	0xfec8fffc
   81870:	01370002 	.word	0x01370002

00081874 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   81874:	4b02      	ldr	r3, [pc, #8]	; (81880 <pmc_osc_is_ready_mainck+0xc>)
   81876:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81878:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   8187c:	4770      	bx	lr
   8187e:	bf00      	nop
   81880:	400e0600 	.word	0x400e0600

00081884 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   81884:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81888:	4b01      	ldr	r3, [pc, #4]	; (81890 <pmc_disable_pllack+0xc>)
   8188a:	629a      	str	r2, [r3, #40]	; 0x28
   8188c:	4770      	bx	lr
   8188e:	bf00      	nop
   81890:	400e0600 	.word	0x400e0600

00081894 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   81894:	4b02      	ldr	r3, [pc, #8]	; (818a0 <pmc_is_locked_pllack+0xc>)
   81896:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81898:	f000 0002 	and.w	r0, r0, #2
   8189c:	4770      	bx	lr
   8189e:	bf00      	nop
   818a0:	400e0600 	.word	0x400e0600

000818a4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   818a4:	282c      	cmp	r0, #44	; 0x2c
   818a6:	d81e      	bhi.n	818e6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   818a8:	281f      	cmp	r0, #31
   818aa:	d80c      	bhi.n	818c6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   818ac:	4b11      	ldr	r3, [pc, #68]	; (818f4 <pmc_enable_periph_clk+0x50>)
   818ae:	699a      	ldr	r2, [r3, #24]
   818b0:	2301      	movs	r3, #1
   818b2:	4083      	lsls	r3, r0
   818b4:	4393      	bics	r3, r2
   818b6:	d018      	beq.n	818ea <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   818b8:	2301      	movs	r3, #1
   818ba:	fa03 f000 	lsl.w	r0, r3, r0
   818be:	4b0d      	ldr	r3, [pc, #52]	; (818f4 <pmc_enable_periph_clk+0x50>)
   818c0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   818c2:	2000      	movs	r0, #0
   818c4:	4770      	bx	lr
		ul_id -= 32;
   818c6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   818c8:	4b0a      	ldr	r3, [pc, #40]	; (818f4 <pmc_enable_periph_clk+0x50>)
   818ca:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   818ce:	2301      	movs	r3, #1
   818d0:	4083      	lsls	r3, r0
   818d2:	4393      	bics	r3, r2
   818d4:	d00b      	beq.n	818ee <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   818d6:	2301      	movs	r3, #1
   818d8:	fa03 f000 	lsl.w	r0, r3, r0
   818dc:	4b05      	ldr	r3, [pc, #20]	; (818f4 <pmc_enable_periph_clk+0x50>)
   818de:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   818e2:	2000      	movs	r0, #0
   818e4:	4770      	bx	lr
		return 1;
   818e6:	2001      	movs	r0, #1
   818e8:	4770      	bx	lr
	return 0;
   818ea:	2000      	movs	r0, #0
   818ec:	4770      	bx	lr
   818ee:	2000      	movs	r0, #0
}
   818f0:	4770      	bx	lr
   818f2:	bf00      	nop
   818f4:	400e0600 	.word	0x400e0600

000818f8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   818f8:	e7fe      	b.n	818f8 <Dummy_Handler>
	...

000818fc <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   818fc:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   818fe:	4b1c      	ldr	r3, [pc, #112]	; (81970 <Reset_Handler+0x74>)
   81900:	4a1c      	ldr	r2, [pc, #112]	; (81974 <Reset_Handler+0x78>)
   81902:	429a      	cmp	r2, r3
   81904:	d010      	beq.n	81928 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   81906:	4b1c      	ldr	r3, [pc, #112]	; (81978 <Reset_Handler+0x7c>)
   81908:	4a19      	ldr	r2, [pc, #100]	; (81970 <Reset_Handler+0x74>)
   8190a:	429a      	cmp	r2, r3
   8190c:	d20c      	bcs.n	81928 <Reset_Handler+0x2c>
   8190e:	3b01      	subs	r3, #1
   81910:	1a9b      	subs	r3, r3, r2
   81912:	f023 0303 	bic.w	r3, r3, #3
   81916:	3304      	adds	r3, #4
   81918:	4413      	add	r3, r2
   8191a:	4916      	ldr	r1, [pc, #88]	; (81974 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   8191c:	f851 0b04 	ldr.w	r0, [r1], #4
   81920:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   81924:	429a      	cmp	r2, r3
   81926:	d1f9      	bne.n	8191c <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81928:	4b14      	ldr	r3, [pc, #80]	; (8197c <Reset_Handler+0x80>)
   8192a:	4a15      	ldr	r2, [pc, #84]	; (81980 <Reset_Handler+0x84>)
   8192c:	429a      	cmp	r2, r3
   8192e:	d20a      	bcs.n	81946 <Reset_Handler+0x4a>
   81930:	3b01      	subs	r3, #1
   81932:	1a9b      	subs	r3, r3, r2
   81934:	f023 0303 	bic.w	r3, r3, #3
   81938:	3304      	adds	r3, #4
   8193a:	4413      	add	r3, r2
		*pDest++ = 0;
   8193c:	2100      	movs	r1, #0
   8193e:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   81942:	4293      	cmp	r3, r2
   81944:	d1fb      	bne.n	8193e <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81946:	4b0f      	ldr	r3, [pc, #60]	; (81984 <Reset_Handler+0x88>)
   81948:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   8194c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81950:	490d      	ldr	r1, [pc, #52]	; (81988 <Reset_Handler+0x8c>)
   81952:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   81954:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81958:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   8195c:	d203      	bcs.n	81966 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8195e:	688b      	ldr	r3, [r1, #8]
   81960:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81964:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81966:	4b09      	ldr	r3, [pc, #36]	; (8198c <Reset_Handler+0x90>)
   81968:	4798      	blx	r3

	/* Branch to main function */
	main();
   8196a:	4b09      	ldr	r3, [pc, #36]	; (81990 <Reset_Handler+0x94>)
   8196c:	4798      	blx	r3
   8196e:	e7fe      	b.n	8196e <Reset_Handler+0x72>
   81970:	20070000 	.word	0x20070000
   81974:	00086a24 	.word	0x00086a24
   81978:	20070f50 	.word	0x20070f50
   8197c:	200714d4 	.word	0x200714d4
   81980:	20070f50 	.word	0x20070f50
   81984:	00080000 	.word	0x00080000
   81988:	e000ed00 	.word	0xe000ed00
   8198c:	00081aed 	.word	0x00081aed
   81990:	0008125d 	.word	0x0008125d

00081994 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81994:	4b3d      	ldr	r3, [pc, #244]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   81996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81998:	f003 0303 	and.w	r3, r3, #3
   8199c:	2b03      	cmp	r3, #3
   8199e:	d80e      	bhi.n	819be <SystemCoreClockUpdate+0x2a>
   819a0:	e8df f003 	tbb	[pc, r3]
   819a4:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   819a8:	4b39      	ldr	r3, [pc, #228]	; (81a90 <SystemCoreClockUpdate+0xfc>)
   819aa:	695b      	ldr	r3, [r3, #20]
   819ac:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   819b0:	bf14      	ite	ne
   819b2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   819b6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   819ba:	4b36      	ldr	r3, [pc, #216]	; (81a94 <SystemCoreClockUpdate+0x100>)
   819bc:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   819be:	4b33      	ldr	r3, [pc, #204]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   819c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   819c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   819c6:	2b70      	cmp	r3, #112	; 0x70
   819c8:	d057      	beq.n	81a7a <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   819ca:	4b30      	ldr	r3, [pc, #192]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   819cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   819ce:	4931      	ldr	r1, [pc, #196]	; (81a94 <SystemCoreClockUpdate+0x100>)
   819d0:	f3c2 1202 	ubfx	r2, r2, #4, #3
   819d4:	680b      	ldr	r3, [r1, #0]
   819d6:	40d3      	lsrs	r3, r2
   819d8:	600b      	str	r3, [r1, #0]
   819da:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   819dc:	4b2b      	ldr	r3, [pc, #172]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   819de:	6a1b      	ldr	r3, [r3, #32]
   819e0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   819e4:	d003      	beq.n	819ee <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   819e6:	4a2c      	ldr	r2, [pc, #176]	; (81a98 <SystemCoreClockUpdate+0x104>)
   819e8:	4b2a      	ldr	r3, [pc, #168]	; (81a94 <SystemCoreClockUpdate+0x100>)
   819ea:	601a      	str	r2, [r3, #0]
   819ec:	e7e7      	b.n	819be <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   819ee:	4a2b      	ldr	r2, [pc, #172]	; (81a9c <SystemCoreClockUpdate+0x108>)
   819f0:	4b28      	ldr	r3, [pc, #160]	; (81a94 <SystemCoreClockUpdate+0x100>)
   819f2:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   819f4:	4b25      	ldr	r3, [pc, #148]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   819f6:	6a1b      	ldr	r3, [r3, #32]
   819f8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   819fc:	2b10      	cmp	r3, #16
   819fe:	d005      	beq.n	81a0c <SystemCoreClockUpdate+0x78>
   81a00:	2b20      	cmp	r3, #32
   81a02:	d1dc      	bne.n	819be <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   81a04:	4a24      	ldr	r2, [pc, #144]	; (81a98 <SystemCoreClockUpdate+0x104>)
   81a06:	4b23      	ldr	r3, [pc, #140]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a08:	601a      	str	r2, [r3, #0]
				break;
   81a0a:	e7d8      	b.n	819be <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   81a0c:	4a24      	ldr	r2, [pc, #144]	; (81aa0 <SystemCoreClockUpdate+0x10c>)
   81a0e:	4b21      	ldr	r3, [pc, #132]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a10:	601a      	str	r2, [r3, #0]
				break;
   81a12:	e7d4      	b.n	819be <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81a14:	4b1d      	ldr	r3, [pc, #116]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   81a16:	6a1b      	ldr	r3, [r3, #32]
   81a18:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81a1c:	d00c      	beq.n	81a38 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81a1e:	4a1e      	ldr	r2, [pc, #120]	; (81a98 <SystemCoreClockUpdate+0x104>)
   81a20:	4b1c      	ldr	r3, [pc, #112]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a22:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   81a24:	4b19      	ldr	r3, [pc, #100]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   81a26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81a28:	f003 0303 	and.w	r3, r3, #3
   81a2c:	2b02      	cmp	r3, #2
   81a2e:	d016      	beq.n	81a5e <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   81a30:	4a1c      	ldr	r2, [pc, #112]	; (81aa4 <SystemCoreClockUpdate+0x110>)
   81a32:	4b18      	ldr	r3, [pc, #96]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a34:	601a      	str	r2, [r3, #0]
   81a36:	e7c2      	b.n	819be <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81a38:	4a18      	ldr	r2, [pc, #96]	; (81a9c <SystemCoreClockUpdate+0x108>)
   81a3a:	4b16      	ldr	r3, [pc, #88]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a3c:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81a3e:	4b13      	ldr	r3, [pc, #76]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   81a40:	6a1b      	ldr	r3, [r3, #32]
   81a42:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81a46:	2b10      	cmp	r3, #16
   81a48:	d005      	beq.n	81a56 <SystemCoreClockUpdate+0xc2>
   81a4a:	2b20      	cmp	r3, #32
   81a4c:	d1ea      	bne.n	81a24 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   81a4e:	4a12      	ldr	r2, [pc, #72]	; (81a98 <SystemCoreClockUpdate+0x104>)
   81a50:	4b10      	ldr	r3, [pc, #64]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a52:	601a      	str	r2, [r3, #0]
				break;
   81a54:	e7e6      	b.n	81a24 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   81a56:	4a12      	ldr	r2, [pc, #72]	; (81aa0 <SystemCoreClockUpdate+0x10c>)
   81a58:	4b0e      	ldr	r3, [pc, #56]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a5a:	601a      	str	r2, [r3, #0]
				break;
   81a5c:	e7e2      	b.n	81a24 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81a5e:	4a0b      	ldr	r2, [pc, #44]	; (81a8c <SystemCoreClockUpdate+0xf8>)
   81a60:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81a62:	6a92      	ldr	r2, [r2, #40]	; 0x28
   81a64:	480b      	ldr	r0, [pc, #44]	; (81a94 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81a66:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81a6a:	6803      	ldr	r3, [r0, #0]
   81a6c:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81a70:	b2d2      	uxtb	r2, r2
   81a72:	fbb3 f3f2 	udiv	r3, r3, r2
   81a76:	6003      	str	r3, [r0, #0]
   81a78:	e7a1      	b.n	819be <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81a7a:	4a06      	ldr	r2, [pc, #24]	; (81a94 <SystemCoreClockUpdate+0x100>)
   81a7c:	6813      	ldr	r3, [r2, #0]
   81a7e:	490a      	ldr	r1, [pc, #40]	; (81aa8 <SystemCoreClockUpdate+0x114>)
   81a80:	fba1 1303 	umull	r1, r3, r1, r3
   81a84:	085b      	lsrs	r3, r3, #1
   81a86:	6013      	str	r3, [r2, #0]
   81a88:	4770      	bx	lr
   81a8a:	bf00      	nop
   81a8c:	400e0600 	.word	0x400e0600
   81a90:	400e1a10 	.word	0x400e1a10
   81a94:	2007059c 	.word	0x2007059c
   81a98:	00b71b00 	.word	0x00b71b00
   81a9c:	003d0900 	.word	0x003d0900
   81aa0:	007a1200 	.word	0x007a1200
   81aa4:	0e4e1c00 	.word	0x0e4e1c00
   81aa8:	aaaaaaab 	.word	0xaaaaaaab

00081aac <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81aac:	4b0a      	ldr	r3, [pc, #40]	; (81ad8 <_sbrk+0x2c>)
   81aae:	681b      	ldr	r3, [r3, #0]
   81ab0:	b153      	cbz	r3, 81ac8 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   81ab2:	4b09      	ldr	r3, [pc, #36]	; (81ad8 <_sbrk+0x2c>)
   81ab4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81ab6:	181a      	adds	r2, r3, r0
   81ab8:	4908      	ldr	r1, [pc, #32]	; (81adc <_sbrk+0x30>)
   81aba:	4291      	cmp	r1, r2
   81abc:	db08      	blt.n	81ad0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   81abe:	4610      	mov	r0, r2
   81ac0:	4a05      	ldr	r2, [pc, #20]	; (81ad8 <_sbrk+0x2c>)
   81ac2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81ac4:	4618      	mov	r0, r3
   81ac6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   81ac8:	4a05      	ldr	r2, [pc, #20]	; (81ae0 <_sbrk+0x34>)
   81aca:	4b03      	ldr	r3, [pc, #12]	; (81ad8 <_sbrk+0x2c>)
   81acc:	601a      	str	r2, [r3, #0]
   81ace:	e7f0      	b.n	81ab2 <_sbrk+0x6>
		return (caddr_t) -1;	
   81ad0:	f04f 30ff 	mov.w	r0, #4294967295
}
   81ad4:	4770      	bx	lr
   81ad6:	bf00      	nop
   81ad8:	20070ff0 	.word	0x20070ff0
   81adc:	20087ffc 	.word	0x20087ffc
   81ae0:	200734d8 	.word	0x200734d8

00081ae4 <atoi>:
   81ae4:	220a      	movs	r2, #10
   81ae6:	2100      	movs	r1, #0
   81ae8:	f000 b998 	b.w	81e1c <strtol>

00081aec <__libc_init_array>:
   81aec:	b570      	push	{r4, r5, r6, lr}
   81aee:	4e0f      	ldr	r6, [pc, #60]	; (81b2c <__libc_init_array+0x40>)
   81af0:	4d0f      	ldr	r5, [pc, #60]	; (81b30 <__libc_init_array+0x44>)
   81af2:	1b76      	subs	r6, r6, r5
   81af4:	10b6      	asrs	r6, r6, #2
   81af6:	bf18      	it	ne
   81af8:	2400      	movne	r4, #0
   81afa:	d005      	beq.n	81b08 <__libc_init_array+0x1c>
   81afc:	3401      	adds	r4, #1
   81afe:	f855 3b04 	ldr.w	r3, [r5], #4
   81b02:	4798      	blx	r3
   81b04:	42a6      	cmp	r6, r4
   81b06:	d1f9      	bne.n	81afc <__libc_init_array+0x10>
   81b08:	4e0a      	ldr	r6, [pc, #40]	; (81b34 <__libc_init_array+0x48>)
   81b0a:	4d0b      	ldr	r5, [pc, #44]	; (81b38 <__libc_init_array+0x4c>)
   81b0c:	f004 ff74 	bl	869f8 <_init>
   81b10:	1b76      	subs	r6, r6, r5
   81b12:	10b6      	asrs	r6, r6, #2
   81b14:	bf18      	it	ne
   81b16:	2400      	movne	r4, #0
   81b18:	d006      	beq.n	81b28 <__libc_init_array+0x3c>
   81b1a:	3401      	adds	r4, #1
   81b1c:	f855 3b04 	ldr.w	r3, [r5], #4
   81b20:	4798      	blx	r3
   81b22:	42a6      	cmp	r6, r4
   81b24:	d1f9      	bne.n	81b1a <__libc_init_array+0x2e>
   81b26:	bd70      	pop	{r4, r5, r6, pc}
   81b28:	bd70      	pop	{r4, r5, r6, pc}
   81b2a:	bf00      	nop
   81b2c:	00086a04 	.word	0x00086a04
   81b30:	00086a04 	.word	0x00086a04
   81b34:	00086a0c 	.word	0x00086a0c
   81b38:	00086a04 	.word	0x00086a04

00081b3c <memset>:
   81b3c:	b470      	push	{r4, r5, r6}
   81b3e:	0786      	lsls	r6, r0, #30
   81b40:	d046      	beq.n	81bd0 <memset+0x94>
   81b42:	1e54      	subs	r4, r2, #1
   81b44:	2a00      	cmp	r2, #0
   81b46:	d041      	beq.n	81bcc <memset+0x90>
   81b48:	b2ca      	uxtb	r2, r1
   81b4a:	4603      	mov	r3, r0
   81b4c:	e002      	b.n	81b54 <memset+0x18>
   81b4e:	f114 34ff 	adds.w	r4, r4, #4294967295
   81b52:	d33b      	bcc.n	81bcc <memset+0x90>
   81b54:	f803 2b01 	strb.w	r2, [r3], #1
   81b58:	079d      	lsls	r5, r3, #30
   81b5a:	d1f8      	bne.n	81b4e <memset+0x12>
   81b5c:	2c03      	cmp	r4, #3
   81b5e:	d92e      	bls.n	81bbe <memset+0x82>
   81b60:	b2cd      	uxtb	r5, r1
   81b62:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81b66:	2c0f      	cmp	r4, #15
   81b68:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81b6c:	d919      	bls.n	81ba2 <memset+0x66>
   81b6e:	4626      	mov	r6, r4
   81b70:	f103 0210 	add.w	r2, r3, #16
   81b74:	3e10      	subs	r6, #16
   81b76:	2e0f      	cmp	r6, #15
   81b78:	f842 5c10 	str.w	r5, [r2, #-16]
   81b7c:	f842 5c0c 	str.w	r5, [r2, #-12]
   81b80:	f842 5c08 	str.w	r5, [r2, #-8]
   81b84:	f842 5c04 	str.w	r5, [r2, #-4]
   81b88:	f102 0210 	add.w	r2, r2, #16
   81b8c:	d8f2      	bhi.n	81b74 <memset+0x38>
   81b8e:	f1a4 0210 	sub.w	r2, r4, #16
   81b92:	f022 020f 	bic.w	r2, r2, #15
   81b96:	f004 040f 	and.w	r4, r4, #15
   81b9a:	3210      	adds	r2, #16
   81b9c:	2c03      	cmp	r4, #3
   81b9e:	4413      	add	r3, r2
   81ba0:	d90d      	bls.n	81bbe <memset+0x82>
   81ba2:	461e      	mov	r6, r3
   81ba4:	4622      	mov	r2, r4
   81ba6:	3a04      	subs	r2, #4
   81ba8:	2a03      	cmp	r2, #3
   81baa:	f846 5b04 	str.w	r5, [r6], #4
   81bae:	d8fa      	bhi.n	81ba6 <memset+0x6a>
   81bb0:	1f22      	subs	r2, r4, #4
   81bb2:	f022 0203 	bic.w	r2, r2, #3
   81bb6:	3204      	adds	r2, #4
   81bb8:	4413      	add	r3, r2
   81bba:	f004 0403 	and.w	r4, r4, #3
   81bbe:	b12c      	cbz	r4, 81bcc <memset+0x90>
   81bc0:	b2c9      	uxtb	r1, r1
   81bc2:	441c      	add	r4, r3
   81bc4:	f803 1b01 	strb.w	r1, [r3], #1
   81bc8:	429c      	cmp	r4, r3
   81bca:	d1fb      	bne.n	81bc4 <memset+0x88>
   81bcc:	bc70      	pop	{r4, r5, r6}
   81bce:	4770      	bx	lr
   81bd0:	4614      	mov	r4, r2
   81bd2:	4603      	mov	r3, r0
   81bd4:	e7c2      	b.n	81b5c <memset+0x20>
   81bd6:	bf00      	nop

00081bd8 <sprintf>:
   81bd8:	b40e      	push	{r1, r2, r3}
   81bda:	4601      	mov	r1, r0
   81bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
   81bde:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81be2:	f44f 7702 	mov.w	r7, #520	; 0x208
   81be6:	f64f 76ff 	movw	r6, #65535	; 0xffff
   81bea:	b09c      	sub	sp, #112	; 0x70
   81bec:	ac21      	add	r4, sp, #132	; 0x84
   81bee:	f854 2b04 	ldr.w	r2, [r4], #4
   81bf2:	4b0b      	ldr	r3, [pc, #44]	; (81c20 <sprintf+0x48>)
   81bf4:	9102      	str	r1, [sp, #8]
   81bf6:	9106      	str	r1, [sp, #24]
   81bf8:	6818      	ldr	r0, [r3, #0]
   81bfa:	a902      	add	r1, sp, #8
   81bfc:	4623      	mov	r3, r4
   81bfe:	9401      	str	r4, [sp, #4]
   81c00:	f8ad 7014 	strh.w	r7, [sp, #20]
   81c04:	9504      	str	r5, [sp, #16]
   81c06:	9507      	str	r5, [sp, #28]
   81c08:	f8ad 6016 	strh.w	r6, [sp, #22]
   81c0c:	f000 f91c 	bl	81e48 <_svfprintf_r>
   81c10:	2200      	movs	r2, #0
   81c12:	9b02      	ldr	r3, [sp, #8]
   81c14:	701a      	strb	r2, [r3, #0]
   81c16:	b01c      	add	sp, #112	; 0x70
   81c18:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81c1c:	b003      	add	sp, #12
   81c1e:	4770      	bx	lr
   81c20:	200705a0 	.word	0x200705a0

00081c24 <strlen>:
   81c24:	f020 0103 	bic.w	r1, r0, #3
   81c28:	f010 0003 	ands.w	r0, r0, #3
   81c2c:	f1c0 0000 	rsb	r0, r0, #0
   81c30:	f851 3b04 	ldr.w	r3, [r1], #4
   81c34:	f100 0c04 	add.w	ip, r0, #4
   81c38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81c3c:	f06f 0200 	mvn.w	r2, #0
   81c40:	bf1c      	itt	ne
   81c42:	fa22 f20c 	lsrne.w	r2, r2, ip
   81c46:	4313      	orrne	r3, r2
   81c48:	f04f 0c01 	mov.w	ip, #1
   81c4c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81c50:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81c54:	eba3 020c 	sub.w	r2, r3, ip
   81c58:	ea22 0203 	bic.w	r2, r2, r3
   81c5c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81c60:	bf04      	itt	eq
   81c62:	f851 3b04 	ldreq.w	r3, [r1], #4
   81c66:	3004      	addeq	r0, #4
   81c68:	d0f4      	beq.n	81c54 <strlen+0x30>
   81c6a:	f1c2 0100 	rsb	r1, r2, #0
   81c6e:	ea02 0201 	and.w	r2, r2, r1
   81c72:	fab2 f282 	clz	r2, r2
   81c76:	f1c2 021f 	rsb	r2, r2, #31
   81c7a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81c7e:	4770      	bx	lr

00081c80 <strtok>:
   81c80:	4a02      	ldr	r2, [pc, #8]	; (81c8c <strtok+0xc>)
   81c82:	2301      	movs	r3, #1
   81c84:	6812      	ldr	r2, [r2, #0]
   81c86:	325c      	adds	r2, #92	; 0x5c
   81c88:	f000 b802 	b.w	81c90 <__strtok_r>
   81c8c:	200705a0 	.word	0x200705a0

00081c90 <__strtok_r>:
   81c90:	b4f0      	push	{r4, r5, r6, r7}
   81c92:	b318      	cbz	r0, 81cdc <__strtok_r+0x4c>
   81c94:	4607      	mov	r7, r0
   81c96:	460d      	mov	r5, r1
   81c98:	f817 6b01 	ldrb.w	r6, [r7], #1
   81c9c:	e001      	b.n	81ca2 <__strtok_r+0x12>
   81c9e:	42a6      	cmp	r6, r4
   81ca0:	d017      	beq.n	81cd2 <__strtok_r+0x42>
   81ca2:	f815 4b01 	ldrb.w	r4, [r5], #1
   81ca6:	2c00      	cmp	r4, #0
   81ca8:	d1f9      	bne.n	81c9e <__strtok_r+0xe>
   81caa:	b1e6      	cbz	r6, 81ce6 <__strtok_r+0x56>
   81cac:	460c      	mov	r4, r1
   81cae:	f817 5b01 	ldrb.w	r5, [r7], #1
   81cb2:	e001      	b.n	81cb8 <__strtok_r+0x28>
   81cb4:	2b00      	cmp	r3, #0
   81cb6:	d0f9      	beq.n	81cac <__strtok_r+0x1c>
   81cb8:	f814 3b01 	ldrb.w	r3, [r4], #1
   81cbc:	429d      	cmp	r5, r3
   81cbe:	d1f9      	bne.n	81cb4 <__strtok_r+0x24>
   81cc0:	b155      	cbz	r5, 81cd8 <__strtok_r+0x48>
   81cc2:	2300      	movs	r3, #0
   81cc4:	f807 3c01 	strb.w	r3, [r7, #-1]
   81cc8:	4606      	mov	r6, r0
   81cca:	6017      	str	r7, [r2, #0]
   81ccc:	4630      	mov	r0, r6
   81cce:	bcf0      	pop	{r4, r5, r6, r7}
   81cd0:	4770      	bx	lr
   81cd2:	b153      	cbz	r3, 81cea <__strtok_r+0x5a>
   81cd4:	4638      	mov	r0, r7
   81cd6:	e7dd      	b.n	81c94 <__strtok_r+0x4>
   81cd8:	462f      	mov	r7, r5
   81cda:	e7f5      	b.n	81cc8 <__strtok_r+0x38>
   81cdc:	6810      	ldr	r0, [r2, #0]
   81cde:	2800      	cmp	r0, #0
   81ce0:	d1d8      	bne.n	81c94 <__strtok_r+0x4>
   81ce2:	4606      	mov	r6, r0
   81ce4:	e7f2      	b.n	81ccc <__strtok_r+0x3c>
   81ce6:	6016      	str	r6, [r2, #0]
   81ce8:	e7f0      	b.n	81ccc <__strtok_r+0x3c>
   81cea:	6017      	str	r7, [r2, #0]
   81cec:	4606      	mov	r6, r0
   81cee:	7003      	strb	r3, [r0, #0]
   81cf0:	e7ec      	b.n	81ccc <__strtok_r+0x3c>
   81cf2:	bf00      	nop

00081cf4 <_strtol_l.isra.0>:
   81cf4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81cf8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81cfc:	460f      	mov	r7, r1
   81cfe:	4680      	mov	r8, r0
   81d00:	4616      	mov	r6, r2
   81d02:	461d      	mov	r5, r3
   81d04:	468a      	mov	sl, r1
   81d06:	e000      	b.n	81d0a <_strtol_l.isra.0+0x16>
   81d08:	46a2      	mov	sl, r4
   81d0a:	4654      	mov	r4, sl
   81d0c:	4648      	mov	r0, r9
   81d0e:	f814 bb01 	ldrb.w	fp, [r4], #1
   81d12:	f002 faf9 	bl	84308 <__locale_ctype_ptr_l>
   81d16:	4458      	add	r0, fp
   81d18:	7842      	ldrb	r2, [r0, #1]
   81d1a:	f012 0208 	ands.w	r2, r2, #8
   81d1e:	d1f3      	bne.n	81d08 <_strtol_l.isra.0+0x14>
   81d20:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   81d24:	d04f      	beq.n	81dc6 <_strtol_l.isra.0+0xd2>
   81d26:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   81d2a:	bf04      	itt	eq
   81d2c:	f894 b000 	ldrbeq.w	fp, [r4]
   81d30:	f10a 0402 	addeq.w	r4, sl, #2
   81d34:	b11d      	cbz	r5, 81d3e <_strtol_l.isra.0+0x4a>
   81d36:	2d10      	cmp	r5, #16
   81d38:	d056      	beq.n	81de8 <_strtol_l.isra.0+0xf4>
   81d3a:	46ac      	mov	ip, r5
   81d3c:	e004      	b.n	81d48 <_strtol_l.isra.0+0x54>
   81d3e:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81d42:	d060      	beq.n	81e06 <_strtol_l.isra.0+0x112>
   81d44:	250a      	movs	r5, #10
   81d46:	46ac      	mov	ip, r5
   81d48:	2a00      	cmp	r2, #0
   81d4a:	bf0c      	ite	eq
   81d4c:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   81d50:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   81d54:	2100      	movs	r1, #0
   81d56:	fbb9 fefc 	udiv	lr, r9, ip
   81d5a:	4608      	mov	r0, r1
   81d5c:	fb0c 9a1e 	mls	sl, ip, lr, r9
   81d60:	e005      	b.n	81d6e <_strtol_l.isra.0+0x7a>
   81d62:	d029      	beq.n	81db8 <_strtol_l.isra.0+0xc4>
   81d64:	2101      	movs	r1, #1
   81d66:	fb0c 3000 	mla	r0, ip, r0, r3
   81d6a:	f814 bb01 	ldrb.w	fp, [r4], #1
   81d6e:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   81d72:	2b09      	cmp	r3, #9
   81d74:	d905      	bls.n	81d82 <_strtol_l.isra.0+0x8e>
   81d76:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   81d7a:	2b19      	cmp	r3, #25
   81d7c:	d80b      	bhi.n	81d96 <_strtol_l.isra.0+0xa2>
   81d7e:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   81d82:	429d      	cmp	r5, r3
   81d84:	dd0f      	ble.n	81da6 <_strtol_l.isra.0+0xb2>
   81d86:	f1b1 3fff 	cmp.w	r1, #4294967295
   81d8a:	d0ee      	beq.n	81d6a <_strtol_l.isra.0+0x76>
   81d8c:	4586      	cmp	lr, r0
   81d8e:	d2e8      	bcs.n	81d62 <_strtol_l.isra.0+0x6e>
   81d90:	f04f 31ff 	mov.w	r1, #4294967295
   81d94:	e7e9      	b.n	81d6a <_strtol_l.isra.0+0x76>
   81d96:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   81d9a:	2b19      	cmp	r3, #25
   81d9c:	d803      	bhi.n	81da6 <_strtol_l.isra.0+0xb2>
   81d9e:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   81da2:	429d      	cmp	r5, r3
   81da4:	dcef      	bgt.n	81d86 <_strtol_l.isra.0+0x92>
   81da6:	1c4b      	adds	r3, r1, #1
   81da8:	d013      	beq.n	81dd2 <_strtol_l.isra.0+0xde>
   81daa:	b102      	cbz	r2, 81dae <_strtol_l.isra.0+0xba>
   81dac:	4240      	negs	r0, r0
   81dae:	b146      	cbz	r6, 81dc2 <_strtol_l.isra.0+0xce>
   81db0:	b9c1      	cbnz	r1, 81de4 <_strtol_l.isra.0+0xf0>
   81db2:	6037      	str	r7, [r6, #0]
   81db4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81db8:	459a      	cmp	sl, r3
   81dba:	dad3      	bge.n	81d64 <_strtol_l.isra.0+0x70>
   81dbc:	f04f 31ff 	mov.w	r1, #4294967295
   81dc0:	e7d3      	b.n	81d6a <_strtol_l.isra.0+0x76>
   81dc2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81dc6:	f894 b000 	ldrb.w	fp, [r4]
   81dca:	2201      	movs	r2, #1
   81dcc:	f10a 0402 	add.w	r4, sl, #2
   81dd0:	e7b0      	b.n	81d34 <_strtol_l.isra.0+0x40>
   81dd2:	2322      	movs	r3, #34	; 0x22
   81dd4:	f8c8 3000 	str.w	r3, [r8]
   81dd8:	b1ee      	cbz	r6, 81e16 <_strtol_l.isra.0+0x122>
   81dda:	1e67      	subs	r7, r4, #1
   81ddc:	4648      	mov	r0, r9
   81dde:	6037      	str	r7, [r6, #0]
   81de0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81de4:	4681      	mov	r9, r0
   81de6:	e7f8      	b.n	81dda <_strtol_l.isra.0+0xe6>
   81de8:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   81dec:	d1a5      	bne.n	81d3a <_strtol_l.isra.0+0x46>
   81dee:	7823      	ldrb	r3, [r4, #0]
   81df0:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81df4:	2b58      	cmp	r3, #88	; 0x58
   81df6:	d1a0      	bne.n	81d3a <_strtol_l.isra.0+0x46>
   81df8:	f04f 0c10 	mov.w	ip, #16
   81dfc:	f894 b001 	ldrb.w	fp, [r4, #1]
   81e00:	4665      	mov	r5, ip
   81e02:	3402      	adds	r4, #2
   81e04:	e7a0      	b.n	81d48 <_strtol_l.isra.0+0x54>
   81e06:	7823      	ldrb	r3, [r4, #0]
   81e08:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   81e0c:	2b58      	cmp	r3, #88	; 0x58
   81e0e:	d0f3      	beq.n	81df8 <_strtol_l.isra.0+0x104>
   81e10:	2508      	movs	r5, #8
   81e12:	46ac      	mov	ip, r5
   81e14:	e798      	b.n	81d48 <_strtol_l.isra.0+0x54>
   81e16:	4648      	mov	r0, r9
   81e18:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00081e1c <strtol>:
   81e1c:	4b08      	ldr	r3, [pc, #32]	; (81e40 <strtol+0x24>)
   81e1e:	b570      	push	{r4, r5, r6, lr}
   81e20:	681d      	ldr	r5, [r3, #0]
   81e22:	4e08      	ldr	r6, [pc, #32]	; (81e44 <strtol+0x28>)
   81e24:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   81e26:	b082      	sub	sp, #8
   81e28:	2c00      	cmp	r4, #0
   81e2a:	bf08      	it	eq
   81e2c:	4634      	moveq	r4, r6
   81e2e:	4613      	mov	r3, r2
   81e30:	9400      	str	r4, [sp, #0]
   81e32:	460a      	mov	r2, r1
   81e34:	4601      	mov	r1, r0
   81e36:	4628      	mov	r0, r5
   81e38:	f7ff ff5c 	bl	81cf4 <_strtol_l.isra.0>
   81e3c:	b002      	add	sp, #8
   81e3e:	bd70      	pop	{r4, r5, r6, pc}
   81e40:	200705a0 	.word	0x200705a0
   81e44:	200709d4 	.word	0x200709d4

00081e48 <_svfprintf_r>:
   81e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81e4c:	b0c3      	sub	sp, #268	; 0x10c
   81e4e:	460c      	mov	r4, r1
   81e50:	910b      	str	r1, [sp, #44]	; 0x2c
   81e52:	4692      	mov	sl, r2
   81e54:	930f      	str	r3, [sp, #60]	; 0x3c
   81e56:	900c      	str	r0, [sp, #48]	; 0x30
   81e58:	f002 fa5a 	bl	84310 <_localeconv_r>
   81e5c:	6803      	ldr	r3, [r0, #0]
   81e5e:	4618      	mov	r0, r3
   81e60:	931a      	str	r3, [sp, #104]	; 0x68
   81e62:	f7ff fedf 	bl	81c24 <strlen>
   81e66:	89a3      	ldrh	r3, [r4, #12]
   81e68:	9019      	str	r0, [sp, #100]	; 0x64
   81e6a:	0619      	lsls	r1, r3, #24
   81e6c:	d503      	bpl.n	81e76 <_svfprintf_r+0x2e>
   81e6e:	6923      	ldr	r3, [r4, #16]
   81e70:	2b00      	cmp	r3, #0
   81e72:	f001 8035 	beq.w	82ee0 <_svfprintf_r+0x1098>
   81e76:	2300      	movs	r3, #0
   81e78:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81e7c:	46c8      	mov	r8, r9
   81e7e:	9315      	str	r3, [sp, #84]	; 0x54
   81e80:	9313      	str	r3, [sp, #76]	; 0x4c
   81e82:	9314      	str	r3, [sp, #80]	; 0x50
   81e84:	9318      	str	r3, [sp, #96]	; 0x60
   81e86:	931b      	str	r3, [sp, #108]	; 0x6c
   81e88:	9309      	str	r3, [sp, #36]	; 0x24
   81e8a:	9316      	str	r3, [sp, #88]	; 0x58
   81e8c:	9317      	str	r3, [sp, #92]	; 0x5c
   81e8e:	9327      	str	r3, [sp, #156]	; 0x9c
   81e90:	9326      	str	r3, [sp, #152]	; 0x98
   81e92:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81e96:	f89a 3000 	ldrb.w	r3, [sl]
   81e9a:	4654      	mov	r4, sl
   81e9c:	b1eb      	cbz	r3, 81eda <_svfprintf_r+0x92>
   81e9e:	2b25      	cmp	r3, #37	; 0x25
   81ea0:	d102      	bne.n	81ea8 <_svfprintf_r+0x60>
   81ea2:	e01a      	b.n	81eda <_svfprintf_r+0x92>
   81ea4:	2b25      	cmp	r3, #37	; 0x25
   81ea6:	d003      	beq.n	81eb0 <_svfprintf_r+0x68>
   81ea8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81eac:	2b00      	cmp	r3, #0
   81eae:	d1f9      	bne.n	81ea4 <_svfprintf_r+0x5c>
   81eb0:	eba4 050a 	sub.w	r5, r4, sl
   81eb4:	b18d      	cbz	r5, 81eda <_svfprintf_r+0x92>
   81eb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81eb8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81eba:	3301      	adds	r3, #1
   81ebc:	442a      	add	r2, r5
   81ebe:	2b07      	cmp	r3, #7
   81ec0:	f8c8 a000 	str.w	sl, [r8]
   81ec4:	f8c8 5004 	str.w	r5, [r8, #4]
   81ec8:	9227      	str	r2, [sp, #156]	; 0x9c
   81eca:	9326      	str	r3, [sp, #152]	; 0x98
   81ecc:	f300 808a 	bgt.w	81fe4 <_svfprintf_r+0x19c>
   81ed0:	f108 0808 	add.w	r8, r8, #8
   81ed4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81ed6:	442b      	add	r3, r5
   81ed8:	9309      	str	r3, [sp, #36]	; 0x24
   81eda:	7823      	ldrb	r3, [r4, #0]
   81edc:	2b00      	cmp	r3, #0
   81ede:	f000 8089 	beq.w	81ff4 <_svfprintf_r+0x1ac>
   81ee2:	2300      	movs	r3, #0
   81ee4:	f04f 30ff 	mov.w	r0, #4294967295
   81ee8:	461a      	mov	r2, r3
   81eea:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81eee:	4619      	mov	r1, r3
   81ef0:	930d      	str	r3, [sp, #52]	; 0x34
   81ef2:	469b      	mov	fp, r3
   81ef4:	7863      	ldrb	r3, [r4, #1]
   81ef6:	f104 0a01 	add.w	sl, r4, #1
   81efa:	900a      	str	r0, [sp, #40]	; 0x28
   81efc:	f10a 0a01 	add.w	sl, sl, #1
   81f00:	f1a3 0020 	sub.w	r0, r3, #32
   81f04:	2858      	cmp	r0, #88	; 0x58
   81f06:	f200 83b7 	bhi.w	82678 <_svfprintf_r+0x830>
   81f0a:	e8df f010 	tbh	[pc, r0, lsl #1]
   81f0e:	034c      	.short	0x034c
   81f10:	03b503b5 	.word	0x03b503b5
   81f14:	03b50354 	.word	0x03b50354
   81f18:	03b503b5 	.word	0x03b503b5
   81f1c:	03b503b5 	.word	0x03b503b5
   81f20:	005903b5 	.word	0x005903b5
   81f24:	03b50359 	.word	0x03b50359
   81f28:	02140066 	.word	0x02140066
   81f2c:	022f03b5 	.word	0x022f03b5
   81f30:	03a503a5 	.word	0x03a503a5
   81f34:	03a503a5 	.word	0x03a503a5
   81f38:	03a503a5 	.word	0x03a503a5
   81f3c:	03a503a5 	.word	0x03a503a5
   81f40:	03b503a5 	.word	0x03b503a5
   81f44:	03b503b5 	.word	0x03b503b5
   81f48:	03b503b5 	.word	0x03b503b5
   81f4c:	03b503b5 	.word	0x03b503b5
   81f50:	03b503b5 	.word	0x03b503b5
   81f54:	028b03b5 	.word	0x028b03b5
   81f58:	03b502d3 	.word	0x03b502d3
   81f5c:	03b502d3 	.word	0x03b502d3
   81f60:	03b503b5 	.word	0x03b503b5
   81f64:	031b03b5 	.word	0x031b03b5
   81f68:	03b503b5 	.word	0x03b503b5
   81f6c:	03b50320 	.word	0x03b50320
   81f70:	03b503b5 	.word	0x03b503b5
   81f74:	03b503b5 	.word	0x03b503b5
   81f78:	03b50234 	.word	0x03b50234
   81f7c:	024b03b5 	.word	0x024b03b5
   81f80:	03b503b5 	.word	0x03b503b5
   81f84:	03b503b5 	.word	0x03b503b5
   81f88:	03b503b5 	.word	0x03b503b5
   81f8c:	03b503b5 	.word	0x03b503b5
   81f90:	03b503b5 	.word	0x03b503b5
   81f94:	039e0276 	.word	0x039e0276
   81f98:	02d302d3 	.word	0x02d302d3
   81f9c:	036302d3 	.word	0x036302d3
   81fa0:	03b5039e 	.word	0x03b5039e
   81fa4:	036803b5 	.word	0x036803b5
   81fa8:	037503b5 	.word	0x037503b5
   81fac:	038c01dd 	.word	0x038c01dd
   81fb0:	03b5035e 	.word	0x03b5035e
   81fb4:	03b501f2 	.word	0x03b501f2
   81fb8:	03b50087 	.word	0x03b50087
   81fbc:	033203b5 	.word	0x033203b5
   81fc0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81fc2:	6823      	ldr	r3, [r4, #0]
   81fc4:	4618      	mov	r0, r3
   81fc6:	930d      	str	r3, [sp, #52]	; 0x34
   81fc8:	4623      	mov	r3, r4
   81fca:	2800      	cmp	r0, #0
   81fcc:	f103 0304 	add.w	r3, r3, #4
   81fd0:	930f      	str	r3, [sp, #60]	; 0x3c
   81fd2:	da04      	bge.n	81fde <_svfprintf_r+0x196>
   81fd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81fd6:	425b      	negs	r3, r3
   81fd8:	930d      	str	r3, [sp, #52]	; 0x34
   81fda:	f04b 0b04 	orr.w	fp, fp, #4
   81fde:	f89a 3000 	ldrb.w	r3, [sl]
   81fe2:	e78b      	b.n	81efc <_svfprintf_r+0xb4>
   81fe4:	aa25      	add	r2, sp, #148	; 0x94
   81fe6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81fe8:	980c      	ldr	r0, [sp, #48]	; 0x30
   81fea:	f003 f831 	bl	85050 <__ssprint_r>
   81fee:	b940      	cbnz	r0, 82002 <_svfprintf_r+0x1ba>
   81ff0:	46c8      	mov	r8, r9
   81ff2:	e76f      	b.n	81ed4 <_svfprintf_r+0x8c>
   81ff4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ff6:	b123      	cbz	r3, 82002 <_svfprintf_r+0x1ba>
   81ff8:	980c      	ldr	r0, [sp, #48]	; 0x30
   81ffa:	aa25      	add	r2, sp, #148	; 0x94
   81ffc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81ffe:	f003 f827 	bl	85050 <__ssprint_r>
   82002:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82004:	899b      	ldrh	r3, [r3, #12]
   82006:	f013 0f40 	tst.w	r3, #64	; 0x40
   8200a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8200c:	bf18      	it	ne
   8200e:	f04f 33ff 	movne.w	r3, #4294967295
   82012:	9309      	str	r3, [sp, #36]	; 0x24
   82014:	9809      	ldr	r0, [sp, #36]	; 0x24
   82016:	b043      	add	sp, #268	; 0x10c
   82018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8201c:	f01b 0f20 	tst.w	fp, #32
   82020:	9311      	str	r3, [sp, #68]	; 0x44
   82022:	f040 81af 	bne.w	82384 <_svfprintf_r+0x53c>
   82026:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82028:	f01b 0f10 	tst.w	fp, #16
   8202c:	4613      	mov	r3, r2
   8202e:	f040 859a 	bne.w	82b66 <_svfprintf_r+0xd1e>
   82032:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82036:	f000 8596 	beq.w	82b66 <_svfprintf_r+0xd1e>
   8203a:	2500      	movs	r5, #0
   8203c:	2301      	movs	r3, #1
   8203e:	8814      	ldrh	r4, [r2, #0]
   82040:	3204      	adds	r2, #4
   82042:	920f      	str	r2, [sp, #60]	; 0x3c
   82044:	2200      	movs	r2, #0
   82046:	4617      	mov	r7, r2
   82048:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   8204c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8204e:	1c4a      	adds	r2, r1, #1
   82050:	f000 8210 	beq.w	82474 <_svfprintf_r+0x62c>
   82054:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   82058:	9207      	str	r2, [sp, #28]
   8205a:	ea54 0205 	orrs.w	r2, r4, r5
   8205e:	f040 820f 	bne.w	82480 <_svfprintf_r+0x638>
   82062:	2900      	cmp	r1, #0
   82064:	f040 8431 	bne.w	828ca <_svfprintf_r+0xa82>
   82068:	2b00      	cmp	r3, #0
   8206a:	f040 8539 	bne.w	82ae0 <_svfprintf_r+0xc98>
   8206e:	f01b 0301 	ands.w	r3, fp, #1
   82072:	930e      	str	r3, [sp, #56]	; 0x38
   82074:	f000 8662 	beq.w	82d3c <_svfprintf_r+0xef4>
   82078:	2330      	movs	r3, #48	; 0x30
   8207a:	ae42      	add	r6, sp, #264	; 0x108
   8207c:	f806 3d41 	strb.w	r3, [r6, #-65]!
   82080:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82082:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82084:	4293      	cmp	r3, r2
   82086:	bfb8      	it	lt
   82088:	4613      	movlt	r3, r2
   8208a:	9308      	str	r3, [sp, #32]
   8208c:	2300      	movs	r3, #0
   8208e:	9312      	str	r3, [sp, #72]	; 0x48
   82090:	b117      	cbz	r7, 82098 <_svfprintf_r+0x250>
   82092:	9b08      	ldr	r3, [sp, #32]
   82094:	3301      	adds	r3, #1
   82096:	9308      	str	r3, [sp, #32]
   82098:	9b07      	ldr	r3, [sp, #28]
   8209a:	f013 0302 	ands.w	r3, r3, #2
   8209e:	9310      	str	r3, [sp, #64]	; 0x40
   820a0:	d002      	beq.n	820a8 <_svfprintf_r+0x260>
   820a2:	9b08      	ldr	r3, [sp, #32]
   820a4:	3302      	adds	r3, #2
   820a6:	9308      	str	r3, [sp, #32]
   820a8:	9b07      	ldr	r3, [sp, #28]
   820aa:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   820ae:	f040 8310 	bne.w	826d2 <_svfprintf_r+0x88a>
   820b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   820b4:	9a08      	ldr	r2, [sp, #32]
   820b6:	eba3 0b02 	sub.w	fp, r3, r2
   820ba:	f1bb 0f00 	cmp.w	fp, #0
   820be:	f340 8308 	ble.w	826d2 <_svfprintf_r+0x88a>
   820c2:	f1bb 0f10 	cmp.w	fp, #16
   820c6:	f340 87b2 	ble.w	8302e <_svfprintf_r+0x11e6>
   820ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   820cc:	4643      	mov	r3, r8
   820ce:	4621      	mov	r1, r4
   820d0:	46a8      	mov	r8, r5
   820d2:	2710      	movs	r7, #16
   820d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   820d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   820d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   820da:	e006      	b.n	820ea <_svfprintf_r+0x2a2>
   820dc:	f1ab 0b10 	sub.w	fp, fp, #16
   820e0:	f1bb 0f10 	cmp.w	fp, #16
   820e4:	f103 0308 	add.w	r3, r3, #8
   820e8:	dd18      	ble.n	8211c <_svfprintf_r+0x2d4>
   820ea:	3201      	adds	r2, #1
   820ec:	48ab      	ldr	r0, [pc, #684]	; (8239c <_svfprintf_r+0x554>)
   820ee:	3110      	adds	r1, #16
   820f0:	2a07      	cmp	r2, #7
   820f2:	9127      	str	r1, [sp, #156]	; 0x9c
   820f4:	9226      	str	r2, [sp, #152]	; 0x98
   820f6:	e883 0081 	stmia.w	r3, {r0, r7}
   820fa:	ddef      	ble.n	820dc <_svfprintf_r+0x294>
   820fc:	aa25      	add	r2, sp, #148	; 0x94
   820fe:	4629      	mov	r1, r5
   82100:	4620      	mov	r0, r4
   82102:	f002 ffa5 	bl	85050 <__ssprint_r>
   82106:	2800      	cmp	r0, #0
   82108:	f47f af7b 	bne.w	82002 <_svfprintf_r+0x1ba>
   8210c:	f1ab 0b10 	sub.w	fp, fp, #16
   82110:	f1bb 0f10 	cmp.w	fp, #16
   82114:	464b      	mov	r3, r9
   82116:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82118:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8211a:	dce6      	bgt.n	820ea <_svfprintf_r+0x2a2>
   8211c:	4645      	mov	r5, r8
   8211e:	460c      	mov	r4, r1
   82120:	4698      	mov	r8, r3
   82122:	3201      	adds	r2, #1
   82124:	4b9d      	ldr	r3, [pc, #628]	; (8239c <_svfprintf_r+0x554>)
   82126:	445c      	add	r4, fp
   82128:	2a07      	cmp	r2, #7
   8212a:	9427      	str	r4, [sp, #156]	; 0x9c
   8212c:	9226      	str	r2, [sp, #152]	; 0x98
   8212e:	e888 0808 	stmia.w	r8, {r3, fp}
   82132:	f300 82c3 	bgt.w	826bc <_svfprintf_r+0x874>
   82136:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8213a:	f108 0808 	add.w	r8, r8, #8
   8213e:	b187      	cbz	r7, 82162 <_svfprintf_r+0x31a>
   82140:	2101      	movs	r1, #1
   82142:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82144:	440c      	add	r4, r1
   82146:	440b      	add	r3, r1
   82148:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   8214c:	2b07      	cmp	r3, #7
   8214e:	9427      	str	r4, [sp, #156]	; 0x9c
   82150:	9326      	str	r3, [sp, #152]	; 0x98
   82152:	f8c8 1004 	str.w	r1, [r8, #4]
   82156:	f8c8 2000 	str.w	r2, [r8]
   8215a:	f300 83cd 	bgt.w	828f8 <_svfprintf_r+0xab0>
   8215e:	f108 0808 	add.w	r8, r8, #8
   82162:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82164:	b17b      	cbz	r3, 82186 <_svfprintf_r+0x33e>
   82166:	2102      	movs	r1, #2
   82168:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8216a:	440c      	add	r4, r1
   8216c:	3301      	adds	r3, #1
   8216e:	aa1e      	add	r2, sp, #120	; 0x78
   82170:	2b07      	cmp	r3, #7
   82172:	9427      	str	r4, [sp, #156]	; 0x9c
   82174:	9326      	str	r3, [sp, #152]	; 0x98
   82176:	f8c8 1004 	str.w	r1, [r8, #4]
   8217a:	f8c8 2000 	str.w	r2, [r8]
   8217e:	f300 8411 	bgt.w	829a4 <_svfprintf_r+0xb5c>
   82182:	f108 0808 	add.w	r8, r8, #8
   82186:	2d80      	cmp	r5, #128	; 0x80
   82188:	f000 8304 	beq.w	82794 <_svfprintf_r+0x94c>
   8218c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8218e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82190:	1a9f      	subs	r7, r3, r2
   82192:	2f00      	cmp	r7, #0
   82194:	dd37      	ble.n	82206 <_svfprintf_r+0x3be>
   82196:	2f10      	cmp	r7, #16
   82198:	f340 8679 	ble.w	82e8e <_svfprintf_r+0x1046>
   8219c:	4d80      	ldr	r5, [pc, #512]	; (823a0 <_svfprintf_r+0x558>)
   8219e:	4642      	mov	r2, r8
   821a0:	4621      	mov	r1, r4
   821a2:	46b0      	mov	r8, r6
   821a4:	f04f 0b10 	mov.w	fp, #16
   821a8:	462e      	mov	r6, r5
   821aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   821ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   821b0:	e004      	b.n	821bc <_svfprintf_r+0x374>
   821b2:	3f10      	subs	r7, #16
   821b4:	2f10      	cmp	r7, #16
   821b6:	f102 0208 	add.w	r2, r2, #8
   821ba:	dd15      	ble.n	821e8 <_svfprintf_r+0x3a0>
   821bc:	3301      	adds	r3, #1
   821be:	3110      	adds	r1, #16
   821c0:	2b07      	cmp	r3, #7
   821c2:	9127      	str	r1, [sp, #156]	; 0x9c
   821c4:	9326      	str	r3, [sp, #152]	; 0x98
   821c6:	e882 0840 	stmia.w	r2, {r6, fp}
   821ca:	ddf2      	ble.n	821b2 <_svfprintf_r+0x36a>
   821cc:	aa25      	add	r2, sp, #148	; 0x94
   821ce:	4629      	mov	r1, r5
   821d0:	4620      	mov	r0, r4
   821d2:	f002 ff3d 	bl	85050 <__ssprint_r>
   821d6:	2800      	cmp	r0, #0
   821d8:	f47f af13 	bne.w	82002 <_svfprintf_r+0x1ba>
   821dc:	3f10      	subs	r7, #16
   821de:	2f10      	cmp	r7, #16
   821e0:	464a      	mov	r2, r9
   821e2:	9927      	ldr	r1, [sp, #156]	; 0x9c
   821e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821e6:	dce9      	bgt.n	821bc <_svfprintf_r+0x374>
   821e8:	4635      	mov	r5, r6
   821ea:	460c      	mov	r4, r1
   821ec:	4646      	mov	r6, r8
   821ee:	4690      	mov	r8, r2
   821f0:	3301      	adds	r3, #1
   821f2:	443c      	add	r4, r7
   821f4:	2b07      	cmp	r3, #7
   821f6:	9427      	str	r4, [sp, #156]	; 0x9c
   821f8:	9326      	str	r3, [sp, #152]	; 0x98
   821fa:	e888 00a0 	stmia.w	r8, {r5, r7}
   821fe:	f300 8370 	bgt.w	828e2 <_svfprintf_r+0xa9a>
   82202:	f108 0808 	add.w	r8, r8, #8
   82206:	9b07      	ldr	r3, [sp, #28]
   82208:	05df      	lsls	r7, r3, #23
   8220a:	f100 8264 	bmi.w	826d6 <_svfprintf_r+0x88e>
   8220e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82210:	990e      	ldr	r1, [sp, #56]	; 0x38
   82212:	3301      	adds	r3, #1
   82214:	440c      	add	r4, r1
   82216:	2b07      	cmp	r3, #7
   82218:	9427      	str	r4, [sp, #156]	; 0x9c
   8221a:	f8c8 6000 	str.w	r6, [r8]
   8221e:	f8c8 1004 	str.w	r1, [r8, #4]
   82222:	9326      	str	r3, [sp, #152]	; 0x98
   82224:	f300 83b3 	bgt.w	8298e <_svfprintf_r+0xb46>
   82228:	f108 0808 	add.w	r8, r8, #8
   8222c:	9b07      	ldr	r3, [sp, #28]
   8222e:	075b      	lsls	r3, r3, #29
   82230:	d53b      	bpl.n	822aa <_svfprintf_r+0x462>
   82232:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82234:	9a08      	ldr	r2, [sp, #32]
   82236:	1a9d      	subs	r5, r3, r2
   82238:	2d00      	cmp	r5, #0
   8223a:	dd36      	ble.n	822aa <_svfprintf_r+0x462>
   8223c:	2d10      	cmp	r5, #16
   8223e:	f340 8721 	ble.w	83084 <_svfprintf_r+0x123c>
   82242:	2610      	movs	r6, #16
   82244:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82246:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82248:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   8224c:	e004      	b.n	82258 <_svfprintf_r+0x410>
   8224e:	3d10      	subs	r5, #16
   82250:	2d10      	cmp	r5, #16
   82252:	f108 0808 	add.w	r8, r8, #8
   82256:	dd16      	ble.n	82286 <_svfprintf_r+0x43e>
   82258:	3301      	adds	r3, #1
   8225a:	4a50      	ldr	r2, [pc, #320]	; (8239c <_svfprintf_r+0x554>)
   8225c:	3410      	adds	r4, #16
   8225e:	2b07      	cmp	r3, #7
   82260:	9427      	str	r4, [sp, #156]	; 0x9c
   82262:	9326      	str	r3, [sp, #152]	; 0x98
   82264:	e888 0044 	stmia.w	r8, {r2, r6}
   82268:	ddf1      	ble.n	8224e <_svfprintf_r+0x406>
   8226a:	aa25      	add	r2, sp, #148	; 0x94
   8226c:	4659      	mov	r1, fp
   8226e:	4638      	mov	r0, r7
   82270:	f002 feee 	bl	85050 <__ssprint_r>
   82274:	2800      	cmp	r0, #0
   82276:	f47f aec4 	bne.w	82002 <_svfprintf_r+0x1ba>
   8227a:	3d10      	subs	r5, #16
   8227c:	2d10      	cmp	r5, #16
   8227e:	46c8      	mov	r8, r9
   82280:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82282:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82284:	dce8      	bgt.n	82258 <_svfprintf_r+0x410>
   82286:	3301      	adds	r3, #1
   82288:	4a44      	ldr	r2, [pc, #272]	; (8239c <_svfprintf_r+0x554>)
   8228a:	442c      	add	r4, r5
   8228c:	2b07      	cmp	r3, #7
   8228e:	9427      	str	r4, [sp, #156]	; 0x9c
   82290:	9326      	str	r3, [sp, #152]	; 0x98
   82292:	e888 0024 	stmia.w	r8, {r2, r5}
   82296:	dd08      	ble.n	822aa <_svfprintf_r+0x462>
   82298:	aa25      	add	r2, sp, #148	; 0x94
   8229a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8229c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8229e:	f002 fed7 	bl	85050 <__ssprint_r>
   822a2:	2800      	cmp	r0, #0
   822a4:	f47f aead 	bne.w	82002 <_svfprintf_r+0x1ba>
   822a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   822aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   822ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   822ae:	9908      	ldr	r1, [sp, #32]
   822b0:	428a      	cmp	r2, r1
   822b2:	bfac      	ite	ge
   822b4:	189b      	addge	r3, r3, r2
   822b6:	185b      	addlt	r3, r3, r1
   822b8:	9309      	str	r3, [sp, #36]	; 0x24
   822ba:	2c00      	cmp	r4, #0
   822bc:	f040 82fb 	bne.w	828b6 <_svfprintf_r+0xa6e>
   822c0:	2300      	movs	r3, #0
   822c2:	46c8      	mov	r8, r9
   822c4:	9326      	str	r3, [sp, #152]	; 0x98
   822c6:	e5e6      	b.n	81e96 <_svfprintf_r+0x4e>
   822c8:	9311      	str	r3, [sp, #68]	; 0x44
   822ca:	f01b 0320 	ands.w	r3, fp, #32
   822ce:	f040 8145 	bne.w	8255c <_svfprintf_r+0x714>
   822d2:	f01b 0210 	ands.w	r2, fp, #16
   822d6:	f040 8466 	bne.w	82ba6 <_svfprintf_r+0xd5e>
   822da:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   822de:	f000 8462 	beq.w	82ba6 <_svfprintf_r+0xd5e>
   822e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
   822e4:	4613      	mov	r3, r2
   822e6:	460a      	mov	r2, r1
   822e8:	3204      	adds	r2, #4
   822ea:	880c      	ldrh	r4, [r1, #0]
   822ec:	2500      	movs	r5, #0
   822ee:	920f      	str	r2, [sp, #60]	; 0x3c
   822f0:	e6a8      	b.n	82044 <_svfprintf_r+0x1fc>
   822f2:	2500      	movs	r5, #0
   822f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   822f6:	9311      	str	r3, [sp, #68]	; 0x44
   822f8:	6816      	ldr	r6, [r2, #0]
   822fa:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   822fe:	1d14      	adds	r4, r2, #4
   82300:	2e00      	cmp	r6, #0
   82302:	f000 86cd 	beq.w	830a0 <_svfprintf_r+0x1258>
   82306:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82308:	1c53      	adds	r3, r2, #1
   8230a:	f000 861b 	beq.w	82f44 <_svfprintf_r+0x10fc>
   8230e:	4629      	mov	r1, r5
   82310:	4630      	mov	r0, r6
   82312:	f002 fac7 	bl	848a4 <memchr>
   82316:	2800      	cmp	r0, #0
   82318:	f000 870d 	beq.w	83136 <_svfprintf_r+0x12ee>
   8231c:	1b83      	subs	r3, r0, r6
   8231e:	950a      	str	r5, [sp, #40]	; 0x28
   82320:	930e      	str	r3, [sp, #56]	; 0x38
   82322:	940f      	str	r4, [sp, #60]	; 0x3c
   82324:	f8cd b01c 	str.w	fp, [sp, #28]
   82328:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8232c:	9308      	str	r3, [sp, #32]
   8232e:	9512      	str	r5, [sp, #72]	; 0x48
   82330:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82334:	e6ac      	b.n	82090 <_svfprintf_r+0x248>
   82336:	f89a 3000 	ldrb.w	r3, [sl]
   8233a:	f10a 0401 	add.w	r4, sl, #1
   8233e:	2b2a      	cmp	r3, #42	; 0x2a
   82340:	f000 87c2 	beq.w	832c8 <_svfprintf_r+0x1480>
   82344:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82348:	2809      	cmp	r0, #9
   8234a:	46a2      	mov	sl, r4
   8234c:	f200 8718 	bhi.w	83180 <_svfprintf_r+0x1338>
   82350:	2300      	movs	r3, #0
   82352:	461c      	mov	r4, r3
   82354:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82358:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8235c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82360:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82364:	2809      	cmp	r0, #9
   82366:	d9f5      	bls.n	82354 <_svfprintf_r+0x50c>
   82368:	940a      	str	r4, [sp, #40]	; 0x28
   8236a:	e5c9      	b.n	81f00 <_svfprintf_r+0xb8>
   8236c:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   82370:	f89a 3000 	ldrb.w	r3, [sl]
   82374:	e5c2      	b.n	81efc <_svfprintf_r+0xb4>
   82376:	f04b 0b10 	orr.w	fp, fp, #16
   8237a:	f01b 0f20 	tst.w	fp, #32
   8237e:	9311      	str	r3, [sp, #68]	; 0x44
   82380:	f43f ae51 	beq.w	82026 <_svfprintf_r+0x1de>
   82384:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82386:	3407      	adds	r4, #7
   82388:	f024 0307 	bic.w	r3, r4, #7
   8238c:	f103 0208 	add.w	r2, r3, #8
   82390:	e9d3 4500 	ldrd	r4, r5, [r3]
   82394:	920f      	str	r2, [sp, #60]	; 0x3c
   82396:	2301      	movs	r3, #1
   82398:	e654      	b.n	82044 <_svfprintf_r+0x1fc>
   8239a:	bf00      	nop
   8239c:	000867b4 	.word	0x000867b4
   823a0:	000867c4 	.word	0x000867c4
   823a4:	9311      	str	r3, [sp, #68]	; 0x44
   823a6:	2a00      	cmp	r2, #0
   823a8:	f040 87ad 	bne.w	83306 <_svfprintf_r+0x14be>
   823ac:	4bbe      	ldr	r3, [pc, #760]	; (826a8 <_svfprintf_r+0x860>)
   823ae:	f01b 0f20 	tst.w	fp, #32
   823b2:	9318      	str	r3, [sp, #96]	; 0x60
   823b4:	f040 80e7 	bne.w	82586 <_svfprintf_r+0x73e>
   823b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   823ba:	f01b 0f10 	tst.w	fp, #16
   823be:	4613      	mov	r3, r2
   823c0:	f040 83d8 	bne.w	82b74 <_svfprintf_r+0xd2c>
   823c4:	f01b 0f40 	tst.w	fp, #64	; 0x40
   823c8:	f000 83d4 	beq.w	82b74 <_svfprintf_r+0xd2c>
   823cc:	2500      	movs	r5, #0
   823ce:	3304      	adds	r3, #4
   823d0:	8814      	ldrh	r4, [r2, #0]
   823d2:	930f      	str	r3, [sp, #60]	; 0x3c
   823d4:	f01b 0f01 	tst.w	fp, #1
   823d8:	f000 80e3 	beq.w	825a2 <_svfprintf_r+0x75a>
   823dc:	ea54 0305 	orrs.w	r3, r4, r5
   823e0:	f000 80df 	beq.w	825a2 <_svfprintf_r+0x75a>
   823e4:	2330      	movs	r3, #48	; 0x30
   823e6:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   823ea:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   823ee:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   823f2:	f04b 0b02 	orr.w	fp, fp, #2
   823f6:	2302      	movs	r3, #2
   823f8:	e624      	b.n	82044 <_svfprintf_r+0x1fc>
   823fa:	2201      	movs	r2, #1
   823fc:	9311      	str	r3, [sp, #68]	; 0x44
   823fe:	2300      	movs	r3, #0
   82400:	4611      	mov	r1, r2
   82402:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82404:	9208      	str	r2, [sp, #32]
   82406:	6802      	ldr	r2, [r0, #0]
   82408:	461f      	mov	r7, r3
   8240a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8240e:	930a      	str	r3, [sp, #40]	; 0x28
   82410:	9312      	str	r3, [sp, #72]	; 0x48
   82412:	1d03      	adds	r3, r0, #4
   82414:	f8cd b01c 	str.w	fp, [sp, #28]
   82418:	910e      	str	r1, [sp, #56]	; 0x38
   8241a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   8241e:	930f      	str	r3, [sp, #60]	; 0x3c
   82420:	ae28      	add	r6, sp, #160	; 0xa0
   82422:	e639      	b.n	82098 <_svfprintf_r+0x250>
   82424:	9311      	str	r3, [sp, #68]	; 0x44
   82426:	2a00      	cmp	r2, #0
   82428:	f040 8784 	bne.w	83334 <_svfprintf_r+0x14ec>
   8242c:	f04b 0b10 	orr.w	fp, fp, #16
   82430:	f01b 0f20 	tst.w	fp, #32
   82434:	f040 8475 	bne.w	82d22 <_svfprintf_r+0xeda>
   82438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8243a:	f01b 0f10 	tst.w	fp, #16
   8243e:	4613      	mov	r3, r2
   82440:	f040 839d 	bne.w	82b7e <_svfprintf_r+0xd36>
   82444:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82448:	f000 8399 	beq.w	82b7e <_svfprintf_r+0xd36>
   8244c:	f9b2 4000 	ldrsh.w	r4, [r2]
   82450:	3304      	adds	r3, #4
   82452:	17e5      	asrs	r5, r4, #31
   82454:	930f      	str	r3, [sp, #60]	; 0x3c
   82456:	4622      	mov	r2, r4
   82458:	462b      	mov	r3, r5
   8245a:	2a00      	cmp	r2, #0
   8245c:	f173 0300 	sbcs.w	r3, r3, #0
   82460:	f2c0 8398 	blt.w	82b94 <_svfprintf_r+0xd4c>
   82464:	990a      	ldr	r1, [sp, #40]	; 0x28
   82466:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8246a:	1c4a      	adds	r2, r1, #1
   8246c:	f04f 0301 	mov.w	r3, #1
   82470:	f47f adf0 	bne.w	82054 <_svfprintf_r+0x20c>
   82474:	ea54 0205 	orrs.w	r2, r4, r5
   82478:	f000 8229 	beq.w	828ce <_svfprintf_r+0xa86>
   8247c:	f8cd b01c 	str.w	fp, [sp, #28]
   82480:	2b01      	cmp	r3, #1
   82482:	f000 830e 	beq.w	82aa2 <_svfprintf_r+0xc5a>
   82486:	2b02      	cmp	r3, #2
   82488:	f040 829c 	bne.w	829c4 <_svfprintf_r+0xb7c>
   8248c:	464e      	mov	r6, r9
   8248e:	9818      	ldr	r0, [sp, #96]	; 0x60
   82490:	0923      	lsrs	r3, r4, #4
   82492:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   82496:	0929      	lsrs	r1, r5, #4
   82498:	f004 020f 	and.w	r2, r4, #15
   8249c:	460d      	mov	r5, r1
   8249e:	461c      	mov	r4, r3
   824a0:	5c83      	ldrb	r3, [r0, r2]
   824a2:	f806 3d01 	strb.w	r3, [r6, #-1]!
   824a6:	ea54 0305 	orrs.w	r3, r4, r5
   824aa:	d1f1      	bne.n	82490 <_svfprintf_r+0x648>
   824ac:	eba9 0306 	sub.w	r3, r9, r6
   824b0:	930e      	str	r3, [sp, #56]	; 0x38
   824b2:	e5e5      	b.n	82080 <_svfprintf_r+0x238>
   824b4:	9311      	str	r3, [sp, #68]	; 0x44
   824b6:	2a00      	cmp	r2, #0
   824b8:	f040 8738 	bne.w	8332c <_svfprintf_r+0x14e4>
   824bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   824be:	f01b 0f08 	tst.w	fp, #8
   824c2:	f104 0407 	add.w	r4, r4, #7
   824c6:	f000 84cf 	beq.w	82e68 <_svfprintf_r+0x1020>
   824ca:	f024 0307 	bic.w	r3, r4, #7
   824ce:	f103 0208 	add.w	r2, r3, #8
   824d2:	920f      	str	r2, [sp, #60]	; 0x3c
   824d4:	681a      	ldr	r2, [r3, #0]
   824d6:	685b      	ldr	r3, [r3, #4]
   824d8:	9215      	str	r2, [sp, #84]	; 0x54
   824da:	9314      	str	r3, [sp, #80]	; 0x50
   824dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   824de:	9d15      	ldr	r5, [sp, #84]	; 0x54
   824e0:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   824e4:	4628      	mov	r0, r5
   824e6:	4621      	mov	r1, r4
   824e8:	f04f 32ff 	mov.w	r2, #4294967295
   824ec:	4b6f      	ldr	r3, [pc, #444]	; (826ac <_svfprintf_r+0x864>)
   824ee:	f003 fe6d 	bl	861cc <__aeabi_dcmpun>
   824f2:	2800      	cmp	r0, #0
   824f4:	f040 8434 	bne.w	82d60 <_svfprintf_r+0xf18>
   824f8:	4628      	mov	r0, r5
   824fa:	4621      	mov	r1, r4
   824fc:	f04f 32ff 	mov.w	r2, #4294967295
   82500:	4b6a      	ldr	r3, [pc, #424]	; (826ac <_svfprintf_r+0x864>)
   82502:	f003 fe45 	bl	86190 <__aeabi_dcmple>
   82506:	2800      	cmp	r0, #0
   82508:	f040 842a 	bne.w	82d60 <_svfprintf_r+0xf18>
   8250c:	a815      	add	r0, sp, #84	; 0x54
   8250e:	c80d      	ldmia	r0, {r0, r2, r3}
   82510:	9914      	ldr	r1, [sp, #80]	; 0x50
   82512:	f003 fe33 	bl	8617c <__aeabi_dcmplt>
   82516:	2800      	cmp	r0, #0
   82518:	f040 85d4 	bne.w	830c4 <_svfprintf_r+0x127c>
   8251c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82520:	2303      	movs	r3, #3
   82522:	461a      	mov	r2, r3
   82524:	9308      	str	r3, [sp, #32]
   82526:	2300      	movs	r3, #0
   82528:	4e61      	ldr	r6, [pc, #388]	; (826b0 <_svfprintf_r+0x868>)
   8252a:	4619      	mov	r1, r3
   8252c:	930a      	str	r3, [sp, #40]	; 0x28
   8252e:	4b61      	ldr	r3, [pc, #388]	; (826b4 <_svfprintf_r+0x86c>)
   82530:	920e      	str	r2, [sp, #56]	; 0x38
   82532:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82534:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   82538:	9007      	str	r0, [sp, #28]
   8253a:	9112      	str	r1, [sp, #72]	; 0x48
   8253c:	2a47      	cmp	r2, #71	; 0x47
   8253e:	bfd8      	it	le
   82540:	461e      	movle	r6, r3
   82542:	e5a5      	b.n	82090 <_svfprintf_r+0x248>
   82544:	f04b 0b08 	orr.w	fp, fp, #8
   82548:	f89a 3000 	ldrb.w	r3, [sl]
   8254c:	e4d6      	b.n	81efc <_svfprintf_r+0xb4>
   8254e:	f04b 0b10 	orr.w	fp, fp, #16
   82552:	9311      	str	r3, [sp, #68]	; 0x44
   82554:	f01b 0320 	ands.w	r3, fp, #32
   82558:	f43f aebb 	beq.w	822d2 <_svfprintf_r+0x48a>
   8255c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8255e:	3407      	adds	r4, #7
   82560:	f024 0307 	bic.w	r3, r4, #7
   82564:	f103 0208 	add.w	r2, r3, #8
   82568:	e9d3 4500 	ldrd	r4, r5, [r3]
   8256c:	920f      	str	r2, [sp, #60]	; 0x3c
   8256e:	2300      	movs	r3, #0
   82570:	e568      	b.n	82044 <_svfprintf_r+0x1fc>
   82572:	9311      	str	r3, [sp, #68]	; 0x44
   82574:	2a00      	cmp	r2, #0
   82576:	f040 86c2 	bne.w	832fe <_svfprintf_r+0x14b6>
   8257a:	4b4f      	ldr	r3, [pc, #316]	; (826b8 <_svfprintf_r+0x870>)
   8257c:	f01b 0f20 	tst.w	fp, #32
   82580:	9318      	str	r3, [sp, #96]	; 0x60
   82582:	f43f af19 	beq.w	823b8 <_svfprintf_r+0x570>
   82586:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82588:	f01b 0f01 	tst.w	fp, #1
   8258c:	f104 0407 	add.w	r4, r4, #7
   82590:	f024 0307 	bic.w	r3, r4, #7
   82594:	f103 0208 	add.w	r2, r3, #8
   82598:	920f      	str	r2, [sp, #60]	; 0x3c
   8259a:	e9d3 4500 	ldrd	r4, r5, [r3]
   8259e:	f47f af1d 	bne.w	823dc <_svfprintf_r+0x594>
   825a2:	2302      	movs	r3, #2
   825a4:	e54e      	b.n	82044 <_svfprintf_r+0x1fc>
   825a6:	f89a 3000 	ldrb.w	r3, [sl]
   825aa:	2900      	cmp	r1, #0
   825ac:	f47f aca6 	bne.w	81efc <_svfprintf_r+0xb4>
   825b0:	2201      	movs	r2, #1
   825b2:	2120      	movs	r1, #32
   825b4:	e4a2      	b.n	81efc <_svfprintf_r+0xb4>
   825b6:	f04b 0b01 	orr.w	fp, fp, #1
   825ba:	f89a 3000 	ldrb.w	r3, [sl]
   825be:	e49d      	b.n	81efc <_svfprintf_r+0xb4>
   825c0:	f89a 3000 	ldrb.w	r3, [sl]
   825c4:	2201      	movs	r2, #1
   825c6:	212b      	movs	r1, #43	; 0x2b
   825c8:	e498      	b.n	81efc <_svfprintf_r+0xb4>
   825ca:	f04b 0b20 	orr.w	fp, fp, #32
   825ce:	f89a 3000 	ldrb.w	r3, [sl]
   825d2:	e493      	b.n	81efc <_svfprintf_r+0xb4>
   825d4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   825d8:	f89a 3000 	ldrb.w	r3, [sl]
   825dc:	e48e      	b.n	81efc <_svfprintf_r+0xb4>
   825de:	f89a 3000 	ldrb.w	r3, [sl]
   825e2:	2b6c      	cmp	r3, #108	; 0x6c
   825e4:	bf03      	ittte	eq
   825e6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   825ea:	f04b 0b20 	orreq.w	fp, fp, #32
   825ee:	f10a 0a01 	addeq.w	sl, sl, #1
   825f2:	f04b 0b10 	orrne.w	fp, fp, #16
   825f6:	e481      	b.n	81efc <_svfprintf_r+0xb4>
   825f8:	2a00      	cmp	r2, #0
   825fa:	f040 867c 	bne.w	832f6 <_svfprintf_r+0x14ae>
   825fe:	f01b 0f20 	tst.w	fp, #32
   82602:	f040 8452 	bne.w	82eaa <_svfprintf_r+0x1062>
   82606:	f01b 0f10 	tst.w	fp, #16
   8260a:	f040 8438 	bne.w	82e7e <_svfprintf_r+0x1036>
   8260e:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82612:	f000 8434 	beq.w	82e7e <_svfprintf_r+0x1036>
   82616:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82618:	6813      	ldr	r3, [r2, #0]
   8261a:	3204      	adds	r2, #4
   8261c:	920f      	str	r2, [sp, #60]	; 0x3c
   8261e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   82622:	801a      	strh	r2, [r3, #0]
   82624:	e437      	b.n	81e96 <_svfprintf_r+0x4e>
   82626:	2378      	movs	r3, #120	; 0x78
   82628:	2230      	movs	r2, #48	; 0x30
   8262a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8262c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   82630:	9311      	str	r3, [sp, #68]	; 0x44
   82632:	1d03      	adds	r3, r0, #4
   82634:	930f      	str	r3, [sp, #60]	; 0x3c
   82636:	4b20      	ldr	r3, [pc, #128]	; (826b8 <_svfprintf_r+0x870>)
   82638:	6804      	ldr	r4, [r0, #0]
   8263a:	9318      	str	r3, [sp, #96]	; 0x60
   8263c:	f04b 0b02 	orr.w	fp, fp, #2
   82640:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   82644:	2500      	movs	r5, #0
   82646:	2302      	movs	r3, #2
   82648:	e4fc      	b.n	82044 <_svfprintf_r+0x1fc>
   8264a:	9311      	str	r3, [sp, #68]	; 0x44
   8264c:	2a00      	cmp	r2, #0
   8264e:	f43f aeef 	beq.w	82430 <_svfprintf_r+0x5e8>
   82652:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82656:	e6eb      	b.n	82430 <_svfprintf_r+0x5e8>
   82658:	2000      	movs	r0, #0
   8265a:	4604      	mov	r4, r0
   8265c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82660:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82664:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82668:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   8266c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82670:	2809      	cmp	r0, #9
   82672:	d9f5      	bls.n	82660 <_svfprintf_r+0x818>
   82674:	940d      	str	r4, [sp, #52]	; 0x34
   82676:	e443      	b.n	81f00 <_svfprintf_r+0xb8>
   82678:	9311      	str	r3, [sp, #68]	; 0x44
   8267a:	2a00      	cmp	r2, #0
   8267c:	f040 864a 	bne.w	83314 <_svfprintf_r+0x14cc>
   82680:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82682:	2a00      	cmp	r2, #0
   82684:	f43f acb6 	beq.w	81ff4 <_svfprintf_r+0x1ac>
   82688:	2300      	movs	r3, #0
   8268a:	2101      	movs	r1, #1
   8268c:	461f      	mov	r7, r3
   8268e:	9108      	str	r1, [sp, #32]
   82690:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82694:	f8cd b01c 	str.w	fp, [sp, #28]
   82698:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8269c:	930a      	str	r3, [sp, #40]	; 0x28
   8269e:	9312      	str	r3, [sp, #72]	; 0x48
   826a0:	910e      	str	r1, [sp, #56]	; 0x38
   826a2:	ae28      	add	r6, sp, #160	; 0xa0
   826a4:	e4f8      	b.n	82098 <_svfprintf_r+0x250>
   826a6:	bf00      	nop
   826a8:	00086780 	.word	0x00086780
   826ac:	7fefffff 	.word	0x7fefffff
   826b0:	00086774 	.word	0x00086774
   826b4:	00086770 	.word	0x00086770
   826b8:	00086794 	.word	0x00086794
   826bc:	aa25      	add	r2, sp, #148	; 0x94
   826be:	990b      	ldr	r1, [sp, #44]	; 0x2c
   826c0:	980c      	ldr	r0, [sp, #48]	; 0x30
   826c2:	f002 fcc5 	bl	85050 <__ssprint_r>
   826c6:	2800      	cmp	r0, #0
   826c8:	f47f ac9b 	bne.w	82002 <_svfprintf_r+0x1ba>
   826cc:	46c8      	mov	r8, r9
   826ce:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   826d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   826d4:	e533      	b.n	8213e <_svfprintf_r+0x2f6>
   826d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   826d8:	2b65      	cmp	r3, #101	; 0x65
   826da:	f340 809a 	ble.w	82812 <_svfprintf_r+0x9ca>
   826de:	a815      	add	r0, sp, #84	; 0x54
   826e0:	c80d      	ldmia	r0, {r0, r2, r3}
   826e2:	9914      	ldr	r1, [sp, #80]	; 0x50
   826e4:	f003 fd40 	bl	86168 <__aeabi_dcmpeq>
   826e8:	2800      	cmp	r0, #0
   826ea:	f000 8193 	beq.w	82a14 <_svfprintf_r+0xbcc>
   826ee:	2101      	movs	r1, #1
   826f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   826f2:	4ab5      	ldr	r2, [pc, #724]	; (829c8 <_svfprintf_r+0xb80>)
   826f4:	440b      	add	r3, r1
   826f6:	440c      	add	r4, r1
   826f8:	2b07      	cmp	r3, #7
   826fa:	9427      	str	r4, [sp, #156]	; 0x9c
   826fc:	9326      	str	r3, [sp, #152]	; 0x98
   826fe:	f8c8 1004 	str.w	r1, [r8, #4]
   82702:	f8c8 2000 	str.w	r2, [r8]
   82706:	f300 83c6 	bgt.w	82e96 <_svfprintf_r+0x104e>
   8270a:	f108 0808 	add.w	r8, r8, #8
   8270e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82710:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82712:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82714:	4293      	cmp	r3, r2
   82716:	db03      	blt.n	82720 <_svfprintf_r+0x8d8>
   82718:	9b07      	ldr	r3, [sp, #28]
   8271a:	07dd      	lsls	r5, r3, #31
   8271c:	f57f ad86 	bpl.w	8222c <_svfprintf_r+0x3e4>
   82720:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82722:	9919      	ldr	r1, [sp, #100]	; 0x64
   82724:	3301      	adds	r3, #1
   82726:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   82728:	440c      	add	r4, r1
   8272a:	2b07      	cmp	r3, #7
   8272c:	f8c8 2000 	str.w	r2, [r8]
   82730:	f8c8 1004 	str.w	r1, [r8, #4]
   82734:	9427      	str	r4, [sp, #156]	; 0x9c
   82736:	9326      	str	r3, [sp, #152]	; 0x98
   82738:	f300 83c4 	bgt.w	82ec4 <_svfprintf_r+0x107c>
   8273c:	f108 0808 	add.w	r8, r8, #8
   82740:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82742:	1e5e      	subs	r6, r3, #1
   82744:	2e00      	cmp	r6, #0
   82746:	f77f ad71 	ble.w	8222c <_svfprintf_r+0x3e4>
   8274a:	2e10      	cmp	r6, #16
   8274c:	f340 8575 	ble.w	8323a <_svfprintf_r+0x13f2>
   82750:	4622      	mov	r2, r4
   82752:	2710      	movs	r7, #16
   82754:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82756:	4d9d      	ldr	r5, [pc, #628]	; (829cc <_svfprintf_r+0xb84>)
   82758:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   8275c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8275e:	e005      	b.n	8276c <_svfprintf_r+0x924>
   82760:	f108 0808 	add.w	r8, r8, #8
   82764:	3e10      	subs	r6, #16
   82766:	2e10      	cmp	r6, #16
   82768:	f340 8225 	ble.w	82bb6 <_svfprintf_r+0xd6e>
   8276c:	3301      	adds	r3, #1
   8276e:	3210      	adds	r2, #16
   82770:	2b07      	cmp	r3, #7
   82772:	9227      	str	r2, [sp, #156]	; 0x9c
   82774:	9326      	str	r3, [sp, #152]	; 0x98
   82776:	e888 00a0 	stmia.w	r8, {r5, r7}
   8277a:	ddf1      	ble.n	82760 <_svfprintf_r+0x918>
   8277c:	aa25      	add	r2, sp, #148	; 0x94
   8277e:	4621      	mov	r1, r4
   82780:	4658      	mov	r0, fp
   82782:	f002 fc65 	bl	85050 <__ssprint_r>
   82786:	2800      	cmp	r0, #0
   82788:	f47f ac3b 	bne.w	82002 <_svfprintf_r+0x1ba>
   8278c:	46c8      	mov	r8, r9
   8278e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82790:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82792:	e7e7      	b.n	82764 <_svfprintf_r+0x91c>
   82794:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82796:	9a08      	ldr	r2, [sp, #32]
   82798:	1a9f      	subs	r7, r3, r2
   8279a:	2f00      	cmp	r7, #0
   8279c:	f77f acf6 	ble.w	8218c <_svfprintf_r+0x344>
   827a0:	2f10      	cmp	r7, #16
   827a2:	f340 84a8 	ble.w	830f6 <_svfprintf_r+0x12ae>
   827a6:	4d89      	ldr	r5, [pc, #548]	; (829cc <_svfprintf_r+0xb84>)
   827a8:	4642      	mov	r2, r8
   827aa:	4621      	mov	r1, r4
   827ac:	46b0      	mov	r8, r6
   827ae:	f04f 0b10 	mov.w	fp, #16
   827b2:	462e      	mov	r6, r5
   827b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   827b6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   827b8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   827ba:	e004      	b.n	827c6 <_svfprintf_r+0x97e>
   827bc:	3f10      	subs	r7, #16
   827be:	2f10      	cmp	r7, #16
   827c0:	f102 0208 	add.w	r2, r2, #8
   827c4:	dd15      	ble.n	827f2 <_svfprintf_r+0x9aa>
   827c6:	3301      	adds	r3, #1
   827c8:	3110      	adds	r1, #16
   827ca:	2b07      	cmp	r3, #7
   827cc:	9127      	str	r1, [sp, #156]	; 0x9c
   827ce:	9326      	str	r3, [sp, #152]	; 0x98
   827d0:	e882 0840 	stmia.w	r2, {r6, fp}
   827d4:	ddf2      	ble.n	827bc <_svfprintf_r+0x974>
   827d6:	aa25      	add	r2, sp, #148	; 0x94
   827d8:	4629      	mov	r1, r5
   827da:	4620      	mov	r0, r4
   827dc:	f002 fc38 	bl	85050 <__ssprint_r>
   827e0:	2800      	cmp	r0, #0
   827e2:	f47f ac0e 	bne.w	82002 <_svfprintf_r+0x1ba>
   827e6:	3f10      	subs	r7, #16
   827e8:	2f10      	cmp	r7, #16
   827ea:	464a      	mov	r2, r9
   827ec:	9927      	ldr	r1, [sp, #156]	; 0x9c
   827ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   827f0:	dce9      	bgt.n	827c6 <_svfprintf_r+0x97e>
   827f2:	4635      	mov	r5, r6
   827f4:	460c      	mov	r4, r1
   827f6:	4646      	mov	r6, r8
   827f8:	4690      	mov	r8, r2
   827fa:	3301      	adds	r3, #1
   827fc:	443c      	add	r4, r7
   827fe:	2b07      	cmp	r3, #7
   82800:	9427      	str	r4, [sp, #156]	; 0x9c
   82802:	9326      	str	r3, [sp, #152]	; 0x98
   82804:	e888 00a0 	stmia.w	r8, {r5, r7}
   82808:	f300 829e 	bgt.w	82d48 <_svfprintf_r+0xf00>
   8280c:	f108 0808 	add.w	r8, r8, #8
   82810:	e4bc      	b.n	8218c <_svfprintf_r+0x344>
   82812:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82814:	2b01      	cmp	r3, #1
   82816:	f340 824f 	ble.w	82cb8 <_svfprintf_r+0xe70>
   8281a:	2301      	movs	r3, #1
   8281c:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8281e:	441c      	add	r4, r3
   82820:	441f      	add	r7, r3
   82822:	2f07      	cmp	r7, #7
   82824:	9427      	str	r4, [sp, #156]	; 0x9c
   82826:	f8c8 6000 	str.w	r6, [r8]
   8282a:	9726      	str	r7, [sp, #152]	; 0x98
   8282c:	f8c8 3004 	str.w	r3, [r8, #4]
   82830:	f300 825f 	bgt.w	82cf2 <_svfprintf_r+0xeaa>
   82834:	f108 0808 	add.w	r8, r8, #8
   82838:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8283a:	3701      	adds	r7, #1
   8283c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   8283e:	4414      	add	r4, r2
   82840:	2f07      	cmp	r7, #7
   82842:	9427      	str	r4, [sp, #156]	; 0x9c
   82844:	9726      	str	r7, [sp, #152]	; 0x98
   82846:	f8c8 3000 	str.w	r3, [r8]
   8284a:	f8c8 2004 	str.w	r2, [r8, #4]
   8284e:	f300 825c 	bgt.w	82d0a <_svfprintf_r+0xec2>
   82852:	f108 0808 	add.w	r8, r8, #8
   82856:	a815      	add	r0, sp, #84	; 0x54
   82858:	c80d      	ldmia	r0, {r0, r2, r3}
   8285a:	9914      	ldr	r1, [sp, #80]	; 0x50
   8285c:	f003 fc84 	bl	86168 <__aeabi_dcmpeq>
   82860:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82862:	2800      	cmp	r0, #0
   82864:	f040 8141 	bne.w	82aea <_svfprintf_r+0xca2>
   82868:	3b01      	subs	r3, #1
   8286a:	3701      	adds	r7, #1
   8286c:	3601      	adds	r6, #1
   8286e:	441c      	add	r4, r3
   82870:	2f07      	cmp	r7, #7
   82872:	f8c8 6000 	str.w	r6, [r8]
   82876:	9726      	str	r7, [sp, #152]	; 0x98
   82878:	9427      	str	r4, [sp, #156]	; 0x9c
   8287a:	f8c8 3004 	str.w	r3, [r8, #4]
   8287e:	f300 8166 	bgt.w	82b4e <_svfprintf_r+0xd06>
   82882:	f108 0808 	add.w	r8, r8, #8
   82886:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   82888:	3701      	adds	r7, #1
   8288a:	4414      	add	r4, r2
   8288c:	ab21      	add	r3, sp, #132	; 0x84
   8288e:	2f07      	cmp	r7, #7
   82890:	9427      	str	r4, [sp, #156]	; 0x9c
   82892:	9726      	str	r7, [sp, #152]	; 0x98
   82894:	f8c8 2004 	str.w	r2, [r8, #4]
   82898:	f8c8 3000 	str.w	r3, [r8]
   8289c:	f77f acc4 	ble.w	82228 <_svfprintf_r+0x3e0>
   828a0:	aa25      	add	r2, sp, #148	; 0x94
   828a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828a4:	980c      	ldr	r0, [sp, #48]	; 0x30
   828a6:	f002 fbd3 	bl	85050 <__ssprint_r>
   828aa:	2800      	cmp	r0, #0
   828ac:	f47f aba9 	bne.w	82002 <_svfprintf_r+0x1ba>
   828b0:	46c8      	mov	r8, r9
   828b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828b4:	e4ba      	b.n	8222c <_svfprintf_r+0x3e4>
   828b6:	aa25      	add	r2, sp, #148	; 0x94
   828b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828ba:	980c      	ldr	r0, [sp, #48]	; 0x30
   828bc:	f002 fbc8 	bl	85050 <__ssprint_r>
   828c0:	2800      	cmp	r0, #0
   828c2:	f43f acfd 	beq.w	822c0 <_svfprintf_r+0x478>
   828c6:	f7ff bb9c 	b.w	82002 <_svfprintf_r+0x1ba>
   828ca:	f8dd b01c 	ldr.w	fp, [sp, #28]
   828ce:	2b01      	cmp	r3, #1
   828d0:	f000 817e 	beq.w	82bd0 <_svfprintf_r+0xd88>
   828d4:	2b02      	cmp	r3, #2
   828d6:	d171      	bne.n	829bc <_svfprintf_r+0xb74>
   828d8:	f8cd b01c 	str.w	fp, [sp, #28]
   828dc:	2400      	movs	r4, #0
   828de:	2500      	movs	r5, #0
   828e0:	e5d4      	b.n	8248c <_svfprintf_r+0x644>
   828e2:	aa25      	add	r2, sp, #148	; 0x94
   828e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828e6:	980c      	ldr	r0, [sp, #48]	; 0x30
   828e8:	f002 fbb2 	bl	85050 <__ssprint_r>
   828ec:	2800      	cmp	r0, #0
   828ee:	f47f ab88 	bne.w	82002 <_svfprintf_r+0x1ba>
   828f2:	46c8      	mov	r8, r9
   828f4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   828f6:	e486      	b.n	82206 <_svfprintf_r+0x3be>
   828f8:	aa25      	add	r2, sp, #148	; 0x94
   828fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   828fc:	980c      	ldr	r0, [sp, #48]	; 0x30
   828fe:	f002 fba7 	bl	85050 <__ssprint_r>
   82902:	2800      	cmp	r0, #0
   82904:	f47f ab7d 	bne.w	82002 <_svfprintf_r+0x1ba>
   82908:	46c8      	mov	r8, r9
   8290a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8290c:	e429      	b.n	82162 <_svfprintf_r+0x31a>
   8290e:	2001      	movs	r0, #1
   82910:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82912:	4a2d      	ldr	r2, [pc, #180]	; (829c8 <_svfprintf_r+0xb80>)
   82914:	4403      	add	r3, r0
   82916:	4404      	add	r4, r0
   82918:	2b07      	cmp	r3, #7
   8291a:	9427      	str	r4, [sp, #156]	; 0x9c
   8291c:	9326      	str	r3, [sp, #152]	; 0x98
   8291e:	f8c8 0004 	str.w	r0, [r8, #4]
   82922:	f8c8 2000 	str.w	r2, [r8]
   82926:	f340 82d8 	ble.w	82eda <_svfprintf_r+0x1092>
   8292a:	aa25      	add	r2, sp, #148	; 0x94
   8292c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8292e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82930:	f002 fb8e 	bl	85050 <__ssprint_r>
   82934:	2800      	cmp	r0, #0
   82936:	f47f ab64 	bne.w	82002 <_svfprintf_r+0x1ba>
   8293a:	46c8      	mov	r8, r9
   8293c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8293e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82940:	b929      	cbnz	r1, 8294e <_svfprintf_r+0xb06>
   82942:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82944:	b91b      	cbnz	r3, 8294e <_svfprintf_r+0xb06>
   82946:	9b07      	ldr	r3, [sp, #28]
   82948:	07d8      	lsls	r0, r3, #31
   8294a:	f57f ac6f 	bpl.w	8222c <_svfprintf_r+0x3e4>
   8294e:	9819      	ldr	r0, [sp, #100]	; 0x64
   82950:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82952:	4602      	mov	r2, r0
   82954:	3301      	adds	r3, #1
   82956:	4422      	add	r2, r4
   82958:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   8295a:	2b07      	cmp	r3, #7
   8295c:	9227      	str	r2, [sp, #156]	; 0x9c
   8295e:	f8c8 4000 	str.w	r4, [r8]
   82962:	f8c8 0004 	str.w	r0, [r8, #4]
   82966:	9326      	str	r3, [sp, #152]	; 0x98
   82968:	f300 8431 	bgt.w	831ce <_svfprintf_r+0x1386>
   8296c:	f108 0808 	add.w	r8, r8, #8
   82970:	2900      	cmp	r1, #0
   82972:	f2c0 8409 	blt.w	83188 <_svfprintf_r+0x1340>
   82976:	9913      	ldr	r1, [sp, #76]	; 0x4c
   82978:	3301      	adds	r3, #1
   8297a:	188c      	adds	r4, r1, r2
   8297c:	2b07      	cmp	r3, #7
   8297e:	9427      	str	r4, [sp, #156]	; 0x9c
   82980:	9326      	str	r3, [sp, #152]	; 0x98
   82982:	f8c8 6000 	str.w	r6, [r8]
   82986:	f8c8 1004 	str.w	r1, [r8, #4]
   8298a:	f77f ac4d 	ble.w	82228 <_svfprintf_r+0x3e0>
   8298e:	aa25      	add	r2, sp, #148	; 0x94
   82990:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82992:	980c      	ldr	r0, [sp, #48]	; 0x30
   82994:	f002 fb5c 	bl	85050 <__ssprint_r>
   82998:	2800      	cmp	r0, #0
   8299a:	f47f ab32 	bne.w	82002 <_svfprintf_r+0x1ba>
   8299e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   829a0:	46c8      	mov	r8, r9
   829a2:	e443      	b.n	8222c <_svfprintf_r+0x3e4>
   829a4:	aa25      	add	r2, sp, #148	; 0x94
   829a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   829a8:	980c      	ldr	r0, [sp, #48]	; 0x30
   829aa:	f002 fb51 	bl	85050 <__ssprint_r>
   829ae:	2800      	cmp	r0, #0
   829b0:	f47f ab27 	bne.w	82002 <_svfprintf_r+0x1ba>
   829b4:	46c8      	mov	r8, r9
   829b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   829b8:	f7ff bbe5 	b.w	82186 <_svfprintf_r+0x33e>
   829bc:	2400      	movs	r4, #0
   829be:	2500      	movs	r5, #0
   829c0:	f8cd b01c 	str.w	fp, [sp, #28]
   829c4:	4649      	mov	r1, r9
   829c6:	e004      	b.n	829d2 <_svfprintf_r+0xb8a>
   829c8:	000867b0 	.word	0x000867b0
   829cc:	000867c4 	.word	0x000867c4
   829d0:	4631      	mov	r1, r6
   829d2:	08e2      	lsrs	r2, r4, #3
   829d4:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   829d8:	08e8      	lsrs	r0, r5, #3
   829da:	f004 0307 	and.w	r3, r4, #7
   829de:	4605      	mov	r5, r0
   829e0:	4614      	mov	r4, r2
   829e2:	3330      	adds	r3, #48	; 0x30
   829e4:	ea54 0205 	orrs.w	r2, r4, r5
   829e8:	f801 3c01 	strb.w	r3, [r1, #-1]
   829ec:	f101 36ff 	add.w	r6, r1, #4294967295
   829f0:	d1ee      	bne.n	829d0 <_svfprintf_r+0xb88>
   829f2:	9a07      	ldr	r2, [sp, #28]
   829f4:	07d2      	lsls	r2, r2, #31
   829f6:	f57f ad59 	bpl.w	824ac <_svfprintf_r+0x664>
   829fa:	2b30      	cmp	r3, #48	; 0x30
   829fc:	f43f ad56 	beq.w	824ac <_svfprintf_r+0x664>
   82a00:	2330      	movs	r3, #48	; 0x30
   82a02:	3902      	subs	r1, #2
   82a04:	f806 3c01 	strb.w	r3, [r6, #-1]
   82a08:	eba9 0301 	sub.w	r3, r9, r1
   82a0c:	930e      	str	r3, [sp, #56]	; 0x38
   82a0e:	460e      	mov	r6, r1
   82a10:	f7ff bb36 	b.w	82080 <_svfprintf_r+0x238>
   82a14:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82a16:	2900      	cmp	r1, #0
   82a18:	f77f af79 	ble.w	8290e <_svfprintf_r+0xac6>
   82a1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82a1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82a20:	4293      	cmp	r3, r2
   82a22:	bfa8      	it	ge
   82a24:	4613      	movge	r3, r2
   82a26:	2b00      	cmp	r3, #0
   82a28:	461f      	mov	r7, r3
   82a2a:	dd0b      	ble.n	82a44 <_svfprintf_r+0xbfc>
   82a2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a2e:	443c      	add	r4, r7
   82a30:	3301      	adds	r3, #1
   82a32:	2b07      	cmp	r3, #7
   82a34:	9427      	str	r4, [sp, #156]	; 0x9c
   82a36:	e888 00c0 	stmia.w	r8, {r6, r7}
   82a3a:	9326      	str	r3, [sp, #152]	; 0x98
   82a3c:	f300 82fb 	bgt.w	83036 <_svfprintf_r+0x11ee>
   82a40:	f108 0808 	add.w	r8, r8, #8
   82a44:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82a46:	2f00      	cmp	r7, #0
   82a48:	bfa8      	it	ge
   82a4a:	1bdb      	subge	r3, r3, r7
   82a4c:	2b00      	cmp	r3, #0
   82a4e:	461f      	mov	r7, r3
   82a50:	f340 80d7 	ble.w	82c02 <_svfprintf_r+0xdba>
   82a54:	2b10      	cmp	r3, #16
   82a56:	f340 8434 	ble.w	832c2 <_svfprintf_r+0x147a>
   82a5a:	4dba      	ldr	r5, [pc, #744]	; (82d44 <_svfprintf_r+0xefc>)
   82a5c:	4642      	mov	r2, r8
   82a5e:	4621      	mov	r1, r4
   82a60:	46b0      	mov	r8, r6
   82a62:	f04f 0b10 	mov.w	fp, #16
   82a66:	462e      	mov	r6, r5
   82a68:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82a6c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82a6e:	e004      	b.n	82a7a <_svfprintf_r+0xc32>
   82a70:	3208      	adds	r2, #8
   82a72:	3f10      	subs	r7, #16
   82a74:	2f10      	cmp	r7, #16
   82a76:	f340 80b5 	ble.w	82be4 <_svfprintf_r+0xd9c>
   82a7a:	3301      	adds	r3, #1
   82a7c:	3110      	adds	r1, #16
   82a7e:	2b07      	cmp	r3, #7
   82a80:	9127      	str	r1, [sp, #156]	; 0x9c
   82a82:	9326      	str	r3, [sp, #152]	; 0x98
   82a84:	e882 0840 	stmia.w	r2, {r6, fp}
   82a88:	ddf2      	ble.n	82a70 <_svfprintf_r+0xc28>
   82a8a:	aa25      	add	r2, sp, #148	; 0x94
   82a8c:	4629      	mov	r1, r5
   82a8e:	4620      	mov	r0, r4
   82a90:	f002 fade 	bl	85050 <__ssprint_r>
   82a94:	2800      	cmp	r0, #0
   82a96:	f47f aab4 	bne.w	82002 <_svfprintf_r+0x1ba>
   82a9a:	464a      	mov	r2, r9
   82a9c:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82a9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82aa0:	e7e7      	b.n	82a72 <_svfprintf_r+0xc2a>
   82aa2:	2d00      	cmp	r5, #0
   82aa4:	bf08      	it	eq
   82aa6:	2c0a      	cmpeq	r4, #10
   82aa8:	f0c0 8090 	bcc.w	82bcc <_svfprintf_r+0xd84>
   82aac:	464e      	mov	r6, r9
   82aae:	4620      	mov	r0, r4
   82ab0:	4629      	mov	r1, r5
   82ab2:	220a      	movs	r2, #10
   82ab4:	2300      	movs	r3, #0
   82ab6:	f003 fbc7 	bl	86248 <__aeabi_uldivmod>
   82aba:	3230      	adds	r2, #48	; 0x30
   82abc:	f806 2d01 	strb.w	r2, [r6, #-1]!
   82ac0:	4620      	mov	r0, r4
   82ac2:	4629      	mov	r1, r5
   82ac4:	2300      	movs	r3, #0
   82ac6:	220a      	movs	r2, #10
   82ac8:	f003 fbbe 	bl	86248 <__aeabi_uldivmod>
   82acc:	4604      	mov	r4, r0
   82ace:	460d      	mov	r5, r1
   82ad0:	ea54 0305 	orrs.w	r3, r4, r5
   82ad4:	d1eb      	bne.n	82aae <_svfprintf_r+0xc66>
   82ad6:	eba9 0306 	sub.w	r3, r9, r6
   82ada:	930e      	str	r3, [sp, #56]	; 0x38
   82adc:	f7ff bad0 	b.w	82080 <_svfprintf_r+0x238>
   82ae0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ae2:	464e      	mov	r6, r9
   82ae4:	930e      	str	r3, [sp, #56]	; 0x38
   82ae6:	f7ff bacb 	b.w	82080 <_svfprintf_r+0x238>
   82aea:	1e5e      	subs	r6, r3, #1
   82aec:	2e00      	cmp	r6, #0
   82aee:	f77f aeca 	ble.w	82886 <_svfprintf_r+0xa3e>
   82af2:	2e10      	cmp	r6, #16
   82af4:	f340 83e3 	ble.w	832be <_svfprintf_r+0x1476>
   82af8:	4622      	mov	r2, r4
   82afa:	f04f 0b10 	mov.w	fp, #16
   82afe:	4d91      	ldr	r5, [pc, #580]	; (82d44 <_svfprintf_r+0xefc>)
   82b00:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82b02:	e004      	b.n	82b0e <_svfprintf_r+0xcc6>
   82b04:	3e10      	subs	r6, #16
   82b06:	2e10      	cmp	r6, #16
   82b08:	f108 0808 	add.w	r8, r8, #8
   82b0c:	dd15      	ble.n	82b3a <_svfprintf_r+0xcf2>
   82b0e:	3701      	adds	r7, #1
   82b10:	3210      	adds	r2, #16
   82b12:	2f07      	cmp	r7, #7
   82b14:	9227      	str	r2, [sp, #156]	; 0x9c
   82b16:	9726      	str	r7, [sp, #152]	; 0x98
   82b18:	e888 0820 	stmia.w	r8, {r5, fp}
   82b1c:	ddf2      	ble.n	82b04 <_svfprintf_r+0xcbc>
   82b1e:	aa25      	add	r2, sp, #148	; 0x94
   82b20:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b22:	4620      	mov	r0, r4
   82b24:	f002 fa94 	bl	85050 <__ssprint_r>
   82b28:	2800      	cmp	r0, #0
   82b2a:	f47f aa6a 	bne.w	82002 <_svfprintf_r+0x1ba>
   82b2e:	3e10      	subs	r6, #16
   82b30:	2e10      	cmp	r6, #16
   82b32:	46c8      	mov	r8, r9
   82b34:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82b36:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82b38:	dce9      	bgt.n	82b0e <_svfprintf_r+0xcc6>
   82b3a:	4614      	mov	r4, r2
   82b3c:	3701      	adds	r7, #1
   82b3e:	4434      	add	r4, r6
   82b40:	2f07      	cmp	r7, #7
   82b42:	9427      	str	r4, [sp, #156]	; 0x9c
   82b44:	9726      	str	r7, [sp, #152]	; 0x98
   82b46:	e888 0060 	stmia.w	r8, {r5, r6}
   82b4a:	f77f ae9a 	ble.w	82882 <_svfprintf_r+0xa3a>
   82b4e:	aa25      	add	r2, sp, #148	; 0x94
   82b50:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b52:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b54:	f002 fa7c 	bl	85050 <__ssprint_r>
   82b58:	2800      	cmp	r0, #0
   82b5a:	f47f aa52 	bne.w	82002 <_svfprintf_r+0x1ba>
   82b5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82b60:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82b62:	46c8      	mov	r8, r9
   82b64:	e68f      	b.n	82886 <_svfprintf_r+0xa3e>
   82b66:	3204      	adds	r2, #4
   82b68:	681c      	ldr	r4, [r3, #0]
   82b6a:	2500      	movs	r5, #0
   82b6c:	2301      	movs	r3, #1
   82b6e:	920f      	str	r2, [sp, #60]	; 0x3c
   82b70:	f7ff ba68 	b.w	82044 <_svfprintf_r+0x1fc>
   82b74:	681c      	ldr	r4, [r3, #0]
   82b76:	3304      	adds	r3, #4
   82b78:	930f      	str	r3, [sp, #60]	; 0x3c
   82b7a:	2500      	movs	r5, #0
   82b7c:	e42a      	b.n	823d4 <_svfprintf_r+0x58c>
   82b7e:	681c      	ldr	r4, [r3, #0]
   82b80:	3304      	adds	r3, #4
   82b82:	17e5      	asrs	r5, r4, #31
   82b84:	4622      	mov	r2, r4
   82b86:	930f      	str	r3, [sp, #60]	; 0x3c
   82b88:	462b      	mov	r3, r5
   82b8a:	2a00      	cmp	r2, #0
   82b8c:	f173 0300 	sbcs.w	r3, r3, #0
   82b90:	f6bf ac68 	bge.w	82464 <_svfprintf_r+0x61c>
   82b94:	272d      	movs	r7, #45	; 0x2d
   82b96:	4264      	negs	r4, r4
   82b98:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82b9c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82ba0:	2301      	movs	r3, #1
   82ba2:	f7ff ba53 	b.w	8204c <_svfprintf_r+0x204>
   82ba6:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82ba8:	2500      	movs	r5, #0
   82baa:	460a      	mov	r2, r1
   82bac:	3204      	adds	r2, #4
   82bae:	680c      	ldr	r4, [r1, #0]
   82bb0:	920f      	str	r2, [sp, #60]	; 0x3c
   82bb2:	f7ff ba47 	b.w	82044 <_svfprintf_r+0x1fc>
   82bb6:	4614      	mov	r4, r2
   82bb8:	3301      	adds	r3, #1
   82bba:	4434      	add	r4, r6
   82bbc:	2b07      	cmp	r3, #7
   82bbe:	9427      	str	r4, [sp, #156]	; 0x9c
   82bc0:	9326      	str	r3, [sp, #152]	; 0x98
   82bc2:	e888 0060 	stmia.w	r8, {r5, r6}
   82bc6:	f77f ab2f 	ble.w	82228 <_svfprintf_r+0x3e0>
   82bca:	e6e0      	b.n	8298e <_svfprintf_r+0xb46>
   82bcc:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82bd0:	2301      	movs	r3, #1
   82bd2:	ae42      	add	r6, sp, #264	; 0x108
   82bd4:	3430      	adds	r4, #48	; 0x30
   82bd6:	f8cd b01c 	str.w	fp, [sp, #28]
   82bda:	f806 4d41 	strb.w	r4, [r6, #-65]!
   82bde:	930e      	str	r3, [sp, #56]	; 0x38
   82be0:	f7ff ba4e 	b.w	82080 <_svfprintf_r+0x238>
   82be4:	4635      	mov	r5, r6
   82be6:	460c      	mov	r4, r1
   82be8:	4646      	mov	r6, r8
   82bea:	4690      	mov	r8, r2
   82bec:	3301      	adds	r3, #1
   82bee:	443c      	add	r4, r7
   82bf0:	2b07      	cmp	r3, #7
   82bf2:	9427      	str	r4, [sp, #156]	; 0x9c
   82bf4:	9326      	str	r3, [sp, #152]	; 0x98
   82bf6:	e888 00a0 	stmia.w	r8, {r5, r7}
   82bfa:	f300 8246 	bgt.w	8308a <_svfprintf_r+0x1242>
   82bfe:	f108 0808 	add.w	r8, r8, #8
   82c02:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82c04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82c06:	429a      	cmp	r2, r3
   82c08:	db45      	blt.n	82c96 <_svfprintf_r+0xe4e>
   82c0a:	9b07      	ldr	r3, [sp, #28]
   82c0c:	07d9      	lsls	r1, r3, #31
   82c0e:	d442      	bmi.n	82c96 <_svfprintf_r+0xe4e>
   82c10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82c12:	9812      	ldr	r0, [sp, #72]	; 0x48
   82c14:	1a9a      	subs	r2, r3, r2
   82c16:	1a1d      	subs	r5, r3, r0
   82c18:	4295      	cmp	r5, r2
   82c1a:	bfa8      	it	ge
   82c1c:	4615      	movge	r5, r2
   82c1e:	2d00      	cmp	r5, #0
   82c20:	dd0e      	ble.n	82c40 <_svfprintf_r+0xdf8>
   82c22:	9926      	ldr	r1, [sp, #152]	; 0x98
   82c24:	4406      	add	r6, r0
   82c26:	3101      	adds	r1, #1
   82c28:	442c      	add	r4, r5
   82c2a:	2907      	cmp	r1, #7
   82c2c:	f8c8 6000 	str.w	r6, [r8]
   82c30:	9427      	str	r4, [sp, #156]	; 0x9c
   82c32:	f8c8 5004 	str.w	r5, [r8, #4]
   82c36:	9126      	str	r1, [sp, #152]	; 0x98
   82c38:	f300 8216 	bgt.w	83068 <_svfprintf_r+0x1220>
   82c3c:	f108 0808 	add.w	r8, r8, #8
   82c40:	2d00      	cmp	r5, #0
   82c42:	bfb4      	ite	lt
   82c44:	4616      	movlt	r6, r2
   82c46:	1b56      	subge	r6, r2, r5
   82c48:	2e00      	cmp	r6, #0
   82c4a:	f77f aaef 	ble.w	8222c <_svfprintf_r+0x3e4>
   82c4e:	2e10      	cmp	r6, #16
   82c50:	f340 82f3 	ble.w	8323a <_svfprintf_r+0x13f2>
   82c54:	4622      	mov	r2, r4
   82c56:	2710      	movs	r7, #16
   82c58:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c5a:	4d3a      	ldr	r5, [pc, #232]	; (82d44 <_svfprintf_r+0xefc>)
   82c5c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82c60:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82c62:	e004      	b.n	82c6e <_svfprintf_r+0xe26>
   82c64:	f108 0808 	add.w	r8, r8, #8
   82c68:	3e10      	subs	r6, #16
   82c6a:	2e10      	cmp	r6, #16
   82c6c:	dda3      	ble.n	82bb6 <_svfprintf_r+0xd6e>
   82c6e:	3301      	adds	r3, #1
   82c70:	3210      	adds	r2, #16
   82c72:	2b07      	cmp	r3, #7
   82c74:	9227      	str	r2, [sp, #156]	; 0x9c
   82c76:	9326      	str	r3, [sp, #152]	; 0x98
   82c78:	e888 00a0 	stmia.w	r8, {r5, r7}
   82c7c:	ddf2      	ble.n	82c64 <_svfprintf_r+0xe1c>
   82c7e:	aa25      	add	r2, sp, #148	; 0x94
   82c80:	4621      	mov	r1, r4
   82c82:	4658      	mov	r0, fp
   82c84:	f002 f9e4 	bl	85050 <__ssprint_r>
   82c88:	2800      	cmp	r0, #0
   82c8a:	f47f a9ba 	bne.w	82002 <_svfprintf_r+0x1ba>
   82c8e:	46c8      	mov	r8, r9
   82c90:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c92:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c94:	e7e8      	b.n	82c68 <_svfprintf_r+0xe20>
   82c96:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c98:	9819      	ldr	r0, [sp, #100]	; 0x64
   82c9a:	3301      	adds	r3, #1
   82c9c:	991a      	ldr	r1, [sp, #104]	; 0x68
   82c9e:	4404      	add	r4, r0
   82ca0:	2b07      	cmp	r3, #7
   82ca2:	9427      	str	r4, [sp, #156]	; 0x9c
   82ca4:	f8c8 1000 	str.w	r1, [r8]
   82ca8:	f8c8 0004 	str.w	r0, [r8, #4]
   82cac:	9326      	str	r3, [sp, #152]	; 0x98
   82cae:	f300 81cf 	bgt.w	83050 <_svfprintf_r+0x1208>
   82cb2:	f108 0808 	add.w	r8, r8, #8
   82cb6:	e7ab      	b.n	82c10 <_svfprintf_r+0xdc8>
   82cb8:	9b07      	ldr	r3, [sp, #28]
   82cba:	07da      	lsls	r2, r3, #31
   82cbc:	f53f adad 	bmi.w	8281a <_svfprintf_r+0x9d2>
   82cc0:	2301      	movs	r3, #1
   82cc2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82cc4:	441c      	add	r4, r3
   82cc6:	441f      	add	r7, r3
   82cc8:	2f07      	cmp	r7, #7
   82cca:	9427      	str	r4, [sp, #156]	; 0x9c
   82ccc:	f8c8 6000 	str.w	r6, [r8]
   82cd0:	9726      	str	r7, [sp, #152]	; 0x98
   82cd2:	f8c8 3004 	str.w	r3, [r8, #4]
   82cd6:	f77f add4 	ble.w	82882 <_svfprintf_r+0xa3a>
   82cda:	aa25      	add	r2, sp, #148	; 0x94
   82cdc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82cde:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ce0:	f002 f9b6 	bl	85050 <__ssprint_r>
   82ce4:	2800      	cmp	r0, #0
   82ce6:	f47f a98c 	bne.w	82002 <_svfprintf_r+0x1ba>
   82cea:	46c8      	mov	r8, r9
   82cec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82cee:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82cf0:	e5c9      	b.n	82886 <_svfprintf_r+0xa3e>
   82cf2:	aa25      	add	r2, sp, #148	; 0x94
   82cf4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82cf6:	980c      	ldr	r0, [sp, #48]	; 0x30
   82cf8:	f002 f9aa 	bl	85050 <__ssprint_r>
   82cfc:	2800      	cmp	r0, #0
   82cfe:	f47f a980 	bne.w	82002 <_svfprintf_r+0x1ba>
   82d02:	46c8      	mov	r8, r9
   82d04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d06:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82d08:	e596      	b.n	82838 <_svfprintf_r+0x9f0>
   82d0a:	aa25      	add	r2, sp, #148	; 0x94
   82d0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d0e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d10:	f002 f99e 	bl	85050 <__ssprint_r>
   82d14:	2800      	cmp	r0, #0
   82d16:	f47f a974 	bne.w	82002 <_svfprintf_r+0x1ba>
   82d1a:	46c8      	mov	r8, r9
   82d1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d1e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82d20:	e599      	b.n	82856 <_svfprintf_r+0xa0e>
   82d22:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82d24:	3407      	adds	r4, #7
   82d26:	f024 0407 	bic.w	r4, r4, #7
   82d2a:	f104 0108 	add.w	r1, r4, #8
   82d2e:	e9d4 2300 	ldrd	r2, r3, [r4]
   82d32:	910f      	str	r1, [sp, #60]	; 0x3c
   82d34:	4614      	mov	r4, r2
   82d36:	461d      	mov	r5, r3
   82d38:	f7ff bb8f 	b.w	8245a <_svfprintf_r+0x612>
   82d3c:	464e      	mov	r6, r9
   82d3e:	f7ff b99f 	b.w	82080 <_svfprintf_r+0x238>
   82d42:	bf00      	nop
   82d44:	000867c4 	.word	0x000867c4
   82d48:	aa25      	add	r2, sp, #148	; 0x94
   82d4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d4c:	980c      	ldr	r0, [sp, #48]	; 0x30
   82d4e:	f002 f97f 	bl	85050 <__ssprint_r>
   82d52:	2800      	cmp	r0, #0
   82d54:	f47f a955 	bne.w	82002 <_svfprintf_r+0x1ba>
   82d58:	46c8      	mov	r8, r9
   82d5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82d5c:	f7ff ba16 	b.w	8218c <_svfprintf_r+0x344>
   82d60:	9c15      	ldr	r4, [sp, #84]	; 0x54
   82d62:	4622      	mov	r2, r4
   82d64:	4620      	mov	r0, r4
   82d66:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82d68:	4623      	mov	r3, r4
   82d6a:	4621      	mov	r1, r4
   82d6c:	f003 fa2e 	bl	861cc <__aeabi_dcmpun>
   82d70:	2800      	cmp	r0, #0
   82d72:	f040 8273 	bne.w	8325c <_svfprintf_r+0x1414>
   82d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d78:	3301      	adds	r3, #1
   82d7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82d7c:	f023 0320 	bic.w	r3, r3, #32
   82d80:	930e      	str	r3, [sp, #56]	; 0x38
   82d82:	f000 819c 	beq.w	830be <_svfprintf_r+0x1276>
   82d86:	2b47      	cmp	r3, #71	; 0x47
   82d88:	f000 80d6 	beq.w	82f38 <_svfprintf_r+0x10f0>
   82d8c:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   82d90:	9307      	str	r3, [sp, #28]
   82d92:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82d94:	1e1f      	subs	r7, r3, #0
   82d96:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82d98:	9308      	str	r3, [sp, #32]
   82d9a:	bfb7      	itett	lt
   82d9c:	463b      	movlt	r3, r7
   82d9e:	2300      	movge	r3, #0
   82da0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82da4:	232d      	movlt	r3, #45	; 0x2d
   82da6:	9310      	str	r3, [sp, #64]	; 0x40
   82da8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82daa:	2b66      	cmp	r3, #102	; 0x66
   82dac:	f000 8190 	beq.w	830d0 <_svfprintf_r+0x1288>
   82db0:	2b46      	cmp	r3, #70	; 0x46
   82db2:	f000 80a4 	beq.w	82efe <_svfprintf_r+0x10b6>
   82db6:	2002      	movs	r0, #2
   82db8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82dba:	a923      	add	r1, sp, #140	; 0x8c
   82dbc:	2b45      	cmp	r3, #69	; 0x45
   82dbe:	bf0a      	itet	eq
   82dc0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   82dc2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82dc4:	1c5d      	addeq	r5, r3, #1
   82dc6:	e88d 0021 	stmia.w	sp, {r0, r5}
   82dca:	9104      	str	r1, [sp, #16]
   82dcc:	a820      	add	r0, sp, #128	; 0x80
   82dce:	a91f      	add	r1, sp, #124	; 0x7c
   82dd0:	463b      	mov	r3, r7
   82dd2:	9003      	str	r0, [sp, #12]
   82dd4:	9a08      	ldr	r2, [sp, #32]
   82dd6:	9102      	str	r1, [sp, #8]
   82dd8:	980c      	ldr	r0, [sp, #48]	; 0x30
   82dda:	f000 fb59 	bl	83490 <_dtoa_r>
   82dde:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82de0:	4606      	mov	r6, r0
   82de2:	2b67      	cmp	r3, #103	; 0x67
   82de4:	f040 81ba 	bne.w	8315c <_svfprintf_r+0x1314>
   82de8:	f01b 0f01 	tst.w	fp, #1
   82dec:	f000 8223 	beq.w	83236 <_svfprintf_r+0x13ee>
   82df0:	1974      	adds	r4, r6, r5
   82df2:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82df4:	9808      	ldr	r0, [sp, #32]
   82df6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82df8:	4639      	mov	r1, r7
   82dfa:	f003 f9b5 	bl	86168 <__aeabi_dcmpeq>
   82dfe:	2800      	cmp	r0, #0
   82e00:	f040 8124 	bne.w	8304c <_svfprintf_r+0x1204>
   82e04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82e06:	42a3      	cmp	r3, r4
   82e08:	d206      	bcs.n	82e18 <_svfprintf_r+0xfd0>
   82e0a:	2130      	movs	r1, #48	; 0x30
   82e0c:	1c5a      	adds	r2, r3, #1
   82e0e:	9223      	str	r2, [sp, #140]	; 0x8c
   82e10:	7019      	strb	r1, [r3, #0]
   82e12:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82e14:	429c      	cmp	r4, r3
   82e16:	d8f9      	bhi.n	82e0c <_svfprintf_r+0xfc4>
   82e18:	1b9b      	subs	r3, r3, r6
   82e1a:	9313      	str	r3, [sp, #76]	; 0x4c
   82e1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e1e:	2b47      	cmp	r3, #71	; 0x47
   82e20:	f000 80a2 	beq.w	82f68 <_svfprintf_r+0x1120>
   82e24:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82e26:	2b65      	cmp	r3, #101	; 0x65
   82e28:	f340 81a7 	ble.w	8317a <_svfprintf_r+0x1332>
   82e2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82e2e:	2b66      	cmp	r3, #102	; 0x66
   82e30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82e32:	9312      	str	r3, [sp, #72]	; 0x48
   82e34:	f000 8171 	beq.w	8311a <_svfprintf_r+0x12d2>
   82e38:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82e3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82e3c:	4619      	mov	r1, r3
   82e3e:	4291      	cmp	r1, r2
   82e40:	f300 815d 	bgt.w	830fe <_svfprintf_r+0x12b6>
   82e44:	f01b 0f01 	tst.w	fp, #1
   82e48:	f040 81f0 	bne.w	8322c <_svfprintf_r+0x13e4>
   82e4c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82e50:	9308      	str	r3, [sp, #32]
   82e52:	2367      	movs	r3, #103	; 0x67
   82e54:	920e      	str	r2, [sp, #56]	; 0x38
   82e56:	9311      	str	r3, [sp, #68]	; 0x44
   82e58:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82e5a:	2b00      	cmp	r3, #0
   82e5c:	d17d      	bne.n	82f5a <_svfprintf_r+0x1112>
   82e5e:	930a      	str	r3, [sp, #40]	; 0x28
   82e60:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82e64:	f7ff b914 	b.w	82090 <_svfprintf_r+0x248>
   82e68:	f024 0407 	bic.w	r4, r4, #7
   82e6c:	6823      	ldr	r3, [r4, #0]
   82e6e:	9315      	str	r3, [sp, #84]	; 0x54
   82e70:	6863      	ldr	r3, [r4, #4]
   82e72:	9314      	str	r3, [sp, #80]	; 0x50
   82e74:	f104 0308 	add.w	r3, r4, #8
   82e78:	930f      	str	r3, [sp, #60]	; 0x3c
   82e7a:	f7ff bb2f 	b.w	824dc <_svfprintf_r+0x694>
   82e7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82e80:	6813      	ldr	r3, [r2, #0]
   82e82:	3204      	adds	r2, #4
   82e84:	920f      	str	r2, [sp, #60]	; 0x3c
   82e86:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82e88:	601a      	str	r2, [r3, #0]
   82e8a:	f7ff b804 	b.w	81e96 <_svfprintf_r+0x4e>
   82e8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82e90:	4daf      	ldr	r5, [pc, #700]	; (83150 <_svfprintf_r+0x1308>)
   82e92:	f7ff b9ad 	b.w	821f0 <_svfprintf_r+0x3a8>
   82e96:	aa25      	add	r2, sp, #148	; 0x94
   82e98:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e9a:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e9c:	f002 f8d8 	bl	85050 <__ssprint_r>
   82ea0:	2800      	cmp	r0, #0
   82ea2:	f47f a8ae 	bne.w	82002 <_svfprintf_r+0x1ba>
   82ea6:	46c8      	mov	r8, r9
   82ea8:	e431      	b.n	8270e <_svfprintf_r+0x8c6>
   82eaa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82eac:	4613      	mov	r3, r2
   82eae:	3304      	adds	r3, #4
   82eb0:	930f      	str	r3, [sp, #60]	; 0x3c
   82eb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82eb4:	6811      	ldr	r1, [r2, #0]
   82eb6:	17dd      	asrs	r5, r3, #31
   82eb8:	461a      	mov	r2, r3
   82eba:	462b      	mov	r3, r5
   82ebc:	e9c1 2300 	strd	r2, r3, [r1]
   82ec0:	f7fe bfe9 	b.w	81e96 <_svfprintf_r+0x4e>
   82ec4:	aa25      	add	r2, sp, #148	; 0x94
   82ec6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ec8:	980c      	ldr	r0, [sp, #48]	; 0x30
   82eca:	f002 f8c1 	bl	85050 <__ssprint_r>
   82ece:	2800      	cmp	r0, #0
   82ed0:	f47f a897 	bne.w	82002 <_svfprintf_r+0x1ba>
   82ed4:	46c8      	mov	r8, r9
   82ed6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ed8:	e432      	b.n	82740 <_svfprintf_r+0x8f8>
   82eda:	f108 0808 	add.w	r8, r8, #8
   82ede:	e52f      	b.n	82940 <_svfprintf_r+0xaf8>
   82ee0:	2140      	movs	r1, #64	; 0x40
   82ee2:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ee4:	f001 fa26 	bl	84334 <_malloc_r>
   82ee8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82eea:	6010      	str	r0, [r2, #0]
   82eec:	6110      	str	r0, [r2, #16]
   82eee:	2800      	cmp	r0, #0
   82ef0:	f000 8214 	beq.w	8331c <_svfprintf_r+0x14d4>
   82ef4:	2340      	movs	r3, #64	; 0x40
   82ef6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82ef8:	6153      	str	r3, [r2, #20]
   82efa:	f7fe bfbc 	b.w	81e76 <_svfprintf_r+0x2e>
   82efe:	2003      	movs	r0, #3
   82f00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82f02:	a923      	add	r1, sp, #140	; 0x8c
   82f04:	e88d 0011 	stmia.w	sp, {r0, r4}
   82f08:	9104      	str	r1, [sp, #16]
   82f0a:	a820      	add	r0, sp, #128	; 0x80
   82f0c:	a91f      	add	r1, sp, #124	; 0x7c
   82f0e:	9003      	str	r0, [sp, #12]
   82f10:	9a08      	ldr	r2, [sp, #32]
   82f12:	463b      	mov	r3, r7
   82f14:	9102      	str	r1, [sp, #8]
   82f16:	980c      	ldr	r0, [sp, #48]	; 0x30
   82f18:	f000 faba 	bl	83490 <_dtoa_r>
   82f1c:	4625      	mov	r5, r4
   82f1e:	4606      	mov	r6, r0
   82f20:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f22:	1974      	adds	r4, r6, r5
   82f24:	2b46      	cmp	r3, #70	; 0x46
   82f26:	f47f af64 	bne.w	82df2 <_svfprintf_r+0xfaa>
   82f2a:	7833      	ldrb	r3, [r6, #0]
   82f2c:	2b30      	cmp	r3, #48	; 0x30
   82f2e:	f000 8187 	beq.w	83240 <_svfprintf_r+0x13f8>
   82f32:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   82f34:	442c      	add	r4, r5
   82f36:	e75c      	b.n	82df2 <_svfprintf_r+0xfaa>
   82f38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82f3a:	2b00      	cmp	r3, #0
   82f3c:	bf08      	it	eq
   82f3e:	2301      	moveq	r3, #1
   82f40:	930a      	str	r3, [sp, #40]	; 0x28
   82f42:	e723      	b.n	82d8c <_svfprintf_r+0xf44>
   82f44:	4630      	mov	r0, r6
   82f46:	950a      	str	r5, [sp, #40]	; 0x28
   82f48:	f7fe fe6c 	bl	81c24 <strlen>
   82f4c:	940f      	str	r4, [sp, #60]	; 0x3c
   82f4e:	900e      	str	r0, [sp, #56]	; 0x38
   82f50:	f8cd b01c 	str.w	fp, [sp, #28]
   82f54:	4603      	mov	r3, r0
   82f56:	f7ff b9e7 	b.w	82328 <_svfprintf_r+0x4e0>
   82f5a:	272d      	movs	r7, #45	; 0x2d
   82f5c:	2300      	movs	r3, #0
   82f5e:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82f62:	930a      	str	r3, [sp, #40]	; 0x28
   82f64:	f7ff b895 	b.w	82092 <_svfprintf_r+0x24a>
   82f68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82f6a:	461a      	mov	r2, r3
   82f6c:	9312      	str	r3, [sp, #72]	; 0x48
   82f6e:	3303      	adds	r3, #3
   82f70:	db04      	blt.n	82f7c <_svfprintf_r+0x1134>
   82f72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82f74:	4619      	mov	r1, r3
   82f76:	4291      	cmp	r1, r2
   82f78:	f6bf af5e 	bge.w	82e38 <_svfprintf_r+0xff0>
   82f7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f7e:	3b02      	subs	r3, #2
   82f80:	9311      	str	r3, [sp, #68]	; 0x44
   82f82:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82f84:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82f88:	3b01      	subs	r3, #1
   82f8a:	2b00      	cmp	r3, #0
   82f8c:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   82f90:	bfb4      	ite	lt
   82f92:	222d      	movlt	r2, #45	; 0x2d
   82f94:	222b      	movge	r2, #43	; 0x2b
   82f96:	931f      	str	r3, [sp, #124]	; 0x7c
   82f98:	bfb8      	it	lt
   82f9a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   82f9c:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   82fa0:	bfb8      	it	lt
   82fa2:	f1c3 0301 	rsblt	r3, r3, #1
   82fa6:	2b09      	cmp	r3, #9
   82fa8:	f340 811f 	ble.w	831ea <_svfprintf_r+0x13a2>
   82fac:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   82fb0:	4601      	mov	r1, r0
   82fb2:	4c68      	ldr	r4, [pc, #416]	; (83154 <_svfprintf_r+0x130c>)
   82fb4:	e000      	b.n	82fb8 <_svfprintf_r+0x1170>
   82fb6:	4611      	mov	r1, r2
   82fb8:	fb84 5203 	smull	r5, r2, r4, r3
   82fbc:	17dd      	asrs	r5, r3, #31
   82fbe:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   82fc2:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   82fc6:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82fca:	3230      	adds	r2, #48	; 0x30
   82fcc:	2d09      	cmp	r5, #9
   82fce:	f801 2c01 	strb.w	r2, [r1, #-1]
   82fd2:	462b      	mov	r3, r5
   82fd4:	f101 32ff 	add.w	r2, r1, #4294967295
   82fd8:	dced      	bgt.n	82fb6 <_svfprintf_r+0x116e>
   82fda:	3330      	adds	r3, #48	; 0x30
   82fdc:	3902      	subs	r1, #2
   82fde:	b2dc      	uxtb	r4, r3
   82fe0:	4288      	cmp	r0, r1
   82fe2:	f802 4c01 	strb.w	r4, [r2, #-1]
   82fe6:	f240 8192 	bls.w	8330e <_svfprintf_r+0x14c6>
   82fea:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   82fee:	4613      	mov	r3, r2
   82ff0:	e001      	b.n	82ff6 <_svfprintf_r+0x11ae>
   82ff2:	f813 4b01 	ldrb.w	r4, [r3], #1
   82ff6:	4283      	cmp	r3, r0
   82ff8:	f801 4b01 	strb.w	r4, [r1], #1
   82ffc:	d1f9      	bne.n	82ff2 <_svfprintf_r+0x11aa>
   82ffe:	3301      	adds	r3, #1
   83000:	1a9b      	subs	r3, r3, r2
   83002:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   83006:	4413      	add	r3, r2
   83008:	aa21      	add	r2, sp, #132	; 0x84
   8300a:	1a9b      	subs	r3, r3, r2
   8300c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8300e:	931b      	str	r3, [sp, #108]	; 0x6c
   83010:	2a01      	cmp	r2, #1
   83012:	4413      	add	r3, r2
   83014:	930e      	str	r3, [sp, #56]	; 0x38
   83016:	f340 8148 	ble.w	832aa <_svfprintf_r+0x1462>
   8301a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8301c:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8301e:	4413      	add	r3, r2
   83020:	930e      	str	r3, [sp, #56]	; 0x38
   83022:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83026:	9308      	str	r3, [sp, #32]
   83028:	2300      	movs	r3, #0
   8302a:	9312      	str	r3, [sp, #72]	; 0x48
   8302c:	e714      	b.n	82e58 <_svfprintf_r+0x1010>
   8302e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83030:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83032:	f7ff b876 	b.w	82122 <_svfprintf_r+0x2da>
   83036:	aa25      	add	r2, sp, #148	; 0x94
   83038:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8303a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8303c:	f002 f808 	bl	85050 <__ssprint_r>
   83040:	2800      	cmp	r0, #0
   83042:	f47e afde 	bne.w	82002 <_svfprintf_r+0x1ba>
   83046:	46c8      	mov	r8, r9
   83048:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8304a:	e4fb      	b.n	82a44 <_svfprintf_r+0xbfc>
   8304c:	4623      	mov	r3, r4
   8304e:	e6e3      	b.n	82e18 <_svfprintf_r+0xfd0>
   83050:	aa25      	add	r2, sp, #148	; 0x94
   83052:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83054:	980c      	ldr	r0, [sp, #48]	; 0x30
   83056:	f001 fffb 	bl	85050 <__ssprint_r>
   8305a:	2800      	cmp	r0, #0
   8305c:	f47e afd1 	bne.w	82002 <_svfprintf_r+0x1ba>
   83060:	46c8      	mov	r8, r9
   83062:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83064:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83066:	e5d3      	b.n	82c10 <_svfprintf_r+0xdc8>
   83068:	aa25      	add	r2, sp, #148	; 0x94
   8306a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8306c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8306e:	f001 ffef 	bl	85050 <__ssprint_r>
   83072:	2800      	cmp	r0, #0
   83074:	f47e afc5 	bne.w	82002 <_svfprintf_r+0x1ba>
   83078:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8307a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8307c:	46c8      	mov	r8, r9
   8307e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83080:	1a9a      	subs	r2, r3, r2
   83082:	e5dd      	b.n	82c40 <_svfprintf_r+0xdf8>
   83084:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83086:	f7ff b8fe 	b.w	82286 <_svfprintf_r+0x43e>
   8308a:	aa25      	add	r2, sp, #148	; 0x94
   8308c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8308e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83090:	f001 ffde 	bl	85050 <__ssprint_r>
   83094:	2800      	cmp	r0, #0
   83096:	f47e afb4 	bne.w	82002 <_svfprintf_r+0x1ba>
   8309a:	46c8      	mov	r8, r9
   8309c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8309e:	e5b0      	b.n	82c02 <_svfprintf_r+0xdba>
   830a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   830a2:	4637      	mov	r7, r6
   830a4:	2b06      	cmp	r3, #6
   830a6:	bf28      	it	cs
   830a8:	2306      	movcs	r3, #6
   830aa:	960a      	str	r6, [sp, #40]	; 0x28
   830ac:	9612      	str	r6, [sp, #72]	; 0x48
   830ae:	9308      	str	r3, [sp, #32]
   830b0:	940f      	str	r4, [sp, #60]	; 0x3c
   830b2:	f8cd b01c 	str.w	fp, [sp, #28]
   830b6:	930e      	str	r3, [sp, #56]	; 0x38
   830b8:	4e27      	ldr	r6, [pc, #156]	; (83158 <_svfprintf_r+0x1310>)
   830ba:	f7fe bfe9 	b.w	82090 <_svfprintf_r+0x248>
   830be:	2306      	movs	r3, #6
   830c0:	930a      	str	r3, [sp, #40]	; 0x28
   830c2:	e663      	b.n	82d8c <_svfprintf_r+0xf44>
   830c4:	232d      	movs	r3, #45	; 0x2d
   830c6:	461f      	mov	r7, r3
   830c8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   830cc:	f7ff ba28 	b.w	82520 <_svfprintf_r+0x6d8>
   830d0:	2003      	movs	r0, #3
   830d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   830d4:	a923      	add	r1, sp, #140	; 0x8c
   830d6:	e88d 0011 	stmia.w	sp, {r0, r4}
   830da:	9104      	str	r1, [sp, #16]
   830dc:	a820      	add	r0, sp, #128	; 0x80
   830de:	a91f      	add	r1, sp, #124	; 0x7c
   830e0:	9003      	str	r0, [sp, #12]
   830e2:	9a08      	ldr	r2, [sp, #32]
   830e4:	463b      	mov	r3, r7
   830e6:	9102      	str	r1, [sp, #8]
   830e8:	980c      	ldr	r0, [sp, #48]	; 0x30
   830ea:	f000 f9d1 	bl	83490 <_dtoa_r>
   830ee:	4625      	mov	r5, r4
   830f0:	4606      	mov	r6, r0
   830f2:	1904      	adds	r4, r0, r4
   830f4:	e719      	b.n	82f2a <_svfprintf_r+0x10e2>
   830f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   830f8:	4d15      	ldr	r5, [pc, #84]	; (83150 <_svfprintf_r+0x1308>)
   830fa:	f7ff bb7e 	b.w	827fa <_svfprintf_r+0x9b2>
   830fe:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83100:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83102:	4413      	add	r3, r2
   83104:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83106:	930e      	str	r3, [sp, #56]	; 0x38
   83108:	2a00      	cmp	r2, #0
   8310a:	f340 80c7 	ble.w	8329c <_svfprintf_r+0x1454>
   8310e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83112:	9308      	str	r3, [sp, #32]
   83114:	2367      	movs	r3, #103	; 0x67
   83116:	9311      	str	r3, [sp, #68]	; 0x44
   83118:	e69e      	b.n	82e58 <_svfprintf_r+0x1010>
   8311a:	2b00      	cmp	r3, #0
   8311c:	f340 80e1 	ble.w	832e2 <_svfprintf_r+0x149a>
   83120:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83122:	2a00      	cmp	r2, #0
   83124:	f040 80b0 	bne.w	83288 <_svfprintf_r+0x1440>
   83128:	f01b 0f01 	tst.w	fp, #1
   8312c:	f040 80ac 	bne.w	83288 <_svfprintf_r+0x1440>
   83130:	9308      	str	r3, [sp, #32]
   83132:	930e      	str	r3, [sp, #56]	; 0x38
   83134:	e690      	b.n	82e58 <_svfprintf_r+0x1010>
   83136:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83138:	940f      	str	r4, [sp, #60]	; 0x3c
   8313a:	9308      	str	r3, [sp, #32]
   8313c:	930e      	str	r3, [sp, #56]	; 0x38
   8313e:	900a      	str	r0, [sp, #40]	; 0x28
   83140:	f8cd b01c 	str.w	fp, [sp, #28]
   83144:	9012      	str	r0, [sp, #72]	; 0x48
   83146:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8314a:	f7fe bfa1 	b.w	82090 <_svfprintf_r+0x248>
   8314e:	bf00      	nop
   83150:	000867c4 	.word	0x000867c4
   83154:	66666667 	.word	0x66666667
   83158:	000867a8 	.word	0x000867a8
   8315c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8315e:	2b47      	cmp	r3, #71	; 0x47
   83160:	f47f ae46 	bne.w	82df0 <_svfprintf_r+0xfa8>
   83164:	f01b 0f01 	tst.w	fp, #1
   83168:	f47f aeda 	bne.w	82f20 <_svfprintf_r+0x10d8>
   8316c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8316e:	1b9b      	subs	r3, r3, r6
   83170:	9313      	str	r3, [sp, #76]	; 0x4c
   83172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83174:	2b47      	cmp	r3, #71	; 0x47
   83176:	f43f aef7 	beq.w	82f68 <_svfprintf_r+0x1120>
   8317a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8317c:	9312      	str	r3, [sp, #72]	; 0x48
   8317e:	e700      	b.n	82f82 <_svfprintf_r+0x113a>
   83180:	2000      	movs	r0, #0
   83182:	900a      	str	r0, [sp, #40]	; 0x28
   83184:	f7fe bebc 	b.w	81f00 <_svfprintf_r+0xb8>
   83188:	424f      	negs	r7, r1
   8318a:	3110      	adds	r1, #16
   8318c:	da35      	bge.n	831fa <_svfprintf_r+0x13b2>
   8318e:	2410      	movs	r4, #16
   83190:	4d6a      	ldr	r5, [pc, #424]	; (8333c <_svfprintf_r+0x14f4>)
   83192:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83196:	e004      	b.n	831a2 <_svfprintf_r+0x135a>
   83198:	f108 0808 	add.w	r8, r8, #8
   8319c:	3f10      	subs	r7, #16
   8319e:	2f10      	cmp	r7, #16
   831a0:	dd2c      	ble.n	831fc <_svfprintf_r+0x13b4>
   831a2:	3301      	adds	r3, #1
   831a4:	3210      	adds	r2, #16
   831a6:	2b07      	cmp	r3, #7
   831a8:	9227      	str	r2, [sp, #156]	; 0x9c
   831aa:	9326      	str	r3, [sp, #152]	; 0x98
   831ac:	f8c8 5000 	str.w	r5, [r8]
   831b0:	f8c8 4004 	str.w	r4, [r8, #4]
   831b4:	ddf0      	ble.n	83198 <_svfprintf_r+0x1350>
   831b6:	aa25      	add	r2, sp, #148	; 0x94
   831b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831ba:	4658      	mov	r0, fp
   831bc:	f001 ff48 	bl	85050 <__ssprint_r>
   831c0:	2800      	cmp	r0, #0
   831c2:	f47e af1e 	bne.w	82002 <_svfprintf_r+0x1ba>
   831c6:	46c8      	mov	r8, r9
   831c8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   831ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
   831cc:	e7e6      	b.n	8319c <_svfprintf_r+0x1354>
   831ce:	aa25      	add	r2, sp, #148	; 0x94
   831d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   831d2:	980c      	ldr	r0, [sp, #48]	; 0x30
   831d4:	f001 ff3c 	bl	85050 <__ssprint_r>
   831d8:	2800      	cmp	r0, #0
   831da:	f47e af12 	bne.w	82002 <_svfprintf_r+0x1ba>
   831de:	46c8      	mov	r8, r9
   831e0:	991f      	ldr	r1, [sp, #124]	; 0x7c
   831e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   831e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   831e6:	f7ff bbc3 	b.w	82970 <_svfprintf_r+0xb28>
   831ea:	2230      	movs	r2, #48	; 0x30
   831ec:	4413      	add	r3, r2
   831ee:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   831f2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   831f6:	ab22      	add	r3, sp, #136	; 0x88
   831f8:	e706      	b.n	83008 <_svfprintf_r+0x11c0>
   831fa:	4d50      	ldr	r5, [pc, #320]	; (8333c <_svfprintf_r+0x14f4>)
   831fc:	3301      	adds	r3, #1
   831fe:	443a      	add	r2, r7
   83200:	2b07      	cmp	r3, #7
   83202:	e888 00a0 	stmia.w	r8, {r5, r7}
   83206:	9227      	str	r2, [sp, #156]	; 0x9c
   83208:	9326      	str	r3, [sp, #152]	; 0x98
   8320a:	f108 0808 	add.w	r8, r8, #8
   8320e:	f77f abb2 	ble.w	82976 <_svfprintf_r+0xb2e>
   83212:	aa25      	add	r2, sp, #148	; 0x94
   83214:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83216:	980c      	ldr	r0, [sp, #48]	; 0x30
   83218:	f001 ff1a 	bl	85050 <__ssprint_r>
   8321c:	2800      	cmp	r0, #0
   8321e:	f47e aef0 	bne.w	82002 <_svfprintf_r+0x1ba>
   83222:	46c8      	mov	r8, r9
   83224:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83226:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83228:	f7ff bba5 	b.w	82976 <_svfprintf_r+0xb2e>
   8322c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8322e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83230:	4413      	add	r3, r2
   83232:	930e      	str	r3, [sp, #56]	; 0x38
   83234:	e76b      	b.n	8310e <_svfprintf_r+0x12c6>
   83236:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83238:	e5ee      	b.n	82e18 <_svfprintf_r+0xfd0>
   8323a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8323c:	4d3f      	ldr	r5, [pc, #252]	; (8333c <_svfprintf_r+0x14f4>)
   8323e:	e4bb      	b.n	82bb8 <_svfprintf_r+0xd70>
   83240:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83242:	9808      	ldr	r0, [sp, #32]
   83244:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   83246:	4639      	mov	r1, r7
   83248:	f002 ff8e 	bl	86168 <__aeabi_dcmpeq>
   8324c:	2800      	cmp	r0, #0
   8324e:	f47f ae70 	bne.w	82f32 <_svfprintf_r+0x10ea>
   83252:	f1c5 0501 	rsb	r5, r5, #1
   83256:	951f      	str	r5, [sp, #124]	; 0x7c
   83258:	442c      	add	r4, r5
   8325a:	e5ca      	b.n	82df2 <_svfprintf_r+0xfaa>
   8325c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8325e:	4e38      	ldr	r6, [pc, #224]	; (83340 <_svfprintf_r+0x14f8>)
   83260:	2b00      	cmp	r3, #0
   83262:	bfbe      	ittt	lt
   83264:	232d      	movlt	r3, #45	; 0x2d
   83266:	461f      	movlt	r7, r3
   83268:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   8326c:	f04f 0303 	mov.w	r3, #3
   83270:	461a      	mov	r2, r3
   83272:	9308      	str	r3, [sp, #32]
   83274:	f04f 0300 	mov.w	r3, #0
   83278:	bfa8      	it	ge
   8327a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   8327e:	4619      	mov	r1, r3
   83280:	930a      	str	r3, [sp, #40]	; 0x28
   83282:	4b30      	ldr	r3, [pc, #192]	; (83344 <_svfprintf_r+0x14fc>)
   83284:	f7ff b954 	b.w	82530 <_svfprintf_r+0x6e8>
   83288:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8328a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8328c:	4413      	add	r3, r2
   8328e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83290:	441a      	add	r2, r3
   83292:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   83296:	920e      	str	r2, [sp, #56]	; 0x38
   83298:	9308      	str	r3, [sp, #32]
   8329a:	e5dd      	b.n	82e58 <_svfprintf_r+0x1010>
   8329c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8329e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   832a0:	f1c3 0301 	rsb	r3, r3, #1
   832a4:	441a      	add	r2, r3
   832a6:	4613      	mov	r3, r2
   832a8:	e7c3      	b.n	83232 <_svfprintf_r+0x13ea>
   832aa:	f01b 0301 	ands.w	r3, fp, #1
   832ae:	9312      	str	r3, [sp, #72]	; 0x48
   832b0:	f47f aeb3 	bne.w	8301a <_svfprintf_r+0x11d2>
   832b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   832b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   832ba:	9308      	str	r3, [sp, #32]
   832bc:	e5cc      	b.n	82e58 <_svfprintf_r+0x1010>
   832be:	4d1f      	ldr	r5, [pc, #124]	; (8333c <_svfprintf_r+0x14f4>)
   832c0:	e43c      	b.n	82b3c <_svfprintf_r+0xcf4>
   832c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   832c4:	4d1d      	ldr	r5, [pc, #116]	; (8333c <_svfprintf_r+0x14f4>)
   832c6:	e491      	b.n	82bec <_svfprintf_r+0xda4>
   832c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   832ca:	f89a 3001 	ldrb.w	r3, [sl, #1]
   832ce:	6828      	ldr	r0, [r5, #0]
   832d0:	46a2      	mov	sl, r4
   832d2:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   832d6:	900a      	str	r0, [sp, #40]	; 0x28
   832d8:	4628      	mov	r0, r5
   832da:	3004      	adds	r0, #4
   832dc:	900f      	str	r0, [sp, #60]	; 0x3c
   832de:	f7fe be0d 	b.w	81efc <_svfprintf_r+0xb4>
   832e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   832e4:	b913      	cbnz	r3, 832ec <_svfprintf_r+0x14a4>
   832e6:	f01b 0f01 	tst.w	fp, #1
   832ea:	d002      	beq.n	832f2 <_svfprintf_r+0x14aa>
   832ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
   832ee:	3301      	adds	r3, #1
   832f0:	e7cd      	b.n	8328e <_svfprintf_r+0x1446>
   832f2:	2301      	movs	r3, #1
   832f4:	e71c      	b.n	83130 <_svfprintf_r+0x12e8>
   832f6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   832fa:	f7ff b980 	b.w	825fe <_svfprintf_r+0x7b6>
   832fe:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83302:	f7ff b93a 	b.w	8257a <_svfprintf_r+0x732>
   83306:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8330a:	f7ff b84f 	b.w	823ac <_svfprintf_r+0x564>
   8330e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   83312:	e679      	b.n	83008 <_svfprintf_r+0x11c0>
   83314:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83318:	f7ff b9b2 	b.w	82680 <_svfprintf_r+0x838>
   8331c:	f04f 32ff 	mov.w	r2, #4294967295
   83320:	230c      	movs	r3, #12
   83322:	9209      	str	r2, [sp, #36]	; 0x24
   83324:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83326:	6013      	str	r3, [r2, #0]
   83328:	f7fe be74 	b.w	82014 <_svfprintf_r+0x1cc>
   8332c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83330:	f7ff b8c4 	b.w	824bc <_svfprintf_r+0x674>
   83334:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83338:	f7ff b878 	b.w	8242c <_svfprintf_r+0x5e4>
   8333c:	000867c4 	.word	0x000867c4
   83340:	0008677c 	.word	0x0008677c
   83344:	00086778 	.word	0x00086778

00083348 <register_fini>:
   83348:	4b02      	ldr	r3, [pc, #8]	; (83354 <register_fini+0xc>)
   8334a:	b113      	cbz	r3, 83352 <register_fini+0xa>
   8334c:	4802      	ldr	r0, [pc, #8]	; (83358 <register_fini+0x10>)
   8334e:	f000 b805 	b.w	8335c <atexit>
   83352:	4770      	bx	lr
   83354:	00000000 	.word	0x00000000
   83358:	000842d5 	.word	0x000842d5

0008335c <atexit>:
   8335c:	2300      	movs	r3, #0
   8335e:	4601      	mov	r1, r0
   83360:	461a      	mov	r2, r3
   83362:	4618      	mov	r0, r3
   83364:	f001 befe 	b.w	85164 <__register_exitproc>

00083368 <quorem>:
   83368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8336c:	6903      	ldr	r3, [r0, #16]
   8336e:	690f      	ldr	r7, [r1, #16]
   83370:	b083      	sub	sp, #12
   83372:	429f      	cmp	r7, r3
   83374:	f300 8088 	bgt.w	83488 <quorem+0x120>
   83378:	3f01      	subs	r7, #1
   8337a:	f101 0614 	add.w	r6, r1, #20
   8337e:	f100 0a14 	add.w	sl, r0, #20
   83382:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   83386:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8338a:	3301      	adds	r3, #1
   8338c:	fbb2 f8f3 	udiv	r8, r2, r3
   83390:	00bb      	lsls	r3, r7, #2
   83392:	9300      	str	r3, [sp, #0]
   83394:	eb06 0903 	add.w	r9, r6, r3
   83398:	4453      	add	r3, sl
   8339a:	9301      	str	r3, [sp, #4]
   8339c:	f1b8 0f00 	cmp.w	r8, #0
   833a0:	d03b      	beq.n	8341a <quorem+0xb2>
   833a2:	2300      	movs	r3, #0
   833a4:	46b4      	mov	ip, r6
   833a6:	461c      	mov	r4, r3
   833a8:	46d6      	mov	lr, sl
   833aa:	f85c 2b04 	ldr.w	r2, [ip], #4
   833ae:	f8de 5000 	ldr.w	r5, [lr]
   833b2:	fa1f fb82 	uxth.w	fp, r2
   833b6:	fb08 330b 	mla	r3, r8, fp, r3
   833ba:	0c12      	lsrs	r2, r2, #16
   833bc:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   833c0:	fb08 bb02 	mla	fp, r8, r2, fp
   833c4:	b29a      	uxth	r2, r3
   833c6:	1aa2      	subs	r2, r4, r2
   833c8:	b2ab      	uxth	r3, r5
   833ca:	fa1f f48b 	uxth.w	r4, fp
   833ce:	441a      	add	r2, r3
   833d0:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   833d4:	eb04 4422 	add.w	r4, r4, r2, asr #16
   833d8:	b292      	uxth	r2, r2
   833da:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   833de:	45e1      	cmp	r9, ip
   833e0:	f84e 2b04 	str.w	r2, [lr], #4
   833e4:	ea4f 4424 	mov.w	r4, r4, asr #16
   833e8:	ea4f 431b 	mov.w	r3, fp, lsr #16
   833ec:	d2dd      	bcs.n	833aa <quorem+0x42>
   833ee:	9b00      	ldr	r3, [sp, #0]
   833f0:	f85a 3003 	ldr.w	r3, [sl, r3]
   833f4:	b98b      	cbnz	r3, 8341a <quorem+0xb2>
   833f6:	9c01      	ldr	r4, [sp, #4]
   833f8:	1f23      	subs	r3, r4, #4
   833fa:	459a      	cmp	sl, r3
   833fc:	d20c      	bcs.n	83418 <quorem+0xb0>
   833fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83402:	b94b      	cbnz	r3, 83418 <quorem+0xb0>
   83404:	f1a4 0308 	sub.w	r3, r4, #8
   83408:	e002      	b.n	83410 <quorem+0xa8>
   8340a:	681a      	ldr	r2, [r3, #0]
   8340c:	3b04      	subs	r3, #4
   8340e:	b91a      	cbnz	r2, 83418 <quorem+0xb0>
   83410:	459a      	cmp	sl, r3
   83412:	f107 37ff 	add.w	r7, r7, #4294967295
   83416:	d3f8      	bcc.n	8340a <quorem+0xa2>
   83418:	6107      	str	r7, [r0, #16]
   8341a:	4604      	mov	r4, r0
   8341c:	f001 fd08 	bl	84e30 <__mcmp>
   83420:	2800      	cmp	r0, #0
   83422:	db2d      	blt.n	83480 <quorem+0x118>
   83424:	4655      	mov	r5, sl
   83426:	2300      	movs	r3, #0
   83428:	f108 0801 	add.w	r8, r8, #1
   8342c:	f856 1b04 	ldr.w	r1, [r6], #4
   83430:	6828      	ldr	r0, [r5, #0]
   83432:	b28a      	uxth	r2, r1
   83434:	1a9a      	subs	r2, r3, r2
   83436:	0c0b      	lsrs	r3, r1, #16
   83438:	b281      	uxth	r1, r0
   8343a:	440a      	add	r2, r1
   8343c:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83440:	eb03 4322 	add.w	r3, r3, r2, asr #16
   83444:	b292      	uxth	r2, r2
   83446:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   8344a:	45b1      	cmp	r9, r6
   8344c:	f845 2b04 	str.w	r2, [r5], #4
   83450:	ea4f 4323 	mov.w	r3, r3, asr #16
   83454:	d2ea      	bcs.n	8342c <quorem+0xc4>
   83456:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8345a:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   8345e:	b97a      	cbnz	r2, 83480 <quorem+0x118>
   83460:	1f1a      	subs	r2, r3, #4
   83462:	4592      	cmp	sl, r2
   83464:	d20b      	bcs.n	8347e <quorem+0x116>
   83466:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8346a:	b942      	cbnz	r2, 8347e <quorem+0x116>
   8346c:	3b08      	subs	r3, #8
   8346e:	e002      	b.n	83476 <quorem+0x10e>
   83470:	681a      	ldr	r2, [r3, #0]
   83472:	3b04      	subs	r3, #4
   83474:	b91a      	cbnz	r2, 8347e <quorem+0x116>
   83476:	459a      	cmp	sl, r3
   83478:	f107 37ff 	add.w	r7, r7, #4294967295
   8347c:	d3f8      	bcc.n	83470 <quorem+0x108>
   8347e:	6127      	str	r7, [r4, #16]
   83480:	4640      	mov	r0, r8
   83482:	b003      	add	sp, #12
   83484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83488:	2000      	movs	r0, #0
   8348a:	b003      	add	sp, #12
   8348c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00083490 <_dtoa_r>:
   83490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83494:	6c05      	ldr	r5, [r0, #64]	; 0x40
   83496:	b09b      	sub	sp, #108	; 0x6c
   83498:	4604      	mov	r4, r0
   8349a:	4692      	mov	sl, r2
   8349c:	469b      	mov	fp, r3
   8349e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   834a0:	b14d      	cbz	r5, 834b6 <_dtoa_r+0x26>
   834a2:	2301      	movs	r3, #1
   834a4:	6c42      	ldr	r2, [r0, #68]	; 0x44
   834a6:	4629      	mov	r1, r5
   834a8:	4093      	lsls	r3, r2
   834aa:	60ab      	str	r3, [r5, #8]
   834ac:	606a      	str	r2, [r5, #4]
   834ae:	f001 fae7 	bl	84a80 <_Bfree>
   834b2:	2300      	movs	r3, #0
   834b4:	6423      	str	r3, [r4, #64]	; 0x40
   834b6:	f1bb 0f00 	cmp.w	fp, #0
   834ba:	465d      	mov	r5, fp
   834bc:	db35      	blt.n	8352a <_dtoa_r+0x9a>
   834be:	2300      	movs	r3, #0
   834c0:	6033      	str	r3, [r6, #0]
   834c2:	4b9d      	ldr	r3, [pc, #628]	; (83738 <_dtoa_r+0x2a8>)
   834c4:	43ab      	bics	r3, r5
   834c6:	d015      	beq.n	834f4 <_dtoa_r+0x64>
   834c8:	2200      	movs	r2, #0
   834ca:	2300      	movs	r3, #0
   834cc:	4650      	mov	r0, sl
   834ce:	4659      	mov	r1, fp
   834d0:	f002 fe4a 	bl	86168 <__aeabi_dcmpeq>
   834d4:	4680      	mov	r8, r0
   834d6:	2800      	cmp	r0, #0
   834d8:	d02d      	beq.n	83536 <_dtoa_r+0xa6>
   834da:	2301      	movs	r3, #1
   834dc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   834de:	6013      	str	r3, [r2, #0]
   834e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   834e2:	2b00      	cmp	r3, #0
   834e4:	f000 80bd 	beq.w	83662 <_dtoa_r+0x1d2>
   834e8:	4894      	ldr	r0, [pc, #592]	; (8373c <_dtoa_r+0x2ac>)
   834ea:	6018      	str	r0, [r3, #0]
   834ec:	3801      	subs	r0, #1
   834ee:	b01b      	add	sp, #108	; 0x6c
   834f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   834f4:	f242 730f 	movw	r3, #9999	; 0x270f
   834f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   834fa:	6013      	str	r3, [r2, #0]
   834fc:	f1ba 0f00 	cmp.w	sl, #0
   83500:	d10d      	bne.n	8351e <_dtoa_r+0x8e>
   83502:	f3c5 0513 	ubfx	r5, r5, #0, #20
   83506:	b955      	cbnz	r5, 8351e <_dtoa_r+0x8e>
   83508:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8350a:	488d      	ldr	r0, [pc, #564]	; (83740 <_dtoa_r+0x2b0>)
   8350c:	2b00      	cmp	r3, #0
   8350e:	d0ee      	beq.n	834ee <_dtoa_r+0x5e>
   83510:	f100 0308 	add.w	r3, r0, #8
   83514:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   83516:	6013      	str	r3, [r2, #0]
   83518:	b01b      	add	sp, #108	; 0x6c
   8351a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8351e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83520:	4888      	ldr	r0, [pc, #544]	; (83744 <_dtoa_r+0x2b4>)
   83522:	2b00      	cmp	r3, #0
   83524:	d0e3      	beq.n	834ee <_dtoa_r+0x5e>
   83526:	1cc3      	adds	r3, r0, #3
   83528:	e7f4      	b.n	83514 <_dtoa_r+0x84>
   8352a:	2301      	movs	r3, #1
   8352c:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   83530:	6033      	str	r3, [r6, #0]
   83532:	46ab      	mov	fp, r5
   83534:	e7c5      	b.n	834c2 <_dtoa_r+0x32>
   83536:	aa18      	add	r2, sp, #96	; 0x60
   83538:	ab19      	add	r3, sp, #100	; 0x64
   8353a:	9201      	str	r2, [sp, #4]
   8353c:	9300      	str	r3, [sp, #0]
   8353e:	4652      	mov	r2, sl
   83540:	465b      	mov	r3, fp
   83542:	4620      	mov	r0, r4
   83544:	f001 fd1e 	bl	84f84 <__d2b>
   83548:	0d2b      	lsrs	r3, r5, #20
   8354a:	4681      	mov	r9, r0
   8354c:	d071      	beq.n	83632 <_dtoa_r+0x1a2>
   8354e:	4650      	mov	r0, sl
   83550:	f3cb 0213 	ubfx	r2, fp, #0, #20
   83554:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   83558:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8355a:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   8355e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   83562:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   83566:	2200      	movs	r2, #0
   83568:	4b77      	ldr	r3, [pc, #476]	; (83748 <_dtoa_r+0x2b8>)
   8356a:	f002 f9e1 	bl	85930 <__aeabi_dsub>
   8356e:	a36c      	add	r3, pc, #432	; (adr r3, 83720 <_dtoa_r+0x290>)
   83570:	e9d3 2300 	ldrd	r2, r3, [r3]
   83574:	f002 fb90 	bl	85c98 <__aeabi_dmul>
   83578:	a36b      	add	r3, pc, #428	; (adr r3, 83728 <_dtoa_r+0x298>)
   8357a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8357e:	f002 f9d9 	bl	85934 <__adddf3>
   83582:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83586:	4630      	mov	r0, r6
   83588:	f002 fb20 	bl	85bcc <__aeabi_i2d>
   8358c:	a368      	add	r3, pc, #416	; (adr r3, 83730 <_dtoa_r+0x2a0>)
   8358e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83592:	f002 fb81 	bl	85c98 <__aeabi_dmul>
   83596:	4602      	mov	r2, r0
   83598:	460b      	mov	r3, r1
   8359a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8359e:	f002 f9c9 	bl	85934 <__adddf3>
   835a2:	e9cd 0104 	strd	r0, r1, [sp, #16]
   835a6:	f002 fe27 	bl	861f8 <__aeabi_d2iz>
   835aa:	2200      	movs	r2, #0
   835ac:	9002      	str	r0, [sp, #8]
   835ae:	2300      	movs	r3, #0
   835b0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   835b4:	f002 fde2 	bl	8617c <__aeabi_dcmplt>
   835b8:	2800      	cmp	r0, #0
   835ba:	f040 816d 	bne.w	83898 <_dtoa_r+0x408>
   835be:	9d02      	ldr	r5, [sp, #8]
   835c0:	2d16      	cmp	r5, #22
   835c2:	f200 8157 	bhi.w	83874 <_dtoa_r+0x3e4>
   835c6:	4961      	ldr	r1, [pc, #388]	; (8374c <_dtoa_r+0x2bc>)
   835c8:	4652      	mov	r2, sl
   835ca:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   835ce:	465b      	mov	r3, fp
   835d0:	e9d1 0100 	ldrd	r0, r1, [r1]
   835d4:	f002 fdf0 	bl	861b8 <__aeabi_dcmpgt>
   835d8:	2800      	cmp	r0, #0
   835da:	f000 81be 	beq.w	8395a <_dtoa_r+0x4ca>
   835de:	1e6b      	subs	r3, r5, #1
   835e0:	9302      	str	r3, [sp, #8]
   835e2:	2300      	movs	r3, #0
   835e4:	930e      	str	r3, [sp, #56]	; 0x38
   835e6:	1bbf      	subs	r7, r7, r6
   835e8:	1e7b      	subs	r3, r7, #1
   835ea:	9308      	str	r3, [sp, #32]
   835ec:	f100 814e 	bmi.w	8388c <_dtoa_r+0x3fc>
   835f0:	2300      	movs	r3, #0
   835f2:	930a      	str	r3, [sp, #40]	; 0x28
   835f4:	9b02      	ldr	r3, [sp, #8]
   835f6:	2b00      	cmp	r3, #0
   835f8:	f2c0 813f 	blt.w	8387a <_dtoa_r+0x3ea>
   835fc:	9a08      	ldr	r2, [sp, #32]
   835fe:	930d      	str	r3, [sp, #52]	; 0x34
   83600:	4611      	mov	r1, r2
   83602:	4419      	add	r1, r3
   83604:	2300      	movs	r3, #0
   83606:	9108      	str	r1, [sp, #32]
   83608:	930c      	str	r3, [sp, #48]	; 0x30
   8360a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8360c:	2b09      	cmp	r3, #9
   8360e:	d82a      	bhi.n	83666 <_dtoa_r+0x1d6>
   83610:	2b05      	cmp	r3, #5
   83612:	f340 8658 	ble.w	842c6 <_dtoa_r+0xe36>
   83616:	2500      	movs	r5, #0
   83618:	3b04      	subs	r3, #4
   8361a:	9324      	str	r3, [sp, #144]	; 0x90
   8361c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8361e:	3b02      	subs	r3, #2
   83620:	2b03      	cmp	r3, #3
   83622:	f200 863f 	bhi.w	842a4 <_dtoa_r+0xe14>
   83626:	e8df f013 	tbh	[pc, r3, lsl #1]
   8362a:	03ce      	.short	0x03ce
   8362c:	03d902c3 	.word	0x03d902c3
   83630:	045b      	.short	0x045b
   83632:	9f18      	ldr	r7, [sp, #96]	; 0x60
   83634:	9e19      	ldr	r6, [sp, #100]	; 0x64
   83636:	443e      	add	r6, r7
   83638:	f206 4332 	addw	r3, r6, #1074	; 0x432
   8363c:	2b20      	cmp	r3, #32
   8363e:	f340 8187 	ble.w	83950 <_dtoa_r+0x4c0>
   83642:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   83646:	f206 4012 	addw	r0, r6, #1042	; 0x412
   8364a:	409d      	lsls	r5, r3
   8364c:	fa2a f000 	lsr.w	r0, sl, r0
   83650:	4328      	orrs	r0, r5
   83652:	f002 faab 	bl	85bac <__aeabi_ui2d>
   83656:	2301      	movs	r3, #1
   83658:	3e01      	subs	r6, #1
   8365a:	9314      	str	r3, [sp, #80]	; 0x50
   8365c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   83660:	e781      	b.n	83566 <_dtoa_r+0xd6>
   83662:	483b      	ldr	r0, [pc, #236]	; (83750 <_dtoa_r+0x2c0>)
   83664:	e743      	b.n	834ee <_dtoa_r+0x5e>
   83666:	2100      	movs	r1, #0
   83668:	4620      	mov	r0, r4
   8366a:	6461      	str	r1, [r4, #68]	; 0x44
   8366c:	9125      	str	r1, [sp, #148]	; 0x94
   8366e:	f001 f9e1 	bl	84a34 <_Balloc>
   83672:	f04f 33ff 	mov.w	r3, #4294967295
   83676:	9307      	str	r3, [sp, #28]
   83678:	930f      	str	r3, [sp, #60]	; 0x3c
   8367a:	2301      	movs	r3, #1
   8367c:	9a25      	ldr	r2, [sp, #148]	; 0x94
   8367e:	9004      	str	r0, [sp, #16]
   83680:	6420      	str	r0, [r4, #64]	; 0x40
   83682:	9224      	str	r2, [sp, #144]	; 0x90
   83684:	930b      	str	r3, [sp, #44]	; 0x2c
   83686:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83688:	2b00      	cmp	r3, #0
   8368a:	f2c0 80d3 	blt.w	83834 <_dtoa_r+0x3a4>
   8368e:	9a02      	ldr	r2, [sp, #8]
   83690:	2a0e      	cmp	r2, #14
   83692:	f300 80cf 	bgt.w	83834 <_dtoa_r+0x3a4>
   83696:	4b2d      	ldr	r3, [pc, #180]	; (8374c <_dtoa_r+0x2bc>)
   83698:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8369c:	e9d3 2300 	ldrd	r2, r3, [r3]
   836a0:	e9cd 2308 	strd	r2, r3, [sp, #32]
   836a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
   836a6:	2b00      	cmp	r3, #0
   836a8:	f2c0 83b4 	blt.w	83e14 <_dtoa_r+0x984>
   836ac:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   836b0:	4650      	mov	r0, sl
   836b2:	462a      	mov	r2, r5
   836b4:	4633      	mov	r3, r6
   836b6:	4659      	mov	r1, fp
   836b8:	f002 fc18 	bl	85eec <__aeabi_ddiv>
   836bc:	f002 fd9c 	bl	861f8 <__aeabi_d2iz>
   836c0:	4680      	mov	r8, r0
   836c2:	f002 fa83 	bl	85bcc <__aeabi_i2d>
   836c6:	462a      	mov	r2, r5
   836c8:	4633      	mov	r3, r6
   836ca:	f002 fae5 	bl	85c98 <__aeabi_dmul>
   836ce:	4602      	mov	r2, r0
   836d0:	460b      	mov	r3, r1
   836d2:	4650      	mov	r0, sl
   836d4:	4659      	mov	r1, fp
   836d6:	f002 f92b 	bl	85930 <__aeabi_dsub>
   836da:	9e07      	ldr	r6, [sp, #28]
   836dc:	9f04      	ldr	r7, [sp, #16]
   836de:	f108 0530 	add.w	r5, r8, #48	; 0x30
   836e2:	2e01      	cmp	r6, #1
   836e4:	703d      	strb	r5, [r7, #0]
   836e6:	4602      	mov	r2, r0
   836e8:	460b      	mov	r3, r1
   836ea:	f107 0501 	add.w	r5, r7, #1
   836ee:	d064      	beq.n	837ba <_dtoa_r+0x32a>
   836f0:	2200      	movs	r2, #0
   836f2:	4b18      	ldr	r3, [pc, #96]	; (83754 <_dtoa_r+0x2c4>)
   836f4:	f002 fad0 	bl	85c98 <__aeabi_dmul>
   836f8:	2200      	movs	r2, #0
   836fa:	2300      	movs	r3, #0
   836fc:	4606      	mov	r6, r0
   836fe:	460f      	mov	r7, r1
   83700:	f002 fd32 	bl	86168 <__aeabi_dcmpeq>
   83704:	2800      	cmp	r0, #0
   83706:	f040 8082 	bne.w	8380e <_dtoa_r+0x37e>
   8370a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8370e:	f04f 0a00 	mov.w	sl, #0
   83712:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   83716:	f04f 0b00 	mov.w	fp, #0
   8371a:	940b      	str	r4, [sp, #44]	; 0x2c
   8371c:	e029      	b.n	83772 <_dtoa_r+0x2e2>
   8371e:	bf00      	nop
   83720:	636f4361 	.word	0x636f4361
   83724:	3fd287a7 	.word	0x3fd287a7
   83728:	8b60c8b3 	.word	0x8b60c8b3
   8372c:	3fc68a28 	.word	0x3fc68a28
   83730:	509f79fb 	.word	0x509f79fb
   83734:	3fd34413 	.word	0x3fd34413
   83738:	7ff00000 	.word	0x7ff00000
   8373c:	000867b1 	.word	0x000867b1
   83740:	000867d4 	.word	0x000867d4
   83744:	000867e0 	.word	0x000867e0
   83748:	3ff80000 	.word	0x3ff80000
   8374c:	00086820 	.word	0x00086820
   83750:	000867b0 	.word	0x000867b0
   83754:	40240000 	.word	0x40240000
   83758:	2200      	movs	r2, #0
   8375a:	4b81      	ldr	r3, [pc, #516]	; (83960 <_dtoa_r+0x4d0>)
   8375c:	f002 fa9c 	bl	85c98 <__aeabi_dmul>
   83760:	4652      	mov	r2, sl
   83762:	465b      	mov	r3, fp
   83764:	4606      	mov	r6, r0
   83766:	460f      	mov	r7, r1
   83768:	f002 fcfe 	bl	86168 <__aeabi_dcmpeq>
   8376c:	2800      	cmp	r0, #0
   8376e:	f040 83ba 	bne.w	83ee6 <_dtoa_r+0xa56>
   83772:	4642      	mov	r2, r8
   83774:	464b      	mov	r3, r9
   83776:	4630      	mov	r0, r6
   83778:	4639      	mov	r1, r7
   8377a:	f002 fbb7 	bl	85eec <__aeabi_ddiv>
   8377e:	f002 fd3b 	bl	861f8 <__aeabi_d2iz>
   83782:	4604      	mov	r4, r0
   83784:	f002 fa22 	bl	85bcc <__aeabi_i2d>
   83788:	4642      	mov	r2, r8
   8378a:	464b      	mov	r3, r9
   8378c:	f002 fa84 	bl	85c98 <__aeabi_dmul>
   83790:	4602      	mov	r2, r0
   83792:	460b      	mov	r3, r1
   83794:	4630      	mov	r0, r6
   83796:	4639      	mov	r1, r7
   83798:	f002 f8ca 	bl	85930 <__aeabi_dsub>
   8379c:	f104 0630 	add.w	r6, r4, #48	; 0x30
   837a0:	f805 6b01 	strb.w	r6, [r5], #1
   837a4:	9e04      	ldr	r6, [sp, #16]
   837a6:	9f07      	ldr	r7, [sp, #28]
   837a8:	1bae      	subs	r6, r5, r6
   837aa:	42be      	cmp	r6, r7
   837ac:	4602      	mov	r2, r0
   837ae:	460b      	mov	r3, r1
   837b0:	d1d2      	bne.n	83758 <_dtoa_r+0x2c8>
   837b2:	46a0      	mov	r8, r4
   837b4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   837b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   837ba:	4610      	mov	r0, r2
   837bc:	4619      	mov	r1, r3
   837be:	f002 f8b9 	bl	85934 <__adddf3>
   837c2:	4606      	mov	r6, r0
   837c4:	460f      	mov	r7, r1
   837c6:	4602      	mov	r2, r0
   837c8:	460b      	mov	r3, r1
   837ca:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   837ce:	f002 fcd5 	bl	8617c <__aeabi_dcmplt>
   837d2:	b948      	cbnz	r0, 837e8 <_dtoa_r+0x358>
   837d4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   837d8:	4632      	mov	r2, r6
   837da:	463b      	mov	r3, r7
   837dc:	f002 fcc4 	bl	86168 <__aeabi_dcmpeq>
   837e0:	b1a8      	cbz	r0, 8380e <_dtoa_r+0x37e>
   837e2:	f018 0f01 	tst.w	r8, #1
   837e6:	d012      	beq.n	8380e <_dtoa_r+0x37e>
   837e8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   837ec:	1e6b      	subs	r3, r5, #1
   837ee:	9a04      	ldr	r2, [sp, #16]
   837f0:	e004      	b.n	837fc <_dtoa_r+0x36c>
   837f2:	429a      	cmp	r2, r3
   837f4:	f000 8402 	beq.w	83ffc <_dtoa_r+0xb6c>
   837f8:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   837fc:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   83800:	f103 0501 	add.w	r5, r3, #1
   83804:	d0f5      	beq.n	837f2 <_dtoa_r+0x362>
   83806:	f108 0801 	add.w	r8, r8, #1
   8380a:	f883 8000 	strb.w	r8, [r3]
   8380e:	4649      	mov	r1, r9
   83810:	4620      	mov	r0, r4
   83812:	f001 f935 	bl	84a80 <_Bfree>
   83816:	2200      	movs	r2, #0
   83818:	9b02      	ldr	r3, [sp, #8]
   8381a:	702a      	strb	r2, [r5, #0]
   8381c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8381e:	3301      	adds	r3, #1
   83820:	6013      	str	r3, [r2, #0]
   83822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   83824:	2b00      	cmp	r3, #0
   83826:	f000 839f 	beq.w	83f68 <_dtoa_r+0xad8>
   8382a:	9804      	ldr	r0, [sp, #16]
   8382c:	601d      	str	r5, [r3, #0]
   8382e:	b01b      	add	sp, #108	; 0x6c
   83830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83834:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83836:	2a00      	cmp	r2, #0
   83838:	d03e      	beq.n	838b8 <_dtoa_r+0x428>
   8383a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8383c:	2a01      	cmp	r2, #1
   8383e:	f340 8311 	ble.w	83e64 <_dtoa_r+0x9d4>
   83842:	9b07      	ldr	r3, [sp, #28]
   83844:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83846:	1e5f      	subs	r7, r3, #1
   83848:	42ba      	cmp	r2, r7
   8384a:	f2c0 8390 	blt.w	83f6e <_dtoa_r+0xade>
   8384e:	1bd7      	subs	r7, r2, r7
   83850:	9b07      	ldr	r3, [sp, #28]
   83852:	2b00      	cmp	r3, #0
   83854:	f2c0 848c 	blt.w	84170 <_dtoa_r+0xce0>
   83858:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8385a:	9b07      	ldr	r3, [sp, #28]
   8385c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8385e:	2101      	movs	r1, #1
   83860:	441a      	add	r2, r3
   83862:	920a      	str	r2, [sp, #40]	; 0x28
   83864:	9a08      	ldr	r2, [sp, #32]
   83866:	4620      	mov	r0, r4
   83868:	441a      	add	r2, r3
   8386a:	9208      	str	r2, [sp, #32]
   8386c:	f001 f9a4 	bl	84bb8 <__i2b>
   83870:	4606      	mov	r6, r0
   83872:	e023      	b.n	838bc <_dtoa_r+0x42c>
   83874:	2301      	movs	r3, #1
   83876:	930e      	str	r3, [sp, #56]	; 0x38
   83878:	e6b5      	b.n	835e6 <_dtoa_r+0x156>
   8387a:	2300      	movs	r3, #0
   8387c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8387e:	930d      	str	r3, [sp, #52]	; 0x34
   83880:	9b02      	ldr	r3, [sp, #8]
   83882:	1ad2      	subs	r2, r2, r3
   83884:	425b      	negs	r3, r3
   83886:	920a      	str	r2, [sp, #40]	; 0x28
   83888:	930c      	str	r3, [sp, #48]	; 0x30
   8388a:	e6be      	b.n	8360a <_dtoa_r+0x17a>
   8388c:	f1c7 0301 	rsb	r3, r7, #1
   83890:	930a      	str	r3, [sp, #40]	; 0x28
   83892:	2300      	movs	r3, #0
   83894:	9308      	str	r3, [sp, #32]
   83896:	e6ad      	b.n	835f4 <_dtoa_r+0x164>
   83898:	9d02      	ldr	r5, [sp, #8]
   8389a:	4628      	mov	r0, r5
   8389c:	f002 f996 	bl	85bcc <__aeabi_i2d>
   838a0:	4602      	mov	r2, r0
   838a2:	460b      	mov	r3, r1
   838a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   838a8:	f002 fc5e 	bl	86168 <__aeabi_dcmpeq>
   838ac:	2800      	cmp	r0, #0
   838ae:	f47f ae86 	bne.w	835be <_dtoa_r+0x12e>
   838b2:	1e6b      	subs	r3, r5, #1
   838b4:	9302      	str	r3, [sp, #8]
   838b6:	e682      	b.n	835be <_dtoa_r+0x12e>
   838b8:	ad0a      	add	r5, sp, #40	; 0x28
   838ba:	cde0      	ldmia	r5, {r5, r6, r7}
   838bc:	2d00      	cmp	r5, #0
   838be:	dd0c      	ble.n	838da <_dtoa_r+0x44a>
   838c0:	9908      	ldr	r1, [sp, #32]
   838c2:	2900      	cmp	r1, #0
   838c4:	460b      	mov	r3, r1
   838c6:	dd08      	ble.n	838da <_dtoa_r+0x44a>
   838c8:	42a9      	cmp	r1, r5
   838ca:	bfa8      	it	ge
   838cc:	462b      	movge	r3, r5
   838ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   838d0:	1aed      	subs	r5, r5, r3
   838d2:	1ad2      	subs	r2, r2, r3
   838d4:	1acb      	subs	r3, r1, r3
   838d6:	920a      	str	r2, [sp, #40]	; 0x28
   838d8:	9308      	str	r3, [sp, #32]
   838da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   838dc:	b1d3      	cbz	r3, 83914 <_dtoa_r+0x484>
   838de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   838e0:	2b00      	cmp	r3, #0
   838e2:	f000 82b8 	beq.w	83e56 <_dtoa_r+0x9c6>
   838e6:	2f00      	cmp	r7, #0
   838e8:	dd10      	ble.n	8390c <_dtoa_r+0x47c>
   838ea:	4631      	mov	r1, r6
   838ec:	463a      	mov	r2, r7
   838ee:	4620      	mov	r0, r4
   838f0:	f001 f9fe 	bl	84cf0 <__pow5mult>
   838f4:	464a      	mov	r2, r9
   838f6:	4601      	mov	r1, r0
   838f8:	4606      	mov	r6, r0
   838fa:	4620      	mov	r0, r4
   838fc:	f001 f966 	bl	84bcc <__multiply>
   83900:	4603      	mov	r3, r0
   83902:	4649      	mov	r1, r9
   83904:	4620      	mov	r0, r4
   83906:	4699      	mov	r9, r3
   83908:	f001 f8ba 	bl	84a80 <_Bfree>
   8390c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8390e:	1bda      	subs	r2, r3, r7
   83910:	f040 82a2 	bne.w	83e58 <_dtoa_r+0x9c8>
   83914:	2101      	movs	r1, #1
   83916:	4620      	mov	r0, r4
   83918:	f001 f94e 	bl	84bb8 <__i2b>
   8391c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8391e:	4680      	mov	r8, r0
   83920:	2b00      	cmp	r3, #0
   83922:	dd1f      	ble.n	83964 <_dtoa_r+0x4d4>
   83924:	4601      	mov	r1, r0
   83926:	461a      	mov	r2, r3
   83928:	4620      	mov	r0, r4
   8392a:	f001 f9e1 	bl	84cf0 <__pow5mult>
   8392e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83930:	4680      	mov	r8, r0
   83932:	2b01      	cmp	r3, #1
   83934:	f340 8255 	ble.w	83de2 <_dtoa_r+0x952>
   83938:	2300      	movs	r3, #0
   8393a:	930c      	str	r3, [sp, #48]	; 0x30
   8393c:	f8d8 3010 	ldr.w	r3, [r8, #16]
   83940:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   83944:	6918      	ldr	r0, [r3, #16]
   83946:	f001 f8e7 	bl	84b18 <__hi0bits>
   8394a:	f1c0 0020 	rsb	r0, r0, #32
   8394e:	e013      	b.n	83978 <_dtoa_r+0x4e8>
   83950:	f1c3 0520 	rsb	r5, r3, #32
   83954:	fa0a f005 	lsl.w	r0, sl, r5
   83958:	e67b      	b.n	83652 <_dtoa_r+0x1c2>
   8395a:	900e      	str	r0, [sp, #56]	; 0x38
   8395c:	e643      	b.n	835e6 <_dtoa_r+0x156>
   8395e:	bf00      	nop
   83960:	40240000 	.word	0x40240000
   83964:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83966:	2b01      	cmp	r3, #1
   83968:	f340 8285 	ble.w	83e76 <_dtoa_r+0x9e6>
   8396c:	2300      	movs	r3, #0
   8396e:	930c      	str	r3, [sp, #48]	; 0x30
   83970:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83972:	2001      	movs	r0, #1
   83974:	2b00      	cmp	r3, #0
   83976:	d1e1      	bne.n	8393c <_dtoa_r+0x4ac>
   83978:	9a08      	ldr	r2, [sp, #32]
   8397a:	4410      	add	r0, r2
   8397c:	f010 001f 	ands.w	r0, r0, #31
   83980:	f000 80a1 	beq.w	83ac6 <_dtoa_r+0x636>
   83984:	f1c0 0320 	rsb	r3, r0, #32
   83988:	2b04      	cmp	r3, #4
   8398a:	f340 8486 	ble.w	8429a <_dtoa_r+0xe0a>
   8398e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83990:	f1c0 001c 	rsb	r0, r0, #28
   83994:	4403      	add	r3, r0
   83996:	930a      	str	r3, [sp, #40]	; 0x28
   83998:	4613      	mov	r3, r2
   8399a:	4403      	add	r3, r0
   8399c:	4405      	add	r5, r0
   8399e:	9308      	str	r3, [sp, #32]
   839a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   839a2:	2b00      	cmp	r3, #0
   839a4:	dd05      	ble.n	839b2 <_dtoa_r+0x522>
   839a6:	4649      	mov	r1, r9
   839a8:	461a      	mov	r2, r3
   839aa:	4620      	mov	r0, r4
   839ac:	f001 f9f0 	bl	84d90 <__lshift>
   839b0:	4681      	mov	r9, r0
   839b2:	9b08      	ldr	r3, [sp, #32]
   839b4:	2b00      	cmp	r3, #0
   839b6:	dd05      	ble.n	839c4 <_dtoa_r+0x534>
   839b8:	4641      	mov	r1, r8
   839ba:	461a      	mov	r2, r3
   839bc:	4620      	mov	r0, r4
   839be:	f001 f9e7 	bl	84d90 <__lshift>
   839c2:	4680      	mov	r8, r0
   839c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   839c6:	2b00      	cmp	r3, #0
   839c8:	f040 8086 	bne.w	83ad8 <_dtoa_r+0x648>
   839cc:	9b07      	ldr	r3, [sp, #28]
   839ce:	2b00      	cmp	r3, #0
   839d0:	f340 8264 	ble.w	83e9c <_dtoa_r+0xa0c>
   839d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   839d6:	2b00      	cmp	r3, #0
   839d8:	f000 8098 	beq.w	83b0c <_dtoa_r+0x67c>
   839dc:	2d00      	cmp	r5, #0
   839de:	dd05      	ble.n	839ec <_dtoa_r+0x55c>
   839e0:	4631      	mov	r1, r6
   839e2:	462a      	mov	r2, r5
   839e4:	4620      	mov	r0, r4
   839e6:	f001 f9d3 	bl	84d90 <__lshift>
   839ea:	4606      	mov	r6, r0
   839ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   839ee:	2b00      	cmp	r3, #0
   839f0:	f040 8336 	bne.w	84060 <_dtoa_r+0xbd0>
   839f4:	9608      	str	r6, [sp, #32]
   839f6:	9b07      	ldr	r3, [sp, #28]
   839f8:	9a04      	ldr	r2, [sp, #16]
   839fa:	3b01      	subs	r3, #1
   839fc:	18d3      	adds	r3, r2, r3
   839fe:	930b      	str	r3, [sp, #44]	; 0x2c
   83a00:	4617      	mov	r7, r2
   83a02:	f00a 0301 	and.w	r3, sl, #1
   83a06:	46c2      	mov	sl, r8
   83a08:	f8dd b020 	ldr.w	fp, [sp, #32]
   83a0c:	930c      	str	r3, [sp, #48]	; 0x30
   83a0e:	4651      	mov	r1, sl
   83a10:	4648      	mov	r0, r9
   83a12:	f7ff fca9 	bl	83368 <quorem>
   83a16:	4631      	mov	r1, r6
   83a18:	4605      	mov	r5, r0
   83a1a:	4648      	mov	r0, r9
   83a1c:	f001 fa08 	bl	84e30 <__mcmp>
   83a20:	465a      	mov	r2, fp
   83a22:	9007      	str	r0, [sp, #28]
   83a24:	4651      	mov	r1, sl
   83a26:	4620      	mov	r0, r4
   83a28:	f001 fa1e 	bl	84e68 <__mdiff>
   83a2c:	68c2      	ldr	r2, [r0, #12]
   83a2e:	4680      	mov	r8, r0
   83a30:	f105 0330 	add.w	r3, r5, #48	; 0x30
   83a34:	2a00      	cmp	r2, #0
   83a36:	f040 8229 	bne.w	83e8c <_dtoa_r+0x9fc>
   83a3a:	4601      	mov	r1, r0
   83a3c:	4648      	mov	r0, r9
   83a3e:	930a      	str	r3, [sp, #40]	; 0x28
   83a40:	f001 f9f6 	bl	84e30 <__mcmp>
   83a44:	4641      	mov	r1, r8
   83a46:	9008      	str	r0, [sp, #32]
   83a48:	4620      	mov	r0, r4
   83a4a:	f001 f819 	bl	84a80 <_Bfree>
   83a4e:	9a08      	ldr	r2, [sp, #32]
   83a50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83a52:	b932      	cbnz	r2, 83a62 <_dtoa_r+0x5d2>
   83a54:	9924      	ldr	r1, [sp, #144]	; 0x90
   83a56:	b921      	cbnz	r1, 83a62 <_dtoa_r+0x5d2>
   83a58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83a5a:	2a00      	cmp	r2, #0
   83a5c:	f000 83ee 	beq.w	8423c <_dtoa_r+0xdac>
   83a60:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83a62:	9907      	ldr	r1, [sp, #28]
   83a64:	2900      	cmp	r1, #0
   83a66:	f2c0 829f 	blt.w	83fa8 <_dtoa_r+0xb18>
   83a6a:	d105      	bne.n	83a78 <_dtoa_r+0x5e8>
   83a6c:	9924      	ldr	r1, [sp, #144]	; 0x90
   83a6e:	b919      	cbnz	r1, 83a78 <_dtoa_r+0x5e8>
   83a70:	990c      	ldr	r1, [sp, #48]	; 0x30
   83a72:	2900      	cmp	r1, #0
   83a74:	f000 8298 	beq.w	83fa8 <_dtoa_r+0xb18>
   83a78:	2a00      	cmp	r2, #0
   83a7a:	f300 8305 	bgt.w	84088 <_dtoa_r+0xbf8>
   83a7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a80:	f107 0801 	add.w	r8, r7, #1
   83a84:	4297      	cmp	r7, r2
   83a86:	703b      	strb	r3, [r7, #0]
   83a88:	4645      	mov	r5, r8
   83a8a:	f000 830b 	beq.w	840a4 <_dtoa_r+0xc14>
   83a8e:	4649      	mov	r1, r9
   83a90:	2300      	movs	r3, #0
   83a92:	220a      	movs	r2, #10
   83a94:	4620      	mov	r0, r4
   83a96:	f000 fffd 	bl	84a94 <__multadd>
   83a9a:	455e      	cmp	r6, fp
   83a9c:	4681      	mov	r9, r0
   83a9e:	4631      	mov	r1, r6
   83aa0:	f04f 0300 	mov.w	r3, #0
   83aa4:	f04f 020a 	mov.w	r2, #10
   83aa8:	4620      	mov	r0, r4
   83aaa:	f000 81e9 	beq.w	83e80 <_dtoa_r+0x9f0>
   83aae:	f000 fff1 	bl	84a94 <__multadd>
   83ab2:	4659      	mov	r1, fp
   83ab4:	4606      	mov	r6, r0
   83ab6:	2300      	movs	r3, #0
   83ab8:	220a      	movs	r2, #10
   83aba:	4620      	mov	r0, r4
   83abc:	f000 ffea 	bl	84a94 <__multadd>
   83ac0:	4647      	mov	r7, r8
   83ac2:	4683      	mov	fp, r0
   83ac4:	e7a3      	b.n	83a0e <_dtoa_r+0x57e>
   83ac6:	201c      	movs	r0, #28
   83ac8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83aca:	4405      	add	r5, r0
   83acc:	4403      	add	r3, r0
   83ace:	930a      	str	r3, [sp, #40]	; 0x28
   83ad0:	9b08      	ldr	r3, [sp, #32]
   83ad2:	4403      	add	r3, r0
   83ad4:	9308      	str	r3, [sp, #32]
   83ad6:	e763      	b.n	839a0 <_dtoa_r+0x510>
   83ad8:	4641      	mov	r1, r8
   83ada:	4648      	mov	r0, r9
   83adc:	f001 f9a8 	bl	84e30 <__mcmp>
   83ae0:	2800      	cmp	r0, #0
   83ae2:	f6bf af73 	bge.w	839cc <_dtoa_r+0x53c>
   83ae6:	9f02      	ldr	r7, [sp, #8]
   83ae8:	4649      	mov	r1, r9
   83aea:	2300      	movs	r3, #0
   83aec:	220a      	movs	r2, #10
   83aee:	4620      	mov	r0, r4
   83af0:	3f01      	subs	r7, #1
   83af2:	9702      	str	r7, [sp, #8]
   83af4:	f000 ffce 	bl	84a94 <__multadd>
   83af8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83afa:	4681      	mov	r9, r0
   83afc:	2b00      	cmp	r3, #0
   83afe:	f040 83b5 	bne.w	8426c <_dtoa_r+0xddc>
   83b02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83b04:	2b00      	cmp	r3, #0
   83b06:	f340 83be 	ble.w	84286 <_dtoa_r+0xdf6>
   83b0a:	9307      	str	r3, [sp, #28]
   83b0c:	f8dd a010 	ldr.w	sl, [sp, #16]
   83b10:	9f07      	ldr	r7, [sp, #28]
   83b12:	4655      	mov	r5, sl
   83b14:	e006      	b.n	83b24 <_dtoa_r+0x694>
   83b16:	4649      	mov	r1, r9
   83b18:	2300      	movs	r3, #0
   83b1a:	220a      	movs	r2, #10
   83b1c:	4620      	mov	r0, r4
   83b1e:	f000 ffb9 	bl	84a94 <__multadd>
   83b22:	4681      	mov	r9, r0
   83b24:	4641      	mov	r1, r8
   83b26:	4648      	mov	r0, r9
   83b28:	f7ff fc1e 	bl	83368 <quorem>
   83b2c:	3030      	adds	r0, #48	; 0x30
   83b2e:	f805 0b01 	strb.w	r0, [r5], #1
   83b32:	eba5 030a 	sub.w	r3, r5, sl
   83b36:	42bb      	cmp	r3, r7
   83b38:	dbed      	blt.n	83b16 <_dtoa_r+0x686>
   83b3a:	9b04      	ldr	r3, [sp, #16]
   83b3c:	9a07      	ldr	r2, [sp, #28]
   83b3e:	4682      	mov	sl, r0
   83b40:	2a01      	cmp	r2, #1
   83b42:	bfac      	ite	ge
   83b44:	189b      	addge	r3, r3, r2
   83b46:	3301      	addlt	r3, #1
   83b48:	f04f 0b00 	mov.w	fp, #0
   83b4c:	461d      	mov	r5, r3
   83b4e:	4649      	mov	r1, r9
   83b50:	2201      	movs	r2, #1
   83b52:	4620      	mov	r0, r4
   83b54:	f001 f91c 	bl	84d90 <__lshift>
   83b58:	4641      	mov	r1, r8
   83b5a:	4681      	mov	r9, r0
   83b5c:	f001 f968 	bl	84e30 <__mcmp>
   83b60:	2800      	cmp	r0, #0
   83b62:	f340 823f 	ble.w	83fe4 <_dtoa_r+0xb54>
   83b66:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   83b6a:	1e6b      	subs	r3, r5, #1
   83b6c:	9904      	ldr	r1, [sp, #16]
   83b6e:	e004      	b.n	83b7a <_dtoa_r+0x6ea>
   83b70:	428b      	cmp	r3, r1
   83b72:	f000 81ae 	beq.w	83ed2 <_dtoa_r+0xa42>
   83b76:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   83b7a:	2a39      	cmp	r2, #57	; 0x39
   83b7c:	f103 0501 	add.w	r5, r3, #1
   83b80:	d0f6      	beq.n	83b70 <_dtoa_r+0x6e0>
   83b82:	3201      	adds	r2, #1
   83b84:	701a      	strb	r2, [r3, #0]
   83b86:	4641      	mov	r1, r8
   83b88:	4620      	mov	r0, r4
   83b8a:	f000 ff79 	bl	84a80 <_Bfree>
   83b8e:	2e00      	cmp	r6, #0
   83b90:	f43f ae3d 	beq.w	8380e <_dtoa_r+0x37e>
   83b94:	f1bb 0f00 	cmp.w	fp, #0
   83b98:	d005      	beq.n	83ba6 <_dtoa_r+0x716>
   83b9a:	45b3      	cmp	fp, r6
   83b9c:	d003      	beq.n	83ba6 <_dtoa_r+0x716>
   83b9e:	4659      	mov	r1, fp
   83ba0:	4620      	mov	r0, r4
   83ba2:	f000 ff6d 	bl	84a80 <_Bfree>
   83ba6:	4631      	mov	r1, r6
   83ba8:	4620      	mov	r0, r4
   83baa:	f000 ff69 	bl	84a80 <_Bfree>
   83bae:	e62e      	b.n	8380e <_dtoa_r+0x37e>
   83bb0:	2300      	movs	r3, #0
   83bb2:	930b      	str	r3, [sp, #44]	; 0x2c
   83bb4:	9b02      	ldr	r3, [sp, #8]
   83bb6:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83bb8:	4413      	add	r3, r2
   83bba:	930f      	str	r3, [sp, #60]	; 0x3c
   83bbc:	3301      	adds	r3, #1
   83bbe:	2b01      	cmp	r3, #1
   83bc0:	461f      	mov	r7, r3
   83bc2:	461e      	mov	r6, r3
   83bc4:	bfb8      	it	lt
   83bc6:	2701      	movlt	r7, #1
   83bc8:	9307      	str	r3, [sp, #28]
   83bca:	2100      	movs	r1, #0
   83bcc:	2f17      	cmp	r7, #23
   83bce:	6461      	str	r1, [r4, #68]	; 0x44
   83bd0:	d90a      	bls.n	83be8 <_dtoa_r+0x758>
   83bd2:	2201      	movs	r2, #1
   83bd4:	2304      	movs	r3, #4
   83bd6:	005b      	lsls	r3, r3, #1
   83bd8:	f103 0014 	add.w	r0, r3, #20
   83bdc:	4287      	cmp	r7, r0
   83bde:	4611      	mov	r1, r2
   83be0:	f102 0201 	add.w	r2, r2, #1
   83be4:	d2f7      	bcs.n	83bd6 <_dtoa_r+0x746>
   83be6:	6461      	str	r1, [r4, #68]	; 0x44
   83be8:	4620      	mov	r0, r4
   83bea:	f000 ff23 	bl	84a34 <_Balloc>
   83bee:	2e0e      	cmp	r6, #14
   83bf0:	9004      	str	r0, [sp, #16]
   83bf2:	6420      	str	r0, [r4, #64]	; 0x40
   83bf4:	f63f ad47 	bhi.w	83686 <_dtoa_r+0x1f6>
   83bf8:	2d00      	cmp	r5, #0
   83bfa:	f43f ad44 	beq.w	83686 <_dtoa_r+0x1f6>
   83bfe:	9902      	ldr	r1, [sp, #8]
   83c00:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   83c04:	2900      	cmp	r1, #0
   83c06:	f340 8203 	ble.w	84010 <_dtoa_r+0xb80>
   83c0a:	4bb9      	ldr	r3, [pc, #740]	; (83ef0 <_dtoa_r+0xa60>)
   83c0c:	f001 020f 	and.w	r2, r1, #15
   83c10:	110d      	asrs	r5, r1, #4
   83c12:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83c16:	06e9      	lsls	r1, r5, #27
   83c18:	e9d3 6700 	ldrd	r6, r7, [r3]
   83c1c:	f140 81af 	bpl.w	83f7e <_dtoa_r+0xaee>
   83c20:	4bb4      	ldr	r3, [pc, #720]	; (83ef4 <_dtoa_r+0xa64>)
   83c22:	4650      	mov	r0, sl
   83c24:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83c28:	4659      	mov	r1, fp
   83c2a:	f002 f95f 	bl	85eec <__aeabi_ddiv>
   83c2e:	f04f 0a03 	mov.w	sl, #3
   83c32:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   83c36:	f005 050f 	and.w	r5, r5, #15
   83c3a:	b18d      	cbz	r5, 83c60 <_dtoa_r+0x7d0>
   83c3c:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 83ef4 <_dtoa_r+0xa64>
   83c40:	07ea      	lsls	r2, r5, #31
   83c42:	d509      	bpl.n	83c58 <_dtoa_r+0x7c8>
   83c44:	e9d8 2300 	ldrd	r2, r3, [r8]
   83c48:	4630      	mov	r0, r6
   83c4a:	4639      	mov	r1, r7
   83c4c:	f002 f824 	bl	85c98 <__aeabi_dmul>
   83c50:	4606      	mov	r6, r0
   83c52:	460f      	mov	r7, r1
   83c54:	f10a 0a01 	add.w	sl, sl, #1
   83c58:	106d      	asrs	r5, r5, #1
   83c5a:	f108 0808 	add.w	r8, r8, #8
   83c5e:	d1ef      	bne.n	83c40 <_dtoa_r+0x7b0>
   83c60:	463b      	mov	r3, r7
   83c62:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   83c66:	4632      	mov	r2, r6
   83c68:	f002 f940 	bl	85eec <__aeabi_ddiv>
   83c6c:	4607      	mov	r7, r0
   83c6e:	4688      	mov	r8, r1
   83c70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83c72:	b143      	cbz	r3, 83c86 <_dtoa_r+0x7f6>
   83c74:	2200      	movs	r2, #0
   83c76:	4ba0      	ldr	r3, [pc, #640]	; (83ef8 <_dtoa_r+0xa68>)
   83c78:	4638      	mov	r0, r7
   83c7a:	4641      	mov	r1, r8
   83c7c:	f002 fa7e 	bl	8617c <__aeabi_dcmplt>
   83c80:	2800      	cmp	r0, #0
   83c82:	f040 8287 	bne.w	84194 <_dtoa_r+0xd04>
   83c86:	4650      	mov	r0, sl
   83c88:	f001 ffa0 	bl	85bcc <__aeabi_i2d>
   83c8c:	463a      	mov	r2, r7
   83c8e:	4643      	mov	r3, r8
   83c90:	f002 f802 	bl	85c98 <__aeabi_dmul>
   83c94:	4b99      	ldr	r3, [pc, #612]	; (83efc <_dtoa_r+0xa6c>)
   83c96:	2200      	movs	r2, #0
   83c98:	f001 fe4c 	bl	85934 <__adddf3>
   83c9c:	9b07      	ldr	r3, [sp, #28]
   83c9e:	4605      	mov	r5, r0
   83ca0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83ca4:	2b00      	cmp	r3, #0
   83ca6:	f000 813f 	beq.w	83f28 <_dtoa_r+0xa98>
   83caa:	9b02      	ldr	r3, [sp, #8]
   83cac:	9315      	str	r3, [sp, #84]	; 0x54
   83cae:	9b07      	ldr	r3, [sp, #28]
   83cb0:	9312      	str	r3, [sp, #72]	; 0x48
   83cb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83cb4:	2b00      	cmp	r3, #0
   83cb6:	f000 81fb 	beq.w	840b0 <_dtoa_r+0xc20>
   83cba:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83cbc:	4b8c      	ldr	r3, [pc, #560]	; (83ef0 <_dtoa_r+0xa60>)
   83cbe:	2000      	movs	r0, #0
   83cc0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83cc4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83cc8:	498d      	ldr	r1, [pc, #564]	; (83f00 <_dtoa_r+0xa70>)
   83cca:	f002 f90f 	bl	85eec <__aeabi_ddiv>
   83cce:	462a      	mov	r2, r5
   83cd0:	4633      	mov	r3, r6
   83cd2:	f001 fe2d 	bl	85930 <__aeabi_dsub>
   83cd6:	4682      	mov	sl, r0
   83cd8:	468b      	mov	fp, r1
   83cda:	4638      	mov	r0, r7
   83cdc:	4641      	mov	r1, r8
   83cde:	f002 fa8b 	bl	861f8 <__aeabi_d2iz>
   83ce2:	4605      	mov	r5, r0
   83ce4:	f001 ff72 	bl	85bcc <__aeabi_i2d>
   83ce8:	4602      	mov	r2, r0
   83cea:	460b      	mov	r3, r1
   83cec:	4638      	mov	r0, r7
   83cee:	4641      	mov	r1, r8
   83cf0:	f001 fe1e 	bl	85930 <__aeabi_dsub>
   83cf4:	3530      	adds	r5, #48	; 0x30
   83cf6:	fa5f f885 	uxtb.w	r8, r5
   83cfa:	9d04      	ldr	r5, [sp, #16]
   83cfc:	4606      	mov	r6, r0
   83cfe:	460f      	mov	r7, r1
   83d00:	f885 8000 	strb.w	r8, [r5]
   83d04:	4602      	mov	r2, r0
   83d06:	460b      	mov	r3, r1
   83d08:	4650      	mov	r0, sl
   83d0a:	4659      	mov	r1, fp
   83d0c:	3501      	adds	r5, #1
   83d0e:	f002 fa53 	bl	861b8 <__aeabi_dcmpgt>
   83d12:	2800      	cmp	r0, #0
   83d14:	d154      	bne.n	83dc0 <_dtoa_r+0x930>
   83d16:	4632      	mov	r2, r6
   83d18:	463b      	mov	r3, r7
   83d1a:	2000      	movs	r0, #0
   83d1c:	4976      	ldr	r1, [pc, #472]	; (83ef8 <_dtoa_r+0xa68>)
   83d1e:	f001 fe07 	bl	85930 <__aeabi_dsub>
   83d22:	4602      	mov	r2, r0
   83d24:	460b      	mov	r3, r1
   83d26:	4650      	mov	r0, sl
   83d28:	4659      	mov	r1, fp
   83d2a:	f002 fa45 	bl	861b8 <__aeabi_dcmpgt>
   83d2e:	2800      	cmp	r0, #0
   83d30:	f040 8270 	bne.w	84214 <_dtoa_r+0xd84>
   83d34:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83d36:	2a01      	cmp	r2, #1
   83d38:	f000 8112 	beq.w	83f60 <_dtoa_r+0xad0>
   83d3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83d3e:	9a04      	ldr	r2, [sp, #16]
   83d40:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83d44:	4413      	add	r3, r2
   83d46:	4699      	mov	r9, r3
   83d48:	e00f      	b.n	83d6a <_dtoa_r+0x8da>
   83d4a:	4632      	mov	r2, r6
   83d4c:	463b      	mov	r3, r7
   83d4e:	2000      	movs	r0, #0
   83d50:	4969      	ldr	r1, [pc, #420]	; (83ef8 <_dtoa_r+0xa68>)
   83d52:	f001 fded 	bl	85930 <__aeabi_dsub>
   83d56:	4652      	mov	r2, sl
   83d58:	465b      	mov	r3, fp
   83d5a:	f002 fa0f 	bl	8617c <__aeabi_dcmplt>
   83d5e:	2800      	cmp	r0, #0
   83d60:	f040 8256 	bne.w	84210 <_dtoa_r+0xd80>
   83d64:	454d      	cmp	r5, r9
   83d66:	f000 80f9 	beq.w	83f5c <_dtoa_r+0xacc>
   83d6a:	4650      	mov	r0, sl
   83d6c:	4659      	mov	r1, fp
   83d6e:	2200      	movs	r2, #0
   83d70:	4b64      	ldr	r3, [pc, #400]	; (83f04 <_dtoa_r+0xa74>)
   83d72:	f001 ff91 	bl	85c98 <__aeabi_dmul>
   83d76:	2200      	movs	r2, #0
   83d78:	4b62      	ldr	r3, [pc, #392]	; (83f04 <_dtoa_r+0xa74>)
   83d7a:	4682      	mov	sl, r0
   83d7c:	468b      	mov	fp, r1
   83d7e:	4630      	mov	r0, r6
   83d80:	4639      	mov	r1, r7
   83d82:	f001 ff89 	bl	85c98 <__aeabi_dmul>
   83d86:	460f      	mov	r7, r1
   83d88:	4606      	mov	r6, r0
   83d8a:	f002 fa35 	bl	861f8 <__aeabi_d2iz>
   83d8e:	4680      	mov	r8, r0
   83d90:	f001 ff1c 	bl	85bcc <__aeabi_i2d>
   83d94:	4602      	mov	r2, r0
   83d96:	460b      	mov	r3, r1
   83d98:	4630      	mov	r0, r6
   83d9a:	4639      	mov	r1, r7
   83d9c:	f001 fdc8 	bl	85930 <__aeabi_dsub>
   83da0:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83da4:	fa5f f888 	uxtb.w	r8, r8
   83da8:	f805 8b01 	strb.w	r8, [r5], #1
   83dac:	4652      	mov	r2, sl
   83dae:	465b      	mov	r3, fp
   83db0:	4606      	mov	r6, r0
   83db2:	460f      	mov	r7, r1
   83db4:	f002 f9e2 	bl	8617c <__aeabi_dcmplt>
   83db8:	2800      	cmp	r0, #0
   83dba:	d0c6      	beq.n	83d4a <_dtoa_r+0x8ba>
   83dbc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83dc0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83dc2:	9302      	str	r3, [sp, #8]
   83dc4:	e523      	b.n	8380e <_dtoa_r+0x37e>
   83dc6:	2300      	movs	r3, #0
   83dc8:	930b      	str	r3, [sp, #44]	; 0x2c
   83dca:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83dcc:	2b00      	cmp	r3, #0
   83dce:	f340 80dd 	ble.w	83f8c <_dtoa_r+0xafc>
   83dd2:	461f      	mov	r7, r3
   83dd4:	461e      	mov	r6, r3
   83dd6:	930f      	str	r3, [sp, #60]	; 0x3c
   83dd8:	9307      	str	r3, [sp, #28]
   83dda:	e6f6      	b.n	83bca <_dtoa_r+0x73a>
   83ddc:	2301      	movs	r3, #1
   83dde:	930b      	str	r3, [sp, #44]	; 0x2c
   83de0:	e7f3      	b.n	83dca <_dtoa_r+0x93a>
   83de2:	f1ba 0f00 	cmp.w	sl, #0
   83de6:	f47f ada7 	bne.w	83938 <_dtoa_r+0x4a8>
   83dea:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83dee:	2b00      	cmp	r3, #0
   83df0:	f47f adbc 	bne.w	8396c <_dtoa_r+0x4dc>
   83df4:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83df8:	0d3f      	lsrs	r7, r7, #20
   83dfa:	053f      	lsls	r7, r7, #20
   83dfc:	2f00      	cmp	r7, #0
   83dfe:	f000 820d 	beq.w	8421c <_dtoa_r+0xd8c>
   83e02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83e04:	3301      	adds	r3, #1
   83e06:	930a      	str	r3, [sp, #40]	; 0x28
   83e08:	9b08      	ldr	r3, [sp, #32]
   83e0a:	3301      	adds	r3, #1
   83e0c:	9308      	str	r3, [sp, #32]
   83e0e:	2301      	movs	r3, #1
   83e10:	930c      	str	r3, [sp, #48]	; 0x30
   83e12:	e5ad      	b.n	83970 <_dtoa_r+0x4e0>
   83e14:	9b07      	ldr	r3, [sp, #28]
   83e16:	2b00      	cmp	r3, #0
   83e18:	f73f ac48 	bgt.w	836ac <_dtoa_r+0x21c>
   83e1c:	f040 8222 	bne.w	84264 <_dtoa_r+0xdd4>
   83e20:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83e24:	2200      	movs	r2, #0
   83e26:	4b38      	ldr	r3, [pc, #224]	; (83f08 <_dtoa_r+0xa78>)
   83e28:	f001 ff36 	bl	85c98 <__aeabi_dmul>
   83e2c:	4652      	mov	r2, sl
   83e2e:	465b      	mov	r3, fp
   83e30:	f002 f9b8 	bl	861a4 <__aeabi_dcmpge>
   83e34:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83e38:	4646      	mov	r6, r8
   83e3a:	2800      	cmp	r0, #0
   83e3c:	d041      	beq.n	83ec2 <_dtoa_r+0xa32>
   83e3e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83e40:	9d04      	ldr	r5, [sp, #16]
   83e42:	43db      	mvns	r3, r3
   83e44:	9302      	str	r3, [sp, #8]
   83e46:	4641      	mov	r1, r8
   83e48:	4620      	mov	r0, r4
   83e4a:	f000 fe19 	bl	84a80 <_Bfree>
   83e4e:	2e00      	cmp	r6, #0
   83e50:	f43f acdd 	beq.w	8380e <_dtoa_r+0x37e>
   83e54:	e6a7      	b.n	83ba6 <_dtoa_r+0x716>
   83e56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83e58:	4649      	mov	r1, r9
   83e5a:	4620      	mov	r0, r4
   83e5c:	f000 ff48 	bl	84cf0 <__pow5mult>
   83e60:	4681      	mov	r9, r0
   83e62:	e557      	b.n	83914 <_dtoa_r+0x484>
   83e64:	9a14      	ldr	r2, [sp, #80]	; 0x50
   83e66:	2a00      	cmp	r2, #0
   83e68:	f000 8188 	beq.w	8417c <_dtoa_r+0xcec>
   83e6c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83e70:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83e72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83e74:	e4f2      	b.n	8385c <_dtoa_r+0x3cc>
   83e76:	f1ba 0f00 	cmp.w	sl, #0
   83e7a:	f47f ad77 	bne.w	8396c <_dtoa_r+0x4dc>
   83e7e:	e7b4      	b.n	83dea <_dtoa_r+0x95a>
   83e80:	f000 fe08 	bl	84a94 <__multadd>
   83e84:	4647      	mov	r7, r8
   83e86:	4606      	mov	r6, r0
   83e88:	4683      	mov	fp, r0
   83e8a:	e5c0      	b.n	83a0e <_dtoa_r+0x57e>
   83e8c:	4601      	mov	r1, r0
   83e8e:	4620      	mov	r0, r4
   83e90:	9308      	str	r3, [sp, #32]
   83e92:	f000 fdf5 	bl	84a80 <_Bfree>
   83e96:	2201      	movs	r2, #1
   83e98:	9b08      	ldr	r3, [sp, #32]
   83e9a:	e5e2      	b.n	83a62 <_dtoa_r+0x5d2>
   83e9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83e9e:	2b02      	cmp	r3, #2
   83ea0:	f77f ad98 	ble.w	839d4 <_dtoa_r+0x544>
   83ea4:	9b07      	ldr	r3, [sp, #28]
   83ea6:	2b00      	cmp	r3, #0
   83ea8:	d1c9      	bne.n	83e3e <_dtoa_r+0x9ae>
   83eaa:	4641      	mov	r1, r8
   83eac:	2205      	movs	r2, #5
   83eae:	4620      	mov	r0, r4
   83eb0:	f000 fdf0 	bl	84a94 <__multadd>
   83eb4:	4601      	mov	r1, r0
   83eb6:	4680      	mov	r8, r0
   83eb8:	4648      	mov	r0, r9
   83eba:	f000 ffb9 	bl	84e30 <__mcmp>
   83ebe:	2800      	cmp	r0, #0
   83ec0:	ddbd      	ble.n	83e3e <_dtoa_r+0x9ae>
   83ec2:	2331      	movs	r3, #49	; 0x31
   83ec4:	9a02      	ldr	r2, [sp, #8]
   83ec6:	9904      	ldr	r1, [sp, #16]
   83ec8:	3201      	adds	r2, #1
   83eca:	9202      	str	r2, [sp, #8]
   83ecc:	700b      	strb	r3, [r1, #0]
   83ece:	1c4d      	adds	r5, r1, #1
   83ed0:	e7b9      	b.n	83e46 <_dtoa_r+0x9b6>
   83ed2:	2331      	movs	r3, #49	; 0x31
   83ed4:	9a02      	ldr	r2, [sp, #8]
   83ed6:	3201      	adds	r2, #1
   83ed8:	9202      	str	r2, [sp, #8]
   83eda:	9a04      	ldr	r2, [sp, #16]
   83edc:	7013      	strb	r3, [r2, #0]
   83ede:	e652      	b.n	83b86 <_dtoa_r+0x6f6>
   83ee0:	2301      	movs	r3, #1
   83ee2:	930b      	str	r3, [sp, #44]	; 0x2c
   83ee4:	e666      	b.n	83bb4 <_dtoa_r+0x724>
   83ee6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83eea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83eec:	e48f      	b.n	8380e <_dtoa_r+0x37e>
   83eee:	bf00      	nop
   83ef0:	00086820 	.word	0x00086820
   83ef4:	000867f8 	.word	0x000867f8
   83ef8:	3ff00000 	.word	0x3ff00000
   83efc:	401c0000 	.word	0x401c0000
   83f00:	3fe00000 	.word	0x3fe00000
   83f04:	40240000 	.word	0x40240000
   83f08:	40140000 	.word	0x40140000
   83f0c:	4650      	mov	r0, sl
   83f0e:	f001 fe5d 	bl	85bcc <__aeabi_i2d>
   83f12:	463a      	mov	r2, r7
   83f14:	4643      	mov	r3, r8
   83f16:	f001 febf 	bl	85c98 <__aeabi_dmul>
   83f1a:	2200      	movs	r2, #0
   83f1c:	4bc1      	ldr	r3, [pc, #772]	; (84224 <_dtoa_r+0xd94>)
   83f1e:	f001 fd09 	bl	85934 <__adddf3>
   83f22:	4605      	mov	r5, r0
   83f24:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83f28:	4641      	mov	r1, r8
   83f2a:	2200      	movs	r2, #0
   83f2c:	4bbe      	ldr	r3, [pc, #760]	; (84228 <_dtoa_r+0xd98>)
   83f2e:	4638      	mov	r0, r7
   83f30:	f001 fcfe 	bl	85930 <__aeabi_dsub>
   83f34:	462a      	mov	r2, r5
   83f36:	4633      	mov	r3, r6
   83f38:	4682      	mov	sl, r0
   83f3a:	468b      	mov	fp, r1
   83f3c:	f002 f93c 	bl	861b8 <__aeabi_dcmpgt>
   83f40:	4680      	mov	r8, r0
   83f42:	2800      	cmp	r0, #0
   83f44:	f040 8110 	bne.w	84168 <_dtoa_r+0xcd8>
   83f48:	462a      	mov	r2, r5
   83f4a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   83f4e:	4650      	mov	r0, sl
   83f50:	4659      	mov	r1, fp
   83f52:	f002 f913 	bl	8617c <__aeabi_dcmplt>
   83f56:	b118      	cbz	r0, 83f60 <_dtoa_r+0xad0>
   83f58:	4646      	mov	r6, r8
   83f5a:	e770      	b.n	83e3e <_dtoa_r+0x9ae>
   83f5c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83f60:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   83f64:	f7ff bb8f 	b.w	83686 <_dtoa_r+0x1f6>
   83f68:	9804      	ldr	r0, [sp, #16]
   83f6a:	f7ff bac0 	b.w	834ee <_dtoa_r+0x5e>
   83f6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83f70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83f72:	1afb      	subs	r3, r7, r3
   83f74:	441a      	add	r2, r3
   83f76:	970c      	str	r7, [sp, #48]	; 0x30
   83f78:	920d      	str	r2, [sp, #52]	; 0x34
   83f7a:	2700      	movs	r7, #0
   83f7c:	e468      	b.n	83850 <_dtoa_r+0x3c0>
   83f7e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   83f82:	f04f 0a02 	mov.w	sl, #2
   83f86:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   83f8a:	e656      	b.n	83c3a <_dtoa_r+0x7aa>
   83f8c:	2100      	movs	r1, #0
   83f8e:	2301      	movs	r3, #1
   83f90:	4620      	mov	r0, r4
   83f92:	6461      	str	r1, [r4, #68]	; 0x44
   83f94:	9325      	str	r3, [sp, #148]	; 0x94
   83f96:	f000 fd4d 	bl	84a34 <_Balloc>
   83f9a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83f9c:	9004      	str	r0, [sp, #16]
   83f9e:	9307      	str	r3, [sp, #28]
   83fa0:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83fa2:	6420      	str	r0, [r4, #64]	; 0x40
   83fa4:	930f      	str	r3, [sp, #60]	; 0x3c
   83fa6:	e627      	b.n	83bf8 <_dtoa_r+0x768>
   83fa8:	2a00      	cmp	r2, #0
   83faa:	46d0      	mov	r8, sl
   83fac:	f8cd b020 	str.w	fp, [sp, #32]
   83fb0:	469a      	mov	sl, r3
   83fb2:	dd11      	ble.n	83fd8 <_dtoa_r+0xb48>
   83fb4:	4649      	mov	r1, r9
   83fb6:	2201      	movs	r2, #1
   83fb8:	4620      	mov	r0, r4
   83fba:	f000 fee9 	bl	84d90 <__lshift>
   83fbe:	4641      	mov	r1, r8
   83fc0:	4681      	mov	r9, r0
   83fc2:	f000 ff35 	bl	84e30 <__mcmp>
   83fc6:	2800      	cmp	r0, #0
   83fc8:	f340 8145 	ble.w	84256 <_dtoa_r+0xdc6>
   83fcc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83fd0:	f000 8105 	beq.w	841de <_dtoa_r+0xd4e>
   83fd4:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83fd8:	46b3      	mov	fp, r6
   83fda:	f887 a000 	strb.w	sl, [r7]
   83fde:	1c7d      	adds	r5, r7, #1
   83fe0:	9e08      	ldr	r6, [sp, #32]
   83fe2:	e5d0      	b.n	83b86 <_dtoa_r+0x6f6>
   83fe4:	d104      	bne.n	83ff0 <_dtoa_r+0xb60>
   83fe6:	f01a 0f01 	tst.w	sl, #1
   83fea:	d001      	beq.n	83ff0 <_dtoa_r+0xb60>
   83fec:	e5bb      	b.n	83b66 <_dtoa_r+0x6d6>
   83fee:	4615      	mov	r5, r2
   83ff0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83ff4:	1e6a      	subs	r2, r5, #1
   83ff6:	2b30      	cmp	r3, #48	; 0x30
   83ff8:	d0f9      	beq.n	83fee <_dtoa_r+0xb5e>
   83ffa:	e5c4      	b.n	83b86 <_dtoa_r+0x6f6>
   83ffc:	2230      	movs	r2, #48	; 0x30
   83ffe:	9904      	ldr	r1, [sp, #16]
   84000:	700a      	strb	r2, [r1, #0]
   84002:	9a02      	ldr	r2, [sp, #8]
   84004:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84008:	3201      	adds	r2, #1
   8400a:	9202      	str	r2, [sp, #8]
   8400c:	f7ff bbfb 	b.w	83806 <_dtoa_r+0x376>
   84010:	f000 80bb 	beq.w	8418a <_dtoa_r+0xcfa>
   84014:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84018:	9b02      	ldr	r3, [sp, #8]
   8401a:	f04f 0a02 	mov.w	sl, #2
   8401e:	425d      	negs	r5, r3
   84020:	4b82      	ldr	r3, [pc, #520]	; (8422c <_dtoa_r+0xd9c>)
   84022:	f005 020f 	and.w	r2, r5, #15
   84026:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8402a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8402e:	f001 fe33 	bl	85c98 <__aeabi_dmul>
   84032:	112d      	asrs	r5, r5, #4
   84034:	4607      	mov	r7, r0
   84036:	4688      	mov	r8, r1
   84038:	f43f ae1a 	beq.w	83c70 <_dtoa_r+0x7e0>
   8403c:	4e7c      	ldr	r6, [pc, #496]	; (84230 <_dtoa_r+0xda0>)
   8403e:	07eb      	lsls	r3, r5, #31
   84040:	d509      	bpl.n	84056 <_dtoa_r+0xbc6>
   84042:	e9d6 2300 	ldrd	r2, r3, [r6]
   84046:	4638      	mov	r0, r7
   84048:	4641      	mov	r1, r8
   8404a:	f001 fe25 	bl	85c98 <__aeabi_dmul>
   8404e:	4607      	mov	r7, r0
   84050:	4688      	mov	r8, r1
   84052:	f10a 0a01 	add.w	sl, sl, #1
   84056:	106d      	asrs	r5, r5, #1
   84058:	f106 0608 	add.w	r6, r6, #8
   8405c:	d1ef      	bne.n	8403e <_dtoa_r+0xbae>
   8405e:	e607      	b.n	83c70 <_dtoa_r+0x7e0>
   84060:	6871      	ldr	r1, [r6, #4]
   84062:	4620      	mov	r0, r4
   84064:	f000 fce6 	bl	84a34 <_Balloc>
   84068:	4605      	mov	r5, r0
   8406a:	6933      	ldr	r3, [r6, #16]
   8406c:	f106 010c 	add.w	r1, r6, #12
   84070:	3302      	adds	r3, #2
   84072:	009a      	lsls	r2, r3, #2
   84074:	300c      	adds	r0, #12
   84076:	f000 fc5b 	bl	84930 <memcpy>
   8407a:	4629      	mov	r1, r5
   8407c:	2201      	movs	r2, #1
   8407e:	4620      	mov	r0, r4
   84080:	f000 fe86 	bl	84d90 <__lshift>
   84084:	9008      	str	r0, [sp, #32]
   84086:	e4b6      	b.n	839f6 <_dtoa_r+0x566>
   84088:	2b39      	cmp	r3, #57	; 0x39
   8408a:	f8cd b020 	str.w	fp, [sp, #32]
   8408e:	46d0      	mov	r8, sl
   84090:	f000 80a5 	beq.w	841de <_dtoa_r+0xd4e>
   84094:	f103 0a01 	add.w	sl, r3, #1
   84098:	46b3      	mov	fp, r6
   8409a:	f887 a000 	strb.w	sl, [r7]
   8409e:	1c7d      	adds	r5, r7, #1
   840a0:	9e08      	ldr	r6, [sp, #32]
   840a2:	e570      	b.n	83b86 <_dtoa_r+0x6f6>
   840a4:	465a      	mov	r2, fp
   840a6:	46d0      	mov	r8, sl
   840a8:	46b3      	mov	fp, r6
   840aa:	469a      	mov	sl, r3
   840ac:	4616      	mov	r6, r2
   840ae:	e54e      	b.n	83b4e <_dtoa_r+0x6be>
   840b0:	9812      	ldr	r0, [sp, #72]	; 0x48
   840b2:	495e      	ldr	r1, [pc, #376]	; (8422c <_dtoa_r+0xd9c>)
   840b4:	462a      	mov	r2, r5
   840b6:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   840ba:	4633      	mov	r3, r6
   840bc:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   840c0:	f001 fdea 	bl	85c98 <__aeabi_dmul>
   840c4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   840c8:	4638      	mov	r0, r7
   840ca:	4641      	mov	r1, r8
   840cc:	f002 f894 	bl	861f8 <__aeabi_d2iz>
   840d0:	4605      	mov	r5, r0
   840d2:	f001 fd7b 	bl	85bcc <__aeabi_i2d>
   840d6:	4602      	mov	r2, r0
   840d8:	460b      	mov	r3, r1
   840da:	4638      	mov	r0, r7
   840dc:	4641      	mov	r1, r8
   840de:	f001 fc27 	bl	85930 <__aeabi_dsub>
   840e2:	4606      	mov	r6, r0
   840e4:	9812      	ldr	r0, [sp, #72]	; 0x48
   840e6:	9a04      	ldr	r2, [sp, #16]
   840e8:	3530      	adds	r5, #48	; 0x30
   840ea:	2801      	cmp	r0, #1
   840ec:	7015      	strb	r5, [r2, #0]
   840ee:	460f      	mov	r7, r1
   840f0:	f102 0501 	add.w	r5, r2, #1
   840f4:	d026      	beq.n	84144 <_dtoa_r+0xcb4>
   840f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
   840f8:	9a04      	ldr	r2, [sp, #16]
   840fa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   840fe:	4413      	add	r3, r2
   84100:	f04f 0a00 	mov.w	sl, #0
   84104:	4699      	mov	r9, r3
   84106:	f8df b130 	ldr.w	fp, [pc, #304]	; 84238 <_dtoa_r+0xda8>
   8410a:	4652      	mov	r2, sl
   8410c:	465b      	mov	r3, fp
   8410e:	4630      	mov	r0, r6
   84110:	4639      	mov	r1, r7
   84112:	f001 fdc1 	bl	85c98 <__aeabi_dmul>
   84116:	460f      	mov	r7, r1
   84118:	4606      	mov	r6, r0
   8411a:	f002 f86d 	bl	861f8 <__aeabi_d2iz>
   8411e:	4680      	mov	r8, r0
   84120:	f001 fd54 	bl	85bcc <__aeabi_i2d>
   84124:	4602      	mov	r2, r0
   84126:	460b      	mov	r3, r1
   84128:	4630      	mov	r0, r6
   8412a:	4639      	mov	r1, r7
   8412c:	f001 fc00 	bl	85930 <__aeabi_dsub>
   84130:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84134:	f805 8b01 	strb.w	r8, [r5], #1
   84138:	454d      	cmp	r5, r9
   8413a:	4606      	mov	r6, r0
   8413c:	460f      	mov	r7, r1
   8413e:	d1e4      	bne.n	8410a <_dtoa_r+0xc7a>
   84140:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84144:	2200      	movs	r2, #0
   84146:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8414a:	4b3a      	ldr	r3, [pc, #232]	; (84234 <_dtoa_r+0xda4>)
   8414c:	f001 fbf2 	bl	85934 <__adddf3>
   84150:	4632      	mov	r2, r6
   84152:	463b      	mov	r3, r7
   84154:	f002 f812 	bl	8617c <__aeabi_dcmplt>
   84158:	2800      	cmp	r0, #0
   8415a:	d046      	beq.n	841ea <_dtoa_r+0xd5a>
   8415c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8415e:	9302      	str	r3, [sp, #8]
   84160:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84164:	f7ff bb42 	b.w	837ec <_dtoa_r+0x35c>
   84168:	f04f 0800 	mov.w	r8, #0
   8416c:	4646      	mov	r6, r8
   8416e:	e6a8      	b.n	83ec2 <_dtoa_r+0xa32>
   84170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84172:	9a07      	ldr	r2, [sp, #28]
   84174:	1a9d      	subs	r5, r3, r2
   84176:	2300      	movs	r3, #0
   84178:	f7ff bb70 	b.w	8385c <_dtoa_r+0x3cc>
   8417c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   8417e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84180:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   84184:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84186:	f7ff bb69 	b.w	8385c <_dtoa_r+0x3cc>
   8418a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   8418e:	f04f 0a02 	mov.w	sl, #2
   84192:	e56d      	b.n	83c70 <_dtoa_r+0x7e0>
   84194:	9b07      	ldr	r3, [sp, #28]
   84196:	2b00      	cmp	r3, #0
   84198:	f43f aeb8 	beq.w	83f0c <_dtoa_r+0xa7c>
   8419c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8419e:	2b00      	cmp	r3, #0
   841a0:	f77f aede 	ble.w	83f60 <_dtoa_r+0xad0>
   841a4:	2200      	movs	r2, #0
   841a6:	4b24      	ldr	r3, [pc, #144]	; (84238 <_dtoa_r+0xda8>)
   841a8:	4638      	mov	r0, r7
   841aa:	4641      	mov	r1, r8
   841ac:	f001 fd74 	bl	85c98 <__aeabi_dmul>
   841b0:	4607      	mov	r7, r0
   841b2:	4688      	mov	r8, r1
   841b4:	f10a 0001 	add.w	r0, sl, #1
   841b8:	f001 fd08 	bl	85bcc <__aeabi_i2d>
   841bc:	463a      	mov	r2, r7
   841be:	4643      	mov	r3, r8
   841c0:	f001 fd6a 	bl	85c98 <__aeabi_dmul>
   841c4:	2200      	movs	r2, #0
   841c6:	4b17      	ldr	r3, [pc, #92]	; (84224 <_dtoa_r+0xd94>)
   841c8:	f001 fbb4 	bl	85934 <__adddf3>
   841cc:	9a02      	ldr	r2, [sp, #8]
   841ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   841d0:	3a01      	subs	r2, #1
   841d2:	4605      	mov	r5, r0
   841d4:	9215      	str	r2, [sp, #84]	; 0x54
   841d6:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   841da:	9312      	str	r3, [sp, #72]	; 0x48
   841dc:	e569      	b.n	83cb2 <_dtoa_r+0x822>
   841de:	2239      	movs	r2, #57	; 0x39
   841e0:	46b3      	mov	fp, r6
   841e2:	703a      	strb	r2, [r7, #0]
   841e4:	9e08      	ldr	r6, [sp, #32]
   841e6:	1c7d      	adds	r5, r7, #1
   841e8:	e4bf      	b.n	83b6a <_dtoa_r+0x6da>
   841ea:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   841ee:	2000      	movs	r0, #0
   841f0:	4910      	ldr	r1, [pc, #64]	; (84234 <_dtoa_r+0xda4>)
   841f2:	f001 fb9d 	bl	85930 <__aeabi_dsub>
   841f6:	4632      	mov	r2, r6
   841f8:	463b      	mov	r3, r7
   841fa:	f001 ffdd 	bl	861b8 <__aeabi_dcmpgt>
   841fe:	b908      	cbnz	r0, 84204 <_dtoa_r+0xd74>
   84200:	e6ae      	b.n	83f60 <_dtoa_r+0xad0>
   84202:	4615      	mov	r5, r2
   84204:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84208:	1e6a      	subs	r2, r5, #1
   8420a:	2b30      	cmp	r3, #48	; 0x30
   8420c:	d0f9      	beq.n	84202 <_dtoa_r+0xd72>
   8420e:	e5d7      	b.n	83dc0 <_dtoa_r+0x930>
   84210:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84214:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84216:	9302      	str	r3, [sp, #8]
   84218:	f7ff bae8 	b.w	837ec <_dtoa_r+0x35c>
   8421c:	970c      	str	r7, [sp, #48]	; 0x30
   8421e:	f7ff bba7 	b.w	83970 <_dtoa_r+0x4e0>
   84222:	bf00      	nop
   84224:	401c0000 	.word	0x401c0000
   84228:	40140000 	.word	0x40140000
   8422c:	00086820 	.word	0x00086820
   84230:	000867f8 	.word	0x000867f8
   84234:	3fe00000 	.word	0x3fe00000
   84238:	40240000 	.word	0x40240000
   8423c:	2b39      	cmp	r3, #57	; 0x39
   8423e:	f8cd b020 	str.w	fp, [sp, #32]
   84242:	46d0      	mov	r8, sl
   84244:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84248:	469a      	mov	sl, r3
   8424a:	d0c8      	beq.n	841de <_dtoa_r+0xd4e>
   8424c:	f1bb 0f00 	cmp.w	fp, #0
   84250:	f73f aec0 	bgt.w	83fd4 <_dtoa_r+0xb44>
   84254:	e6c0      	b.n	83fd8 <_dtoa_r+0xb48>
   84256:	f47f aebf 	bne.w	83fd8 <_dtoa_r+0xb48>
   8425a:	f01a 0f01 	tst.w	sl, #1
   8425e:	f43f aebb 	beq.w	83fd8 <_dtoa_r+0xb48>
   84262:	e6b3      	b.n	83fcc <_dtoa_r+0xb3c>
   84264:	f04f 0800 	mov.w	r8, #0
   84268:	4646      	mov	r6, r8
   8426a:	e5e8      	b.n	83e3e <_dtoa_r+0x9ae>
   8426c:	4631      	mov	r1, r6
   8426e:	2300      	movs	r3, #0
   84270:	220a      	movs	r2, #10
   84272:	4620      	mov	r0, r4
   84274:	f000 fc0e 	bl	84a94 <__multadd>
   84278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8427a:	4606      	mov	r6, r0
   8427c:	2b00      	cmp	r3, #0
   8427e:	dd07      	ble.n	84290 <_dtoa_r+0xe00>
   84280:	9307      	str	r3, [sp, #28]
   84282:	f7ff bbab 	b.w	839dc <_dtoa_r+0x54c>
   84286:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84288:	2b02      	cmp	r3, #2
   8428a:	dc1f      	bgt.n	842cc <_dtoa_r+0xe3c>
   8428c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8428e:	e43c      	b.n	83b0a <_dtoa_r+0x67a>
   84290:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84292:	2b02      	cmp	r3, #2
   84294:	dc1a      	bgt.n	842cc <_dtoa_r+0xe3c>
   84296:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84298:	e7f2      	b.n	84280 <_dtoa_r+0xdf0>
   8429a:	f43f ab81 	beq.w	839a0 <_dtoa_r+0x510>
   8429e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   842a2:	e411      	b.n	83ac8 <_dtoa_r+0x638>
   842a4:	2500      	movs	r5, #0
   842a6:	4620      	mov	r0, r4
   842a8:	6465      	str	r5, [r4, #68]	; 0x44
   842aa:	4629      	mov	r1, r5
   842ac:	f000 fbc2 	bl	84a34 <_Balloc>
   842b0:	f04f 33ff 	mov.w	r3, #4294967295
   842b4:	9307      	str	r3, [sp, #28]
   842b6:	930f      	str	r3, [sp, #60]	; 0x3c
   842b8:	2301      	movs	r3, #1
   842ba:	9004      	str	r0, [sp, #16]
   842bc:	9525      	str	r5, [sp, #148]	; 0x94
   842be:	6420      	str	r0, [r4, #64]	; 0x40
   842c0:	930b      	str	r3, [sp, #44]	; 0x2c
   842c2:	f7ff b9e0 	b.w	83686 <_dtoa_r+0x1f6>
   842c6:	2501      	movs	r5, #1
   842c8:	f7ff b9a8 	b.w	8361c <_dtoa_r+0x18c>
   842cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   842ce:	9307      	str	r3, [sp, #28]
   842d0:	e5e8      	b.n	83ea4 <_dtoa_r+0xa14>
   842d2:	bf00      	nop

000842d4 <__libc_fini_array>:
   842d4:	b538      	push	{r3, r4, r5, lr}
   842d6:	4c0a      	ldr	r4, [pc, #40]	; (84300 <__libc_fini_array+0x2c>)
   842d8:	4d0a      	ldr	r5, [pc, #40]	; (84304 <__libc_fini_array+0x30>)
   842da:	1b64      	subs	r4, r4, r5
   842dc:	10a4      	asrs	r4, r4, #2
   842de:	d00a      	beq.n	842f6 <__libc_fini_array+0x22>
   842e0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   842e4:	3b01      	subs	r3, #1
   842e6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   842ea:	3c01      	subs	r4, #1
   842ec:	f855 3904 	ldr.w	r3, [r5], #-4
   842f0:	4798      	blx	r3
   842f2:	2c00      	cmp	r4, #0
   842f4:	d1f9      	bne.n	842ea <__libc_fini_array+0x16>
   842f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   842fa:	f002 bb87 	b.w	86a0c <_fini>
   842fe:	bf00      	nop
   84300:	00086a1c 	.word	0x00086a1c
   84304:	00086a18 	.word	0x00086a18

00084308 <__locale_ctype_ptr_l>:
   84308:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   8430c:	4770      	bx	lr
   8430e:	bf00      	nop

00084310 <_localeconv_r>:
   84310:	4a04      	ldr	r2, [pc, #16]	; (84324 <_localeconv_r+0x14>)
   84312:	4b05      	ldr	r3, [pc, #20]	; (84328 <_localeconv_r+0x18>)
   84314:	6812      	ldr	r2, [r2, #0]
   84316:	6b50      	ldr	r0, [r2, #52]	; 0x34
   84318:	2800      	cmp	r0, #0
   8431a:	bf08      	it	eq
   8431c:	4618      	moveq	r0, r3
   8431e:	30f0      	adds	r0, #240	; 0xf0
   84320:	4770      	bx	lr
   84322:	bf00      	nop
   84324:	200705a0 	.word	0x200705a0
   84328:	200709d4 	.word	0x200709d4

0008432c <__retarget_lock_acquire_recursive>:
   8432c:	4770      	bx	lr
   8432e:	bf00      	nop

00084330 <__retarget_lock_release_recursive>:
   84330:	4770      	bx	lr
   84332:	bf00      	nop

00084334 <_malloc_r>:
   84334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84338:	f101 060b 	add.w	r6, r1, #11
   8433c:	2e16      	cmp	r6, #22
   8433e:	b083      	sub	sp, #12
   84340:	4605      	mov	r5, r0
   84342:	f240 809e 	bls.w	84482 <_malloc_r+0x14e>
   84346:	f036 0607 	bics.w	r6, r6, #7
   8434a:	f100 80bd 	bmi.w	844c8 <_malloc_r+0x194>
   8434e:	42b1      	cmp	r1, r6
   84350:	f200 80ba 	bhi.w	844c8 <_malloc_r+0x194>
   84354:	f000 fb62 	bl	84a1c <__malloc_lock>
   84358:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   8435c:	f0c0 8285 	bcc.w	8486a <_malloc_r+0x536>
   84360:	0a73      	lsrs	r3, r6, #9
   84362:	f000 80b8 	beq.w	844d6 <_malloc_r+0x1a2>
   84366:	2b04      	cmp	r3, #4
   84368:	f200 816c 	bhi.w	84644 <_malloc_r+0x310>
   8436c:	09b3      	lsrs	r3, r6, #6
   8436e:	f103 0039 	add.w	r0, r3, #57	; 0x39
   84372:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   84376:	00c1      	lsls	r1, r0, #3
   84378:	4fb8      	ldr	r7, [pc, #736]	; (8465c <_malloc_r+0x328>)
   8437a:	4439      	add	r1, r7
   8437c:	684c      	ldr	r4, [r1, #4]
   8437e:	3908      	subs	r1, #8
   84380:	42a1      	cmp	r1, r4
   84382:	d106      	bne.n	84392 <_malloc_r+0x5e>
   84384:	e00c      	b.n	843a0 <_malloc_r+0x6c>
   84386:	2a00      	cmp	r2, #0
   84388:	f280 80ab 	bge.w	844e2 <_malloc_r+0x1ae>
   8438c:	68e4      	ldr	r4, [r4, #12]
   8438e:	42a1      	cmp	r1, r4
   84390:	d006      	beq.n	843a0 <_malloc_r+0x6c>
   84392:	6863      	ldr	r3, [r4, #4]
   84394:	f023 0303 	bic.w	r3, r3, #3
   84398:	1b9a      	subs	r2, r3, r6
   8439a:	2a0f      	cmp	r2, #15
   8439c:	ddf3      	ble.n	84386 <_malloc_r+0x52>
   8439e:	4670      	mov	r0, lr
   843a0:	693c      	ldr	r4, [r7, #16]
   843a2:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 84670 <_malloc_r+0x33c>
   843a6:	4574      	cmp	r4, lr
   843a8:	f000 819e 	beq.w	846e8 <_malloc_r+0x3b4>
   843ac:	6863      	ldr	r3, [r4, #4]
   843ae:	f023 0303 	bic.w	r3, r3, #3
   843b2:	1b9a      	subs	r2, r3, r6
   843b4:	2a0f      	cmp	r2, #15
   843b6:	f300 8183 	bgt.w	846c0 <_malloc_r+0x38c>
   843ba:	2a00      	cmp	r2, #0
   843bc:	f8c7 e014 	str.w	lr, [r7, #20]
   843c0:	f8c7 e010 	str.w	lr, [r7, #16]
   843c4:	f280 8091 	bge.w	844ea <_malloc_r+0x1b6>
   843c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   843cc:	f080 8154 	bcs.w	84678 <_malloc_r+0x344>
   843d0:	2201      	movs	r2, #1
   843d2:	08db      	lsrs	r3, r3, #3
   843d4:	6879      	ldr	r1, [r7, #4]
   843d6:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   843da:	4413      	add	r3, r2
   843dc:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   843e0:	fa02 f20c 	lsl.w	r2, r2, ip
   843e4:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   843e8:	430a      	orrs	r2, r1
   843ea:	f1ac 0108 	sub.w	r1, ip, #8
   843ee:	60e1      	str	r1, [r4, #12]
   843f0:	f8c4 8008 	str.w	r8, [r4, #8]
   843f4:	607a      	str	r2, [r7, #4]
   843f6:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   843fa:	f8c8 400c 	str.w	r4, [r8, #12]
   843fe:	2401      	movs	r4, #1
   84400:	1083      	asrs	r3, r0, #2
   84402:	409c      	lsls	r4, r3
   84404:	4294      	cmp	r4, r2
   84406:	d87d      	bhi.n	84504 <_malloc_r+0x1d0>
   84408:	4214      	tst	r4, r2
   8440a:	d106      	bne.n	8441a <_malloc_r+0xe6>
   8440c:	f020 0003 	bic.w	r0, r0, #3
   84410:	0064      	lsls	r4, r4, #1
   84412:	4214      	tst	r4, r2
   84414:	f100 0004 	add.w	r0, r0, #4
   84418:	d0fa      	beq.n	84410 <_malloc_r+0xdc>
   8441a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   8441e:	46cc      	mov	ip, r9
   84420:	4680      	mov	r8, r0
   84422:	f8dc 300c 	ldr.w	r3, [ip, #12]
   84426:	459c      	cmp	ip, r3
   84428:	d107      	bne.n	8443a <_malloc_r+0x106>
   8442a:	e15f      	b.n	846ec <_malloc_r+0x3b8>
   8442c:	2a00      	cmp	r2, #0
   8442e:	f280 816d 	bge.w	8470c <_malloc_r+0x3d8>
   84432:	68db      	ldr	r3, [r3, #12]
   84434:	459c      	cmp	ip, r3
   84436:	f000 8159 	beq.w	846ec <_malloc_r+0x3b8>
   8443a:	6859      	ldr	r1, [r3, #4]
   8443c:	f021 0103 	bic.w	r1, r1, #3
   84440:	1b8a      	subs	r2, r1, r6
   84442:	2a0f      	cmp	r2, #15
   84444:	ddf2      	ble.n	8442c <_malloc_r+0xf8>
   84446:	68dc      	ldr	r4, [r3, #12]
   84448:	f8d3 c008 	ldr.w	ip, [r3, #8]
   8444c:	f046 0801 	orr.w	r8, r6, #1
   84450:	4628      	mov	r0, r5
   84452:	441e      	add	r6, r3
   84454:	f042 0501 	orr.w	r5, r2, #1
   84458:	f8c3 8004 	str.w	r8, [r3, #4]
   8445c:	f8cc 400c 	str.w	r4, [ip, #12]
   84460:	f8c4 c008 	str.w	ip, [r4, #8]
   84464:	617e      	str	r6, [r7, #20]
   84466:	613e      	str	r6, [r7, #16]
   84468:	f8c6 e00c 	str.w	lr, [r6, #12]
   8446c:	f8c6 e008 	str.w	lr, [r6, #8]
   84470:	6075      	str	r5, [r6, #4]
   84472:	505a      	str	r2, [r3, r1]
   84474:	9300      	str	r3, [sp, #0]
   84476:	f000 fad7 	bl	84a28 <__malloc_unlock>
   8447a:	9b00      	ldr	r3, [sp, #0]
   8447c:	f103 0408 	add.w	r4, r3, #8
   84480:	e01e      	b.n	844c0 <_malloc_r+0x18c>
   84482:	2910      	cmp	r1, #16
   84484:	d820      	bhi.n	844c8 <_malloc_r+0x194>
   84486:	f000 fac9 	bl	84a1c <__malloc_lock>
   8448a:	2610      	movs	r6, #16
   8448c:	2318      	movs	r3, #24
   8448e:	2002      	movs	r0, #2
   84490:	4f72      	ldr	r7, [pc, #456]	; (8465c <_malloc_r+0x328>)
   84492:	443b      	add	r3, r7
   84494:	685c      	ldr	r4, [r3, #4]
   84496:	f1a3 0208 	sub.w	r2, r3, #8
   8449a:	4294      	cmp	r4, r2
   8449c:	f000 812f 	beq.w	846fe <_malloc_r+0x3ca>
   844a0:	6863      	ldr	r3, [r4, #4]
   844a2:	68e1      	ldr	r1, [r4, #12]
   844a4:	f023 0303 	bic.w	r3, r3, #3
   844a8:	4423      	add	r3, r4
   844aa:	685a      	ldr	r2, [r3, #4]
   844ac:	68a6      	ldr	r6, [r4, #8]
   844ae:	f042 0201 	orr.w	r2, r2, #1
   844b2:	60f1      	str	r1, [r6, #12]
   844b4:	4628      	mov	r0, r5
   844b6:	608e      	str	r6, [r1, #8]
   844b8:	605a      	str	r2, [r3, #4]
   844ba:	f000 fab5 	bl	84a28 <__malloc_unlock>
   844be:	3408      	adds	r4, #8
   844c0:	4620      	mov	r0, r4
   844c2:	b003      	add	sp, #12
   844c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   844c8:	2400      	movs	r4, #0
   844ca:	230c      	movs	r3, #12
   844cc:	4620      	mov	r0, r4
   844ce:	602b      	str	r3, [r5, #0]
   844d0:	b003      	add	sp, #12
   844d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   844d6:	2040      	movs	r0, #64	; 0x40
   844d8:	f44f 7100 	mov.w	r1, #512	; 0x200
   844dc:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   844e0:	e74a      	b.n	84378 <_malloc_r+0x44>
   844e2:	4423      	add	r3, r4
   844e4:	685a      	ldr	r2, [r3, #4]
   844e6:	68e1      	ldr	r1, [r4, #12]
   844e8:	e7e0      	b.n	844ac <_malloc_r+0x178>
   844ea:	4423      	add	r3, r4
   844ec:	685a      	ldr	r2, [r3, #4]
   844ee:	4628      	mov	r0, r5
   844f0:	f042 0201 	orr.w	r2, r2, #1
   844f4:	605a      	str	r2, [r3, #4]
   844f6:	3408      	adds	r4, #8
   844f8:	f000 fa96 	bl	84a28 <__malloc_unlock>
   844fc:	4620      	mov	r0, r4
   844fe:	b003      	add	sp, #12
   84500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84504:	68bc      	ldr	r4, [r7, #8]
   84506:	6863      	ldr	r3, [r4, #4]
   84508:	f023 0803 	bic.w	r8, r3, #3
   8450c:	45b0      	cmp	r8, r6
   8450e:	d304      	bcc.n	8451a <_malloc_r+0x1e6>
   84510:	eba8 0306 	sub.w	r3, r8, r6
   84514:	2b0f      	cmp	r3, #15
   84516:	f300 8085 	bgt.w	84624 <_malloc_r+0x2f0>
   8451a:	f8df 9158 	ldr.w	r9, [pc, #344]	; 84674 <_malloc_r+0x340>
   8451e:	4b50      	ldr	r3, [pc, #320]	; (84660 <_malloc_r+0x32c>)
   84520:	f8d9 2000 	ldr.w	r2, [r9]
   84524:	681b      	ldr	r3, [r3, #0]
   84526:	3201      	adds	r2, #1
   84528:	4433      	add	r3, r6
   8452a:	eb04 0a08 	add.w	sl, r4, r8
   8452e:	f000 8154 	beq.w	847da <_malloc_r+0x4a6>
   84532:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   84536:	330f      	adds	r3, #15
   84538:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   8453c:	f02b 0b0f 	bic.w	fp, fp, #15
   84540:	4659      	mov	r1, fp
   84542:	4628      	mov	r0, r5
   84544:	f000 fd72 	bl	8502c <_sbrk_r>
   84548:	1c41      	adds	r1, r0, #1
   8454a:	4602      	mov	r2, r0
   8454c:	f000 80fb 	beq.w	84746 <_malloc_r+0x412>
   84550:	4582      	cmp	sl, r0
   84552:	f200 80f6 	bhi.w	84742 <_malloc_r+0x40e>
   84556:	4b43      	ldr	r3, [pc, #268]	; (84664 <_malloc_r+0x330>)
   84558:	6819      	ldr	r1, [r3, #0]
   8455a:	4459      	add	r1, fp
   8455c:	6019      	str	r1, [r3, #0]
   8455e:	f000 814c 	beq.w	847fa <_malloc_r+0x4c6>
   84562:	f8d9 0000 	ldr.w	r0, [r9]
   84566:	3001      	adds	r0, #1
   84568:	bf1b      	ittet	ne
   8456a:	eba2 0a0a 	subne.w	sl, r2, sl
   8456e:	4451      	addne	r1, sl
   84570:	f8c9 2000 	streq.w	r2, [r9]
   84574:	6019      	strne	r1, [r3, #0]
   84576:	f012 0107 	ands.w	r1, r2, #7
   8457a:	f000 8114 	beq.w	847a6 <_malloc_r+0x472>
   8457e:	f1c1 0008 	rsb	r0, r1, #8
   84582:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   84586:	4402      	add	r2, r0
   84588:	3108      	adds	r1, #8
   8458a:	eb02 090b 	add.w	r9, r2, fp
   8458e:	f3c9 090b 	ubfx	r9, r9, #0, #12
   84592:	eba1 0909 	sub.w	r9, r1, r9
   84596:	4649      	mov	r1, r9
   84598:	4628      	mov	r0, r5
   8459a:	9301      	str	r3, [sp, #4]
   8459c:	9200      	str	r2, [sp, #0]
   8459e:	f000 fd45 	bl	8502c <_sbrk_r>
   845a2:	1c43      	adds	r3, r0, #1
   845a4:	e89d 000c 	ldmia.w	sp, {r2, r3}
   845a8:	f000 8142 	beq.w	84830 <_malloc_r+0x4fc>
   845ac:	1a80      	subs	r0, r0, r2
   845ae:	4448      	add	r0, r9
   845b0:	f040 0001 	orr.w	r0, r0, #1
   845b4:	6819      	ldr	r1, [r3, #0]
   845b6:	42bc      	cmp	r4, r7
   845b8:	4449      	add	r1, r9
   845ba:	60ba      	str	r2, [r7, #8]
   845bc:	6019      	str	r1, [r3, #0]
   845be:	6050      	str	r0, [r2, #4]
   845c0:	d017      	beq.n	845f2 <_malloc_r+0x2be>
   845c2:	f1b8 0f0f 	cmp.w	r8, #15
   845c6:	f240 80fa 	bls.w	847be <_malloc_r+0x48a>
   845ca:	f04f 0c05 	mov.w	ip, #5
   845ce:	6862      	ldr	r2, [r4, #4]
   845d0:	f1a8 000c 	sub.w	r0, r8, #12
   845d4:	f020 0007 	bic.w	r0, r0, #7
   845d8:	f002 0201 	and.w	r2, r2, #1
   845dc:	eb04 0e00 	add.w	lr, r4, r0
   845e0:	4302      	orrs	r2, r0
   845e2:	280f      	cmp	r0, #15
   845e4:	6062      	str	r2, [r4, #4]
   845e6:	f8ce c004 	str.w	ip, [lr, #4]
   845ea:	f8ce c008 	str.w	ip, [lr, #8]
   845ee:	f200 8116 	bhi.w	8481e <_malloc_r+0x4ea>
   845f2:	4b1d      	ldr	r3, [pc, #116]	; (84668 <_malloc_r+0x334>)
   845f4:	68bc      	ldr	r4, [r7, #8]
   845f6:	681a      	ldr	r2, [r3, #0]
   845f8:	4291      	cmp	r1, r2
   845fa:	bf88      	it	hi
   845fc:	6019      	strhi	r1, [r3, #0]
   845fe:	4b1b      	ldr	r3, [pc, #108]	; (8466c <_malloc_r+0x338>)
   84600:	681a      	ldr	r2, [r3, #0]
   84602:	4291      	cmp	r1, r2
   84604:	6862      	ldr	r2, [r4, #4]
   84606:	bf88      	it	hi
   84608:	6019      	strhi	r1, [r3, #0]
   8460a:	f022 0203 	bic.w	r2, r2, #3
   8460e:	4296      	cmp	r6, r2
   84610:	eba2 0306 	sub.w	r3, r2, r6
   84614:	d801      	bhi.n	8461a <_malloc_r+0x2e6>
   84616:	2b0f      	cmp	r3, #15
   84618:	dc04      	bgt.n	84624 <_malloc_r+0x2f0>
   8461a:	4628      	mov	r0, r5
   8461c:	f000 fa04 	bl	84a28 <__malloc_unlock>
   84620:	2400      	movs	r4, #0
   84622:	e74d      	b.n	844c0 <_malloc_r+0x18c>
   84624:	f046 0201 	orr.w	r2, r6, #1
   84628:	f043 0301 	orr.w	r3, r3, #1
   8462c:	4426      	add	r6, r4
   8462e:	6062      	str	r2, [r4, #4]
   84630:	4628      	mov	r0, r5
   84632:	60be      	str	r6, [r7, #8]
   84634:	3408      	adds	r4, #8
   84636:	6073      	str	r3, [r6, #4]
   84638:	f000 f9f6 	bl	84a28 <__malloc_unlock>
   8463c:	4620      	mov	r0, r4
   8463e:	b003      	add	sp, #12
   84640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84644:	2b14      	cmp	r3, #20
   84646:	d970      	bls.n	8472a <_malloc_r+0x3f6>
   84648:	2b54      	cmp	r3, #84	; 0x54
   8464a:	f200 80a2 	bhi.w	84792 <_malloc_r+0x45e>
   8464e:	0b33      	lsrs	r3, r6, #12
   84650:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   84654:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   84658:	00c1      	lsls	r1, r0, #3
   8465a:	e68d      	b.n	84378 <_malloc_r+0x44>
   8465c:	20070b40 	.word	0x20070b40
   84660:	20071024 	.word	0x20071024
   84664:	20070ff4 	.word	0x20070ff4
   84668:	2007101c 	.word	0x2007101c
   8466c:	20071020 	.word	0x20071020
   84670:	20070b48 	.word	0x20070b48
   84674:	20070f48 	.word	0x20070f48
   84678:	0a5a      	lsrs	r2, r3, #9
   8467a:	2a04      	cmp	r2, #4
   8467c:	d95b      	bls.n	84736 <_malloc_r+0x402>
   8467e:	2a14      	cmp	r2, #20
   84680:	f200 80ae 	bhi.w	847e0 <_malloc_r+0x4ac>
   84684:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   84688:	00c9      	lsls	r1, r1, #3
   8468a:	325b      	adds	r2, #91	; 0x5b
   8468c:	eb07 0c01 	add.w	ip, r7, r1
   84690:	5879      	ldr	r1, [r7, r1]
   84692:	f1ac 0c08 	sub.w	ip, ip, #8
   84696:	458c      	cmp	ip, r1
   84698:	f000 8088 	beq.w	847ac <_malloc_r+0x478>
   8469c:	684a      	ldr	r2, [r1, #4]
   8469e:	f022 0203 	bic.w	r2, r2, #3
   846a2:	4293      	cmp	r3, r2
   846a4:	d273      	bcs.n	8478e <_malloc_r+0x45a>
   846a6:	6889      	ldr	r1, [r1, #8]
   846a8:	458c      	cmp	ip, r1
   846aa:	d1f7      	bne.n	8469c <_malloc_r+0x368>
   846ac:	f8dc 300c 	ldr.w	r3, [ip, #12]
   846b0:	687a      	ldr	r2, [r7, #4]
   846b2:	60e3      	str	r3, [r4, #12]
   846b4:	f8c4 c008 	str.w	ip, [r4, #8]
   846b8:	609c      	str	r4, [r3, #8]
   846ba:	f8cc 400c 	str.w	r4, [ip, #12]
   846be:	e69e      	b.n	843fe <_malloc_r+0xca>
   846c0:	f046 0c01 	orr.w	ip, r6, #1
   846c4:	f042 0101 	orr.w	r1, r2, #1
   846c8:	4426      	add	r6, r4
   846ca:	f8c4 c004 	str.w	ip, [r4, #4]
   846ce:	4628      	mov	r0, r5
   846d0:	617e      	str	r6, [r7, #20]
   846d2:	613e      	str	r6, [r7, #16]
   846d4:	f8c6 e00c 	str.w	lr, [r6, #12]
   846d8:	f8c6 e008 	str.w	lr, [r6, #8]
   846dc:	6071      	str	r1, [r6, #4]
   846de:	50e2      	str	r2, [r4, r3]
   846e0:	f000 f9a2 	bl	84a28 <__malloc_unlock>
   846e4:	3408      	adds	r4, #8
   846e6:	e6eb      	b.n	844c0 <_malloc_r+0x18c>
   846e8:	687a      	ldr	r2, [r7, #4]
   846ea:	e688      	b.n	843fe <_malloc_r+0xca>
   846ec:	f108 0801 	add.w	r8, r8, #1
   846f0:	f018 0f03 	tst.w	r8, #3
   846f4:	f10c 0c08 	add.w	ip, ip, #8
   846f8:	f47f ae93 	bne.w	84422 <_malloc_r+0xee>
   846fc:	e02d      	b.n	8475a <_malloc_r+0x426>
   846fe:	68dc      	ldr	r4, [r3, #12]
   84700:	42a3      	cmp	r3, r4
   84702:	bf08      	it	eq
   84704:	3002      	addeq	r0, #2
   84706:	f43f ae4b 	beq.w	843a0 <_malloc_r+0x6c>
   8470a:	e6c9      	b.n	844a0 <_malloc_r+0x16c>
   8470c:	461c      	mov	r4, r3
   8470e:	4419      	add	r1, r3
   84710:	684a      	ldr	r2, [r1, #4]
   84712:	68db      	ldr	r3, [r3, #12]
   84714:	f854 6f08 	ldr.w	r6, [r4, #8]!
   84718:	f042 0201 	orr.w	r2, r2, #1
   8471c:	604a      	str	r2, [r1, #4]
   8471e:	4628      	mov	r0, r5
   84720:	60f3      	str	r3, [r6, #12]
   84722:	609e      	str	r6, [r3, #8]
   84724:	f000 f980 	bl	84a28 <__malloc_unlock>
   84728:	e6ca      	b.n	844c0 <_malloc_r+0x18c>
   8472a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8472e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   84732:	00c1      	lsls	r1, r0, #3
   84734:	e620      	b.n	84378 <_malloc_r+0x44>
   84736:	099a      	lsrs	r2, r3, #6
   84738:	f102 0139 	add.w	r1, r2, #57	; 0x39
   8473c:	00c9      	lsls	r1, r1, #3
   8473e:	3238      	adds	r2, #56	; 0x38
   84740:	e7a4      	b.n	8468c <_malloc_r+0x358>
   84742:	42bc      	cmp	r4, r7
   84744:	d054      	beq.n	847f0 <_malloc_r+0x4bc>
   84746:	68bc      	ldr	r4, [r7, #8]
   84748:	6862      	ldr	r2, [r4, #4]
   8474a:	f022 0203 	bic.w	r2, r2, #3
   8474e:	e75e      	b.n	8460e <_malloc_r+0x2da>
   84750:	f859 3908 	ldr.w	r3, [r9], #-8
   84754:	4599      	cmp	r9, r3
   84756:	f040 8086 	bne.w	84866 <_malloc_r+0x532>
   8475a:	f010 0f03 	tst.w	r0, #3
   8475e:	f100 30ff 	add.w	r0, r0, #4294967295
   84762:	d1f5      	bne.n	84750 <_malloc_r+0x41c>
   84764:	687b      	ldr	r3, [r7, #4]
   84766:	ea23 0304 	bic.w	r3, r3, r4
   8476a:	607b      	str	r3, [r7, #4]
   8476c:	0064      	lsls	r4, r4, #1
   8476e:	429c      	cmp	r4, r3
   84770:	f63f aec8 	bhi.w	84504 <_malloc_r+0x1d0>
   84774:	2c00      	cmp	r4, #0
   84776:	f43f aec5 	beq.w	84504 <_malloc_r+0x1d0>
   8477a:	421c      	tst	r4, r3
   8477c:	4640      	mov	r0, r8
   8477e:	f47f ae4c 	bne.w	8441a <_malloc_r+0xe6>
   84782:	0064      	lsls	r4, r4, #1
   84784:	421c      	tst	r4, r3
   84786:	f100 0004 	add.w	r0, r0, #4
   8478a:	d0fa      	beq.n	84782 <_malloc_r+0x44e>
   8478c:	e645      	b.n	8441a <_malloc_r+0xe6>
   8478e:	468c      	mov	ip, r1
   84790:	e78c      	b.n	846ac <_malloc_r+0x378>
   84792:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   84796:	d815      	bhi.n	847c4 <_malloc_r+0x490>
   84798:	0bf3      	lsrs	r3, r6, #15
   8479a:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8479e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   847a2:	00c1      	lsls	r1, r0, #3
   847a4:	e5e8      	b.n	84378 <_malloc_r+0x44>
   847a6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   847aa:	e6ee      	b.n	8458a <_malloc_r+0x256>
   847ac:	2101      	movs	r1, #1
   847ae:	687b      	ldr	r3, [r7, #4]
   847b0:	1092      	asrs	r2, r2, #2
   847b2:	fa01 f202 	lsl.w	r2, r1, r2
   847b6:	431a      	orrs	r2, r3
   847b8:	607a      	str	r2, [r7, #4]
   847ba:	4663      	mov	r3, ip
   847bc:	e779      	b.n	846b2 <_malloc_r+0x37e>
   847be:	2301      	movs	r3, #1
   847c0:	6053      	str	r3, [r2, #4]
   847c2:	e72a      	b.n	8461a <_malloc_r+0x2e6>
   847c4:	f240 5254 	movw	r2, #1364	; 0x554
   847c8:	4293      	cmp	r3, r2
   847ca:	d822      	bhi.n	84812 <_malloc_r+0x4de>
   847cc:	0cb3      	lsrs	r3, r6, #18
   847ce:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   847d2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   847d6:	00c1      	lsls	r1, r0, #3
   847d8:	e5ce      	b.n	84378 <_malloc_r+0x44>
   847da:	f103 0b10 	add.w	fp, r3, #16
   847de:	e6af      	b.n	84540 <_malloc_r+0x20c>
   847e0:	2a54      	cmp	r2, #84	; 0x54
   847e2:	d829      	bhi.n	84838 <_malloc_r+0x504>
   847e4:	0b1a      	lsrs	r2, r3, #12
   847e6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   847ea:	00c9      	lsls	r1, r1, #3
   847ec:	326e      	adds	r2, #110	; 0x6e
   847ee:	e74d      	b.n	8468c <_malloc_r+0x358>
   847f0:	4b20      	ldr	r3, [pc, #128]	; (84874 <_malloc_r+0x540>)
   847f2:	6819      	ldr	r1, [r3, #0]
   847f4:	4459      	add	r1, fp
   847f6:	6019      	str	r1, [r3, #0]
   847f8:	e6b3      	b.n	84562 <_malloc_r+0x22e>
   847fa:	f3ca 000b 	ubfx	r0, sl, #0, #12
   847fe:	2800      	cmp	r0, #0
   84800:	f47f aeaf 	bne.w	84562 <_malloc_r+0x22e>
   84804:	eb08 030b 	add.w	r3, r8, fp
   84808:	68ba      	ldr	r2, [r7, #8]
   8480a:	f043 0301 	orr.w	r3, r3, #1
   8480e:	6053      	str	r3, [r2, #4]
   84810:	e6ef      	b.n	845f2 <_malloc_r+0x2be>
   84812:	207f      	movs	r0, #127	; 0x7f
   84814:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84818:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   8481c:	e5ac      	b.n	84378 <_malloc_r+0x44>
   8481e:	f104 0108 	add.w	r1, r4, #8
   84822:	4628      	mov	r0, r5
   84824:	9300      	str	r3, [sp, #0]
   84826:	f000 fd7f 	bl	85328 <_free_r>
   8482a:	9b00      	ldr	r3, [sp, #0]
   8482c:	6819      	ldr	r1, [r3, #0]
   8482e:	e6e0      	b.n	845f2 <_malloc_r+0x2be>
   84830:	2001      	movs	r0, #1
   84832:	f04f 0900 	mov.w	r9, #0
   84836:	e6bd      	b.n	845b4 <_malloc_r+0x280>
   84838:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8483c:	d805      	bhi.n	8484a <_malloc_r+0x516>
   8483e:	0bda      	lsrs	r2, r3, #15
   84840:	f102 0178 	add.w	r1, r2, #120	; 0x78
   84844:	00c9      	lsls	r1, r1, #3
   84846:	3277      	adds	r2, #119	; 0x77
   84848:	e720      	b.n	8468c <_malloc_r+0x358>
   8484a:	f240 5154 	movw	r1, #1364	; 0x554
   8484e:	428a      	cmp	r2, r1
   84850:	d805      	bhi.n	8485e <_malloc_r+0x52a>
   84852:	0c9a      	lsrs	r2, r3, #18
   84854:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   84858:	00c9      	lsls	r1, r1, #3
   8485a:	327c      	adds	r2, #124	; 0x7c
   8485c:	e716      	b.n	8468c <_malloc_r+0x358>
   8485e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84862:	227e      	movs	r2, #126	; 0x7e
   84864:	e712      	b.n	8468c <_malloc_r+0x358>
   84866:	687b      	ldr	r3, [r7, #4]
   84868:	e780      	b.n	8476c <_malloc_r+0x438>
   8486a:	08f0      	lsrs	r0, r6, #3
   8486c:	f106 0308 	add.w	r3, r6, #8
   84870:	e60e      	b.n	84490 <_malloc_r+0x15c>
   84872:	bf00      	nop
   84874:	20070ff4 	.word	0x20070ff4

00084878 <__ascii_mbtowc>:
   84878:	b082      	sub	sp, #8
   8487a:	b149      	cbz	r1, 84890 <__ascii_mbtowc+0x18>
   8487c:	b15a      	cbz	r2, 84896 <__ascii_mbtowc+0x1e>
   8487e:	b16b      	cbz	r3, 8489c <__ascii_mbtowc+0x24>
   84880:	7813      	ldrb	r3, [r2, #0]
   84882:	600b      	str	r3, [r1, #0]
   84884:	7812      	ldrb	r2, [r2, #0]
   84886:	1c10      	adds	r0, r2, #0
   84888:	bf18      	it	ne
   8488a:	2001      	movne	r0, #1
   8488c:	b002      	add	sp, #8
   8488e:	4770      	bx	lr
   84890:	a901      	add	r1, sp, #4
   84892:	2a00      	cmp	r2, #0
   84894:	d1f3      	bne.n	8487e <__ascii_mbtowc+0x6>
   84896:	4610      	mov	r0, r2
   84898:	b002      	add	sp, #8
   8489a:	4770      	bx	lr
   8489c:	f06f 0001 	mvn.w	r0, #1
   848a0:	e7f4      	b.n	8488c <__ascii_mbtowc+0x14>
   848a2:	bf00      	nop

000848a4 <memchr>:
   848a4:	0783      	lsls	r3, r0, #30
   848a6:	b470      	push	{r4, r5, r6}
   848a8:	b2cd      	uxtb	r5, r1
   848aa:	d03d      	beq.n	84928 <memchr+0x84>
   848ac:	1e54      	subs	r4, r2, #1
   848ae:	b30a      	cbz	r2, 848f4 <memchr+0x50>
   848b0:	7803      	ldrb	r3, [r0, #0]
   848b2:	42ab      	cmp	r3, r5
   848b4:	d01f      	beq.n	848f6 <memchr+0x52>
   848b6:	1c43      	adds	r3, r0, #1
   848b8:	e005      	b.n	848c6 <memchr+0x22>
   848ba:	f114 34ff 	adds.w	r4, r4, #4294967295
   848be:	d319      	bcc.n	848f4 <memchr+0x50>
   848c0:	7802      	ldrb	r2, [r0, #0]
   848c2:	42aa      	cmp	r2, r5
   848c4:	d017      	beq.n	848f6 <memchr+0x52>
   848c6:	f013 0f03 	tst.w	r3, #3
   848ca:	4618      	mov	r0, r3
   848cc:	f103 0301 	add.w	r3, r3, #1
   848d0:	d1f3      	bne.n	848ba <memchr+0x16>
   848d2:	2c03      	cmp	r4, #3
   848d4:	d811      	bhi.n	848fa <memchr+0x56>
   848d6:	b34c      	cbz	r4, 8492c <memchr+0x88>
   848d8:	7803      	ldrb	r3, [r0, #0]
   848da:	42ab      	cmp	r3, r5
   848dc:	d00b      	beq.n	848f6 <memchr+0x52>
   848de:	4404      	add	r4, r0
   848e0:	1c43      	adds	r3, r0, #1
   848e2:	e002      	b.n	848ea <memchr+0x46>
   848e4:	7802      	ldrb	r2, [r0, #0]
   848e6:	42aa      	cmp	r2, r5
   848e8:	d005      	beq.n	848f6 <memchr+0x52>
   848ea:	429c      	cmp	r4, r3
   848ec:	4618      	mov	r0, r3
   848ee:	f103 0301 	add.w	r3, r3, #1
   848f2:	d1f7      	bne.n	848e4 <memchr+0x40>
   848f4:	2000      	movs	r0, #0
   848f6:	bc70      	pop	{r4, r5, r6}
   848f8:	4770      	bx	lr
   848fa:	0209      	lsls	r1, r1, #8
   848fc:	b289      	uxth	r1, r1
   848fe:	4329      	orrs	r1, r5
   84900:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   84904:	6803      	ldr	r3, [r0, #0]
   84906:	4606      	mov	r6, r0
   84908:	404b      	eors	r3, r1
   8490a:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   8490e:	ea22 0303 	bic.w	r3, r2, r3
   84912:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   84916:	f100 0004 	add.w	r0, r0, #4
   8491a:	d103      	bne.n	84924 <memchr+0x80>
   8491c:	3c04      	subs	r4, #4
   8491e:	2c03      	cmp	r4, #3
   84920:	d8f0      	bhi.n	84904 <memchr+0x60>
   84922:	e7d8      	b.n	848d6 <memchr+0x32>
   84924:	4630      	mov	r0, r6
   84926:	e7d7      	b.n	848d8 <memchr+0x34>
   84928:	4614      	mov	r4, r2
   8492a:	e7d2      	b.n	848d2 <memchr+0x2e>
   8492c:	4620      	mov	r0, r4
   8492e:	e7e2      	b.n	848f6 <memchr+0x52>

00084930 <memcpy>:
   84930:	4684      	mov	ip, r0
   84932:	ea41 0300 	orr.w	r3, r1, r0
   84936:	f013 0303 	ands.w	r3, r3, #3
   8493a:	d149      	bne.n	849d0 <memcpy+0xa0>
   8493c:	3a40      	subs	r2, #64	; 0x40
   8493e:	d323      	bcc.n	84988 <memcpy+0x58>
   84940:	680b      	ldr	r3, [r1, #0]
   84942:	6003      	str	r3, [r0, #0]
   84944:	684b      	ldr	r3, [r1, #4]
   84946:	6043      	str	r3, [r0, #4]
   84948:	688b      	ldr	r3, [r1, #8]
   8494a:	6083      	str	r3, [r0, #8]
   8494c:	68cb      	ldr	r3, [r1, #12]
   8494e:	60c3      	str	r3, [r0, #12]
   84950:	690b      	ldr	r3, [r1, #16]
   84952:	6103      	str	r3, [r0, #16]
   84954:	694b      	ldr	r3, [r1, #20]
   84956:	6143      	str	r3, [r0, #20]
   84958:	698b      	ldr	r3, [r1, #24]
   8495a:	6183      	str	r3, [r0, #24]
   8495c:	69cb      	ldr	r3, [r1, #28]
   8495e:	61c3      	str	r3, [r0, #28]
   84960:	6a0b      	ldr	r3, [r1, #32]
   84962:	6203      	str	r3, [r0, #32]
   84964:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   84966:	6243      	str	r3, [r0, #36]	; 0x24
   84968:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8496a:	6283      	str	r3, [r0, #40]	; 0x28
   8496c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8496e:	62c3      	str	r3, [r0, #44]	; 0x2c
   84970:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   84972:	6303      	str	r3, [r0, #48]	; 0x30
   84974:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   84976:	6343      	str	r3, [r0, #52]	; 0x34
   84978:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8497a:	6383      	str	r3, [r0, #56]	; 0x38
   8497c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8497e:	63c3      	str	r3, [r0, #60]	; 0x3c
   84980:	3040      	adds	r0, #64	; 0x40
   84982:	3140      	adds	r1, #64	; 0x40
   84984:	3a40      	subs	r2, #64	; 0x40
   84986:	d2db      	bcs.n	84940 <memcpy+0x10>
   84988:	3230      	adds	r2, #48	; 0x30
   8498a:	d30b      	bcc.n	849a4 <memcpy+0x74>
   8498c:	680b      	ldr	r3, [r1, #0]
   8498e:	6003      	str	r3, [r0, #0]
   84990:	684b      	ldr	r3, [r1, #4]
   84992:	6043      	str	r3, [r0, #4]
   84994:	688b      	ldr	r3, [r1, #8]
   84996:	6083      	str	r3, [r0, #8]
   84998:	68cb      	ldr	r3, [r1, #12]
   8499a:	60c3      	str	r3, [r0, #12]
   8499c:	3010      	adds	r0, #16
   8499e:	3110      	adds	r1, #16
   849a0:	3a10      	subs	r2, #16
   849a2:	d2f3      	bcs.n	8498c <memcpy+0x5c>
   849a4:	320c      	adds	r2, #12
   849a6:	d305      	bcc.n	849b4 <memcpy+0x84>
   849a8:	f851 3b04 	ldr.w	r3, [r1], #4
   849ac:	f840 3b04 	str.w	r3, [r0], #4
   849b0:	3a04      	subs	r2, #4
   849b2:	d2f9      	bcs.n	849a8 <memcpy+0x78>
   849b4:	3204      	adds	r2, #4
   849b6:	d008      	beq.n	849ca <memcpy+0x9a>
   849b8:	07d2      	lsls	r2, r2, #31
   849ba:	bf1c      	itt	ne
   849bc:	f811 3b01 	ldrbne.w	r3, [r1], #1
   849c0:	f800 3b01 	strbne.w	r3, [r0], #1
   849c4:	d301      	bcc.n	849ca <memcpy+0x9a>
   849c6:	880b      	ldrh	r3, [r1, #0]
   849c8:	8003      	strh	r3, [r0, #0]
   849ca:	4660      	mov	r0, ip
   849cc:	4770      	bx	lr
   849ce:	bf00      	nop
   849d0:	2a08      	cmp	r2, #8
   849d2:	d313      	bcc.n	849fc <memcpy+0xcc>
   849d4:	078b      	lsls	r3, r1, #30
   849d6:	d0b1      	beq.n	8493c <memcpy+0xc>
   849d8:	f010 0303 	ands.w	r3, r0, #3
   849dc:	d0ae      	beq.n	8493c <memcpy+0xc>
   849de:	f1c3 0304 	rsb	r3, r3, #4
   849e2:	1ad2      	subs	r2, r2, r3
   849e4:	07db      	lsls	r3, r3, #31
   849e6:	bf1c      	itt	ne
   849e8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   849ec:	f800 3b01 	strbne.w	r3, [r0], #1
   849f0:	d3a4      	bcc.n	8493c <memcpy+0xc>
   849f2:	f831 3b02 	ldrh.w	r3, [r1], #2
   849f6:	f820 3b02 	strh.w	r3, [r0], #2
   849fa:	e79f      	b.n	8493c <memcpy+0xc>
   849fc:	3a04      	subs	r2, #4
   849fe:	d3d9      	bcc.n	849b4 <memcpy+0x84>
   84a00:	3a01      	subs	r2, #1
   84a02:	f811 3b01 	ldrb.w	r3, [r1], #1
   84a06:	f800 3b01 	strb.w	r3, [r0], #1
   84a0a:	d2f9      	bcs.n	84a00 <memcpy+0xd0>
   84a0c:	780b      	ldrb	r3, [r1, #0]
   84a0e:	7003      	strb	r3, [r0, #0]
   84a10:	784b      	ldrb	r3, [r1, #1]
   84a12:	7043      	strb	r3, [r0, #1]
   84a14:	788b      	ldrb	r3, [r1, #2]
   84a16:	7083      	strb	r3, [r0, #2]
   84a18:	4660      	mov	r0, ip
   84a1a:	4770      	bx	lr

00084a1c <__malloc_lock>:
   84a1c:	4801      	ldr	r0, [pc, #4]	; (84a24 <__malloc_lock+0x8>)
   84a1e:	f7ff bc85 	b.w	8432c <__retarget_lock_acquire_recursive>
   84a22:	bf00      	nop
   84a24:	200714bc 	.word	0x200714bc

00084a28 <__malloc_unlock>:
   84a28:	4801      	ldr	r0, [pc, #4]	; (84a30 <__malloc_unlock+0x8>)
   84a2a:	f7ff bc81 	b.w	84330 <__retarget_lock_release_recursive>
   84a2e:	bf00      	nop
   84a30:	200714bc 	.word	0x200714bc

00084a34 <_Balloc>:
   84a34:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84a36:	b570      	push	{r4, r5, r6, lr}
   84a38:	4605      	mov	r5, r0
   84a3a:	460c      	mov	r4, r1
   84a3c:	b14b      	cbz	r3, 84a52 <_Balloc+0x1e>
   84a3e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   84a42:	b180      	cbz	r0, 84a66 <_Balloc+0x32>
   84a44:	6802      	ldr	r2, [r0, #0]
   84a46:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   84a4a:	2300      	movs	r3, #0
   84a4c:	6103      	str	r3, [r0, #16]
   84a4e:	60c3      	str	r3, [r0, #12]
   84a50:	bd70      	pop	{r4, r5, r6, pc}
   84a52:	2221      	movs	r2, #33	; 0x21
   84a54:	2104      	movs	r1, #4
   84a56:	f000 fbe7 	bl	85228 <_calloc_r>
   84a5a:	64e8      	str	r0, [r5, #76]	; 0x4c
   84a5c:	4603      	mov	r3, r0
   84a5e:	2800      	cmp	r0, #0
   84a60:	d1ed      	bne.n	84a3e <_Balloc+0xa>
   84a62:	2000      	movs	r0, #0
   84a64:	bd70      	pop	{r4, r5, r6, pc}
   84a66:	2101      	movs	r1, #1
   84a68:	fa01 f604 	lsl.w	r6, r1, r4
   84a6c:	1d72      	adds	r2, r6, #5
   84a6e:	4628      	mov	r0, r5
   84a70:	0092      	lsls	r2, r2, #2
   84a72:	f000 fbd9 	bl	85228 <_calloc_r>
   84a76:	2800      	cmp	r0, #0
   84a78:	d0f3      	beq.n	84a62 <_Balloc+0x2e>
   84a7a:	6044      	str	r4, [r0, #4]
   84a7c:	6086      	str	r6, [r0, #8]
   84a7e:	e7e4      	b.n	84a4a <_Balloc+0x16>

00084a80 <_Bfree>:
   84a80:	b131      	cbz	r1, 84a90 <_Bfree+0x10>
   84a82:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84a84:	684a      	ldr	r2, [r1, #4]
   84a86:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   84a8a:	6008      	str	r0, [r1, #0]
   84a8c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   84a90:	4770      	bx	lr
   84a92:	bf00      	nop

00084a94 <__multadd>:
   84a94:	b5f0      	push	{r4, r5, r6, r7, lr}
   84a96:	460c      	mov	r4, r1
   84a98:	4605      	mov	r5, r0
   84a9a:	f04f 0e00 	mov.w	lr, #0
   84a9e:	690e      	ldr	r6, [r1, #16]
   84aa0:	b083      	sub	sp, #12
   84aa2:	f101 0714 	add.w	r7, r1, #20
   84aa6:	6838      	ldr	r0, [r7, #0]
   84aa8:	f10e 0e01 	add.w	lr, lr, #1
   84aac:	b281      	uxth	r1, r0
   84aae:	fb02 3301 	mla	r3, r2, r1, r3
   84ab2:	0c01      	lsrs	r1, r0, #16
   84ab4:	0c18      	lsrs	r0, r3, #16
   84ab6:	fb02 0101 	mla	r1, r2, r1, r0
   84aba:	b29b      	uxth	r3, r3
   84abc:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   84ac0:	4576      	cmp	r6, lr
   84ac2:	f847 3b04 	str.w	r3, [r7], #4
   84ac6:	ea4f 4311 	mov.w	r3, r1, lsr #16
   84aca:	dcec      	bgt.n	84aa6 <__multadd+0x12>
   84acc:	b13b      	cbz	r3, 84ade <__multadd+0x4a>
   84ace:	68a2      	ldr	r2, [r4, #8]
   84ad0:	4296      	cmp	r6, r2
   84ad2:	da07      	bge.n	84ae4 <__multadd+0x50>
   84ad4:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84ad8:	3601      	adds	r6, #1
   84ada:	6153      	str	r3, [r2, #20]
   84adc:	6126      	str	r6, [r4, #16]
   84ade:	4620      	mov	r0, r4
   84ae0:	b003      	add	sp, #12
   84ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84ae4:	6861      	ldr	r1, [r4, #4]
   84ae6:	4628      	mov	r0, r5
   84ae8:	3101      	adds	r1, #1
   84aea:	9301      	str	r3, [sp, #4]
   84aec:	f7ff ffa2 	bl	84a34 <_Balloc>
   84af0:	4607      	mov	r7, r0
   84af2:	6922      	ldr	r2, [r4, #16]
   84af4:	f104 010c 	add.w	r1, r4, #12
   84af8:	3202      	adds	r2, #2
   84afa:	0092      	lsls	r2, r2, #2
   84afc:	300c      	adds	r0, #12
   84afe:	f7ff ff17 	bl	84930 <memcpy>
   84b02:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84b04:	6861      	ldr	r1, [r4, #4]
   84b06:	9b01      	ldr	r3, [sp, #4]
   84b08:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84b0c:	6020      	str	r0, [r4, #0]
   84b0e:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   84b12:	463c      	mov	r4, r7
   84b14:	e7de      	b.n	84ad4 <__multadd+0x40>
   84b16:	bf00      	nop

00084b18 <__hi0bits>:
   84b18:	0c02      	lsrs	r2, r0, #16
   84b1a:	0412      	lsls	r2, r2, #16
   84b1c:	4603      	mov	r3, r0
   84b1e:	b9b2      	cbnz	r2, 84b4e <__hi0bits+0x36>
   84b20:	0403      	lsls	r3, r0, #16
   84b22:	2010      	movs	r0, #16
   84b24:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84b28:	bf04      	itt	eq
   84b2a:	021b      	lsleq	r3, r3, #8
   84b2c:	3008      	addeq	r0, #8
   84b2e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   84b32:	bf04      	itt	eq
   84b34:	011b      	lsleq	r3, r3, #4
   84b36:	3004      	addeq	r0, #4
   84b38:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84b3c:	bf04      	itt	eq
   84b3e:	009b      	lsleq	r3, r3, #2
   84b40:	3002      	addeq	r0, #2
   84b42:	2b00      	cmp	r3, #0
   84b44:	db02      	blt.n	84b4c <__hi0bits+0x34>
   84b46:	005b      	lsls	r3, r3, #1
   84b48:	d403      	bmi.n	84b52 <__hi0bits+0x3a>
   84b4a:	2020      	movs	r0, #32
   84b4c:	4770      	bx	lr
   84b4e:	2000      	movs	r0, #0
   84b50:	e7e8      	b.n	84b24 <__hi0bits+0xc>
   84b52:	3001      	adds	r0, #1
   84b54:	4770      	bx	lr
   84b56:	bf00      	nop

00084b58 <__lo0bits>:
   84b58:	6803      	ldr	r3, [r0, #0]
   84b5a:	4601      	mov	r1, r0
   84b5c:	f013 0207 	ands.w	r2, r3, #7
   84b60:	d007      	beq.n	84b72 <__lo0bits+0x1a>
   84b62:	07da      	lsls	r2, r3, #31
   84b64:	d421      	bmi.n	84baa <__lo0bits+0x52>
   84b66:	0798      	lsls	r0, r3, #30
   84b68:	d421      	bmi.n	84bae <__lo0bits+0x56>
   84b6a:	089b      	lsrs	r3, r3, #2
   84b6c:	600b      	str	r3, [r1, #0]
   84b6e:	2002      	movs	r0, #2
   84b70:	4770      	bx	lr
   84b72:	b298      	uxth	r0, r3
   84b74:	b198      	cbz	r0, 84b9e <__lo0bits+0x46>
   84b76:	4610      	mov	r0, r2
   84b78:	f013 0fff 	tst.w	r3, #255	; 0xff
   84b7c:	bf04      	itt	eq
   84b7e:	0a1b      	lsreq	r3, r3, #8
   84b80:	3008      	addeq	r0, #8
   84b82:	071a      	lsls	r2, r3, #28
   84b84:	bf04      	itt	eq
   84b86:	091b      	lsreq	r3, r3, #4
   84b88:	3004      	addeq	r0, #4
   84b8a:	079a      	lsls	r2, r3, #30
   84b8c:	bf04      	itt	eq
   84b8e:	089b      	lsreq	r3, r3, #2
   84b90:	3002      	addeq	r0, #2
   84b92:	07da      	lsls	r2, r3, #31
   84b94:	d407      	bmi.n	84ba6 <__lo0bits+0x4e>
   84b96:	085b      	lsrs	r3, r3, #1
   84b98:	d104      	bne.n	84ba4 <__lo0bits+0x4c>
   84b9a:	2020      	movs	r0, #32
   84b9c:	4770      	bx	lr
   84b9e:	0c1b      	lsrs	r3, r3, #16
   84ba0:	2010      	movs	r0, #16
   84ba2:	e7e9      	b.n	84b78 <__lo0bits+0x20>
   84ba4:	3001      	adds	r0, #1
   84ba6:	600b      	str	r3, [r1, #0]
   84ba8:	4770      	bx	lr
   84baa:	2000      	movs	r0, #0
   84bac:	4770      	bx	lr
   84bae:	085b      	lsrs	r3, r3, #1
   84bb0:	600b      	str	r3, [r1, #0]
   84bb2:	2001      	movs	r0, #1
   84bb4:	4770      	bx	lr
   84bb6:	bf00      	nop

00084bb8 <__i2b>:
   84bb8:	b510      	push	{r4, lr}
   84bba:	460c      	mov	r4, r1
   84bbc:	2101      	movs	r1, #1
   84bbe:	f7ff ff39 	bl	84a34 <_Balloc>
   84bc2:	2201      	movs	r2, #1
   84bc4:	6144      	str	r4, [r0, #20]
   84bc6:	6102      	str	r2, [r0, #16]
   84bc8:	bd10      	pop	{r4, pc}
   84bca:	bf00      	nop

00084bcc <__multiply>:
   84bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84bd0:	690c      	ldr	r4, [r1, #16]
   84bd2:	6915      	ldr	r5, [r2, #16]
   84bd4:	b083      	sub	sp, #12
   84bd6:	42ac      	cmp	r4, r5
   84bd8:	468b      	mov	fp, r1
   84bda:	4616      	mov	r6, r2
   84bdc:	da04      	bge.n	84be8 <__multiply+0x1c>
   84bde:	4622      	mov	r2, r4
   84be0:	46b3      	mov	fp, r6
   84be2:	462c      	mov	r4, r5
   84be4:	460e      	mov	r6, r1
   84be6:	4615      	mov	r5, r2
   84be8:	f8db 3008 	ldr.w	r3, [fp, #8]
   84bec:	eb04 0805 	add.w	r8, r4, r5
   84bf0:	f8db 1004 	ldr.w	r1, [fp, #4]
   84bf4:	4598      	cmp	r8, r3
   84bf6:	bfc8      	it	gt
   84bf8:	3101      	addgt	r1, #1
   84bfa:	f7ff ff1b 	bl	84a34 <_Balloc>
   84bfe:	f100 0914 	add.w	r9, r0, #20
   84c02:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   84c06:	45d1      	cmp	r9, sl
   84c08:	9000      	str	r0, [sp, #0]
   84c0a:	d205      	bcs.n	84c18 <__multiply+0x4c>
   84c0c:	464b      	mov	r3, r9
   84c0e:	2100      	movs	r1, #0
   84c10:	f843 1b04 	str.w	r1, [r3], #4
   84c14:	459a      	cmp	sl, r3
   84c16:	d8fb      	bhi.n	84c10 <__multiply+0x44>
   84c18:	f106 0c14 	add.w	ip, r6, #20
   84c1c:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84c20:	f10b 0b14 	add.w	fp, fp, #20
   84c24:	459c      	cmp	ip, r3
   84c26:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84c2a:	d24b      	bcs.n	84cc4 <__multiply+0xf8>
   84c2c:	f8cd a004 	str.w	sl, [sp, #4]
   84c30:	469a      	mov	sl, r3
   84c32:	f8dc 5000 	ldr.w	r5, [ip]
   84c36:	b2af      	uxth	r7, r5
   84c38:	b1e7      	cbz	r7, 84c74 <__multiply+0xa8>
   84c3a:	464d      	mov	r5, r9
   84c3c:	465e      	mov	r6, fp
   84c3e:	2100      	movs	r1, #0
   84c40:	f856 2b04 	ldr.w	r2, [r6], #4
   84c44:	6828      	ldr	r0, [r5, #0]
   84c46:	b293      	uxth	r3, r2
   84c48:	b284      	uxth	r4, r0
   84c4a:	0c12      	lsrs	r2, r2, #16
   84c4c:	fb07 4303 	mla	r3, r7, r3, r4
   84c50:	0c00      	lsrs	r0, r0, #16
   84c52:	fb07 0202 	mla	r2, r7, r2, r0
   84c56:	440b      	add	r3, r1
   84c58:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   84c5c:	b29b      	uxth	r3, r3
   84c5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   84c62:	45b6      	cmp	lr, r6
   84c64:	f845 3b04 	str.w	r3, [r5], #4
   84c68:	ea4f 4111 	mov.w	r1, r1, lsr #16
   84c6c:	d8e8      	bhi.n	84c40 <__multiply+0x74>
   84c6e:	6029      	str	r1, [r5, #0]
   84c70:	f8dc 5000 	ldr.w	r5, [ip]
   84c74:	0c2d      	lsrs	r5, r5, #16
   84c76:	d01d      	beq.n	84cb4 <__multiply+0xe8>
   84c78:	f8d9 3000 	ldr.w	r3, [r9]
   84c7c:	4648      	mov	r0, r9
   84c7e:	461c      	mov	r4, r3
   84c80:	4659      	mov	r1, fp
   84c82:	2200      	movs	r2, #0
   84c84:	880e      	ldrh	r6, [r1, #0]
   84c86:	0c24      	lsrs	r4, r4, #16
   84c88:	fb05 4406 	mla	r4, r5, r6, r4
   84c8c:	b29b      	uxth	r3, r3
   84c8e:	4422      	add	r2, r4
   84c90:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84c94:	f840 3b04 	str.w	r3, [r0], #4
   84c98:	f851 3b04 	ldr.w	r3, [r1], #4
   84c9c:	6804      	ldr	r4, [r0, #0]
   84c9e:	0c1b      	lsrs	r3, r3, #16
   84ca0:	b2a6      	uxth	r6, r4
   84ca2:	fb05 6303 	mla	r3, r5, r3, r6
   84ca6:	458e      	cmp	lr, r1
   84ca8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   84cac:	ea4f 4213 	mov.w	r2, r3, lsr #16
   84cb0:	d8e8      	bhi.n	84c84 <__multiply+0xb8>
   84cb2:	6003      	str	r3, [r0, #0]
   84cb4:	f10c 0c04 	add.w	ip, ip, #4
   84cb8:	45e2      	cmp	sl, ip
   84cba:	f109 0904 	add.w	r9, r9, #4
   84cbe:	d8b8      	bhi.n	84c32 <__multiply+0x66>
   84cc0:	f8dd a004 	ldr.w	sl, [sp, #4]
   84cc4:	f1b8 0f00 	cmp.w	r8, #0
   84cc8:	dd0b      	ble.n	84ce2 <__multiply+0x116>
   84cca:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   84cce:	f1aa 0a04 	sub.w	sl, sl, #4
   84cd2:	b11b      	cbz	r3, 84cdc <__multiply+0x110>
   84cd4:	e005      	b.n	84ce2 <__multiply+0x116>
   84cd6:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   84cda:	b913      	cbnz	r3, 84ce2 <__multiply+0x116>
   84cdc:	f1b8 0801 	subs.w	r8, r8, #1
   84ce0:	d1f9      	bne.n	84cd6 <__multiply+0x10a>
   84ce2:	9800      	ldr	r0, [sp, #0]
   84ce4:	f8c0 8010 	str.w	r8, [r0, #16]
   84ce8:	b003      	add	sp, #12
   84cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84cee:	bf00      	nop

00084cf0 <__pow5mult>:
   84cf0:	f012 0303 	ands.w	r3, r2, #3
   84cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84cf8:	4614      	mov	r4, r2
   84cfa:	4607      	mov	r7, r0
   84cfc:	d12e      	bne.n	84d5c <__pow5mult+0x6c>
   84cfe:	460d      	mov	r5, r1
   84d00:	10a4      	asrs	r4, r4, #2
   84d02:	d01c      	beq.n	84d3e <__pow5mult+0x4e>
   84d04:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   84d06:	b396      	cbz	r6, 84d6e <__pow5mult+0x7e>
   84d08:	07e3      	lsls	r3, r4, #31
   84d0a:	f04f 0800 	mov.w	r8, #0
   84d0e:	d406      	bmi.n	84d1e <__pow5mult+0x2e>
   84d10:	1064      	asrs	r4, r4, #1
   84d12:	d014      	beq.n	84d3e <__pow5mult+0x4e>
   84d14:	6830      	ldr	r0, [r6, #0]
   84d16:	b1a8      	cbz	r0, 84d44 <__pow5mult+0x54>
   84d18:	4606      	mov	r6, r0
   84d1a:	07e3      	lsls	r3, r4, #31
   84d1c:	d5f8      	bpl.n	84d10 <__pow5mult+0x20>
   84d1e:	4632      	mov	r2, r6
   84d20:	4629      	mov	r1, r5
   84d22:	4638      	mov	r0, r7
   84d24:	f7ff ff52 	bl	84bcc <__multiply>
   84d28:	b1b5      	cbz	r5, 84d58 <__pow5mult+0x68>
   84d2a:	686a      	ldr	r2, [r5, #4]
   84d2c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84d2e:	1064      	asrs	r4, r4, #1
   84d30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84d34:	6029      	str	r1, [r5, #0]
   84d36:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84d3a:	4605      	mov	r5, r0
   84d3c:	d1ea      	bne.n	84d14 <__pow5mult+0x24>
   84d3e:	4628      	mov	r0, r5
   84d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84d44:	4632      	mov	r2, r6
   84d46:	4631      	mov	r1, r6
   84d48:	4638      	mov	r0, r7
   84d4a:	f7ff ff3f 	bl	84bcc <__multiply>
   84d4e:	6030      	str	r0, [r6, #0]
   84d50:	f8c0 8000 	str.w	r8, [r0]
   84d54:	4606      	mov	r6, r0
   84d56:	e7e0      	b.n	84d1a <__pow5mult+0x2a>
   84d58:	4605      	mov	r5, r0
   84d5a:	e7d9      	b.n	84d10 <__pow5mult+0x20>
   84d5c:	4a0b      	ldr	r2, [pc, #44]	; (84d8c <__pow5mult+0x9c>)
   84d5e:	3b01      	subs	r3, #1
   84d60:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   84d64:	2300      	movs	r3, #0
   84d66:	f7ff fe95 	bl	84a94 <__multadd>
   84d6a:	4605      	mov	r5, r0
   84d6c:	e7c8      	b.n	84d00 <__pow5mult+0x10>
   84d6e:	2101      	movs	r1, #1
   84d70:	4638      	mov	r0, r7
   84d72:	f7ff fe5f 	bl	84a34 <_Balloc>
   84d76:	f240 2171 	movw	r1, #625	; 0x271
   84d7a:	2201      	movs	r2, #1
   84d7c:	2300      	movs	r3, #0
   84d7e:	6141      	str	r1, [r0, #20]
   84d80:	6102      	str	r2, [r0, #16]
   84d82:	4606      	mov	r6, r0
   84d84:	64b8      	str	r0, [r7, #72]	; 0x48
   84d86:	6003      	str	r3, [r0, #0]
   84d88:	e7be      	b.n	84d08 <__pow5mult+0x18>
   84d8a:	bf00      	nop
   84d8c:	000868e8 	.word	0x000868e8

00084d90 <__lshift>:
   84d90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84d94:	690b      	ldr	r3, [r1, #16]
   84d96:	1154      	asrs	r4, r2, #5
   84d98:	eb04 0803 	add.w	r8, r4, r3
   84d9c:	688b      	ldr	r3, [r1, #8]
   84d9e:	f108 0501 	add.w	r5, r8, #1
   84da2:	429d      	cmp	r5, r3
   84da4:	460e      	mov	r6, r1
   84da6:	4691      	mov	r9, r2
   84da8:	4607      	mov	r7, r0
   84daa:	6849      	ldr	r1, [r1, #4]
   84dac:	dd04      	ble.n	84db8 <__lshift+0x28>
   84dae:	005b      	lsls	r3, r3, #1
   84db0:	429d      	cmp	r5, r3
   84db2:	f101 0101 	add.w	r1, r1, #1
   84db6:	dcfa      	bgt.n	84dae <__lshift+0x1e>
   84db8:	4638      	mov	r0, r7
   84dba:	f7ff fe3b 	bl	84a34 <_Balloc>
   84dbe:	2c00      	cmp	r4, #0
   84dc0:	f100 0314 	add.w	r3, r0, #20
   84dc4:	dd06      	ble.n	84dd4 <__lshift+0x44>
   84dc6:	2100      	movs	r1, #0
   84dc8:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84dcc:	f843 1b04 	str.w	r1, [r3], #4
   84dd0:	429a      	cmp	r2, r3
   84dd2:	d1fb      	bne.n	84dcc <__lshift+0x3c>
   84dd4:	6934      	ldr	r4, [r6, #16]
   84dd6:	f106 0114 	add.w	r1, r6, #20
   84dda:	f019 091f 	ands.w	r9, r9, #31
   84dde:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   84de2:	d01d      	beq.n	84e20 <__lshift+0x90>
   84de4:	2200      	movs	r2, #0
   84de6:	f1c9 0c20 	rsb	ip, r9, #32
   84dea:	680c      	ldr	r4, [r1, #0]
   84dec:	fa04 f409 	lsl.w	r4, r4, r9
   84df0:	4314      	orrs	r4, r2
   84df2:	f843 4b04 	str.w	r4, [r3], #4
   84df6:	f851 2b04 	ldr.w	r2, [r1], #4
   84dfa:	458e      	cmp	lr, r1
   84dfc:	fa22 f20c 	lsr.w	r2, r2, ip
   84e00:	d8f3      	bhi.n	84dea <__lshift+0x5a>
   84e02:	601a      	str	r2, [r3, #0]
   84e04:	b10a      	cbz	r2, 84e0a <__lshift+0x7a>
   84e06:	f108 0502 	add.w	r5, r8, #2
   84e0a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84e0c:	6872      	ldr	r2, [r6, #4]
   84e0e:	3d01      	subs	r5, #1
   84e10:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84e14:	6105      	str	r5, [r0, #16]
   84e16:	6031      	str	r1, [r6, #0]
   84e18:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84e1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84e20:	3b04      	subs	r3, #4
   84e22:	f851 2b04 	ldr.w	r2, [r1], #4
   84e26:	458e      	cmp	lr, r1
   84e28:	f843 2f04 	str.w	r2, [r3, #4]!
   84e2c:	d8f9      	bhi.n	84e22 <__lshift+0x92>
   84e2e:	e7ec      	b.n	84e0a <__lshift+0x7a>

00084e30 <__mcmp>:
   84e30:	b430      	push	{r4, r5}
   84e32:	690b      	ldr	r3, [r1, #16]
   84e34:	4605      	mov	r5, r0
   84e36:	6900      	ldr	r0, [r0, #16]
   84e38:	1ac0      	subs	r0, r0, r3
   84e3a:	d10f      	bne.n	84e5c <__mcmp+0x2c>
   84e3c:	009b      	lsls	r3, r3, #2
   84e3e:	3514      	adds	r5, #20
   84e40:	3114      	adds	r1, #20
   84e42:	4419      	add	r1, r3
   84e44:	442b      	add	r3, r5
   84e46:	e001      	b.n	84e4c <__mcmp+0x1c>
   84e48:	429d      	cmp	r5, r3
   84e4a:	d207      	bcs.n	84e5c <__mcmp+0x2c>
   84e4c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   84e50:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84e54:	4294      	cmp	r4, r2
   84e56:	d0f7      	beq.n	84e48 <__mcmp+0x18>
   84e58:	d302      	bcc.n	84e60 <__mcmp+0x30>
   84e5a:	2001      	movs	r0, #1
   84e5c:	bc30      	pop	{r4, r5}
   84e5e:	4770      	bx	lr
   84e60:	f04f 30ff 	mov.w	r0, #4294967295
   84e64:	e7fa      	b.n	84e5c <__mcmp+0x2c>
   84e66:	bf00      	nop

00084e68 <__mdiff>:
   84e68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84e6c:	690c      	ldr	r4, [r1, #16]
   84e6e:	4689      	mov	r9, r1
   84e70:	6911      	ldr	r1, [r2, #16]
   84e72:	4692      	mov	sl, r2
   84e74:	1a64      	subs	r4, r4, r1
   84e76:	2c00      	cmp	r4, #0
   84e78:	d117      	bne.n	84eaa <__mdiff+0x42>
   84e7a:	0089      	lsls	r1, r1, #2
   84e7c:	f109 0714 	add.w	r7, r9, #20
   84e80:	f102 0614 	add.w	r6, r2, #20
   84e84:	187b      	adds	r3, r7, r1
   84e86:	4431      	add	r1, r6
   84e88:	e001      	b.n	84e8e <__mdiff+0x26>
   84e8a:	429f      	cmp	r7, r3
   84e8c:	d265      	bcs.n	84f5a <__mdiff+0xf2>
   84e8e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   84e92:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84e96:	4295      	cmp	r5, r2
   84e98:	d0f7      	beq.n	84e8a <__mdiff+0x22>
   84e9a:	d267      	bcs.n	84f6c <__mdiff+0x104>
   84e9c:	464b      	mov	r3, r9
   84e9e:	46bb      	mov	fp, r7
   84ea0:	46d1      	mov	r9, sl
   84ea2:	4637      	mov	r7, r6
   84ea4:	469a      	mov	sl, r3
   84ea6:	2401      	movs	r4, #1
   84ea8:	e005      	b.n	84eb6 <__mdiff+0x4e>
   84eaa:	db61      	blt.n	84f70 <__mdiff+0x108>
   84eac:	2400      	movs	r4, #0
   84eae:	f109 0714 	add.w	r7, r9, #20
   84eb2:	f10a 0b14 	add.w	fp, sl, #20
   84eb6:	f8d9 1004 	ldr.w	r1, [r9, #4]
   84eba:	f7ff fdbb 	bl	84a34 <_Balloc>
   84ebe:	465d      	mov	r5, fp
   84ec0:	f04f 0800 	mov.w	r8, #0
   84ec4:	f8d9 e010 	ldr.w	lr, [r9, #16]
   84ec8:	f8da 3010 	ldr.w	r3, [sl, #16]
   84ecc:	463e      	mov	r6, r7
   84ece:	60c4      	str	r4, [r0, #12]
   84ed0:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   84ed4:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   84ed8:	f100 0414 	add.w	r4, r0, #20
   84edc:	f856 9b04 	ldr.w	r9, [r6], #4
   84ee0:	f855 2b04 	ldr.w	r2, [r5], #4
   84ee4:	fa1f f389 	uxth.w	r3, r9
   84ee8:	4443      	add	r3, r8
   84eea:	fa1f f882 	uxth.w	r8, r2
   84eee:	0c12      	lsrs	r2, r2, #16
   84ef0:	eba3 0308 	sub.w	r3, r3, r8
   84ef4:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   84ef8:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84efc:	b29b      	uxth	r3, r3
   84efe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84f02:	45ac      	cmp	ip, r5
   84f04:	f844 3b04 	str.w	r3, [r4], #4
   84f08:	ea4f 4822 	mov.w	r8, r2, asr #16
   84f0c:	d8e6      	bhi.n	84edc <__mdiff+0x74>
   84f0e:	42b7      	cmp	r7, r6
   84f10:	d917      	bls.n	84f42 <__mdiff+0xda>
   84f12:	46a4      	mov	ip, r4
   84f14:	4635      	mov	r5, r6
   84f16:	f855 3b04 	ldr.w	r3, [r5], #4
   84f1a:	b299      	uxth	r1, r3
   84f1c:	4441      	add	r1, r8
   84f1e:	140a      	asrs	r2, r1, #16
   84f20:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   84f24:	b289      	uxth	r1, r1
   84f26:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   84f2a:	42af      	cmp	r7, r5
   84f2c:	f84c 3b04 	str.w	r3, [ip], #4
   84f30:	ea4f 4822 	mov.w	r8, r2, asr #16
   84f34:	d8ef      	bhi.n	84f16 <__mdiff+0xae>
   84f36:	43f6      	mvns	r6, r6
   84f38:	4437      	add	r7, r6
   84f3a:	f027 0703 	bic.w	r7, r7, #3
   84f3e:	3704      	adds	r7, #4
   84f40:	443c      	add	r4, r7
   84f42:	3c04      	subs	r4, #4
   84f44:	b92b      	cbnz	r3, 84f52 <__mdiff+0xea>
   84f46:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   84f4a:	f10e 3eff 	add.w	lr, lr, #4294967295
   84f4e:	2b00      	cmp	r3, #0
   84f50:	d0f9      	beq.n	84f46 <__mdiff+0xde>
   84f52:	f8c0 e010 	str.w	lr, [r0, #16]
   84f56:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84f5a:	2100      	movs	r1, #0
   84f5c:	f7ff fd6a 	bl	84a34 <_Balloc>
   84f60:	2201      	movs	r2, #1
   84f62:	2300      	movs	r3, #0
   84f64:	6102      	str	r2, [r0, #16]
   84f66:	6143      	str	r3, [r0, #20]
   84f68:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84f6c:	46b3      	mov	fp, r6
   84f6e:	e7a2      	b.n	84eb6 <__mdiff+0x4e>
   84f70:	464b      	mov	r3, r9
   84f72:	f109 0b14 	add.w	fp, r9, #20
   84f76:	f102 0714 	add.w	r7, r2, #20
   84f7a:	4691      	mov	r9, r2
   84f7c:	2401      	movs	r4, #1
   84f7e:	469a      	mov	sl, r3
   84f80:	e799      	b.n	84eb6 <__mdiff+0x4e>
   84f82:	bf00      	nop

00084f84 <__d2b>:
   84f84:	b5f0      	push	{r4, r5, r6, r7, lr}
   84f86:	2101      	movs	r1, #1
   84f88:	b083      	sub	sp, #12
   84f8a:	461c      	mov	r4, r3
   84f8c:	f3c3 550a 	ubfx	r5, r3, #20, #11
   84f90:	4616      	mov	r6, r2
   84f92:	f7ff fd4f 	bl	84a34 <_Balloc>
   84f96:	f3c4 0413 	ubfx	r4, r4, #0, #20
   84f9a:	4607      	mov	r7, r0
   84f9c:	b10d      	cbz	r5, 84fa2 <__d2b+0x1e>
   84f9e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   84fa2:	9401      	str	r4, [sp, #4]
   84fa4:	b306      	cbz	r6, 84fe8 <__d2b+0x64>
   84fa6:	a802      	add	r0, sp, #8
   84fa8:	f840 6d08 	str.w	r6, [r0, #-8]!
   84fac:	f7ff fdd4 	bl	84b58 <__lo0bits>
   84fb0:	2800      	cmp	r0, #0
   84fb2:	d130      	bne.n	85016 <__d2b+0x92>
   84fb4:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84fb8:	617a      	str	r2, [r7, #20]
   84fba:	2b00      	cmp	r3, #0
   84fbc:	bf0c      	ite	eq
   84fbe:	2101      	moveq	r1, #1
   84fc0:	2102      	movne	r1, #2
   84fc2:	61bb      	str	r3, [r7, #24]
   84fc4:	6139      	str	r1, [r7, #16]
   84fc6:	b9d5      	cbnz	r5, 84ffe <__d2b+0x7a>
   84fc8:	9a08      	ldr	r2, [sp, #32]
   84fca:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   84fce:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84fd2:	6010      	str	r0, [r2, #0]
   84fd4:	6918      	ldr	r0, [r3, #16]
   84fd6:	f7ff fd9f 	bl	84b18 <__hi0bits>
   84fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84fdc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   84fe0:	6018      	str	r0, [r3, #0]
   84fe2:	4638      	mov	r0, r7
   84fe4:	b003      	add	sp, #12
   84fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84fe8:	a801      	add	r0, sp, #4
   84fea:	f7ff fdb5 	bl	84b58 <__lo0bits>
   84fee:	2201      	movs	r2, #1
   84ff0:	9b01      	ldr	r3, [sp, #4]
   84ff2:	4611      	mov	r1, r2
   84ff4:	3020      	adds	r0, #32
   84ff6:	613a      	str	r2, [r7, #16]
   84ff8:	617b      	str	r3, [r7, #20]
   84ffa:	2d00      	cmp	r5, #0
   84ffc:	d0e4      	beq.n	84fc8 <__d2b+0x44>
   84ffe:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   85002:	9a08      	ldr	r2, [sp, #32]
   85004:	4403      	add	r3, r0
   85006:	6013      	str	r3, [r2, #0]
   85008:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8500a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   8500e:	6018      	str	r0, [r3, #0]
   85010:	4638      	mov	r0, r7
   85012:	b003      	add	sp, #12
   85014:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85016:	9b01      	ldr	r3, [sp, #4]
   85018:	f1c0 0220 	rsb	r2, r0, #32
   8501c:	9900      	ldr	r1, [sp, #0]
   8501e:	fa03 f202 	lsl.w	r2, r3, r2
   85022:	430a      	orrs	r2, r1
   85024:	40c3      	lsrs	r3, r0
   85026:	9301      	str	r3, [sp, #4]
   85028:	617a      	str	r2, [r7, #20]
   8502a:	e7c6      	b.n	84fba <__d2b+0x36>

0008502c <_sbrk_r>:
   8502c:	b538      	push	{r3, r4, r5, lr}
   8502e:	2300      	movs	r3, #0
   85030:	4c06      	ldr	r4, [pc, #24]	; (8504c <_sbrk_r+0x20>)
   85032:	4605      	mov	r5, r0
   85034:	4608      	mov	r0, r1
   85036:	6023      	str	r3, [r4, #0]
   85038:	f7fc fd38 	bl	81aac <_sbrk>
   8503c:	1c43      	adds	r3, r0, #1
   8503e:	d000      	beq.n	85042 <_sbrk_r+0x16>
   85040:	bd38      	pop	{r3, r4, r5, pc}
   85042:	6823      	ldr	r3, [r4, #0]
   85044:	2b00      	cmp	r3, #0
   85046:	d0fb      	beq.n	85040 <_sbrk_r+0x14>
   85048:	602b      	str	r3, [r5, #0]
   8504a:	bd38      	pop	{r3, r4, r5, pc}
   8504c:	200714d0 	.word	0x200714d0

00085050 <__ssprint_r>:
   85050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85054:	6893      	ldr	r3, [r2, #8]
   85056:	b083      	sub	sp, #12
   85058:	4690      	mov	r8, r2
   8505a:	2b00      	cmp	r3, #0
   8505c:	d070      	beq.n	85140 <__ssprint_r+0xf0>
   8505e:	4682      	mov	sl, r0
   85060:	460c      	mov	r4, r1
   85062:	6817      	ldr	r7, [r2, #0]
   85064:	688d      	ldr	r5, [r1, #8]
   85066:	6808      	ldr	r0, [r1, #0]
   85068:	e042      	b.n	850f0 <__ssprint_r+0xa0>
   8506a:	89a3      	ldrh	r3, [r4, #12]
   8506c:	f413 6f90 	tst.w	r3, #1152	; 0x480
   85070:	d02e      	beq.n	850d0 <__ssprint_r+0x80>
   85072:	6965      	ldr	r5, [r4, #20]
   85074:	6921      	ldr	r1, [r4, #16]
   85076:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   8507a:	eba0 0b01 	sub.w	fp, r0, r1
   8507e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   85082:	f10b 0001 	add.w	r0, fp, #1
   85086:	106d      	asrs	r5, r5, #1
   85088:	4430      	add	r0, r6
   8508a:	42a8      	cmp	r0, r5
   8508c:	462a      	mov	r2, r5
   8508e:	bf84      	itt	hi
   85090:	4605      	movhi	r5, r0
   85092:	462a      	movhi	r2, r5
   85094:	055b      	lsls	r3, r3, #21
   85096:	d538      	bpl.n	8510a <__ssprint_r+0xba>
   85098:	4611      	mov	r1, r2
   8509a:	4650      	mov	r0, sl
   8509c:	f7ff f94a 	bl	84334 <_malloc_r>
   850a0:	2800      	cmp	r0, #0
   850a2:	d03c      	beq.n	8511e <__ssprint_r+0xce>
   850a4:	465a      	mov	r2, fp
   850a6:	6921      	ldr	r1, [r4, #16]
   850a8:	9001      	str	r0, [sp, #4]
   850aa:	f7ff fc41 	bl	84930 <memcpy>
   850ae:	89a2      	ldrh	r2, [r4, #12]
   850b0:	9b01      	ldr	r3, [sp, #4]
   850b2:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   850b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   850ba:	81a2      	strh	r2, [r4, #12]
   850bc:	eba5 020b 	sub.w	r2, r5, fp
   850c0:	eb03 000b 	add.w	r0, r3, fp
   850c4:	6165      	str	r5, [r4, #20]
   850c6:	46b3      	mov	fp, r6
   850c8:	4635      	mov	r5, r6
   850ca:	6123      	str	r3, [r4, #16]
   850cc:	6020      	str	r0, [r4, #0]
   850ce:	60a2      	str	r2, [r4, #8]
   850d0:	465a      	mov	r2, fp
   850d2:	4649      	mov	r1, r9
   850d4:	f000 fa0e 	bl	854f4 <memmove>
   850d8:	f8d8 3008 	ldr.w	r3, [r8, #8]
   850dc:	68a2      	ldr	r2, [r4, #8]
   850de:	6820      	ldr	r0, [r4, #0]
   850e0:	1b55      	subs	r5, r2, r5
   850e2:	4458      	add	r0, fp
   850e4:	1b9e      	subs	r6, r3, r6
   850e6:	60a5      	str	r5, [r4, #8]
   850e8:	6020      	str	r0, [r4, #0]
   850ea:	f8c8 6008 	str.w	r6, [r8, #8]
   850ee:	b33e      	cbz	r6, 85140 <__ssprint_r+0xf0>
   850f0:	687e      	ldr	r6, [r7, #4]
   850f2:	463b      	mov	r3, r7
   850f4:	3708      	adds	r7, #8
   850f6:	2e00      	cmp	r6, #0
   850f8:	d0fa      	beq.n	850f0 <__ssprint_r+0xa0>
   850fa:	42ae      	cmp	r6, r5
   850fc:	f8d3 9000 	ldr.w	r9, [r3]
   85100:	46ab      	mov	fp, r5
   85102:	d2b2      	bcs.n	8506a <__ssprint_r+0x1a>
   85104:	4635      	mov	r5, r6
   85106:	46b3      	mov	fp, r6
   85108:	e7e2      	b.n	850d0 <__ssprint_r+0x80>
   8510a:	4650      	mov	r0, sl
   8510c:	f000 fa56 	bl	855bc <_realloc_r>
   85110:	4603      	mov	r3, r0
   85112:	2800      	cmp	r0, #0
   85114:	d1d2      	bne.n	850bc <__ssprint_r+0x6c>
   85116:	6921      	ldr	r1, [r4, #16]
   85118:	4650      	mov	r0, sl
   8511a:	f000 f905 	bl	85328 <_free_r>
   8511e:	230c      	movs	r3, #12
   85120:	2200      	movs	r2, #0
   85122:	f04f 30ff 	mov.w	r0, #4294967295
   85126:	f8ca 3000 	str.w	r3, [sl]
   8512a:	89a3      	ldrh	r3, [r4, #12]
   8512c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85130:	81a3      	strh	r3, [r4, #12]
   85132:	f8c8 2008 	str.w	r2, [r8, #8]
   85136:	f8c8 2004 	str.w	r2, [r8, #4]
   8513a:	b003      	add	sp, #12
   8513c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85140:	2000      	movs	r0, #0
   85142:	f8c8 0004 	str.w	r0, [r8, #4]
   85146:	b003      	add	sp, #12
   85148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008514c <__ascii_wctomb>:
   8514c:	b119      	cbz	r1, 85156 <__ascii_wctomb+0xa>
   8514e:	2aff      	cmp	r2, #255	; 0xff
   85150:	d803      	bhi.n	8515a <__ascii_wctomb+0xe>
   85152:	700a      	strb	r2, [r1, #0]
   85154:	2101      	movs	r1, #1
   85156:	4608      	mov	r0, r1
   85158:	4770      	bx	lr
   8515a:	238a      	movs	r3, #138	; 0x8a
   8515c:	f04f 31ff 	mov.w	r1, #4294967295
   85160:	6003      	str	r3, [r0, #0]
   85162:	e7f8      	b.n	85156 <__ascii_wctomb+0xa>

00085164 <__register_exitproc>:
   85164:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85168:	4d2c      	ldr	r5, [pc, #176]	; (8521c <__register_exitproc+0xb8>)
   8516a:	4606      	mov	r6, r0
   8516c:	6828      	ldr	r0, [r5, #0]
   8516e:	4698      	mov	r8, r3
   85170:	460f      	mov	r7, r1
   85172:	4691      	mov	r9, r2
   85174:	f7ff f8da 	bl	8432c <__retarget_lock_acquire_recursive>
   85178:	4b29      	ldr	r3, [pc, #164]	; (85220 <__register_exitproc+0xbc>)
   8517a:	681c      	ldr	r4, [r3, #0]
   8517c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   85180:	2b00      	cmp	r3, #0
   85182:	d03e      	beq.n	85202 <__register_exitproc+0x9e>
   85184:	685a      	ldr	r2, [r3, #4]
   85186:	2a1f      	cmp	r2, #31
   85188:	dc1c      	bgt.n	851c4 <__register_exitproc+0x60>
   8518a:	f102 0e01 	add.w	lr, r2, #1
   8518e:	b176      	cbz	r6, 851ae <__register_exitproc+0x4a>
   85190:	2101      	movs	r1, #1
   85192:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   85196:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8519a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   8519e:	4091      	lsls	r1, r2
   851a0:	4308      	orrs	r0, r1
   851a2:	2e02      	cmp	r6, #2
   851a4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   851a8:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   851ac:	d023      	beq.n	851f6 <__register_exitproc+0x92>
   851ae:	3202      	adds	r2, #2
   851b0:	f8c3 e004 	str.w	lr, [r3, #4]
   851b4:	6828      	ldr	r0, [r5, #0]
   851b6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   851ba:	f7ff f8b9 	bl	84330 <__retarget_lock_release_recursive>
   851be:	2000      	movs	r0, #0
   851c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   851c4:	4b17      	ldr	r3, [pc, #92]	; (85224 <__register_exitproc+0xc0>)
   851c6:	b30b      	cbz	r3, 8520c <__register_exitproc+0xa8>
   851c8:	f44f 70c8 	mov.w	r0, #400	; 0x190
   851cc:	f3af 8000 	nop.w
   851d0:	4603      	mov	r3, r0
   851d2:	b1d8      	cbz	r0, 8520c <__register_exitproc+0xa8>
   851d4:	2000      	movs	r0, #0
   851d6:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   851da:	f04f 0e01 	mov.w	lr, #1
   851de:	6058      	str	r0, [r3, #4]
   851e0:	6019      	str	r1, [r3, #0]
   851e2:	4602      	mov	r2, r0
   851e4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   851e8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   851ec:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   851f0:	2e00      	cmp	r6, #0
   851f2:	d0dc      	beq.n	851ae <__register_exitproc+0x4a>
   851f4:	e7cc      	b.n	85190 <__register_exitproc+0x2c>
   851f6:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   851fa:	4301      	orrs	r1, r0
   851fc:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   85200:	e7d5      	b.n	851ae <__register_exitproc+0x4a>
   85202:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   85206:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8520a:	e7bb      	b.n	85184 <__register_exitproc+0x20>
   8520c:	6828      	ldr	r0, [r5, #0]
   8520e:	f7ff f88f 	bl	84330 <__retarget_lock_release_recursive>
   85212:	f04f 30ff 	mov.w	r0, #4294967295
   85216:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8521a:	bf00      	nop
   8521c:	200709d0 	.word	0x200709d0
   85220:	0008676c 	.word	0x0008676c
   85224:	00000000 	.word	0x00000000

00085228 <_calloc_r>:
   85228:	b510      	push	{r4, lr}
   8522a:	fb02 f101 	mul.w	r1, r2, r1
   8522e:	f7ff f881 	bl	84334 <_malloc_r>
   85232:	4604      	mov	r4, r0
   85234:	b1d8      	cbz	r0, 8526e <_calloc_r+0x46>
   85236:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8523a:	f022 0203 	bic.w	r2, r2, #3
   8523e:	3a04      	subs	r2, #4
   85240:	2a24      	cmp	r2, #36	; 0x24
   85242:	d818      	bhi.n	85276 <_calloc_r+0x4e>
   85244:	2a13      	cmp	r2, #19
   85246:	d914      	bls.n	85272 <_calloc_r+0x4a>
   85248:	2300      	movs	r3, #0
   8524a:	2a1b      	cmp	r2, #27
   8524c:	6003      	str	r3, [r0, #0]
   8524e:	6043      	str	r3, [r0, #4]
   85250:	d916      	bls.n	85280 <_calloc_r+0x58>
   85252:	2a24      	cmp	r2, #36	; 0x24
   85254:	6083      	str	r3, [r0, #8]
   85256:	60c3      	str	r3, [r0, #12]
   85258:	bf11      	iteee	ne
   8525a:	f100 0210 	addne.w	r2, r0, #16
   8525e:	6103      	streq	r3, [r0, #16]
   85260:	6143      	streq	r3, [r0, #20]
   85262:	f100 0218 	addeq.w	r2, r0, #24
   85266:	2300      	movs	r3, #0
   85268:	6013      	str	r3, [r2, #0]
   8526a:	6053      	str	r3, [r2, #4]
   8526c:	6093      	str	r3, [r2, #8]
   8526e:	4620      	mov	r0, r4
   85270:	bd10      	pop	{r4, pc}
   85272:	4602      	mov	r2, r0
   85274:	e7f7      	b.n	85266 <_calloc_r+0x3e>
   85276:	2100      	movs	r1, #0
   85278:	f7fc fc60 	bl	81b3c <memset>
   8527c:	4620      	mov	r0, r4
   8527e:	bd10      	pop	{r4, pc}
   85280:	f100 0208 	add.w	r2, r0, #8
   85284:	e7ef      	b.n	85266 <_calloc_r+0x3e>
   85286:	bf00      	nop

00085288 <_malloc_trim_r>:
   85288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8528a:	460c      	mov	r4, r1
   8528c:	4f23      	ldr	r7, [pc, #140]	; (8531c <_malloc_trim_r+0x94>)
   8528e:	4606      	mov	r6, r0
   85290:	f7ff fbc4 	bl	84a1c <__malloc_lock>
   85294:	68bb      	ldr	r3, [r7, #8]
   85296:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8529a:	685d      	ldr	r5, [r3, #4]
   8529c:	310f      	adds	r1, #15
   8529e:	f025 0503 	bic.w	r5, r5, #3
   852a2:	4429      	add	r1, r5
   852a4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   852a8:	f021 010f 	bic.w	r1, r1, #15
   852ac:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   852b0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   852b4:	db07      	blt.n	852c6 <_malloc_trim_r+0x3e>
   852b6:	2100      	movs	r1, #0
   852b8:	4630      	mov	r0, r6
   852ba:	f7ff feb7 	bl	8502c <_sbrk_r>
   852be:	68bb      	ldr	r3, [r7, #8]
   852c0:	442b      	add	r3, r5
   852c2:	4298      	cmp	r0, r3
   852c4:	d004      	beq.n	852d0 <_malloc_trim_r+0x48>
   852c6:	4630      	mov	r0, r6
   852c8:	f7ff fbae 	bl	84a28 <__malloc_unlock>
   852cc:	2000      	movs	r0, #0
   852ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   852d0:	4261      	negs	r1, r4
   852d2:	4630      	mov	r0, r6
   852d4:	f7ff feaa 	bl	8502c <_sbrk_r>
   852d8:	3001      	adds	r0, #1
   852da:	d00d      	beq.n	852f8 <_malloc_trim_r+0x70>
   852dc:	4b10      	ldr	r3, [pc, #64]	; (85320 <_malloc_trim_r+0x98>)
   852de:	68ba      	ldr	r2, [r7, #8]
   852e0:	6819      	ldr	r1, [r3, #0]
   852e2:	1b2d      	subs	r5, r5, r4
   852e4:	f045 0501 	orr.w	r5, r5, #1
   852e8:	4630      	mov	r0, r6
   852ea:	1b09      	subs	r1, r1, r4
   852ec:	6055      	str	r5, [r2, #4]
   852ee:	6019      	str	r1, [r3, #0]
   852f0:	f7ff fb9a 	bl	84a28 <__malloc_unlock>
   852f4:	2001      	movs	r0, #1
   852f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   852f8:	2100      	movs	r1, #0
   852fa:	4630      	mov	r0, r6
   852fc:	f7ff fe96 	bl	8502c <_sbrk_r>
   85300:	68ba      	ldr	r2, [r7, #8]
   85302:	1a83      	subs	r3, r0, r2
   85304:	2b0f      	cmp	r3, #15
   85306:	ddde      	ble.n	852c6 <_malloc_trim_r+0x3e>
   85308:	4c06      	ldr	r4, [pc, #24]	; (85324 <_malloc_trim_r+0x9c>)
   8530a:	4905      	ldr	r1, [pc, #20]	; (85320 <_malloc_trim_r+0x98>)
   8530c:	6824      	ldr	r4, [r4, #0]
   8530e:	f043 0301 	orr.w	r3, r3, #1
   85312:	1b00      	subs	r0, r0, r4
   85314:	6053      	str	r3, [r2, #4]
   85316:	6008      	str	r0, [r1, #0]
   85318:	e7d5      	b.n	852c6 <_malloc_trim_r+0x3e>
   8531a:	bf00      	nop
   8531c:	20070b40 	.word	0x20070b40
   85320:	20070ff4 	.word	0x20070ff4
   85324:	20070f48 	.word	0x20070f48

00085328 <_free_r>:
   85328:	2900      	cmp	r1, #0
   8532a:	d044      	beq.n	853b6 <_free_r+0x8e>
   8532c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85330:	460d      	mov	r5, r1
   85332:	4680      	mov	r8, r0
   85334:	f7ff fb72 	bl	84a1c <__malloc_lock>
   85338:	f855 7c04 	ldr.w	r7, [r5, #-4]
   8533c:	4969      	ldr	r1, [pc, #420]	; (854e4 <_free_r+0x1bc>)
   8533e:	f1a5 0408 	sub.w	r4, r5, #8
   85342:	f027 0301 	bic.w	r3, r7, #1
   85346:	18e2      	adds	r2, r4, r3
   85348:	688e      	ldr	r6, [r1, #8]
   8534a:	6850      	ldr	r0, [r2, #4]
   8534c:	42b2      	cmp	r2, r6
   8534e:	f020 0003 	bic.w	r0, r0, #3
   85352:	d05e      	beq.n	85412 <_free_r+0xea>
   85354:	07fe      	lsls	r6, r7, #31
   85356:	6050      	str	r0, [r2, #4]
   85358:	d40b      	bmi.n	85372 <_free_r+0x4a>
   8535a:	f855 7c08 	ldr.w	r7, [r5, #-8]
   8535e:	f101 0e08 	add.w	lr, r1, #8
   85362:	1be4      	subs	r4, r4, r7
   85364:	68a5      	ldr	r5, [r4, #8]
   85366:	443b      	add	r3, r7
   85368:	4575      	cmp	r5, lr
   8536a:	d06d      	beq.n	85448 <_free_r+0x120>
   8536c:	68e7      	ldr	r7, [r4, #12]
   8536e:	60ef      	str	r7, [r5, #12]
   85370:	60bd      	str	r5, [r7, #8]
   85372:	1815      	adds	r5, r2, r0
   85374:	686d      	ldr	r5, [r5, #4]
   85376:	07ed      	lsls	r5, r5, #31
   85378:	d53e      	bpl.n	853f8 <_free_r+0xd0>
   8537a:	f043 0201 	orr.w	r2, r3, #1
   8537e:	6062      	str	r2, [r4, #4]
   85380:	50e3      	str	r3, [r4, r3]
   85382:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   85386:	d217      	bcs.n	853b8 <_free_r+0x90>
   85388:	2201      	movs	r2, #1
   8538a:	08db      	lsrs	r3, r3, #3
   8538c:	1098      	asrs	r0, r3, #2
   8538e:	684d      	ldr	r5, [r1, #4]
   85390:	4413      	add	r3, r2
   85392:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   85396:	4082      	lsls	r2, r0
   85398:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   8539c:	432a      	orrs	r2, r5
   8539e:	3808      	subs	r0, #8
   853a0:	60e0      	str	r0, [r4, #12]
   853a2:	60a7      	str	r7, [r4, #8]
   853a4:	604a      	str	r2, [r1, #4]
   853a6:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   853aa:	60fc      	str	r4, [r7, #12]
   853ac:	4640      	mov	r0, r8
   853ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   853b2:	f7ff bb39 	b.w	84a28 <__malloc_unlock>
   853b6:	4770      	bx	lr
   853b8:	0a5a      	lsrs	r2, r3, #9
   853ba:	2a04      	cmp	r2, #4
   853bc:	d852      	bhi.n	85464 <_free_r+0x13c>
   853be:	099a      	lsrs	r2, r3, #6
   853c0:	f102 0739 	add.w	r7, r2, #57	; 0x39
   853c4:	00ff      	lsls	r7, r7, #3
   853c6:	f102 0538 	add.w	r5, r2, #56	; 0x38
   853ca:	19c8      	adds	r0, r1, r7
   853cc:	59ca      	ldr	r2, [r1, r7]
   853ce:	3808      	subs	r0, #8
   853d0:	4290      	cmp	r0, r2
   853d2:	d04f      	beq.n	85474 <_free_r+0x14c>
   853d4:	6851      	ldr	r1, [r2, #4]
   853d6:	f021 0103 	bic.w	r1, r1, #3
   853da:	428b      	cmp	r3, r1
   853dc:	d232      	bcs.n	85444 <_free_r+0x11c>
   853de:	6892      	ldr	r2, [r2, #8]
   853e0:	4290      	cmp	r0, r2
   853e2:	d1f7      	bne.n	853d4 <_free_r+0xac>
   853e4:	68c3      	ldr	r3, [r0, #12]
   853e6:	60a0      	str	r0, [r4, #8]
   853e8:	60e3      	str	r3, [r4, #12]
   853ea:	609c      	str	r4, [r3, #8]
   853ec:	60c4      	str	r4, [r0, #12]
   853ee:	4640      	mov	r0, r8
   853f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   853f4:	f7ff bb18 	b.w	84a28 <__malloc_unlock>
   853f8:	6895      	ldr	r5, [r2, #8]
   853fa:	4f3b      	ldr	r7, [pc, #236]	; (854e8 <_free_r+0x1c0>)
   853fc:	4403      	add	r3, r0
   853fe:	42bd      	cmp	r5, r7
   85400:	d040      	beq.n	85484 <_free_r+0x15c>
   85402:	68d0      	ldr	r0, [r2, #12]
   85404:	f043 0201 	orr.w	r2, r3, #1
   85408:	60e8      	str	r0, [r5, #12]
   8540a:	6085      	str	r5, [r0, #8]
   8540c:	6062      	str	r2, [r4, #4]
   8540e:	50e3      	str	r3, [r4, r3]
   85410:	e7b7      	b.n	85382 <_free_r+0x5a>
   85412:	07ff      	lsls	r7, r7, #31
   85414:	4403      	add	r3, r0
   85416:	d407      	bmi.n	85428 <_free_r+0x100>
   85418:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8541c:	1b64      	subs	r4, r4, r5
   8541e:	68e2      	ldr	r2, [r4, #12]
   85420:	68a0      	ldr	r0, [r4, #8]
   85422:	442b      	add	r3, r5
   85424:	60c2      	str	r2, [r0, #12]
   85426:	6090      	str	r0, [r2, #8]
   85428:	4a30      	ldr	r2, [pc, #192]	; (854ec <_free_r+0x1c4>)
   8542a:	f043 0001 	orr.w	r0, r3, #1
   8542e:	6812      	ldr	r2, [r2, #0]
   85430:	6060      	str	r0, [r4, #4]
   85432:	4293      	cmp	r3, r2
   85434:	608c      	str	r4, [r1, #8]
   85436:	d3b9      	bcc.n	853ac <_free_r+0x84>
   85438:	4b2d      	ldr	r3, [pc, #180]	; (854f0 <_free_r+0x1c8>)
   8543a:	4640      	mov	r0, r8
   8543c:	6819      	ldr	r1, [r3, #0]
   8543e:	f7ff ff23 	bl	85288 <_malloc_trim_r>
   85442:	e7b3      	b.n	853ac <_free_r+0x84>
   85444:	4610      	mov	r0, r2
   85446:	e7cd      	b.n	853e4 <_free_r+0xbc>
   85448:	1811      	adds	r1, r2, r0
   8544a:	6849      	ldr	r1, [r1, #4]
   8544c:	07c9      	lsls	r1, r1, #31
   8544e:	d444      	bmi.n	854da <_free_r+0x1b2>
   85450:	6891      	ldr	r1, [r2, #8]
   85452:	4403      	add	r3, r0
   85454:	68d2      	ldr	r2, [r2, #12]
   85456:	f043 0001 	orr.w	r0, r3, #1
   8545a:	60ca      	str	r2, [r1, #12]
   8545c:	6091      	str	r1, [r2, #8]
   8545e:	6060      	str	r0, [r4, #4]
   85460:	50e3      	str	r3, [r4, r3]
   85462:	e7a3      	b.n	853ac <_free_r+0x84>
   85464:	2a14      	cmp	r2, #20
   85466:	d816      	bhi.n	85496 <_free_r+0x16e>
   85468:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   8546c:	00ff      	lsls	r7, r7, #3
   8546e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   85472:	e7aa      	b.n	853ca <_free_r+0xa2>
   85474:	2301      	movs	r3, #1
   85476:	10aa      	asrs	r2, r5, #2
   85478:	684d      	ldr	r5, [r1, #4]
   8547a:	4093      	lsls	r3, r2
   8547c:	432b      	orrs	r3, r5
   8547e:	604b      	str	r3, [r1, #4]
   85480:	4603      	mov	r3, r0
   85482:	e7b0      	b.n	853e6 <_free_r+0xbe>
   85484:	f043 0201 	orr.w	r2, r3, #1
   85488:	614c      	str	r4, [r1, #20]
   8548a:	610c      	str	r4, [r1, #16]
   8548c:	60e5      	str	r5, [r4, #12]
   8548e:	60a5      	str	r5, [r4, #8]
   85490:	6062      	str	r2, [r4, #4]
   85492:	50e3      	str	r3, [r4, r3]
   85494:	e78a      	b.n	853ac <_free_r+0x84>
   85496:	2a54      	cmp	r2, #84	; 0x54
   85498:	d806      	bhi.n	854a8 <_free_r+0x180>
   8549a:	0b1a      	lsrs	r2, r3, #12
   8549c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   854a0:	00ff      	lsls	r7, r7, #3
   854a2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   854a6:	e790      	b.n	853ca <_free_r+0xa2>
   854a8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   854ac:	d806      	bhi.n	854bc <_free_r+0x194>
   854ae:	0bda      	lsrs	r2, r3, #15
   854b0:	f102 0778 	add.w	r7, r2, #120	; 0x78
   854b4:	00ff      	lsls	r7, r7, #3
   854b6:	f102 0577 	add.w	r5, r2, #119	; 0x77
   854ba:	e786      	b.n	853ca <_free_r+0xa2>
   854bc:	f240 5054 	movw	r0, #1364	; 0x554
   854c0:	4282      	cmp	r2, r0
   854c2:	d806      	bhi.n	854d2 <_free_r+0x1aa>
   854c4:	0c9a      	lsrs	r2, r3, #18
   854c6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   854ca:	00ff      	lsls	r7, r7, #3
   854cc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   854d0:	e77b      	b.n	853ca <_free_r+0xa2>
   854d2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   854d6:	257e      	movs	r5, #126	; 0x7e
   854d8:	e777      	b.n	853ca <_free_r+0xa2>
   854da:	f043 0101 	orr.w	r1, r3, #1
   854de:	6061      	str	r1, [r4, #4]
   854e0:	6013      	str	r3, [r2, #0]
   854e2:	e763      	b.n	853ac <_free_r+0x84>
   854e4:	20070b40 	.word	0x20070b40
   854e8:	20070b48 	.word	0x20070b48
   854ec:	20070f4c 	.word	0x20070f4c
   854f0:	20071024 	.word	0x20071024

000854f4 <memmove>:
   854f4:	4288      	cmp	r0, r1
   854f6:	b5f0      	push	{r4, r5, r6, r7, lr}
   854f8:	d90d      	bls.n	85516 <memmove+0x22>
   854fa:	188b      	adds	r3, r1, r2
   854fc:	4298      	cmp	r0, r3
   854fe:	d20a      	bcs.n	85516 <memmove+0x22>
   85500:	1884      	adds	r4, r0, r2
   85502:	2a00      	cmp	r2, #0
   85504:	d051      	beq.n	855aa <memmove+0xb6>
   85506:	4622      	mov	r2, r4
   85508:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   8550c:	4299      	cmp	r1, r3
   8550e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   85512:	d1f9      	bne.n	85508 <memmove+0x14>
   85514:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85516:	2a0f      	cmp	r2, #15
   85518:	d948      	bls.n	855ac <memmove+0xb8>
   8551a:	ea41 0300 	orr.w	r3, r1, r0
   8551e:	079b      	lsls	r3, r3, #30
   85520:	d146      	bne.n	855b0 <memmove+0xbc>
   85522:	4615      	mov	r5, r2
   85524:	f100 0410 	add.w	r4, r0, #16
   85528:	f101 0310 	add.w	r3, r1, #16
   8552c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   85530:	3d10      	subs	r5, #16
   85532:	f844 6c10 	str.w	r6, [r4, #-16]
   85536:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8553a:	2d0f      	cmp	r5, #15
   8553c:	f844 6c0c 	str.w	r6, [r4, #-12]
   85540:	f853 6c08 	ldr.w	r6, [r3, #-8]
   85544:	f104 0410 	add.w	r4, r4, #16
   85548:	f844 6c18 	str.w	r6, [r4, #-24]
   8554c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   85550:	f103 0310 	add.w	r3, r3, #16
   85554:	f844 6c14 	str.w	r6, [r4, #-20]
   85558:	d8e8      	bhi.n	8552c <memmove+0x38>
   8555a:	f1a2 0310 	sub.w	r3, r2, #16
   8555e:	f023 030f 	bic.w	r3, r3, #15
   85562:	f002 0e0f 	and.w	lr, r2, #15
   85566:	3310      	adds	r3, #16
   85568:	f1be 0f03 	cmp.w	lr, #3
   8556c:	4419      	add	r1, r3
   8556e:	4403      	add	r3, r0
   85570:	d921      	bls.n	855b6 <memmove+0xc2>
   85572:	460e      	mov	r6, r1
   85574:	4674      	mov	r4, lr
   85576:	1f1d      	subs	r5, r3, #4
   85578:	f856 7b04 	ldr.w	r7, [r6], #4
   8557c:	3c04      	subs	r4, #4
   8557e:	2c03      	cmp	r4, #3
   85580:	f845 7f04 	str.w	r7, [r5, #4]!
   85584:	d8f8      	bhi.n	85578 <memmove+0x84>
   85586:	f1ae 0404 	sub.w	r4, lr, #4
   8558a:	f024 0403 	bic.w	r4, r4, #3
   8558e:	3404      	adds	r4, #4
   85590:	4421      	add	r1, r4
   85592:	4423      	add	r3, r4
   85594:	f002 0203 	and.w	r2, r2, #3
   85598:	b162      	cbz	r2, 855b4 <memmove+0xc0>
   8559a:	3b01      	subs	r3, #1
   8559c:	440a      	add	r2, r1
   8559e:	f811 4b01 	ldrb.w	r4, [r1], #1
   855a2:	428a      	cmp	r2, r1
   855a4:	f803 4f01 	strb.w	r4, [r3, #1]!
   855a8:	d1f9      	bne.n	8559e <memmove+0xaa>
   855aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   855ac:	4603      	mov	r3, r0
   855ae:	e7f3      	b.n	85598 <memmove+0xa4>
   855b0:	4603      	mov	r3, r0
   855b2:	e7f2      	b.n	8559a <memmove+0xa6>
   855b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   855b6:	4672      	mov	r2, lr
   855b8:	e7ee      	b.n	85598 <memmove+0xa4>
   855ba:	bf00      	nop

000855bc <_realloc_r>:
   855bc:	2900      	cmp	r1, #0
   855be:	f000 8094 	beq.w	856ea <_realloc_r+0x12e>
   855c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   855c6:	460c      	mov	r4, r1
   855c8:	4615      	mov	r5, r2
   855ca:	b083      	sub	sp, #12
   855cc:	4680      	mov	r8, r0
   855ce:	f105 060b 	add.w	r6, r5, #11
   855d2:	f7ff fa23 	bl	84a1c <__malloc_lock>
   855d6:	f854 ec04 	ldr.w	lr, [r4, #-4]
   855da:	2e16      	cmp	r6, #22
   855dc:	f02e 0703 	bic.w	r7, lr, #3
   855e0:	f1a4 0908 	sub.w	r9, r4, #8
   855e4:	d83c      	bhi.n	85660 <_realloc_r+0xa4>
   855e6:	2210      	movs	r2, #16
   855e8:	4616      	mov	r6, r2
   855ea:	42b5      	cmp	r5, r6
   855ec:	d83d      	bhi.n	8566a <_realloc_r+0xae>
   855ee:	4297      	cmp	r7, r2
   855f0:	da43      	bge.n	8567a <_realloc_r+0xbe>
   855f2:	4bc6      	ldr	r3, [pc, #792]	; (8590c <_realloc_r+0x350>)
   855f4:	eb09 0007 	add.w	r0, r9, r7
   855f8:	6899      	ldr	r1, [r3, #8]
   855fa:	4288      	cmp	r0, r1
   855fc:	f000 80c3 	beq.w	85786 <_realloc_r+0x1ca>
   85600:	6843      	ldr	r3, [r0, #4]
   85602:	f023 0101 	bic.w	r1, r3, #1
   85606:	4401      	add	r1, r0
   85608:	6849      	ldr	r1, [r1, #4]
   8560a:	07c9      	lsls	r1, r1, #31
   8560c:	d54d      	bpl.n	856aa <_realloc_r+0xee>
   8560e:	f01e 0f01 	tst.w	lr, #1
   85612:	f000 809b 	beq.w	8574c <_realloc_r+0x190>
   85616:	4629      	mov	r1, r5
   85618:	4640      	mov	r0, r8
   8561a:	f7fe fe8b 	bl	84334 <_malloc_r>
   8561e:	4605      	mov	r5, r0
   85620:	2800      	cmp	r0, #0
   85622:	d03b      	beq.n	8569c <_realloc_r+0xe0>
   85624:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85628:	f1a0 0208 	sub.w	r2, r0, #8
   8562c:	f023 0301 	bic.w	r3, r3, #1
   85630:	444b      	add	r3, r9
   85632:	429a      	cmp	r2, r3
   85634:	f000 812b 	beq.w	8588e <_realloc_r+0x2d2>
   85638:	1f3a      	subs	r2, r7, #4
   8563a:	2a24      	cmp	r2, #36	; 0x24
   8563c:	f200 8118 	bhi.w	85870 <_realloc_r+0x2b4>
   85640:	2a13      	cmp	r2, #19
   85642:	f200 80eb 	bhi.w	8581c <_realloc_r+0x260>
   85646:	4603      	mov	r3, r0
   85648:	4622      	mov	r2, r4
   8564a:	6811      	ldr	r1, [r2, #0]
   8564c:	6019      	str	r1, [r3, #0]
   8564e:	6851      	ldr	r1, [r2, #4]
   85650:	6059      	str	r1, [r3, #4]
   85652:	6892      	ldr	r2, [r2, #8]
   85654:	609a      	str	r2, [r3, #8]
   85656:	4621      	mov	r1, r4
   85658:	4640      	mov	r0, r8
   8565a:	f7ff fe65 	bl	85328 <_free_r>
   8565e:	e01d      	b.n	8569c <_realloc_r+0xe0>
   85660:	f026 0607 	bic.w	r6, r6, #7
   85664:	2e00      	cmp	r6, #0
   85666:	4632      	mov	r2, r6
   85668:	dabf      	bge.n	855ea <_realloc_r+0x2e>
   8566a:	2500      	movs	r5, #0
   8566c:	230c      	movs	r3, #12
   8566e:	4628      	mov	r0, r5
   85670:	f8c8 3000 	str.w	r3, [r8]
   85674:	b003      	add	sp, #12
   85676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8567a:	4625      	mov	r5, r4
   8567c:	1bbb      	subs	r3, r7, r6
   8567e:	2b0f      	cmp	r3, #15
   85680:	f8d9 2004 	ldr.w	r2, [r9, #4]
   85684:	d81d      	bhi.n	856c2 <_realloc_r+0x106>
   85686:	f002 0201 	and.w	r2, r2, #1
   8568a:	433a      	orrs	r2, r7
   8568c:	eb09 0107 	add.w	r1, r9, r7
   85690:	f8c9 2004 	str.w	r2, [r9, #4]
   85694:	684b      	ldr	r3, [r1, #4]
   85696:	f043 0301 	orr.w	r3, r3, #1
   8569a:	604b      	str	r3, [r1, #4]
   8569c:	4640      	mov	r0, r8
   8569e:	f7ff f9c3 	bl	84a28 <__malloc_unlock>
   856a2:	4628      	mov	r0, r5
   856a4:	b003      	add	sp, #12
   856a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   856aa:	f023 0303 	bic.w	r3, r3, #3
   856ae:	18f9      	adds	r1, r7, r3
   856b0:	4291      	cmp	r1, r2
   856b2:	db1d      	blt.n	856f0 <_realloc_r+0x134>
   856b4:	68c3      	ldr	r3, [r0, #12]
   856b6:	6882      	ldr	r2, [r0, #8]
   856b8:	4625      	mov	r5, r4
   856ba:	60d3      	str	r3, [r2, #12]
   856bc:	460f      	mov	r7, r1
   856be:	609a      	str	r2, [r3, #8]
   856c0:	e7dc      	b.n	8567c <_realloc_r+0xc0>
   856c2:	f002 0201 	and.w	r2, r2, #1
   856c6:	eb09 0106 	add.w	r1, r9, r6
   856ca:	f043 0301 	orr.w	r3, r3, #1
   856ce:	4332      	orrs	r2, r6
   856d0:	f8c9 2004 	str.w	r2, [r9, #4]
   856d4:	444f      	add	r7, r9
   856d6:	604b      	str	r3, [r1, #4]
   856d8:	687b      	ldr	r3, [r7, #4]
   856da:	3108      	adds	r1, #8
   856dc:	f043 0301 	orr.w	r3, r3, #1
   856e0:	607b      	str	r3, [r7, #4]
   856e2:	4640      	mov	r0, r8
   856e4:	f7ff fe20 	bl	85328 <_free_r>
   856e8:	e7d8      	b.n	8569c <_realloc_r+0xe0>
   856ea:	4611      	mov	r1, r2
   856ec:	f7fe be22 	b.w	84334 <_malloc_r>
   856f0:	f01e 0f01 	tst.w	lr, #1
   856f4:	d18f      	bne.n	85616 <_realloc_r+0x5a>
   856f6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   856fa:	eba9 0a01 	sub.w	sl, r9, r1
   856fe:	f8da 1004 	ldr.w	r1, [sl, #4]
   85702:	f021 0103 	bic.w	r1, r1, #3
   85706:	440b      	add	r3, r1
   85708:	443b      	add	r3, r7
   8570a:	4293      	cmp	r3, r2
   8570c:	db26      	blt.n	8575c <_realloc_r+0x1a0>
   8570e:	4655      	mov	r5, sl
   85710:	68c1      	ldr	r1, [r0, #12]
   85712:	6880      	ldr	r0, [r0, #8]
   85714:	1f3a      	subs	r2, r7, #4
   85716:	60c1      	str	r1, [r0, #12]
   85718:	6088      	str	r0, [r1, #8]
   8571a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8571e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85722:	2a24      	cmp	r2, #36	; 0x24
   85724:	60c1      	str	r1, [r0, #12]
   85726:	6088      	str	r0, [r1, #8]
   85728:	d826      	bhi.n	85778 <_realloc_r+0x1bc>
   8572a:	2a13      	cmp	r2, #19
   8572c:	f240 8081 	bls.w	85832 <_realloc_r+0x276>
   85730:	6821      	ldr	r1, [r4, #0]
   85732:	2a1b      	cmp	r2, #27
   85734:	f8ca 1008 	str.w	r1, [sl, #8]
   85738:	6861      	ldr	r1, [r4, #4]
   8573a:	f8ca 100c 	str.w	r1, [sl, #12]
   8573e:	f200 80ad 	bhi.w	8589c <_realloc_r+0x2e0>
   85742:	f104 0008 	add.w	r0, r4, #8
   85746:	f10a 0210 	add.w	r2, sl, #16
   8574a:	e074      	b.n	85836 <_realloc_r+0x27a>
   8574c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   85750:	eba9 0a03 	sub.w	sl, r9, r3
   85754:	f8da 1004 	ldr.w	r1, [sl, #4]
   85758:	f021 0103 	bic.w	r1, r1, #3
   8575c:	187b      	adds	r3, r7, r1
   8575e:	4293      	cmp	r3, r2
   85760:	f6ff af59 	blt.w	85616 <_realloc_r+0x5a>
   85764:	4655      	mov	r5, sl
   85766:	f8da 100c 	ldr.w	r1, [sl, #12]
   8576a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8576e:	1f3a      	subs	r2, r7, #4
   85770:	2a24      	cmp	r2, #36	; 0x24
   85772:	60c1      	str	r1, [r0, #12]
   85774:	6088      	str	r0, [r1, #8]
   85776:	d9d8      	bls.n	8572a <_realloc_r+0x16e>
   85778:	4621      	mov	r1, r4
   8577a:	4628      	mov	r0, r5
   8577c:	461f      	mov	r7, r3
   8577e:	46d1      	mov	r9, sl
   85780:	f7ff feb8 	bl	854f4 <memmove>
   85784:	e77a      	b.n	8567c <_realloc_r+0xc0>
   85786:	6841      	ldr	r1, [r0, #4]
   85788:	f106 0010 	add.w	r0, r6, #16
   8578c:	f021 0b03 	bic.w	fp, r1, #3
   85790:	44bb      	add	fp, r7
   85792:	4583      	cmp	fp, r0
   85794:	da58      	bge.n	85848 <_realloc_r+0x28c>
   85796:	f01e 0f01 	tst.w	lr, #1
   8579a:	f47f af3c 	bne.w	85616 <_realloc_r+0x5a>
   8579e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   857a2:	eba9 0a01 	sub.w	sl, r9, r1
   857a6:	f8da 1004 	ldr.w	r1, [sl, #4]
   857aa:	f021 0103 	bic.w	r1, r1, #3
   857ae:	448b      	add	fp, r1
   857b0:	4558      	cmp	r0, fp
   857b2:	dcd3      	bgt.n	8575c <_realloc_r+0x1a0>
   857b4:	4655      	mov	r5, sl
   857b6:	f8da 100c 	ldr.w	r1, [sl, #12]
   857ba:	f855 0f08 	ldr.w	r0, [r5, #8]!
   857be:	1f3a      	subs	r2, r7, #4
   857c0:	2a24      	cmp	r2, #36	; 0x24
   857c2:	60c1      	str	r1, [r0, #12]
   857c4:	6088      	str	r0, [r1, #8]
   857c6:	f200 808d 	bhi.w	858e4 <_realloc_r+0x328>
   857ca:	2a13      	cmp	r2, #19
   857cc:	f240 8087 	bls.w	858de <_realloc_r+0x322>
   857d0:	6821      	ldr	r1, [r4, #0]
   857d2:	2a1b      	cmp	r2, #27
   857d4:	f8ca 1008 	str.w	r1, [sl, #8]
   857d8:	6861      	ldr	r1, [r4, #4]
   857da:	f8ca 100c 	str.w	r1, [sl, #12]
   857de:	f200 8088 	bhi.w	858f2 <_realloc_r+0x336>
   857e2:	f104 0108 	add.w	r1, r4, #8
   857e6:	f10a 0210 	add.w	r2, sl, #16
   857ea:	6808      	ldr	r0, [r1, #0]
   857ec:	6010      	str	r0, [r2, #0]
   857ee:	6848      	ldr	r0, [r1, #4]
   857f0:	6050      	str	r0, [r2, #4]
   857f2:	6889      	ldr	r1, [r1, #8]
   857f4:	6091      	str	r1, [r2, #8]
   857f6:	ebab 0206 	sub.w	r2, fp, r6
   857fa:	eb0a 0106 	add.w	r1, sl, r6
   857fe:	f042 0201 	orr.w	r2, r2, #1
   85802:	6099      	str	r1, [r3, #8]
   85804:	604a      	str	r2, [r1, #4]
   85806:	f8da 3004 	ldr.w	r3, [sl, #4]
   8580a:	4640      	mov	r0, r8
   8580c:	f003 0301 	and.w	r3, r3, #1
   85810:	431e      	orrs	r6, r3
   85812:	f8ca 6004 	str.w	r6, [sl, #4]
   85816:	f7ff f907 	bl	84a28 <__malloc_unlock>
   8581a:	e742      	b.n	856a2 <_realloc_r+0xe6>
   8581c:	6823      	ldr	r3, [r4, #0]
   8581e:	2a1b      	cmp	r2, #27
   85820:	6003      	str	r3, [r0, #0]
   85822:	6863      	ldr	r3, [r4, #4]
   85824:	6043      	str	r3, [r0, #4]
   85826:	d827      	bhi.n	85878 <_realloc_r+0x2bc>
   85828:	f100 0308 	add.w	r3, r0, #8
   8582c:	f104 0208 	add.w	r2, r4, #8
   85830:	e70b      	b.n	8564a <_realloc_r+0x8e>
   85832:	4620      	mov	r0, r4
   85834:	462a      	mov	r2, r5
   85836:	6801      	ldr	r1, [r0, #0]
   85838:	461f      	mov	r7, r3
   8583a:	6011      	str	r1, [r2, #0]
   8583c:	6841      	ldr	r1, [r0, #4]
   8583e:	46d1      	mov	r9, sl
   85840:	6051      	str	r1, [r2, #4]
   85842:	6883      	ldr	r3, [r0, #8]
   85844:	6093      	str	r3, [r2, #8]
   85846:	e719      	b.n	8567c <_realloc_r+0xc0>
   85848:	ebab 0b06 	sub.w	fp, fp, r6
   8584c:	eb09 0106 	add.w	r1, r9, r6
   85850:	f04b 0201 	orr.w	r2, fp, #1
   85854:	6099      	str	r1, [r3, #8]
   85856:	604a      	str	r2, [r1, #4]
   85858:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8585c:	4640      	mov	r0, r8
   8585e:	f003 0301 	and.w	r3, r3, #1
   85862:	431e      	orrs	r6, r3
   85864:	f844 6c04 	str.w	r6, [r4, #-4]
   85868:	f7ff f8de 	bl	84a28 <__malloc_unlock>
   8586c:	4625      	mov	r5, r4
   8586e:	e718      	b.n	856a2 <_realloc_r+0xe6>
   85870:	4621      	mov	r1, r4
   85872:	f7ff fe3f 	bl	854f4 <memmove>
   85876:	e6ee      	b.n	85656 <_realloc_r+0x9a>
   85878:	68a3      	ldr	r3, [r4, #8]
   8587a:	2a24      	cmp	r2, #36	; 0x24
   8587c:	6083      	str	r3, [r0, #8]
   8587e:	68e3      	ldr	r3, [r4, #12]
   85880:	60c3      	str	r3, [r0, #12]
   85882:	d018      	beq.n	858b6 <_realloc_r+0x2fa>
   85884:	f100 0310 	add.w	r3, r0, #16
   85888:	f104 0210 	add.w	r2, r4, #16
   8588c:	e6dd      	b.n	8564a <_realloc_r+0x8e>
   8588e:	f850 3c04 	ldr.w	r3, [r0, #-4]
   85892:	4625      	mov	r5, r4
   85894:	f023 0303 	bic.w	r3, r3, #3
   85898:	441f      	add	r7, r3
   8589a:	e6ef      	b.n	8567c <_realloc_r+0xc0>
   8589c:	68a1      	ldr	r1, [r4, #8]
   8589e:	2a24      	cmp	r2, #36	; 0x24
   858a0:	f8ca 1010 	str.w	r1, [sl, #16]
   858a4:	68e1      	ldr	r1, [r4, #12]
   858a6:	f8ca 1014 	str.w	r1, [sl, #20]
   858aa:	d00d      	beq.n	858c8 <_realloc_r+0x30c>
   858ac:	f104 0010 	add.w	r0, r4, #16
   858b0:	f10a 0218 	add.w	r2, sl, #24
   858b4:	e7bf      	b.n	85836 <_realloc_r+0x27a>
   858b6:	6922      	ldr	r2, [r4, #16]
   858b8:	f100 0318 	add.w	r3, r0, #24
   858bc:	6102      	str	r2, [r0, #16]
   858be:	6961      	ldr	r1, [r4, #20]
   858c0:	f104 0218 	add.w	r2, r4, #24
   858c4:	6141      	str	r1, [r0, #20]
   858c6:	e6c0      	b.n	8564a <_realloc_r+0x8e>
   858c8:	6922      	ldr	r2, [r4, #16]
   858ca:	f104 0018 	add.w	r0, r4, #24
   858ce:	f8ca 2018 	str.w	r2, [sl, #24]
   858d2:	6961      	ldr	r1, [r4, #20]
   858d4:	f10a 0220 	add.w	r2, sl, #32
   858d8:	f8ca 101c 	str.w	r1, [sl, #28]
   858dc:	e7ab      	b.n	85836 <_realloc_r+0x27a>
   858de:	4621      	mov	r1, r4
   858e0:	462a      	mov	r2, r5
   858e2:	e782      	b.n	857ea <_realloc_r+0x22e>
   858e4:	4621      	mov	r1, r4
   858e6:	4628      	mov	r0, r5
   858e8:	9301      	str	r3, [sp, #4]
   858ea:	f7ff fe03 	bl	854f4 <memmove>
   858ee:	9b01      	ldr	r3, [sp, #4]
   858f0:	e781      	b.n	857f6 <_realloc_r+0x23a>
   858f2:	68a1      	ldr	r1, [r4, #8]
   858f4:	2a24      	cmp	r2, #36	; 0x24
   858f6:	f8ca 1010 	str.w	r1, [sl, #16]
   858fa:	68e1      	ldr	r1, [r4, #12]
   858fc:	f8ca 1014 	str.w	r1, [sl, #20]
   85900:	d006      	beq.n	85910 <_realloc_r+0x354>
   85902:	f104 0110 	add.w	r1, r4, #16
   85906:	f10a 0218 	add.w	r2, sl, #24
   8590a:	e76e      	b.n	857ea <_realloc_r+0x22e>
   8590c:	20070b40 	.word	0x20070b40
   85910:	6922      	ldr	r2, [r4, #16]
   85912:	f104 0118 	add.w	r1, r4, #24
   85916:	f8ca 2018 	str.w	r2, [sl, #24]
   8591a:	6960      	ldr	r0, [r4, #20]
   8591c:	f10a 0220 	add.w	r2, sl, #32
   85920:	f8ca 001c 	str.w	r0, [sl, #28]
   85924:	e761      	b.n	857ea <_realloc_r+0x22e>
   85926:	bf00      	nop

00085928 <__aeabi_drsub>:
   85928:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8592c:	e002      	b.n	85934 <__adddf3>
   8592e:	bf00      	nop

00085930 <__aeabi_dsub>:
   85930:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00085934 <__adddf3>:
   85934:	b530      	push	{r4, r5, lr}
   85936:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8593a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   8593e:	ea94 0f05 	teq	r4, r5
   85942:	bf08      	it	eq
   85944:	ea90 0f02 	teqeq	r0, r2
   85948:	bf1f      	itttt	ne
   8594a:	ea54 0c00 	orrsne.w	ip, r4, r0
   8594e:	ea55 0c02 	orrsne.w	ip, r5, r2
   85952:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   85956:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8595a:	f000 80e2 	beq.w	85b22 <__adddf3+0x1ee>
   8595e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   85962:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   85966:	bfb8      	it	lt
   85968:	426d      	neglt	r5, r5
   8596a:	dd0c      	ble.n	85986 <__adddf3+0x52>
   8596c:	442c      	add	r4, r5
   8596e:	ea80 0202 	eor.w	r2, r0, r2
   85972:	ea81 0303 	eor.w	r3, r1, r3
   85976:	ea82 0000 	eor.w	r0, r2, r0
   8597a:	ea83 0101 	eor.w	r1, r3, r1
   8597e:	ea80 0202 	eor.w	r2, r0, r2
   85982:	ea81 0303 	eor.w	r3, r1, r3
   85986:	2d36      	cmp	r5, #54	; 0x36
   85988:	bf88      	it	hi
   8598a:	bd30      	pophi	{r4, r5, pc}
   8598c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85990:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85994:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   85998:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8599c:	d002      	beq.n	859a4 <__adddf3+0x70>
   8599e:	4240      	negs	r0, r0
   859a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   859a4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   859a8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   859ac:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   859b0:	d002      	beq.n	859b8 <__adddf3+0x84>
   859b2:	4252      	negs	r2, r2
   859b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   859b8:	ea94 0f05 	teq	r4, r5
   859bc:	f000 80a7 	beq.w	85b0e <__adddf3+0x1da>
   859c0:	f1a4 0401 	sub.w	r4, r4, #1
   859c4:	f1d5 0e20 	rsbs	lr, r5, #32
   859c8:	db0d      	blt.n	859e6 <__adddf3+0xb2>
   859ca:	fa02 fc0e 	lsl.w	ip, r2, lr
   859ce:	fa22 f205 	lsr.w	r2, r2, r5
   859d2:	1880      	adds	r0, r0, r2
   859d4:	f141 0100 	adc.w	r1, r1, #0
   859d8:	fa03 f20e 	lsl.w	r2, r3, lr
   859dc:	1880      	adds	r0, r0, r2
   859de:	fa43 f305 	asr.w	r3, r3, r5
   859e2:	4159      	adcs	r1, r3
   859e4:	e00e      	b.n	85a04 <__adddf3+0xd0>
   859e6:	f1a5 0520 	sub.w	r5, r5, #32
   859ea:	f10e 0e20 	add.w	lr, lr, #32
   859ee:	2a01      	cmp	r2, #1
   859f0:	fa03 fc0e 	lsl.w	ip, r3, lr
   859f4:	bf28      	it	cs
   859f6:	f04c 0c02 	orrcs.w	ip, ip, #2
   859fa:	fa43 f305 	asr.w	r3, r3, r5
   859fe:	18c0      	adds	r0, r0, r3
   85a00:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   85a04:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85a08:	d507      	bpl.n	85a1a <__adddf3+0xe6>
   85a0a:	f04f 0e00 	mov.w	lr, #0
   85a0e:	f1dc 0c00 	rsbs	ip, ip, #0
   85a12:	eb7e 0000 	sbcs.w	r0, lr, r0
   85a16:	eb6e 0101 	sbc.w	r1, lr, r1
   85a1a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   85a1e:	d31b      	bcc.n	85a58 <__adddf3+0x124>
   85a20:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   85a24:	d30c      	bcc.n	85a40 <__adddf3+0x10c>
   85a26:	0849      	lsrs	r1, r1, #1
   85a28:	ea5f 0030 	movs.w	r0, r0, rrx
   85a2c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   85a30:	f104 0401 	add.w	r4, r4, #1
   85a34:	ea4f 5244 	mov.w	r2, r4, lsl #21
   85a38:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   85a3c:	f080 809a 	bcs.w	85b74 <__adddf3+0x240>
   85a40:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   85a44:	bf08      	it	eq
   85a46:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85a4a:	f150 0000 	adcs.w	r0, r0, #0
   85a4e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85a52:	ea41 0105 	orr.w	r1, r1, r5
   85a56:	bd30      	pop	{r4, r5, pc}
   85a58:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   85a5c:	4140      	adcs	r0, r0
   85a5e:	eb41 0101 	adc.w	r1, r1, r1
   85a62:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85a66:	f1a4 0401 	sub.w	r4, r4, #1
   85a6a:	d1e9      	bne.n	85a40 <__adddf3+0x10c>
   85a6c:	f091 0f00 	teq	r1, #0
   85a70:	bf04      	itt	eq
   85a72:	4601      	moveq	r1, r0
   85a74:	2000      	moveq	r0, #0
   85a76:	fab1 f381 	clz	r3, r1
   85a7a:	bf08      	it	eq
   85a7c:	3320      	addeq	r3, #32
   85a7e:	f1a3 030b 	sub.w	r3, r3, #11
   85a82:	f1b3 0220 	subs.w	r2, r3, #32
   85a86:	da0c      	bge.n	85aa2 <__adddf3+0x16e>
   85a88:	320c      	adds	r2, #12
   85a8a:	dd08      	ble.n	85a9e <__adddf3+0x16a>
   85a8c:	f102 0c14 	add.w	ip, r2, #20
   85a90:	f1c2 020c 	rsb	r2, r2, #12
   85a94:	fa01 f00c 	lsl.w	r0, r1, ip
   85a98:	fa21 f102 	lsr.w	r1, r1, r2
   85a9c:	e00c      	b.n	85ab8 <__adddf3+0x184>
   85a9e:	f102 0214 	add.w	r2, r2, #20
   85aa2:	bfd8      	it	le
   85aa4:	f1c2 0c20 	rsble	ip, r2, #32
   85aa8:	fa01 f102 	lsl.w	r1, r1, r2
   85aac:	fa20 fc0c 	lsr.w	ip, r0, ip
   85ab0:	bfdc      	itt	le
   85ab2:	ea41 010c 	orrle.w	r1, r1, ip
   85ab6:	4090      	lslle	r0, r2
   85ab8:	1ae4      	subs	r4, r4, r3
   85aba:	bfa2      	ittt	ge
   85abc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   85ac0:	4329      	orrge	r1, r5
   85ac2:	bd30      	popge	{r4, r5, pc}
   85ac4:	ea6f 0404 	mvn.w	r4, r4
   85ac8:	3c1f      	subs	r4, #31
   85aca:	da1c      	bge.n	85b06 <__adddf3+0x1d2>
   85acc:	340c      	adds	r4, #12
   85ace:	dc0e      	bgt.n	85aee <__adddf3+0x1ba>
   85ad0:	f104 0414 	add.w	r4, r4, #20
   85ad4:	f1c4 0220 	rsb	r2, r4, #32
   85ad8:	fa20 f004 	lsr.w	r0, r0, r4
   85adc:	fa01 f302 	lsl.w	r3, r1, r2
   85ae0:	ea40 0003 	orr.w	r0, r0, r3
   85ae4:	fa21 f304 	lsr.w	r3, r1, r4
   85ae8:	ea45 0103 	orr.w	r1, r5, r3
   85aec:	bd30      	pop	{r4, r5, pc}
   85aee:	f1c4 040c 	rsb	r4, r4, #12
   85af2:	f1c4 0220 	rsb	r2, r4, #32
   85af6:	fa20 f002 	lsr.w	r0, r0, r2
   85afa:	fa01 f304 	lsl.w	r3, r1, r4
   85afe:	ea40 0003 	orr.w	r0, r0, r3
   85b02:	4629      	mov	r1, r5
   85b04:	bd30      	pop	{r4, r5, pc}
   85b06:	fa21 f004 	lsr.w	r0, r1, r4
   85b0a:	4629      	mov	r1, r5
   85b0c:	bd30      	pop	{r4, r5, pc}
   85b0e:	f094 0f00 	teq	r4, #0
   85b12:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   85b16:	bf06      	itte	eq
   85b18:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   85b1c:	3401      	addeq	r4, #1
   85b1e:	3d01      	subne	r5, #1
   85b20:	e74e      	b.n	859c0 <__adddf3+0x8c>
   85b22:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85b26:	bf18      	it	ne
   85b28:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   85b2c:	d029      	beq.n	85b82 <__adddf3+0x24e>
   85b2e:	ea94 0f05 	teq	r4, r5
   85b32:	bf08      	it	eq
   85b34:	ea90 0f02 	teqeq	r0, r2
   85b38:	d005      	beq.n	85b46 <__adddf3+0x212>
   85b3a:	ea54 0c00 	orrs.w	ip, r4, r0
   85b3e:	bf04      	itt	eq
   85b40:	4619      	moveq	r1, r3
   85b42:	4610      	moveq	r0, r2
   85b44:	bd30      	pop	{r4, r5, pc}
   85b46:	ea91 0f03 	teq	r1, r3
   85b4a:	bf1e      	ittt	ne
   85b4c:	2100      	movne	r1, #0
   85b4e:	2000      	movne	r0, #0
   85b50:	bd30      	popne	{r4, r5, pc}
   85b52:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   85b56:	d105      	bne.n	85b64 <__adddf3+0x230>
   85b58:	0040      	lsls	r0, r0, #1
   85b5a:	4149      	adcs	r1, r1
   85b5c:	bf28      	it	cs
   85b5e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   85b62:	bd30      	pop	{r4, r5, pc}
   85b64:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   85b68:	bf3c      	itt	cc
   85b6a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   85b6e:	bd30      	popcc	{r4, r5, pc}
   85b70:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85b74:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   85b78:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85b7c:	f04f 0000 	mov.w	r0, #0
   85b80:	bd30      	pop	{r4, r5, pc}
   85b82:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85b86:	bf1a      	itte	ne
   85b88:	4619      	movne	r1, r3
   85b8a:	4610      	movne	r0, r2
   85b8c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   85b90:	bf1c      	itt	ne
   85b92:	460b      	movne	r3, r1
   85b94:	4602      	movne	r2, r0
   85b96:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85b9a:	bf06      	itte	eq
   85b9c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   85ba0:	ea91 0f03 	teqeq	r1, r3
   85ba4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   85ba8:	bd30      	pop	{r4, r5, pc}
   85baa:	bf00      	nop

00085bac <__aeabi_ui2d>:
   85bac:	f090 0f00 	teq	r0, #0
   85bb0:	bf04      	itt	eq
   85bb2:	2100      	moveq	r1, #0
   85bb4:	4770      	bxeq	lr
   85bb6:	b530      	push	{r4, r5, lr}
   85bb8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85bbc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85bc0:	f04f 0500 	mov.w	r5, #0
   85bc4:	f04f 0100 	mov.w	r1, #0
   85bc8:	e750      	b.n	85a6c <__adddf3+0x138>
   85bca:	bf00      	nop

00085bcc <__aeabi_i2d>:
   85bcc:	f090 0f00 	teq	r0, #0
   85bd0:	bf04      	itt	eq
   85bd2:	2100      	moveq	r1, #0
   85bd4:	4770      	bxeq	lr
   85bd6:	b530      	push	{r4, r5, lr}
   85bd8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85bdc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85be0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85be4:	bf48      	it	mi
   85be6:	4240      	negmi	r0, r0
   85be8:	f04f 0100 	mov.w	r1, #0
   85bec:	e73e      	b.n	85a6c <__adddf3+0x138>
   85bee:	bf00      	nop

00085bf0 <__aeabi_f2d>:
   85bf0:	0042      	lsls	r2, r0, #1
   85bf2:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85bf6:	ea4f 0131 	mov.w	r1, r1, rrx
   85bfa:	ea4f 7002 	mov.w	r0, r2, lsl #28
   85bfe:	bf1f      	itttt	ne
   85c00:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85c04:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85c08:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   85c0c:	4770      	bxne	lr
   85c0e:	f092 0f00 	teq	r2, #0
   85c12:	bf14      	ite	ne
   85c14:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85c18:	4770      	bxeq	lr
   85c1a:	b530      	push	{r4, r5, lr}
   85c1c:	f44f 7460 	mov.w	r4, #896	; 0x380
   85c20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85c24:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85c28:	e720      	b.n	85a6c <__adddf3+0x138>
   85c2a:	bf00      	nop

00085c2c <__aeabi_ul2d>:
   85c2c:	ea50 0201 	orrs.w	r2, r0, r1
   85c30:	bf08      	it	eq
   85c32:	4770      	bxeq	lr
   85c34:	b530      	push	{r4, r5, lr}
   85c36:	f04f 0500 	mov.w	r5, #0
   85c3a:	e00a      	b.n	85c52 <__aeabi_l2d+0x16>

00085c3c <__aeabi_l2d>:
   85c3c:	ea50 0201 	orrs.w	r2, r0, r1
   85c40:	bf08      	it	eq
   85c42:	4770      	bxeq	lr
   85c44:	b530      	push	{r4, r5, lr}
   85c46:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   85c4a:	d502      	bpl.n	85c52 <__aeabi_l2d+0x16>
   85c4c:	4240      	negs	r0, r0
   85c4e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85c52:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85c56:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85c5a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   85c5e:	f43f aedc 	beq.w	85a1a <__adddf3+0xe6>
   85c62:	f04f 0203 	mov.w	r2, #3
   85c66:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85c6a:	bf18      	it	ne
   85c6c:	3203      	addne	r2, #3
   85c6e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85c72:	bf18      	it	ne
   85c74:	3203      	addne	r2, #3
   85c76:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   85c7a:	f1c2 0320 	rsb	r3, r2, #32
   85c7e:	fa00 fc03 	lsl.w	ip, r0, r3
   85c82:	fa20 f002 	lsr.w	r0, r0, r2
   85c86:	fa01 fe03 	lsl.w	lr, r1, r3
   85c8a:	ea40 000e 	orr.w	r0, r0, lr
   85c8e:	fa21 f102 	lsr.w	r1, r1, r2
   85c92:	4414      	add	r4, r2
   85c94:	e6c1      	b.n	85a1a <__adddf3+0xe6>
   85c96:	bf00      	nop

00085c98 <__aeabi_dmul>:
   85c98:	b570      	push	{r4, r5, r6, lr}
   85c9a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85c9e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85ca2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85ca6:	bf1d      	ittte	ne
   85ca8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85cac:	ea94 0f0c 	teqne	r4, ip
   85cb0:	ea95 0f0c 	teqne	r5, ip
   85cb4:	f000 f8de 	bleq	85e74 <__aeabi_dmul+0x1dc>
   85cb8:	442c      	add	r4, r5
   85cba:	ea81 0603 	eor.w	r6, r1, r3
   85cbe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85cc2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85cc6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   85cca:	bf18      	it	ne
   85ccc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85cd0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85cd4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85cd8:	d038      	beq.n	85d4c <__aeabi_dmul+0xb4>
   85cda:	fba0 ce02 	umull	ip, lr, r0, r2
   85cde:	f04f 0500 	mov.w	r5, #0
   85ce2:	fbe1 e502 	umlal	lr, r5, r1, r2
   85ce6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   85cea:	fbe0 e503 	umlal	lr, r5, r0, r3
   85cee:	f04f 0600 	mov.w	r6, #0
   85cf2:	fbe1 5603 	umlal	r5, r6, r1, r3
   85cf6:	f09c 0f00 	teq	ip, #0
   85cfa:	bf18      	it	ne
   85cfc:	f04e 0e01 	orrne.w	lr, lr, #1
   85d00:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85d04:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85d08:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   85d0c:	d204      	bcs.n	85d18 <__aeabi_dmul+0x80>
   85d0e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85d12:	416d      	adcs	r5, r5
   85d14:	eb46 0606 	adc.w	r6, r6, r6
   85d18:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   85d1c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85d20:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85d24:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85d28:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   85d2c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85d30:	bf88      	it	hi
   85d32:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85d36:	d81e      	bhi.n	85d76 <__aeabi_dmul+0xde>
   85d38:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   85d3c:	bf08      	it	eq
   85d3e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85d42:	f150 0000 	adcs.w	r0, r0, #0
   85d46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85d4a:	bd70      	pop	{r4, r5, r6, pc}
   85d4c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85d50:	ea46 0101 	orr.w	r1, r6, r1
   85d54:	ea40 0002 	orr.w	r0, r0, r2
   85d58:	ea81 0103 	eor.w	r1, r1, r3
   85d5c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85d60:	bfc2      	ittt	gt
   85d62:	ebd4 050c 	rsbsgt	r5, r4, ip
   85d66:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85d6a:	bd70      	popgt	{r4, r5, r6, pc}
   85d6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85d70:	f04f 0e00 	mov.w	lr, #0
   85d74:	3c01      	subs	r4, #1
   85d76:	f300 80ab 	bgt.w	85ed0 <__aeabi_dmul+0x238>
   85d7a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   85d7e:	bfde      	ittt	le
   85d80:	2000      	movle	r0, #0
   85d82:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   85d86:	bd70      	pople	{r4, r5, r6, pc}
   85d88:	f1c4 0400 	rsb	r4, r4, #0
   85d8c:	3c20      	subs	r4, #32
   85d8e:	da35      	bge.n	85dfc <__aeabi_dmul+0x164>
   85d90:	340c      	adds	r4, #12
   85d92:	dc1b      	bgt.n	85dcc <__aeabi_dmul+0x134>
   85d94:	f104 0414 	add.w	r4, r4, #20
   85d98:	f1c4 0520 	rsb	r5, r4, #32
   85d9c:	fa00 f305 	lsl.w	r3, r0, r5
   85da0:	fa20 f004 	lsr.w	r0, r0, r4
   85da4:	fa01 f205 	lsl.w	r2, r1, r5
   85da8:	ea40 0002 	orr.w	r0, r0, r2
   85dac:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85db0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85db4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85db8:	fa21 f604 	lsr.w	r6, r1, r4
   85dbc:	eb42 0106 	adc.w	r1, r2, r6
   85dc0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85dc4:	bf08      	it	eq
   85dc6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85dca:	bd70      	pop	{r4, r5, r6, pc}
   85dcc:	f1c4 040c 	rsb	r4, r4, #12
   85dd0:	f1c4 0520 	rsb	r5, r4, #32
   85dd4:	fa00 f304 	lsl.w	r3, r0, r4
   85dd8:	fa20 f005 	lsr.w	r0, r0, r5
   85ddc:	fa01 f204 	lsl.w	r2, r1, r4
   85de0:	ea40 0002 	orr.w	r0, r0, r2
   85de4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85de8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85dec:	f141 0100 	adc.w	r1, r1, #0
   85df0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85df4:	bf08      	it	eq
   85df6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85dfa:	bd70      	pop	{r4, r5, r6, pc}
   85dfc:	f1c4 0520 	rsb	r5, r4, #32
   85e00:	fa00 f205 	lsl.w	r2, r0, r5
   85e04:	ea4e 0e02 	orr.w	lr, lr, r2
   85e08:	fa20 f304 	lsr.w	r3, r0, r4
   85e0c:	fa01 f205 	lsl.w	r2, r1, r5
   85e10:	ea43 0302 	orr.w	r3, r3, r2
   85e14:	fa21 f004 	lsr.w	r0, r1, r4
   85e18:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85e1c:	fa21 f204 	lsr.w	r2, r1, r4
   85e20:	ea20 0002 	bic.w	r0, r0, r2
   85e24:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85e28:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85e2c:	bf08      	it	eq
   85e2e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85e32:	bd70      	pop	{r4, r5, r6, pc}
   85e34:	f094 0f00 	teq	r4, #0
   85e38:	d10f      	bne.n	85e5a <__aeabi_dmul+0x1c2>
   85e3a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   85e3e:	0040      	lsls	r0, r0, #1
   85e40:	eb41 0101 	adc.w	r1, r1, r1
   85e44:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85e48:	bf08      	it	eq
   85e4a:	3c01      	subeq	r4, #1
   85e4c:	d0f7      	beq.n	85e3e <__aeabi_dmul+0x1a6>
   85e4e:	ea41 0106 	orr.w	r1, r1, r6
   85e52:	f095 0f00 	teq	r5, #0
   85e56:	bf18      	it	ne
   85e58:	4770      	bxne	lr
   85e5a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85e5e:	0052      	lsls	r2, r2, #1
   85e60:	eb43 0303 	adc.w	r3, r3, r3
   85e64:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85e68:	bf08      	it	eq
   85e6a:	3d01      	subeq	r5, #1
   85e6c:	d0f7      	beq.n	85e5e <__aeabi_dmul+0x1c6>
   85e6e:	ea43 0306 	orr.w	r3, r3, r6
   85e72:	4770      	bx	lr
   85e74:	ea94 0f0c 	teq	r4, ip
   85e78:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85e7c:	bf18      	it	ne
   85e7e:	ea95 0f0c 	teqne	r5, ip
   85e82:	d00c      	beq.n	85e9e <__aeabi_dmul+0x206>
   85e84:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85e88:	bf18      	it	ne
   85e8a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85e8e:	d1d1      	bne.n	85e34 <__aeabi_dmul+0x19c>
   85e90:	ea81 0103 	eor.w	r1, r1, r3
   85e94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85e98:	f04f 0000 	mov.w	r0, #0
   85e9c:	bd70      	pop	{r4, r5, r6, pc}
   85e9e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85ea2:	bf06      	itte	eq
   85ea4:	4610      	moveq	r0, r2
   85ea6:	4619      	moveq	r1, r3
   85ea8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85eac:	d019      	beq.n	85ee2 <__aeabi_dmul+0x24a>
   85eae:	ea94 0f0c 	teq	r4, ip
   85eb2:	d102      	bne.n	85eba <__aeabi_dmul+0x222>
   85eb4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85eb8:	d113      	bne.n	85ee2 <__aeabi_dmul+0x24a>
   85eba:	ea95 0f0c 	teq	r5, ip
   85ebe:	d105      	bne.n	85ecc <__aeabi_dmul+0x234>
   85ec0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85ec4:	bf1c      	itt	ne
   85ec6:	4610      	movne	r0, r2
   85ec8:	4619      	movne	r1, r3
   85eca:	d10a      	bne.n	85ee2 <__aeabi_dmul+0x24a>
   85ecc:	ea81 0103 	eor.w	r1, r1, r3
   85ed0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85ed4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85ed8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85edc:	f04f 0000 	mov.w	r0, #0
   85ee0:	bd70      	pop	{r4, r5, r6, pc}
   85ee2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85ee6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   85eea:	bd70      	pop	{r4, r5, r6, pc}

00085eec <__aeabi_ddiv>:
   85eec:	b570      	push	{r4, r5, r6, lr}
   85eee:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85ef2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85ef6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85efa:	bf1d      	ittte	ne
   85efc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85f00:	ea94 0f0c 	teqne	r4, ip
   85f04:	ea95 0f0c 	teqne	r5, ip
   85f08:	f000 f8a7 	bleq	8605a <__aeabi_ddiv+0x16e>
   85f0c:	eba4 0405 	sub.w	r4, r4, r5
   85f10:	ea81 0e03 	eor.w	lr, r1, r3
   85f14:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85f18:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85f1c:	f000 8088 	beq.w	86030 <__aeabi_ddiv+0x144>
   85f20:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85f24:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85f28:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   85f2c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85f30:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85f34:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85f38:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   85f3c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85f40:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85f44:	429d      	cmp	r5, r3
   85f46:	bf08      	it	eq
   85f48:	4296      	cmpeq	r6, r2
   85f4a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85f4e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   85f52:	d202      	bcs.n	85f5a <__aeabi_ddiv+0x6e>
   85f54:	085b      	lsrs	r3, r3, #1
   85f56:	ea4f 0232 	mov.w	r2, r2, rrx
   85f5a:	1ab6      	subs	r6, r6, r2
   85f5c:	eb65 0503 	sbc.w	r5, r5, r3
   85f60:	085b      	lsrs	r3, r3, #1
   85f62:	ea4f 0232 	mov.w	r2, r2, rrx
   85f66:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85f6a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85f6e:	ebb6 0e02 	subs.w	lr, r6, r2
   85f72:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f76:	bf22      	ittt	cs
   85f78:	1ab6      	subcs	r6, r6, r2
   85f7a:	4675      	movcs	r5, lr
   85f7c:	ea40 000c 	orrcs.w	r0, r0, ip
   85f80:	085b      	lsrs	r3, r3, #1
   85f82:	ea4f 0232 	mov.w	r2, r2, rrx
   85f86:	ebb6 0e02 	subs.w	lr, r6, r2
   85f8a:	eb75 0e03 	sbcs.w	lr, r5, r3
   85f8e:	bf22      	ittt	cs
   85f90:	1ab6      	subcs	r6, r6, r2
   85f92:	4675      	movcs	r5, lr
   85f94:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85f98:	085b      	lsrs	r3, r3, #1
   85f9a:	ea4f 0232 	mov.w	r2, r2, rrx
   85f9e:	ebb6 0e02 	subs.w	lr, r6, r2
   85fa2:	eb75 0e03 	sbcs.w	lr, r5, r3
   85fa6:	bf22      	ittt	cs
   85fa8:	1ab6      	subcs	r6, r6, r2
   85faa:	4675      	movcs	r5, lr
   85fac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85fb0:	085b      	lsrs	r3, r3, #1
   85fb2:	ea4f 0232 	mov.w	r2, r2, rrx
   85fb6:	ebb6 0e02 	subs.w	lr, r6, r2
   85fba:	eb75 0e03 	sbcs.w	lr, r5, r3
   85fbe:	bf22      	ittt	cs
   85fc0:	1ab6      	subcs	r6, r6, r2
   85fc2:	4675      	movcs	r5, lr
   85fc4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85fc8:	ea55 0e06 	orrs.w	lr, r5, r6
   85fcc:	d018      	beq.n	86000 <__aeabi_ddiv+0x114>
   85fce:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85fd2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85fd6:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85fda:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85fde:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85fe2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85fe6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   85fea:	d1c0      	bne.n	85f6e <__aeabi_ddiv+0x82>
   85fec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85ff0:	d10b      	bne.n	8600a <__aeabi_ddiv+0x11e>
   85ff2:	ea41 0100 	orr.w	r1, r1, r0
   85ff6:	f04f 0000 	mov.w	r0, #0
   85ffa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   85ffe:	e7b6      	b.n	85f6e <__aeabi_ddiv+0x82>
   86000:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86004:	bf04      	itt	eq
   86006:	4301      	orreq	r1, r0
   86008:	2000      	moveq	r0, #0
   8600a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8600e:	bf88      	it	hi
   86010:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86014:	f63f aeaf 	bhi.w	85d76 <__aeabi_dmul+0xde>
   86018:	ebb5 0c03 	subs.w	ip, r5, r3
   8601c:	bf04      	itt	eq
   8601e:	ebb6 0c02 	subseq.w	ip, r6, r2
   86022:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86026:	f150 0000 	adcs.w	r0, r0, #0
   8602a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8602e:	bd70      	pop	{r4, r5, r6, pc}
   86030:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   86034:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   86038:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8603c:	bfc2      	ittt	gt
   8603e:	ebd4 050c 	rsbsgt	r5, r4, ip
   86042:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86046:	bd70      	popgt	{r4, r5, r6, pc}
   86048:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8604c:	f04f 0e00 	mov.w	lr, #0
   86050:	3c01      	subs	r4, #1
   86052:	e690      	b.n	85d76 <__aeabi_dmul+0xde>
   86054:	ea45 0e06 	orr.w	lr, r5, r6
   86058:	e68d      	b.n	85d76 <__aeabi_dmul+0xde>
   8605a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8605e:	ea94 0f0c 	teq	r4, ip
   86062:	bf08      	it	eq
   86064:	ea95 0f0c 	teqeq	r5, ip
   86068:	f43f af3b 	beq.w	85ee2 <__aeabi_dmul+0x24a>
   8606c:	ea94 0f0c 	teq	r4, ip
   86070:	d10a      	bne.n	86088 <__aeabi_ddiv+0x19c>
   86072:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86076:	f47f af34 	bne.w	85ee2 <__aeabi_dmul+0x24a>
   8607a:	ea95 0f0c 	teq	r5, ip
   8607e:	f47f af25 	bne.w	85ecc <__aeabi_dmul+0x234>
   86082:	4610      	mov	r0, r2
   86084:	4619      	mov	r1, r3
   86086:	e72c      	b.n	85ee2 <__aeabi_dmul+0x24a>
   86088:	ea95 0f0c 	teq	r5, ip
   8608c:	d106      	bne.n	8609c <__aeabi_ddiv+0x1b0>
   8608e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86092:	f43f aefd 	beq.w	85e90 <__aeabi_dmul+0x1f8>
   86096:	4610      	mov	r0, r2
   86098:	4619      	mov	r1, r3
   8609a:	e722      	b.n	85ee2 <__aeabi_dmul+0x24a>
   8609c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   860a0:	bf18      	it	ne
   860a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   860a6:	f47f aec5 	bne.w	85e34 <__aeabi_dmul+0x19c>
   860aa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   860ae:	f47f af0d 	bne.w	85ecc <__aeabi_dmul+0x234>
   860b2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   860b6:	f47f aeeb 	bne.w	85e90 <__aeabi_dmul+0x1f8>
   860ba:	e712      	b.n	85ee2 <__aeabi_dmul+0x24a>

000860bc <__gedf2>:
   860bc:	f04f 3cff 	mov.w	ip, #4294967295
   860c0:	e006      	b.n	860d0 <__cmpdf2+0x4>
   860c2:	bf00      	nop

000860c4 <__ledf2>:
   860c4:	f04f 0c01 	mov.w	ip, #1
   860c8:	e002      	b.n	860d0 <__cmpdf2+0x4>
   860ca:	bf00      	nop

000860cc <__cmpdf2>:
   860cc:	f04f 0c01 	mov.w	ip, #1
   860d0:	f84d cd04 	str.w	ip, [sp, #-4]!
   860d4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   860d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   860dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   860e0:	bf18      	it	ne
   860e2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   860e6:	d01b      	beq.n	86120 <__cmpdf2+0x54>
   860e8:	b001      	add	sp, #4
   860ea:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   860ee:	bf0c      	ite	eq
   860f0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   860f4:	ea91 0f03 	teqne	r1, r3
   860f8:	bf02      	ittt	eq
   860fa:	ea90 0f02 	teqeq	r0, r2
   860fe:	2000      	moveq	r0, #0
   86100:	4770      	bxeq	lr
   86102:	f110 0f00 	cmn.w	r0, #0
   86106:	ea91 0f03 	teq	r1, r3
   8610a:	bf58      	it	pl
   8610c:	4299      	cmppl	r1, r3
   8610e:	bf08      	it	eq
   86110:	4290      	cmpeq	r0, r2
   86112:	bf2c      	ite	cs
   86114:	17d8      	asrcs	r0, r3, #31
   86116:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8611a:	f040 0001 	orr.w	r0, r0, #1
   8611e:	4770      	bx	lr
   86120:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86124:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86128:	d102      	bne.n	86130 <__cmpdf2+0x64>
   8612a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8612e:	d107      	bne.n	86140 <__cmpdf2+0x74>
   86130:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86134:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86138:	d1d6      	bne.n	860e8 <__cmpdf2+0x1c>
   8613a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8613e:	d0d3      	beq.n	860e8 <__cmpdf2+0x1c>
   86140:	f85d 0b04 	ldr.w	r0, [sp], #4
   86144:	4770      	bx	lr
   86146:	bf00      	nop

00086148 <__aeabi_cdrcmple>:
   86148:	4684      	mov	ip, r0
   8614a:	4610      	mov	r0, r2
   8614c:	4662      	mov	r2, ip
   8614e:	468c      	mov	ip, r1
   86150:	4619      	mov	r1, r3
   86152:	4663      	mov	r3, ip
   86154:	e000      	b.n	86158 <__aeabi_cdcmpeq>
   86156:	bf00      	nop

00086158 <__aeabi_cdcmpeq>:
   86158:	b501      	push	{r0, lr}
   8615a:	f7ff ffb7 	bl	860cc <__cmpdf2>
   8615e:	2800      	cmp	r0, #0
   86160:	bf48      	it	mi
   86162:	f110 0f00 	cmnmi.w	r0, #0
   86166:	bd01      	pop	{r0, pc}

00086168 <__aeabi_dcmpeq>:
   86168:	f84d ed08 	str.w	lr, [sp, #-8]!
   8616c:	f7ff fff4 	bl	86158 <__aeabi_cdcmpeq>
   86170:	bf0c      	ite	eq
   86172:	2001      	moveq	r0, #1
   86174:	2000      	movne	r0, #0
   86176:	f85d fb08 	ldr.w	pc, [sp], #8
   8617a:	bf00      	nop

0008617c <__aeabi_dcmplt>:
   8617c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86180:	f7ff ffea 	bl	86158 <__aeabi_cdcmpeq>
   86184:	bf34      	ite	cc
   86186:	2001      	movcc	r0, #1
   86188:	2000      	movcs	r0, #0
   8618a:	f85d fb08 	ldr.w	pc, [sp], #8
   8618e:	bf00      	nop

00086190 <__aeabi_dcmple>:
   86190:	f84d ed08 	str.w	lr, [sp, #-8]!
   86194:	f7ff ffe0 	bl	86158 <__aeabi_cdcmpeq>
   86198:	bf94      	ite	ls
   8619a:	2001      	movls	r0, #1
   8619c:	2000      	movhi	r0, #0
   8619e:	f85d fb08 	ldr.w	pc, [sp], #8
   861a2:	bf00      	nop

000861a4 <__aeabi_dcmpge>:
   861a4:	f84d ed08 	str.w	lr, [sp, #-8]!
   861a8:	f7ff ffce 	bl	86148 <__aeabi_cdrcmple>
   861ac:	bf94      	ite	ls
   861ae:	2001      	movls	r0, #1
   861b0:	2000      	movhi	r0, #0
   861b2:	f85d fb08 	ldr.w	pc, [sp], #8
   861b6:	bf00      	nop

000861b8 <__aeabi_dcmpgt>:
   861b8:	f84d ed08 	str.w	lr, [sp, #-8]!
   861bc:	f7ff ffc4 	bl	86148 <__aeabi_cdrcmple>
   861c0:	bf34      	ite	cc
   861c2:	2001      	movcc	r0, #1
   861c4:	2000      	movcs	r0, #0
   861c6:	f85d fb08 	ldr.w	pc, [sp], #8
   861ca:	bf00      	nop

000861cc <__aeabi_dcmpun>:
   861cc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   861d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   861d4:	d102      	bne.n	861dc <__aeabi_dcmpun+0x10>
   861d6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   861da:	d10a      	bne.n	861f2 <__aeabi_dcmpun+0x26>
   861dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   861e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   861e4:	d102      	bne.n	861ec <__aeabi_dcmpun+0x20>
   861e6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   861ea:	d102      	bne.n	861f2 <__aeabi_dcmpun+0x26>
   861ec:	f04f 0000 	mov.w	r0, #0
   861f0:	4770      	bx	lr
   861f2:	f04f 0001 	mov.w	r0, #1
   861f6:	4770      	bx	lr

000861f8 <__aeabi_d2iz>:
   861f8:	ea4f 0241 	mov.w	r2, r1, lsl #1
   861fc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   86200:	d215      	bcs.n	8622e <__aeabi_d2iz+0x36>
   86202:	d511      	bpl.n	86228 <__aeabi_d2iz+0x30>
   86204:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   86208:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   8620c:	d912      	bls.n	86234 <__aeabi_d2iz+0x3c>
   8620e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   86212:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   86216:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8621a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8621e:	fa23 f002 	lsr.w	r0, r3, r2
   86222:	bf18      	it	ne
   86224:	4240      	negne	r0, r0
   86226:	4770      	bx	lr
   86228:	f04f 0000 	mov.w	r0, #0
   8622c:	4770      	bx	lr
   8622e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   86232:	d105      	bne.n	86240 <__aeabi_d2iz+0x48>
   86234:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   86238:	bf08      	it	eq
   8623a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   8623e:	4770      	bx	lr
   86240:	f04f 0000 	mov.w	r0, #0
   86244:	4770      	bx	lr
   86246:	bf00      	nop

00086248 <__aeabi_uldivmod>:
   86248:	b953      	cbnz	r3, 86260 <__aeabi_uldivmod+0x18>
   8624a:	b94a      	cbnz	r2, 86260 <__aeabi_uldivmod+0x18>
   8624c:	2900      	cmp	r1, #0
   8624e:	bf08      	it	eq
   86250:	2800      	cmpeq	r0, #0
   86252:	bf1c      	itt	ne
   86254:	f04f 31ff 	movne.w	r1, #4294967295
   86258:	f04f 30ff 	movne.w	r0, #4294967295
   8625c:	f000 b97a 	b.w	86554 <__aeabi_idiv0>
   86260:	f1ad 0c08 	sub.w	ip, sp, #8
   86264:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   86268:	f000 f806 	bl	86278 <__udivmoddi4>
   8626c:	f8dd e004 	ldr.w	lr, [sp, #4]
   86270:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86274:	b004      	add	sp, #16
   86276:	4770      	bx	lr

00086278 <__udivmoddi4>:
   86278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8627c:	468c      	mov	ip, r1
   8627e:	460e      	mov	r6, r1
   86280:	4604      	mov	r4, r0
   86282:	9d08      	ldr	r5, [sp, #32]
   86284:	2b00      	cmp	r3, #0
   86286:	d150      	bne.n	8632a <__udivmoddi4+0xb2>
   86288:	428a      	cmp	r2, r1
   8628a:	4617      	mov	r7, r2
   8628c:	d96c      	bls.n	86368 <__udivmoddi4+0xf0>
   8628e:	fab2 fe82 	clz	lr, r2
   86292:	f1be 0f00 	cmp.w	lr, #0
   86296:	d00b      	beq.n	862b0 <__udivmoddi4+0x38>
   86298:	f1ce 0c20 	rsb	ip, lr, #32
   8629c:	fa01 f60e 	lsl.w	r6, r1, lr
   862a0:	fa20 fc0c 	lsr.w	ip, r0, ip
   862a4:	fa02 f70e 	lsl.w	r7, r2, lr
   862a8:	ea4c 0c06 	orr.w	ip, ip, r6
   862ac:	fa00 f40e 	lsl.w	r4, r0, lr
   862b0:	0c3a      	lsrs	r2, r7, #16
   862b2:	fbbc f9f2 	udiv	r9, ip, r2
   862b6:	b2bb      	uxth	r3, r7
   862b8:	fb02 cc19 	mls	ip, r2, r9, ip
   862bc:	fb09 fa03 	mul.w	sl, r9, r3
   862c0:	ea4f 4814 	mov.w	r8, r4, lsr #16
   862c4:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   862c8:	45b2      	cmp	sl, r6
   862ca:	d90a      	bls.n	862e2 <__udivmoddi4+0x6a>
   862cc:	19f6      	adds	r6, r6, r7
   862ce:	f109 31ff 	add.w	r1, r9, #4294967295
   862d2:	f080 8125 	bcs.w	86520 <__udivmoddi4+0x2a8>
   862d6:	45b2      	cmp	sl, r6
   862d8:	f240 8122 	bls.w	86520 <__udivmoddi4+0x2a8>
   862dc:	f1a9 0902 	sub.w	r9, r9, #2
   862e0:	443e      	add	r6, r7
   862e2:	eba6 060a 	sub.w	r6, r6, sl
   862e6:	fbb6 f0f2 	udiv	r0, r6, r2
   862ea:	fb02 6610 	mls	r6, r2, r0, r6
   862ee:	fb00 f303 	mul.w	r3, r0, r3
   862f2:	b2a4      	uxth	r4, r4
   862f4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   862f8:	42a3      	cmp	r3, r4
   862fa:	d909      	bls.n	86310 <__udivmoddi4+0x98>
   862fc:	19e4      	adds	r4, r4, r7
   862fe:	f100 32ff 	add.w	r2, r0, #4294967295
   86302:	f080 810b 	bcs.w	8651c <__udivmoddi4+0x2a4>
   86306:	42a3      	cmp	r3, r4
   86308:	f240 8108 	bls.w	8651c <__udivmoddi4+0x2a4>
   8630c:	3802      	subs	r0, #2
   8630e:	443c      	add	r4, r7
   86310:	2100      	movs	r1, #0
   86312:	1ae4      	subs	r4, r4, r3
   86314:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86318:	2d00      	cmp	r5, #0
   8631a:	d062      	beq.n	863e2 <__udivmoddi4+0x16a>
   8631c:	2300      	movs	r3, #0
   8631e:	fa24 f40e 	lsr.w	r4, r4, lr
   86322:	602c      	str	r4, [r5, #0]
   86324:	606b      	str	r3, [r5, #4]
   86326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8632a:	428b      	cmp	r3, r1
   8632c:	d907      	bls.n	8633e <__udivmoddi4+0xc6>
   8632e:	2d00      	cmp	r5, #0
   86330:	d055      	beq.n	863de <__udivmoddi4+0x166>
   86332:	2100      	movs	r1, #0
   86334:	e885 0041 	stmia.w	r5, {r0, r6}
   86338:	4608      	mov	r0, r1
   8633a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8633e:	fab3 f183 	clz	r1, r3
   86342:	2900      	cmp	r1, #0
   86344:	f040 808f 	bne.w	86466 <__udivmoddi4+0x1ee>
   86348:	42b3      	cmp	r3, r6
   8634a:	d302      	bcc.n	86352 <__udivmoddi4+0xda>
   8634c:	4282      	cmp	r2, r0
   8634e:	f200 80fc 	bhi.w	8654a <__udivmoddi4+0x2d2>
   86352:	1a84      	subs	r4, r0, r2
   86354:	eb66 0603 	sbc.w	r6, r6, r3
   86358:	2001      	movs	r0, #1
   8635a:	46b4      	mov	ip, r6
   8635c:	2d00      	cmp	r5, #0
   8635e:	d040      	beq.n	863e2 <__udivmoddi4+0x16a>
   86360:	e885 1010 	stmia.w	r5, {r4, ip}
   86364:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86368:	b912      	cbnz	r2, 86370 <__udivmoddi4+0xf8>
   8636a:	2701      	movs	r7, #1
   8636c:	fbb7 f7f2 	udiv	r7, r7, r2
   86370:	fab7 fe87 	clz	lr, r7
   86374:	f1be 0f00 	cmp.w	lr, #0
   86378:	d135      	bne.n	863e6 <__udivmoddi4+0x16e>
   8637a:	2101      	movs	r1, #1
   8637c:	1bf6      	subs	r6, r6, r7
   8637e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86382:	fa1f f887 	uxth.w	r8, r7
   86386:	fbb6 f2fc 	udiv	r2, r6, ip
   8638a:	fb0c 6612 	mls	r6, ip, r2, r6
   8638e:	fb08 f002 	mul.w	r0, r8, r2
   86392:	0c23      	lsrs	r3, r4, #16
   86394:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   86398:	42b0      	cmp	r0, r6
   8639a:	d907      	bls.n	863ac <__udivmoddi4+0x134>
   8639c:	19f6      	adds	r6, r6, r7
   8639e:	f102 33ff 	add.w	r3, r2, #4294967295
   863a2:	d202      	bcs.n	863aa <__udivmoddi4+0x132>
   863a4:	42b0      	cmp	r0, r6
   863a6:	f200 80d2 	bhi.w	8654e <__udivmoddi4+0x2d6>
   863aa:	461a      	mov	r2, r3
   863ac:	1a36      	subs	r6, r6, r0
   863ae:	fbb6 f0fc 	udiv	r0, r6, ip
   863b2:	fb0c 6610 	mls	r6, ip, r0, r6
   863b6:	fb08 f800 	mul.w	r8, r8, r0
   863ba:	b2a3      	uxth	r3, r4
   863bc:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   863c0:	45a0      	cmp	r8, r4
   863c2:	d907      	bls.n	863d4 <__udivmoddi4+0x15c>
   863c4:	19e4      	adds	r4, r4, r7
   863c6:	f100 33ff 	add.w	r3, r0, #4294967295
   863ca:	d202      	bcs.n	863d2 <__udivmoddi4+0x15a>
   863cc:	45a0      	cmp	r8, r4
   863ce:	f200 80b9 	bhi.w	86544 <__udivmoddi4+0x2cc>
   863d2:	4618      	mov	r0, r3
   863d4:	eba4 0408 	sub.w	r4, r4, r8
   863d8:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   863dc:	e79c      	b.n	86318 <__udivmoddi4+0xa0>
   863de:	4629      	mov	r1, r5
   863e0:	4628      	mov	r0, r5
   863e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   863e6:	fa07 f70e 	lsl.w	r7, r7, lr
   863ea:	f1ce 0320 	rsb	r3, lr, #32
   863ee:	fa26 f203 	lsr.w	r2, r6, r3
   863f2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   863f6:	fbb2 f1fc 	udiv	r1, r2, ip
   863fa:	fa1f f887 	uxth.w	r8, r7
   863fe:	fb0c 2211 	mls	r2, ip, r1, r2
   86402:	fa06 f60e 	lsl.w	r6, r6, lr
   86406:	fa20 f303 	lsr.w	r3, r0, r3
   8640a:	fb01 f908 	mul.w	r9, r1, r8
   8640e:	4333      	orrs	r3, r6
   86410:	0c1e      	lsrs	r6, r3, #16
   86412:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86416:	45b1      	cmp	r9, r6
   86418:	fa00 f40e 	lsl.w	r4, r0, lr
   8641c:	d909      	bls.n	86432 <__udivmoddi4+0x1ba>
   8641e:	19f6      	adds	r6, r6, r7
   86420:	f101 32ff 	add.w	r2, r1, #4294967295
   86424:	f080 808c 	bcs.w	86540 <__udivmoddi4+0x2c8>
   86428:	45b1      	cmp	r9, r6
   8642a:	f240 8089 	bls.w	86540 <__udivmoddi4+0x2c8>
   8642e:	3902      	subs	r1, #2
   86430:	443e      	add	r6, r7
   86432:	eba6 0609 	sub.w	r6, r6, r9
   86436:	fbb6 f0fc 	udiv	r0, r6, ip
   8643a:	fb0c 6210 	mls	r2, ip, r0, r6
   8643e:	fb00 f908 	mul.w	r9, r0, r8
   86442:	b29e      	uxth	r6, r3
   86444:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86448:	45b1      	cmp	r9, r6
   8644a:	d907      	bls.n	8645c <__udivmoddi4+0x1e4>
   8644c:	19f6      	adds	r6, r6, r7
   8644e:	f100 33ff 	add.w	r3, r0, #4294967295
   86452:	d271      	bcs.n	86538 <__udivmoddi4+0x2c0>
   86454:	45b1      	cmp	r9, r6
   86456:	d96f      	bls.n	86538 <__udivmoddi4+0x2c0>
   86458:	3802      	subs	r0, #2
   8645a:	443e      	add	r6, r7
   8645c:	eba6 0609 	sub.w	r6, r6, r9
   86460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   86464:	e78f      	b.n	86386 <__udivmoddi4+0x10e>
   86466:	f1c1 0720 	rsb	r7, r1, #32
   8646a:	fa22 f807 	lsr.w	r8, r2, r7
   8646e:	408b      	lsls	r3, r1
   86470:	ea48 0303 	orr.w	r3, r8, r3
   86474:	fa26 f407 	lsr.w	r4, r6, r7
   86478:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   8647c:	fbb4 f9fe 	udiv	r9, r4, lr
   86480:	fa1f fc83 	uxth.w	ip, r3
   86484:	fb0e 4419 	mls	r4, lr, r9, r4
   86488:	408e      	lsls	r6, r1
   8648a:	fa20 f807 	lsr.w	r8, r0, r7
   8648e:	fb09 fa0c 	mul.w	sl, r9, ip
   86492:	ea48 0806 	orr.w	r8, r8, r6
   86496:	ea4f 4618 	mov.w	r6, r8, lsr #16
   8649a:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   8649e:	45a2      	cmp	sl, r4
   864a0:	fa02 f201 	lsl.w	r2, r2, r1
   864a4:	fa00 f601 	lsl.w	r6, r0, r1
   864a8:	d908      	bls.n	864bc <__udivmoddi4+0x244>
   864aa:	18e4      	adds	r4, r4, r3
   864ac:	f109 30ff 	add.w	r0, r9, #4294967295
   864b0:	d244      	bcs.n	8653c <__udivmoddi4+0x2c4>
   864b2:	45a2      	cmp	sl, r4
   864b4:	d942      	bls.n	8653c <__udivmoddi4+0x2c4>
   864b6:	f1a9 0902 	sub.w	r9, r9, #2
   864ba:	441c      	add	r4, r3
   864bc:	eba4 040a 	sub.w	r4, r4, sl
   864c0:	fbb4 f0fe 	udiv	r0, r4, lr
   864c4:	fb0e 4410 	mls	r4, lr, r0, r4
   864c8:	fb00 fc0c 	mul.w	ip, r0, ip
   864cc:	fa1f f888 	uxth.w	r8, r8
   864d0:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   864d4:	45a4      	cmp	ip, r4
   864d6:	d907      	bls.n	864e8 <__udivmoddi4+0x270>
   864d8:	18e4      	adds	r4, r4, r3
   864da:	f100 3eff 	add.w	lr, r0, #4294967295
   864de:	d229      	bcs.n	86534 <__udivmoddi4+0x2bc>
   864e0:	45a4      	cmp	ip, r4
   864e2:	d927      	bls.n	86534 <__udivmoddi4+0x2bc>
   864e4:	3802      	subs	r0, #2
   864e6:	441c      	add	r4, r3
   864e8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   864ec:	fba0 8902 	umull	r8, r9, r0, r2
   864f0:	eba4 0c0c 	sub.w	ip, r4, ip
   864f4:	45cc      	cmp	ip, r9
   864f6:	46c2      	mov	sl, r8
   864f8:	46ce      	mov	lr, r9
   864fa:	d315      	bcc.n	86528 <__udivmoddi4+0x2b0>
   864fc:	d012      	beq.n	86524 <__udivmoddi4+0x2ac>
   864fe:	b155      	cbz	r5, 86516 <__udivmoddi4+0x29e>
   86500:	ebb6 030a 	subs.w	r3, r6, sl
   86504:	eb6c 060e 	sbc.w	r6, ip, lr
   86508:	fa06 f707 	lsl.w	r7, r6, r7
   8650c:	40cb      	lsrs	r3, r1
   8650e:	431f      	orrs	r7, r3
   86510:	40ce      	lsrs	r6, r1
   86512:	602f      	str	r7, [r5, #0]
   86514:	606e      	str	r6, [r5, #4]
   86516:	2100      	movs	r1, #0
   86518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8651c:	4610      	mov	r0, r2
   8651e:	e6f7      	b.n	86310 <__udivmoddi4+0x98>
   86520:	4689      	mov	r9, r1
   86522:	e6de      	b.n	862e2 <__udivmoddi4+0x6a>
   86524:	4546      	cmp	r6, r8
   86526:	d2ea      	bcs.n	864fe <__udivmoddi4+0x286>
   86528:	ebb8 0a02 	subs.w	sl, r8, r2
   8652c:	eb69 0e03 	sbc.w	lr, r9, r3
   86530:	3801      	subs	r0, #1
   86532:	e7e4      	b.n	864fe <__udivmoddi4+0x286>
   86534:	4670      	mov	r0, lr
   86536:	e7d7      	b.n	864e8 <__udivmoddi4+0x270>
   86538:	4618      	mov	r0, r3
   8653a:	e78f      	b.n	8645c <__udivmoddi4+0x1e4>
   8653c:	4681      	mov	r9, r0
   8653e:	e7bd      	b.n	864bc <__udivmoddi4+0x244>
   86540:	4611      	mov	r1, r2
   86542:	e776      	b.n	86432 <__udivmoddi4+0x1ba>
   86544:	3802      	subs	r0, #2
   86546:	443c      	add	r4, r7
   86548:	e744      	b.n	863d4 <__udivmoddi4+0x15c>
   8654a:	4608      	mov	r0, r1
   8654c:	e706      	b.n	8635c <__udivmoddi4+0xe4>
   8654e:	3a02      	subs	r2, #2
   86550:	443e      	add	r6, r7
   86552:	e72b      	b.n	863ac <__udivmoddi4+0x134>

00086554 <__aeabi_idiv0>:
   86554:	4770      	bx	lr
   86556:	bf00      	nop
   86558:	4f420a0d 	.word	0x4f420a0d
   8655c:	554f4a4e 	.word	0x554f4a4e
   86560:	0a0d2c52 	.word	0x0a0d2c52
   86564:	00000000 	.word	0x00000000
   86568:	6f630a0d 	.word	0x6f630a0d
   8656c:	6e656d6d 	.word	0x6e656d6d
   86570:	000a0d74 	.word	0x000a0d74
   86574:	6c610a0d 	.word	0x6c610a0d
   86578:	0d72656c 	.word	0x0d72656c
   8657c:	0000000a 	.word	0x0000000a
   86580:	6f760a0d 	.word	0x6f760a0d
   86584:	0d3f7375 	.word	0x0d3f7375
   86588:	0000000a 	.word	0x0000000a
   8658c:	003e0a0d 	.word	0x003e0a0d
   86590:	3e3e0a0d 	.word	0x3e3e0a0d
   86594:	0000003e 	.word	0x0000003e
   86598:	00000a0d 	.word	0x00000a0d
   8659c:	000a0d20 	.word	0x000a0d20
   865a0:	6e750a0d 	.word	0x6e750a0d
   865a4:	776f6e6b 	.word	0x776f6e6b
   865a8:	6d63206e 	.word	0x6d63206e
   865ac:	25203a64 	.word	0x25203a64
   865b0:	0d583430 	.word	0x0d583430
   865b4:	0000000a 	.word	0x0000000a
   865b8:	6b5b1b0d 	.word	0x6b5b1b0d
   865bc:	3230250d 	.word	0x3230250d
   865c0:	30253a64 	.word	0x30253a64
   865c4:	253a6432 	.word	0x253a6432
   865c8:	00643230 	.word	0x00643230
   865cc:	20732509 	.word	0x20732509
   865d0:	64323025 	.word	0x64323025
   865d4:	20732520 	.word	0x20732520
   865d8:	64323025 	.word	0x64323025
   865dc:	00000000 	.word	0x00000000

000865e0 <flashSequ>:
   865e0:	00000032 000001f4 00000032 000004b0     2.......2.......
   865f0:	00000000 00006874 0000646e 00006472     ....th..nd..rd..
   86600:	756e614a 00797261 72626546 79726175     January.February
   86610:	00000000 6372614d 00000068 69727041     ....March...Apri
   86620:	0000006c 0079614d 656e754a 00000000     l...May.June....
   86630:	796c754a 00000000 75677541 00007473     July....August..
   86640:	74706553 65626d65 00000072 6f74634f     September...Octo
   86650:	00726562 65766f4e 7265626d 00000000     ber.November....
   86660:	65636544 7265626d 00000000 646e7553     December....Sund
   86670:	00007961 646e6f4d 00007961 73657554     ay..Monday..Tues
   86680:	00796164 6e646557 61647365 00000079     day.Wednesday...
   86690:	72756854 79616473 00000000 64697246     Thursday....Frid
   866a0:	00007961 75746153 79616472 00000000     ay..Saturday....

000866b0 <_cmdEntries>:
   866b0:	00006cab 00080bb5 0000aaf6 00080d05     .l..............
	...
   866c8:	0d203a20 0000000a 7465274c 64207461      : .....L'etat d
   866d8:	616c2065 6f726220 20656863 69617465     e la broche etai
   866e8:	61682074 0d207475 0000000a 7465274c     t haut .....L'et
   866f8:	64207461 616c2065 6f726220 20656863     at de la broche 
   86708:	69617465 61622074 0a0d2073 00000000     etait bas ......

00086718 <usart_console_settings>:
   86718:	0001c200 000000c0 00000800 00000000     ................
	...

00086730 <flashSequApp>:
   86730:	00000064 000001f4 00000064 000001f4     d.......d.......
   86740:	00000064 00000898 00000000 090a0a0d     d...............
   86750:	454d5441 5441204c 334d4153 54532055     ATMEL ATSAM3U ST
   86760:	45545241 0a0a0d44 00000000              ARTED.......

0008676c <_global_impure_ptr>:
   8676c:	200705a8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   8677c:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   8678c:	46454443 00000000 33323130 37363534     CDEF....01234567
   8679c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   867ac:	0000296c 00000030                       l)..0...

000867b4 <blanks.7223>:
   867b4:	20202020 20202020 20202020 20202020                     

000867c4 <zeroes.7224>:
   867c4:	30303030 30303030 30303030 30303030     0000000000000000
   867d4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   867e4:	00000043 49534f50 00000058 0000002e     C...POSIX.......
   867f4:	00000000                                ....

000867f8 <__mprec_bigtens>:
   867f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   86808:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   86818:	7f73bf3c 75154fdd                       <.s..O.u

00086820 <__mprec_tens>:
   86820:	00000000 3ff00000 00000000 40240000     .......?......$@
   86830:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   86840:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   86850:	00000000 412e8480 00000000 416312d0     .......A......cA
   86860:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   86870:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   86880:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   86890:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   868a0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   868b0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   868c0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   868d0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   868e0:	79d99db4 44ea7843                       ...yCx.D

000868e8 <p05.6055>:
   868e8:	00000005 00000019 0000007d              ........}...

000868f4 <_ctype_>:
   868f4:	20202000 20202020 28282020 20282828     .         ((((( 
   86904:	20202020 20202020 20202020 20202020                     
   86914:	10108820 10101010 10101010 10101010      ...............
   86924:	04040410 04040404 10040404 10101010     ................
   86934:	41411010 41414141 01010101 01010101     ..AAAAAA........
   86944:	01010101 01010101 01010101 10101010     ................
   86954:	42421010 42424242 02020202 02020202     ..BBBBBB........
   86964:	02020202 02020202 02020202 10101010     ................
   86974:	00000020 00000000 00000000 00000000      ...............
	...

000869f8 <_init>:
   869f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   869fa:	bf00      	nop
   869fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   869fe:	bc08      	pop	{r3}
   86a00:	469e      	mov	lr, r3
   86a02:	4770      	bx	lr

00086a04 <__init_array_start>:
   86a04:	00083349 	.word	0x00083349

00086a08 <__frame_dummy_init_array_entry>:
   86a08:	00080119                                ....

00086a0c <_fini>:
   86a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86a0e:	bf00      	nop
   86a10:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86a12:	bc08      	pop	{r3}
   86a14:	469e      	mov	lr, r3
   86a16:	4770      	bx	lr

00086a18 <__fini_array_start>:
   86a18:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007059c 	.word	0x2007059c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <tabl>:
20070138:	00086558 00086568 00086574 00086580     Xe..he..te...e..

20070148 <wCRCTable>:
20070148:	00000000 0000c0c1 0000c181 00000140     ............@...
20070158:	0000c301 000003c0 00000280 0000c241     ............A...
20070168:	0000c601 000006c0 00000780 0000c741     ............A...
20070178:	00000500 0000c5c1 0000c481 00000440     ............@...
20070188:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20070198:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
200701a8:	00000a00 0000cac1 0000cb81 00000b40     ............@...
200701b8:	0000c901 000009c0 00000880 0000c841     ............A...
200701c8:	0000d801 000018c0 00001980 0000d941     ............A...
200701d8:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200701e8:	00001e00 0000dec1 0000df81 00001f40     ............@...
200701f8:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
20070208:	00001400 0000d4c1 0000d581 00001540     ............@...
20070218:	0000d701 000017c0 00001680 0000d641     ............A...
20070228:	0000d201 000012c0 00001380 0000d341     ............A...
20070238:	00001100 0000d1c1 0000d081 00001040     ............@...
20070248:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20070258:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20070268:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20070278:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20070288:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20070298:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
200702a8:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
200702b8:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200702c8:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200702d8:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200702e8:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200702f8:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
20070308:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
20070318:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20070328:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20070338:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20070348:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20070358:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20070368:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20070378:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20070388:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20070398:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
200703a8:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
200703b8:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200703c8:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200703d8:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200703e8:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200703f8:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
20070408:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
20070418:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20070428:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20070438:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20070448:	00005000 000090c1 00009181 00005140     .P..........@Q..
20070458:	00009301 000053c0 00005280 00009241     .....S...R..A...
20070468:	00009601 000056c0 00005780 00009741     .....V...W..A...
20070478:	00005500 000095c1 00009481 00005440     .U..........@T..
20070488:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20070498:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
200704a8:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
200704b8:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200704c8:	00008801 000048c0 00004980 00008941     .....H...I..A...
200704d8:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200704e8:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200704f8:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
20070508:	00004400 000084c1 00008581 00004540     .D..........@E..
20070518:	00008701 000047c0 00004680 00008641     .....G...F..A...
20070528:	00008201 000042c0 00004380 00008341     .....B...C..A...
20070538:	00004100 000081c1 00008081 00004040     .A..........@@..

20070548 <pErrorFunc>:
20070548:	00080605                                ....

2007054c <daysOfWeek>:
2007054c:	0008666c 00086674 0008667c 00086684     lf..tf..|f...f..
2007055c:	00086690 0008669c 000866a4              .f...f...f..

20070568 <months>:
20070568:	00086600 00086608 00086614 0008661c     .f...f...f...f..
20070578:	00086624 00086628 00086630 00086638     $f..(f..0f..8f..
20070588:	00086640 0008664c 00086654 00086660     @f..Lf..Tf..`f..

20070598 <g_interrupt_enabled>:
20070598:	00000001                                ....

2007059c <SystemCoreClock>:
2007059c:	003d0900                                ..=.

200705a0 <_impure_ptr>:
200705a0:	200705a8 00000000                       ... ....

200705a8 <impure_data>:
200705a8:	00000000 20070894 200708fc 20070964     ....... ... d.. 
	...
20070650:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070660:	0005deec 0000000b 00000000 00000000     ................
	...

200709d0 <__atexit_recursive_mutex>:
200709d0:	200714ac                                ... 

200709d4 <__global_locale>:
200709d4:	00000043 00000000 00000000 00000000     C...............
	...
200709f4:	00000043 00000000 00000000 00000000     C...............
	...
20070a14:	00000043 00000000 00000000 00000000     C...............
	...
20070a34:	00000043 00000000 00000000 00000000     C...............
	...
20070a54:	00000043 00000000 00000000 00000000     C...............
	...
20070a74:	00000043 00000000 00000000 00000000     C...............
	...
20070a94:	00000043 00000000 00000000 00000000     C...............
	...
20070ab4:	0008514d 00084879 00000000 000868f4     MQ..yH.......h..
20070ac4:	000867f0 00086768 00086768 00086768     .g..hg..hg..hg..
20070ad4:	00086768 00086768 00086768 00086768     hg..hg..hg..hg..
20070ae4:	00086768 00086768 ffffffff ffffffff     hg..hg..........
20070af4:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070b1c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070b40 <__malloc_av_>:
	...
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 
20070b88:	20070b80 20070b80 20070b88 20070b88     ... ... ... ... 
20070b98:	20070b90 20070b90 20070b98 20070b98     ... ... ... ... 
20070ba8:	20070ba0 20070ba0 20070ba8 20070ba8     ... ... ... ... 
20070bb8:	20070bb0 20070bb0 20070bb8 20070bb8     ... ... ... ... 
20070bc8:	20070bc0 20070bc0 20070bc8 20070bc8     ... ... ... ... 
20070bd8:	20070bd0 20070bd0 20070bd8 20070bd8     ... ... ... ... 
20070be8:	20070be0 20070be0 20070be8 20070be8     ... ... ... ... 
20070bf8:	20070bf0 20070bf0 20070bf8 20070bf8     ... ... ... ... 
20070c08:	20070c00 20070c00 20070c08 20070c08     ... ... ... ... 
20070c18:	20070c10 20070c10 20070c18 20070c18     ... ... ... ... 
20070c28:	20070c20 20070c20 20070c28 20070c28      ..  .. (.. (.. 
20070c38:	20070c30 20070c30 20070c38 20070c38     0.. 0.. 8.. 8.. 
20070c48:	20070c40 20070c40 20070c48 20070c48     @.. @.. H.. H.. 
20070c58:	20070c50 20070c50 20070c58 20070c58     P.. P.. X.. X.. 
20070c68:	20070c60 20070c60 20070c68 20070c68     `.. `.. h.. h.. 
20070c78:	20070c70 20070c70 20070c78 20070c78     p.. p.. x.. x.. 
20070c88:	20070c80 20070c80 20070c88 20070c88     ... ... ... ... 
20070c98:	20070c90 20070c90 20070c98 20070c98     ... ... ... ... 
20070ca8:	20070ca0 20070ca0 20070ca8 20070ca8     ... ... ... ... 
20070cb8:	20070cb0 20070cb0 20070cb8 20070cb8     ... ... ... ... 
20070cc8:	20070cc0 20070cc0 20070cc8 20070cc8     ... ... ... ... 
20070cd8:	20070cd0 20070cd0 20070cd8 20070cd8     ... ... ... ... 
20070ce8:	20070ce0 20070ce0 20070ce8 20070ce8     ... ... ... ... 
20070cf8:	20070cf0 20070cf0 20070cf8 20070cf8     ... ... ... ... 
20070d08:	20070d00 20070d00 20070d08 20070d08     ... ... ... ... 
20070d18:	20070d10 20070d10 20070d18 20070d18     ... ... ... ... 
20070d28:	20070d20 20070d20 20070d28 20070d28      ..  .. (.. (.. 
20070d38:	20070d30 20070d30 20070d38 20070d38     0.. 0.. 8.. 8.. 
20070d48:	20070d40 20070d40 20070d48 20070d48     @.. @.. H.. H.. 
20070d58:	20070d50 20070d50 20070d58 20070d58     P.. P.. X.. X.. 
20070d68:	20070d60 20070d60 20070d68 20070d68     `.. `.. h.. h.. 
20070d78:	20070d70 20070d70 20070d78 20070d78     p.. p.. x.. x.. 
20070d88:	20070d80 20070d80 20070d88 20070d88     ... ... ... ... 
20070d98:	20070d90 20070d90 20070d98 20070d98     ... ... ... ... 
20070da8:	20070da0 20070da0 20070da8 20070da8     ... ... ... ... 
20070db8:	20070db0 20070db0 20070db8 20070db8     ... ... ... ... 
20070dc8:	20070dc0 20070dc0 20070dc8 20070dc8     ... ... ... ... 
20070dd8:	20070dd0 20070dd0 20070dd8 20070dd8     ... ... ... ... 
20070de8:	20070de0 20070de0 20070de8 20070de8     ... ... ... ... 
20070df8:	20070df0 20070df0 20070df8 20070df8     ... ... ... ... 
20070e08:	20070e00 20070e00 20070e08 20070e08     ... ... ... ... 
20070e18:	20070e10 20070e10 20070e18 20070e18     ... ... ... ... 
20070e28:	20070e20 20070e20 20070e28 20070e28      ..  .. (.. (.. 
20070e38:	20070e30 20070e30 20070e38 20070e38     0.. 0.. 8.. 8.. 
20070e48:	20070e40 20070e40 20070e48 20070e48     @.. @.. H.. H.. 
20070e58:	20070e50 20070e50 20070e58 20070e58     P.. P.. X.. X.. 
20070e68:	20070e60 20070e60 20070e68 20070e68     `.. `.. h.. h.. 
20070e78:	20070e70 20070e70 20070e78 20070e78     p.. p.. x.. x.. 
20070e88:	20070e80 20070e80 20070e88 20070e88     ... ... ... ... 
20070e98:	20070e90 20070e90 20070e98 20070e98     ... ... ... ... 
20070ea8:	20070ea0 20070ea0 20070ea8 20070ea8     ... ... ... ... 
20070eb8:	20070eb0 20070eb0 20070eb8 20070eb8     ... ... ... ... 
20070ec8:	20070ec0 20070ec0 20070ec8 20070ec8     ... ... ... ... 
20070ed8:	20070ed0 20070ed0 20070ed8 20070ed8     ... ... ... ... 
20070ee8:	20070ee0 20070ee0 20070ee8 20070ee8     ... ... ... ... 
20070ef8:	20070ef0 20070ef0 20070ef8 20070ef8     ... ... ... ... 
20070f08:	20070f00 20070f00 20070f08 20070f08     ... ... ... ... 
20070f18:	20070f10 20070f10 20070f18 20070f18     ... ... ... ... 
20070f28:	20070f20 20070f20 20070f28 20070f28      ..  .. (.. (.. 
20070f38:	20070f30 20070f30 20070f38 20070f38     0.. 0.. 8.. 8.. 

20070f48 <__malloc_sbrk_base>:
20070f48:	ffffffff                                ....

20070f4c <__malloc_trim_threshold>:
20070f4c:	00020000                                ....
