
test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000063a4  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000863a4  000863a4  000163a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000f24  20000000  000863ac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000644  20000f24  000872d0  00020f24  2**2
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020f24  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020f4d  2**0
                  CONTENTS, READONLY
  7 .debug_info   000167ca  00000000  00000000  00020fa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000395b  00000000  00000000  00037770  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000038c1  00000000  00000000  0003b0cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000008d8  00000000  00000000  0003e98c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007b0  00000000  00000000  0003f264  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000165e6  00000000  00000000  0003fa14  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00010f2a  00000000  00000000  00055ffa  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004f43b  00000000  00000000  00066f24  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001d8c  00000000  00000000  000b6360  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 c9 14 08 00 c5 14 08 00 c5 14 08 00     .@. ............
   80010:	c5 14 08 00 c5 14 08 00 c5 14 08 00 00 00 00 00     ................
	...
   8002c:	c5 14 08 00 c5 14 08 00 00 00 00 00 c5 14 08 00     ................
   8003c:	c5 14 08 00 c5 14 08 00 c5 14 08 00 49 05 08 00     ............I...
   8004c:	c5 14 08 00 c5 14 08 00 c5 14 08 00 c5 14 08 00     ................
   8005c:	c5 14 08 00 45 0b 08 00 c5 14 08 00 79 01 08 00     ....E.......y...
   8006c:	8d 01 08 00 c5 14 08 00 c5 14 08 00 c5 14 08 00     ................
   8007c:	c5 14 08 00 c5 14 08 00 c5 14 08 00 c5 14 08 00     ................
   8008c:	c5 14 08 00 c5 14 08 00 c5 14 08 00 bd 0d 08 00     ................
   8009c:	c5 14 08 00 c5 14 08 00 c5 14 08 00 c5 14 08 00     ................
   800ac:	c5 14 08 00 c5 14 08 00 c5 14 08 00 c5 14 08 00     ................

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000f24 	.word	0x20000f24
   800d8:	00000000 	.word	0x00000000
   800dc:	000863ac 	.word	0x000863ac

000800e0 <frame_dummy>:
   800e0:	4b0c      	ldr	r3, [pc, #48]	; (80114 <frame_dummy+0x34>)
   800e2:	b143      	cbz	r3, 800f6 <frame_dummy+0x16>
   800e4:	480c      	ldr	r0, [pc, #48]	; (80118 <frame_dummy+0x38>)
   800e6:	b510      	push	{r4, lr}
   800e8:	490c      	ldr	r1, [pc, #48]	; (8011c <frame_dummy+0x3c>)
   800ea:	f3af 8000 	nop.w
   800ee:	480c      	ldr	r0, [pc, #48]	; (80120 <frame_dummy+0x40>)
   800f0:	6803      	ldr	r3, [r0, #0]
   800f2:	b923      	cbnz	r3, 800fe <frame_dummy+0x1e>
   800f4:	bd10      	pop	{r4, pc}
   800f6:	480a      	ldr	r0, [pc, #40]	; (80120 <frame_dummy+0x40>)
   800f8:	6803      	ldr	r3, [r0, #0]
   800fa:	b933      	cbnz	r3, 8010a <frame_dummy+0x2a>
   800fc:	4770      	bx	lr
   800fe:	4b09      	ldr	r3, [pc, #36]	; (80124 <frame_dummy+0x44>)
   80100:	2b00      	cmp	r3, #0
   80102:	d0f7      	beq.n	800f4 <frame_dummy+0x14>
   80104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80108:	4718      	bx	r3
   8010a:	4b06      	ldr	r3, [pc, #24]	; (80124 <frame_dummy+0x44>)
   8010c:	2b00      	cmp	r3, #0
   8010e:	d0f5      	beq.n	800fc <frame_dummy+0x1c>
   80110:	4718      	bx	r3
   80112:	bf00      	nop
   80114:	00000000 	.word	0x00000000
   80118:	000863ac 	.word	0x000863ac
   8011c:	20000f28 	.word	0x20000f28
   80120:	000863ac 	.word	0x000863ac
   80124:	00000000 	.word	0x00000000

00080128 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8012c:	4604      	mov	r4, r0
   8012e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80130:	4b0e      	ldr	r3, [pc, #56]	; (8016c <pio_handler_process+0x44>)
   80132:	4798      	blx	r3
   80134:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80136:	4620      	mov	r0, r4
   80138:	4b0d      	ldr	r3, [pc, #52]	; (80170 <pio_handler_process+0x48>)
   8013a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   8013c:	4005      	ands	r5, r0
   8013e:	d013      	beq.n	80168 <pio_handler_process+0x40>
   80140:	4c0c      	ldr	r4, [pc, #48]	; (80174 <pio_handler_process+0x4c>)
   80142:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80146:	e003      	b.n	80150 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80148:	42b4      	cmp	r4, r6
   8014a:	d00d      	beq.n	80168 <pio_handler_process+0x40>
   8014c:	3410      	adds	r4, #16
		while (status != 0) {
   8014e:	b15d      	cbz	r5, 80168 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80150:	6820      	ldr	r0, [r4, #0]
   80152:	4540      	cmp	r0, r8
   80154:	d1f8      	bne.n	80148 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80156:	6861      	ldr	r1, [r4, #4]
   80158:	4229      	tst	r1, r5
   8015a:	d0f5      	beq.n	80148 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8015c:	68e3      	ldr	r3, [r4, #12]
   8015e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80160:	6863      	ldr	r3, [r4, #4]
   80162:	ea25 0503 	bic.w	r5, r5, r3
   80166:	e7ef      	b.n	80148 <pio_handler_process+0x20>
   80168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8016c:	0008100f 	.word	0x0008100f
   80170:	00081013 	.word	0x00081013
   80174:	20000f40 	.word	0x20000f40

00080178 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80178:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8017a:	210a      	movs	r1, #10
   8017c:	4801      	ldr	r0, [pc, #4]	; (80184 <PIOA_Handler+0xc>)
   8017e:	4b02      	ldr	r3, [pc, #8]	; (80188 <PIOA_Handler+0x10>)
   80180:	4798      	blx	r3
   80182:	bd08      	pop	{r3, pc}
   80184:	400e0c00 	.word	0x400e0c00
   80188:	00080129 	.word	0x00080129

0008018c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   8018c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   8018e:	210b      	movs	r1, #11
   80190:	4801      	ldr	r0, [pc, #4]	; (80198 <PIOB_Handler+0xc>)
   80192:	4b02      	ldr	r3, [pc, #8]	; (8019c <PIOB_Handler+0x10>)
   80194:	4798      	blx	r3
   80196:	bd08      	pop	{r3, pc}
   80198:	400e0e00 	.word	0x400e0e00
   8019c:	00080129 	.word	0x00080129

000801a0 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
   801a0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   801a4:	6043      	str	r3, [r0, #4]
   801a6:	4770      	bx	lr

000801a8 <CRC16MODBUSFRAME>:
unsigned int CRC16MODBUSFRAME (unsigned char *nData, unsigned int wLength)
{
	unsigned char  nTemp;
	unsigned int  wCRCWord = 0xFFFF;

	while (wLength--)
   801a8:	b189      	cbz	r1, 801ce <CRC16MODBUSFRAME+0x26>
{
   801aa:	b410      	push	{r4}
   801ac:	1841      	adds	r1, r0, r1
	while (wLength--)
   801ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
	{
		nTemp = *nData++ ^ wCRCWord;
		wCRCWord >>= 8;
		wCRCWord ^= wCRCTable[nTemp];
   801b2:	4c09      	ldr	r4, [pc, #36]	; (801d8 <CRC16MODBUSFRAME+0x30>)
		nTemp = *nData++ ^ wCRCWord;
   801b4:	f810 3b01 	ldrb.w	r3, [r0], #1
   801b8:	4053      	eors	r3, r2
		wCRCWord ^= wCRCTable[nTemp];
   801ba:	b2db      	uxtb	r3, r3
   801bc:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   801c0:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
	while (wLength--)
   801c4:	4281      	cmp	r1, r0
   801c6:	d1f5      	bne.n	801b4 <CRC16MODBUSFRAME+0xc>
	}
	return wCRCWord;
}
   801c8:	4610      	mov	r0, r2
   801ca:	bc10      	pop	{r4}
   801cc:	4770      	bx	lr
	unsigned int  wCRCWord = 0xFFFF;
   801ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
}
   801d2:	4610      	mov	r0, r2
   801d4:	4770      	bx	lr
   801d6:	bf00      	nop
   801d8:	20000124 	.word	0x20000124

000801dc <ErrorLed>:
#include "../Headers/appli.h"

t_ptf32 pErrorFunc = ErrorLed;

uint32_t ErrorLed(uint32_t err, ...)
{
   801dc:	b40f      	push	{r0, r1, r2, r3}
   801de:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   801e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
		delay_ms(2000);
		gpio_set_pin_low(ERROR_LED);
		delay_ms(500);

		//Display tens of error code
		for(i=0; i<err/10; i++)
   801e4:	f8df 9094 	ldr.w	r9, [pc, #148]	; 8027c <ErrorLed+0xa0>
   801e8:	fba9 2903 	umull	r2, r9, r9, r3
   801ec:	ea4f 09d9 	mov.w	r9, r9, lsr #3
			delay_ms(200);
		}
		delay_ms(500);

		//Display units of error code
		for(i=0; i<err%10; i++)
   801f0:	eb09 0a89 	add.w	sl, r9, r9, lsl #2
   801f4:	eba3 0a4a 	sub.w	sl, r3, sl, lsl #1
		gpio_set_pin_high(ERROR_LED);
   801f8:	2533      	movs	r5, #51	; 0x33
   801fa:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80280 <ErrorLed+0xa4>
		delay_ms(2000);
   801fe:	4c1a      	ldr	r4, [pc, #104]	; (80268 <ErrorLed+0x8c>)
		delay_ms(500);
   80200:	f8df b080 	ldr.w	fp, [pc, #128]	; 80284 <ErrorLed+0xa8>
   80204:	e001      	b.n	8020a <ErrorLed+0x2e>
			gpio_set_pin_high(ERROR_LED);
			delay_ms(200);
			gpio_set_pin_low(ERROR_LED);
			delay_ms(200);
		}
		delay_ms(1000);
   80206:	4819      	ldr	r0, [pc, #100]	; (8026c <ErrorLed+0x90>)
   80208:	47a0      	blx	r4
		gpio_set_pin_high(ERROR_LED);
   8020a:	4628      	mov	r0, r5
   8020c:	47c0      	blx	r8
		delay_ms(2000);
   8020e:	4818      	ldr	r0, [pc, #96]	; (80270 <ErrorLed+0x94>)
   80210:	47a0      	blx	r4
		gpio_set_pin_low(ERROR_LED);
   80212:	4628      	mov	r0, r5
   80214:	4b17      	ldr	r3, [pc, #92]	; (80274 <ErrorLed+0x98>)
   80216:	4798      	blx	r3
		delay_ms(500);
   80218:	4658      	mov	r0, fp
   8021a:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   8021c:	f1b9 0f00 	cmp.w	r9, #0
   80220:	d00d      	beq.n	8023e <ErrorLed+0x62>
   80222:	2600      	movs	r6, #0
			delay_ms(200);
   80224:	4f14      	ldr	r7, [pc, #80]	; (80278 <ErrorLed+0x9c>)
			gpio_set_pin_high(ERROR_LED);
   80226:	4628      	mov	r0, r5
   80228:	47c0      	blx	r8
			delay_ms(200);
   8022a:	4638      	mov	r0, r7
   8022c:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   8022e:	4628      	mov	r0, r5
   80230:	4b10      	ldr	r3, [pc, #64]	; (80274 <ErrorLed+0x98>)
   80232:	4798      	blx	r3
			delay_ms(200);
   80234:	4638      	mov	r0, r7
   80236:	47a0      	blx	r4
		for(i=0; i<err/10; i++)
   80238:	3601      	adds	r6, #1
   8023a:	454e      	cmp	r6, r9
   8023c:	d1f3      	bne.n	80226 <ErrorLed+0x4a>
		delay_ms(500);
   8023e:	4658      	mov	r0, fp
   80240:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   80242:	f1ba 0f00 	cmp.w	sl, #0
   80246:	d0de      	beq.n	80206 <ErrorLed+0x2a>
   80248:	2600      	movs	r6, #0
			delay_ms(200);
   8024a:	4f0b      	ldr	r7, [pc, #44]	; (80278 <ErrorLed+0x9c>)
			gpio_set_pin_high(ERROR_LED);
   8024c:	4628      	mov	r0, r5
   8024e:	47c0      	blx	r8
			delay_ms(200);
   80250:	4638      	mov	r0, r7
   80252:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   80254:	4628      	mov	r0, r5
   80256:	4b07      	ldr	r3, [pc, #28]	; (80274 <ErrorLed+0x98>)
   80258:	4798      	blx	r3
			delay_ms(200);
   8025a:	4638      	mov	r0, r7
   8025c:	47a0      	blx	r4
		for(i=0; i<err%10; i++)
   8025e:	3601      	adds	r6, #1
   80260:	4556      	cmp	r6, sl
   80262:	d1f3      	bne.n	8024c <ErrorLed+0x70>
   80264:	e7cf      	b.n	80206 <ErrorLed+0x2a>
   80266:	bf00      	nop
   80268:	20000001 	.word	0x20000001
   8026c:	0068a1b7 	.word	0x0068a1b7
   80270:	00d1436e 	.word	0x00d1436e
   80274:	00081031 	.word	0x00081031
   80278:	0014ed25 	.word	0x0014ed25
   8027c:	cccccccd 	.word	0xcccccccd
   80280:	00081017 	.word	0x00081017
   80284:	003450dc 	.word	0x003450dc

00080288 <Lcd>:


const char line2addr[]={ 0x00, 0x40, 0x14, 0x54 };

uint32_t Lcd(uint32_t sc, ...)
{
   80288:	b40f      	push	{r0, r1, r2, r3}
   8028a:	b538      	push	{r3, r4, r5, lr}
	switch(sc)
   8028c:	9904      	ldr	r1, [sp, #16]
   8028e:	2904      	cmp	r1, #4
   80290:	f000 8137 	beq.w	80502 <Lcd+0x27a>
   80294:	d91c      	bls.n	802d0 <Lcd+0x48>
   80296:	2964      	cmp	r1, #100	; 0x64
   80298:	d05a      	beq.n	80350 <Lcd+0xc8>
   8029a:	d949      	bls.n	80330 <Lcd+0xa8>
   8029c:	2966      	cmp	r1, #102	; 0x66
   8029e:	f000 80c2 	beq.w	80426 <Lcd+0x19e>
   802a2:	2967      	cmp	r1, #103	; 0x67
   802a4:	f040 813b 	bne.w	8051e <Lcd+0x296>
		
		case LCD_PUTSTRING:
#define _pStr		pa1
#define _line		pa2
#define _col		pa3
			_LcdSetCursor(_line,_col);
   802a8:	9a07      	ldr	r2, [sp, #28]
   802aa:	9906      	ldr	r1, [sp, #24]
   802ac:	2005      	movs	r0, #5
   802ae:	f7ff ffeb 	bl	80288 <Lcd>
			while(*(char*)_pStr)
   802b2:	9c05      	ldr	r4, [sp, #20]
   802b4:	7821      	ldrb	r1, [r4, #0]
   802b6:	2900      	cmp	r1, #0
   802b8:	f000 80b0 	beq.w	8041c <Lcd+0x194>
			{
				_LcdWriteData(*(char*)_pStr);
   802bc:	2503      	movs	r5, #3
   802be:	4628      	mov	r0, r5
   802c0:	f7ff ffe2 	bl	80288 <Lcd>
				_pStr++;
   802c4:	3401      	adds	r4, #1
   802c6:	9405      	str	r4, [sp, #20]
			while(*(char*)_pStr)
   802c8:	7821      	ldrb	r1, [r4, #0]
   802ca:	2900      	cmp	r1, #0
   802cc:	d1f7      	bne.n	802be <Lcd+0x36>
   802ce:	e0a5      	b.n	8041c <Lcd+0x194>
	switch(sc)
   802d0:	2902      	cmp	r1, #2
   802d2:	f000 80b2 	beq.w	8043a <Lcd+0x1b2>
   802d6:	f200 80c1 	bhi.w	8045c <Lcd+0x1d4>
   802da:	2901      	cmp	r1, #1
   802dc:	f040 811f 	bne.w	8051e <Lcd+0x296>
		break;

	///LCD PRIVATE SERVICE IMPLEMENTATION //////////////////////////////////////////
#define _inst		pa1
	case _LCD_WRITE_HALF:
		gpio_set_pin_low(LCD_RS);
   802e0:	2006      	movs	r0, #6
   802e2:	4b91      	ldr	r3, [pc, #580]	; (80528 <Lcd+0x2a0>)
   802e4:	4798      	blx	r3
		(_inst&0x80)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   802e6:	9c05      	ldr	r4, [sp, #20]
   802e8:	f014 0f80 	tst.w	r4, #128	; 0x80
   802ec:	f04f 0003 	mov.w	r0, #3
   802f0:	bf14      	ite	ne
   802f2:	4b8e      	ldrne	r3, [pc, #568]	; (8052c <Lcd+0x2a4>)
   802f4:	4b8c      	ldreq	r3, [pc, #560]	; (80528 <Lcd+0x2a0>)
   802f6:	4798      	blx	r3
		(_inst&0x40)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   802f8:	f014 0f40 	tst.w	r4, #64	; 0x40
   802fc:	f04f 0002 	mov.w	r0, #2
   80300:	bf14      	ite	ne
   80302:	4b8a      	ldrne	r3, [pc, #552]	; (8052c <Lcd+0x2a4>)
   80304:	4b88      	ldreq	r3, [pc, #544]	; (80528 <Lcd+0x2a0>)
   80306:	4798      	blx	r3
		(_inst&0x20)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   80308:	f014 0f20 	tst.w	r4, #32
   8030c:	f04f 0001 	mov.w	r0, #1
   80310:	bf14      	ite	ne
   80312:	4b86      	ldrne	r3, [pc, #536]	; (8052c <Lcd+0x2a4>)
   80314:	4b84      	ldreq	r3, [pc, #528]	; (80528 <Lcd+0x2a0>)
   80316:	4798      	blx	r3
		(_inst&0x10)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   80318:	f014 0f10 	tst.w	r4, #16
   8031c:	f04f 0000 	mov.w	r0, #0
   80320:	bf14      	ite	ne
   80322:	4b82      	ldrne	r3, [pc, #520]	; (8052c <Lcd+0x2a4>)
   80324:	4b80      	ldreq	r3, [pc, #512]	; (80528 <Lcd+0x2a0>)
   80326:	4798      	blx	r3
		Lcd(_LCD_E_STROBE);
   80328:	2004      	movs	r0, #4
   8032a:	f7ff ffad 	bl	80288 <Lcd>
		break;
   8032e:	e075      	b.n	8041c <Lcd+0x194>
	switch(sc)
   80330:	2905      	cmp	r1, #5
   80332:	f040 80f4 	bne.w	8051e <Lcd+0x296>
		break;

		case _LCD_SET_RAM_ADDRESS:
#define _nLine	pa1
#define _nCol	pa2
		_LcdWriteInst((line2addr[_nLine&0x03]+_nCol)|0x80);
   80336:	9b05      	ldr	r3, [sp, #20]
   80338:	f003 0303 	and.w	r3, r3, #3
   8033c:	4a7c      	ldr	r2, [pc, #496]	; (80530 <Lcd+0x2a8>)
   8033e:	5cd1      	ldrb	r1, [r2, r3]
   80340:	9b06      	ldr	r3, [sp, #24]
   80342:	4419      	add	r1, r3
   80344:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   80348:	2002      	movs	r0, #2
   8034a:	f7ff ff9d 	bl	80288 <Lcd>
#undef _nLine
#undef _nCol
		break;
   8034e:	e065      	b.n	8041c <Lcd+0x194>
		gpio_configure_pin(LCD_DB4,LCD_PIN_FLAGS);
   80350:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80354:	2000      	movs	r0, #0
   80356:	4c77      	ldr	r4, [pc, #476]	; (80534 <Lcd+0x2ac>)
   80358:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,LCD_PIN_FLAGS);
   8035a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8035e:	2001      	movs	r0, #1
   80360:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,LCD_PIN_FLAGS);
   80362:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80366:	2002      	movs	r0, #2
   80368:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,LCD_PIN_FLAGS);
   8036a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8036e:	2003      	movs	r0, #3
   80370:	47a0      	blx	r4
		gpio_configure_pin(LCD_E,LCD_PIN_FLAGS);
   80372:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80376:	2004      	movs	r0, #4
   80378:	47a0      	blx	r4
		gpio_configure_pin(LCD_RWB,LCD_PIN_FLAGS);
   8037a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8037e:	2005      	movs	r0, #5
   80380:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,LCD_PIN_FLAGS);
   80382:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80386:	2006      	movs	r0, #6
   80388:	47a0      	blx	r4
		gpio_configure_pin(LCD_BACKLIGHT,LCD_PIN_FLAGS);
   8038a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8038e:	2007      	movs	r0, #7
   80390:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DB4);
   80392:	2000      	movs	r0, #0
   80394:	4c64      	ldr	r4, [pc, #400]	; (80528 <Lcd+0x2a0>)
   80396:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DB5);
   80398:	2001      	movs	r0, #1
   8039a:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DB6);
   8039c:	2002      	movs	r0, #2
   8039e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_DB7);
   803a0:	2003      	movs	r0, #3
   803a2:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   803a4:	2004      	movs	r0, #4
   803a6:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   803a8:	2006      	movs	r0, #6
   803aa:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RWB);
   803ac:	2005      	movs	r0, #5
   803ae:	47a0      	blx	r4
		delay_ms(100);
   803b0:	4861      	ldr	r0, [pc, #388]	; (80538 <Lcd+0x2b0>)
   803b2:	4c62      	ldr	r4, [pc, #392]	; (8053c <Lcd+0x2b4>)
   803b4:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   803b6:	2130      	movs	r1, #48	; 0x30
   803b8:	2001      	movs	r0, #1
   803ba:	f7ff ff65 	bl	80288 <Lcd>
		delay_ms(10);
   803be:	4860      	ldr	r0, [pc, #384]	; (80540 <Lcd+0x2b8>)
   803c0:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   803c2:	2130      	movs	r1, #48	; 0x30
   803c4:	2001      	movs	r0, #1
   803c6:	f7ff ff5f 	bl	80288 <Lcd>
		delay_ms(5);
   803ca:	f248 50ee 	movw	r0, #34286	; 0x85ee
   803ce:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   803d0:	2130      	movs	r1, #48	; 0x30
   803d2:	2001      	movs	r0, #1
   803d4:	f7ff ff58 	bl	80288 <Lcd>
		delay_ms(5);
   803d8:	f248 50ee 	movw	r0, #34286	; 0x85ee
   803dc:	47a0      	blx	r4
		_LcdWriteHalf(0x20);
   803de:	2120      	movs	r1, #32
   803e0:	2001      	movs	r0, #1
   803e2:	f7ff ff51 	bl	80288 <Lcd>
		delay_ms(5);
   803e6:	f248 50ee 	movw	r0, #34286	; 0x85ee
   803ea:	47a0      	blx	r4
		_LcdWriteInst(0x28);	//SET FUNCTION : 4 bits interface/2 line display/5x7 dots
   803ec:	2128      	movs	r1, #40	; 0x28
   803ee:	2002      	movs	r0, #2
   803f0:	f7ff ff4a 	bl	80288 <Lcd>
		_LcdWriteInst(0x08);	//DISPLAY OFF
   803f4:	2108      	movs	r1, #8
   803f6:	2002      	movs	r0, #2
   803f8:	f7ff ff46 	bl	80288 <Lcd>
		_LcdWriteInst(0x01);	//DISPLAY CLEAR
   803fc:	2101      	movs	r1, #1
   803fe:	2002      	movs	r0, #2
   80400:	f7ff ff42 	bl	80288 <Lcd>
		_LcdWriteInst(0x06);	//ENTRY MODE SET : Cursor Increase/Display is not shift
   80404:	2106      	movs	r1, #6
   80406:	2002      	movs	r0, #2
   80408:	f7ff ff3e 	bl	80288 <Lcd>
		_LcdWriteInst(0x0C);	//DISPLAY ON/Cursor on
   8040c:	210c      	movs	r1, #12
   8040e:	2002      	movs	r0, #2
   80410:	f7ff ff3a 	bl	80288 <Lcd>
		LcdBackLight(true);
   80414:	2101      	movs	r1, #1
   80416:	2066      	movs	r0, #102	; 0x66
   80418:	f7ff ff36 	bl	80288 <Lcd>
	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERR_LCD_SWITCH_BAD_SC,sc);
	}
	return 0;
}
   8041c:	2000      	movs	r0, #0
   8041e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80422:	b004      	add	sp, #16
   80424:	4770      	bx	lr
		if(_onOff)
   80426:	9b05      	ldr	r3, [sp, #20]
   80428:	b11b      	cbz	r3, 80432 <Lcd+0x1aa>
			gpio_set_pin_high(LCD_BACKLIGHT);
   8042a:	2007      	movs	r0, #7
   8042c:	4b3f      	ldr	r3, [pc, #252]	; (8052c <Lcd+0x2a4>)
   8042e:	4798      	blx	r3
   80430:	e7f4      	b.n	8041c <Lcd+0x194>
			gpio_set_pin_low(LCD_BACKLIGHT);
   80432:	2007      	movs	r0, #7
   80434:	4b3c      	ldr	r3, [pc, #240]	; (80528 <Lcd+0x2a0>)
   80436:	4798      	blx	r3
   80438:	e7f0      	b.n	8041c <Lcd+0x194>
		gpio_set_pin_low(LCD_RS);
   8043a:	2006      	movs	r0, #6
   8043c:	4b3a      	ldr	r3, [pc, #232]	; (80528 <Lcd+0x2a0>)
   8043e:	4798      	blx	r3
		_LcdWriteHalf(_inst);
   80440:	9c05      	ldr	r4, [sp, #20]
   80442:	4621      	mov	r1, r4
   80444:	2001      	movs	r0, #1
   80446:	f7ff ff1f 	bl	80288 <Lcd>
		delay_ms(1);
   8044a:	f641 20ca 	movw	r0, #6858	; 0x1aca
   8044e:	4b3b      	ldr	r3, [pc, #236]	; (8053c <Lcd+0x2b4>)
   80450:	4798      	blx	r3
		_LcdWriteHalf(_inst<<4);
   80452:	0121      	lsls	r1, r4, #4
   80454:	2001      	movs	r0, #1
   80456:	f7ff ff17 	bl	80288 <Lcd>
		break;
   8045a:	e7df      	b.n	8041c <Lcd+0x194>
		gpio_set_pin_high(LCD_RS);
   8045c:	2006      	movs	r0, #6
   8045e:	4b33      	ldr	r3, [pc, #204]	; (8052c <Lcd+0x2a4>)
   80460:	4798      	blx	r3
		(_data&0x80)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   80462:	9c05      	ldr	r4, [sp, #20]
   80464:	f014 0f80 	tst.w	r4, #128	; 0x80
   80468:	f04f 0003 	mov.w	r0, #3
   8046c:	bf14      	ite	ne
   8046e:	4b2f      	ldrne	r3, [pc, #188]	; (8052c <Lcd+0x2a4>)
   80470:	4b2d      	ldreq	r3, [pc, #180]	; (80528 <Lcd+0x2a0>)
   80472:	4798      	blx	r3
		(_data&0x40)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   80474:	f014 0f40 	tst.w	r4, #64	; 0x40
   80478:	f04f 0002 	mov.w	r0, #2
   8047c:	bf14      	ite	ne
   8047e:	4b2b      	ldrne	r3, [pc, #172]	; (8052c <Lcd+0x2a4>)
   80480:	4b29      	ldreq	r3, [pc, #164]	; (80528 <Lcd+0x2a0>)
   80482:	4798      	blx	r3
		(_data&0x20)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   80484:	f014 0f20 	tst.w	r4, #32
   80488:	f04f 0001 	mov.w	r0, #1
   8048c:	bf14      	ite	ne
   8048e:	4b27      	ldrne	r3, [pc, #156]	; (8052c <Lcd+0x2a4>)
   80490:	4b25      	ldreq	r3, [pc, #148]	; (80528 <Lcd+0x2a0>)
   80492:	4798      	blx	r3
		(_data&0x10)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   80494:	f014 0f10 	tst.w	r4, #16
   80498:	f04f 0000 	mov.w	r0, #0
   8049c:	bf14      	ite	ne
   8049e:	4b23      	ldrne	r3, [pc, #140]	; (8052c <Lcd+0x2a4>)
   804a0:	4b21      	ldreq	r3, [pc, #132]	; (80528 <Lcd+0x2a0>)
   804a2:	4798      	blx	r3
		Lcd(_LCD_E_STROBE);
   804a4:	2004      	movs	r0, #4
   804a6:	f7ff feef 	bl	80288 <Lcd>
		delay_ms(1);
   804aa:	f641 20ca 	movw	r0, #6858	; 0x1aca
   804ae:	4b23      	ldr	r3, [pc, #140]	; (8053c <Lcd+0x2b4>)
   804b0:	4798      	blx	r3
		(_data&0x08)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   804b2:	f014 0f08 	tst.w	r4, #8
   804b6:	f04f 0003 	mov.w	r0, #3
   804ba:	bf14      	ite	ne
   804bc:	4b1b      	ldrne	r3, [pc, #108]	; (8052c <Lcd+0x2a4>)
   804be:	4b1a      	ldreq	r3, [pc, #104]	; (80528 <Lcd+0x2a0>)
   804c0:	4798      	blx	r3
		(_data&0x04)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   804c2:	f014 0f04 	tst.w	r4, #4
   804c6:	f04f 0002 	mov.w	r0, #2
   804ca:	bf14      	ite	ne
   804cc:	4b17      	ldrne	r3, [pc, #92]	; (8052c <Lcd+0x2a4>)
   804ce:	4b16      	ldreq	r3, [pc, #88]	; (80528 <Lcd+0x2a0>)
   804d0:	4798      	blx	r3
		(_data&0x02)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   804d2:	f014 0f02 	tst.w	r4, #2
   804d6:	f04f 0001 	mov.w	r0, #1
   804da:	bf14      	ite	ne
   804dc:	4b13      	ldrne	r3, [pc, #76]	; (8052c <Lcd+0x2a4>)
   804de:	4b12      	ldreq	r3, [pc, #72]	; (80528 <Lcd+0x2a0>)
   804e0:	4798      	blx	r3
		(_data&0x01)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   804e2:	f014 0f01 	tst.w	r4, #1
   804e6:	f04f 0000 	mov.w	r0, #0
   804ea:	bf14      	ite	ne
   804ec:	4b0f      	ldrne	r3, [pc, #60]	; (8052c <Lcd+0x2a4>)
   804ee:	4b0e      	ldreq	r3, [pc, #56]	; (80528 <Lcd+0x2a0>)
   804f0:	4798      	blx	r3
		Lcd(_LCD_E_STROBE);
   804f2:	2004      	movs	r0, #4
   804f4:	f7ff fec8 	bl	80288 <Lcd>
		delay_ms(1);
   804f8:	f641 20ca 	movw	r0, #6858	; 0x1aca
   804fc:	4b0f      	ldr	r3, [pc, #60]	; (8053c <Lcd+0x2b4>)
   804fe:	4798      	blx	r3
		break;
   80500:	e78c      	b.n	8041c <Lcd+0x194>
		gpio_set_pin_high(LCD_E);
   80502:	2004      	movs	r0, #4
   80504:	4b09      	ldr	r3, [pc, #36]	; (8052c <Lcd+0x2a4>)
   80506:	4798      	blx	r3
		delay_ms(1);
   80508:	f641 20ca 	movw	r0, #6858	; 0x1aca
   8050c:	4c0b      	ldr	r4, [pc, #44]	; (8053c <Lcd+0x2b4>)
   8050e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   80510:	2004      	movs	r0, #4
   80512:	4b05      	ldr	r3, [pc, #20]	; (80528 <Lcd+0x2a0>)
   80514:	4798      	blx	r3
		delay_ms(1);
   80516:	f641 20ca 	movw	r0, #6858	; 0x1aca
   8051a:	47a0      	blx	r4
		break;
   8051c:	e77e      	b.n	8041c <Lcd+0x194>
		Error(ERR_LCD_SWITCH_BAD_SC,sc);
   8051e:	4b09      	ldr	r3, [pc, #36]	; (80544 <Lcd+0x2bc>)
   80520:	681b      	ldr	r3, [r3, #0]
   80522:	2014      	movs	r0, #20
   80524:	4798      	blx	r3
   80526:	e779      	b.n	8041c <Lcd+0x194>
   80528:	00081031 	.word	0x00081031
   8052c:	00081017 	.word	0x00081017
   80530:	00085f88 	.word	0x00085f88
   80534:	0008106d 	.word	0x0008106d
   80538:	000a7693 	.word	0x000a7693
   8053c:	20000001 	.word	0x20000001
   80540:	00010bdc 	.word	0x00010bdc
   80544:	20000524 	.word	0x20000524

00080548 <RTC_Handler>:
	return 0;
}


void RTC_Handler(void )
{
   80548:	4770      	bx	lr
	...

0008054c <__RTCdayByDate>:
uint8_t __RTCdayByDate(uint32_t date, uint32_t month, uint32_t centYear)
{
	uint8_t  D; //Day of the week
	#define y   centYear
	//Mike Keith algorithme ----------------------------------------------------------------//
	if(month>=3)
   8054c:	2902      	cmp	r1, #2
   8054e:	d824      	bhi.n	8059a <__RTCdayByDate+0x4e>
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
	}
	else
	{
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + (y-1)/4 - (y-1)/100 + (y-1)/400 ) % 7 + 1;
   80550:	1e53      	subs	r3, r2, #1
   80552:	3204      	adds	r2, #4
   80554:	4410      	add	r0, r2
   80556:	eb00 0093 	add.w	r0, r0, r3, lsr #2
   8055a:	4a22      	ldr	r2, [pc, #136]	; (805e4 <__RTCdayByDate+0x98>)
   8055c:	fba2 2303 	umull	r2, r3, r2, r3
   80560:	eb00 10d3 	add.w	r0, r0, r3, lsr #7
   80564:	eba0 1053 	sub.w	r0, r0, r3, lsr #5
   80568:	b289      	uxth	r1, r1
   8056a:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   8056e:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   80572:	4b1d      	ldr	r3, [pc, #116]	; (805e8 <__RTCdayByDate+0x9c>)
   80574:	fb83 2301 	smull	r2, r3, r3, r1
   80578:	17c9      	asrs	r1, r1, #31
   8057a:	ebc1 0163 	rsb	r1, r1, r3, asr #1
   8057e:	4408      	add	r0, r1
   80580:	4b1a      	ldr	r3, [pc, #104]	; (805ec <__RTCdayByDate+0xa0>)
   80582:	fba3 2300 	umull	r2, r3, r3, r0
   80586:	1ac2      	subs	r2, r0, r3
   80588:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   8058c:	089b      	lsrs	r3, r3, #2
   8058e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   80592:	1ac0      	subs	r0, r0, r3
   80594:	3001      	adds	r0, #1
   80596:	b2c0      	uxtb	r0, r0
	}
	#undef y
	return D; //Normaly 1 to 7 !!!!
}
   80598:	4770      	bx	lr
		D = ( ((uint16_t)month*23)/9 + date + 4 + y + y/4 - y/100 + y/400 - 2 ) % 7 + 1;
   8059a:	1c93      	adds	r3, r2, #2
   8059c:	4418      	add	r0, r3
   8059e:	eb00 0092 	add.w	r0, r0, r2, lsr #2
   805a2:	4b10      	ldr	r3, [pc, #64]	; (805e4 <__RTCdayByDate+0x98>)
   805a4:	fba3 3202 	umull	r3, r2, r3, r2
   805a8:	eb00 10d2 	add.w	r0, r0, r2, lsr #7
   805ac:	eba0 1252 	sub.w	r2, r0, r2, lsr #5
   805b0:	b289      	uxth	r1, r1
   805b2:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   805b6:	ebc1 01c3 	rsb	r1, r1, r3, lsl #3
   805ba:	480b      	ldr	r0, [pc, #44]	; (805e8 <__RTCdayByDate+0x9c>)
   805bc:	fb80 3001 	smull	r3, r0, r0, r1
   805c0:	17c9      	asrs	r1, r1, #31
   805c2:	ebc1 0160 	rsb	r1, r1, r0, asr #1
   805c6:	440a      	add	r2, r1
   805c8:	4808      	ldr	r0, [pc, #32]	; (805ec <__RTCdayByDate+0xa0>)
   805ca:	fba0 3002 	umull	r3, r0, r0, r2
   805ce:	1a13      	subs	r3, r2, r0
   805d0:	eb00 0053 	add.w	r0, r0, r3, lsr #1
   805d4:	0880      	lsrs	r0, r0, #2
   805d6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
   805da:	1a10      	subs	r0, r2, r0
   805dc:	3001      	adds	r0, #1
   805de:	b2c0      	uxtb	r0, r0
   805e0:	4770      	bx	lr
   805e2:	bf00      	nop
   805e4:	51eb851f 	.word	0x51eb851f
   805e8:	38e38e39 	.word	0x38e38e39
   805ec:	24924925 	.word	0x24924925

000805f0 <Shell>:
{
   805f0:	b40f      	push	{r0, r1, r2, r3}
   805f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   805f6:	b087      	sub	sp, #28
	switch(sc)
   805f8:	990e      	ldr	r1, [sp, #56]	; 0x38
   805fa:	2902      	cmp	r1, #2
   805fc:	f000 811d 	beq.w	8083a <Shell+0x24a>
   80600:	d93f      	bls.n	80682 <Shell+0x92>
   80602:	2904      	cmp	r1, #4
   80604:	f000 8136 	beq.w	80874 <Shell+0x284>
   80608:	2964      	cmp	r1, #100	; 0x64
   8060a:	f040 81ae 	bne.w	8096a <Shell+0x37a>
		gpio_configure_pin(HEART_LED, POWER_LED_FLAGS);
   8060e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80612:	2034      	movs	r0, #52	; 0x34
   80614:	4c9e      	ldr	r4, [pc, #632]	; (80890 <Shell+0x2a0>)
   80616:	47a0      	blx	r4
		gpio_configure_pin(POWER_LED, POWER_LED_FLAGS);
   80618:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8061c:	2033      	movs	r0, #51	; 0x33
   8061e:	47a0      	blx	r4
		gpio_set_pin_low(POWER_LED);
   80620:	2033      	movs	r0, #51	; 0x33
   80622:	4b9c      	ldr	r3, [pc, #624]	; (80894 <Shell+0x2a4>)
   80624:	4798      	blx	r3
		state = IDLE;
   80626:	2400      	movs	r4, #0
   80628:	4b9b      	ldr	r3, [pc, #620]	; (80898 <Shell+0x2a8>)
   8062a:	701c      	strb	r4, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8062c:	2002      	movs	r0, #2
   8062e:	4b9b      	ldr	r3, [pc, #620]	; (8089c <Shell+0x2ac>)
   80630:	4798      	blx	r3
		rtc_set_hour_mode(RTC, 0);
   80632:	4d9b      	ldr	r5, [pc, #620]	; (808a0 <Shell+0x2b0>)
   80634:	4621      	mov	r1, r4
   80636:	4628      	mov	r0, r5
   80638:	4b9a      	ldr	r3, [pc, #616]	; (808a4 <Shell+0x2b4>)
   8063a:	4798      	blx	r3
		rtc_set_time(RTC, 1, 2, 3);
   8063c:	2303      	movs	r3, #3
   8063e:	2202      	movs	r2, #2
   80640:	2101      	movs	r1, #1
   80642:	4628      	mov	r0, r5
   80644:	4e98      	ldr	r6, [pc, #608]	; (808a8 <Shell+0x2b8>)
   80646:	47b0      	blx	r6
		rtc_enable_interrupt(RTC, RTC_IER_SECEN);
   80648:	2104      	movs	r1, #4
   8064a:	4628      	mov	r0, r5
   8064c:	4b97      	ldr	r3, [pc, #604]	; (808ac <Shell+0x2bc>)
   8064e:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   80650:	2064      	movs	r0, #100	; 0x64
   80652:	4b97      	ldr	r3, [pc, #604]	; (808b0 <Shell+0x2c0>)
   80654:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,0,0);
   80656:	4e97      	ldr	r6, [pc, #604]	; (808b4 <Shell+0x2c4>)
   80658:	9400      	str	r4, [sp, #0]
   8065a:	4623      	mov	r3, r4
   8065c:	2202      	movs	r2, #2
   8065e:	4631      	mov	r1, r6
   80660:	2066      	movs	r0, #102	; 0x66
   80662:	4d95      	ldr	r5, [pc, #596]	; (808b8 <Shell+0x2c8>)
   80664:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,500);		
   80666:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
   8066a:	9300      	str	r3, [sp, #0]
   8066c:	4623      	mov	r3, r4
   8066e:	2204      	movs	r2, #4
   80670:	4631      	mov	r1, r6
   80672:	2066      	movs	r0, #102	; 0x66
   80674:	47a8      	blx	r5
}
   80676:	2000      	movs	r0, #0
   80678:	b007      	add	sp, #28
   8067a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8067e:	b004      	add	sp, #16
   80680:	4770      	bx	lr
	switch(sc)
   80682:	2901      	cmp	r1, #1
   80684:	f040 8171 	bne.w	8096a <Shell+0x37a>
		switch(state)
   80688:	4b83      	ldr	r3, [pc, #524]	; (80898 <Shell+0x2a8>)
   8068a:	781b      	ldrb	r3, [r3, #0]
   8068c:	2b06      	cmp	r3, #6
   8068e:	f200 80ce 	bhi.w	8082e <Shell+0x23e>
   80692:	a201      	add	r2, pc, #4	; (adr r2, 80698 <Shell+0xa8>)
   80694:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80698:	000806b5 	.word	0x000806b5
   8069c:	0008074d 	.word	0x0008074d
   806a0:	000807f1 	.word	0x000807f1
   806a4:	00080677 	.word	0x00080677
   806a8:	00080677 	.word	0x00080677
   806ac:	00080677 	.word	0x00080677
   806b0:	00080677 	.word	0x00080677
			switch(_kbhitChar)
   806b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   806b6:	b2ec      	uxtb	r4, r5
   806b8:	f1a4 0308 	sub.w	r3, r4, #8
   806bc:	2b18      	cmp	r3, #24
   806be:	d835      	bhi.n	8072c <Shell+0x13c>
   806c0:	a201      	add	r2, pc, #4	; (adr r2, 806c8 <Shell+0xd8>)
   806c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   806c6:	bf00      	nop
   806c8:	00080677 	.word	0x00080677
   806cc:	00080677 	.word	0x00080677
   806d0:	00080677 	.word	0x00080677
   806d4:	0008072d 	.word	0x0008072d
   806d8:	0008072d 	.word	0x0008072d
   806dc:	00080677 	.word	0x00080677
   806e0:	0008072d 	.word	0x0008072d
   806e4:	0008072d 	.word	0x0008072d
   806e8:	0008072d 	.word	0x0008072d
   806ec:	0008072d 	.word	0x0008072d
   806f0:	0008072d 	.word	0x0008072d
   806f4:	0008072d 	.word	0x0008072d
   806f8:	0008072d 	.word	0x0008072d
   806fc:	0008072d 	.word	0x0008072d
   80700:	0008072d 	.word	0x0008072d
   80704:	0008072d 	.word	0x0008072d
   80708:	0008072d 	.word	0x0008072d
   8070c:	0008072d 	.word	0x0008072d
   80710:	0008072d 	.word	0x0008072d
   80714:	00080677 	.word	0x00080677
   80718:	0008072d 	.word	0x0008072d
   8071c:	0008072d 	.word	0x0008072d
   80720:	0008072d 	.word	0x0008072d
   80724:	0008072d 	.word	0x0008072d
   80728:	00080677 	.word	0x00080677
				Putstr("\r\n>");
   8072c:	4963      	ldr	r1, [pc, #396]	; (808bc <Shell+0x2cc>)
   8072e:	2067      	movs	r0, #103	; 0x67
   80730:	4f5f      	ldr	r7, [pc, #380]	; (808b0 <Shell+0x2c0>)
   80732:	47b8      	blx	r7
				*pEdit++ = _kbhitChar;
   80734:	4e58      	ldr	r6, [pc, #352]	; (80898 <Shell+0x2a8>)
   80736:	4b62      	ldr	r3, [pc, #392]	; (808c0 <Shell+0x2d0>)
   80738:	60b3      	str	r3, [r6, #8]
			switch(_kbhitChar)
   8073a:	f803 5c01 	strb.w	r5, [r3, #-1]
				nbChar = 1;
   8073e:	2501      	movs	r5, #1
   80740:	60f5      	str	r5, [r6, #12]
				Putch(_kbhitChar);
   80742:	4621      	mov	r1, r4
   80744:	2066      	movs	r0, #102	; 0x66
   80746:	47b8      	blx	r7
				state = EDITION;
   80748:	7035      	strb	r5, [r6, #0]
				break;
   8074a:	e794      	b.n	80676 <Shell+0x86>
			switch(_kbhitChar)
   8074c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8074e:	b2d1      	uxtb	r1, r2
   80750:	f1a1 0308 	sub.w	r3, r1, #8
   80754:	2b13      	cmp	r3, #19
   80756:	d83a      	bhi.n	807ce <Shell+0x1de>
   80758:	a001      	add	r0, pc, #4	; (adr r0, 80760 <Shell+0x170>)
   8075a:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
   8075e:	bf00      	nop
   80760:	00080677 	.word	0x00080677
   80764:	00080677 	.word	0x00080677
   80768:	00080677 	.word	0x00080677
   8076c:	000807cf 	.word	0x000807cf
   80770:	000807cf 	.word	0x000807cf
   80774:	000807b1 	.word	0x000807b1
   80778:	000807cf 	.word	0x000807cf
   8077c:	000807cf 	.word	0x000807cf
   80780:	000807cf 	.word	0x000807cf
   80784:	000807cf 	.word	0x000807cf
   80788:	000807cf 	.word	0x000807cf
   8078c:	000807cf 	.word	0x000807cf
   80790:	000807cf 	.word	0x000807cf
   80794:	000807cf 	.word	0x000807cf
   80798:	000807cf 	.word	0x000807cf
   8079c:	000807cf 	.word	0x000807cf
   807a0:	000807cf 	.word	0x000807cf
   807a4:	000807cf 	.word	0x000807cf
   807a8:	000807cf 	.word	0x000807cf
   807ac:	00080677 	.word	0x00080677
				*pEdit++ = '\0';
   807b0:	4a39      	ldr	r2, [pc, #228]	; (80898 <Shell+0x2a8>)
   807b2:	6891      	ldr	r1, [r2, #8]
   807b4:	1c4b      	adds	r3, r1, #1
   807b6:	6093      	str	r3, [r2, #8]
   807b8:	2300      	movs	r3, #0
   807ba:	700b      	strb	r3, [r1, #0]
				state = EXECUTION;
   807bc:	2102      	movs	r1, #2
   807be:	7011      	strb	r1, [r2, #0]
				PushTask(Shell, _SHELL_KBHIT, 0, 0);
   807c0:	9300      	str	r3, [sp, #0]
   807c2:	2201      	movs	r2, #1
   807c4:	493b      	ldr	r1, [pc, #236]	; (808b4 <Shell+0x2c4>)
   807c6:	2066      	movs	r0, #102	; 0x66
   807c8:	4c3b      	ldr	r4, [pc, #236]	; (808b8 <Shell+0x2c8>)
   807ca:	47a0      	blx	r4
				break;
   807cc:	e753      	b.n	80676 <Shell+0x86>
				if(nbChar < SHELL_EDIT_BUFFER_LEN - 2)
   807ce:	4b32      	ldr	r3, [pc, #200]	; (80898 <Shell+0x2a8>)
   807d0:	68db      	ldr	r3, [r3, #12]
   807d2:	2bfd      	cmp	r3, #253	; 0xfd
   807d4:	f63f af4f 	bhi.w	80676 <Shell+0x86>
					*pEdit++ = _kbhitChar;
   807d8:	4b2f      	ldr	r3, [pc, #188]	; (80898 <Shell+0x2a8>)
   807da:	6898      	ldr	r0, [r3, #8]
   807dc:	1c44      	adds	r4, r0, #1
   807de:	609c      	str	r4, [r3, #8]
			switch(_kbhitChar)
   807e0:	7002      	strb	r2, [r0, #0]
					nbChar++;
   807e2:	68da      	ldr	r2, [r3, #12]
   807e4:	3201      	adds	r2, #1
   807e6:	60da      	str	r2, [r3, #12]
					Putch(_kbhitChar);
   807e8:	2066      	movs	r0, #102	; 0x66
   807ea:	4b31      	ldr	r3, [pc, #196]	; (808b0 <Shell+0x2c0>)
   807ec:	4798      	blx	r3
   807ee:	e742      	b.n	80676 <Shell+0x86>
			Putstr("\r\n>>>");
   807f0:	4934      	ldr	r1, [pc, #208]	; (808c4 <Shell+0x2d4>)
   807f2:	2067      	movs	r0, #103	; 0x67
   807f4:	4c2e      	ldr	r4, [pc, #184]	; (808b0 <Shell+0x2c0>)
   807f6:	47a0      	blx	r4
			Putstr(shellBuf);
   807f8:	4d33      	ldr	r5, [pc, #204]	; (808c8 <Shell+0x2d8>)
   807fa:	4629      	mov	r1, r5
   807fc:	2067      	movs	r0, #103	; 0x67
   807fe:	47a0      	blx	r4
			Putstr("\r\n");
   80800:	4932      	ldr	r1, [pc, #200]	; (808cc <Shell+0x2dc>)
   80802:	2067      	movs	r0, #103	; 0x67
   80804:	47a0      	blx	r4
			pToken = (uint32_t)strtok(shellBuf, " \r\n");
   80806:	4932      	ldr	r1, [pc, #200]	; (808d0 <Shell+0x2e0>)
   80808:	4628      	mov	r0, r5
   8080a:	4b32      	ldr	r3, [pc, #200]	; (808d4 <Shell+0x2e4>)
   8080c:	4798      	blx	r3
   8080e:	4604      	mov	r4, r0
   80810:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   80812:	b918      	cbnz	r0, 8081c <Shell+0x22c>
			state = IDLE;
   80814:	2200      	movs	r2, #0
   80816:	4b20      	ldr	r3, [pc, #128]	; (80898 <Shell+0x2a8>)
   80818:	701a      	strb	r2, [r3, #0]
			break;
   8081a:	e72c      	b.n	80676 <Shell+0x86>
				crc = CRC16MODBUSFRAME(pToken, strlen(pToken));
   8081c:	4b2e      	ldr	r3, [pc, #184]	; (808d8 <Shell+0x2e8>)
   8081e:	4798      	blx	r3
   80820:	4601      	mov	r1, r0
   80822:	4620      	mov	r0, r4
   80824:	4b2d      	ldr	r3, [pc, #180]	; (808dc <Shell+0x2ec>)
   80826:	4798      	blx	r3
   80828:	4b1b      	ldr	r3, [pc, #108]	; (80898 <Shell+0x2a8>)
   8082a:	8218      	strh	r0, [r3, #16]
   8082c:	e7f2      	b.n	80814 <Shell+0x224>
			Putch(_kbhitChar);
   8082e:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   80832:	2066      	movs	r0, #102	; 0x66
   80834:	4b1e      	ldr	r3, [pc, #120]	; (808b0 <Shell+0x2c0>)
   80836:	4798      	blx	r3
			break;
   80838:	e71d      	b.n	80676 <Shell+0x86>
		k++; if(flashSequ[k]==0) k=0;
   8083a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8083c:	3401      	adds	r4, #1
   8083e:	940f      	str	r4, [sp, #60]	; 0x3c
   80840:	4b27      	ldr	r3, [pc, #156]	; (808e0 <Shell+0x2f0>)
   80842:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80846:	b133      	cbz	r3, 80856 <Shell+0x266>
		if(k%2==0) gpio_set_pin_low(HEART_LED);
   80848:	f014 0f01 	tst.w	r4, #1
   8084c:	d004      	beq.n	80858 <Shell+0x268>
		else gpio_set_pin_high(HEART_LED);
   8084e:	2034      	movs	r0, #52	; 0x34
   80850:	4b24      	ldr	r3, [pc, #144]	; (808e4 <Shell+0x2f4>)
   80852:	4798      	blx	r3
   80854:	e003      	b.n	8085e <Shell+0x26e>
		if(k%2==0) gpio_set_pin_low(HEART_LED);
   80856:	2400      	movs	r4, #0
   80858:	2034      	movs	r0, #52	; 0x34
   8085a:	4b0e      	ldr	r3, [pc, #56]	; (80894 <Shell+0x2a4>)
   8085c:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEARTBEAT,k,flashSequ[k]);
   8085e:	4b20      	ldr	r3, [pc, #128]	; (808e0 <Shell+0x2f0>)
   80860:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80864:	9300      	str	r3, [sp, #0]
   80866:	4623      	mov	r3, r4
   80868:	2202      	movs	r2, #2
   8086a:	4912      	ldr	r1, [pc, #72]	; (808b4 <Shell+0x2c4>)
   8086c:	2066      	movs	r0, #102	; 0x66
   8086e:	4c12      	ldr	r4, [pc, #72]	; (808b8 <Shell+0x2c8>)
   80870:	47a0      	blx	r4
		break;
   80872:	e700      	b.n	80676 <Shell+0x86>
		if(state==IDLE)
   80874:	4b08      	ldr	r3, [pc, #32]	; (80898 <Shell+0x2a8>)
   80876:	781b      	ldrb	r3, [r3, #0]
   80878:	b3b3      	cbz	r3, 808e8 <Shell+0x2f8>
		PushTask(Shell,_SHELL_PROMPT,0,300);
   8087a:	f44f 7396 	mov.w	r3, #300	; 0x12c
   8087e:	9300      	str	r3, [sp, #0]
   80880:	2300      	movs	r3, #0
   80882:	2204      	movs	r2, #4
   80884:	490b      	ldr	r1, [pc, #44]	; (808b4 <Shell+0x2c4>)
   80886:	2066      	movs	r0, #102	; 0x66
   80888:	4c0b      	ldr	r4, [pc, #44]	; (808b8 <Shell+0x2c8>)
   8088a:	47a0      	blx	r4
		break;
   8088c:	e6f3      	b.n	80676 <Shell+0x86>
   8088e:	bf00      	nop
   80890:	0008106d 	.word	0x0008106d
   80894:	00081031 	.word	0x00081031
   80898:	20000ff0 	.word	0x20000ff0
   8089c:	00081229 	.word	0x00081229
   808a0:	400e1260 	.word	0x400e1260
   808a4:	0008125d 	.word	0x0008125d
   808a8:	000812d1 	.word	0x000812d1
   808ac:	00081273 	.word	0x00081273
   808b0:	000809a9 	.word	0x000809a9
   808b4:	000805f1 	.word	0x000805f1
   808b8:	00080bc1 	.word	0x00080bc1
   808bc:	00085f8c 	.word	0x00085f8c
   808c0:	20001005 	.word	0x20001005
   808c4:	00085f90 	.word	0x00085f90
   808c8:	20001004 	.word	0x20001004
   808cc:	000860f8 	.word	0x000860f8
   808d0:	00085f98 	.word	0x00085f98
   808d4:	00081845 	.word	0x00081845
   808d8:	000817e9 	.word	0x000817e9
   808dc:	000801a9 	.word	0x000801a9
   808e0:	00085fc0 	.word	0x00085fc0
   808e4:	00081017 	.word	0x00081017
			rtc_get_date(RTC, &yr, &mm, &dd, &wk);
   808e8:	4e22      	ldr	r6, [pc, #136]	; (80974 <Shell+0x384>)
   808ea:	af02      	add	r7, sp, #8
   808ec:	9700      	str	r7, [sp, #0]
   808ee:	ab03      	add	r3, sp, #12
   808f0:	aa04      	add	r2, sp, #16
   808f2:	a905      	add	r1, sp, #20
   808f4:	4630      	mov	r0, r6
   808f6:	4c20      	ldr	r4, [pc, #128]	; (80978 <Shell+0x388>)
   808f8:	47a0      	blx	r4
			day = __RTCdayByDate(dd, mm, yr/100);
   808fa:	f8dd 800c 	ldr.w	r8, [sp, #12]
   808fe:	9d04      	ldr	r5, [sp, #16]
   80900:	f8dd 9014 	ldr.w	r9, [sp, #20]
   80904:	4a1d      	ldr	r2, [pc, #116]	; (8097c <Shell+0x38c>)
   80906:	fba2 3209 	umull	r3, r2, r2, r9
   8090a:	0952      	lsrs	r2, r2, #5
   8090c:	4629      	mov	r1, r5
   8090e:	4640      	mov	r0, r8
   80910:	4b1b      	ldr	r3, [pc, #108]	; (80980 <Shell+0x390>)
   80912:	4798      	blx	r3
			sprintf(buf,"%.3s %02d %.3s %02d", daysOfWeek[day - 3], dd, months[mm-1], yr);
   80914:	3803      	subs	r0, #3
   80916:	4b1b      	ldr	r3, [pc, #108]	; (80984 <Shell+0x394>)
   80918:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
   8091c:	4c1a      	ldr	r4, [pc, #104]	; (80988 <Shell+0x398>)
   8091e:	f8cd 9004 	str.w	r9, [sp, #4]
   80922:	3d01      	subs	r5, #1
   80924:	4b19      	ldr	r3, [pc, #100]	; (8098c <Shell+0x39c>)
   80926:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
   8092a:	9300      	str	r3, [sp, #0]
   8092c:	4643      	mov	r3, r8
   8092e:	4918      	ldr	r1, [pc, #96]	; (80990 <Shell+0x3a0>)
   80930:	4620      	mov	r0, r4
   80932:	f8df 8070 	ldr.w	r8, [pc, #112]	; 809a4 <Shell+0x3b4>
   80936:	47c0      	blx	r8
			LcdPutstr(buf, 0, 2);
   80938:	2302      	movs	r3, #2
   8093a:	2200      	movs	r2, #0
   8093c:	4621      	mov	r1, r4
   8093e:	2067      	movs	r0, #103	; 0x67
   80940:	4d14      	ldr	r5, [pc, #80]	; (80994 <Shell+0x3a4>)
   80942:	47a8      	blx	r5
			rtc_get_time(RTC, &hh, &mn, &sec);
   80944:	463b      	mov	r3, r7
   80946:	aa03      	add	r2, sp, #12
   80948:	a904      	add	r1, sp, #16
   8094a:	4630      	mov	r0, r6
   8094c:	4e12      	ldr	r6, [pc, #72]	; (80998 <Shell+0x3a8>)
   8094e:	47b0      	blx	r6
			sprintf(buf, "%02d:%02d:%02d ", hh, mn, sec);
   80950:	9b02      	ldr	r3, [sp, #8]
   80952:	9300      	str	r3, [sp, #0]
   80954:	9b03      	ldr	r3, [sp, #12]
   80956:	9a04      	ldr	r2, [sp, #16]
   80958:	4910      	ldr	r1, [pc, #64]	; (8099c <Shell+0x3ac>)
   8095a:	4620      	mov	r0, r4
   8095c:	47c0      	blx	r8
			LcdPutstr(buf, 1, 5);
   8095e:	2305      	movs	r3, #5
   80960:	2201      	movs	r2, #1
   80962:	4621      	mov	r1, r4
   80964:	2067      	movs	r0, #103	; 0x67
   80966:	47a8      	blx	r5
   80968:	e787      	b.n	8087a <Shell+0x28a>
		Error(ERR_SHELL_SWITCH_BAD_SC,sc);
   8096a:	4b0d      	ldr	r3, [pc, #52]	; (809a0 <Shell+0x3b0>)
   8096c:	681b      	ldr	r3, [r3, #0]
   8096e:	200e      	movs	r0, #14
   80970:	4798      	blx	r3
   80972:	e680      	b.n	80676 <Shell+0x86>
   80974:	400e1260 	.word	0x400e1260
   80978:	00081365 	.word	0x00081365
   8097c:	51eb851f 	.word	0x51eb851f
   80980:	0008054d 	.word	0x0008054d
   80984:	20000528 	.word	0x20000528
   80988:	20001364 	.word	0x20001364
   8098c:	20000544 	.word	0x20000544
   80990:	00085f9c 	.word	0x00085f9c
   80994:	00080289 	.word	0x00080289
   80998:	00081277 	.word	0x00081277
   8099c:	00085fb0 	.word	0x00085fb0
   809a0:	20000524 	.word	0x20000524
   809a4:	0008179d 	.word	0x0008179d

000809a8 <Shellcom>:
	char	*pTxRead;
}shellcom;


uint32_t Shellcom(uint32_t sc, ...)
{
   809a8:	b40f      	push	{r0, r1, r2, r3}
   809aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	switch(sc)
   809ac:	9906      	ldr	r1, [sp, #24]
   809ae:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   809b2:	2b04      	cmp	r3, #4
   809b4:	f200 80a8 	bhi.w	80b08 <Shellcom+0x160>
   809b8:	e8df f013 	tbh	[pc, r3, lsl #1]
   809bc:	00a60005 	.word	0x00a60005
   809c0:	004c002c 	.word	0x004c002c
   809c4:	007a      	.short	0x007a
	{
	case SHELLCOM_NEW:
		shellcom.pTxRead=shellcom.pTxWrite=shellcomTxBuf;
   809c6:	4b53      	ldr	r3, [pc, #332]	; (80b14 <Shellcom+0x16c>)
   809c8:	4a53      	ldr	r2, [pc, #332]	; (80b18 <Shellcom+0x170>)
   809ca:	601a      	str	r2, [r3, #0]
   809cc:	605a      	str	r2, [r3, #4]
		pmc_enable_periph_clk(ID_UART);
   809ce:	2008      	movs	r0, #8
   809d0:	4b52      	ldr	r3, [pc, #328]	; (80b1c <Shellcom+0x174>)
   809d2:	4798      	blx	r3
		pio_configure_pin(UART_TX_PIN,UART_TX_PIN_FLAGS);
   809d4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809d8:	200c      	movs	r0, #12
   809da:	4c51      	ldr	r4, [pc, #324]	; (80b20 <Shellcom+0x178>)
   809dc:	47a0      	blx	r4
		pio_configure_pin(UART_RX_PIN,UART_RX_PIN_FLAGS);
   809de:	4951      	ldr	r1, [pc, #324]	; (80b24 <Shellcom+0x17c>)
   809e0:	200b      	movs	r0, #11
   809e2:	47a0      	blx	r4
		if(uart_init(UART,&uart_opt)) Error(ERR_SHELLCOM_UART_INIT_FAILED, sc);
   809e4:	4950      	ldr	r1, [pc, #320]	; (80b28 <Shellcom+0x180>)
   809e6:	4851      	ldr	r0, [pc, #324]	; (80b2c <Shellcom+0x184>)
   809e8:	4b51      	ldr	r3, [pc, #324]	; (80b30 <Shellcom+0x188>)
   809ea:	4798      	blx	r3
   809ec:	b960      	cbnz	r0, 80a08 <Shellcom+0x60>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   809ee:	f44f 7280 	mov.w	r2, #256	; 0x100
   809f2:	4b50      	ldr	r3, [pc, #320]	; (80b34 <Shellcom+0x18c>)
   809f4:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(ID_UART);
		uart_enable_interrupt(UART,US_IER_RXRDY);
   809f6:	2101      	movs	r1, #1
   809f8:	484c      	ldr	r0, [pc, #304]	; (80b2c <Shellcom+0x184>)
   809fa:	4b4f      	ldr	r3, [pc, #316]	; (80b38 <Shellcom+0x190>)
   809fc:	4798      	blx	r3
	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
	}

	return 0;
   809fe:	2000      	movs	r0, #0
}
   80a00:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   80a04:	b004      	add	sp, #16
   80a06:	4770      	bx	lr
		if(uart_init(UART,&uart_opt)) Error(ERR_SHELLCOM_UART_INIT_FAILED, sc);
   80a08:	4b4c      	ldr	r3, [pc, #304]	; (80b3c <Shellcom+0x194>)
   80a0a:	681b      	ldr	r3, [r3, #0]
   80a0c:	2164      	movs	r1, #100	; 0x64
   80a0e:	201f      	movs	r0, #31
   80a10:	4798      	blx	r3
   80a12:	e7ec      	b.n	809ee <Shellcom+0x46>
		*shellcom.pTxWrite++=_charData;
   80a14:	4b3f      	ldr	r3, [pc, #252]	; (80b14 <Shellcom+0x16c>)
   80a16:	681a      	ldr	r2, [r3, #0]
   80a18:	1c51      	adds	r1, r2, #1
   80a1a:	6019      	str	r1, [r3, #0]
   80a1c:	9907      	ldr	r1, [sp, #28]
   80a1e:	7011      	strb	r1, [r2, #0]
		if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   80a20:	681a      	ldr	r2, [r3, #0]
   80a22:	4b47      	ldr	r3, [pc, #284]	; (80b40 <Shellcom+0x198>)
   80a24:	429a      	cmp	r2, r3
   80a26:	d303      	bcc.n	80a30 <Shellcom+0x88>
   80a28:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80a2c:	4b39      	ldr	r3, [pc, #228]	; (80b14 <Shellcom+0x16c>)
   80a2e:	601a      	str	r2, [r3, #0]
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80a30:	4b38      	ldr	r3, [pc, #224]	; (80b14 <Shellcom+0x16c>)
   80a32:	681a      	ldr	r2, [r3, #0]
   80a34:	685b      	ldr	r3, [r3, #4]
   80a36:	429a      	cmp	r2, r3
   80a38:	d006      	beq.n	80a48 <Shellcom+0xa0>
		uart_enable_interrupt(UART,US_IER_TXEMPTY);
   80a3a:	f44f 7100 	mov.w	r1, #512	; 0x200
   80a3e:	483b      	ldr	r0, [pc, #236]	; (80b2c <Shellcom+0x184>)
   80a40:	4b3d      	ldr	r3, [pc, #244]	; (80b38 <Shellcom+0x190>)
   80a42:	4798      	blx	r3
		return 1;
   80a44:	2001      	movs	r0, #1
   80a46:	e7db      	b.n	80a00 <Shellcom+0x58>
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80a48:	4b3c      	ldr	r3, [pc, #240]	; (80b3c <Shellcom+0x194>)
   80a4a:	681b      	ldr	r3, [r3, #0]
   80a4c:	2100      	movs	r1, #0
   80a4e:	2017      	movs	r0, #23
   80a50:	4798      	blx	r3
   80a52:	e7f2      	b.n	80a3a <Shellcom+0x92>
		_nChar=0;
   80a54:	2300      	movs	r3, #0
   80a56:	9306      	str	r3, [sp, #24]
		while(*(char*)_pStr)
   80a58:	9d07      	ldr	r5, [sp, #28]
   80a5a:	462a      	mov	r2, r5
   80a5c:	782b      	ldrb	r3, [r5, #0]
   80a5e:	b1fb      	cbz	r3, 80aa0 <Shellcom+0xf8>
   80a60:	3501      	adds	r5, #1
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   80a62:	4c2c      	ldr	r4, [pc, #176]	; (80b14 <Shellcom+0x16c>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   80a64:	4f36      	ldr	r7, [pc, #216]	; (80b40 <Shellcom+0x198>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   80a66:	4e31      	ldr	r6, [pc, #196]	; (80b2c <Shellcom+0x184>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   80a68:	6823      	ldr	r3, [r4, #0]
   80a6a:	1c59      	adds	r1, r3, #1
   80a6c:	6021      	str	r1, [r4, #0]
   80a6e:	9507      	str	r5, [sp, #28]
   80a70:	7812      	ldrb	r2, [r2, #0]
   80a72:	701a      	strb	r2, [r3, #0]
   80a74:	9b06      	ldr	r3, [sp, #24]
   80a76:	3301      	adds	r3, #1
   80a78:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   80a7a:	6823      	ldr	r3, [r4, #0]
   80a7c:	42bb      	cmp	r3, r7
   80a7e:	bf24      	itt	cs
   80a80:	4b25      	ldrcs	r3, [pc, #148]	; (80b18 <Shellcom+0x170>)
   80a82:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80a84:	6822      	ldr	r2, [r4, #0]
   80a86:	6863      	ldr	r3, [r4, #4]
   80a88:	429a      	cmp	r2, r3
   80a8a:	d00b      	beq.n	80aa4 <Shellcom+0xfc>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   80a8c:	f44f 7100 	mov.w	r1, #512	; 0x200
   80a90:	4630      	mov	r0, r6
   80a92:	4b29      	ldr	r3, [pc, #164]	; (80b38 <Shellcom+0x190>)
   80a94:	4798      	blx	r3
		while(*(char*)_pStr)
   80a96:	462a      	mov	r2, r5
   80a98:	f815 3b01 	ldrb.w	r3, [r5], #1
   80a9c:	2b00      	cmp	r3, #0
   80a9e:	d1e3      	bne.n	80a68 <Shellcom+0xc0>
		return _nChar;
   80aa0:	9806      	ldr	r0, [sp, #24]
   80aa2:	e7ad      	b.n	80a00 <Shellcom+0x58>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80aa4:	4b25      	ldr	r3, [pc, #148]	; (80b3c <Shellcom+0x194>)
   80aa6:	681b      	ldr	r3, [r3, #0]
   80aa8:	2100      	movs	r1, #0
   80aaa:	2017      	movs	r0, #23
   80aac:	4798      	blx	r3
   80aae:	e7ed      	b.n	80a8c <Shellcom+0xe4>
		_nChar=0;
   80ab0:	2300      	movs	r3, #0
   80ab2:	9306      	str	r3, [sp, #24]
		while(_strLen)
   80ab4:	9d08      	ldr	r5, [sp, #32]
   80ab6:	b1fd      	cbz	r5, 80af8 <Shellcom+0x150>
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   80ab8:	4c16      	ldr	r4, [pc, #88]	; (80b14 <Shellcom+0x16c>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   80aba:	4f21      	ldr	r7, [pc, #132]	; (80b40 <Shellcom+0x198>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   80abc:	4e1b      	ldr	r6, [pc, #108]	; (80b2c <Shellcom+0x184>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   80abe:	6823      	ldr	r3, [r4, #0]
   80ac0:	1c5a      	adds	r2, r3, #1
   80ac2:	6022      	str	r2, [r4, #0]
   80ac4:	9a07      	ldr	r2, [sp, #28]
   80ac6:	1c51      	adds	r1, r2, #1
   80ac8:	9107      	str	r1, [sp, #28]
   80aca:	7812      	ldrb	r2, [r2, #0]
   80acc:	701a      	strb	r2, [r3, #0]
   80ace:	3d01      	subs	r5, #1
   80ad0:	9508      	str	r5, [sp, #32]
   80ad2:	9b06      	ldr	r3, [sp, #24]
   80ad4:	3301      	adds	r3, #1
   80ad6:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   80ad8:	6823      	ldr	r3, [r4, #0]
   80ada:	42bb      	cmp	r3, r7
   80adc:	bf24      	itt	cs
   80ade:	4b0e      	ldrcs	r3, [pc, #56]	; (80b18 <Shellcom+0x170>)
   80ae0:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80ae2:	6822      	ldr	r2, [r4, #0]
   80ae4:	6863      	ldr	r3, [r4, #4]
   80ae6:	429a      	cmp	r2, r3
   80ae8:	d008      	beq.n	80afc <Shellcom+0x154>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   80aea:	f44f 7100 	mov.w	r1, #512	; 0x200
   80aee:	4630      	mov	r0, r6
   80af0:	4b11      	ldr	r3, [pc, #68]	; (80b38 <Shellcom+0x190>)
   80af2:	4798      	blx	r3
		while(_strLen)
   80af4:	2d00      	cmp	r5, #0
   80af6:	d1e2      	bne.n	80abe <Shellcom+0x116>
		return _nChar;
   80af8:	9806      	ldr	r0, [sp, #24]
   80afa:	e781      	b.n	80a00 <Shellcom+0x58>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   80afc:	4b0f      	ldr	r3, [pc, #60]	; (80b3c <Shellcom+0x194>)
   80afe:	681b      	ldr	r3, [r3, #0]
   80b00:	2100      	movs	r1, #0
   80b02:	2017      	movs	r0, #23
   80b04:	4798      	blx	r3
   80b06:	e7f0      	b.n	80aea <Shellcom+0x142>
		Error(ERR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
   80b08:	4b0c      	ldr	r3, [pc, #48]	; (80b3c <Shellcom+0x194>)
   80b0a:	681b      	ldr	r3, [r3, #0]
   80b0c:	200d      	movs	r0, #13
   80b0e:	4798      	blx	r3
	return 0;
   80b10:	2000      	movs	r0, #0
   80b12:	e775      	b.n	80a00 <Shellcom+0x58>
   80b14:	20001114 	.word	0x20001114
   80b18:	2000111c 	.word	0x2000111c
   80b1c:	00081229 	.word	0x00081229
   80b20:	0008106d 	.word	0x0008106d
   80b24:	08000001 	.word	0x08000001
   80b28:	00086090 	.word	0x00086090
   80b2c:	400e0600 	.word	0x400e0600
   80b30:	00081417 	.word	0x00081417
   80b34:	e000e100 	.word	0xe000e100
   80b38:	0008144d 	.word	0x0008144d
   80b3c:	20000524 	.word	0x20000524
   80b40:	2000121c 	.word	0x2000121c

00080b44 <UART_Handler>:
enum{
	_SHELL_KBHIT = 2
};

void UART_Handler()
{
   80b44:	b510      	push	{r4, lr}
   80b46:	b082      	sub	sp, #8
	uint32_t dw_status = uart_get_status(UART);
   80b48:	4816      	ldr	r0, [pc, #88]	; (80ba4 <UART_Handler+0x60>)
   80b4a:	4b17      	ldr	r3, [pc, #92]	; (80ba8 <UART_Handler+0x64>)
   80b4c:	4798      	blx	r3
   80b4e:	4604      	mov	r4, r0
	//TX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_TXEMPTY))
   80b50:	f410 7f00 	tst.w	r0, #512	; 0x200
   80b54:	d011      	beq.n	80b7a <UART_Handler+0x36>
	{
		if(shellcom.pTxRead!=shellcom.pTxWrite)
   80b56:	4a15      	ldr	r2, [pc, #84]	; (80bac <UART_Handler+0x68>)
   80b58:	6853      	ldr	r3, [r2, #4]
   80b5a:	6812      	ldr	r2, [r2, #0]
   80b5c:	4293      	cmp	r3, r2
   80b5e:	d011      	beq.n	80b84 <UART_Handler+0x40>
		{
			UART->UART_THR = *shellcom.pTxRead++;
   80b60:	1c5a      	adds	r2, r3, #1
   80b62:	4912      	ldr	r1, [pc, #72]	; (80bac <UART_Handler+0x68>)
   80b64:	604a      	str	r2, [r1, #4]
   80b66:	7819      	ldrb	r1, [r3, #0]
   80b68:	4b0e      	ldr	r3, [pc, #56]	; (80ba4 <UART_Handler+0x60>)
   80b6a:	61d9      	str	r1, [r3, #28]
			if(shellcom.pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxRead=shellcomTxBuf;
   80b6c:	4b10      	ldr	r3, [pc, #64]	; (80bb0 <UART_Handler+0x6c>)
   80b6e:	429a      	cmp	r2, r3
   80b70:	d303      	bcc.n	80b7a <UART_Handler+0x36>
   80b72:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
   80b76:	4b0d      	ldr	r3, [pc, #52]	; (80bac <UART_Handler+0x68>)
   80b78:	605a      	str	r2, [r3, #4]
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
		}
	}

	//RX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_RXRDY))
   80b7a:	f014 0f01 	tst.w	r4, #1
   80b7e:	d107      	bne.n	80b90 <UART_Handler+0x4c>
	{
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
	}
}
   80b80:	b002      	add	sp, #8
   80b82:	bd10      	pop	{r4, pc}
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
   80b84:	f44f 7100 	mov.w	r1, #512	; 0x200
   80b88:	4806      	ldr	r0, [pc, #24]	; (80ba4 <UART_Handler+0x60>)
   80b8a:	4b0a      	ldr	r3, [pc, #40]	; (80bb4 <UART_Handler+0x70>)
   80b8c:	4798      	blx	r3
   80b8e:	e7f4      	b.n	80b7a <UART_Handler+0x36>
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
   80b90:	4b04      	ldr	r3, [pc, #16]	; (80ba4 <UART_Handler+0x60>)
   80b92:	699b      	ldr	r3, [r3, #24]
   80b94:	2200      	movs	r2, #0
   80b96:	9200      	str	r2, [sp, #0]
   80b98:	2202      	movs	r2, #2
   80b9a:	4907      	ldr	r1, [pc, #28]	; (80bb8 <UART_Handler+0x74>)
   80b9c:	2066      	movs	r0, #102	; 0x66
   80b9e:	4c07      	ldr	r4, [pc, #28]	; (80bbc <UART_Handler+0x78>)
   80ba0:	47a0      	blx	r4
}
   80ba2:	e7ed      	b.n	80b80 <UART_Handler+0x3c>
   80ba4:	400e0600 	.word	0x400e0600
   80ba8:	00081455 	.word	0x00081455
   80bac:	20001114 	.word	0x20001114
   80bb0:	2000121c 	.word	0x2000121c
   80bb4:	00081451 	.word	0x00081451
   80bb8:	000805f1 	.word	0x000805f1
   80bbc:	00080bc1 	.word	0x00080bc1

00080bc0 <Taskman>:
 };


 /////////////////////////////////////////////////////////////////////////////
 uint32_t Taskman(uint32_t sc, ...)
 {
   80bc0:	b40f      	push	{r0, r1, r2, r3}
   80bc2:	b5f0      	push	{r4, r5, r6, r7, lr}
   80bc4:	b083      	sub	sp, #12
//	uint8_t criticalStatus;
	
	switch(sc)
   80bc6:	9908      	ldr	r1, [sp, #32]
   80bc8:	2964      	cmp	r1, #100	; 0x64
   80bca:	d024      	beq.n	80c16 <Taskman+0x56>
   80bcc:	d917      	bls.n	80bfe <Taskman+0x3e>
   80bce:	2966      	cmp	r1, #102	; 0x66
   80bd0:	d067      	beq.n	80ca2 <Taskman+0xe2>
   80bd2:	2967      	cmp	r1, #103	; 0x67
   80bd4:	f040 80c8 	bne.w	80d68 <Taskman+0x1a8>
#undef k

		break;

	case TASKMAN_POP_TASK:
		if(taskman.pPop!=taskman.pPush)
   80bd8:	4a66      	ldr	r2, [pc, #408]	; (80d74 <Taskman+0x1b4>)
   80bda:	6853      	ldr	r3, [r2, #4]
   80bdc:	6812      	ldr	r2, [r2, #0]
   80bde:	4293      	cmp	r3, r2
   80be0:	d059      	beq.n	80c96 <Taskman+0xd6>
		{
			t_ptf	 func;
			void*	 pa;
			func = taskman.pPop->pFunc;
   80be2:	681a      	ldr	r2, [r3, #0]
			sc = taskman.pPop->sc;
   80be4:	6858      	ldr	r0, [r3, #4]
   80be6:	9008      	str	r0, [sp, #32]
			pa = taskman.pPop->pParam;
   80be8:	6899      	ldr	r1, [r3, #8]
			taskman.pPop++;
   80bea:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPop=tasks;
   80bec:	4c62      	ldr	r4, [pc, #392]	; (80d78 <Taskman+0x1b8>)
   80bee:	42a3      	cmp	r3, r4
   80bf0:	f0c0 80a3 	bcc.w	80d3a <Taskman+0x17a>
   80bf4:	4c61      	ldr	r4, [pc, #388]	; (80d7c <Taskman+0x1bc>)
   80bf6:	4b5f      	ldr	r3, [pc, #380]	; (80d74 <Taskman+0x1b4>)
   80bf8:	605c      	str	r4, [r3, #4]
			//Function call
			func(sc,pa);
   80bfa:	4790      	blx	r2
   80bfc:	e04b      	b.n	80c96 <Taskman+0xd6>
	switch(sc)
   80bfe:	2901      	cmp	r1, #1
   80c00:	f040 80b2 	bne.w	80d68 <Taskman+0x1a8>
		
		break;

	//Private services implementation section /////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
		gpio_toggle_pin(PIO_PA2_IDX);
   80c04:	2002      	movs	r0, #2
   80c06:	4b5e      	ldr	r3, [pc, #376]	; (80d80 <Taskman+0x1c0>)
   80c08:	4798      	blx	r3
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80c0a:	2500      	movs	r5, #0
   80c0c:	9508      	str	r5, [sp, #32]
   80c0e:	4c5d      	ldr	r4, [pc, #372]	; (80d84 <Taskman+0x1c4>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   80c10:	462f      	mov	r7, r5
   80c12:	2666      	movs	r6, #102	; 0x66
   80c14:	e099      	b.n	80d4a <Taskman+0x18a>
		taskman.pPop=taskman.pPush=tasks;
   80c16:	4b57      	ldr	r3, [pc, #348]	; (80d74 <Taskman+0x1b4>)
   80c18:	4a58      	ldr	r2, [pc, #352]	; (80d7c <Taskman+0x1bc>)
   80c1a:	601a      	str	r2, [r3, #0]
   80c1c:	605a      	str	r2, [r3, #4]
   80c1e:	4b59      	ldr	r3, [pc, #356]	; (80d84 <Taskman+0x1c4>)
   80c20:	f103 01a0 	add.w	r1, r3, #160	; 0xa0
			dTasks[k].delay=0;
   80c24:	2200      	movs	r2, #0
   80c26:	60da      	str	r2, [r3, #12]
   80c28:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80c2a:	428b      	cmp	r3, r1
   80c2c:	d1fb      	bne.n	80c26 <Taskman+0x66>
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   80c2e:	4b56      	ldr	r3, [pc, #344]	; (80d88 <Taskman+0x1c8>)
   80c30:	2202      	movs	r2, #2
   80c32:	661a      	str	r2, [r3, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80c34:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80c36:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80c38:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   80c3c:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80c3e:	f021 0102 	bic.w	r1, r1, #2
   80c42:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80c44:	605a      	str	r2, [r3, #4]
   80c46:	2016      	movs	r0, #22
   80c48:	4b50      	ldr	r3, [pc, #320]	; (80d8c <Taskman+0x1cc>)
   80c4a:	4798      	blx	r3

	 //Configure the PMC to enable the TC module.
	 sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	 //Init TC to waveform mode.
	 tc_init(
   80c4c:	4c50      	ldr	r4, [pc, #320]	; (80d90 <Taskman+0x1d0>)
   80c4e:	4a51      	ldr	r2, [pc, #324]	; (80d94 <Taskman+0x1d4>)
   80c50:	2100      	movs	r1, #0
   80c52:	4620      	mov	r0, r4
   80c54:	4b50      	ldr	r3, [pc, #320]	; (80d98 <Taskman+0x1d8>)
   80c56:	4798      	blx	r3

	 //Configure waveform frequency and duty cycle.
	 rc =	(sysclk_get_peripheral_bus_hz(TC) /
	 TC_WAVEFORM_DIVISOR) /
	 TC_WAVEFORM_FREQUENCY;
	 tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   80c58:	f240 22ee 	movw	r2, #750	; 0x2ee
   80c5c:	2100      	movs	r1, #0
   80c5e:	4620      	mov	r0, r4
   80c60:	4b4e      	ldr	r3, [pc, #312]	; (80d9c <Taskman+0x1dc>)
   80c62:	4798      	blx	r3

	 ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	 tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   80c64:	f240 220d 	movw	r2, #525	; 0x20d
   80c68:	2100      	movs	r1, #0
   80c6a:	4620      	mov	r0, r4
   80c6c:	4b4c      	ldr	r3, [pc, #304]	; (80da0 <Taskman+0x1e0>)
   80c6e:	4798      	blx	r3

	 //Enable TC TC_CHANNEL_WAVEFORM
	 tc_start(TC, TC_CHANNEL_WAVEFORM);
   80c70:	2100      	movs	r1, #0
   80c72:	4620      	mov	r0, r4
   80c74:	4b4b      	ldr	r3, [pc, #300]	; (80da4 <Taskman+0x1e4>)
   80c76:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   80c78:	4b4b      	ldr	r3, [pc, #300]	; (80da8 <Taskman+0x1e8>)
   80c7a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   80c7e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   80c82:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   80c86:	2100      	movs	r1, #0
   80c88:	f883 1316 	strb.w	r1, [r3, #790]	; 0x316
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80c8c:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   80c8e:	2204      	movs	r2, #4
   80c90:	4620      	mov	r0, r4
   80c92:	4b46      	ldr	r3, [pc, #280]	; (80dac <Taskman+0x1ec>)
   80c94:	4798      	blx	r3
 }
   80c96:	2000      	movs	r0, #0
   80c98:	b003      	add	sp, #12
   80c9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   80c9e:	b004      	add	sp, #16
   80ca0:	4770      	bx	lr
		cpu_irq_enter_critical();
   80ca2:	4b43      	ldr	r3, [pc, #268]	; (80db0 <Taskman+0x1f0>)
   80ca4:	4798      	blx	r3
		if(_delay)
   80ca6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   80ca8:	b34d      	cbz	r5, 80cfe <Taskman+0x13e>
			for(k=0;(k<TASKMAN_DELAYED_TASKS_LIST_LEN)&&(dTasks[k].delay);k++);
   80caa:	2300      	movs	r3, #0
   80cac:	9308      	str	r3, [sp, #32]
   80cae:	4b35      	ldr	r3, [pc, #212]	; (80d84 <Taskman+0x1c4>)
   80cb0:	68db      	ldr	r3, [r3, #12]
   80cb2:	b1ab      	cbz	r3, 80ce0 <Taskman+0x120>
   80cb4:	2301      	movs	r3, #1
   80cb6:	9308      	str	r3, [sp, #32]
   80cb8:	4a32      	ldr	r2, [pc, #200]	; (80d84 <Taskman+0x1c4>)
   80cba:	2000      	movs	r0, #0
   80cbc:	461c      	mov	r4, r3
   80cbe:	69d1      	ldr	r1, [r2, #28]
   80cc0:	b159      	cbz	r1, 80cda <Taskman+0x11a>
   80cc2:	3301      	adds	r3, #1
   80cc4:	3210      	adds	r2, #16
   80cc6:	4620      	mov	r0, r4
   80cc8:	2b0a      	cmp	r3, #10
   80cca:	d1f8      	bne.n	80cbe <Taskman+0xfe>
			if(k==TASKMAN_DELAYED_TASKS_LIST_LEN) Error(ERR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   80ccc:	4b39      	ldr	r3, [pc, #228]	; (80db4 <Taskman+0x1f4>)
   80cce:	681b      	ldr	r3, [r3, #0]
   80cd0:	2100      	movs	r1, #0
   80cd2:	2016      	movs	r0, #22
   80cd4:	4798      	blx	r3
   80cd6:	230a      	movs	r3, #10
   80cd8:	e002      	b.n	80ce0 <Taskman+0x120>
   80cda:	b970      	cbnz	r0, 80cfa <Taskman+0x13a>
   80cdc:	2b0a      	cmp	r3, #10
   80cde:	d0f5      	beq.n	80ccc <Taskman+0x10c>
			dTasks[k].pFunc=_func;
   80ce0:	4928      	ldr	r1, [pc, #160]	; (80d84 <Taskman+0x1c4>)
   80ce2:	011b      	lsls	r3, r3, #4
   80ce4:	18ca      	adds	r2, r1, r3
   80ce6:	9809      	ldr	r0, [sp, #36]	; 0x24
   80ce8:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   80cea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80cec:	6053      	str	r3, [r2, #4]
			dTasks[k].pParam=_pParam;
   80cee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80cf0:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   80cf2:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   80cf4:	4b30      	ldr	r3, [pc, #192]	; (80db8 <Taskman+0x1f8>)
   80cf6:	4798      	blx	r3
		break;
   80cf8:	e7cd      	b.n	80c96 <Taskman+0xd6>
   80cfa:	9308      	str	r3, [sp, #32]
   80cfc:	e7ee      	b.n	80cdc <Taskman+0x11c>
			taskman.pPush->pFunc=_func;
   80cfe:	4b1d      	ldr	r3, [pc, #116]	; (80d74 <Taskman+0x1b4>)
   80d00:	681a      	ldr	r2, [r3, #0]
   80d02:	9909      	ldr	r1, [sp, #36]	; 0x24
   80d04:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   80d06:	681b      	ldr	r3, [r3, #0]
   80d08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80d0a:	605a      	str	r2, [r3, #4]
			taskman.pPush->pParam=_pParam;
   80d0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   80d0e:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   80d10:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   80d12:	4a19      	ldr	r2, [pc, #100]	; (80d78 <Taskman+0x1b8>)
   80d14:	4293      	cmp	r3, r2
   80d16:	d20c      	bcs.n	80d32 <Taskman+0x172>
			taskman.pPush++;
   80d18:	4a16      	ldr	r2, [pc, #88]	; (80d74 <Taskman+0x1b4>)
   80d1a:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   80d1c:	4b15      	ldr	r3, [pc, #84]	; (80d74 <Taskman+0x1b4>)
   80d1e:	681a      	ldr	r2, [r3, #0]
   80d20:	685b      	ldr	r3, [r3, #4]
   80d22:	429a      	cmp	r2, r3
   80d24:	d1e6      	bne.n	80cf4 <Taskman+0x134>
   80d26:	4b23      	ldr	r3, [pc, #140]	; (80db4 <Taskman+0x1f4>)
   80d28:	681b      	ldr	r3, [r3, #0]
   80d2a:	2100      	movs	r1, #0
   80d2c:	2015      	movs	r0, #21
   80d2e:	4798      	blx	r3
   80d30:	e7e0      	b.n	80cf4 <Taskman+0x134>
			if(taskman.pPush>=tasks+TASKMAN_TASKS_LIST_LEN) taskman.pPush=tasks;
   80d32:	4a12      	ldr	r2, [pc, #72]	; (80d7c <Taskman+0x1bc>)
   80d34:	4b0f      	ldr	r3, [pc, #60]	; (80d74 <Taskman+0x1b4>)
   80d36:	601a      	str	r2, [r3, #0]
   80d38:	e7f0      	b.n	80d1c <Taskman+0x15c>
			taskman.pPop++;
   80d3a:	4c0e      	ldr	r4, [pc, #56]	; (80d74 <Taskman+0x1b4>)
   80d3c:	6063      	str	r3, [r4, #4]
   80d3e:	e75c      	b.n	80bfa <Taskman+0x3a>
		for(k=0;k<TASKMAN_DELAYED_TASKS_LIST_LEN;k++)
   80d40:	3501      	adds	r5, #1
   80d42:	9508      	str	r5, [sp, #32]
   80d44:	3410      	adds	r4, #16
   80d46:	2d0a      	cmp	r5, #10
   80d48:	d0a5      	beq.n	80c96 <Taskman+0xd6>
			if(dTasks[k].delay)
   80d4a:	68e3      	ldr	r3, [r4, #12]
   80d4c:	2b00      	cmp	r3, #0
   80d4e:	d0f7      	beq.n	80d40 <Taskman+0x180>
				if(--dTasks[k].delay==0)
   80d50:	3b01      	subs	r3, #1
   80d52:	60e3      	str	r3, [r4, #12]
   80d54:	2b00      	cmp	r3, #0
   80d56:	d1f3      	bne.n	80d40 <Taskman+0x180>
					PushTask(
   80d58:	68a3      	ldr	r3, [r4, #8]
   80d5a:	6862      	ldr	r2, [r4, #4]
   80d5c:	6821      	ldr	r1, [r4, #0]
   80d5e:	9700      	str	r7, [sp, #0]
   80d60:	4630      	mov	r0, r6
   80d62:	f7ff ff2d 	bl	80bc0 <Taskman>
   80d66:	e7eb      	b.n	80d40 <Taskman+0x180>
		Error(ERR_TASKMAN_SWITCH_BAD_SC, sc);
   80d68:	4b12      	ldr	r3, [pc, #72]	; (80db4 <Taskman+0x1f4>)
   80d6a:	681b      	ldr	r3, [r3, #0]
   80d6c:	200b      	movs	r0, #11
   80d6e:	4798      	blx	r3
	return 0;
   80d70:	e791      	b.n	80c96 <Taskman+0xd6>
   80d72:	bf00      	nop
   80d74:	200012bc 	.word	0x200012bc
   80d78:	200012bc 	.word	0x200012bc
   80d7c:	2000121c 	.word	0x2000121c
   80d80:	0008104b 	.word	0x0008104b
   80d84:	200012c4 	.word	0x200012c4
   80d88:	400e0c00 	.word	0x400e0c00
   80d8c:	00081229 	.word	0x00081229
   80d90:	40080000 	.word	0x40080000
   80d94:	0009c003 	.word	0x0009c003
   80d98:	000813d7 	.word	0x000813d7
   80d9c:	000813ff 	.word	0x000813ff
   80da0:	000813f7 	.word	0x000813f7
   80da4:	000813ef 	.word	0x000813ef
   80da8:	e000e100 	.word	0xe000e100
   80dac:	00081407 	.word	0x00081407
   80db0:	0008145d 	.word	0x0008145d
   80db4:	20000524 	.word	0x20000524
   80db8:	00081499 	.word	0x00081499

00080dbc <TC0_Handler>:
 {
   80dbc:	b508      	push	{r3, lr}
	 tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   80dbe:	2100      	movs	r1, #0
   80dc0:	4803      	ldr	r0, [pc, #12]	; (80dd0 <TC0_Handler+0x14>)
   80dc2:	4b04      	ldr	r3, [pc, #16]	; (80dd4 <TC0_Handler+0x18>)
   80dc4:	4798      	blx	r3
	 Taskman(_TASKMAN_DELAYED_TASK_PROC);
   80dc6:	2001      	movs	r0, #1
   80dc8:	4b03      	ldr	r3, [pc, #12]	; (80dd8 <TC0_Handler+0x1c>)
   80dca:	4798      	blx	r3
   80dcc:	bd08      	pop	{r3, pc}
   80dce:	bf00      	nop
   80dd0:	40080000 	.word	0x40080000
   80dd4:	0008140f 	.word	0x0008140f
   80dd8:	00080bc1 	.word	0x00080bc1

00080ddc <Appli>:
 #include "./Headers/appli.h"

 uint32_t Appli(uint32_t sc, ...)
 {
   80ddc:	b40f      	push	{r0, r1, r2, r3}
   80dde:	b510      	push	{r4, lr}
   80de0:	b082      	sub	sp, #8
   80de2:	9904      	ldr	r1, [sp, #16]
	switch (sc)
   80de4:	2964      	cmp	r1, #100	; 0x64
   80de6:	d006      	beq.n	80df6 <Appli+0x1a>
   80de8:	2966      	cmp	r1, #102	; 0x66
   80dea:	d01a      	beq.n	80e22 <Appli+0x46>
		LcdPutstr("Hello World 2",2,2);
		LcdPutstr("Hello World 3",3,3);
		Putstr("LCD Hello World!\r\n");
		break;
	default:
		Error(ERR_APPLI_SWITCH_BAD_SC, sc);
   80dec:	4b1a      	ldr	r3, [pc, #104]	; (80e58 <Appli+0x7c>)
   80dee:	681b      	ldr	r3, [r3, #0]
   80df0:	200f      	movs	r0, #15
   80df2:	4798      	blx	r3
   80df4:	e00f      	b.n	80e16 <Appli+0x3a>
		Putstr("APPLI_NEW\r\n");
   80df6:	4919      	ldr	r1, [pc, #100]	; (80e5c <Appli+0x80>)
   80df8:	2067      	movs	r0, #103	; 0x67
   80dfa:	4b19      	ldr	r3, [pc, #100]	; (80e60 <Appli+0x84>)
   80dfc:	4798      	blx	r3
		Lcd(LCD_NEW);
   80dfe:	2064      	movs	r0, #100	; 0x64
   80e00:	4b18      	ldr	r3, [pc, #96]	; (80e64 <Appli+0x88>)
   80e02:	4798      	blx	r3
		PushTask(Appli,APPLI_TEST,0,3000);
   80e04:	f640 33b8 	movw	r3, #3000	; 0xbb8
   80e08:	9300      	str	r3, [sp, #0]
   80e0a:	2300      	movs	r3, #0
   80e0c:	2266      	movs	r2, #102	; 0x66
   80e0e:	4916      	ldr	r1, [pc, #88]	; (80e68 <Appli+0x8c>)
   80e10:	4610      	mov	r0, r2
   80e12:	4c16      	ldr	r4, [pc, #88]	; (80e6c <Appli+0x90>)
   80e14:	47a0      	blx	r4
	}
	return 0;
 }
   80e16:	2000      	movs	r0, #0
   80e18:	b002      	add	sp, #8
   80e1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80e1e:	b004      	add	sp, #16
   80e20:	4770      	bx	lr
		LcdPutstr("Hello World 0",0,0);
   80e22:	2300      	movs	r3, #0
   80e24:	461a      	mov	r2, r3
   80e26:	4912      	ldr	r1, [pc, #72]	; (80e70 <Appli+0x94>)
   80e28:	2067      	movs	r0, #103	; 0x67
   80e2a:	4c0e      	ldr	r4, [pc, #56]	; (80e64 <Appli+0x88>)
   80e2c:	47a0      	blx	r4
		LcdPutstr("Hello World 1",1,1);
   80e2e:	2301      	movs	r3, #1
   80e30:	461a      	mov	r2, r3
   80e32:	4910      	ldr	r1, [pc, #64]	; (80e74 <Appli+0x98>)
   80e34:	2067      	movs	r0, #103	; 0x67
   80e36:	47a0      	blx	r4
		LcdPutstr("Hello World 2",2,2);
   80e38:	2302      	movs	r3, #2
   80e3a:	461a      	mov	r2, r3
   80e3c:	490e      	ldr	r1, [pc, #56]	; (80e78 <Appli+0x9c>)
   80e3e:	2067      	movs	r0, #103	; 0x67
   80e40:	47a0      	blx	r4
		LcdPutstr("Hello World 3",3,3);
   80e42:	2303      	movs	r3, #3
   80e44:	461a      	mov	r2, r3
   80e46:	490d      	ldr	r1, [pc, #52]	; (80e7c <Appli+0xa0>)
   80e48:	2067      	movs	r0, #103	; 0x67
   80e4a:	47a0      	blx	r4
		Putstr("LCD Hello World!\r\n");
   80e4c:	490c      	ldr	r1, [pc, #48]	; (80e80 <Appli+0xa4>)
   80e4e:	2067      	movs	r0, #103	; 0x67
   80e50:	4b03      	ldr	r3, [pc, #12]	; (80e60 <Appli+0x84>)
   80e52:	4798      	blx	r3
		break;
   80e54:	e7df      	b.n	80e16 <Appli+0x3a>
   80e56:	bf00      	nop
   80e58:	20000524 	.word	0x20000524
   80e5c:	0008609c 	.word	0x0008609c
   80e60:	000809a9 	.word	0x000809a9
   80e64:	00080289 	.word	0x00080289
   80e68:	00080ddd 	.word	0x00080ddd
   80e6c:	00080bc1 	.word	0x00080bc1
   80e70:	000860a8 	.word	0x000860a8
   80e74:	000860b8 	.word	0x000860b8
   80e78:	000860c8 	.word	0x000860c8
   80e7c:	000860d8 	.word	0x000860d8
   80e80:	000860e8 	.word	0x000860e8

00080e84 <main>:
#include ".\Headers\appli.h"
char buf[512];
int main (void)
{
   80e84:	b500      	push	{lr}
   80e86:	b083      	sub	sp, #12
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   80e88:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   80e8a:	f3bf 8f5f 	dmb	sy
	/*Insert system clock initialization code here (sysclk_init()). */
	cpu_irq_disable();
   80e8e:	4e11      	ldr	r6, [pc, #68]	; (80ed4 <main+0x50>)
   80e90:	2400      	movs	r4, #0
   80e92:	7034      	strb	r4, [r6, #0]
	wdt_disable(WDT);
   80e94:	4810      	ldr	r0, [pc, #64]	; (80ed8 <main+0x54>)
   80e96:	4b11      	ldr	r3, [pc, #68]	; (80edc <main+0x58>)
   80e98:	4798      	blx	r3
	sysclk_init();
   80e9a:	4b11      	ldr	r3, [pc, #68]	; (80ee0 <main+0x5c>)
   80e9c:	4798      	blx	r3
	board_init();
   80e9e:	4b11      	ldr	r3, [pc, #68]	; (80ee4 <main+0x60>)
   80ea0:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());

	delay_ms(1000);
   80ea2:	4811      	ldr	r0, [pc, #68]	; (80ee8 <main+0x64>)
   80ea4:	4b11      	ldr	r3, [pc, #68]	; (80eec <main+0x68>)
   80ea6:	4798      	blx	r3
	/*Insert application code here, after the board has been initialized. */
	
	Taskman(TASKMAN_NEW);
   80ea8:	2064      	movs	r0, #100	; 0x64
   80eaa:	4d11      	ldr	r5, [pc, #68]	; (80ef0 <main+0x6c>)
   80eac:	47a8      	blx	r5
	Shell(SHELL_NEW);
   80eae:	2064      	movs	r0, #100	; 0x64
   80eb0:	4b10      	ldr	r3, [pc, #64]	; (80ef4 <main+0x70>)
   80eb2:	4798      	blx	r3
	cpu_irq_enable();
   80eb4:	2301      	movs	r3, #1
   80eb6:	7033      	strb	r3, [r6, #0]
   80eb8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80ebc:	b662      	cpsie	i

	PushTask(Appli, APPLI_NEW, 0, 0);
   80ebe:	9400      	str	r4, [sp, #0]
   80ec0:	4623      	mov	r3, r4
   80ec2:	2264      	movs	r2, #100	; 0x64
   80ec4:	490c      	ldr	r1, [pc, #48]	; (80ef8 <main+0x74>)
   80ec6:	2066      	movs	r0, #102	; 0x66
   80ec8:	47a8      	blx	r5


	for(;;)
	{
		PopTask();
   80eca:	2567      	movs	r5, #103	; 0x67
   80ecc:	4c08      	ldr	r4, [pc, #32]	; (80ef0 <main+0x6c>)
   80ece:	4628      	mov	r0, r5
   80ed0:	47a0      	blx	r4
   80ed2:	e7fc      	b.n	80ece <main+0x4a>
   80ed4:	20000574 	.word	0x20000574
   80ed8:	400e1250 	.word	0x400e1250
   80edc:	000801a1 	.word	0x000801a1
   80ee0:	00080efd 	.word	0x00080efd
   80ee4:	00081459 	.word	0x00081459
   80ee8:	0068a1b7 	.word	0x0068a1b7
   80eec:	20000001 	.word	0x20000001
   80ef0:	00080bc1 	.word	0x00080bc1
   80ef4:	000805f1 	.word	0x000805f1
   80ef8:	00080ddd 	.word	0x00080ddd

00080efc <sysclk_init>:
		pll_disable(1);
	}
}

void sysclk_init(void)
{
   80efc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   80efe:	4812      	ldr	r0, [pc, #72]	; (80f48 <sysclk_init+0x4c>)
   80f00:	4b12      	ldr	r3, [pc, #72]	; (80f4c <sysclk_init+0x50>)
   80f02:	4798      	blx	r3
		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   80f04:	203e      	movs	r0, #62	; 0x3e
   80f06:	4b12      	ldr	r3, [pc, #72]	; (80f50 <sysclk_init+0x54>)
   80f08:	4798      	blx	r3
	case OSC_MAINCK_12M_RC:
		return pmc_osc_is_ready_fastrc();

	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_main_xtal();
   80f0a:	4c12      	ldr	r4, [pc, #72]	; (80f54 <sysclk_init+0x58>)
   80f0c:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80f0e:	2800      	cmp	r0, #0
   80f10:	d0fc      	beq.n	80f0c <sysclk_init+0x10>
#  ifndef CONFIG_PLL1_SOURCE
			pmc_osc_disable_main_xtal();
#  endif
		} else if (CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_XTAL ||
				CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_BYPASS) {
			pmc_mainck_osc_select(CKGR_MOR_MOSCSEL);
   80f12:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80f16:	4b10      	ldr	r3, [pc, #64]	; (80f58 <sysclk_init+0x5c>)
   80f18:	4798      	blx	r3
			while(!pmc_osc_is_ready_mainck());
   80f1a:	4c10      	ldr	r4, [pc, #64]	; (80f5c <sysclk_init+0x60>)
   80f1c:	47a0      	blx	r4
   80f1e:	2800      	cmp	r0, #0
   80f20:	d0fc      	beq.n	80f1c <sysclk_init+0x20>
		uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80f22:	4b0f      	ldr	r3, [pc, #60]	; (80f60 <sysclk_init+0x64>)
   80f24:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80f26:	4a0f      	ldr	r2, [pc, #60]	; (80f64 <sysclk_init+0x68>)
   80f28:	4b0f      	ldr	r3, [pc, #60]	; (80f68 <sysclk_init+0x6c>)
   80f2a:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   80f2c:	4c0f      	ldr	r4, [pc, #60]	; (80f6c <sysclk_init+0x70>)
   80f2e:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80f30:	2800      	cmp	r0, #0
   80f32:	d0fc      	beq.n	80f2e <sysclk_init+0x32>
		}
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80f34:	2010      	movs	r0, #16
   80f36:	4b0e      	ldr	r3, [pc, #56]	; (80f70 <sysclk_init+0x74>)
   80f38:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80f3a:	4b0e      	ldr	r3, [pc, #56]	; (80f74 <sysclk_init+0x78>)
   80f3c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80f3e:	4802      	ldr	r0, [pc, #8]	; (80f48 <sysclk_init+0x4c>)
   80f40:	4b02      	ldr	r3, [pc, #8]	; (80f4c <sysclk_init+0x50>)
   80f42:	4798      	blx	r3
   80f44:	bd10      	pop	{r4, pc}
   80f46:	bf00      	nop
   80f48:	05b8d800 	.word	0x05b8d800
   80f4c:	200000b5 	.word	0x200000b5
   80f50:	000811a1 	.word	0x000811a1
   80f54:	000811c9 	.word	0x000811c9
   80f58:	000811e9 	.word	0x000811e9
   80f5c:	000811d9 	.word	0x000811d9
   80f60:	00081209 	.word	0x00081209
   80f64:	200f3f01 	.word	0x200f3f01
   80f68:	400e0400 	.word	0x400e0400
   80f6c:	00081219 	.word	0x00081219
   80f70:	0008113d 	.word	0x0008113d
   80f74:	00081561 	.word	0x00081561

00080f78 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80f78:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80f7a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80f7e:	d016      	beq.n	80fae <pio_set_peripheral+0x36>
   80f80:	d80b      	bhi.n	80f9a <pio_set_peripheral+0x22>
   80f82:	b149      	cbz	r1, 80f98 <pio_set_peripheral+0x20>
   80f84:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80f88:	d105      	bne.n	80f96 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80f8a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80f8c:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80f8e:	400b      	ands	r3, r1
   80f90:	ea23 0302 	bic.w	r3, r3, r2
   80f94:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80f96:	6042      	str	r2, [r0, #4]
   80f98:	4770      	bx	lr
	switch (ul_type) {
   80f9a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80f9e:	d0fb      	beq.n	80f98 <pio_set_peripheral+0x20>
   80fa0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80fa4:	d0f8      	beq.n	80f98 <pio_set_peripheral+0x20>
   80fa6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80faa:	d1f4      	bne.n	80f96 <pio_set_peripheral+0x1e>
   80fac:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   80fae:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80fb0:	4313      	orrs	r3, r2
   80fb2:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80fb4:	e7ef      	b.n	80f96 <pio_set_peripheral+0x1e>

00080fb6 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80fb6:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80fb8:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80fbc:	bf14      	ite	ne
   80fbe:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80fc0:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80fc2:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80fc6:	bf14      	ite	ne
   80fc8:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80fca:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80fcc:	f012 0f02 	tst.w	r2, #2
   80fd0:	d107      	bne.n	80fe2 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   80fd2:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80fd6:	bf18      	it	ne
   80fd8:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80fdc:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80fde:	6001      	str	r1, [r0, #0]
   80fe0:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   80fe2:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80fe6:	e7f9      	b.n	80fdc <pio_set_input+0x26>

00080fe8 <pio_set_output>:
{
   80fe8:	b410      	push	{r4}
   80fea:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80fec:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80fee:	b944      	cbnz	r4, 81002 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80ff0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   80ff2:	b143      	cbz	r3, 81006 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   80ff4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   80ff6:	b942      	cbnz	r2, 8100a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80ff8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80ffa:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80ffc:	6001      	str	r1, [r0, #0]
}
   80ffe:	bc10      	pop	{r4}
   81000:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   81002:	6641      	str	r1, [r0, #100]	; 0x64
   81004:	e7f5      	b.n	80ff2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   81006:	6541      	str	r1, [r0, #84]	; 0x54
   81008:	e7f5      	b.n	80ff6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   8100a:	6301      	str	r1, [r0, #48]	; 0x30
   8100c:	e7f5      	b.n	80ffa <pio_set_output+0x12>

0008100e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8100e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   81010:	4770      	bx	lr

00081012 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   81012:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   81014:	4770      	bx	lr

00081016 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81016:	0943      	lsrs	r3, r0, #5
   81018:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8101c:	f203 7306 	addw	r3, r3, #1798	; 0x706
   81020:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81022:	f000 001f 	and.w	r0, r0, #31
   81026:	2201      	movs	r2, #1
   81028:	fa02 f000 	lsl.w	r0, r2, r0
   8102c:	6318      	str	r0, [r3, #48]	; 0x30
   8102e:	4770      	bx	lr

00081030 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81030:	0943      	lsrs	r3, r0, #5
   81032:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81036:	f203 7306 	addw	r3, r3, #1798	; 0x706
   8103a:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   8103c:	f000 001f 	and.w	r0, r0, #31
   81040:	2201      	movs	r2, #1
   81042:	fa02 f000 	lsl.w	r0, r2, r0
   81046:	6358      	str	r0, [r3, #52]	; 0x34
   81048:	4770      	bx	lr

0008104a <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8104a:	0943      	lsrs	r3, r0, #5
   8104c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81050:	f203 7306 	addw	r3, r3, #1798	; 0x706
   81054:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
   81056:	6b99      	ldr	r1, [r3, #56]	; 0x38
   81058:	f000 021f 	and.w	r2, r0, #31
   8105c:	2001      	movs	r0, #1
   8105e:	4090      	lsls	r0, r2
   81060:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81062:	bf14      	ite	ne
   81064:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81066:	6318      	streq	r0, [r3, #48]	; 0x30
   81068:	4770      	bx	lr
	...

0008106c <pio_configure_pin>:
{
   8106c:	b570      	push	{r4, r5, r6, lr}
   8106e:	b082      	sub	sp, #8
   81070:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81072:	0943      	lsrs	r3, r0, #5
   81074:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81078:	f203 7306 	addw	r3, r3, #1798	; 0x706
   8107c:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   8107e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   81082:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   81086:	d031      	beq.n	810ec <pio_configure_pin+0x80>
   81088:	d816      	bhi.n	810b8 <pio_configure_pin+0x4c>
   8108a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8108e:	d01b      	beq.n	810c8 <pio_configure_pin+0x5c>
   81090:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   81094:	d116      	bne.n	810c4 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   81096:	f000 001f 	and.w	r0, r0, #31
   8109a:	2601      	movs	r6, #1
   8109c:	4086      	lsls	r6, r0
   8109e:	4632      	mov	r2, r6
   810a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   810a4:	4620      	mov	r0, r4
   810a6:	4b22      	ldr	r3, [pc, #136]	; (81130 <pio_configure_pin+0xc4>)
   810a8:	4798      	blx	r3
	if (ul_pull_up_enable) {
   810aa:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   810ae:	bf14      	ite	ne
   810b0:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   810b2:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   810b4:	2001      	movs	r0, #1
   810b6:	e017      	b.n	810e8 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   810b8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   810bc:	d021      	beq.n	81102 <pio_configure_pin+0x96>
   810be:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   810c2:	d01e      	beq.n	81102 <pio_configure_pin+0x96>
		return 0;
   810c4:	2000      	movs	r0, #0
   810c6:	e00f      	b.n	810e8 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   810c8:	f000 001f 	and.w	r0, r0, #31
   810cc:	2601      	movs	r6, #1
   810ce:	4086      	lsls	r6, r0
   810d0:	4632      	mov	r2, r6
   810d2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   810d6:	4620      	mov	r0, r4
   810d8:	4b15      	ldr	r3, [pc, #84]	; (81130 <pio_configure_pin+0xc4>)
   810da:	4798      	blx	r3
	if (ul_pull_up_enable) {
   810dc:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   810e0:	bf14      	ite	ne
   810e2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   810e4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   810e6:	2001      	movs	r0, #1
}
   810e8:	b002      	add	sp, #8
   810ea:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   810ec:	f000 011f 	and.w	r1, r0, #31
   810f0:	2601      	movs	r6, #1
   810f2:	462a      	mov	r2, r5
   810f4:	fa06 f101 	lsl.w	r1, r6, r1
   810f8:	4620      	mov	r0, r4
   810fa:	4b0e      	ldr	r3, [pc, #56]	; (81134 <pio_configure_pin+0xc8>)
   810fc:	4798      	blx	r3
	return 1;
   810fe:	4630      	mov	r0, r6
		break;
   81100:	e7f2      	b.n	810e8 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   81102:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   81106:	f000 011f 	and.w	r1, r0, #31
   8110a:	2601      	movs	r6, #1
   8110c:	ea05 0306 	and.w	r3, r5, r6
   81110:	9300      	str	r3, [sp, #0]
   81112:	f3c5 0380 	ubfx	r3, r5, #2, #1
   81116:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8111a:	bf14      	ite	ne
   8111c:	2200      	movne	r2, #0
   8111e:	2201      	moveq	r2, #1
   81120:	fa06 f101 	lsl.w	r1, r6, r1
   81124:	4620      	mov	r0, r4
   81126:	4c04      	ldr	r4, [pc, #16]	; (81138 <pio_configure_pin+0xcc>)
   81128:	47a0      	blx	r4
	return 1;
   8112a:	4630      	mov	r0, r6
		break;
   8112c:	e7dc      	b.n	810e8 <pio_configure_pin+0x7c>
   8112e:	bf00      	nop
   81130:	00080f79 	.word	0x00080f79
   81134:	00080fb7 	.word	0x00080fb7
   81138:	00080fe9 	.word	0x00080fe9

0008113c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8113c:	4a17      	ldr	r2, [pc, #92]	; (8119c <pmc_switch_mck_to_pllack+0x60>)
   8113e:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81140:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   81144:	4318      	orrs	r0, r3
   81146:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81148:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8114a:	f013 0f08 	tst.w	r3, #8
   8114e:	d10a      	bne.n	81166 <pmc_switch_mck_to_pllack+0x2a>
   81150:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81154:	4911      	ldr	r1, [pc, #68]	; (8119c <pmc_switch_mck_to_pllack+0x60>)
   81156:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81158:	f012 0f08 	tst.w	r2, #8
   8115c:	d103      	bne.n	81166 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8115e:	3b01      	subs	r3, #1
   81160:	d1f9      	bne.n	81156 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   81162:	2001      	movs	r0, #1
   81164:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   81166:	4a0d      	ldr	r2, [pc, #52]	; (8119c <pmc_switch_mck_to_pllack+0x60>)
   81168:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8116a:	f023 0303 	bic.w	r3, r3, #3
   8116e:	f043 0302 	orr.w	r3, r3, #2
   81172:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81174:	6e93      	ldr	r3, [r2, #104]	; 0x68
   81176:	f013 0f08 	tst.w	r3, #8
   8117a:	d10a      	bne.n	81192 <pmc_switch_mck_to_pllack+0x56>
   8117c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81180:	4906      	ldr	r1, [pc, #24]	; (8119c <pmc_switch_mck_to_pllack+0x60>)
   81182:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81184:	f012 0f08 	tst.w	r2, #8
   81188:	d105      	bne.n	81196 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8118a:	3b01      	subs	r3, #1
   8118c:	d1f9      	bne.n	81182 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   8118e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81190:	4770      	bx	lr
	return 0;
   81192:	2000      	movs	r0, #0
   81194:	4770      	bx	lr
   81196:	2000      	movs	r0, #0
   81198:	4770      	bx	lr
   8119a:	bf00      	nop
   8119c:	400e0400 	.word	0x400e0400

000811a0 <pmc_osc_enable_main_xtal>:
 *
 * \param ul_xtal_startup_time Xtal start-up time, in number of slow clocks.
 */
void pmc_osc_enable_main_xtal(uint32_t ul_xtal_startup_time)
{
	uint32_t mor = PMC->CKGR_MOR;
   811a0:	4a08      	ldr	r2, [pc, #32]	; (811c4 <pmc_osc_enable_main_xtal+0x24>)
   811a2:	6a13      	ldr	r3, [r2, #32]
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
   811a4:	f023 0303 	bic.w	r3, r3, #3
   811a8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   811ac:	f043 0301 	orr.w	r3, r3, #1
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   811b0:	0200      	lsls	r0, r0, #8
   811b2:	b280      	uxth	r0, r0
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   811b4:	4303      	orrs	r3, r0
	PMC->CKGR_MOR = mor;
   811b6:	6213      	str	r3, [r2, #32]
	/* Wait the main Xtal to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   811b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   811ba:	f013 0f01 	tst.w	r3, #1
   811be:	d0fb      	beq.n	811b8 <pmc_osc_enable_main_xtal+0x18>
}
   811c0:	4770      	bx	lr
   811c2:	bf00      	nop
   811c4:	400e0400 	.word	0x400e0400

000811c8 <pmc_osc_is_ready_main_xtal>:
 *
 * \retval 0 main crystal is not ready, otherwise ready.
 */
uint32_t pmc_osc_is_ready_main_xtal(void)
{
	return (PMC->PMC_SR & PMC_SR_MOSCXTS);
   811c8:	4b02      	ldr	r3, [pc, #8]	; (811d4 <pmc_osc_is_ready_main_xtal+0xc>)
   811ca:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   811cc:	f000 0001 	and.w	r0, r0, #1
   811d0:	4770      	bx	lr
   811d2:	bf00      	nop
   811d4:	400e0400 	.word	0x400e0400

000811d8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   811d8:	4b02      	ldr	r3, [pc, #8]	; (811e4 <pmc_osc_is_ready_mainck+0xc>)
   811da:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   811dc:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   811e0:	4770      	bx	lr
   811e2:	bf00      	nop
   811e4:	400e0400 	.word	0x400e0400

000811e8 <pmc_mainck_osc_select>:
 *
 * \param ul_xtal_rc 0 internal RC is selected, otherwise Main Crystal.
 */
void pmc_mainck_osc_select(uint32_t ul_xtal_rc)
{
	uint32_t mor = PMC->CKGR_MOR;
   811e8:	4b06      	ldr	r3, [pc, #24]	; (81204 <pmc_mainck_osc_select+0x1c>)
   811ea:	6a1b      	ldr	r3, [r3, #32]
	if (ul_xtal_rc) {
   811ec:	b930      	cbnz	r0, 811fc <pmc_mainck_osc_select+0x14>
		mor |=  CKGR_MOR_MOSCSEL;
	} else {
		mor &= ~CKGR_MOR_MOSCSEL;
   811ee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	}
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   811f2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   811f6:	4a03      	ldr	r2, [pc, #12]	; (81204 <pmc_mainck_osc_select+0x1c>)
   811f8:	6213      	str	r3, [r2, #32]
   811fa:	4770      	bx	lr
		mor |=  CKGR_MOR_MOSCSEL;
   811fc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   81200:	e7f7      	b.n	811f2 <pmc_mainck_osc_select+0xa>
   81202:	bf00      	nop
   81204:	400e0400 	.word	0x400e0400

00081208 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   81208:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8120c:	4b01      	ldr	r3, [pc, #4]	; (81214 <pmc_disable_pllack+0xc>)
   8120e:	629a      	str	r2, [r3, #40]	; 0x28
   81210:	4770      	bx	lr
   81212:	bf00      	nop
   81214:	400e0400 	.word	0x400e0400

00081218 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   81218:	4b02      	ldr	r3, [pc, #8]	; (81224 <pmc_is_locked_pllack+0xc>)
   8121a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   8121c:	f000 0002 	and.w	r0, r0, #2
   81220:	4770      	bx	lr
   81222:	bf00      	nop
   81224:	400e0400 	.word	0x400e0400

00081228 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   81228:	281d      	cmp	r0, #29
   8122a:	d80e      	bhi.n	8124a <pmc_enable_periph_clk+0x22>
		return 1;
	}

	if (ul_id < 32) {
   8122c:	281f      	cmp	r0, #31
   8122e:	d80e      	bhi.n	8124e <pmc_enable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81230:	4b09      	ldr	r3, [pc, #36]	; (81258 <pmc_enable_periph_clk+0x30>)
   81232:	699a      	ldr	r2, [r3, #24]
   81234:	2301      	movs	r3, #1
   81236:	4083      	lsls	r3, r0
   81238:	4393      	bics	r3, r2
   8123a:	d00a      	beq.n	81252 <pmc_enable_periph_clk+0x2a>
			PMC->PMC_PCER0 = 1 << ul_id;
   8123c:	2301      	movs	r3, #1
   8123e:	fa03 f000 	lsl.w	r0, r3, r0
   81242:	4b05      	ldr	r3, [pc, #20]	; (81258 <pmc_enable_periph_clk+0x30>)
   81244:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   81246:	2000      	movs	r0, #0
   81248:	4770      	bx	lr
		return 1;
   8124a:	2001      	movs	r0, #1
   8124c:	4770      	bx	lr
	return 0;
   8124e:	2000      	movs	r0, #0
   81250:	4770      	bx	lr
   81252:	2000      	movs	r0, #0
}
   81254:	4770      	bx	lr
   81256:	bf00      	nop
   81258:	400e0400 	.word	0x400e0400

0008125c <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
   8125c:	b921      	cbnz	r1, 81268 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
   8125e:	6843      	ldr	r3, [r0, #4]
   81260:	f023 0301 	bic.w	r3, r3, #1
   81264:	6043      	str	r3, [r0, #4]
   81266:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
   81268:	6843      	ldr	r3, [r0, #4]
   8126a:	f043 0301 	orr.w	r3, r3, #1
   8126e:	6043      	str	r3, [r0, #4]
   81270:	4770      	bx	lr

00081272 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
   81272:	6201      	str	r1, [r0, #32]
   81274:	4770      	bx	lr

00081276 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
   81276:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
   81278:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   8127a:	6884      	ldr	r4, [r0, #8]
   8127c:	42a5      	cmp	r5, r4
   8127e:	d003      	beq.n	81288 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
   81280:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
   81282:	6884      	ldr	r4, [r0, #8]
   81284:	42ac      	cmp	r4, r5
   81286:	d1fb      	bne.n	81280 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
   81288:	b161      	cbz	r1, 812a4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8128a:	f3c4 5001 	ubfx	r0, r4, #20, #2
   8128e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   81292:	f3c4 4003 	ubfx	r0, r4, #16, #4
   81296:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
   8129a:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
   8129e:	bf18      	it	ne
   812a0:	300c      	addne	r0, #12
   812a2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
   812a4:	b142      	cbz	r2, 812b8 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
   812a6:	f3c4 3102 	ubfx	r1, r4, #12, #3
   812aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   812ae:	f3c4 2003 	ubfx	r0, r4, #8, #4
   812b2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   812b6:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
   812b8:	b143      	cbz	r3, 812cc <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   812ba:	f3c4 1202 	ubfx	r2, r4, #4, #3
   812be:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   812c2:	f004 040f 	and.w	r4, r4, #15
   812c6:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   812ca:	601c      	str	r4, [r3, #0]
	}
}
   812cc:	bc30      	pop	{r4, r5}
   812ce:	4770      	bx	lr

000812d0 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
   812d0:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
   812d2:	6844      	ldr	r4, [r0, #4]
   812d4:	f014 0f01 	tst.w	r4, #1
   812d8:	d005      	beq.n	812e6 <rtc_set_time+0x16>
		if (ul_hour > 12) {
   812da:	290c      	cmp	r1, #12
   812dc:	d93d      	bls.n	8135a <rtc_set_time+0x8a>
			ul_hour -= 12;
   812de:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
   812e0:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   812e4:	e000      	b.n	812e8 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
   812e6:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   812e8:	4c1d      	ldr	r4, [pc, #116]	; (81360 <rtc_set_time+0x90>)
   812ea:	fba4 5603 	umull	r5, r6, r4, r3
   812ee:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
   812f0:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   812f4:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   812f8:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
   812fc:	fba4 6502 	umull	r6, r5, r4, r2
   81300:	08ed      	lsrs	r5, r5, #3
   81302:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
   81306:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8130a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   8130e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   81312:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
   81314:	fba4 4201 	umull	r4, r2, r4, r1
   81318:	08d2      	lsrs	r2, r2, #3
   8131a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
   8131e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   81322:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
   81326:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
   8132a:	6983      	ldr	r3, [r0, #24]
   8132c:	f013 0f04 	tst.w	r3, #4
   81330:	d0fb      	beq.n	8132a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
   81332:	6803      	ldr	r3, [r0, #0]
   81334:	f043 0301 	orr.w	r3, r3, #1
   81338:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
   8133a:	6983      	ldr	r3, [r0, #24]
   8133c:	f013 0f01 	tst.w	r3, #1
   81340:	d0fb      	beq.n	8133a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
   81342:	2301      	movs	r3, #1
   81344:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
   81346:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
   81348:	6803      	ldr	r3, [r0, #0]
   8134a:	f023 0301 	bic.w	r3, r3, #1
   8134e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
   81350:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
   81352:	f000 0001 	and.w	r0, r0, #1
   81356:	bcf0      	pop	{r4, r5, r6, r7}
   81358:	4770      	bx	lr
	uint32_t ul_time = 0;
   8135a:	2700      	movs	r7, #0
   8135c:	e7c4      	b.n	812e8 <rtc_set_time+0x18>
   8135e:	bf00      	nop
   81360:	cccccccd 	.word	0xcccccccd

00081364 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
   81364:	b4f0      	push	{r4, r5, r6, r7}
   81366:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
   81368:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   8136a:	68c4      	ldr	r4, [r0, #12]
   8136c:	42a5      	cmp	r5, r4
   8136e:	d003      	beq.n	81378 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
   81370:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
   81372:	68c4      	ldr	r4, [r0, #12]
   81374:	42ac      	cmp	r4, r5
   81376:	d1fb      	bne.n	81370 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
   81378:	b199      	cbz	r1, 813a2 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8137a:	f3c4 3003 	ubfx	r0, r4, #12, #4
   8137e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81382:	f3c4 2703 	ubfx	r7, r4, #8, #4
   81386:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8138a:	f3c4 1002 	ubfx	r0, r4, #4, #3
   8138e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   81392:	f004 000f 	and.w	r0, r4, #15
   81396:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   8139a:	2564      	movs	r5, #100	; 0x64
   8139c:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
   813a0:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
   813a2:	b142      	cbz	r2, 813b6 <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   813a4:	f3c4 5000 	ubfx	r0, r4, #20, #1
   813a8:	0081      	lsls	r1, r0, #2
   813aa:	4408      	add	r0, r1
   813ac:	f3c4 4103 	ubfx	r1, r4, #16, #4
   813b0:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   813b4:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
   813b6:	b143      	cbz	r3, 813ca <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
   813b8:	f3c4 7201 	ubfx	r2, r4, #28, #2
   813bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   813c0:	f3c4 6103 	ubfx	r1, r4, #24, #4
   813c4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   813c8:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
   813ca:	b116      	cbz	r6, 813d2 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
   813cc:	f3c4 5442 	ubfx	r4, r4, #21, #3
   813d0:	6034      	str	r4, [r6, #0]
	}
}
   813d2:	bcf0      	pop	{r4, r5, r6, r7}
   813d4:	4770      	bx	lr

000813d6 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   813d6:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   813d8:	0189      	lsls	r1, r1, #6
   813da:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   813dc:	2402      	movs	r4, #2
   813de:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   813e0:	f04f 31ff 	mov.w	r1, #4294967295
   813e4:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   813e6:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   813e8:	605a      	str	r2, [r3, #4]
}
   813ea:	bc10      	pop	{r4}
   813ec:	4770      	bx	lr

000813ee <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   813ee:	0189      	lsls	r1, r1, #6
   813f0:	2305      	movs	r3, #5
   813f2:	5043      	str	r3, [r0, r1]
   813f4:	4770      	bx	lr

000813f6 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   813f6:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   813fa:	614a      	str	r2, [r1, #20]
   813fc:	4770      	bx	lr

000813fe <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   813fe:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   81402:	61ca      	str	r2, [r1, #28]
   81404:	4770      	bx	lr

00081406 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   81406:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   8140a:	624a      	str	r2, [r1, #36]	; 0x24
   8140c:	4770      	bx	lr

0008140e <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   8140e:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   81412:	6a08      	ldr	r0, [r1, #32]
}
   81414:	4770      	bx	lr

00081416 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   81416:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   81418:	23ac      	movs	r3, #172	; 0xac
   8141a:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8141c:	680b      	ldr	r3, [r1, #0]
   8141e:	684a      	ldr	r2, [r1, #4]
   81420:	fbb3 f3f2 	udiv	r3, r3, r2
   81424:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   81426:	1e5c      	subs	r4, r3, #1
   81428:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8142c:	4294      	cmp	r4, r2
   8142e:	d80b      	bhi.n	81448 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   81430:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   81432:	688b      	ldr	r3, [r1, #8]
   81434:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   81436:	f240 2302 	movw	r3, #514	; 0x202
   8143a:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   8143e:	2350      	movs	r3, #80	; 0x50
   81440:	6003      	str	r3, [r0, #0]

	return 0;
   81442:	2000      	movs	r0, #0
}
   81444:	bc10      	pop	{r4}
   81446:	4770      	bx	lr
		return 1;
   81448:	2001      	movs	r0, #1
   8144a:	e7fb      	b.n	81444 <uart_init+0x2e>

0008144c <uart_enable_interrupt>:
 * \param p_uart Pointer to a UART instance.
 *  \param ul_sources Interrupts to be enabled.
 */
void uart_enable_interrupt(Uart *p_uart, uint32_t ul_sources)
{
	p_uart->UART_IER = ul_sources;
   8144c:	6081      	str	r1, [r0, #8]
   8144e:	4770      	bx	lr

00081450 <uart_disable_interrupt>:
 * \param p_uart Pointer to a UART instance.
 *  \param ul_sources Interrupts to be disabled.
 */
void uart_disable_interrupt(Uart *p_uart, uint32_t ul_sources)
{
	p_uart->UART_IDR = ul_sources;
   81450:	60c1      	str	r1, [r0, #12]
   81452:	4770      	bx	lr

00081454 <uart_get_status>:
 *
 * \return The current UART status.
 */
uint32_t uart_get_status(Uart *p_uart)
{
	return p_uart->UART_SR;
   81454:	6940      	ldr	r0, [r0, #20]
}
   81456:	4770      	bx	lr

00081458 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
   81458:	4770      	bx	lr
	...

0008145c <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   8145c:	4b0b      	ldr	r3, [pc, #44]	; (8148c <cpu_irq_enter_critical+0x30>)
   8145e:	681b      	ldr	r3, [r3, #0]
   81460:	b92b      	cbnz	r3, 8146e <cpu_irq_enter_critical+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81462:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
   81466:	b13b      	cbz	r3, 81478 <cpu_irq_enter_critical+0x1c>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   81468:	2200      	movs	r2, #0
   8146a:	4b09      	ldr	r3, [pc, #36]	; (81490 <cpu_irq_enter_critical+0x34>)
   8146c:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   8146e:	4a07      	ldr	r2, [pc, #28]	; (8148c <cpu_irq_enter_critical+0x30>)
   81470:	6813      	ldr	r3, [r2, #0]
   81472:	3301      	adds	r3, #1
   81474:	6013      	str	r3, [r2, #0]
   81476:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
   81478:	b672      	cpsid	i
   8147a:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
   8147e:	2200      	movs	r2, #0
   81480:	4b04      	ldr	r3, [pc, #16]	; (81494 <cpu_irq_enter_critical+0x38>)
   81482:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
   81484:	2201      	movs	r2, #1
   81486:	4b02      	ldr	r3, [pc, #8]	; (81490 <cpu_irq_enter_critical+0x34>)
   81488:	701a      	strb	r2, [r3, #0]
   8148a:	e7f0      	b.n	8146e <cpu_irq_enter_critical+0x12>
   8148c:	20000fb0 	.word	0x20000fb0
   81490:	20000fb4 	.word	0x20000fb4
   81494:	20000574 	.word	0x20000574

00081498 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   81498:	4b07      	ldr	r3, [pc, #28]	; (814b8 <cpu_irq_leave_critical+0x20>)
   8149a:	681a      	ldr	r2, [r3, #0]
   8149c:	3a01      	subs	r2, #1
   8149e:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   814a0:	681b      	ldr	r3, [r3, #0]
   814a2:	b943      	cbnz	r3, 814b6 <cpu_irq_leave_critical+0x1e>
   814a4:	4b05      	ldr	r3, [pc, #20]	; (814bc <cpu_irq_leave_critical+0x24>)
   814a6:	781b      	ldrb	r3, [r3, #0]
   814a8:	b12b      	cbz	r3, 814b6 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   814aa:	2201      	movs	r2, #1
   814ac:	4b04      	ldr	r3, [pc, #16]	; (814c0 <cpu_irq_leave_critical+0x28>)
   814ae:	701a      	strb	r2, [r3, #0]
   814b0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   814b4:	b662      	cpsie	i
   814b6:	4770      	bx	lr
   814b8:	20000fb0 	.word	0x20000fb0
   814bc:	20000fb4 	.word	0x20000fb4
   814c0:	20000574 	.word	0x20000574

000814c4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   814c4:	e7fe      	b.n	814c4 <Dummy_Handler>
	...

000814c8 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   814c8:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   814ca:	4b1c      	ldr	r3, [pc, #112]	; (8153c <Reset_Handler+0x74>)
   814cc:	4a1c      	ldr	r2, [pc, #112]	; (81540 <Reset_Handler+0x78>)
   814ce:	429a      	cmp	r2, r3
   814d0:	d010      	beq.n	814f4 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   814d2:	4b1c      	ldr	r3, [pc, #112]	; (81544 <Reset_Handler+0x7c>)
   814d4:	4a19      	ldr	r2, [pc, #100]	; (8153c <Reset_Handler+0x74>)
   814d6:	429a      	cmp	r2, r3
   814d8:	d20c      	bcs.n	814f4 <Reset_Handler+0x2c>
   814da:	3b01      	subs	r3, #1
   814dc:	1a9b      	subs	r3, r3, r2
   814de:	f023 0303 	bic.w	r3, r3, #3
   814e2:	3304      	adds	r3, #4
   814e4:	4413      	add	r3, r2
   814e6:	4916      	ldr	r1, [pc, #88]	; (81540 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   814e8:	f851 0b04 	ldr.w	r0, [r1], #4
   814ec:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   814f0:	429a      	cmp	r2, r3
   814f2:	d1f9      	bne.n	814e8 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   814f4:	4b14      	ldr	r3, [pc, #80]	; (81548 <Reset_Handler+0x80>)
   814f6:	4a15      	ldr	r2, [pc, #84]	; (8154c <Reset_Handler+0x84>)
   814f8:	429a      	cmp	r2, r3
   814fa:	d20a      	bcs.n	81512 <Reset_Handler+0x4a>
   814fc:	3b01      	subs	r3, #1
   814fe:	1a9b      	subs	r3, r3, r2
   81500:	f023 0303 	bic.w	r3, r3, #3
   81504:	3304      	adds	r3, #4
   81506:	4413      	add	r3, r2
		*pDest++ = 0;
   81508:	2100      	movs	r1, #0
   8150a:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   8150e:	4293      	cmp	r3, r2
   81510:	d1fb      	bne.n	8150a <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81512:	4b0f      	ldr	r3, [pc, #60]	; (81550 <Reset_Handler+0x88>)
   81514:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   81518:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   8151c:	490d      	ldr	r1, [pc, #52]	; (81554 <Reset_Handler+0x8c>)
   8151e:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   81520:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81524:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
   81528:	d203      	bcs.n	81532 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8152a:	688b      	ldr	r3, [r1, #8]
   8152c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81530:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81532:	4b09      	ldr	r3, [pc, #36]	; (81558 <Reset_Handler+0x90>)
   81534:	4798      	blx	r3

	/* Branch to main function */
	main();
   81536:	4b09      	ldr	r3, [pc, #36]	; (8155c <Reset_Handler+0x94>)
   81538:	4798      	blx	r3
   8153a:	e7fe      	b.n	8153a <Reset_Handler+0x72>
   8153c:	20000000 	.word	0x20000000
   81540:	000863ac 	.word	0x000863ac
   81544:	20000f24 	.word	0x20000f24
   81548:	20001568 	.word	0x20001568
   8154c:	20000f24 	.word	0x20000f24
   81550:	00080000 	.word	0x00080000
   81554:	e000ed00 	.word	0xe000ed00
   81558:	000816b1 	.word	0x000816b1
   8155c:	00080e85 	.word	0x00080e85

00081560 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81560:	4b3d      	ldr	r3, [pc, #244]	; (81658 <SystemCoreClockUpdate+0xf8>)
   81562:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81564:	f003 0303 	and.w	r3, r3, #3
   81568:	2b03      	cmp	r3, #3
   8156a:	d80e      	bhi.n	8158a <SystemCoreClockUpdate+0x2a>
   8156c:	e8df f003 	tbb	[pc, r3]
   81570:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   81574:	4b39      	ldr	r3, [pc, #228]	; (8165c <SystemCoreClockUpdate+0xfc>)
   81576:	695b      	ldr	r3, [r3, #20]
   81578:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   8157c:	bf14      	ite	ne
   8157e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   81582:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   81586:	4b36      	ldr	r3, [pc, #216]	; (81660 <SystemCoreClockUpdate+0x100>)
   81588:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   8158a:	4b33      	ldr	r3, [pc, #204]	; (81658 <SystemCoreClockUpdate+0xf8>)
   8158c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8158e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81592:	2b70      	cmp	r3, #112	; 0x70
   81594:	d057      	beq.n	81646 <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81596:	4b30      	ldr	r3, [pc, #192]	; (81658 <SystemCoreClockUpdate+0xf8>)
   81598:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   8159a:	4931      	ldr	r1, [pc, #196]	; (81660 <SystemCoreClockUpdate+0x100>)
   8159c:	f3c2 1202 	ubfx	r2, r2, #4, #3
   815a0:	680b      	ldr	r3, [r1, #0]
   815a2:	40d3      	lsrs	r3, r2
   815a4:	600b      	str	r3, [r1, #0]
   815a6:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   815a8:	4b2b      	ldr	r3, [pc, #172]	; (81658 <SystemCoreClockUpdate+0xf8>)
   815aa:	6a1b      	ldr	r3, [r3, #32]
   815ac:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   815b0:	d003      	beq.n	815ba <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   815b2:	4a2c      	ldr	r2, [pc, #176]	; (81664 <SystemCoreClockUpdate+0x104>)
   815b4:	4b2a      	ldr	r3, [pc, #168]	; (81660 <SystemCoreClockUpdate+0x100>)
   815b6:	601a      	str	r2, [r3, #0]
   815b8:	e7e7      	b.n	8158a <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   815ba:	4a2b      	ldr	r2, [pc, #172]	; (81668 <SystemCoreClockUpdate+0x108>)
   815bc:	4b28      	ldr	r3, [pc, #160]	; (81660 <SystemCoreClockUpdate+0x100>)
   815be:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   815c0:	4b25      	ldr	r3, [pc, #148]	; (81658 <SystemCoreClockUpdate+0xf8>)
   815c2:	6a1b      	ldr	r3, [r3, #32]
   815c4:	f003 0370 	and.w	r3, r3, #112	; 0x70
   815c8:	2b10      	cmp	r3, #16
   815ca:	d005      	beq.n	815d8 <SystemCoreClockUpdate+0x78>
   815cc:	2b20      	cmp	r3, #32
   815ce:	d1dc      	bne.n	8158a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   815d0:	4a24      	ldr	r2, [pc, #144]	; (81664 <SystemCoreClockUpdate+0x104>)
   815d2:	4b23      	ldr	r3, [pc, #140]	; (81660 <SystemCoreClockUpdate+0x100>)
   815d4:	601a      	str	r2, [r3, #0]
				break;
   815d6:	e7d8      	b.n	8158a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   815d8:	4a24      	ldr	r2, [pc, #144]	; (8166c <SystemCoreClockUpdate+0x10c>)
   815da:	4b21      	ldr	r3, [pc, #132]	; (81660 <SystemCoreClockUpdate+0x100>)
   815dc:	601a      	str	r2, [r3, #0]
				break;
   815de:	e7d4      	b.n	8158a <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   815e0:	4b1d      	ldr	r3, [pc, #116]	; (81658 <SystemCoreClockUpdate+0xf8>)
   815e2:	6a1b      	ldr	r3, [r3, #32]
   815e4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   815e8:	d00c      	beq.n	81604 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   815ea:	4a1e      	ldr	r2, [pc, #120]	; (81664 <SystemCoreClockUpdate+0x104>)
   815ec:	4b1c      	ldr	r3, [pc, #112]	; (81660 <SystemCoreClockUpdate+0x100>)
   815ee:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   815f0:	4b19      	ldr	r3, [pc, #100]	; (81658 <SystemCoreClockUpdate+0xf8>)
   815f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   815f4:	f003 0303 	and.w	r3, r3, #3
   815f8:	2b02      	cmp	r3, #2
   815fa:	d016      	beq.n	8162a <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   815fc:	4a1c      	ldr	r2, [pc, #112]	; (81670 <SystemCoreClockUpdate+0x110>)
   815fe:	4b18      	ldr	r3, [pc, #96]	; (81660 <SystemCoreClockUpdate+0x100>)
   81600:	601a      	str	r2, [r3, #0]
   81602:	e7c2      	b.n	8158a <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81604:	4a18      	ldr	r2, [pc, #96]	; (81668 <SystemCoreClockUpdate+0x108>)
   81606:	4b16      	ldr	r3, [pc, #88]	; (81660 <SystemCoreClockUpdate+0x100>)
   81608:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8160a:	4b13      	ldr	r3, [pc, #76]	; (81658 <SystemCoreClockUpdate+0xf8>)
   8160c:	6a1b      	ldr	r3, [r3, #32]
   8160e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81612:	2b10      	cmp	r3, #16
   81614:	d005      	beq.n	81622 <SystemCoreClockUpdate+0xc2>
   81616:	2b20      	cmp	r3, #32
   81618:	d1ea      	bne.n	815f0 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   8161a:	4a12      	ldr	r2, [pc, #72]	; (81664 <SystemCoreClockUpdate+0x104>)
   8161c:	4b10      	ldr	r3, [pc, #64]	; (81660 <SystemCoreClockUpdate+0x100>)
   8161e:	601a      	str	r2, [r3, #0]
				break;
   81620:	e7e6      	b.n	815f0 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   81622:	4a12      	ldr	r2, [pc, #72]	; (8166c <SystemCoreClockUpdate+0x10c>)
   81624:	4b0e      	ldr	r3, [pc, #56]	; (81660 <SystemCoreClockUpdate+0x100>)
   81626:	601a      	str	r2, [r3, #0]
				break;
   81628:	e7e2      	b.n	815f0 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8162a:	4a0b      	ldr	r2, [pc, #44]	; (81658 <SystemCoreClockUpdate+0xf8>)
   8162c:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   8162e:	6a92      	ldr	r2, [r2, #40]	; 0x28
   81630:	480b      	ldr	r0, [pc, #44]	; (81660 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81632:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81636:	6803      	ldr	r3, [r0, #0]
   81638:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   8163c:	b2d2      	uxtb	r2, r2
   8163e:	fbb3 f3f2 	udiv	r3, r3, r2
   81642:	6003      	str	r3, [r0, #0]
   81644:	e7a1      	b.n	8158a <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   81646:	4a06      	ldr	r2, [pc, #24]	; (81660 <SystemCoreClockUpdate+0x100>)
   81648:	6813      	ldr	r3, [r2, #0]
   8164a:	490a      	ldr	r1, [pc, #40]	; (81674 <SystemCoreClockUpdate+0x114>)
   8164c:	fba1 1303 	umull	r1, r3, r1, r3
   81650:	085b      	lsrs	r3, r3, #1
   81652:	6013      	str	r3, [r2, #0]
   81654:	4770      	bx	lr
   81656:	bf00      	nop
   81658:	400e0400 	.word	0x400e0400
   8165c:	400e1210 	.word	0x400e1210
   81660:	20000578 	.word	0x20000578
   81664:	00b71b00 	.word	0x00b71b00
   81668:	003d0900 	.word	0x003d0900
   8166c:	007a1200 	.word	0x007a1200
   81670:	0e4e1c00 	.word	0x0e4e1c00
   81674:	aaaaaaab 	.word	0xaaaaaaab

00081678 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81678:	4b0a      	ldr	r3, [pc, #40]	; (816a4 <_sbrk+0x2c>)
   8167a:	681b      	ldr	r3, [r3, #0]
   8167c:	b153      	cbz	r3, 81694 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   8167e:	4b09      	ldr	r3, [pc, #36]	; (816a4 <_sbrk+0x2c>)
   81680:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81682:	181a      	adds	r2, r3, r0
   81684:	4908      	ldr	r1, [pc, #32]	; (816a8 <_sbrk+0x30>)
   81686:	4291      	cmp	r1, r2
   81688:	db08      	blt.n	8169c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   8168a:	4610      	mov	r0, r2
   8168c:	4a05      	ldr	r2, [pc, #20]	; (816a4 <_sbrk+0x2c>)
   8168e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81690:	4618      	mov	r0, r3
   81692:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   81694:	4a05      	ldr	r2, [pc, #20]	; (816ac <_sbrk+0x34>)
   81696:	4b03      	ldr	r3, [pc, #12]	; (816a4 <_sbrk+0x2c>)
   81698:	601a      	str	r2, [r3, #0]
   8169a:	e7f0      	b.n	8167e <_sbrk+0x6>
		return (caddr_t) -1;	
   8169c:	f04f 30ff 	mov.w	r0, #4294967295
}
   816a0:	4770      	bx	lr
   816a2:	bf00      	nop
   816a4:	20000fb8 	.word	0x20000fb8
   816a8:	20083ffc 	.word	0x20083ffc
   816ac:	20084000 	.word	0x20084000

000816b0 <__libc_init_array>:
   816b0:	b570      	push	{r4, r5, r6, lr}
   816b2:	4e0f      	ldr	r6, [pc, #60]	; (816f0 <__libc_init_array+0x40>)
   816b4:	4d0f      	ldr	r5, [pc, #60]	; (816f4 <__libc_init_array+0x44>)
   816b6:	1b76      	subs	r6, r6, r5
   816b8:	10b6      	asrs	r6, r6, #2
   816ba:	bf18      	it	ne
   816bc:	2400      	movne	r4, #0
   816be:	d005      	beq.n	816cc <__libc_init_array+0x1c>
   816c0:	3401      	adds	r4, #1
   816c2:	f855 3b04 	ldr.w	r3, [r5], #4
   816c6:	4798      	blx	r3
   816c8:	42a6      	cmp	r6, r4
   816ca:	d1f9      	bne.n	816c0 <__libc_init_array+0x10>
   816cc:	4e0a      	ldr	r6, [pc, #40]	; (816f8 <__libc_init_array+0x48>)
   816ce:	4d0b      	ldr	r5, [pc, #44]	; (816fc <__libc_init_array+0x4c>)
   816d0:	f004 fe56 	bl	86380 <_init>
   816d4:	1b76      	subs	r6, r6, r5
   816d6:	10b6      	asrs	r6, r6, #2
   816d8:	bf18      	it	ne
   816da:	2400      	movne	r4, #0
   816dc:	d006      	beq.n	816ec <__libc_init_array+0x3c>
   816de:	3401      	adds	r4, #1
   816e0:	f855 3b04 	ldr.w	r3, [r5], #4
   816e4:	4798      	blx	r3
   816e6:	42a6      	cmp	r6, r4
   816e8:	d1f9      	bne.n	816de <__libc_init_array+0x2e>
   816ea:	bd70      	pop	{r4, r5, r6, pc}
   816ec:	bd70      	pop	{r4, r5, r6, pc}
   816ee:	bf00      	nop
   816f0:	0008638c 	.word	0x0008638c
   816f4:	0008638c 	.word	0x0008638c
   816f8:	00086394 	.word	0x00086394
   816fc:	0008638c 	.word	0x0008638c

00081700 <memset>:
   81700:	b470      	push	{r4, r5, r6}
   81702:	0786      	lsls	r6, r0, #30
   81704:	d046      	beq.n	81794 <memset+0x94>
   81706:	1e54      	subs	r4, r2, #1
   81708:	2a00      	cmp	r2, #0
   8170a:	d041      	beq.n	81790 <memset+0x90>
   8170c:	b2ca      	uxtb	r2, r1
   8170e:	4603      	mov	r3, r0
   81710:	e002      	b.n	81718 <memset+0x18>
   81712:	f114 34ff 	adds.w	r4, r4, #4294967295
   81716:	d33b      	bcc.n	81790 <memset+0x90>
   81718:	f803 2b01 	strb.w	r2, [r3], #1
   8171c:	079d      	lsls	r5, r3, #30
   8171e:	d1f8      	bne.n	81712 <memset+0x12>
   81720:	2c03      	cmp	r4, #3
   81722:	d92e      	bls.n	81782 <memset+0x82>
   81724:	b2cd      	uxtb	r5, r1
   81726:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8172a:	2c0f      	cmp	r4, #15
   8172c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81730:	d919      	bls.n	81766 <memset+0x66>
   81732:	4626      	mov	r6, r4
   81734:	f103 0210 	add.w	r2, r3, #16
   81738:	3e10      	subs	r6, #16
   8173a:	2e0f      	cmp	r6, #15
   8173c:	f842 5c10 	str.w	r5, [r2, #-16]
   81740:	f842 5c0c 	str.w	r5, [r2, #-12]
   81744:	f842 5c08 	str.w	r5, [r2, #-8]
   81748:	f842 5c04 	str.w	r5, [r2, #-4]
   8174c:	f102 0210 	add.w	r2, r2, #16
   81750:	d8f2      	bhi.n	81738 <memset+0x38>
   81752:	f1a4 0210 	sub.w	r2, r4, #16
   81756:	f022 020f 	bic.w	r2, r2, #15
   8175a:	f004 040f 	and.w	r4, r4, #15
   8175e:	3210      	adds	r2, #16
   81760:	2c03      	cmp	r4, #3
   81762:	4413      	add	r3, r2
   81764:	d90d      	bls.n	81782 <memset+0x82>
   81766:	461e      	mov	r6, r3
   81768:	4622      	mov	r2, r4
   8176a:	3a04      	subs	r2, #4
   8176c:	2a03      	cmp	r2, #3
   8176e:	f846 5b04 	str.w	r5, [r6], #4
   81772:	d8fa      	bhi.n	8176a <memset+0x6a>
   81774:	1f22      	subs	r2, r4, #4
   81776:	f022 0203 	bic.w	r2, r2, #3
   8177a:	3204      	adds	r2, #4
   8177c:	4413      	add	r3, r2
   8177e:	f004 0403 	and.w	r4, r4, #3
   81782:	b12c      	cbz	r4, 81790 <memset+0x90>
   81784:	b2c9      	uxtb	r1, r1
   81786:	441c      	add	r4, r3
   81788:	f803 1b01 	strb.w	r1, [r3], #1
   8178c:	429c      	cmp	r4, r3
   8178e:	d1fb      	bne.n	81788 <memset+0x88>
   81790:	bc70      	pop	{r4, r5, r6}
   81792:	4770      	bx	lr
   81794:	4614      	mov	r4, r2
   81796:	4603      	mov	r3, r0
   81798:	e7c2      	b.n	81720 <memset+0x20>
   8179a:	bf00      	nop

0008179c <sprintf>:
   8179c:	b40e      	push	{r1, r2, r3}
   8179e:	4601      	mov	r1, r0
   817a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   817a2:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   817a6:	f44f 7702 	mov.w	r7, #520	; 0x208
   817aa:	f64f 76ff 	movw	r6, #65535	; 0xffff
   817ae:	b09c      	sub	sp, #112	; 0x70
   817b0:	ac21      	add	r4, sp, #132	; 0x84
   817b2:	f854 2b04 	ldr.w	r2, [r4], #4
   817b6:	4b0b      	ldr	r3, [pc, #44]	; (817e4 <sprintf+0x48>)
   817b8:	9102      	str	r1, [sp, #8]
   817ba:	9106      	str	r1, [sp, #24]
   817bc:	6818      	ldr	r0, [r3, #0]
   817be:	a902      	add	r1, sp, #8
   817c0:	4623      	mov	r3, r4
   817c2:	9401      	str	r4, [sp, #4]
   817c4:	f8ad 7014 	strh.w	r7, [sp, #20]
   817c8:	9504      	str	r5, [sp, #16]
   817ca:	9507      	str	r5, [sp, #28]
   817cc:	f8ad 6016 	strh.w	r6, [sp, #22]
   817d0:	f000 f872 	bl	818b8 <_svfprintf_r>
   817d4:	2200      	movs	r2, #0
   817d6:	9b02      	ldr	r3, [sp, #8]
   817d8:	701a      	strb	r2, [r3, #0]
   817da:	b01c      	add	sp, #112	; 0x70
   817dc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   817e0:	b003      	add	sp, #12
   817e2:	4770      	bx	lr
   817e4:	2000057c 	.word	0x2000057c

000817e8 <strlen>:
   817e8:	f020 0103 	bic.w	r1, r0, #3
   817ec:	f010 0003 	ands.w	r0, r0, #3
   817f0:	f1c0 0000 	rsb	r0, r0, #0
   817f4:	f851 3b04 	ldr.w	r3, [r1], #4
   817f8:	f100 0c04 	add.w	ip, r0, #4
   817fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81800:	f06f 0200 	mvn.w	r2, #0
   81804:	bf1c      	itt	ne
   81806:	fa22 f20c 	lsrne.w	r2, r2, ip
   8180a:	4313      	orrne	r3, r2
   8180c:	f04f 0c01 	mov.w	ip, #1
   81810:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81814:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81818:	eba3 020c 	sub.w	r2, r3, ip
   8181c:	ea22 0203 	bic.w	r2, r2, r3
   81820:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81824:	bf04      	itt	eq
   81826:	f851 3b04 	ldreq.w	r3, [r1], #4
   8182a:	3004      	addeq	r0, #4
   8182c:	d0f4      	beq.n	81818 <strlen+0x30>
   8182e:	f1c2 0100 	rsb	r1, r2, #0
   81832:	ea02 0201 	and.w	r2, r2, r1
   81836:	fab2 f282 	clz	r2, r2
   8183a:	f1c2 021f 	rsb	r2, r2, #31
   8183e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81842:	4770      	bx	lr

00081844 <strtok>:
   81844:	4a02      	ldr	r2, [pc, #8]	; (81850 <strtok+0xc>)
   81846:	2301      	movs	r3, #1
   81848:	6812      	ldr	r2, [r2, #0]
   8184a:	325c      	adds	r2, #92	; 0x5c
   8184c:	f000 b802 	b.w	81854 <__strtok_r>
   81850:	2000057c 	.word	0x2000057c

00081854 <__strtok_r>:
   81854:	b4f0      	push	{r4, r5, r6, r7}
   81856:	b318      	cbz	r0, 818a0 <__strtok_r+0x4c>
   81858:	4607      	mov	r7, r0
   8185a:	460d      	mov	r5, r1
   8185c:	f817 6b01 	ldrb.w	r6, [r7], #1
   81860:	e001      	b.n	81866 <__strtok_r+0x12>
   81862:	42a6      	cmp	r6, r4
   81864:	d017      	beq.n	81896 <__strtok_r+0x42>
   81866:	f815 4b01 	ldrb.w	r4, [r5], #1
   8186a:	2c00      	cmp	r4, #0
   8186c:	d1f9      	bne.n	81862 <__strtok_r+0xe>
   8186e:	b1e6      	cbz	r6, 818aa <__strtok_r+0x56>
   81870:	460c      	mov	r4, r1
   81872:	f817 5b01 	ldrb.w	r5, [r7], #1
   81876:	e001      	b.n	8187c <__strtok_r+0x28>
   81878:	2b00      	cmp	r3, #0
   8187a:	d0f9      	beq.n	81870 <__strtok_r+0x1c>
   8187c:	f814 3b01 	ldrb.w	r3, [r4], #1
   81880:	429d      	cmp	r5, r3
   81882:	d1f9      	bne.n	81878 <__strtok_r+0x24>
   81884:	b155      	cbz	r5, 8189c <__strtok_r+0x48>
   81886:	2300      	movs	r3, #0
   81888:	f807 3c01 	strb.w	r3, [r7, #-1]
   8188c:	4606      	mov	r6, r0
   8188e:	6017      	str	r7, [r2, #0]
   81890:	4630      	mov	r0, r6
   81892:	bcf0      	pop	{r4, r5, r6, r7}
   81894:	4770      	bx	lr
   81896:	b153      	cbz	r3, 818ae <__strtok_r+0x5a>
   81898:	4638      	mov	r0, r7
   8189a:	e7dd      	b.n	81858 <__strtok_r+0x4>
   8189c:	462f      	mov	r7, r5
   8189e:	e7f5      	b.n	8188c <__strtok_r+0x38>
   818a0:	6810      	ldr	r0, [r2, #0]
   818a2:	2800      	cmp	r0, #0
   818a4:	d1d8      	bne.n	81858 <__strtok_r+0x4>
   818a6:	4606      	mov	r6, r0
   818a8:	e7f2      	b.n	81890 <__strtok_r+0x3c>
   818aa:	6016      	str	r6, [r2, #0]
   818ac:	e7f0      	b.n	81890 <__strtok_r+0x3c>
   818ae:	6017      	str	r7, [r2, #0]
   818b0:	4606      	mov	r6, r0
   818b2:	7003      	strb	r3, [r0, #0]
   818b4:	e7ec      	b.n	81890 <__strtok_r+0x3c>
   818b6:	bf00      	nop

000818b8 <_svfprintf_r>:
   818b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   818bc:	b0c3      	sub	sp, #268	; 0x10c
   818be:	460c      	mov	r4, r1
   818c0:	910b      	str	r1, [sp, #44]	; 0x2c
   818c2:	4692      	mov	sl, r2
   818c4:	930f      	str	r3, [sp, #60]	; 0x3c
   818c6:	900c      	str	r0, [sp, #48]	; 0x30
   818c8:	f002 fa52 	bl	83d70 <_localeconv_r>
   818cc:	6803      	ldr	r3, [r0, #0]
   818ce:	4618      	mov	r0, r3
   818d0:	931a      	str	r3, [sp, #104]	; 0x68
   818d2:	f7ff ff89 	bl	817e8 <strlen>
   818d6:	89a3      	ldrh	r3, [r4, #12]
   818d8:	9019      	str	r0, [sp, #100]	; 0x64
   818da:	0619      	lsls	r1, r3, #24
   818dc:	d503      	bpl.n	818e6 <_svfprintf_r+0x2e>
   818de:	6923      	ldr	r3, [r4, #16]
   818e0:	2b00      	cmp	r3, #0
   818e2:	f001 8031 	beq.w	82948 <_svfprintf_r+0x1090>
   818e6:	2300      	movs	r3, #0
   818e8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   818ec:	46c8      	mov	r8, r9
   818ee:	9314      	str	r3, [sp, #80]	; 0x50
   818f0:	9313      	str	r3, [sp, #76]	; 0x4c
   818f2:	9315      	str	r3, [sp, #84]	; 0x54
   818f4:	9318      	str	r3, [sp, #96]	; 0x60
   818f6:	931b      	str	r3, [sp, #108]	; 0x6c
   818f8:	9309      	str	r3, [sp, #36]	; 0x24
   818fa:	9316      	str	r3, [sp, #88]	; 0x58
   818fc:	9317      	str	r3, [sp, #92]	; 0x5c
   818fe:	9327      	str	r3, [sp, #156]	; 0x9c
   81900:	9326      	str	r3, [sp, #152]	; 0x98
   81902:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   81906:	f89a 3000 	ldrb.w	r3, [sl]
   8190a:	4654      	mov	r4, sl
   8190c:	b1eb      	cbz	r3, 8194a <_svfprintf_r+0x92>
   8190e:	2b25      	cmp	r3, #37	; 0x25
   81910:	d102      	bne.n	81918 <_svfprintf_r+0x60>
   81912:	e01a      	b.n	8194a <_svfprintf_r+0x92>
   81914:	2b25      	cmp	r3, #37	; 0x25
   81916:	d003      	beq.n	81920 <_svfprintf_r+0x68>
   81918:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   8191c:	2b00      	cmp	r3, #0
   8191e:	d1f9      	bne.n	81914 <_svfprintf_r+0x5c>
   81920:	eba4 050a 	sub.w	r5, r4, sl
   81924:	b18d      	cbz	r5, 8194a <_svfprintf_r+0x92>
   81926:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81928:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8192a:	3301      	adds	r3, #1
   8192c:	442a      	add	r2, r5
   8192e:	2b07      	cmp	r3, #7
   81930:	f8c8 a000 	str.w	sl, [r8]
   81934:	f8c8 5004 	str.w	r5, [r8, #4]
   81938:	9227      	str	r2, [sp, #156]	; 0x9c
   8193a:	9326      	str	r3, [sp, #152]	; 0x98
   8193c:	f300 808a 	bgt.w	81a54 <_svfprintf_r+0x19c>
   81940:	f108 0808 	add.w	r8, r8, #8
   81944:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81946:	442b      	add	r3, r5
   81948:	9309      	str	r3, [sp, #36]	; 0x24
   8194a:	7823      	ldrb	r3, [r4, #0]
   8194c:	2b00      	cmp	r3, #0
   8194e:	f000 8089 	beq.w	81a64 <_svfprintf_r+0x1ac>
   81952:	2300      	movs	r3, #0
   81954:	f04f 30ff 	mov.w	r0, #4294967295
   81958:	461a      	mov	r2, r3
   8195a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8195e:	4619      	mov	r1, r3
   81960:	930d      	str	r3, [sp, #52]	; 0x34
   81962:	469b      	mov	fp, r3
   81964:	7863      	ldrb	r3, [r4, #1]
   81966:	f104 0a01 	add.w	sl, r4, #1
   8196a:	900a      	str	r0, [sp, #40]	; 0x28
   8196c:	f10a 0a01 	add.w	sl, sl, #1
   81970:	f1a3 0020 	sub.w	r0, r3, #32
   81974:	2858      	cmp	r0, #88	; 0x58
   81976:	f200 83b6 	bhi.w	820e6 <_svfprintf_r+0x82e>
   8197a:	e8df f010 	tbh	[pc, r0, lsl #1]
   8197e:	034b      	.short	0x034b
   81980:	03b403b4 	.word	0x03b403b4
   81984:	03b40353 	.word	0x03b40353
   81988:	03b403b4 	.word	0x03b403b4
   8198c:	03b403b4 	.word	0x03b403b4
   81990:	005903b4 	.word	0x005903b4
   81994:	03b40358 	.word	0x03b40358
   81998:	02140066 	.word	0x02140066
   8199c:	022f03b4 	.word	0x022f03b4
   819a0:	03a403a4 	.word	0x03a403a4
   819a4:	03a403a4 	.word	0x03a403a4
   819a8:	03a403a4 	.word	0x03a403a4
   819ac:	03a403a4 	.word	0x03a403a4
   819b0:	03b403a4 	.word	0x03b403a4
   819b4:	03b403b4 	.word	0x03b403b4
   819b8:	03b403b4 	.word	0x03b403b4
   819bc:	03b403b4 	.word	0x03b403b4
   819c0:	03b403b4 	.word	0x03b403b4
   819c4:	028b03b4 	.word	0x028b03b4
   819c8:	03b402d3 	.word	0x03b402d3
   819cc:	03b402d3 	.word	0x03b402d3
   819d0:	03b403b4 	.word	0x03b403b4
   819d4:	031a03b4 	.word	0x031a03b4
   819d8:	03b403b4 	.word	0x03b403b4
   819dc:	03b4031f 	.word	0x03b4031f
   819e0:	03b403b4 	.word	0x03b403b4
   819e4:	03b403b4 	.word	0x03b403b4
   819e8:	03b40234 	.word	0x03b40234
   819ec:	024b03b4 	.word	0x024b03b4
   819f0:	03b403b4 	.word	0x03b403b4
   819f4:	03b403b4 	.word	0x03b403b4
   819f8:	03b403b4 	.word	0x03b403b4
   819fc:	03b403b4 	.word	0x03b403b4
   81a00:	03b403b4 	.word	0x03b403b4
   81a04:	039d0276 	.word	0x039d0276
   81a08:	02d302d3 	.word	0x02d302d3
   81a0c:	036202d3 	.word	0x036202d3
   81a10:	03b4039d 	.word	0x03b4039d
   81a14:	036703b4 	.word	0x036703b4
   81a18:	037403b4 	.word	0x037403b4
   81a1c:	038b01dd 	.word	0x038b01dd
   81a20:	03b4035d 	.word	0x03b4035d
   81a24:	03b401f2 	.word	0x03b401f2
   81a28:	03b40087 	.word	0x03b40087
   81a2c:	033103b4 	.word	0x033103b4
   81a30:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81a32:	6823      	ldr	r3, [r4, #0]
   81a34:	4618      	mov	r0, r3
   81a36:	930d      	str	r3, [sp, #52]	; 0x34
   81a38:	4623      	mov	r3, r4
   81a3a:	2800      	cmp	r0, #0
   81a3c:	f103 0304 	add.w	r3, r3, #4
   81a40:	930f      	str	r3, [sp, #60]	; 0x3c
   81a42:	da04      	bge.n	81a4e <_svfprintf_r+0x196>
   81a44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81a46:	425b      	negs	r3, r3
   81a48:	930d      	str	r3, [sp, #52]	; 0x34
   81a4a:	f04b 0b04 	orr.w	fp, fp, #4
   81a4e:	f89a 3000 	ldrb.w	r3, [sl]
   81a52:	e78b      	b.n	8196c <_svfprintf_r+0xb4>
   81a54:	aa25      	add	r2, sp, #148	; 0x94
   81a56:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81a58:	980c      	ldr	r0, [sp, #48]	; 0x30
   81a5a:	f003 f81d 	bl	84a98 <__ssprint_r>
   81a5e:	b940      	cbnz	r0, 81a72 <_svfprintf_r+0x1ba>
   81a60:	46c8      	mov	r8, r9
   81a62:	e76f      	b.n	81944 <_svfprintf_r+0x8c>
   81a64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a66:	b123      	cbz	r3, 81a72 <_svfprintf_r+0x1ba>
   81a68:	980c      	ldr	r0, [sp, #48]	; 0x30
   81a6a:	aa25      	add	r2, sp, #148	; 0x94
   81a6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81a6e:	f003 f813 	bl	84a98 <__ssprint_r>
   81a72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81a74:	899b      	ldrh	r3, [r3, #12]
   81a76:	f013 0f40 	tst.w	r3, #64	; 0x40
   81a7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81a7c:	bf18      	it	ne
   81a7e:	f04f 33ff 	movne.w	r3, #4294967295
   81a82:	9309      	str	r3, [sp, #36]	; 0x24
   81a84:	9809      	ldr	r0, [sp, #36]	; 0x24
   81a86:	b043      	add	sp, #268	; 0x10c
   81a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81a8c:	f01b 0f20 	tst.w	fp, #32
   81a90:	9311      	str	r3, [sp, #68]	; 0x44
   81a92:	f040 81af 	bne.w	81df4 <_svfprintf_r+0x53c>
   81a96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81a98:	f01b 0f10 	tst.w	fp, #16
   81a9c:	4613      	mov	r3, r2
   81a9e:	f040 8596 	bne.w	825ce <_svfprintf_r+0xd16>
   81aa2:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81aa6:	f000 8592 	beq.w	825ce <_svfprintf_r+0xd16>
   81aaa:	2500      	movs	r5, #0
   81aac:	2301      	movs	r3, #1
   81aae:	8814      	ldrh	r4, [r2, #0]
   81ab0:	3204      	adds	r2, #4
   81ab2:	920f      	str	r2, [sp, #60]	; 0x3c
   81ab4:	2200      	movs	r2, #0
   81ab6:	4617      	mov	r7, r2
   81ab8:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   81abc:	990a      	ldr	r1, [sp, #40]	; 0x28
   81abe:	1c4a      	adds	r2, r1, #1
   81ac0:	f000 8210 	beq.w	81ee4 <_svfprintf_r+0x62c>
   81ac4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   81ac8:	9207      	str	r2, [sp, #28]
   81aca:	ea54 0205 	orrs.w	r2, r4, r5
   81ace:	f040 820f 	bne.w	81ef0 <_svfprintf_r+0x638>
   81ad2:	2900      	cmp	r1, #0
   81ad4:	f040 842d 	bne.w	82332 <_svfprintf_r+0xa7a>
   81ad8:	2b00      	cmp	r3, #0
   81ada:	f040 8535 	bne.w	82548 <_svfprintf_r+0xc90>
   81ade:	f01b 0301 	ands.w	r3, fp, #1
   81ae2:	930e      	str	r3, [sp, #56]	; 0x38
   81ae4:	f000 865e 	beq.w	827a4 <_svfprintf_r+0xeec>
   81ae8:	2330      	movs	r3, #48	; 0x30
   81aea:	ae42      	add	r6, sp, #264	; 0x108
   81aec:	f806 3d41 	strb.w	r3, [r6, #-65]!
   81af0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81af2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81af4:	4293      	cmp	r3, r2
   81af6:	bfb8      	it	lt
   81af8:	4613      	movlt	r3, r2
   81afa:	9308      	str	r3, [sp, #32]
   81afc:	2300      	movs	r3, #0
   81afe:	9312      	str	r3, [sp, #72]	; 0x48
   81b00:	b117      	cbz	r7, 81b08 <_svfprintf_r+0x250>
   81b02:	9b08      	ldr	r3, [sp, #32]
   81b04:	3301      	adds	r3, #1
   81b06:	9308      	str	r3, [sp, #32]
   81b08:	9b07      	ldr	r3, [sp, #28]
   81b0a:	f013 0302 	ands.w	r3, r3, #2
   81b0e:	9310      	str	r3, [sp, #64]	; 0x40
   81b10:	d002      	beq.n	81b18 <_svfprintf_r+0x260>
   81b12:	9b08      	ldr	r3, [sp, #32]
   81b14:	3302      	adds	r3, #2
   81b16:	9308      	str	r3, [sp, #32]
   81b18:	9b07      	ldr	r3, [sp, #28]
   81b1a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   81b1e:	f040 830e 	bne.w	8213e <_svfprintf_r+0x886>
   81b22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81b24:	9a08      	ldr	r2, [sp, #32]
   81b26:	eba3 0b02 	sub.w	fp, r3, r2
   81b2a:	f1bb 0f00 	cmp.w	fp, #0
   81b2e:	f340 8306 	ble.w	8213e <_svfprintf_r+0x886>
   81b32:	f1bb 0f10 	cmp.w	fp, #16
   81b36:	f340 87ae 	ble.w	82a96 <_svfprintf_r+0x11de>
   81b3a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81b3c:	4643      	mov	r3, r8
   81b3e:	4621      	mov	r1, r4
   81b40:	46a8      	mov	r8, r5
   81b42:	2710      	movs	r7, #16
   81b44:	9a26      	ldr	r2, [sp, #152]	; 0x98
   81b46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81b48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81b4a:	e006      	b.n	81b5a <_svfprintf_r+0x2a2>
   81b4c:	f1ab 0b10 	sub.w	fp, fp, #16
   81b50:	f1bb 0f10 	cmp.w	fp, #16
   81b54:	f103 0308 	add.w	r3, r3, #8
   81b58:	dd18      	ble.n	81b8c <_svfprintf_r+0x2d4>
   81b5a:	3201      	adds	r2, #1
   81b5c:	48ab      	ldr	r0, [pc, #684]	; (81e0c <_svfprintf_r+0x554>)
   81b5e:	3110      	adds	r1, #16
   81b60:	2a07      	cmp	r2, #7
   81b62:	9127      	str	r1, [sp, #156]	; 0x9c
   81b64:	9226      	str	r2, [sp, #152]	; 0x98
   81b66:	e883 0081 	stmia.w	r3, {r0, r7}
   81b6a:	ddef      	ble.n	81b4c <_svfprintf_r+0x294>
   81b6c:	aa25      	add	r2, sp, #148	; 0x94
   81b6e:	4629      	mov	r1, r5
   81b70:	4620      	mov	r0, r4
   81b72:	f002 ff91 	bl	84a98 <__ssprint_r>
   81b76:	2800      	cmp	r0, #0
   81b78:	f47f af7b 	bne.w	81a72 <_svfprintf_r+0x1ba>
   81b7c:	f1ab 0b10 	sub.w	fp, fp, #16
   81b80:	f1bb 0f10 	cmp.w	fp, #16
   81b84:	464b      	mov	r3, r9
   81b86:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81b88:	9a26      	ldr	r2, [sp, #152]	; 0x98
   81b8a:	dce6      	bgt.n	81b5a <_svfprintf_r+0x2a2>
   81b8c:	4645      	mov	r5, r8
   81b8e:	460c      	mov	r4, r1
   81b90:	4698      	mov	r8, r3
   81b92:	3201      	adds	r2, #1
   81b94:	4b9d      	ldr	r3, [pc, #628]	; (81e0c <_svfprintf_r+0x554>)
   81b96:	445c      	add	r4, fp
   81b98:	2a07      	cmp	r2, #7
   81b9a:	9427      	str	r4, [sp, #156]	; 0x9c
   81b9c:	9226      	str	r2, [sp, #152]	; 0x98
   81b9e:	e888 0808 	stmia.w	r8, {r3, fp}
   81ba2:	f300 82c1 	bgt.w	82128 <_svfprintf_r+0x870>
   81ba6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81baa:	f108 0808 	add.w	r8, r8, #8
   81bae:	b187      	cbz	r7, 81bd2 <_svfprintf_r+0x31a>
   81bb0:	2101      	movs	r1, #1
   81bb2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bb4:	440c      	add	r4, r1
   81bb6:	440b      	add	r3, r1
   81bb8:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   81bbc:	2b07      	cmp	r3, #7
   81bbe:	9427      	str	r4, [sp, #156]	; 0x9c
   81bc0:	9326      	str	r3, [sp, #152]	; 0x98
   81bc2:	f8c8 1004 	str.w	r1, [r8, #4]
   81bc6:	f8c8 2000 	str.w	r2, [r8]
   81bca:	f300 83c9 	bgt.w	82360 <_svfprintf_r+0xaa8>
   81bce:	f108 0808 	add.w	r8, r8, #8
   81bd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81bd4:	b17b      	cbz	r3, 81bf6 <_svfprintf_r+0x33e>
   81bd6:	2102      	movs	r1, #2
   81bd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bda:	440c      	add	r4, r1
   81bdc:	3301      	adds	r3, #1
   81bde:	aa1e      	add	r2, sp, #120	; 0x78
   81be0:	2b07      	cmp	r3, #7
   81be2:	9427      	str	r4, [sp, #156]	; 0x9c
   81be4:	9326      	str	r3, [sp, #152]	; 0x98
   81be6:	f8c8 1004 	str.w	r1, [r8, #4]
   81bea:	f8c8 2000 	str.w	r2, [r8]
   81bee:	f300 840d 	bgt.w	8240c <_svfprintf_r+0xb54>
   81bf2:	f108 0808 	add.w	r8, r8, #8
   81bf6:	2d80      	cmp	r5, #128	; 0x80
   81bf8:	f000 8301 	beq.w	821fe <_svfprintf_r+0x946>
   81bfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81bfe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81c00:	1a9f      	subs	r7, r3, r2
   81c02:	2f00      	cmp	r7, #0
   81c04:	dd37      	ble.n	81c76 <_svfprintf_r+0x3be>
   81c06:	2f10      	cmp	r7, #16
   81c08:	f340 8675 	ble.w	828f6 <_svfprintf_r+0x103e>
   81c0c:	4d80      	ldr	r5, [pc, #512]	; (81e10 <_svfprintf_r+0x558>)
   81c0e:	4642      	mov	r2, r8
   81c10:	4621      	mov	r1, r4
   81c12:	46b0      	mov	r8, r6
   81c14:	f04f 0b10 	mov.w	fp, #16
   81c18:	462e      	mov	r6, r5
   81c1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c1c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81c1e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81c20:	e004      	b.n	81c2c <_svfprintf_r+0x374>
   81c22:	3f10      	subs	r7, #16
   81c24:	2f10      	cmp	r7, #16
   81c26:	f102 0208 	add.w	r2, r2, #8
   81c2a:	dd15      	ble.n	81c58 <_svfprintf_r+0x3a0>
   81c2c:	3301      	adds	r3, #1
   81c2e:	3110      	adds	r1, #16
   81c30:	2b07      	cmp	r3, #7
   81c32:	9127      	str	r1, [sp, #156]	; 0x9c
   81c34:	9326      	str	r3, [sp, #152]	; 0x98
   81c36:	e882 0840 	stmia.w	r2, {r6, fp}
   81c3a:	ddf2      	ble.n	81c22 <_svfprintf_r+0x36a>
   81c3c:	aa25      	add	r2, sp, #148	; 0x94
   81c3e:	4629      	mov	r1, r5
   81c40:	4620      	mov	r0, r4
   81c42:	f002 ff29 	bl	84a98 <__ssprint_r>
   81c46:	2800      	cmp	r0, #0
   81c48:	f47f af13 	bne.w	81a72 <_svfprintf_r+0x1ba>
   81c4c:	3f10      	subs	r7, #16
   81c4e:	2f10      	cmp	r7, #16
   81c50:	464a      	mov	r2, r9
   81c52:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81c54:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c56:	dce9      	bgt.n	81c2c <_svfprintf_r+0x374>
   81c58:	4635      	mov	r5, r6
   81c5a:	460c      	mov	r4, r1
   81c5c:	4646      	mov	r6, r8
   81c5e:	4690      	mov	r8, r2
   81c60:	3301      	adds	r3, #1
   81c62:	443c      	add	r4, r7
   81c64:	2b07      	cmp	r3, #7
   81c66:	9427      	str	r4, [sp, #156]	; 0x9c
   81c68:	9326      	str	r3, [sp, #152]	; 0x98
   81c6a:	e888 00a0 	stmia.w	r8, {r5, r7}
   81c6e:	f300 836c 	bgt.w	8234a <_svfprintf_r+0xa92>
   81c72:	f108 0808 	add.w	r8, r8, #8
   81c76:	9b07      	ldr	r3, [sp, #28]
   81c78:	05df      	lsls	r7, r3, #23
   81c7a:	f100 8262 	bmi.w	82142 <_svfprintf_r+0x88a>
   81c7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c80:	990e      	ldr	r1, [sp, #56]	; 0x38
   81c82:	3301      	adds	r3, #1
   81c84:	440c      	add	r4, r1
   81c86:	2b07      	cmp	r3, #7
   81c88:	9427      	str	r4, [sp, #156]	; 0x9c
   81c8a:	f8c8 6000 	str.w	r6, [r8]
   81c8e:	f8c8 1004 	str.w	r1, [r8, #4]
   81c92:	9326      	str	r3, [sp, #152]	; 0x98
   81c94:	f300 83af 	bgt.w	823f6 <_svfprintf_r+0xb3e>
   81c98:	f108 0808 	add.w	r8, r8, #8
   81c9c:	9b07      	ldr	r3, [sp, #28]
   81c9e:	075b      	lsls	r3, r3, #29
   81ca0:	d53b      	bpl.n	81d1a <_svfprintf_r+0x462>
   81ca2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81ca4:	9a08      	ldr	r2, [sp, #32]
   81ca6:	1a9d      	subs	r5, r3, r2
   81ca8:	2d00      	cmp	r5, #0
   81caa:	dd36      	ble.n	81d1a <_svfprintf_r+0x462>
   81cac:	2d10      	cmp	r5, #16
   81cae:	f340 871d 	ble.w	82aec <_svfprintf_r+0x1234>
   81cb2:	2610      	movs	r6, #16
   81cb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cb6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   81cb8:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   81cbc:	e004      	b.n	81cc8 <_svfprintf_r+0x410>
   81cbe:	3d10      	subs	r5, #16
   81cc0:	2d10      	cmp	r5, #16
   81cc2:	f108 0808 	add.w	r8, r8, #8
   81cc6:	dd16      	ble.n	81cf6 <_svfprintf_r+0x43e>
   81cc8:	3301      	adds	r3, #1
   81cca:	4a50      	ldr	r2, [pc, #320]	; (81e0c <_svfprintf_r+0x554>)
   81ccc:	3410      	adds	r4, #16
   81cce:	2b07      	cmp	r3, #7
   81cd0:	9427      	str	r4, [sp, #156]	; 0x9c
   81cd2:	9326      	str	r3, [sp, #152]	; 0x98
   81cd4:	e888 0044 	stmia.w	r8, {r2, r6}
   81cd8:	ddf1      	ble.n	81cbe <_svfprintf_r+0x406>
   81cda:	aa25      	add	r2, sp, #148	; 0x94
   81cdc:	4659      	mov	r1, fp
   81cde:	4638      	mov	r0, r7
   81ce0:	f002 feda 	bl	84a98 <__ssprint_r>
   81ce4:	2800      	cmp	r0, #0
   81ce6:	f47f aec4 	bne.w	81a72 <_svfprintf_r+0x1ba>
   81cea:	3d10      	subs	r5, #16
   81cec:	2d10      	cmp	r5, #16
   81cee:	46c8      	mov	r8, r9
   81cf0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81cf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cf4:	dce8      	bgt.n	81cc8 <_svfprintf_r+0x410>
   81cf6:	3301      	adds	r3, #1
   81cf8:	4a44      	ldr	r2, [pc, #272]	; (81e0c <_svfprintf_r+0x554>)
   81cfa:	442c      	add	r4, r5
   81cfc:	2b07      	cmp	r3, #7
   81cfe:	9427      	str	r4, [sp, #156]	; 0x9c
   81d00:	9326      	str	r3, [sp, #152]	; 0x98
   81d02:	e888 0024 	stmia.w	r8, {r2, r5}
   81d06:	dd08      	ble.n	81d1a <_svfprintf_r+0x462>
   81d08:	aa25      	add	r2, sp, #148	; 0x94
   81d0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81d0c:	980c      	ldr	r0, [sp, #48]	; 0x30
   81d0e:	f002 fec3 	bl	84a98 <__ssprint_r>
   81d12:	2800      	cmp	r0, #0
   81d14:	f47f aead 	bne.w	81a72 <_svfprintf_r+0x1ba>
   81d18:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81d1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81d1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81d1e:	9908      	ldr	r1, [sp, #32]
   81d20:	428a      	cmp	r2, r1
   81d22:	bfac      	ite	ge
   81d24:	189b      	addge	r3, r3, r2
   81d26:	185b      	addlt	r3, r3, r1
   81d28:	9309      	str	r3, [sp, #36]	; 0x24
   81d2a:	2c00      	cmp	r4, #0
   81d2c:	f040 82f7 	bne.w	8231e <_svfprintf_r+0xa66>
   81d30:	2300      	movs	r3, #0
   81d32:	46c8      	mov	r8, r9
   81d34:	9326      	str	r3, [sp, #152]	; 0x98
   81d36:	e5e6      	b.n	81906 <_svfprintf_r+0x4e>
   81d38:	9311      	str	r3, [sp, #68]	; 0x44
   81d3a:	f01b 0320 	ands.w	r3, fp, #32
   81d3e:	f040 8144 	bne.w	81fca <_svfprintf_r+0x712>
   81d42:	f01b 0210 	ands.w	r2, fp, #16
   81d46:	f040 8462 	bne.w	8260e <_svfprintf_r+0xd56>
   81d4a:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   81d4e:	f000 845e 	beq.w	8260e <_svfprintf_r+0xd56>
   81d52:	990f      	ldr	r1, [sp, #60]	; 0x3c
   81d54:	4613      	mov	r3, r2
   81d56:	460a      	mov	r2, r1
   81d58:	3204      	adds	r2, #4
   81d5a:	880c      	ldrh	r4, [r1, #0]
   81d5c:	2500      	movs	r5, #0
   81d5e:	920f      	str	r2, [sp, #60]	; 0x3c
   81d60:	e6a8      	b.n	81ab4 <_svfprintf_r+0x1fc>
   81d62:	2500      	movs	r5, #0
   81d64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81d66:	9311      	str	r3, [sp, #68]	; 0x44
   81d68:	6816      	ldr	r6, [r2, #0]
   81d6a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81d6e:	1d14      	adds	r4, r2, #4
   81d70:	2e00      	cmp	r6, #0
   81d72:	f000 86c9 	beq.w	82b08 <_svfprintf_r+0x1250>
   81d76:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   81d78:	1c53      	adds	r3, r2, #1
   81d7a:	f000 8617 	beq.w	829ac <_svfprintf_r+0x10f4>
   81d7e:	4629      	mov	r1, r5
   81d80:	4630      	mov	r0, r6
   81d82:	f002 fabb 	bl	842fc <memchr>
   81d86:	2800      	cmp	r0, #0
   81d88:	f000 8709 	beq.w	82b9e <_svfprintf_r+0x12e6>
   81d8c:	1b83      	subs	r3, r0, r6
   81d8e:	950a      	str	r5, [sp, #40]	; 0x28
   81d90:	930e      	str	r3, [sp, #56]	; 0x38
   81d92:	940f      	str	r4, [sp, #60]	; 0x3c
   81d94:	f8cd b01c 	str.w	fp, [sp, #28]
   81d98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   81d9c:	9308      	str	r3, [sp, #32]
   81d9e:	9512      	str	r5, [sp, #72]	; 0x48
   81da0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81da4:	e6ac      	b.n	81b00 <_svfprintf_r+0x248>
   81da6:	f89a 3000 	ldrb.w	r3, [sl]
   81daa:	f10a 0401 	add.w	r4, sl, #1
   81dae:	2b2a      	cmp	r3, #42	; 0x2a
   81db0:	f000 87bd 	beq.w	82d2e <_svfprintf_r+0x1476>
   81db4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81db8:	2809      	cmp	r0, #9
   81dba:	46a2      	mov	sl, r4
   81dbc:	f200 8714 	bhi.w	82be8 <_svfprintf_r+0x1330>
   81dc0:	2300      	movs	r3, #0
   81dc2:	461c      	mov	r4, r3
   81dc4:	f81a 3b01 	ldrb.w	r3, [sl], #1
   81dc8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   81dcc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   81dd0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   81dd4:	2809      	cmp	r0, #9
   81dd6:	d9f5      	bls.n	81dc4 <_svfprintf_r+0x50c>
   81dd8:	940a      	str	r4, [sp, #40]	; 0x28
   81dda:	e5c9      	b.n	81970 <_svfprintf_r+0xb8>
   81ddc:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   81de0:	f89a 3000 	ldrb.w	r3, [sl]
   81de4:	e5c2      	b.n	8196c <_svfprintf_r+0xb4>
   81de6:	f04b 0b10 	orr.w	fp, fp, #16
   81dea:	f01b 0f20 	tst.w	fp, #32
   81dee:	9311      	str	r3, [sp, #68]	; 0x44
   81df0:	f43f ae51 	beq.w	81a96 <_svfprintf_r+0x1de>
   81df4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81df6:	3407      	adds	r4, #7
   81df8:	f024 0307 	bic.w	r3, r4, #7
   81dfc:	f103 0208 	add.w	r2, r3, #8
   81e00:	e9d3 4500 	ldrd	r4, r5, [r3]
   81e04:	920f      	str	r2, [sp, #60]	; 0x3c
   81e06:	2301      	movs	r3, #1
   81e08:	e654      	b.n	81ab4 <_svfprintf_r+0x1fc>
   81e0a:	bf00      	nop
   81e0c:	00086140 	.word	0x00086140
   81e10:	00086150 	.word	0x00086150
   81e14:	9311      	str	r3, [sp, #68]	; 0x44
   81e16:	2a00      	cmp	r2, #0
   81e18:	f040 87a8 	bne.w	82d6c <_svfprintf_r+0x14b4>
   81e1c:	4bbd      	ldr	r3, [pc, #756]	; (82114 <_svfprintf_r+0x85c>)
   81e1e:	f01b 0f20 	tst.w	fp, #32
   81e22:	9318      	str	r3, [sp, #96]	; 0x60
   81e24:	f040 80e6 	bne.w	81ff4 <_svfprintf_r+0x73c>
   81e28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81e2a:	f01b 0f10 	tst.w	fp, #16
   81e2e:	4613      	mov	r3, r2
   81e30:	f040 83d4 	bne.w	825dc <_svfprintf_r+0xd24>
   81e34:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81e38:	f000 83d0 	beq.w	825dc <_svfprintf_r+0xd24>
   81e3c:	2500      	movs	r5, #0
   81e3e:	3304      	adds	r3, #4
   81e40:	8814      	ldrh	r4, [r2, #0]
   81e42:	930f      	str	r3, [sp, #60]	; 0x3c
   81e44:	f01b 0f01 	tst.w	fp, #1
   81e48:	f000 80e2 	beq.w	82010 <_svfprintf_r+0x758>
   81e4c:	ea54 0305 	orrs.w	r3, r4, r5
   81e50:	f000 80de 	beq.w	82010 <_svfprintf_r+0x758>
   81e54:	2330      	movs	r3, #48	; 0x30
   81e56:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   81e5a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81e5e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   81e62:	f04b 0b02 	orr.w	fp, fp, #2
   81e66:	2302      	movs	r3, #2
   81e68:	e624      	b.n	81ab4 <_svfprintf_r+0x1fc>
   81e6a:	2201      	movs	r2, #1
   81e6c:	9311      	str	r3, [sp, #68]	; 0x44
   81e6e:	2300      	movs	r3, #0
   81e70:	4611      	mov	r1, r2
   81e72:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81e74:	9208      	str	r2, [sp, #32]
   81e76:	6802      	ldr	r2, [r0, #0]
   81e78:	461f      	mov	r7, r3
   81e7a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81e7e:	930a      	str	r3, [sp, #40]	; 0x28
   81e80:	9312      	str	r3, [sp, #72]	; 0x48
   81e82:	1d03      	adds	r3, r0, #4
   81e84:	f8cd b01c 	str.w	fp, [sp, #28]
   81e88:	910e      	str	r1, [sp, #56]	; 0x38
   81e8a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   81e8e:	930f      	str	r3, [sp, #60]	; 0x3c
   81e90:	ae28      	add	r6, sp, #160	; 0xa0
   81e92:	e639      	b.n	81b08 <_svfprintf_r+0x250>
   81e94:	9311      	str	r3, [sp, #68]	; 0x44
   81e96:	2a00      	cmp	r2, #0
   81e98:	f040 877f 	bne.w	82d9a <_svfprintf_r+0x14e2>
   81e9c:	f04b 0b10 	orr.w	fp, fp, #16
   81ea0:	f01b 0f20 	tst.w	fp, #32
   81ea4:	f040 8471 	bne.w	8278a <_svfprintf_r+0xed2>
   81ea8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81eaa:	f01b 0f10 	tst.w	fp, #16
   81eae:	4613      	mov	r3, r2
   81eb0:	f040 8399 	bne.w	825e6 <_svfprintf_r+0xd2e>
   81eb4:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81eb8:	f000 8395 	beq.w	825e6 <_svfprintf_r+0xd2e>
   81ebc:	f9b2 4000 	ldrsh.w	r4, [r2]
   81ec0:	3304      	adds	r3, #4
   81ec2:	17e5      	asrs	r5, r4, #31
   81ec4:	930f      	str	r3, [sp, #60]	; 0x3c
   81ec6:	4622      	mov	r2, r4
   81ec8:	462b      	mov	r3, r5
   81eca:	2a00      	cmp	r2, #0
   81ecc:	f173 0300 	sbcs.w	r3, r3, #0
   81ed0:	f2c0 8394 	blt.w	825fc <_svfprintf_r+0xd44>
   81ed4:	990a      	ldr	r1, [sp, #40]	; 0x28
   81ed6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81eda:	1c4a      	adds	r2, r1, #1
   81edc:	f04f 0301 	mov.w	r3, #1
   81ee0:	f47f adf0 	bne.w	81ac4 <_svfprintf_r+0x20c>
   81ee4:	ea54 0205 	orrs.w	r2, r4, r5
   81ee8:	f000 8225 	beq.w	82336 <_svfprintf_r+0xa7e>
   81eec:	f8cd b01c 	str.w	fp, [sp, #28]
   81ef0:	2b01      	cmp	r3, #1
   81ef2:	f000 830a 	beq.w	8250a <_svfprintf_r+0xc52>
   81ef6:	2b02      	cmp	r3, #2
   81ef8:	f040 8298 	bne.w	8242c <_svfprintf_r+0xb74>
   81efc:	464e      	mov	r6, r9
   81efe:	9818      	ldr	r0, [sp, #96]	; 0x60
   81f00:	0923      	lsrs	r3, r4, #4
   81f02:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   81f06:	0929      	lsrs	r1, r5, #4
   81f08:	f004 020f 	and.w	r2, r4, #15
   81f0c:	460d      	mov	r5, r1
   81f0e:	461c      	mov	r4, r3
   81f10:	5c83      	ldrb	r3, [r0, r2]
   81f12:	f806 3d01 	strb.w	r3, [r6, #-1]!
   81f16:	ea54 0305 	orrs.w	r3, r4, r5
   81f1a:	d1f1      	bne.n	81f00 <_svfprintf_r+0x648>
   81f1c:	eba9 0306 	sub.w	r3, r9, r6
   81f20:	930e      	str	r3, [sp, #56]	; 0x38
   81f22:	e5e5      	b.n	81af0 <_svfprintf_r+0x238>
   81f24:	9311      	str	r3, [sp, #68]	; 0x44
   81f26:	2a00      	cmp	r2, #0
   81f28:	f040 8733 	bne.w	82d92 <_svfprintf_r+0x14da>
   81f2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81f2e:	f01b 0f08 	tst.w	fp, #8
   81f32:	f104 0407 	add.w	r4, r4, #7
   81f36:	f000 84cb 	beq.w	828d0 <_svfprintf_r+0x1018>
   81f3a:	f024 0307 	bic.w	r3, r4, #7
   81f3e:	f103 0208 	add.w	r2, r3, #8
   81f42:	920f      	str	r2, [sp, #60]	; 0x3c
   81f44:	681a      	ldr	r2, [r3, #0]
   81f46:	685b      	ldr	r3, [r3, #4]
   81f48:	9214      	str	r2, [sp, #80]	; 0x50
   81f4a:	9315      	str	r3, [sp, #84]	; 0x54
   81f4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   81f4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81f50:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   81f54:	4628      	mov	r0, r5
   81f56:	4621      	mov	r1, r4
   81f58:	f04f 32ff 	mov.w	r2, #4294967295
   81f5c:	4b6e      	ldr	r3, [pc, #440]	; (82118 <_svfprintf_r+0x860>)
   81f5e:	f003 fe4d 	bl	85bfc <__aeabi_dcmpun>
   81f62:	2800      	cmp	r0, #0
   81f64:	f040 8430 	bne.w	827c8 <_svfprintf_r+0xf10>
   81f68:	4628      	mov	r0, r5
   81f6a:	4621      	mov	r1, r4
   81f6c:	f04f 32ff 	mov.w	r2, #4294967295
   81f70:	4b69      	ldr	r3, [pc, #420]	; (82118 <_svfprintf_r+0x860>)
   81f72:	f003 fe25 	bl	85bc0 <__aeabi_dcmple>
   81f76:	2800      	cmp	r0, #0
   81f78:	f040 8426 	bne.w	827c8 <_svfprintf_r+0xf10>
   81f7c:	a814      	add	r0, sp, #80	; 0x50
   81f7e:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81f80:	f003 fe14 	bl	85bac <__aeabi_dcmplt>
   81f84:	2800      	cmp	r0, #0
   81f86:	f040 85d1 	bne.w	82b2c <_svfprintf_r+0x1274>
   81f8a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81f8e:	2303      	movs	r3, #3
   81f90:	461a      	mov	r2, r3
   81f92:	9308      	str	r3, [sp, #32]
   81f94:	2300      	movs	r3, #0
   81f96:	4619      	mov	r1, r3
   81f98:	930a      	str	r3, [sp, #40]	; 0x28
   81f9a:	4e60      	ldr	r6, [pc, #384]	; (8211c <_svfprintf_r+0x864>)
   81f9c:	4b60      	ldr	r3, [pc, #384]	; (82120 <_svfprintf_r+0x868>)
   81f9e:	920e      	str	r2, [sp, #56]	; 0x38
   81fa0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81fa2:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   81fa6:	9007      	str	r0, [sp, #28]
   81fa8:	9112      	str	r1, [sp, #72]	; 0x48
   81faa:	2a47      	cmp	r2, #71	; 0x47
   81fac:	bfd8      	it	le
   81fae:	461e      	movle	r6, r3
   81fb0:	e5a6      	b.n	81b00 <_svfprintf_r+0x248>
   81fb2:	f04b 0b08 	orr.w	fp, fp, #8
   81fb6:	f89a 3000 	ldrb.w	r3, [sl]
   81fba:	e4d7      	b.n	8196c <_svfprintf_r+0xb4>
   81fbc:	f04b 0b10 	orr.w	fp, fp, #16
   81fc0:	9311      	str	r3, [sp, #68]	; 0x44
   81fc2:	f01b 0320 	ands.w	r3, fp, #32
   81fc6:	f43f aebc 	beq.w	81d42 <_svfprintf_r+0x48a>
   81fca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81fcc:	3407      	adds	r4, #7
   81fce:	f024 0307 	bic.w	r3, r4, #7
   81fd2:	f103 0208 	add.w	r2, r3, #8
   81fd6:	e9d3 4500 	ldrd	r4, r5, [r3]
   81fda:	920f      	str	r2, [sp, #60]	; 0x3c
   81fdc:	2300      	movs	r3, #0
   81fde:	e569      	b.n	81ab4 <_svfprintf_r+0x1fc>
   81fe0:	9311      	str	r3, [sp, #68]	; 0x44
   81fe2:	2a00      	cmp	r2, #0
   81fe4:	f040 86be 	bne.w	82d64 <_svfprintf_r+0x14ac>
   81fe8:	4b4e      	ldr	r3, [pc, #312]	; (82124 <_svfprintf_r+0x86c>)
   81fea:	f01b 0f20 	tst.w	fp, #32
   81fee:	9318      	str	r3, [sp, #96]	; 0x60
   81ff0:	f43f af1a 	beq.w	81e28 <_svfprintf_r+0x570>
   81ff4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81ff6:	f01b 0f01 	tst.w	fp, #1
   81ffa:	f104 0407 	add.w	r4, r4, #7
   81ffe:	f024 0307 	bic.w	r3, r4, #7
   82002:	f103 0208 	add.w	r2, r3, #8
   82006:	920f      	str	r2, [sp, #60]	; 0x3c
   82008:	e9d3 4500 	ldrd	r4, r5, [r3]
   8200c:	f47f af1e 	bne.w	81e4c <_svfprintf_r+0x594>
   82010:	2302      	movs	r3, #2
   82012:	e54f      	b.n	81ab4 <_svfprintf_r+0x1fc>
   82014:	f89a 3000 	ldrb.w	r3, [sl]
   82018:	2900      	cmp	r1, #0
   8201a:	f47f aca7 	bne.w	8196c <_svfprintf_r+0xb4>
   8201e:	2201      	movs	r2, #1
   82020:	2120      	movs	r1, #32
   82022:	e4a3      	b.n	8196c <_svfprintf_r+0xb4>
   82024:	f04b 0b01 	orr.w	fp, fp, #1
   82028:	f89a 3000 	ldrb.w	r3, [sl]
   8202c:	e49e      	b.n	8196c <_svfprintf_r+0xb4>
   8202e:	f89a 3000 	ldrb.w	r3, [sl]
   82032:	2201      	movs	r2, #1
   82034:	212b      	movs	r1, #43	; 0x2b
   82036:	e499      	b.n	8196c <_svfprintf_r+0xb4>
   82038:	f04b 0b20 	orr.w	fp, fp, #32
   8203c:	f89a 3000 	ldrb.w	r3, [sl]
   82040:	e494      	b.n	8196c <_svfprintf_r+0xb4>
   82042:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   82046:	f89a 3000 	ldrb.w	r3, [sl]
   8204a:	e48f      	b.n	8196c <_svfprintf_r+0xb4>
   8204c:	f89a 3000 	ldrb.w	r3, [sl]
   82050:	2b6c      	cmp	r3, #108	; 0x6c
   82052:	bf03      	ittte	eq
   82054:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   82058:	f04b 0b20 	orreq.w	fp, fp, #32
   8205c:	f10a 0a01 	addeq.w	sl, sl, #1
   82060:	f04b 0b10 	orrne.w	fp, fp, #16
   82064:	e482      	b.n	8196c <_svfprintf_r+0xb4>
   82066:	2a00      	cmp	r2, #0
   82068:	f040 8678 	bne.w	82d5c <_svfprintf_r+0x14a4>
   8206c:	f01b 0f20 	tst.w	fp, #32
   82070:	f040 844f 	bne.w	82912 <_svfprintf_r+0x105a>
   82074:	f01b 0f10 	tst.w	fp, #16
   82078:	f040 8435 	bne.w	828e6 <_svfprintf_r+0x102e>
   8207c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82080:	f000 8431 	beq.w	828e6 <_svfprintf_r+0x102e>
   82084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82086:	6813      	ldr	r3, [r2, #0]
   82088:	3204      	adds	r2, #4
   8208a:	920f      	str	r2, [sp, #60]	; 0x3c
   8208c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   82090:	801a      	strh	r2, [r3, #0]
   82092:	e438      	b.n	81906 <_svfprintf_r+0x4e>
   82094:	2378      	movs	r3, #120	; 0x78
   82096:	2230      	movs	r2, #48	; 0x30
   82098:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8209a:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   8209e:	9311      	str	r3, [sp, #68]	; 0x44
   820a0:	1d03      	adds	r3, r0, #4
   820a2:	930f      	str	r3, [sp, #60]	; 0x3c
   820a4:	4b1f      	ldr	r3, [pc, #124]	; (82124 <_svfprintf_r+0x86c>)
   820a6:	6804      	ldr	r4, [r0, #0]
   820a8:	9318      	str	r3, [sp, #96]	; 0x60
   820aa:	f04b 0b02 	orr.w	fp, fp, #2
   820ae:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   820b2:	2500      	movs	r5, #0
   820b4:	2302      	movs	r3, #2
   820b6:	e4fd      	b.n	81ab4 <_svfprintf_r+0x1fc>
   820b8:	9311      	str	r3, [sp, #68]	; 0x44
   820ba:	2a00      	cmp	r2, #0
   820bc:	f43f aef0 	beq.w	81ea0 <_svfprintf_r+0x5e8>
   820c0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   820c4:	e6ec      	b.n	81ea0 <_svfprintf_r+0x5e8>
   820c6:	2000      	movs	r0, #0
   820c8:	4604      	mov	r4, r0
   820ca:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   820ce:	f81a 3b01 	ldrb.w	r3, [sl], #1
   820d2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   820d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   820da:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   820de:	2809      	cmp	r0, #9
   820e0:	d9f5      	bls.n	820ce <_svfprintf_r+0x816>
   820e2:	940d      	str	r4, [sp, #52]	; 0x34
   820e4:	e444      	b.n	81970 <_svfprintf_r+0xb8>
   820e6:	9311      	str	r3, [sp, #68]	; 0x44
   820e8:	2a00      	cmp	r2, #0
   820ea:	f040 8646 	bne.w	82d7a <_svfprintf_r+0x14c2>
   820ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
   820f0:	2a00      	cmp	r2, #0
   820f2:	f43f acb7 	beq.w	81a64 <_svfprintf_r+0x1ac>
   820f6:	2300      	movs	r3, #0
   820f8:	2101      	movs	r1, #1
   820fa:	461f      	mov	r7, r3
   820fc:	9108      	str	r1, [sp, #32]
   820fe:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82102:	f8cd b01c 	str.w	fp, [sp, #28]
   82106:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8210a:	930a      	str	r3, [sp, #40]	; 0x28
   8210c:	9312      	str	r3, [sp, #72]	; 0x48
   8210e:	910e      	str	r1, [sp, #56]	; 0x38
   82110:	ae28      	add	r6, sp, #160	; 0xa0
   82112:	e4f9      	b.n	81b08 <_svfprintf_r+0x250>
   82114:	00086110 	.word	0x00086110
   82118:	7fefffff 	.word	0x7fefffff
   8211c:	00086104 	.word	0x00086104
   82120:	00086100 	.word	0x00086100
   82124:	00086124 	.word	0x00086124
   82128:	aa25      	add	r2, sp, #148	; 0x94
   8212a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8212c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8212e:	f002 fcb3 	bl	84a98 <__ssprint_r>
   82132:	2800      	cmp	r0, #0
   82134:	f47f ac9d 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82138:	46c8      	mov	r8, r9
   8213a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8213e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82140:	e535      	b.n	81bae <_svfprintf_r+0x2f6>
   82142:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82144:	2b65      	cmp	r3, #101	; 0x65
   82146:	f340 8099 	ble.w	8227c <_svfprintf_r+0x9c4>
   8214a:	a814      	add	r0, sp, #80	; 0x50
   8214c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   8214e:	f003 fd23 	bl	85b98 <__aeabi_dcmpeq>
   82152:	2800      	cmp	r0, #0
   82154:	f000 8192 	beq.w	8247c <_svfprintf_r+0xbc4>
   82158:	2101      	movs	r1, #1
   8215a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8215c:	4ab4      	ldr	r2, [pc, #720]	; (82430 <_svfprintf_r+0xb78>)
   8215e:	440b      	add	r3, r1
   82160:	440c      	add	r4, r1
   82162:	2b07      	cmp	r3, #7
   82164:	9427      	str	r4, [sp, #156]	; 0x9c
   82166:	9326      	str	r3, [sp, #152]	; 0x98
   82168:	f8c8 1004 	str.w	r1, [r8, #4]
   8216c:	f8c8 2000 	str.w	r2, [r8]
   82170:	f300 83c5 	bgt.w	828fe <_svfprintf_r+0x1046>
   82174:	f108 0808 	add.w	r8, r8, #8
   82178:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8217a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8217c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8217e:	4293      	cmp	r3, r2
   82180:	db03      	blt.n	8218a <_svfprintf_r+0x8d2>
   82182:	9b07      	ldr	r3, [sp, #28]
   82184:	07dd      	lsls	r5, r3, #31
   82186:	f57f ad89 	bpl.w	81c9c <_svfprintf_r+0x3e4>
   8218a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8218c:	9919      	ldr	r1, [sp, #100]	; 0x64
   8218e:	3301      	adds	r3, #1
   82190:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   82192:	440c      	add	r4, r1
   82194:	2b07      	cmp	r3, #7
   82196:	f8c8 2000 	str.w	r2, [r8]
   8219a:	f8c8 1004 	str.w	r1, [r8, #4]
   8219e:	9427      	str	r4, [sp, #156]	; 0x9c
   821a0:	9326      	str	r3, [sp, #152]	; 0x98
   821a2:	f300 83c3 	bgt.w	8292c <_svfprintf_r+0x1074>
   821a6:	f108 0808 	add.w	r8, r8, #8
   821aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   821ac:	1e5e      	subs	r6, r3, #1
   821ae:	2e00      	cmp	r6, #0
   821b0:	f77f ad74 	ble.w	81c9c <_svfprintf_r+0x3e4>
   821b4:	2e10      	cmp	r6, #16
   821b6:	f340 8574 	ble.w	82ca2 <_svfprintf_r+0x13ea>
   821ba:	4622      	mov	r2, r4
   821bc:	2710      	movs	r7, #16
   821be:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821c0:	4d9c      	ldr	r5, [pc, #624]	; (82434 <_svfprintf_r+0xb7c>)
   821c2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   821c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   821c8:	e005      	b.n	821d6 <_svfprintf_r+0x91e>
   821ca:	f108 0808 	add.w	r8, r8, #8
   821ce:	3e10      	subs	r6, #16
   821d0:	2e10      	cmp	r6, #16
   821d2:	f340 8224 	ble.w	8261e <_svfprintf_r+0xd66>
   821d6:	3301      	adds	r3, #1
   821d8:	3210      	adds	r2, #16
   821da:	2b07      	cmp	r3, #7
   821dc:	9227      	str	r2, [sp, #156]	; 0x9c
   821de:	9326      	str	r3, [sp, #152]	; 0x98
   821e0:	e888 00a0 	stmia.w	r8, {r5, r7}
   821e4:	ddf1      	ble.n	821ca <_svfprintf_r+0x912>
   821e6:	aa25      	add	r2, sp, #148	; 0x94
   821e8:	4621      	mov	r1, r4
   821ea:	4658      	mov	r0, fp
   821ec:	f002 fc54 	bl	84a98 <__ssprint_r>
   821f0:	2800      	cmp	r0, #0
   821f2:	f47f ac3e 	bne.w	81a72 <_svfprintf_r+0x1ba>
   821f6:	46c8      	mov	r8, r9
   821f8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   821fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821fc:	e7e7      	b.n	821ce <_svfprintf_r+0x916>
   821fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82200:	9a08      	ldr	r2, [sp, #32]
   82202:	1a9f      	subs	r7, r3, r2
   82204:	2f00      	cmp	r7, #0
   82206:	f77f acf9 	ble.w	81bfc <_svfprintf_r+0x344>
   8220a:	2f10      	cmp	r7, #16
   8220c:	f340 84a7 	ble.w	82b5e <_svfprintf_r+0x12a6>
   82210:	4d88      	ldr	r5, [pc, #544]	; (82434 <_svfprintf_r+0xb7c>)
   82212:	4642      	mov	r2, r8
   82214:	4621      	mov	r1, r4
   82216:	46b0      	mov	r8, r6
   82218:	f04f 0b10 	mov.w	fp, #16
   8221c:	462e      	mov	r6, r5
   8221e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82220:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82222:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82224:	e004      	b.n	82230 <_svfprintf_r+0x978>
   82226:	3f10      	subs	r7, #16
   82228:	2f10      	cmp	r7, #16
   8222a:	f102 0208 	add.w	r2, r2, #8
   8222e:	dd15      	ble.n	8225c <_svfprintf_r+0x9a4>
   82230:	3301      	adds	r3, #1
   82232:	3110      	adds	r1, #16
   82234:	2b07      	cmp	r3, #7
   82236:	9127      	str	r1, [sp, #156]	; 0x9c
   82238:	9326      	str	r3, [sp, #152]	; 0x98
   8223a:	e882 0840 	stmia.w	r2, {r6, fp}
   8223e:	ddf2      	ble.n	82226 <_svfprintf_r+0x96e>
   82240:	aa25      	add	r2, sp, #148	; 0x94
   82242:	4629      	mov	r1, r5
   82244:	4620      	mov	r0, r4
   82246:	f002 fc27 	bl	84a98 <__ssprint_r>
   8224a:	2800      	cmp	r0, #0
   8224c:	f47f ac11 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82250:	3f10      	subs	r7, #16
   82252:	2f10      	cmp	r7, #16
   82254:	464a      	mov	r2, r9
   82256:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82258:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8225a:	dce9      	bgt.n	82230 <_svfprintf_r+0x978>
   8225c:	4635      	mov	r5, r6
   8225e:	460c      	mov	r4, r1
   82260:	4646      	mov	r6, r8
   82262:	4690      	mov	r8, r2
   82264:	3301      	adds	r3, #1
   82266:	443c      	add	r4, r7
   82268:	2b07      	cmp	r3, #7
   8226a:	9427      	str	r4, [sp, #156]	; 0x9c
   8226c:	9326      	str	r3, [sp, #152]	; 0x98
   8226e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82272:	f300 829d 	bgt.w	827b0 <_svfprintf_r+0xef8>
   82276:	f108 0808 	add.w	r8, r8, #8
   8227a:	e4bf      	b.n	81bfc <_svfprintf_r+0x344>
   8227c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8227e:	2b01      	cmp	r3, #1
   82280:	f340 824e 	ble.w	82720 <_svfprintf_r+0xe68>
   82284:	2301      	movs	r3, #1
   82286:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82288:	441c      	add	r4, r3
   8228a:	441f      	add	r7, r3
   8228c:	2f07      	cmp	r7, #7
   8228e:	9427      	str	r4, [sp, #156]	; 0x9c
   82290:	f8c8 6000 	str.w	r6, [r8]
   82294:	9726      	str	r7, [sp, #152]	; 0x98
   82296:	f8c8 3004 	str.w	r3, [r8, #4]
   8229a:	f300 825e 	bgt.w	8275a <_svfprintf_r+0xea2>
   8229e:	f108 0808 	add.w	r8, r8, #8
   822a2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   822a4:	3701      	adds	r7, #1
   822a6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   822a8:	4414      	add	r4, r2
   822aa:	2f07      	cmp	r7, #7
   822ac:	9427      	str	r4, [sp, #156]	; 0x9c
   822ae:	9726      	str	r7, [sp, #152]	; 0x98
   822b0:	f8c8 3000 	str.w	r3, [r8]
   822b4:	f8c8 2004 	str.w	r2, [r8, #4]
   822b8:	f300 825b 	bgt.w	82772 <_svfprintf_r+0xeba>
   822bc:	f108 0808 	add.w	r8, r8, #8
   822c0:	a814      	add	r0, sp, #80	; 0x50
   822c2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   822c4:	f003 fc68 	bl	85b98 <__aeabi_dcmpeq>
   822c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   822ca:	2800      	cmp	r0, #0
   822cc:	f040 8141 	bne.w	82552 <_svfprintf_r+0xc9a>
   822d0:	3b01      	subs	r3, #1
   822d2:	3701      	adds	r7, #1
   822d4:	3601      	adds	r6, #1
   822d6:	441c      	add	r4, r3
   822d8:	2f07      	cmp	r7, #7
   822da:	f8c8 6000 	str.w	r6, [r8]
   822de:	9726      	str	r7, [sp, #152]	; 0x98
   822e0:	9427      	str	r4, [sp, #156]	; 0x9c
   822e2:	f8c8 3004 	str.w	r3, [r8, #4]
   822e6:	f300 8166 	bgt.w	825b6 <_svfprintf_r+0xcfe>
   822ea:	f108 0808 	add.w	r8, r8, #8
   822ee:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   822f0:	3701      	adds	r7, #1
   822f2:	4414      	add	r4, r2
   822f4:	ab21      	add	r3, sp, #132	; 0x84
   822f6:	2f07      	cmp	r7, #7
   822f8:	9427      	str	r4, [sp, #156]	; 0x9c
   822fa:	9726      	str	r7, [sp, #152]	; 0x98
   822fc:	f8c8 2004 	str.w	r2, [r8, #4]
   82300:	f8c8 3000 	str.w	r3, [r8]
   82304:	f77f acc8 	ble.w	81c98 <_svfprintf_r+0x3e0>
   82308:	aa25      	add	r2, sp, #148	; 0x94
   8230a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8230c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8230e:	f002 fbc3 	bl	84a98 <__ssprint_r>
   82312:	2800      	cmp	r0, #0
   82314:	f47f abad 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82318:	46c8      	mov	r8, r9
   8231a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8231c:	e4be      	b.n	81c9c <_svfprintf_r+0x3e4>
   8231e:	aa25      	add	r2, sp, #148	; 0x94
   82320:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82322:	980c      	ldr	r0, [sp, #48]	; 0x30
   82324:	f002 fbb8 	bl	84a98 <__ssprint_r>
   82328:	2800      	cmp	r0, #0
   8232a:	f43f ad01 	beq.w	81d30 <_svfprintf_r+0x478>
   8232e:	f7ff bba0 	b.w	81a72 <_svfprintf_r+0x1ba>
   82332:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82336:	2b01      	cmp	r3, #1
   82338:	f000 817e 	beq.w	82638 <_svfprintf_r+0xd80>
   8233c:	2b02      	cmp	r3, #2
   8233e:	d171      	bne.n	82424 <_svfprintf_r+0xb6c>
   82340:	f8cd b01c 	str.w	fp, [sp, #28]
   82344:	2400      	movs	r4, #0
   82346:	2500      	movs	r5, #0
   82348:	e5d8      	b.n	81efc <_svfprintf_r+0x644>
   8234a:	aa25      	add	r2, sp, #148	; 0x94
   8234c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8234e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82350:	f002 fba2 	bl	84a98 <__ssprint_r>
   82354:	2800      	cmp	r0, #0
   82356:	f47f ab8c 	bne.w	81a72 <_svfprintf_r+0x1ba>
   8235a:	46c8      	mov	r8, r9
   8235c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8235e:	e48a      	b.n	81c76 <_svfprintf_r+0x3be>
   82360:	aa25      	add	r2, sp, #148	; 0x94
   82362:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82364:	980c      	ldr	r0, [sp, #48]	; 0x30
   82366:	f002 fb97 	bl	84a98 <__ssprint_r>
   8236a:	2800      	cmp	r0, #0
   8236c:	f47f ab81 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82370:	46c8      	mov	r8, r9
   82372:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82374:	e42d      	b.n	81bd2 <_svfprintf_r+0x31a>
   82376:	2001      	movs	r0, #1
   82378:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8237a:	4a2d      	ldr	r2, [pc, #180]	; (82430 <_svfprintf_r+0xb78>)
   8237c:	4403      	add	r3, r0
   8237e:	4404      	add	r4, r0
   82380:	2b07      	cmp	r3, #7
   82382:	9427      	str	r4, [sp, #156]	; 0x9c
   82384:	9326      	str	r3, [sp, #152]	; 0x98
   82386:	f8c8 0004 	str.w	r0, [r8, #4]
   8238a:	f8c8 2000 	str.w	r2, [r8]
   8238e:	f340 82d8 	ble.w	82942 <_svfprintf_r+0x108a>
   82392:	aa25      	add	r2, sp, #148	; 0x94
   82394:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82396:	980c      	ldr	r0, [sp, #48]	; 0x30
   82398:	f002 fb7e 	bl	84a98 <__ssprint_r>
   8239c:	2800      	cmp	r0, #0
   8239e:	f47f ab68 	bne.w	81a72 <_svfprintf_r+0x1ba>
   823a2:	46c8      	mov	r8, r9
   823a4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   823a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823a8:	b929      	cbnz	r1, 823b6 <_svfprintf_r+0xafe>
   823aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   823ac:	b91b      	cbnz	r3, 823b6 <_svfprintf_r+0xafe>
   823ae:	9b07      	ldr	r3, [sp, #28]
   823b0:	07d8      	lsls	r0, r3, #31
   823b2:	f57f ac73 	bpl.w	81c9c <_svfprintf_r+0x3e4>
   823b6:	9819      	ldr	r0, [sp, #100]	; 0x64
   823b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   823ba:	4602      	mov	r2, r0
   823bc:	3301      	adds	r3, #1
   823be:	4422      	add	r2, r4
   823c0:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   823c2:	2b07      	cmp	r3, #7
   823c4:	9227      	str	r2, [sp, #156]	; 0x9c
   823c6:	f8c8 4000 	str.w	r4, [r8]
   823ca:	f8c8 0004 	str.w	r0, [r8, #4]
   823ce:	9326      	str	r3, [sp, #152]	; 0x98
   823d0:	f300 8431 	bgt.w	82c36 <_svfprintf_r+0x137e>
   823d4:	f108 0808 	add.w	r8, r8, #8
   823d8:	2900      	cmp	r1, #0
   823da:	f2c0 8409 	blt.w	82bf0 <_svfprintf_r+0x1338>
   823de:	9913      	ldr	r1, [sp, #76]	; 0x4c
   823e0:	3301      	adds	r3, #1
   823e2:	188c      	adds	r4, r1, r2
   823e4:	2b07      	cmp	r3, #7
   823e6:	9427      	str	r4, [sp, #156]	; 0x9c
   823e8:	9326      	str	r3, [sp, #152]	; 0x98
   823ea:	f8c8 6000 	str.w	r6, [r8]
   823ee:	f8c8 1004 	str.w	r1, [r8, #4]
   823f2:	f77f ac51 	ble.w	81c98 <_svfprintf_r+0x3e0>
   823f6:	aa25      	add	r2, sp, #148	; 0x94
   823f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823fa:	980c      	ldr	r0, [sp, #48]	; 0x30
   823fc:	f002 fb4c 	bl	84a98 <__ssprint_r>
   82400:	2800      	cmp	r0, #0
   82402:	f47f ab36 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82406:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82408:	46c8      	mov	r8, r9
   8240a:	e447      	b.n	81c9c <_svfprintf_r+0x3e4>
   8240c:	aa25      	add	r2, sp, #148	; 0x94
   8240e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82410:	980c      	ldr	r0, [sp, #48]	; 0x30
   82412:	f002 fb41 	bl	84a98 <__ssprint_r>
   82416:	2800      	cmp	r0, #0
   82418:	f47f ab2b 	bne.w	81a72 <_svfprintf_r+0x1ba>
   8241c:	46c8      	mov	r8, r9
   8241e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82420:	f7ff bbe9 	b.w	81bf6 <_svfprintf_r+0x33e>
   82424:	2400      	movs	r4, #0
   82426:	2500      	movs	r5, #0
   82428:	f8cd b01c 	str.w	fp, [sp, #28]
   8242c:	4649      	mov	r1, r9
   8242e:	e004      	b.n	8243a <_svfprintf_r+0xb82>
   82430:	000860b4 	.word	0x000860b4
   82434:	00086150 	.word	0x00086150
   82438:	4631      	mov	r1, r6
   8243a:	08e2      	lsrs	r2, r4, #3
   8243c:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   82440:	08e8      	lsrs	r0, r5, #3
   82442:	f004 0307 	and.w	r3, r4, #7
   82446:	4605      	mov	r5, r0
   82448:	4614      	mov	r4, r2
   8244a:	3330      	adds	r3, #48	; 0x30
   8244c:	ea54 0205 	orrs.w	r2, r4, r5
   82450:	f801 3c01 	strb.w	r3, [r1, #-1]
   82454:	f101 36ff 	add.w	r6, r1, #4294967295
   82458:	d1ee      	bne.n	82438 <_svfprintf_r+0xb80>
   8245a:	9a07      	ldr	r2, [sp, #28]
   8245c:	07d2      	lsls	r2, r2, #31
   8245e:	f57f ad5d 	bpl.w	81f1c <_svfprintf_r+0x664>
   82462:	2b30      	cmp	r3, #48	; 0x30
   82464:	f43f ad5a 	beq.w	81f1c <_svfprintf_r+0x664>
   82468:	2330      	movs	r3, #48	; 0x30
   8246a:	3902      	subs	r1, #2
   8246c:	f806 3c01 	strb.w	r3, [r6, #-1]
   82470:	eba9 0301 	sub.w	r3, r9, r1
   82474:	930e      	str	r3, [sp, #56]	; 0x38
   82476:	460e      	mov	r6, r1
   82478:	f7ff bb3a 	b.w	81af0 <_svfprintf_r+0x238>
   8247c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8247e:	2900      	cmp	r1, #0
   82480:	f77f af79 	ble.w	82376 <_svfprintf_r+0xabe>
   82484:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82486:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82488:	4293      	cmp	r3, r2
   8248a:	bfa8      	it	ge
   8248c:	4613      	movge	r3, r2
   8248e:	2b00      	cmp	r3, #0
   82490:	461f      	mov	r7, r3
   82492:	dd0b      	ble.n	824ac <_svfprintf_r+0xbf4>
   82494:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82496:	443c      	add	r4, r7
   82498:	3301      	adds	r3, #1
   8249a:	2b07      	cmp	r3, #7
   8249c:	9427      	str	r4, [sp, #156]	; 0x9c
   8249e:	e888 00c0 	stmia.w	r8, {r6, r7}
   824a2:	9326      	str	r3, [sp, #152]	; 0x98
   824a4:	f300 82fb 	bgt.w	82a9e <_svfprintf_r+0x11e6>
   824a8:	f108 0808 	add.w	r8, r8, #8
   824ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
   824ae:	2f00      	cmp	r7, #0
   824b0:	bfa8      	it	ge
   824b2:	1bdb      	subge	r3, r3, r7
   824b4:	2b00      	cmp	r3, #0
   824b6:	461f      	mov	r7, r3
   824b8:	f340 80d7 	ble.w	8266a <_svfprintf_r+0xdb2>
   824bc:	2b10      	cmp	r3, #16
   824be:	f340 8433 	ble.w	82d28 <_svfprintf_r+0x1470>
   824c2:	4dba      	ldr	r5, [pc, #744]	; (827ac <_svfprintf_r+0xef4>)
   824c4:	4642      	mov	r2, r8
   824c6:	4621      	mov	r1, r4
   824c8:	46b0      	mov	r8, r6
   824ca:	f04f 0b10 	mov.w	fp, #16
   824ce:	462e      	mov	r6, r5
   824d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   824d2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   824d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   824d6:	e004      	b.n	824e2 <_svfprintf_r+0xc2a>
   824d8:	3208      	adds	r2, #8
   824da:	3f10      	subs	r7, #16
   824dc:	2f10      	cmp	r7, #16
   824de:	f340 80b5 	ble.w	8264c <_svfprintf_r+0xd94>
   824e2:	3301      	adds	r3, #1
   824e4:	3110      	adds	r1, #16
   824e6:	2b07      	cmp	r3, #7
   824e8:	9127      	str	r1, [sp, #156]	; 0x9c
   824ea:	9326      	str	r3, [sp, #152]	; 0x98
   824ec:	e882 0840 	stmia.w	r2, {r6, fp}
   824f0:	ddf2      	ble.n	824d8 <_svfprintf_r+0xc20>
   824f2:	aa25      	add	r2, sp, #148	; 0x94
   824f4:	4629      	mov	r1, r5
   824f6:	4620      	mov	r0, r4
   824f8:	f002 face 	bl	84a98 <__ssprint_r>
   824fc:	2800      	cmp	r0, #0
   824fe:	f47f aab8 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82502:	464a      	mov	r2, r9
   82504:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82506:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82508:	e7e7      	b.n	824da <_svfprintf_r+0xc22>
   8250a:	2d00      	cmp	r5, #0
   8250c:	bf08      	it	eq
   8250e:	2c0a      	cmpeq	r4, #10
   82510:	f0c0 8090 	bcc.w	82634 <_svfprintf_r+0xd7c>
   82514:	464e      	mov	r6, r9
   82516:	4620      	mov	r0, r4
   82518:	4629      	mov	r1, r5
   8251a:	220a      	movs	r2, #10
   8251c:	2300      	movs	r3, #0
   8251e:	f003 fbab 	bl	85c78 <__aeabi_uldivmod>
   82522:	3230      	adds	r2, #48	; 0x30
   82524:	f806 2d01 	strb.w	r2, [r6, #-1]!
   82528:	4620      	mov	r0, r4
   8252a:	4629      	mov	r1, r5
   8252c:	2300      	movs	r3, #0
   8252e:	220a      	movs	r2, #10
   82530:	f003 fba2 	bl	85c78 <__aeabi_uldivmod>
   82534:	4604      	mov	r4, r0
   82536:	460d      	mov	r5, r1
   82538:	ea54 0305 	orrs.w	r3, r4, r5
   8253c:	d1eb      	bne.n	82516 <_svfprintf_r+0xc5e>
   8253e:	eba9 0306 	sub.w	r3, r9, r6
   82542:	930e      	str	r3, [sp, #56]	; 0x38
   82544:	f7ff bad4 	b.w	81af0 <_svfprintf_r+0x238>
   82548:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8254a:	464e      	mov	r6, r9
   8254c:	930e      	str	r3, [sp, #56]	; 0x38
   8254e:	f7ff bacf 	b.w	81af0 <_svfprintf_r+0x238>
   82552:	1e5e      	subs	r6, r3, #1
   82554:	2e00      	cmp	r6, #0
   82556:	f77f aeca 	ble.w	822ee <_svfprintf_r+0xa36>
   8255a:	2e10      	cmp	r6, #16
   8255c:	f340 83e2 	ble.w	82d24 <_svfprintf_r+0x146c>
   82560:	4622      	mov	r2, r4
   82562:	f04f 0b10 	mov.w	fp, #16
   82566:	4d91      	ldr	r5, [pc, #580]	; (827ac <_svfprintf_r+0xef4>)
   82568:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8256a:	e004      	b.n	82576 <_svfprintf_r+0xcbe>
   8256c:	3e10      	subs	r6, #16
   8256e:	2e10      	cmp	r6, #16
   82570:	f108 0808 	add.w	r8, r8, #8
   82574:	dd15      	ble.n	825a2 <_svfprintf_r+0xcea>
   82576:	3701      	adds	r7, #1
   82578:	3210      	adds	r2, #16
   8257a:	2f07      	cmp	r7, #7
   8257c:	9227      	str	r2, [sp, #156]	; 0x9c
   8257e:	9726      	str	r7, [sp, #152]	; 0x98
   82580:	e888 0820 	stmia.w	r8, {r5, fp}
   82584:	ddf2      	ble.n	8256c <_svfprintf_r+0xcb4>
   82586:	aa25      	add	r2, sp, #148	; 0x94
   82588:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8258a:	4620      	mov	r0, r4
   8258c:	f002 fa84 	bl	84a98 <__ssprint_r>
   82590:	2800      	cmp	r0, #0
   82592:	f47f aa6e 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82596:	3e10      	subs	r6, #16
   82598:	2e10      	cmp	r6, #16
   8259a:	46c8      	mov	r8, r9
   8259c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8259e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   825a0:	dce9      	bgt.n	82576 <_svfprintf_r+0xcbe>
   825a2:	4614      	mov	r4, r2
   825a4:	3701      	adds	r7, #1
   825a6:	4434      	add	r4, r6
   825a8:	2f07      	cmp	r7, #7
   825aa:	9427      	str	r4, [sp, #156]	; 0x9c
   825ac:	9726      	str	r7, [sp, #152]	; 0x98
   825ae:	e888 0060 	stmia.w	r8, {r5, r6}
   825b2:	f77f ae9a 	ble.w	822ea <_svfprintf_r+0xa32>
   825b6:	aa25      	add	r2, sp, #148	; 0x94
   825b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825ba:	980c      	ldr	r0, [sp, #48]	; 0x30
   825bc:	f002 fa6c 	bl	84a98 <__ssprint_r>
   825c0:	2800      	cmp	r0, #0
   825c2:	f47f aa56 	bne.w	81a72 <_svfprintf_r+0x1ba>
   825c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   825c8:	9f26      	ldr	r7, [sp, #152]	; 0x98
   825ca:	46c8      	mov	r8, r9
   825cc:	e68f      	b.n	822ee <_svfprintf_r+0xa36>
   825ce:	3204      	adds	r2, #4
   825d0:	681c      	ldr	r4, [r3, #0]
   825d2:	2500      	movs	r5, #0
   825d4:	2301      	movs	r3, #1
   825d6:	920f      	str	r2, [sp, #60]	; 0x3c
   825d8:	f7ff ba6c 	b.w	81ab4 <_svfprintf_r+0x1fc>
   825dc:	681c      	ldr	r4, [r3, #0]
   825de:	3304      	adds	r3, #4
   825e0:	930f      	str	r3, [sp, #60]	; 0x3c
   825e2:	2500      	movs	r5, #0
   825e4:	e42e      	b.n	81e44 <_svfprintf_r+0x58c>
   825e6:	681c      	ldr	r4, [r3, #0]
   825e8:	3304      	adds	r3, #4
   825ea:	17e5      	asrs	r5, r4, #31
   825ec:	4622      	mov	r2, r4
   825ee:	930f      	str	r3, [sp, #60]	; 0x3c
   825f0:	462b      	mov	r3, r5
   825f2:	2a00      	cmp	r2, #0
   825f4:	f173 0300 	sbcs.w	r3, r3, #0
   825f8:	f6bf ac6c 	bge.w	81ed4 <_svfprintf_r+0x61c>
   825fc:	272d      	movs	r7, #45	; 0x2d
   825fe:	4264      	negs	r4, r4
   82600:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82604:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   82608:	2301      	movs	r3, #1
   8260a:	f7ff ba57 	b.w	81abc <_svfprintf_r+0x204>
   8260e:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82610:	2500      	movs	r5, #0
   82612:	460a      	mov	r2, r1
   82614:	3204      	adds	r2, #4
   82616:	680c      	ldr	r4, [r1, #0]
   82618:	920f      	str	r2, [sp, #60]	; 0x3c
   8261a:	f7ff ba4b 	b.w	81ab4 <_svfprintf_r+0x1fc>
   8261e:	4614      	mov	r4, r2
   82620:	3301      	adds	r3, #1
   82622:	4434      	add	r4, r6
   82624:	2b07      	cmp	r3, #7
   82626:	9427      	str	r4, [sp, #156]	; 0x9c
   82628:	9326      	str	r3, [sp, #152]	; 0x98
   8262a:	e888 0060 	stmia.w	r8, {r5, r6}
   8262e:	f77f ab33 	ble.w	81c98 <_svfprintf_r+0x3e0>
   82632:	e6e0      	b.n	823f6 <_svfprintf_r+0xb3e>
   82634:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82638:	2301      	movs	r3, #1
   8263a:	ae42      	add	r6, sp, #264	; 0x108
   8263c:	3430      	adds	r4, #48	; 0x30
   8263e:	f8cd b01c 	str.w	fp, [sp, #28]
   82642:	f806 4d41 	strb.w	r4, [r6, #-65]!
   82646:	930e      	str	r3, [sp, #56]	; 0x38
   82648:	f7ff ba52 	b.w	81af0 <_svfprintf_r+0x238>
   8264c:	4635      	mov	r5, r6
   8264e:	460c      	mov	r4, r1
   82650:	4646      	mov	r6, r8
   82652:	4690      	mov	r8, r2
   82654:	3301      	adds	r3, #1
   82656:	443c      	add	r4, r7
   82658:	2b07      	cmp	r3, #7
   8265a:	9427      	str	r4, [sp, #156]	; 0x9c
   8265c:	9326      	str	r3, [sp, #152]	; 0x98
   8265e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82662:	f300 8246 	bgt.w	82af2 <_svfprintf_r+0x123a>
   82666:	f108 0808 	add.w	r8, r8, #8
   8266a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8266c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8266e:	429a      	cmp	r2, r3
   82670:	db45      	blt.n	826fe <_svfprintf_r+0xe46>
   82672:	9b07      	ldr	r3, [sp, #28]
   82674:	07d9      	lsls	r1, r3, #31
   82676:	d442      	bmi.n	826fe <_svfprintf_r+0xe46>
   82678:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8267a:	9812      	ldr	r0, [sp, #72]	; 0x48
   8267c:	1a9a      	subs	r2, r3, r2
   8267e:	1a1d      	subs	r5, r3, r0
   82680:	4295      	cmp	r5, r2
   82682:	bfa8      	it	ge
   82684:	4615      	movge	r5, r2
   82686:	2d00      	cmp	r5, #0
   82688:	dd0e      	ble.n	826a8 <_svfprintf_r+0xdf0>
   8268a:	9926      	ldr	r1, [sp, #152]	; 0x98
   8268c:	4406      	add	r6, r0
   8268e:	3101      	adds	r1, #1
   82690:	442c      	add	r4, r5
   82692:	2907      	cmp	r1, #7
   82694:	f8c8 6000 	str.w	r6, [r8]
   82698:	9427      	str	r4, [sp, #156]	; 0x9c
   8269a:	f8c8 5004 	str.w	r5, [r8, #4]
   8269e:	9126      	str	r1, [sp, #152]	; 0x98
   826a0:	f300 8216 	bgt.w	82ad0 <_svfprintf_r+0x1218>
   826a4:	f108 0808 	add.w	r8, r8, #8
   826a8:	2d00      	cmp	r5, #0
   826aa:	bfb4      	ite	lt
   826ac:	4616      	movlt	r6, r2
   826ae:	1b56      	subge	r6, r2, r5
   826b0:	2e00      	cmp	r6, #0
   826b2:	f77f aaf3 	ble.w	81c9c <_svfprintf_r+0x3e4>
   826b6:	2e10      	cmp	r6, #16
   826b8:	f340 82f3 	ble.w	82ca2 <_svfprintf_r+0x13ea>
   826bc:	4622      	mov	r2, r4
   826be:	2710      	movs	r7, #16
   826c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   826c2:	4d3a      	ldr	r5, [pc, #232]	; (827ac <_svfprintf_r+0xef4>)
   826c4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   826c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   826ca:	e004      	b.n	826d6 <_svfprintf_r+0xe1e>
   826cc:	f108 0808 	add.w	r8, r8, #8
   826d0:	3e10      	subs	r6, #16
   826d2:	2e10      	cmp	r6, #16
   826d4:	dda3      	ble.n	8261e <_svfprintf_r+0xd66>
   826d6:	3301      	adds	r3, #1
   826d8:	3210      	adds	r2, #16
   826da:	2b07      	cmp	r3, #7
   826dc:	9227      	str	r2, [sp, #156]	; 0x9c
   826de:	9326      	str	r3, [sp, #152]	; 0x98
   826e0:	e888 00a0 	stmia.w	r8, {r5, r7}
   826e4:	ddf2      	ble.n	826cc <_svfprintf_r+0xe14>
   826e6:	aa25      	add	r2, sp, #148	; 0x94
   826e8:	4621      	mov	r1, r4
   826ea:	4658      	mov	r0, fp
   826ec:	f002 f9d4 	bl	84a98 <__ssprint_r>
   826f0:	2800      	cmp	r0, #0
   826f2:	f47f a9be 	bne.w	81a72 <_svfprintf_r+0x1ba>
   826f6:	46c8      	mov	r8, r9
   826f8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   826fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   826fc:	e7e8      	b.n	826d0 <_svfprintf_r+0xe18>
   826fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82700:	9819      	ldr	r0, [sp, #100]	; 0x64
   82702:	3301      	adds	r3, #1
   82704:	991a      	ldr	r1, [sp, #104]	; 0x68
   82706:	4404      	add	r4, r0
   82708:	2b07      	cmp	r3, #7
   8270a:	9427      	str	r4, [sp, #156]	; 0x9c
   8270c:	f8c8 1000 	str.w	r1, [r8]
   82710:	f8c8 0004 	str.w	r0, [r8, #4]
   82714:	9326      	str	r3, [sp, #152]	; 0x98
   82716:	f300 81cf 	bgt.w	82ab8 <_svfprintf_r+0x1200>
   8271a:	f108 0808 	add.w	r8, r8, #8
   8271e:	e7ab      	b.n	82678 <_svfprintf_r+0xdc0>
   82720:	9b07      	ldr	r3, [sp, #28]
   82722:	07da      	lsls	r2, r3, #31
   82724:	f53f adae 	bmi.w	82284 <_svfprintf_r+0x9cc>
   82728:	2301      	movs	r3, #1
   8272a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8272c:	441c      	add	r4, r3
   8272e:	441f      	add	r7, r3
   82730:	2f07      	cmp	r7, #7
   82732:	9427      	str	r4, [sp, #156]	; 0x9c
   82734:	f8c8 6000 	str.w	r6, [r8]
   82738:	9726      	str	r7, [sp, #152]	; 0x98
   8273a:	f8c8 3004 	str.w	r3, [r8, #4]
   8273e:	f77f add4 	ble.w	822ea <_svfprintf_r+0xa32>
   82742:	aa25      	add	r2, sp, #148	; 0x94
   82744:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82746:	980c      	ldr	r0, [sp, #48]	; 0x30
   82748:	f002 f9a6 	bl	84a98 <__ssprint_r>
   8274c:	2800      	cmp	r0, #0
   8274e:	f47f a990 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82752:	46c8      	mov	r8, r9
   82754:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82756:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82758:	e5c9      	b.n	822ee <_svfprintf_r+0xa36>
   8275a:	aa25      	add	r2, sp, #148	; 0x94
   8275c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8275e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82760:	f002 f99a 	bl	84a98 <__ssprint_r>
   82764:	2800      	cmp	r0, #0
   82766:	f47f a984 	bne.w	81a72 <_svfprintf_r+0x1ba>
   8276a:	46c8      	mov	r8, r9
   8276c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8276e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82770:	e597      	b.n	822a2 <_svfprintf_r+0x9ea>
   82772:	aa25      	add	r2, sp, #148	; 0x94
   82774:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82776:	980c      	ldr	r0, [sp, #48]	; 0x30
   82778:	f002 f98e 	bl	84a98 <__ssprint_r>
   8277c:	2800      	cmp	r0, #0
   8277e:	f47f a978 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82782:	46c8      	mov	r8, r9
   82784:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82786:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82788:	e59a      	b.n	822c0 <_svfprintf_r+0xa08>
   8278a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8278c:	3407      	adds	r4, #7
   8278e:	f024 0407 	bic.w	r4, r4, #7
   82792:	f104 0108 	add.w	r1, r4, #8
   82796:	e9d4 2300 	ldrd	r2, r3, [r4]
   8279a:	910f      	str	r1, [sp, #60]	; 0x3c
   8279c:	4614      	mov	r4, r2
   8279e:	461d      	mov	r5, r3
   827a0:	f7ff bb93 	b.w	81eca <_svfprintf_r+0x612>
   827a4:	464e      	mov	r6, r9
   827a6:	f7ff b9a3 	b.w	81af0 <_svfprintf_r+0x238>
   827aa:	bf00      	nop
   827ac:	00086150 	.word	0x00086150
   827b0:	aa25      	add	r2, sp, #148	; 0x94
   827b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   827b4:	980c      	ldr	r0, [sp, #48]	; 0x30
   827b6:	f002 f96f 	bl	84a98 <__ssprint_r>
   827ba:	2800      	cmp	r0, #0
   827bc:	f47f a959 	bne.w	81a72 <_svfprintf_r+0x1ba>
   827c0:	46c8      	mov	r8, r9
   827c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   827c4:	f7ff ba1a 	b.w	81bfc <_svfprintf_r+0x344>
   827c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
   827ca:	4622      	mov	r2, r4
   827cc:	4620      	mov	r0, r4
   827ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
   827d0:	4623      	mov	r3, r4
   827d2:	4621      	mov	r1, r4
   827d4:	f003 fa12 	bl	85bfc <__aeabi_dcmpun>
   827d8:	2800      	cmp	r0, #0
   827da:	f040 8273 	bne.w	82cc4 <_svfprintf_r+0x140c>
   827de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   827e0:	3301      	adds	r3, #1
   827e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   827e4:	f023 0320 	bic.w	r3, r3, #32
   827e8:	930e      	str	r3, [sp, #56]	; 0x38
   827ea:	f000 819c 	beq.w	82b26 <_svfprintf_r+0x126e>
   827ee:	2b47      	cmp	r3, #71	; 0x47
   827f0:	f000 80d6 	beq.w	829a0 <_svfprintf_r+0x10e8>
   827f4:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   827f8:	9307      	str	r3, [sp, #28]
   827fa:	9b15      	ldr	r3, [sp, #84]	; 0x54
   827fc:	1e1f      	subs	r7, r3, #0
   827fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82800:	9308      	str	r3, [sp, #32]
   82802:	bfb7      	itett	lt
   82804:	463b      	movlt	r3, r7
   82806:	2300      	movge	r3, #0
   82808:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   8280c:	232d      	movlt	r3, #45	; 0x2d
   8280e:	9310      	str	r3, [sp, #64]	; 0x40
   82810:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82812:	2b66      	cmp	r3, #102	; 0x66
   82814:	f000 8190 	beq.w	82b38 <_svfprintf_r+0x1280>
   82818:	2b46      	cmp	r3, #70	; 0x46
   8281a:	f000 80a4 	beq.w	82966 <_svfprintf_r+0x10ae>
   8281e:	2002      	movs	r0, #2
   82820:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82822:	a923      	add	r1, sp, #140	; 0x8c
   82824:	2b45      	cmp	r3, #69	; 0x45
   82826:	bf0a      	itet	eq
   82828:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   8282a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8282c:	1c5d      	addeq	r5, r3, #1
   8282e:	e88d 0021 	stmia.w	sp, {r0, r5}
   82832:	9104      	str	r1, [sp, #16]
   82834:	a820      	add	r0, sp, #128	; 0x80
   82836:	a91f      	add	r1, sp, #124	; 0x7c
   82838:	463b      	mov	r3, r7
   8283a:	9003      	str	r0, [sp, #12]
   8283c:	9a08      	ldr	r2, [sp, #32]
   8283e:	9102      	str	r1, [sp, #8]
   82840:	980c      	ldr	r0, [sp, #48]	; 0x30
   82842:	f000 fb59 	bl	82ef8 <_dtoa_r>
   82846:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82848:	4606      	mov	r6, r0
   8284a:	2b67      	cmp	r3, #103	; 0x67
   8284c:	f040 81ba 	bne.w	82bc4 <_svfprintf_r+0x130c>
   82850:	f01b 0f01 	tst.w	fp, #1
   82854:	f000 8223 	beq.w	82c9e <_svfprintf_r+0x13e6>
   82858:	1974      	adds	r4, r6, r5
   8285a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8285c:	9808      	ldr	r0, [sp, #32]
   8285e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82860:	4639      	mov	r1, r7
   82862:	f003 f999 	bl	85b98 <__aeabi_dcmpeq>
   82866:	2800      	cmp	r0, #0
   82868:	f040 8124 	bne.w	82ab4 <_svfprintf_r+0x11fc>
   8286c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8286e:	42a3      	cmp	r3, r4
   82870:	d206      	bcs.n	82880 <_svfprintf_r+0xfc8>
   82872:	2130      	movs	r1, #48	; 0x30
   82874:	1c5a      	adds	r2, r3, #1
   82876:	9223      	str	r2, [sp, #140]	; 0x8c
   82878:	7019      	strb	r1, [r3, #0]
   8287a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8287c:	429c      	cmp	r4, r3
   8287e:	d8f9      	bhi.n	82874 <_svfprintf_r+0xfbc>
   82880:	1b9b      	subs	r3, r3, r6
   82882:	9313      	str	r3, [sp, #76]	; 0x4c
   82884:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82886:	2b47      	cmp	r3, #71	; 0x47
   82888:	f000 80a2 	beq.w	829d0 <_svfprintf_r+0x1118>
   8288c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8288e:	2b65      	cmp	r3, #101	; 0x65
   82890:	f340 81a7 	ble.w	82be2 <_svfprintf_r+0x132a>
   82894:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82896:	2b66      	cmp	r3, #102	; 0x66
   82898:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8289a:	9312      	str	r3, [sp, #72]	; 0x48
   8289c:	f000 8171 	beq.w	82b82 <_svfprintf_r+0x12ca>
   828a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   828a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   828a4:	4619      	mov	r1, r3
   828a6:	4291      	cmp	r1, r2
   828a8:	f300 815d 	bgt.w	82b66 <_svfprintf_r+0x12ae>
   828ac:	f01b 0f01 	tst.w	fp, #1
   828b0:	f040 81f0 	bne.w	82c94 <_svfprintf_r+0x13dc>
   828b4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   828b8:	9308      	str	r3, [sp, #32]
   828ba:	2367      	movs	r3, #103	; 0x67
   828bc:	920e      	str	r2, [sp, #56]	; 0x38
   828be:	9311      	str	r3, [sp, #68]	; 0x44
   828c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   828c2:	2b00      	cmp	r3, #0
   828c4:	d17d      	bne.n	829c2 <_svfprintf_r+0x110a>
   828c6:	930a      	str	r3, [sp, #40]	; 0x28
   828c8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   828cc:	f7ff b918 	b.w	81b00 <_svfprintf_r+0x248>
   828d0:	f024 0407 	bic.w	r4, r4, #7
   828d4:	6823      	ldr	r3, [r4, #0]
   828d6:	9314      	str	r3, [sp, #80]	; 0x50
   828d8:	6863      	ldr	r3, [r4, #4]
   828da:	9315      	str	r3, [sp, #84]	; 0x54
   828dc:	f104 0308 	add.w	r3, r4, #8
   828e0:	930f      	str	r3, [sp, #60]	; 0x3c
   828e2:	f7ff bb33 	b.w	81f4c <_svfprintf_r+0x694>
   828e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   828e8:	6813      	ldr	r3, [r2, #0]
   828ea:	3204      	adds	r2, #4
   828ec:	920f      	str	r2, [sp, #60]	; 0x3c
   828ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
   828f0:	601a      	str	r2, [r3, #0]
   828f2:	f7ff b808 	b.w	81906 <_svfprintf_r+0x4e>
   828f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   828f8:	4daf      	ldr	r5, [pc, #700]	; (82bb8 <_svfprintf_r+0x1300>)
   828fa:	f7ff b9b1 	b.w	81c60 <_svfprintf_r+0x3a8>
   828fe:	aa25      	add	r2, sp, #148	; 0x94
   82900:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82902:	980c      	ldr	r0, [sp, #48]	; 0x30
   82904:	f002 f8c8 	bl	84a98 <__ssprint_r>
   82908:	2800      	cmp	r0, #0
   8290a:	f47f a8b2 	bne.w	81a72 <_svfprintf_r+0x1ba>
   8290e:	46c8      	mov	r8, r9
   82910:	e432      	b.n	82178 <_svfprintf_r+0x8c0>
   82912:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82914:	4613      	mov	r3, r2
   82916:	3304      	adds	r3, #4
   82918:	930f      	str	r3, [sp, #60]	; 0x3c
   8291a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8291c:	6811      	ldr	r1, [r2, #0]
   8291e:	17dd      	asrs	r5, r3, #31
   82920:	461a      	mov	r2, r3
   82922:	462b      	mov	r3, r5
   82924:	e9c1 2300 	strd	r2, r3, [r1]
   82928:	f7fe bfed 	b.w	81906 <_svfprintf_r+0x4e>
   8292c:	aa25      	add	r2, sp, #148	; 0x94
   8292e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82930:	980c      	ldr	r0, [sp, #48]	; 0x30
   82932:	f002 f8b1 	bl	84a98 <__ssprint_r>
   82936:	2800      	cmp	r0, #0
   82938:	f47f a89b 	bne.w	81a72 <_svfprintf_r+0x1ba>
   8293c:	46c8      	mov	r8, r9
   8293e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82940:	e433      	b.n	821aa <_svfprintf_r+0x8f2>
   82942:	f108 0808 	add.w	r8, r8, #8
   82946:	e52f      	b.n	823a8 <_svfprintf_r+0xaf0>
   82948:	2140      	movs	r1, #64	; 0x40
   8294a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8294c:	f001 fa1e 	bl	83d8c <_malloc_r>
   82950:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82952:	6010      	str	r0, [r2, #0]
   82954:	6110      	str	r0, [r2, #16]
   82956:	2800      	cmp	r0, #0
   82958:	f000 8213 	beq.w	82d82 <_svfprintf_r+0x14ca>
   8295c:	2340      	movs	r3, #64	; 0x40
   8295e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82960:	6153      	str	r3, [r2, #20]
   82962:	f7fe bfc0 	b.w	818e6 <_svfprintf_r+0x2e>
   82966:	2003      	movs	r0, #3
   82968:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8296a:	a923      	add	r1, sp, #140	; 0x8c
   8296c:	e88d 0011 	stmia.w	sp, {r0, r4}
   82970:	9104      	str	r1, [sp, #16]
   82972:	a820      	add	r0, sp, #128	; 0x80
   82974:	a91f      	add	r1, sp, #124	; 0x7c
   82976:	9003      	str	r0, [sp, #12]
   82978:	9a08      	ldr	r2, [sp, #32]
   8297a:	463b      	mov	r3, r7
   8297c:	9102      	str	r1, [sp, #8]
   8297e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82980:	f000 faba 	bl	82ef8 <_dtoa_r>
   82984:	4625      	mov	r5, r4
   82986:	4606      	mov	r6, r0
   82988:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8298a:	1974      	adds	r4, r6, r5
   8298c:	2b46      	cmp	r3, #70	; 0x46
   8298e:	f47f af64 	bne.w	8285a <_svfprintf_r+0xfa2>
   82992:	7833      	ldrb	r3, [r6, #0]
   82994:	2b30      	cmp	r3, #48	; 0x30
   82996:	f000 8187 	beq.w	82ca8 <_svfprintf_r+0x13f0>
   8299a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   8299c:	442c      	add	r4, r5
   8299e:	e75c      	b.n	8285a <_svfprintf_r+0xfa2>
   829a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   829a2:	2b00      	cmp	r3, #0
   829a4:	bf08      	it	eq
   829a6:	2301      	moveq	r3, #1
   829a8:	930a      	str	r3, [sp, #40]	; 0x28
   829aa:	e723      	b.n	827f4 <_svfprintf_r+0xf3c>
   829ac:	4630      	mov	r0, r6
   829ae:	950a      	str	r5, [sp, #40]	; 0x28
   829b0:	f7fe ff1a 	bl	817e8 <strlen>
   829b4:	940f      	str	r4, [sp, #60]	; 0x3c
   829b6:	900e      	str	r0, [sp, #56]	; 0x38
   829b8:	f8cd b01c 	str.w	fp, [sp, #28]
   829bc:	4603      	mov	r3, r0
   829be:	f7ff b9eb 	b.w	81d98 <_svfprintf_r+0x4e0>
   829c2:	272d      	movs	r7, #45	; 0x2d
   829c4:	2300      	movs	r3, #0
   829c6:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   829ca:	930a      	str	r3, [sp, #40]	; 0x28
   829cc:	f7ff b899 	b.w	81b02 <_svfprintf_r+0x24a>
   829d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   829d2:	461a      	mov	r2, r3
   829d4:	9312      	str	r3, [sp, #72]	; 0x48
   829d6:	3303      	adds	r3, #3
   829d8:	db04      	blt.n	829e4 <_svfprintf_r+0x112c>
   829da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   829dc:	4619      	mov	r1, r3
   829de:	4291      	cmp	r1, r2
   829e0:	f6bf af5e 	bge.w	828a0 <_svfprintf_r+0xfe8>
   829e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   829e6:	3b02      	subs	r3, #2
   829e8:	9311      	str	r3, [sp, #68]	; 0x44
   829ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
   829ec:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   829f0:	3b01      	subs	r3, #1
   829f2:	2b00      	cmp	r3, #0
   829f4:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   829f8:	bfb4      	ite	lt
   829fa:	222d      	movlt	r2, #45	; 0x2d
   829fc:	222b      	movge	r2, #43	; 0x2b
   829fe:	931f      	str	r3, [sp, #124]	; 0x7c
   82a00:	bfb8      	it	lt
   82a02:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   82a04:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   82a08:	bfb8      	it	lt
   82a0a:	f1c3 0301 	rsblt	r3, r3, #1
   82a0e:	2b09      	cmp	r3, #9
   82a10:	f340 811f 	ble.w	82c52 <_svfprintf_r+0x139a>
   82a14:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   82a18:	4601      	mov	r1, r0
   82a1a:	4c68      	ldr	r4, [pc, #416]	; (82bbc <_svfprintf_r+0x1304>)
   82a1c:	e000      	b.n	82a20 <_svfprintf_r+0x1168>
   82a1e:	4611      	mov	r1, r2
   82a20:	fb84 5203 	smull	r5, r2, r4, r3
   82a24:	17dd      	asrs	r5, r3, #31
   82a26:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   82a2a:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   82a2e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82a32:	3230      	adds	r2, #48	; 0x30
   82a34:	2d09      	cmp	r5, #9
   82a36:	f801 2c01 	strb.w	r2, [r1, #-1]
   82a3a:	462b      	mov	r3, r5
   82a3c:	f101 32ff 	add.w	r2, r1, #4294967295
   82a40:	dced      	bgt.n	82a1e <_svfprintf_r+0x1166>
   82a42:	3330      	adds	r3, #48	; 0x30
   82a44:	3902      	subs	r1, #2
   82a46:	b2dc      	uxtb	r4, r3
   82a48:	4288      	cmp	r0, r1
   82a4a:	f802 4c01 	strb.w	r4, [r2, #-1]
   82a4e:	f240 8191 	bls.w	82d74 <_svfprintf_r+0x14bc>
   82a52:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   82a56:	4613      	mov	r3, r2
   82a58:	e001      	b.n	82a5e <_svfprintf_r+0x11a6>
   82a5a:	f813 4b01 	ldrb.w	r4, [r3], #1
   82a5e:	4283      	cmp	r3, r0
   82a60:	f801 4b01 	strb.w	r4, [r1], #1
   82a64:	d1f9      	bne.n	82a5a <_svfprintf_r+0x11a2>
   82a66:	3301      	adds	r3, #1
   82a68:	1a9b      	subs	r3, r3, r2
   82a6a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   82a6e:	4413      	add	r3, r2
   82a70:	aa21      	add	r2, sp, #132	; 0x84
   82a72:	1a9b      	subs	r3, r3, r2
   82a74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82a76:	931b      	str	r3, [sp, #108]	; 0x6c
   82a78:	2a01      	cmp	r2, #1
   82a7a:	4413      	add	r3, r2
   82a7c:	930e      	str	r3, [sp, #56]	; 0x38
   82a7e:	f340 8147 	ble.w	82d10 <_svfprintf_r+0x1458>
   82a82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82a84:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82a86:	4413      	add	r3, r2
   82a88:	930e      	str	r3, [sp, #56]	; 0x38
   82a8a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82a8e:	9308      	str	r3, [sp, #32]
   82a90:	2300      	movs	r3, #0
   82a92:	9312      	str	r3, [sp, #72]	; 0x48
   82a94:	e714      	b.n	828c0 <_svfprintf_r+0x1008>
   82a96:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82a98:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82a9a:	f7ff b87a 	b.w	81b92 <_svfprintf_r+0x2da>
   82a9e:	aa25      	add	r2, sp, #148	; 0x94
   82aa0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82aa2:	980c      	ldr	r0, [sp, #48]	; 0x30
   82aa4:	f001 fff8 	bl	84a98 <__ssprint_r>
   82aa8:	2800      	cmp	r0, #0
   82aaa:	f47e afe2 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82aae:	46c8      	mov	r8, r9
   82ab0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ab2:	e4fb      	b.n	824ac <_svfprintf_r+0xbf4>
   82ab4:	4623      	mov	r3, r4
   82ab6:	e6e3      	b.n	82880 <_svfprintf_r+0xfc8>
   82ab8:	aa25      	add	r2, sp, #148	; 0x94
   82aba:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82abc:	980c      	ldr	r0, [sp, #48]	; 0x30
   82abe:	f001 ffeb 	bl	84a98 <__ssprint_r>
   82ac2:	2800      	cmp	r0, #0
   82ac4:	f47e afd5 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82ac8:	46c8      	mov	r8, r9
   82aca:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82acc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ace:	e5d3      	b.n	82678 <_svfprintf_r+0xdc0>
   82ad0:	aa25      	add	r2, sp, #148	; 0x94
   82ad2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ad4:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ad6:	f001 ffdf 	bl	84a98 <__ssprint_r>
   82ada:	2800      	cmp	r0, #0
   82adc:	f47e afc9 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82ae0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   82ae2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82ae4:	46c8      	mov	r8, r9
   82ae6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ae8:	1a9a      	subs	r2, r3, r2
   82aea:	e5dd      	b.n	826a8 <_svfprintf_r+0xdf0>
   82aec:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82aee:	f7ff b902 	b.w	81cf6 <_svfprintf_r+0x43e>
   82af2:	aa25      	add	r2, sp, #148	; 0x94
   82af4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82af6:	980c      	ldr	r0, [sp, #48]	; 0x30
   82af8:	f001 ffce 	bl	84a98 <__ssprint_r>
   82afc:	2800      	cmp	r0, #0
   82afe:	f47e afb8 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82b02:	46c8      	mov	r8, r9
   82b04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82b06:	e5b0      	b.n	8266a <_svfprintf_r+0xdb2>
   82b08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82b0a:	4637      	mov	r7, r6
   82b0c:	2b06      	cmp	r3, #6
   82b0e:	bf28      	it	cs
   82b10:	2306      	movcs	r3, #6
   82b12:	960a      	str	r6, [sp, #40]	; 0x28
   82b14:	9612      	str	r6, [sp, #72]	; 0x48
   82b16:	9308      	str	r3, [sp, #32]
   82b18:	940f      	str	r4, [sp, #60]	; 0x3c
   82b1a:	f8cd b01c 	str.w	fp, [sp, #28]
   82b1e:	930e      	str	r3, [sp, #56]	; 0x38
   82b20:	4e27      	ldr	r6, [pc, #156]	; (82bc0 <_svfprintf_r+0x1308>)
   82b22:	f7fe bfed 	b.w	81b00 <_svfprintf_r+0x248>
   82b26:	2306      	movs	r3, #6
   82b28:	930a      	str	r3, [sp, #40]	; 0x28
   82b2a:	e663      	b.n	827f4 <_svfprintf_r+0xf3c>
   82b2c:	232d      	movs	r3, #45	; 0x2d
   82b2e:	461f      	mov	r7, r3
   82b30:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82b34:	f7ff ba2b 	b.w	81f8e <_svfprintf_r+0x6d6>
   82b38:	2003      	movs	r0, #3
   82b3a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82b3c:	a923      	add	r1, sp, #140	; 0x8c
   82b3e:	e88d 0011 	stmia.w	sp, {r0, r4}
   82b42:	9104      	str	r1, [sp, #16]
   82b44:	a820      	add	r0, sp, #128	; 0x80
   82b46:	a91f      	add	r1, sp, #124	; 0x7c
   82b48:	9003      	str	r0, [sp, #12]
   82b4a:	9a08      	ldr	r2, [sp, #32]
   82b4c:	463b      	mov	r3, r7
   82b4e:	9102      	str	r1, [sp, #8]
   82b50:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b52:	f000 f9d1 	bl	82ef8 <_dtoa_r>
   82b56:	4625      	mov	r5, r4
   82b58:	4606      	mov	r6, r0
   82b5a:	1904      	adds	r4, r0, r4
   82b5c:	e719      	b.n	82992 <_svfprintf_r+0x10da>
   82b5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82b60:	4d15      	ldr	r5, [pc, #84]	; (82bb8 <_svfprintf_r+0x1300>)
   82b62:	f7ff bb7f 	b.w	82264 <_svfprintf_r+0x9ac>
   82b66:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82b68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82b6a:	4413      	add	r3, r2
   82b6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82b6e:	930e      	str	r3, [sp, #56]	; 0x38
   82b70:	2a00      	cmp	r2, #0
   82b72:	f340 80c6 	ble.w	82d02 <_svfprintf_r+0x144a>
   82b76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82b7a:	9308      	str	r3, [sp, #32]
   82b7c:	2367      	movs	r3, #103	; 0x67
   82b7e:	9311      	str	r3, [sp, #68]	; 0x44
   82b80:	e69e      	b.n	828c0 <_svfprintf_r+0x1008>
   82b82:	2b00      	cmp	r3, #0
   82b84:	f340 80e0 	ble.w	82d48 <_svfprintf_r+0x1490>
   82b88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82b8a:	2a00      	cmp	r2, #0
   82b8c:	f040 80af 	bne.w	82cee <_svfprintf_r+0x1436>
   82b90:	f01b 0f01 	tst.w	fp, #1
   82b94:	f040 80ab 	bne.w	82cee <_svfprintf_r+0x1436>
   82b98:	9308      	str	r3, [sp, #32]
   82b9a:	930e      	str	r3, [sp, #56]	; 0x38
   82b9c:	e690      	b.n	828c0 <_svfprintf_r+0x1008>
   82b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ba0:	940f      	str	r4, [sp, #60]	; 0x3c
   82ba2:	9308      	str	r3, [sp, #32]
   82ba4:	930e      	str	r3, [sp, #56]	; 0x38
   82ba6:	900a      	str	r0, [sp, #40]	; 0x28
   82ba8:	f8cd b01c 	str.w	fp, [sp, #28]
   82bac:	9012      	str	r0, [sp, #72]	; 0x48
   82bae:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82bb2:	f7fe bfa5 	b.w	81b00 <_svfprintf_r+0x248>
   82bb6:	bf00      	nop
   82bb8:	00086150 	.word	0x00086150
   82bbc:	66666667 	.word	0x66666667
   82bc0:	00086138 	.word	0x00086138
   82bc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82bc6:	2b47      	cmp	r3, #71	; 0x47
   82bc8:	f47f ae46 	bne.w	82858 <_svfprintf_r+0xfa0>
   82bcc:	f01b 0f01 	tst.w	fp, #1
   82bd0:	f47f aeda 	bne.w	82988 <_svfprintf_r+0x10d0>
   82bd4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82bd6:	1b9b      	subs	r3, r3, r6
   82bd8:	9313      	str	r3, [sp, #76]	; 0x4c
   82bda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82bdc:	2b47      	cmp	r3, #71	; 0x47
   82bde:	f43f aef7 	beq.w	829d0 <_svfprintf_r+0x1118>
   82be2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82be4:	9312      	str	r3, [sp, #72]	; 0x48
   82be6:	e700      	b.n	829ea <_svfprintf_r+0x1132>
   82be8:	2000      	movs	r0, #0
   82bea:	900a      	str	r0, [sp, #40]	; 0x28
   82bec:	f7fe bec0 	b.w	81970 <_svfprintf_r+0xb8>
   82bf0:	424f      	negs	r7, r1
   82bf2:	3110      	adds	r1, #16
   82bf4:	da35      	bge.n	82c62 <_svfprintf_r+0x13aa>
   82bf6:	2410      	movs	r4, #16
   82bf8:	4d6a      	ldr	r5, [pc, #424]	; (82da4 <_svfprintf_r+0x14ec>)
   82bfa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82bfe:	e004      	b.n	82c0a <_svfprintf_r+0x1352>
   82c00:	f108 0808 	add.w	r8, r8, #8
   82c04:	3f10      	subs	r7, #16
   82c06:	2f10      	cmp	r7, #16
   82c08:	dd2c      	ble.n	82c64 <_svfprintf_r+0x13ac>
   82c0a:	3301      	adds	r3, #1
   82c0c:	3210      	adds	r2, #16
   82c0e:	2b07      	cmp	r3, #7
   82c10:	9227      	str	r2, [sp, #156]	; 0x9c
   82c12:	9326      	str	r3, [sp, #152]	; 0x98
   82c14:	f8c8 5000 	str.w	r5, [r8]
   82c18:	f8c8 4004 	str.w	r4, [r8, #4]
   82c1c:	ddf0      	ble.n	82c00 <_svfprintf_r+0x1348>
   82c1e:	aa25      	add	r2, sp, #148	; 0x94
   82c20:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c22:	4658      	mov	r0, fp
   82c24:	f001 ff38 	bl	84a98 <__ssprint_r>
   82c28:	2800      	cmp	r0, #0
   82c2a:	f47e af22 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82c2e:	46c8      	mov	r8, r9
   82c30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c34:	e7e6      	b.n	82c04 <_svfprintf_r+0x134c>
   82c36:	aa25      	add	r2, sp, #148	; 0x94
   82c38:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c3a:	980c      	ldr	r0, [sp, #48]	; 0x30
   82c3c:	f001 ff2c 	bl	84a98 <__ssprint_r>
   82c40:	2800      	cmp	r0, #0
   82c42:	f47e af16 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82c46:	46c8      	mov	r8, r9
   82c48:	991f      	ldr	r1, [sp, #124]	; 0x7c
   82c4a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c4e:	f7ff bbc3 	b.w	823d8 <_svfprintf_r+0xb20>
   82c52:	2230      	movs	r2, #48	; 0x30
   82c54:	4413      	add	r3, r2
   82c56:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   82c5a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   82c5e:	ab22      	add	r3, sp, #136	; 0x88
   82c60:	e706      	b.n	82a70 <_svfprintf_r+0x11b8>
   82c62:	4d50      	ldr	r5, [pc, #320]	; (82da4 <_svfprintf_r+0x14ec>)
   82c64:	3301      	adds	r3, #1
   82c66:	443a      	add	r2, r7
   82c68:	2b07      	cmp	r3, #7
   82c6a:	e888 00a0 	stmia.w	r8, {r5, r7}
   82c6e:	9227      	str	r2, [sp, #156]	; 0x9c
   82c70:	9326      	str	r3, [sp, #152]	; 0x98
   82c72:	f108 0808 	add.w	r8, r8, #8
   82c76:	f77f abb2 	ble.w	823de <_svfprintf_r+0xb26>
   82c7a:	aa25      	add	r2, sp, #148	; 0x94
   82c7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82c7e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82c80:	f001 ff0a 	bl	84a98 <__ssprint_r>
   82c84:	2800      	cmp	r0, #0
   82c86:	f47e aef4 	bne.w	81a72 <_svfprintf_r+0x1ba>
   82c8a:	46c8      	mov	r8, r9
   82c8c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82c8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82c90:	f7ff bba5 	b.w	823de <_svfprintf_r+0xb26>
   82c94:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82c96:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82c98:	4413      	add	r3, r2
   82c9a:	930e      	str	r3, [sp, #56]	; 0x38
   82c9c:	e76b      	b.n	82b76 <_svfprintf_r+0x12be>
   82c9e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82ca0:	e5ee      	b.n	82880 <_svfprintf_r+0xfc8>
   82ca2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ca4:	4d3f      	ldr	r5, [pc, #252]	; (82da4 <_svfprintf_r+0x14ec>)
   82ca6:	e4bb      	b.n	82620 <_svfprintf_r+0xd68>
   82ca8:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82caa:	9808      	ldr	r0, [sp, #32]
   82cac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82cae:	4639      	mov	r1, r7
   82cb0:	f002 ff72 	bl	85b98 <__aeabi_dcmpeq>
   82cb4:	2800      	cmp	r0, #0
   82cb6:	f47f ae70 	bne.w	8299a <_svfprintf_r+0x10e2>
   82cba:	f1c5 0501 	rsb	r5, r5, #1
   82cbe:	951f      	str	r5, [sp, #124]	; 0x7c
   82cc0:	442c      	add	r4, r5
   82cc2:	e5ca      	b.n	8285a <_svfprintf_r+0xfa2>
   82cc4:	2303      	movs	r3, #3
   82cc6:	461a      	mov	r2, r3
   82cc8:	9308      	str	r3, [sp, #32]
   82cca:	2300      	movs	r3, #0
   82ccc:	4619      	mov	r1, r3
   82cce:	930a      	str	r3, [sp, #40]	; 0x28
   82cd0:	4e35      	ldr	r6, [pc, #212]	; (82da8 <_svfprintf_r+0x14f0>)
   82cd2:	4b36      	ldr	r3, [pc, #216]	; (82dac <_svfprintf_r+0x14f4>)
   82cd4:	920e      	str	r2, [sp, #56]	; 0x38
   82cd6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82cd8:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   82cdc:	9007      	str	r0, [sp, #28]
   82cde:	9112      	str	r1, [sp, #72]	; 0x48
   82ce0:	2a47      	cmp	r2, #71	; 0x47
   82ce2:	bfd8      	it	le
   82ce4:	461e      	movle	r6, r3
   82ce6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82cea:	f7fe bf09 	b.w	81b00 <_svfprintf_r+0x248>
   82cee:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82cf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82cf2:	4413      	add	r3, r2
   82cf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82cf6:	441a      	add	r2, r3
   82cf8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82cfc:	920e      	str	r2, [sp, #56]	; 0x38
   82cfe:	9308      	str	r3, [sp, #32]
   82d00:	e5de      	b.n	828c0 <_svfprintf_r+0x1008>
   82d02:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82d04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82d06:	f1c3 0301 	rsb	r3, r3, #1
   82d0a:	441a      	add	r2, r3
   82d0c:	4613      	mov	r3, r2
   82d0e:	e7c4      	b.n	82c9a <_svfprintf_r+0x13e2>
   82d10:	f01b 0301 	ands.w	r3, fp, #1
   82d14:	9312      	str	r3, [sp, #72]	; 0x48
   82d16:	f47f aeb4 	bne.w	82a82 <_svfprintf_r+0x11ca>
   82d1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82d20:	9308      	str	r3, [sp, #32]
   82d22:	e5cd      	b.n	828c0 <_svfprintf_r+0x1008>
   82d24:	4d1f      	ldr	r5, [pc, #124]	; (82da4 <_svfprintf_r+0x14ec>)
   82d26:	e43d      	b.n	825a4 <_svfprintf_r+0xcec>
   82d28:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d2a:	4d1e      	ldr	r5, [pc, #120]	; (82da4 <_svfprintf_r+0x14ec>)
   82d2c:	e492      	b.n	82654 <_svfprintf_r+0xd9c>
   82d2e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82d30:	f89a 3001 	ldrb.w	r3, [sl, #1]
   82d34:	6828      	ldr	r0, [r5, #0]
   82d36:	46a2      	mov	sl, r4
   82d38:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   82d3c:	900a      	str	r0, [sp, #40]	; 0x28
   82d3e:	4628      	mov	r0, r5
   82d40:	3004      	adds	r0, #4
   82d42:	900f      	str	r0, [sp, #60]	; 0x3c
   82d44:	f7fe be12 	b.w	8196c <_svfprintf_r+0xb4>
   82d48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d4a:	b913      	cbnz	r3, 82d52 <_svfprintf_r+0x149a>
   82d4c:	f01b 0f01 	tst.w	fp, #1
   82d50:	d002      	beq.n	82d58 <_svfprintf_r+0x14a0>
   82d52:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82d54:	3301      	adds	r3, #1
   82d56:	e7cd      	b.n	82cf4 <_svfprintf_r+0x143c>
   82d58:	2301      	movs	r3, #1
   82d5a:	e71d      	b.n	82b98 <_svfprintf_r+0x12e0>
   82d5c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d60:	f7ff b984 	b.w	8206c <_svfprintf_r+0x7b4>
   82d64:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d68:	f7ff b93e 	b.w	81fe8 <_svfprintf_r+0x730>
   82d6c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d70:	f7ff b854 	b.w	81e1c <_svfprintf_r+0x564>
   82d74:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   82d78:	e67a      	b.n	82a70 <_svfprintf_r+0x11b8>
   82d7a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d7e:	f7ff b9b6 	b.w	820ee <_svfprintf_r+0x836>
   82d82:	f04f 32ff 	mov.w	r2, #4294967295
   82d86:	230c      	movs	r3, #12
   82d88:	9209      	str	r2, [sp, #36]	; 0x24
   82d8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82d8c:	6013      	str	r3, [r2, #0]
   82d8e:	f7fe be79 	b.w	81a84 <_svfprintf_r+0x1cc>
   82d92:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d96:	f7ff b8c9 	b.w	81f2c <_svfprintf_r+0x674>
   82d9a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82d9e:	f7ff b87d 	b.w	81e9c <_svfprintf_r+0x5e4>
   82da2:	bf00      	nop
   82da4:	00086150 	.word	0x00086150
   82da8:	0008610c 	.word	0x0008610c
   82dac:	00086108 	.word	0x00086108

00082db0 <register_fini>:
   82db0:	4b02      	ldr	r3, [pc, #8]	; (82dbc <register_fini+0xc>)
   82db2:	b113      	cbz	r3, 82dba <register_fini+0xa>
   82db4:	4802      	ldr	r0, [pc, #8]	; (82dc0 <register_fini+0x10>)
   82db6:	f000 b805 	b.w	82dc4 <atexit>
   82dba:	4770      	bx	lr
   82dbc:	00000000 	.word	0x00000000
   82dc0:	00083d3d 	.word	0x00083d3d

00082dc4 <atexit>:
   82dc4:	2300      	movs	r3, #0
   82dc6:	4601      	mov	r1, r0
   82dc8:	461a      	mov	r2, r3
   82dca:	4618      	mov	r0, r3
   82dcc:	f001 beee 	b.w	84bac <__register_exitproc>

00082dd0 <quorem>:
   82dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82dd4:	6903      	ldr	r3, [r0, #16]
   82dd6:	690f      	ldr	r7, [r1, #16]
   82dd8:	b083      	sub	sp, #12
   82dda:	429f      	cmp	r7, r3
   82ddc:	f300 8088 	bgt.w	82ef0 <quorem+0x120>
   82de0:	3f01      	subs	r7, #1
   82de2:	f101 0614 	add.w	r6, r1, #20
   82de6:	f100 0a14 	add.w	sl, r0, #20
   82dea:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   82dee:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   82df2:	3301      	adds	r3, #1
   82df4:	fbb2 f8f3 	udiv	r8, r2, r3
   82df8:	00bb      	lsls	r3, r7, #2
   82dfa:	9300      	str	r3, [sp, #0]
   82dfc:	eb06 0903 	add.w	r9, r6, r3
   82e00:	4453      	add	r3, sl
   82e02:	9301      	str	r3, [sp, #4]
   82e04:	f1b8 0f00 	cmp.w	r8, #0
   82e08:	d03b      	beq.n	82e82 <quorem+0xb2>
   82e0a:	2300      	movs	r3, #0
   82e0c:	46b4      	mov	ip, r6
   82e0e:	461c      	mov	r4, r3
   82e10:	46d6      	mov	lr, sl
   82e12:	f85c 2b04 	ldr.w	r2, [ip], #4
   82e16:	f8de 5000 	ldr.w	r5, [lr]
   82e1a:	fa1f fb82 	uxth.w	fp, r2
   82e1e:	fb08 330b 	mla	r3, r8, fp, r3
   82e22:	0c12      	lsrs	r2, r2, #16
   82e24:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   82e28:	fb08 bb02 	mla	fp, r8, r2, fp
   82e2c:	b29a      	uxth	r2, r3
   82e2e:	1aa2      	subs	r2, r4, r2
   82e30:	b2ab      	uxth	r3, r5
   82e32:	fa1f f48b 	uxth.w	r4, fp
   82e36:	441a      	add	r2, r3
   82e38:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   82e3c:	eb04 4422 	add.w	r4, r4, r2, asr #16
   82e40:	b292      	uxth	r2, r2
   82e42:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   82e46:	45e1      	cmp	r9, ip
   82e48:	f84e 2b04 	str.w	r2, [lr], #4
   82e4c:	ea4f 4424 	mov.w	r4, r4, asr #16
   82e50:	ea4f 431b 	mov.w	r3, fp, lsr #16
   82e54:	d2dd      	bcs.n	82e12 <quorem+0x42>
   82e56:	9b00      	ldr	r3, [sp, #0]
   82e58:	f85a 3003 	ldr.w	r3, [sl, r3]
   82e5c:	b98b      	cbnz	r3, 82e82 <quorem+0xb2>
   82e5e:	9c01      	ldr	r4, [sp, #4]
   82e60:	1f23      	subs	r3, r4, #4
   82e62:	459a      	cmp	sl, r3
   82e64:	d20c      	bcs.n	82e80 <quorem+0xb0>
   82e66:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82e6a:	b94b      	cbnz	r3, 82e80 <quorem+0xb0>
   82e6c:	f1a4 0308 	sub.w	r3, r4, #8
   82e70:	e002      	b.n	82e78 <quorem+0xa8>
   82e72:	681a      	ldr	r2, [r3, #0]
   82e74:	3b04      	subs	r3, #4
   82e76:	b91a      	cbnz	r2, 82e80 <quorem+0xb0>
   82e78:	459a      	cmp	sl, r3
   82e7a:	f107 37ff 	add.w	r7, r7, #4294967295
   82e7e:	d3f8      	bcc.n	82e72 <quorem+0xa2>
   82e80:	6107      	str	r7, [r0, #16]
   82e82:	4604      	mov	r4, r0
   82e84:	f001 fcf8 	bl	84878 <__mcmp>
   82e88:	2800      	cmp	r0, #0
   82e8a:	db2d      	blt.n	82ee8 <quorem+0x118>
   82e8c:	4655      	mov	r5, sl
   82e8e:	2300      	movs	r3, #0
   82e90:	f108 0801 	add.w	r8, r8, #1
   82e94:	f856 1b04 	ldr.w	r1, [r6], #4
   82e98:	6828      	ldr	r0, [r5, #0]
   82e9a:	b28a      	uxth	r2, r1
   82e9c:	1a9a      	subs	r2, r3, r2
   82e9e:	0c0b      	lsrs	r3, r1, #16
   82ea0:	b281      	uxth	r1, r0
   82ea2:	440a      	add	r2, r1
   82ea4:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   82ea8:	eb03 4322 	add.w	r3, r3, r2, asr #16
   82eac:	b292      	uxth	r2, r2
   82eae:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   82eb2:	45b1      	cmp	r9, r6
   82eb4:	f845 2b04 	str.w	r2, [r5], #4
   82eb8:	ea4f 4323 	mov.w	r3, r3, asr #16
   82ebc:	d2ea      	bcs.n	82e94 <quorem+0xc4>
   82ebe:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   82ec2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   82ec6:	b97a      	cbnz	r2, 82ee8 <quorem+0x118>
   82ec8:	1f1a      	subs	r2, r3, #4
   82eca:	4592      	cmp	sl, r2
   82ecc:	d20b      	bcs.n	82ee6 <quorem+0x116>
   82ece:	f853 2c04 	ldr.w	r2, [r3, #-4]
   82ed2:	b942      	cbnz	r2, 82ee6 <quorem+0x116>
   82ed4:	3b08      	subs	r3, #8
   82ed6:	e002      	b.n	82ede <quorem+0x10e>
   82ed8:	681a      	ldr	r2, [r3, #0]
   82eda:	3b04      	subs	r3, #4
   82edc:	b91a      	cbnz	r2, 82ee6 <quorem+0x116>
   82ede:	459a      	cmp	sl, r3
   82ee0:	f107 37ff 	add.w	r7, r7, #4294967295
   82ee4:	d3f8      	bcc.n	82ed8 <quorem+0x108>
   82ee6:	6127      	str	r7, [r4, #16]
   82ee8:	4640      	mov	r0, r8
   82eea:	b003      	add	sp, #12
   82eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82ef0:	2000      	movs	r0, #0
   82ef2:	b003      	add	sp, #12
   82ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00082ef8 <_dtoa_r>:
   82ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82efc:	6c05      	ldr	r5, [r0, #64]	; 0x40
   82efe:	b09b      	sub	sp, #108	; 0x6c
   82f00:	4604      	mov	r4, r0
   82f02:	4692      	mov	sl, r2
   82f04:	469b      	mov	fp, r3
   82f06:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   82f08:	b14d      	cbz	r5, 82f1e <_dtoa_r+0x26>
   82f0a:	2301      	movs	r3, #1
   82f0c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   82f0e:	4629      	mov	r1, r5
   82f10:	4093      	lsls	r3, r2
   82f12:	60ab      	str	r3, [r5, #8]
   82f14:	606a      	str	r2, [r5, #4]
   82f16:	f001 fad7 	bl	844c8 <_Bfree>
   82f1a:	2300      	movs	r3, #0
   82f1c:	6423      	str	r3, [r4, #64]	; 0x40
   82f1e:	f1bb 0f00 	cmp.w	fp, #0
   82f22:	465d      	mov	r5, fp
   82f24:	db35      	blt.n	82f92 <_dtoa_r+0x9a>
   82f26:	2300      	movs	r3, #0
   82f28:	6033      	str	r3, [r6, #0]
   82f2a:	4b9d      	ldr	r3, [pc, #628]	; (831a0 <_dtoa_r+0x2a8>)
   82f2c:	43ab      	bics	r3, r5
   82f2e:	d015      	beq.n	82f5c <_dtoa_r+0x64>
   82f30:	2200      	movs	r2, #0
   82f32:	2300      	movs	r3, #0
   82f34:	4650      	mov	r0, sl
   82f36:	4659      	mov	r1, fp
   82f38:	f002 fe2e 	bl	85b98 <__aeabi_dcmpeq>
   82f3c:	4680      	mov	r8, r0
   82f3e:	2800      	cmp	r0, #0
   82f40:	d02d      	beq.n	82f9e <_dtoa_r+0xa6>
   82f42:	2301      	movs	r3, #1
   82f44:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82f46:	6013      	str	r3, [r2, #0]
   82f48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82f4a:	2b00      	cmp	r3, #0
   82f4c:	f000 80bd 	beq.w	830ca <_dtoa_r+0x1d2>
   82f50:	4894      	ldr	r0, [pc, #592]	; (831a4 <_dtoa_r+0x2ac>)
   82f52:	6018      	str	r0, [r3, #0]
   82f54:	3801      	subs	r0, #1
   82f56:	b01b      	add	sp, #108	; 0x6c
   82f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82f5c:	f242 730f 	movw	r3, #9999	; 0x270f
   82f60:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82f62:	6013      	str	r3, [r2, #0]
   82f64:	f1ba 0f00 	cmp.w	sl, #0
   82f68:	d10d      	bne.n	82f86 <_dtoa_r+0x8e>
   82f6a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   82f6e:	b955      	cbnz	r5, 82f86 <_dtoa_r+0x8e>
   82f70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82f72:	488d      	ldr	r0, [pc, #564]	; (831a8 <_dtoa_r+0x2b0>)
   82f74:	2b00      	cmp	r3, #0
   82f76:	d0ee      	beq.n	82f56 <_dtoa_r+0x5e>
   82f78:	f100 0308 	add.w	r3, r0, #8
   82f7c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   82f7e:	6013      	str	r3, [r2, #0]
   82f80:	b01b      	add	sp, #108	; 0x6c
   82f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82f86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82f88:	4888      	ldr	r0, [pc, #544]	; (831ac <_dtoa_r+0x2b4>)
   82f8a:	2b00      	cmp	r3, #0
   82f8c:	d0e3      	beq.n	82f56 <_dtoa_r+0x5e>
   82f8e:	1cc3      	adds	r3, r0, #3
   82f90:	e7f4      	b.n	82f7c <_dtoa_r+0x84>
   82f92:	2301      	movs	r3, #1
   82f94:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   82f98:	6033      	str	r3, [r6, #0]
   82f9a:	46ab      	mov	fp, r5
   82f9c:	e7c5      	b.n	82f2a <_dtoa_r+0x32>
   82f9e:	aa18      	add	r2, sp, #96	; 0x60
   82fa0:	ab19      	add	r3, sp, #100	; 0x64
   82fa2:	9201      	str	r2, [sp, #4]
   82fa4:	9300      	str	r3, [sp, #0]
   82fa6:	4652      	mov	r2, sl
   82fa8:	465b      	mov	r3, fp
   82faa:	4620      	mov	r0, r4
   82fac:	f001 fd0e 	bl	849cc <__d2b>
   82fb0:	0d2b      	lsrs	r3, r5, #20
   82fb2:	4681      	mov	r9, r0
   82fb4:	d071      	beq.n	8309a <_dtoa_r+0x1a2>
   82fb6:	4650      	mov	r0, sl
   82fb8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   82fbc:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   82fc0:	9f18      	ldr	r7, [sp, #96]	; 0x60
   82fc2:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   82fc6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   82fca:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   82fce:	2200      	movs	r2, #0
   82fd0:	4b77      	ldr	r3, [pc, #476]	; (831b0 <_dtoa_r+0x2b8>)
   82fd2:	f002 f9c5 	bl	85360 <__aeabi_dsub>
   82fd6:	a36c      	add	r3, pc, #432	; (adr r3, 83188 <_dtoa_r+0x290>)
   82fd8:	e9d3 2300 	ldrd	r2, r3, [r3]
   82fdc:	f002 fb74 	bl	856c8 <__aeabi_dmul>
   82fe0:	a36b      	add	r3, pc, #428	; (adr r3, 83190 <_dtoa_r+0x298>)
   82fe2:	e9d3 2300 	ldrd	r2, r3, [r3]
   82fe6:	f002 f9bd 	bl	85364 <__adddf3>
   82fea:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82fee:	4630      	mov	r0, r6
   82ff0:	f002 fb04 	bl	855fc <__aeabi_i2d>
   82ff4:	a368      	add	r3, pc, #416	; (adr r3, 83198 <_dtoa_r+0x2a0>)
   82ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
   82ffa:	f002 fb65 	bl	856c8 <__aeabi_dmul>
   82ffe:	4602      	mov	r2, r0
   83000:	460b      	mov	r3, r1
   83002:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83006:	f002 f9ad 	bl	85364 <__adddf3>
   8300a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8300e:	f002 fe0b 	bl	85c28 <__aeabi_d2iz>
   83012:	2200      	movs	r2, #0
   83014:	9002      	str	r0, [sp, #8]
   83016:	2300      	movs	r3, #0
   83018:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8301c:	f002 fdc6 	bl	85bac <__aeabi_dcmplt>
   83020:	2800      	cmp	r0, #0
   83022:	f040 816d 	bne.w	83300 <_dtoa_r+0x408>
   83026:	9d02      	ldr	r5, [sp, #8]
   83028:	2d16      	cmp	r5, #22
   8302a:	f200 8157 	bhi.w	832dc <_dtoa_r+0x3e4>
   8302e:	4961      	ldr	r1, [pc, #388]	; (831b4 <_dtoa_r+0x2bc>)
   83030:	4652      	mov	r2, sl
   83032:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   83036:	465b      	mov	r3, fp
   83038:	e9d1 0100 	ldrd	r0, r1, [r1]
   8303c:	f002 fdd4 	bl	85be8 <__aeabi_dcmpgt>
   83040:	2800      	cmp	r0, #0
   83042:	f000 81be 	beq.w	833c2 <_dtoa_r+0x4ca>
   83046:	1e6b      	subs	r3, r5, #1
   83048:	9302      	str	r3, [sp, #8]
   8304a:	2300      	movs	r3, #0
   8304c:	930e      	str	r3, [sp, #56]	; 0x38
   8304e:	1bbf      	subs	r7, r7, r6
   83050:	1e7b      	subs	r3, r7, #1
   83052:	9308      	str	r3, [sp, #32]
   83054:	f100 814e 	bmi.w	832f4 <_dtoa_r+0x3fc>
   83058:	2300      	movs	r3, #0
   8305a:	930a      	str	r3, [sp, #40]	; 0x28
   8305c:	9b02      	ldr	r3, [sp, #8]
   8305e:	2b00      	cmp	r3, #0
   83060:	f2c0 813f 	blt.w	832e2 <_dtoa_r+0x3ea>
   83064:	9a08      	ldr	r2, [sp, #32]
   83066:	930d      	str	r3, [sp, #52]	; 0x34
   83068:	4611      	mov	r1, r2
   8306a:	4419      	add	r1, r3
   8306c:	2300      	movs	r3, #0
   8306e:	9108      	str	r1, [sp, #32]
   83070:	930c      	str	r3, [sp, #48]	; 0x30
   83072:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83074:	2b09      	cmp	r3, #9
   83076:	d82a      	bhi.n	830ce <_dtoa_r+0x1d6>
   83078:	2b05      	cmp	r3, #5
   8307a:	f340 8658 	ble.w	83d2e <_dtoa_r+0xe36>
   8307e:	2500      	movs	r5, #0
   83080:	3b04      	subs	r3, #4
   83082:	9324      	str	r3, [sp, #144]	; 0x90
   83084:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83086:	3b02      	subs	r3, #2
   83088:	2b03      	cmp	r3, #3
   8308a:	f200 863f 	bhi.w	83d0c <_dtoa_r+0xe14>
   8308e:	e8df f013 	tbh	[pc, r3, lsl #1]
   83092:	03ce      	.short	0x03ce
   83094:	03d902c3 	.word	0x03d902c3
   83098:	045b      	.short	0x045b
   8309a:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8309c:	9e19      	ldr	r6, [sp, #100]	; 0x64
   8309e:	443e      	add	r6, r7
   830a0:	f206 4332 	addw	r3, r6, #1074	; 0x432
   830a4:	2b20      	cmp	r3, #32
   830a6:	f340 8187 	ble.w	833b8 <_dtoa_r+0x4c0>
   830aa:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   830ae:	f206 4012 	addw	r0, r6, #1042	; 0x412
   830b2:	409d      	lsls	r5, r3
   830b4:	fa2a f000 	lsr.w	r0, sl, r0
   830b8:	4328      	orrs	r0, r5
   830ba:	f002 fa8f 	bl	855dc <__aeabi_ui2d>
   830be:	2301      	movs	r3, #1
   830c0:	3e01      	subs	r6, #1
   830c2:	9314      	str	r3, [sp, #80]	; 0x50
   830c4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   830c8:	e781      	b.n	82fce <_dtoa_r+0xd6>
   830ca:	483b      	ldr	r0, [pc, #236]	; (831b8 <_dtoa_r+0x2c0>)
   830cc:	e743      	b.n	82f56 <_dtoa_r+0x5e>
   830ce:	2100      	movs	r1, #0
   830d0:	4620      	mov	r0, r4
   830d2:	6461      	str	r1, [r4, #68]	; 0x44
   830d4:	9125      	str	r1, [sp, #148]	; 0x94
   830d6:	f001 f9d1 	bl	8447c <_Balloc>
   830da:	f04f 33ff 	mov.w	r3, #4294967295
   830de:	9307      	str	r3, [sp, #28]
   830e0:	930f      	str	r3, [sp, #60]	; 0x3c
   830e2:	2301      	movs	r3, #1
   830e4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   830e6:	9004      	str	r0, [sp, #16]
   830e8:	6420      	str	r0, [r4, #64]	; 0x40
   830ea:	9224      	str	r2, [sp, #144]	; 0x90
   830ec:	930b      	str	r3, [sp, #44]	; 0x2c
   830ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
   830f0:	2b00      	cmp	r3, #0
   830f2:	f2c0 80d3 	blt.w	8329c <_dtoa_r+0x3a4>
   830f6:	9a02      	ldr	r2, [sp, #8]
   830f8:	2a0e      	cmp	r2, #14
   830fa:	f300 80cf 	bgt.w	8329c <_dtoa_r+0x3a4>
   830fe:	4b2d      	ldr	r3, [pc, #180]	; (831b4 <_dtoa_r+0x2bc>)
   83100:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83104:	e9d3 2300 	ldrd	r2, r3, [r3]
   83108:	e9cd 2308 	strd	r2, r3, [sp, #32]
   8310c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8310e:	2b00      	cmp	r3, #0
   83110:	f2c0 83b4 	blt.w	8387c <_dtoa_r+0x984>
   83114:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   83118:	4650      	mov	r0, sl
   8311a:	462a      	mov	r2, r5
   8311c:	4633      	mov	r3, r6
   8311e:	4659      	mov	r1, fp
   83120:	f002 fbfc 	bl	8591c <__aeabi_ddiv>
   83124:	f002 fd80 	bl	85c28 <__aeabi_d2iz>
   83128:	4680      	mov	r8, r0
   8312a:	f002 fa67 	bl	855fc <__aeabi_i2d>
   8312e:	462a      	mov	r2, r5
   83130:	4633      	mov	r3, r6
   83132:	f002 fac9 	bl	856c8 <__aeabi_dmul>
   83136:	4602      	mov	r2, r0
   83138:	460b      	mov	r3, r1
   8313a:	4650      	mov	r0, sl
   8313c:	4659      	mov	r1, fp
   8313e:	f002 f90f 	bl	85360 <__aeabi_dsub>
   83142:	9e07      	ldr	r6, [sp, #28]
   83144:	9f04      	ldr	r7, [sp, #16]
   83146:	f108 0530 	add.w	r5, r8, #48	; 0x30
   8314a:	2e01      	cmp	r6, #1
   8314c:	703d      	strb	r5, [r7, #0]
   8314e:	4602      	mov	r2, r0
   83150:	460b      	mov	r3, r1
   83152:	f107 0501 	add.w	r5, r7, #1
   83156:	d064      	beq.n	83222 <_dtoa_r+0x32a>
   83158:	2200      	movs	r2, #0
   8315a:	4b18      	ldr	r3, [pc, #96]	; (831bc <_dtoa_r+0x2c4>)
   8315c:	f002 fab4 	bl	856c8 <__aeabi_dmul>
   83160:	2200      	movs	r2, #0
   83162:	2300      	movs	r3, #0
   83164:	4606      	mov	r6, r0
   83166:	460f      	mov	r7, r1
   83168:	f002 fd16 	bl	85b98 <__aeabi_dcmpeq>
   8316c:	2800      	cmp	r0, #0
   8316e:	f040 8082 	bne.w	83276 <_dtoa_r+0x37e>
   83172:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83176:	f04f 0a00 	mov.w	sl, #0
   8317a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   8317e:	f04f 0b00 	mov.w	fp, #0
   83182:	940b      	str	r4, [sp, #44]	; 0x2c
   83184:	e029      	b.n	831da <_dtoa_r+0x2e2>
   83186:	bf00      	nop
   83188:	636f4361 	.word	0x636f4361
   8318c:	3fd287a7 	.word	0x3fd287a7
   83190:	8b60c8b3 	.word	0x8b60c8b3
   83194:	3fc68a28 	.word	0x3fc68a28
   83198:	509f79fb 	.word	0x509f79fb
   8319c:	3fd34413 	.word	0x3fd34413
   831a0:	7ff00000 	.word	0x7ff00000
   831a4:	000860b5 	.word	0x000860b5
   831a8:	00086160 	.word	0x00086160
   831ac:	0008616c 	.word	0x0008616c
   831b0:	3ff80000 	.word	0x3ff80000
   831b4:	000861a8 	.word	0x000861a8
   831b8:	000860b4 	.word	0x000860b4
   831bc:	40240000 	.word	0x40240000
   831c0:	2200      	movs	r2, #0
   831c2:	4b81      	ldr	r3, [pc, #516]	; (833c8 <_dtoa_r+0x4d0>)
   831c4:	f002 fa80 	bl	856c8 <__aeabi_dmul>
   831c8:	4652      	mov	r2, sl
   831ca:	465b      	mov	r3, fp
   831cc:	4606      	mov	r6, r0
   831ce:	460f      	mov	r7, r1
   831d0:	f002 fce2 	bl	85b98 <__aeabi_dcmpeq>
   831d4:	2800      	cmp	r0, #0
   831d6:	f040 83ba 	bne.w	8394e <_dtoa_r+0xa56>
   831da:	4642      	mov	r2, r8
   831dc:	464b      	mov	r3, r9
   831de:	4630      	mov	r0, r6
   831e0:	4639      	mov	r1, r7
   831e2:	f002 fb9b 	bl	8591c <__aeabi_ddiv>
   831e6:	f002 fd1f 	bl	85c28 <__aeabi_d2iz>
   831ea:	4604      	mov	r4, r0
   831ec:	f002 fa06 	bl	855fc <__aeabi_i2d>
   831f0:	4642      	mov	r2, r8
   831f2:	464b      	mov	r3, r9
   831f4:	f002 fa68 	bl	856c8 <__aeabi_dmul>
   831f8:	4602      	mov	r2, r0
   831fa:	460b      	mov	r3, r1
   831fc:	4630      	mov	r0, r6
   831fe:	4639      	mov	r1, r7
   83200:	f002 f8ae 	bl	85360 <__aeabi_dsub>
   83204:	f104 0630 	add.w	r6, r4, #48	; 0x30
   83208:	f805 6b01 	strb.w	r6, [r5], #1
   8320c:	9e04      	ldr	r6, [sp, #16]
   8320e:	9f07      	ldr	r7, [sp, #28]
   83210:	1bae      	subs	r6, r5, r6
   83212:	42be      	cmp	r6, r7
   83214:	4602      	mov	r2, r0
   83216:	460b      	mov	r3, r1
   83218:	d1d2      	bne.n	831c0 <_dtoa_r+0x2c8>
   8321a:	46a0      	mov	r8, r4
   8321c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83220:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83222:	4610      	mov	r0, r2
   83224:	4619      	mov	r1, r3
   83226:	f002 f89d 	bl	85364 <__adddf3>
   8322a:	4606      	mov	r6, r0
   8322c:	460f      	mov	r7, r1
   8322e:	4602      	mov	r2, r0
   83230:	460b      	mov	r3, r1
   83232:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83236:	f002 fcb9 	bl	85bac <__aeabi_dcmplt>
   8323a:	b948      	cbnz	r0, 83250 <_dtoa_r+0x358>
   8323c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83240:	4632      	mov	r2, r6
   83242:	463b      	mov	r3, r7
   83244:	f002 fca8 	bl	85b98 <__aeabi_dcmpeq>
   83248:	b1a8      	cbz	r0, 83276 <_dtoa_r+0x37e>
   8324a:	f018 0f01 	tst.w	r8, #1
   8324e:	d012      	beq.n	83276 <_dtoa_r+0x37e>
   83250:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83254:	1e6b      	subs	r3, r5, #1
   83256:	9a04      	ldr	r2, [sp, #16]
   83258:	e004      	b.n	83264 <_dtoa_r+0x36c>
   8325a:	429a      	cmp	r2, r3
   8325c:	f000 8402 	beq.w	83a64 <_dtoa_r+0xb6c>
   83260:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   83264:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   83268:	f103 0501 	add.w	r5, r3, #1
   8326c:	d0f5      	beq.n	8325a <_dtoa_r+0x362>
   8326e:	f108 0801 	add.w	r8, r8, #1
   83272:	f883 8000 	strb.w	r8, [r3]
   83276:	4649      	mov	r1, r9
   83278:	4620      	mov	r0, r4
   8327a:	f001 f925 	bl	844c8 <_Bfree>
   8327e:	2200      	movs	r2, #0
   83280:	9b02      	ldr	r3, [sp, #8]
   83282:	702a      	strb	r2, [r5, #0]
   83284:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83286:	3301      	adds	r3, #1
   83288:	6013      	str	r3, [r2, #0]
   8328a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8328c:	2b00      	cmp	r3, #0
   8328e:	f000 839f 	beq.w	839d0 <_dtoa_r+0xad8>
   83292:	9804      	ldr	r0, [sp, #16]
   83294:	601d      	str	r5, [r3, #0]
   83296:	b01b      	add	sp, #108	; 0x6c
   83298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8329c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8329e:	2a00      	cmp	r2, #0
   832a0:	d03e      	beq.n	83320 <_dtoa_r+0x428>
   832a2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   832a4:	2a01      	cmp	r2, #1
   832a6:	f340 8311 	ble.w	838cc <_dtoa_r+0x9d4>
   832aa:	9b07      	ldr	r3, [sp, #28]
   832ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   832ae:	1e5f      	subs	r7, r3, #1
   832b0:	42ba      	cmp	r2, r7
   832b2:	f2c0 8390 	blt.w	839d6 <_dtoa_r+0xade>
   832b6:	1bd7      	subs	r7, r2, r7
   832b8:	9b07      	ldr	r3, [sp, #28]
   832ba:	2b00      	cmp	r3, #0
   832bc:	f2c0 848c 	blt.w	83bd8 <_dtoa_r+0xce0>
   832c0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   832c2:	9b07      	ldr	r3, [sp, #28]
   832c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   832c6:	2101      	movs	r1, #1
   832c8:	441a      	add	r2, r3
   832ca:	920a      	str	r2, [sp, #40]	; 0x28
   832cc:	9a08      	ldr	r2, [sp, #32]
   832ce:	4620      	mov	r0, r4
   832d0:	441a      	add	r2, r3
   832d2:	9208      	str	r2, [sp, #32]
   832d4:	f001 f994 	bl	84600 <__i2b>
   832d8:	4606      	mov	r6, r0
   832da:	e023      	b.n	83324 <_dtoa_r+0x42c>
   832dc:	2301      	movs	r3, #1
   832de:	930e      	str	r3, [sp, #56]	; 0x38
   832e0:	e6b5      	b.n	8304e <_dtoa_r+0x156>
   832e2:	2300      	movs	r3, #0
   832e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   832e6:	930d      	str	r3, [sp, #52]	; 0x34
   832e8:	9b02      	ldr	r3, [sp, #8]
   832ea:	1ad2      	subs	r2, r2, r3
   832ec:	425b      	negs	r3, r3
   832ee:	920a      	str	r2, [sp, #40]	; 0x28
   832f0:	930c      	str	r3, [sp, #48]	; 0x30
   832f2:	e6be      	b.n	83072 <_dtoa_r+0x17a>
   832f4:	f1c7 0301 	rsb	r3, r7, #1
   832f8:	930a      	str	r3, [sp, #40]	; 0x28
   832fa:	2300      	movs	r3, #0
   832fc:	9308      	str	r3, [sp, #32]
   832fe:	e6ad      	b.n	8305c <_dtoa_r+0x164>
   83300:	9d02      	ldr	r5, [sp, #8]
   83302:	4628      	mov	r0, r5
   83304:	f002 f97a 	bl	855fc <__aeabi_i2d>
   83308:	4602      	mov	r2, r0
   8330a:	460b      	mov	r3, r1
   8330c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83310:	f002 fc42 	bl	85b98 <__aeabi_dcmpeq>
   83314:	2800      	cmp	r0, #0
   83316:	f47f ae86 	bne.w	83026 <_dtoa_r+0x12e>
   8331a:	1e6b      	subs	r3, r5, #1
   8331c:	9302      	str	r3, [sp, #8]
   8331e:	e682      	b.n	83026 <_dtoa_r+0x12e>
   83320:	ad0a      	add	r5, sp, #40	; 0x28
   83322:	cde0      	ldmia	r5, {r5, r6, r7}
   83324:	2d00      	cmp	r5, #0
   83326:	dd0c      	ble.n	83342 <_dtoa_r+0x44a>
   83328:	9908      	ldr	r1, [sp, #32]
   8332a:	2900      	cmp	r1, #0
   8332c:	460b      	mov	r3, r1
   8332e:	dd08      	ble.n	83342 <_dtoa_r+0x44a>
   83330:	42a9      	cmp	r1, r5
   83332:	bfa8      	it	ge
   83334:	462b      	movge	r3, r5
   83336:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83338:	1aed      	subs	r5, r5, r3
   8333a:	1ad2      	subs	r2, r2, r3
   8333c:	1acb      	subs	r3, r1, r3
   8333e:	920a      	str	r2, [sp, #40]	; 0x28
   83340:	9308      	str	r3, [sp, #32]
   83342:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83344:	b1d3      	cbz	r3, 8337c <_dtoa_r+0x484>
   83346:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83348:	2b00      	cmp	r3, #0
   8334a:	f000 82b8 	beq.w	838be <_dtoa_r+0x9c6>
   8334e:	2f00      	cmp	r7, #0
   83350:	dd10      	ble.n	83374 <_dtoa_r+0x47c>
   83352:	4631      	mov	r1, r6
   83354:	463a      	mov	r2, r7
   83356:	4620      	mov	r0, r4
   83358:	f001 f9ee 	bl	84738 <__pow5mult>
   8335c:	464a      	mov	r2, r9
   8335e:	4601      	mov	r1, r0
   83360:	4606      	mov	r6, r0
   83362:	4620      	mov	r0, r4
   83364:	f001 f956 	bl	84614 <__multiply>
   83368:	4603      	mov	r3, r0
   8336a:	4649      	mov	r1, r9
   8336c:	4620      	mov	r0, r4
   8336e:	4699      	mov	r9, r3
   83370:	f001 f8aa 	bl	844c8 <_Bfree>
   83374:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83376:	1bda      	subs	r2, r3, r7
   83378:	f040 82a2 	bne.w	838c0 <_dtoa_r+0x9c8>
   8337c:	2101      	movs	r1, #1
   8337e:	4620      	mov	r0, r4
   83380:	f001 f93e 	bl	84600 <__i2b>
   83384:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83386:	4680      	mov	r8, r0
   83388:	2b00      	cmp	r3, #0
   8338a:	dd1f      	ble.n	833cc <_dtoa_r+0x4d4>
   8338c:	4601      	mov	r1, r0
   8338e:	461a      	mov	r2, r3
   83390:	4620      	mov	r0, r4
   83392:	f001 f9d1 	bl	84738 <__pow5mult>
   83396:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83398:	4680      	mov	r8, r0
   8339a:	2b01      	cmp	r3, #1
   8339c:	f340 8255 	ble.w	8384a <_dtoa_r+0x952>
   833a0:	2300      	movs	r3, #0
   833a2:	930c      	str	r3, [sp, #48]	; 0x30
   833a4:	f8d8 3010 	ldr.w	r3, [r8, #16]
   833a8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   833ac:	6918      	ldr	r0, [r3, #16]
   833ae:	f001 f8d7 	bl	84560 <__hi0bits>
   833b2:	f1c0 0020 	rsb	r0, r0, #32
   833b6:	e013      	b.n	833e0 <_dtoa_r+0x4e8>
   833b8:	f1c3 0520 	rsb	r5, r3, #32
   833bc:	fa0a f005 	lsl.w	r0, sl, r5
   833c0:	e67b      	b.n	830ba <_dtoa_r+0x1c2>
   833c2:	900e      	str	r0, [sp, #56]	; 0x38
   833c4:	e643      	b.n	8304e <_dtoa_r+0x156>
   833c6:	bf00      	nop
   833c8:	40240000 	.word	0x40240000
   833cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   833ce:	2b01      	cmp	r3, #1
   833d0:	f340 8285 	ble.w	838de <_dtoa_r+0x9e6>
   833d4:	2300      	movs	r3, #0
   833d6:	930c      	str	r3, [sp, #48]	; 0x30
   833d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   833da:	2001      	movs	r0, #1
   833dc:	2b00      	cmp	r3, #0
   833de:	d1e1      	bne.n	833a4 <_dtoa_r+0x4ac>
   833e0:	9a08      	ldr	r2, [sp, #32]
   833e2:	4410      	add	r0, r2
   833e4:	f010 001f 	ands.w	r0, r0, #31
   833e8:	f000 80a1 	beq.w	8352e <_dtoa_r+0x636>
   833ec:	f1c0 0320 	rsb	r3, r0, #32
   833f0:	2b04      	cmp	r3, #4
   833f2:	f340 8486 	ble.w	83d02 <_dtoa_r+0xe0a>
   833f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   833f8:	f1c0 001c 	rsb	r0, r0, #28
   833fc:	4403      	add	r3, r0
   833fe:	930a      	str	r3, [sp, #40]	; 0x28
   83400:	4613      	mov	r3, r2
   83402:	4403      	add	r3, r0
   83404:	4405      	add	r5, r0
   83406:	9308      	str	r3, [sp, #32]
   83408:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8340a:	2b00      	cmp	r3, #0
   8340c:	dd05      	ble.n	8341a <_dtoa_r+0x522>
   8340e:	4649      	mov	r1, r9
   83410:	461a      	mov	r2, r3
   83412:	4620      	mov	r0, r4
   83414:	f001 f9e0 	bl	847d8 <__lshift>
   83418:	4681      	mov	r9, r0
   8341a:	9b08      	ldr	r3, [sp, #32]
   8341c:	2b00      	cmp	r3, #0
   8341e:	dd05      	ble.n	8342c <_dtoa_r+0x534>
   83420:	4641      	mov	r1, r8
   83422:	461a      	mov	r2, r3
   83424:	4620      	mov	r0, r4
   83426:	f001 f9d7 	bl	847d8 <__lshift>
   8342a:	4680      	mov	r8, r0
   8342c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8342e:	2b00      	cmp	r3, #0
   83430:	f040 8086 	bne.w	83540 <_dtoa_r+0x648>
   83434:	9b07      	ldr	r3, [sp, #28]
   83436:	2b00      	cmp	r3, #0
   83438:	f340 8264 	ble.w	83904 <_dtoa_r+0xa0c>
   8343c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8343e:	2b00      	cmp	r3, #0
   83440:	f000 8098 	beq.w	83574 <_dtoa_r+0x67c>
   83444:	2d00      	cmp	r5, #0
   83446:	dd05      	ble.n	83454 <_dtoa_r+0x55c>
   83448:	4631      	mov	r1, r6
   8344a:	462a      	mov	r2, r5
   8344c:	4620      	mov	r0, r4
   8344e:	f001 f9c3 	bl	847d8 <__lshift>
   83452:	4606      	mov	r6, r0
   83454:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83456:	2b00      	cmp	r3, #0
   83458:	f040 8336 	bne.w	83ac8 <_dtoa_r+0xbd0>
   8345c:	9608      	str	r6, [sp, #32]
   8345e:	9b07      	ldr	r3, [sp, #28]
   83460:	9a04      	ldr	r2, [sp, #16]
   83462:	3b01      	subs	r3, #1
   83464:	18d3      	adds	r3, r2, r3
   83466:	930b      	str	r3, [sp, #44]	; 0x2c
   83468:	4617      	mov	r7, r2
   8346a:	f00a 0301 	and.w	r3, sl, #1
   8346e:	46c2      	mov	sl, r8
   83470:	f8dd b020 	ldr.w	fp, [sp, #32]
   83474:	930c      	str	r3, [sp, #48]	; 0x30
   83476:	4651      	mov	r1, sl
   83478:	4648      	mov	r0, r9
   8347a:	f7ff fca9 	bl	82dd0 <quorem>
   8347e:	4631      	mov	r1, r6
   83480:	4605      	mov	r5, r0
   83482:	4648      	mov	r0, r9
   83484:	f001 f9f8 	bl	84878 <__mcmp>
   83488:	465a      	mov	r2, fp
   8348a:	9007      	str	r0, [sp, #28]
   8348c:	4651      	mov	r1, sl
   8348e:	4620      	mov	r0, r4
   83490:	f001 fa0e 	bl	848b0 <__mdiff>
   83494:	68c2      	ldr	r2, [r0, #12]
   83496:	4680      	mov	r8, r0
   83498:	f105 0330 	add.w	r3, r5, #48	; 0x30
   8349c:	2a00      	cmp	r2, #0
   8349e:	f040 8229 	bne.w	838f4 <_dtoa_r+0x9fc>
   834a2:	4601      	mov	r1, r0
   834a4:	4648      	mov	r0, r9
   834a6:	930a      	str	r3, [sp, #40]	; 0x28
   834a8:	f001 f9e6 	bl	84878 <__mcmp>
   834ac:	4641      	mov	r1, r8
   834ae:	9008      	str	r0, [sp, #32]
   834b0:	4620      	mov	r0, r4
   834b2:	f001 f809 	bl	844c8 <_Bfree>
   834b6:	9a08      	ldr	r2, [sp, #32]
   834b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   834ba:	b932      	cbnz	r2, 834ca <_dtoa_r+0x5d2>
   834bc:	9924      	ldr	r1, [sp, #144]	; 0x90
   834be:	b921      	cbnz	r1, 834ca <_dtoa_r+0x5d2>
   834c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   834c2:	2a00      	cmp	r2, #0
   834c4:	f000 83ee 	beq.w	83ca4 <_dtoa_r+0xdac>
   834c8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   834ca:	9907      	ldr	r1, [sp, #28]
   834cc:	2900      	cmp	r1, #0
   834ce:	f2c0 829f 	blt.w	83a10 <_dtoa_r+0xb18>
   834d2:	d105      	bne.n	834e0 <_dtoa_r+0x5e8>
   834d4:	9924      	ldr	r1, [sp, #144]	; 0x90
   834d6:	b919      	cbnz	r1, 834e0 <_dtoa_r+0x5e8>
   834d8:	990c      	ldr	r1, [sp, #48]	; 0x30
   834da:	2900      	cmp	r1, #0
   834dc:	f000 8298 	beq.w	83a10 <_dtoa_r+0xb18>
   834e0:	2a00      	cmp	r2, #0
   834e2:	f300 8305 	bgt.w	83af0 <_dtoa_r+0xbf8>
   834e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   834e8:	f107 0801 	add.w	r8, r7, #1
   834ec:	4297      	cmp	r7, r2
   834ee:	703b      	strb	r3, [r7, #0]
   834f0:	4645      	mov	r5, r8
   834f2:	f000 830b 	beq.w	83b0c <_dtoa_r+0xc14>
   834f6:	4649      	mov	r1, r9
   834f8:	2300      	movs	r3, #0
   834fa:	220a      	movs	r2, #10
   834fc:	4620      	mov	r0, r4
   834fe:	f000 ffed 	bl	844dc <__multadd>
   83502:	455e      	cmp	r6, fp
   83504:	4681      	mov	r9, r0
   83506:	4631      	mov	r1, r6
   83508:	f04f 0300 	mov.w	r3, #0
   8350c:	f04f 020a 	mov.w	r2, #10
   83510:	4620      	mov	r0, r4
   83512:	f000 81e9 	beq.w	838e8 <_dtoa_r+0x9f0>
   83516:	f000 ffe1 	bl	844dc <__multadd>
   8351a:	4659      	mov	r1, fp
   8351c:	4606      	mov	r6, r0
   8351e:	2300      	movs	r3, #0
   83520:	220a      	movs	r2, #10
   83522:	4620      	mov	r0, r4
   83524:	f000 ffda 	bl	844dc <__multadd>
   83528:	4647      	mov	r7, r8
   8352a:	4683      	mov	fp, r0
   8352c:	e7a3      	b.n	83476 <_dtoa_r+0x57e>
   8352e:	201c      	movs	r0, #28
   83530:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83532:	4405      	add	r5, r0
   83534:	4403      	add	r3, r0
   83536:	930a      	str	r3, [sp, #40]	; 0x28
   83538:	9b08      	ldr	r3, [sp, #32]
   8353a:	4403      	add	r3, r0
   8353c:	9308      	str	r3, [sp, #32]
   8353e:	e763      	b.n	83408 <_dtoa_r+0x510>
   83540:	4641      	mov	r1, r8
   83542:	4648      	mov	r0, r9
   83544:	f001 f998 	bl	84878 <__mcmp>
   83548:	2800      	cmp	r0, #0
   8354a:	f6bf af73 	bge.w	83434 <_dtoa_r+0x53c>
   8354e:	9f02      	ldr	r7, [sp, #8]
   83550:	4649      	mov	r1, r9
   83552:	2300      	movs	r3, #0
   83554:	220a      	movs	r2, #10
   83556:	4620      	mov	r0, r4
   83558:	3f01      	subs	r7, #1
   8355a:	9702      	str	r7, [sp, #8]
   8355c:	f000 ffbe 	bl	844dc <__multadd>
   83560:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83562:	4681      	mov	r9, r0
   83564:	2b00      	cmp	r3, #0
   83566:	f040 83b5 	bne.w	83cd4 <_dtoa_r+0xddc>
   8356a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8356c:	2b00      	cmp	r3, #0
   8356e:	f340 83be 	ble.w	83cee <_dtoa_r+0xdf6>
   83572:	9307      	str	r3, [sp, #28]
   83574:	f8dd a010 	ldr.w	sl, [sp, #16]
   83578:	9f07      	ldr	r7, [sp, #28]
   8357a:	4655      	mov	r5, sl
   8357c:	e006      	b.n	8358c <_dtoa_r+0x694>
   8357e:	4649      	mov	r1, r9
   83580:	2300      	movs	r3, #0
   83582:	220a      	movs	r2, #10
   83584:	4620      	mov	r0, r4
   83586:	f000 ffa9 	bl	844dc <__multadd>
   8358a:	4681      	mov	r9, r0
   8358c:	4641      	mov	r1, r8
   8358e:	4648      	mov	r0, r9
   83590:	f7ff fc1e 	bl	82dd0 <quorem>
   83594:	3030      	adds	r0, #48	; 0x30
   83596:	f805 0b01 	strb.w	r0, [r5], #1
   8359a:	eba5 030a 	sub.w	r3, r5, sl
   8359e:	42bb      	cmp	r3, r7
   835a0:	dbed      	blt.n	8357e <_dtoa_r+0x686>
   835a2:	9b04      	ldr	r3, [sp, #16]
   835a4:	9a07      	ldr	r2, [sp, #28]
   835a6:	4682      	mov	sl, r0
   835a8:	2a01      	cmp	r2, #1
   835aa:	bfac      	ite	ge
   835ac:	189b      	addge	r3, r3, r2
   835ae:	3301      	addlt	r3, #1
   835b0:	f04f 0b00 	mov.w	fp, #0
   835b4:	461d      	mov	r5, r3
   835b6:	4649      	mov	r1, r9
   835b8:	2201      	movs	r2, #1
   835ba:	4620      	mov	r0, r4
   835bc:	f001 f90c 	bl	847d8 <__lshift>
   835c0:	4641      	mov	r1, r8
   835c2:	4681      	mov	r9, r0
   835c4:	f001 f958 	bl	84878 <__mcmp>
   835c8:	2800      	cmp	r0, #0
   835ca:	f340 823f 	ble.w	83a4c <_dtoa_r+0xb54>
   835ce:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   835d2:	1e6b      	subs	r3, r5, #1
   835d4:	9904      	ldr	r1, [sp, #16]
   835d6:	e004      	b.n	835e2 <_dtoa_r+0x6ea>
   835d8:	428b      	cmp	r3, r1
   835da:	f000 81ae 	beq.w	8393a <_dtoa_r+0xa42>
   835de:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   835e2:	2a39      	cmp	r2, #57	; 0x39
   835e4:	f103 0501 	add.w	r5, r3, #1
   835e8:	d0f6      	beq.n	835d8 <_dtoa_r+0x6e0>
   835ea:	3201      	adds	r2, #1
   835ec:	701a      	strb	r2, [r3, #0]
   835ee:	4641      	mov	r1, r8
   835f0:	4620      	mov	r0, r4
   835f2:	f000 ff69 	bl	844c8 <_Bfree>
   835f6:	2e00      	cmp	r6, #0
   835f8:	f43f ae3d 	beq.w	83276 <_dtoa_r+0x37e>
   835fc:	f1bb 0f00 	cmp.w	fp, #0
   83600:	d005      	beq.n	8360e <_dtoa_r+0x716>
   83602:	45b3      	cmp	fp, r6
   83604:	d003      	beq.n	8360e <_dtoa_r+0x716>
   83606:	4659      	mov	r1, fp
   83608:	4620      	mov	r0, r4
   8360a:	f000 ff5d 	bl	844c8 <_Bfree>
   8360e:	4631      	mov	r1, r6
   83610:	4620      	mov	r0, r4
   83612:	f000 ff59 	bl	844c8 <_Bfree>
   83616:	e62e      	b.n	83276 <_dtoa_r+0x37e>
   83618:	2300      	movs	r3, #0
   8361a:	930b      	str	r3, [sp, #44]	; 0x2c
   8361c:	9b02      	ldr	r3, [sp, #8]
   8361e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83620:	4413      	add	r3, r2
   83622:	930f      	str	r3, [sp, #60]	; 0x3c
   83624:	3301      	adds	r3, #1
   83626:	2b01      	cmp	r3, #1
   83628:	461f      	mov	r7, r3
   8362a:	461e      	mov	r6, r3
   8362c:	bfb8      	it	lt
   8362e:	2701      	movlt	r7, #1
   83630:	9307      	str	r3, [sp, #28]
   83632:	2100      	movs	r1, #0
   83634:	2f17      	cmp	r7, #23
   83636:	6461      	str	r1, [r4, #68]	; 0x44
   83638:	d90a      	bls.n	83650 <_dtoa_r+0x758>
   8363a:	2201      	movs	r2, #1
   8363c:	2304      	movs	r3, #4
   8363e:	005b      	lsls	r3, r3, #1
   83640:	f103 0014 	add.w	r0, r3, #20
   83644:	4287      	cmp	r7, r0
   83646:	4611      	mov	r1, r2
   83648:	f102 0201 	add.w	r2, r2, #1
   8364c:	d2f7      	bcs.n	8363e <_dtoa_r+0x746>
   8364e:	6461      	str	r1, [r4, #68]	; 0x44
   83650:	4620      	mov	r0, r4
   83652:	f000 ff13 	bl	8447c <_Balloc>
   83656:	2e0e      	cmp	r6, #14
   83658:	9004      	str	r0, [sp, #16]
   8365a:	6420      	str	r0, [r4, #64]	; 0x40
   8365c:	f63f ad47 	bhi.w	830ee <_dtoa_r+0x1f6>
   83660:	2d00      	cmp	r5, #0
   83662:	f43f ad44 	beq.w	830ee <_dtoa_r+0x1f6>
   83666:	9902      	ldr	r1, [sp, #8]
   83668:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   8366c:	2900      	cmp	r1, #0
   8366e:	f340 8203 	ble.w	83a78 <_dtoa_r+0xb80>
   83672:	4bb9      	ldr	r3, [pc, #740]	; (83958 <_dtoa_r+0xa60>)
   83674:	f001 020f 	and.w	r2, r1, #15
   83678:	110d      	asrs	r5, r1, #4
   8367a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8367e:	06e9      	lsls	r1, r5, #27
   83680:	e9d3 6700 	ldrd	r6, r7, [r3]
   83684:	f140 81af 	bpl.w	839e6 <_dtoa_r+0xaee>
   83688:	4bb4      	ldr	r3, [pc, #720]	; (8395c <_dtoa_r+0xa64>)
   8368a:	4650      	mov	r0, sl
   8368c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83690:	4659      	mov	r1, fp
   83692:	f002 f943 	bl	8591c <__aeabi_ddiv>
   83696:	f04f 0a03 	mov.w	sl, #3
   8369a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   8369e:	f005 050f 	and.w	r5, r5, #15
   836a2:	b18d      	cbz	r5, 836c8 <_dtoa_r+0x7d0>
   836a4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8395c <_dtoa_r+0xa64>
   836a8:	07ea      	lsls	r2, r5, #31
   836aa:	d509      	bpl.n	836c0 <_dtoa_r+0x7c8>
   836ac:	e9d8 2300 	ldrd	r2, r3, [r8]
   836b0:	4630      	mov	r0, r6
   836b2:	4639      	mov	r1, r7
   836b4:	f002 f808 	bl	856c8 <__aeabi_dmul>
   836b8:	4606      	mov	r6, r0
   836ba:	460f      	mov	r7, r1
   836bc:	f10a 0a01 	add.w	sl, sl, #1
   836c0:	106d      	asrs	r5, r5, #1
   836c2:	f108 0808 	add.w	r8, r8, #8
   836c6:	d1ef      	bne.n	836a8 <_dtoa_r+0x7b0>
   836c8:	463b      	mov	r3, r7
   836ca:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   836ce:	4632      	mov	r2, r6
   836d0:	f002 f924 	bl	8591c <__aeabi_ddiv>
   836d4:	4607      	mov	r7, r0
   836d6:	4688      	mov	r8, r1
   836d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   836da:	b143      	cbz	r3, 836ee <_dtoa_r+0x7f6>
   836dc:	2200      	movs	r2, #0
   836de:	4ba0      	ldr	r3, [pc, #640]	; (83960 <_dtoa_r+0xa68>)
   836e0:	4638      	mov	r0, r7
   836e2:	4641      	mov	r1, r8
   836e4:	f002 fa62 	bl	85bac <__aeabi_dcmplt>
   836e8:	2800      	cmp	r0, #0
   836ea:	f040 8287 	bne.w	83bfc <_dtoa_r+0xd04>
   836ee:	4650      	mov	r0, sl
   836f0:	f001 ff84 	bl	855fc <__aeabi_i2d>
   836f4:	463a      	mov	r2, r7
   836f6:	4643      	mov	r3, r8
   836f8:	f001 ffe6 	bl	856c8 <__aeabi_dmul>
   836fc:	4b99      	ldr	r3, [pc, #612]	; (83964 <_dtoa_r+0xa6c>)
   836fe:	2200      	movs	r2, #0
   83700:	f001 fe30 	bl	85364 <__adddf3>
   83704:	9b07      	ldr	r3, [sp, #28]
   83706:	4605      	mov	r5, r0
   83708:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8370c:	2b00      	cmp	r3, #0
   8370e:	f000 813f 	beq.w	83990 <_dtoa_r+0xa98>
   83712:	9b02      	ldr	r3, [sp, #8]
   83714:	9315      	str	r3, [sp, #84]	; 0x54
   83716:	9b07      	ldr	r3, [sp, #28]
   83718:	9312      	str	r3, [sp, #72]	; 0x48
   8371a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8371c:	2b00      	cmp	r3, #0
   8371e:	f000 81fb 	beq.w	83b18 <_dtoa_r+0xc20>
   83722:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83724:	4b8c      	ldr	r3, [pc, #560]	; (83958 <_dtoa_r+0xa60>)
   83726:	2000      	movs	r0, #0
   83728:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8372c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83730:	498d      	ldr	r1, [pc, #564]	; (83968 <_dtoa_r+0xa70>)
   83732:	f002 f8f3 	bl	8591c <__aeabi_ddiv>
   83736:	462a      	mov	r2, r5
   83738:	4633      	mov	r3, r6
   8373a:	f001 fe11 	bl	85360 <__aeabi_dsub>
   8373e:	4682      	mov	sl, r0
   83740:	468b      	mov	fp, r1
   83742:	4638      	mov	r0, r7
   83744:	4641      	mov	r1, r8
   83746:	f002 fa6f 	bl	85c28 <__aeabi_d2iz>
   8374a:	4605      	mov	r5, r0
   8374c:	f001 ff56 	bl	855fc <__aeabi_i2d>
   83750:	4602      	mov	r2, r0
   83752:	460b      	mov	r3, r1
   83754:	4638      	mov	r0, r7
   83756:	4641      	mov	r1, r8
   83758:	f001 fe02 	bl	85360 <__aeabi_dsub>
   8375c:	3530      	adds	r5, #48	; 0x30
   8375e:	fa5f f885 	uxtb.w	r8, r5
   83762:	9d04      	ldr	r5, [sp, #16]
   83764:	4606      	mov	r6, r0
   83766:	460f      	mov	r7, r1
   83768:	f885 8000 	strb.w	r8, [r5]
   8376c:	4602      	mov	r2, r0
   8376e:	460b      	mov	r3, r1
   83770:	4650      	mov	r0, sl
   83772:	4659      	mov	r1, fp
   83774:	3501      	adds	r5, #1
   83776:	f002 fa37 	bl	85be8 <__aeabi_dcmpgt>
   8377a:	2800      	cmp	r0, #0
   8377c:	d154      	bne.n	83828 <_dtoa_r+0x930>
   8377e:	4632      	mov	r2, r6
   83780:	463b      	mov	r3, r7
   83782:	2000      	movs	r0, #0
   83784:	4976      	ldr	r1, [pc, #472]	; (83960 <_dtoa_r+0xa68>)
   83786:	f001 fdeb 	bl	85360 <__aeabi_dsub>
   8378a:	4602      	mov	r2, r0
   8378c:	460b      	mov	r3, r1
   8378e:	4650      	mov	r0, sl
   83790:	4659      	mov	r1, fp
   83792:	f002 fa29 	bl	85be8 <__aeabi_dcmpgt>
   83796:	2800      	cmp	r0, #0
   83798:	f040 8270 	bne.w	83c7c <_dtoa_r+0xd84>
   8379c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8379e:	2a01      	cmp	r2, #1
   837a0:	f000 8112 	beq.w	839c8 <_dtoa_r+0xad0>
   837a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   837a6:	9a04      	ldr	r2, [sp, #16]
   837a8:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   837ac:	4413      	add	r3, r2
   837ae:	4699      	mov	r9, r3
   837b0:	e00f      	b.n	837d2 <_dtoa_r+0x8da>
   837b2:	4632      	mov	r2, r6
   837b4:	463b      	mov	r3, r7
   837b6:	2000      	movs	r0, #0
   837b8:	4969      	ldr	r1, [pc, #420]	; (83960 <_dtoa_r+0xa68>)
   837ba:	f001 fdd1 	bl	85360 <__aeabi_dsub>
   837be:	4652      	mov	r2, sl
   837c0:	465b      	mov	r3, fp
   837c2:	f002 f9f3 	bl	85bac <__aeabi_dcmplt>
   837c6:	2800      	cmp	r0, #0
   837c8:	f040 8256 	bne.w	83c78 <_dtoa_r+0xd80>
   837cc:	454d      	cmp	r5, r9
   837ce:	f000 80f9 	beq.w	839c4 <_dtoa_r+0xacc>
   837d2:	4650      	mov	r0, sl
   837d4:	4659      	mov	r1, fp
   837d6:	2200      	movs	r2, #0
   837d8:	4b64      	ldr	r3, [pc, #400]	; (8396c <_dtoa_r+0xa74>)
   837da:	f001 ff75 	bl	856c8 <__aeabi_dmul>
   837de:	2200      	movs	r2, #0
   837e0:	4b62      	ldr	r3, [pc, #392]	; (8396c <_dtoa_r+0xa74>)
   837e2:	4682      	mov	sl, r0
   837e4:	468b      	mov	fp, r1
   837e6:	4630      	mov	r0, r6
   837e8:	4639      	mov	r1, r7
   837ea:	f001 ff6d 	bl	856c8 <__aeabi_dmul>
   837ee:	460f      	mov	r7, r1
   837f0:	4606      	mov	r6, r0
   837f2:	f002 fa19 	bl	85c28 <__aeabi_d2iz>
   837f6:	4680      	mov	r8, r0
   837f8:	f001 ff00 	bl	855fc <__aeabi_i2d>
   837fc:	4602      	mov	r2, r0
   837fe:	460b      	mov	r3, r1
   83800:	4630      	mov	r0, r6
   83802:	4639      	mov	r1, r7
   83804:	f001 fdac 	bl	85360 <__aeabi_dsub>
   83808:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8380c:	fa5f f888 	uxtb.w	r8, r8
   83810:	f805 8b01 	strb.w	r8, [r5], #1
   83814:	4652      	mov	r2, sl
   83816:	465b      	mov	r3, fp
   83818:	4606      	mov	r6, r0
   8381a:	460f      	mov	r7, r1
   8381c:	f002 f9c6 	bl	85bac <__aeabi_dcmplt>
   83820:	2800      	cmp	r0, #0
   83822:	d0c6      	beq.n	837b2 <_dtoa_r+0x8ba>
   83824:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83828:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8382a:	9302      	str	r3, [sp, #8]
   8382c:	e523      	b.n	83276 <_dtoa_r+0x37e>
   8382e:	2300      	movs	r3, #0
   83830:	930b      	str	r3, [sp, #44]	; 0x2c
   83832:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83834:	2b00      	cmp	r3, #0
   83836:	f340 80dd 	ble.w	839f4 <_dtoa_r+0xafc>
   8383a:	461f      	mov	r7, r3
   8383c:	461e      	mov	r6, r3
   8383e:	930f      	str	r3, [sp, #60]	; 0x3c
   83840:	9307      	str	r3, [sp, #28]
   83842:	e6f6      	b.n	83632 <_dtoa_r+0x73a>
   83844:	2301      	movs	r3, #1
   83846:	930b      	str	r3, [sp, #44]	; 0x2c
   83848:	e7f3      	b.n	83832 <_dtoa_r+0x93a>
   8384a:	f1ba 0f00 	cmp.w	sl, #0
   8384e:	f47f ada7 	bne.w	833a0 <_dtoa_r+0x4a8>
   83852:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83856:	2b00      	cmp	r3, #0
   83858:	f47f adbc 	bne.w	833d4 <_dtoa_r+0x4dc>
   8385c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83860:	0d3f      	lsrs	r7, r7, #20
   83862:	053f      	lsls	r7, r7, #20
   83864:	2f00      	cmp	r7, #0
   83866:	f000 820d 	beq.w	83c84 <_dtoa_r+0xd8c>
   8386a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8386c:	3301      	adds	r3, #1
   8386e:	930a      	str	r3, [sp, #40]	; 0x28
   83870:	9b08      	ldr	r3, [sp, #32]
   83872:	3301      	adds	r3, #1
   83874:	9308      	str	r3, [sp, #32]
   83876:	2301      	movs	r3, #1
   83878:	930c      	str	r3, [sp, #48]	; 0x30
   8387a:	e5ad      	b.n	833d8 <_dtoa_r+0x4e0>
   8387c:	9b07      	ldr	r3, [sp, #28]
   8387e:	2b00      	cmp	r3, #0
   83880:	f73f ac48 	bgt.w	83114 <_dtoa_r+0x21c>
   83884:	f040 8222 	bne.w	83ccc <_dtoa_r+0xdd4>
   83888:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   8388c:	2200      	movs	r2, #0
   8388e:	4b38      	ldr	r3, [pc, #224]	; (83970 <_dtoa_r+0xa78>)
   83890:	f001 ff1a 	bl	856c8 <__aeabi_dmul>
   83894:	4652      	mov	r2, sl
   83896:	465b      	mov	r3, fp
   83898:	f002 f99c 	bl	85bd4 <__aeabi_dcmpge>
   8389c:	f8dd 801c 	ldr.w	r8, [sp, #28]
   838a0:	4646      	mov	r6, r8
   838a2:	2800      	cmp	r0, #0
   838a4:	d041      	beq.n	8392a <_dtoa_r+0xa32>
   838a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   838a8:	9d04      	ldr	r5, [sp, #16]
   838aa:	43db      	mvns	r3, r3
   838ac:	9302      	str	r3, [sp, #8]
   838ae:	4641      	mov	r1, r8
   838b0:	4620      	mov	r0, r4
   838b2:	f000 fe09 	bl	844c8 <_Bfree>
   838b6:	2e00      	cmp	r6, #0
   838b8:	f43f acdd 	beq.w	83276 <_dtoa_r+0x37e>
   838bc:	e6a7      	b.n	8360e <_dtoa_r+0x716>
   838be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   838c0:	4649      	mov	r1, r9
   838c2:	4620      	mov	r0, r4
   838c4:	f000 ff38 	bl	84738 <__pow5mult>
   838c8:	4681      	mov	r9, r0
   838ca:	e557      	b.n	8337c <_dtoa_r+0x484>
   838cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
   838ce:	2a00      	cmp	r2, #0
   838d0:	f000 8188 	beq.w	83be4 <_dtoa_r+0xcec>
   838d4:	f203 4333 	addw	r3, r3, #1075	; 0x433
   838d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   838da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   838dc:	e4f2      	b.n	832c4 <_dtoa_r+0x3cc>
   838de:	f1ba 0f00 	cmp.w	sl, #0
   838e2:	f47f ad77 	bne.w	833d4 <_dtoa_r+0x4dc>
   838e6:	e7b4      	b.n	83852 <_dtoa_r+0x95a>
   838e8:	f000 fdf8 	bl	844dc <__multadd>
   838ec:	4647      	mov	r7, r8
   838ee:	4606      	mov	r6, r0
   838f0:	4683      	mov	fp, r0
   838f2:	e5c0      	b.n	83476 <_dtoa_r+0x57e>
   838f4:	4601      	mov	r1, r0
   838f6:	4620      	mov	r0, r4
   838f8:	9308      	str	r3, [sp, #32]
   838fa:	f000 fde5 	bl	844c8 <_Bfree>
   838fe:	2201      	movs	r2, #1
   83900:	9b08      	ldr	r3, [sp, #32]
   83902:	e5e2      	b.n	834ca <_dtoa_r+0x5d2>
   83904:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83906:	2b02      	cmp	r3, #2
   83908:	f77f ad98 	ble.w	8343c <_dtoa_r+0x544>
   8390c:	9b07      	ldr	r3, [sp, #28]
   8390e:	2b00      	cmp	r3, #0
   83910:	d1c9      	bne.n	838a6 <_dtoa_r+0x9ae>
   83912:	4641      	mov	r1, r8
   83914:	2205      	movs	r2, #5
   83916:	4620      	mov	r0, r4
   83918:	f000 fde0 	bl	844dc <__multadd>
   8391c:	4601      	mov	r1, r0
   8391e:	4680      	mov	r8, r0
   83920:	4648      	mov	r0, r9
   83922:	f000 ffa9 	bl	84878 <__mcmp>
   83926:	2800      	cmp	r0, #0
   83928:	ddbd      	ble.n	838a6 <_dtoa_r+0x9ae>
   8392a:	2331      	movs	r3, #49	; 0x31
   8392c:	9a02      	ldr	r2, [sp, #8]
   8392e:	9904      	ldr	r1, [sp, #16]
   83930:	3201      	adds	r2, #1
   83932:	9202      	str	r2, [sp, #8]
   83934:	700b      	strb	r3, [r1, #0]
   83936:	1c4d      	adds	r5, r1, #1
   83938:	e7b9      	b.n	838ae <_dtoa_r+0x9b6>
   8393a:	2331      	movs	r3, #49	; 0x31
   8393c:	9a02      	ldr	r2, [sp, #8]
   8393e:	3201      	adds	r2, #1
   83940:	9202      	str	r2, [sp, #8]
   83942:	9a04      	ldr	r2, [sp, #16]
   83944:	7013      	strb	r3, [r2, #0]
   83946:	e652      	b.n	835ee <_dtoa_r+0x6f6>
   83948:	2301      	movs	r3, #1
   8394a:	930b      	str	r3, [sp, #44]	; 0x2c
   8394c:	e666      	b.n	8361c <_dtoa_r+0x724>
   8394e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83952:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83954:	e48f      	b.n	83276 <_dtoa_r+0x37e>
   83956:	bf00      	nop
   83958:	000861a8 	.word	0x000861a8
   8395c:	00086180 	.word	0x00086180
   83960:	3ff00000 	.word	0x3ff00000
   83964:	401c0000 	.word	0x401c0000
   83968:	3fe00000 	.word	0x3fe00000
   8396c:	40240000 	.word	0x40240000
   83970:	40140000 	.word	0x40140000
   83974:	4650      	mov	r0, sl
   83976:	f001 fe41 	bl	855fc <__aeabi_i2d>
   8397a:	463a      	mov	r2, r7
   8397c:	4643      	mov	r3, r8
   8397e:	f001 fea3 	bl	856c8 <__aeabi_dmul>
   83982:	2200      	movs	r2, #0
   83984:	4bc1      	ldr	r3, [pc, #772]	; (83c8c <_dtoa_r+0xd94>)
   83986:	f001 fced 	bl	85364 <__adddf3>
   8398a:	4605      	mov	r5, r0
   8398c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83990:	4641      	mov	r1, r8
   83992:	2200      	movs	r2, #0
   83994:	4bbe      	ldr	r3, [pc, #760]	; (83c90 <_dtoa_r+0xd98>)
   83996:	4638      	mov	r0, r7
   83998:	f001 fce2 	bl	85360 <__aeabi_dsub>
   8399c:	462a      	mov	r2, r5
   8399e:	4633      	mov	r3, r6
   839a0:	4682      	mov	sl, r0
   839a2:	468b      	mov	fp, r1
   839a4:	f002 f920 	bl	85be8 <__aeabi_dcmpgt>
   839a8:	4680      	mov	r8, r0
   839aa:	2800      	cmp	r0, #0
   839ac:	f040 8110 	bne.w	83bd0 <_dtoa_r+0xcd8>
   839b0:	462a      	mov	r2, r5
   839b2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   839b6:	4650      	mov	r0, sl
   839b8:	4659      	mov	r1, fp
   839ba:	f002 f8f7 	bl	85bac <__aeabi_dcmplt>
   839be:	b118      	cbz	r0, 839c8 <_dtoa_r+0xad0>
   839c0:	4646      	mov	r6, r8
   839c2:	e770      	b.n	838a6 <_dtoa_r+0x9ae>
   839c4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   839c8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   839cc:	f7ff bb8f 	b.w	830ee <_dtoa_r+0x1f6>
   839d0:	9804      	ldr	r0, [sp, #16]
   839d2:	f7ff bac0 	b.w	82f56 <_dtoa_r+0x5e>
   839d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   839d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   839da:	1afb      	subs	r3, r7, r3
   839dc:	441a      	add	r2, r3
   839de:	970c      	str	r7, [sp, #48]	; 0x30
   839e0:	920d      	str	r2, [sp, #52]	; 0x34
   839e2:	2700      	movs	r7, #0
   839e4:	e468      	b.n	832b8 <_dtoa_r+0x3c0>
   839e6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   839ea:	f04f 0a02 	mov.w	sl, #2
   839ee:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   839f2:	e656      	b.n	836a2 <_dtoa_r+0x7aa>
   839f4:	2100      	movs	r1, #0
   839f6:	2301      	movs	r3, #1
   839f8:	4620      	mov	r0, r4
   839fa:	6461      	str	r1, [r4, #68]	; 0x44
   839fc:	9325      	str	r3, [sp, #148]	; 0x94
   839fe:	f000 fd3d 	bl	8447c <_Balloc>
   83a02:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83a04:	9004      	str	r0, [sp, #16]
   83a06:	9307      	str	r3, [sp, #28]
   83a08:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83a0a:	6420      	str	r0, [r4, #64]	; 0x40
   83a0c:	930f      	str	r3, [sp, #60]	; 0x3c
   83a0e:	e627      	b.n	83660 <_dtoa_r+0x768>
   83a10:	2a00      	cmp	r2, #0
   83a12:	46d0      	mov	r8, sl
   83a14:	f8cd b020 	str.w	fp, [sp, #32]
   83a18:	469a      	mov	sl, r3
   83a1a:	dd11      	ble.n	83a40 <_dtoa_r+0xb48>
   83a1c:	4649      	mov	r1, r9
   83a1e:	2201      	movs	r2, #1
   83a20:	4620      	mov	r0, r4
   83a22:	f000 fed9 	bl	847d8 <__lshift>
   83a26:	4641      	mov	r1, r8
   83a28:	4681      	mov	r9, r0
   83a2a:	f000 ff25 	bl	84878 <__mcmp>
   83a2e:	2800      	cmp	r0, #0
   83a30:	f340 8145 	ble.w	83cbe <_dtoa_r+0xdc6>
   83a34:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83a38:	f000 8105 	beq.w	83c46 <_dtoa_r+0xd4e>
   83a3c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83a40:	46b3      	mov	fp, r6
   83a42:	f887 a000 	strb.w	sl, [r7]
   83a46:	1c7d      	adds	r5, r7, #1
   83a48:	9e08      	ldr	r6, [sp, #32]
   83a4a:	e5d0      	b.n	835ee <_dtoa_r+0x6f6>
   83a4c:	d104      	bne.n	83a58 <_dtoa_r+0xb60>
   83a4e:	f01a 0f01 	tst.w	sl, #1
   83a52:	d001      	beq.n	83a58 <_dtoa_r+0xb60>
   83a54:	e5bb      	b.n	835ce <_dtoa_r+0x6d6>
   83a56:	4615      	mov	r5, r2
   83a58:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83a5c:	1e6a      	subs	r2, r5, #1
   83a5e:	2b30      	cmp	r3, #48	; 0x30
   83a60:	d0f9      	beq.n	83a56 <_dtoa_r+0xb5e>
   83a62:	e5c4      	b.n	835ee <_dtoa_r+0x6f6>
   83a64:	2230      	movs	r2, #48	; 0x30
   83a66:	9904      	ldr	r1, [sp, #16]
   83a68:	700a      	strb	r2, [r1, #0]
   83a6a:	9a02      	ldr	r2, [sp, #8]
   83a6c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83a70:	3201      	adds	r2, #1
   83a72:	9202      	str	r2, [sp, #8]
   83a74:	f7ff bbfb 	b.w	8326e <_dtoa_r+0x376>
   83a78:	f000 80bb 	beq.w	83bf2 <_dtoa_r+0xcfa>
   83a7c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83a80:	9b02      	ldr	r3, [sp, #8]
   83a82:	f04f 0a02 	mov.w	sl, #2
   83a86:	425d      	negs	r5, r3
   83a88:	4b82      	ldr	r3, [pc, #520]	; (83c94 <_dtoa_r+0xd9c>)
   83a8a:	f005 020f 	and.w	r2, r5, #15
   83a8e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83a92:	e9d3 2300 	ldrd	r2, r3, [r3]
   83a96:	f001 fe17 	bl	856c8 <__aeabi_dmul>
   83a9a:	112d      	asrs	r5, r5, #4
   83a9c:	4607      	mov	r7, r0
   83a9e:	4688      	mov	r8, r1
   83aa0:	f43f ae1a 	beq.w	836d8 <_dtoa_r+0x7e0>
   83aa4:	4e7c      	ldr	r6, [pc, #496]	; (83c98 <_dtoa_r+0xda0>)
   83aa6:	07eb      	lsls	r3, r5, #31
   83aa8:	d509      	bpl.n	83abe <_dtoa_r+0xbc6>
   83aaa:	e9d6 2300 	ldrd	r2, r3, [r6]
   83aae:	4638      	mov	r0, r7
   83ab0:	4641      	mov	r1, r8
   83ab2:	f001 fe09 	bl	856c8 <__aeabi_dmul>
   83ab6:	4607      	mov	r7, r0
   83ab8:	4688      	mov	r8, r1
   83aba:	f10a 0a01 	add.w	sl, sl, #1
   83abe:	106d      	asrs	r5, r5, #1
   83ac0:	f106 0608 	add.w	r6, r6, #8
   83ac4:	d1ef      	bne.n	83aa6 <_dtoa_r+0xbae>
   83ac6:	e607      	b.n	836d8 <_dtoa_r+0x7e0>
   83ac8:	6871      	ldr	r1, [r6, #4]
   83aca:	4620      	mov	r0, r4
   83acc:	f000 fcd6 	bl	8447c <_Balloc>
   83ad0:	4605      	mov	r5, r0
   83ad2:	6933      	ldr	r3, [r6, #16]
   83ad4:	f106 010c 	add.w	r1, r6, #12
   83ad8:	3302      	adds	r3, #2
   83ada:	009a      	lsls	r2, r3, #2
   83adc:	300c      	adds	r0, #12
   83ade:	f000 fc53 	bl	84388 <memcpy>
   83ae2:	4629      	mov	r1, r5
   83ae4:	2201      	movs	r2, #1
   83ae6:	4620      	mov	r0, r4
   83ae8:	f000 fe76 	bl	847d8 <__lshift>
   83aec:	9008      	str	r0, [sp, #32]
   83aee:	e4b6      	b.n	8345e <_dtoa_r+0x566>
   83af0:	2b39      	cmp	r3, #57	; 0x39
   83af2:	f8cd b020 	str.w	fp, [sp, #32]
   83af6:	46d0      	mov	r8, sl
   83af8:	f000 80a5 	beq.w	83c46 <_dtoa_r+0xd4e>
   83afc:	f103 0a01 	add.w	sl, r3, #1
   83b00:	46b3      	mov	fp, r6
   83b02:	f887 a000 	strb.w	sl, [r7]
   83b06:	1c7d      	adds	r5, r7, #1
   83b08:	9e08      	ldr	r6, [sp, #32]
   83b0a:	e570      	b.n	835ee <_dtoa_r+0x6f6>
   83b0c:	465a      	mov	r2, fp
   83b0e:	46d0      	mov	r8, sl
   83b10:	46b3      	mov	fp, r6
   83b12:	469a      	mov	sl, r3
   83b14:	4616      	mov	r6, r2
   83b16:	e54e      	b.n	835b6 <_dtoa_r+0x6be>
   83b18:	9812      	ldr	r0, [sp, #72]	; 0x48
   83b1a:	495e      	ldr	r1, [pc, #376]	; (83c94 <_dtoa_r+0xd9c>)
   83b1c:	462a      	mov	r2, r5
   83b1e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   83b22:	4633      	mov	r3, r6
   83b24:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   83b28:	f001 fdce 	bl	856c8 <__aeabi_dmul>
   83b2c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   83b30:	4638      	mov	r0, r7
   83b32:	4641      	mov	r1, r8
   83b34:	f002 f878 	bl	85c28 <__aeabi_d2iz>
   83b38:	4605      	mov	r5, r0
   83b3a:	f001 fd5f 	bl	855fc <__aeabi_i2d>
   83b3e:	4602      	mov	r2, r0
   83b40:	460b      	mov	r3, r1
   83b42:	4638      	mov	r0, r7
   83b44:	4641      	mov	r1, r8
   83b46:	f001 fc0b 	bl	85360 <__aeabi_dsub>
   83b4a:	4606      	mov	r6, r0
   83b4c:	9812      	ldr	r0, [sp, #72]	; 0x48
   83b4e:	9a04      	ldr	r2, [sp, #16]
   83b50:	3530      	adds	r5, #48	; 0x30
   83b52:	2801      	cmp	r0, #1
   83b54:	7015      	strb	r5, [r2, #0]
   83b56:	460f      	mov	r7, r1
   83b58:	f102 0501 	add.w	r5, r2, #1
   83b5c:	d026      	beq.n	83bac <_dtoa_r+0xcb4>
   83b5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83b60:	9a04      	ldr	r2, [sp, #16]
   83b62:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   83b66:	4413      	add	r3, r2
   83b68:	f04f 0a00 	mov.w	sl, #0
   83b6c:	4699      	mov	r9, r3
   83b6e:	f8df b130 	ldr.w	fp, [pc, #304]	; 83ca0 <_dtoa_r+0xda8>
   83b72:	4652      	mov	r2, sl
   83b74:	465b      	mov	r3, fp
   83b76:	4630      	mov	r0, r6
   83b78:	4639      	mov	r1, r7
   83b7a:	f001 fda5 	bl	856c8 <__aeabi_dmul>
   83b7e:	460f      	mov	r7, r1
   83b80:	4606      	mov	r6, r0
   83b82:	f002 f851 	bl	85c28 <__aeabi_d2iz>
   83b86:	4680      	mov	r8, r0
   83b88:	f001 fd38 	bl	855fc <__aeabi_i2d>
   83b8c:	4602      	mov	r2, r0
   83b8e:	460b      	mov	r3, r1
   83b90:	4630      	mov	r0, r6
   83b92:	4639      	mov	r1, r7
   83b94:	f001 fbe4 	bl	85360 <__aeabi_dsub>
   83b98:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83b9c:	f805 8b01 	strb.w	r8, [r5], #1
   83ba0:	454d      	cmp	r5, r9
   83ba2:	4606      	mov	r6, r0
   83ba4:	460f      	mov	r7, r1
   83ba6:	d1e4      	bne.n	83b72 <_dtoa_r+0xc7a>
   83ba8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83bac:	2200      	movs	r2, #0
   83bae:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   83bb2:	4b3a      	ldr	r3, [pc, #232]	; (83c9c <_dtoa_r+0xda4>)
   83bb4:	f001 fbd6 	bl	85364 <__adddf3>
   83bb8:	4632      	mov	r2, r6
   83bba:	463b      	mov	r3, r7
   83bbc:	f001 fff6 	bl	85bac <__aeabi_dcmplt>
   83bc0:	2800      	cmp	r0, #0
   83bc2:	d046      	beq.n	83c52 <_dtoa_r+0xd5a>
   83bc4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83bc6:	9302      	str	r3, [sp, #8]
   83bc8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83bcc:	f7ff bb42 	b.w	83254 <_dtoa_r+0x35c>
   83bd0:	f04f 0800 	mov.w	r8, #0
   83bd4:	4646      	mov	r6, r8
   83bd6:	e6a8      	b.n	8392a <_dtoa_r+0xa32>
   83bd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83bda:	9a07      	ldr	r2, [sp, #28]
   83bdc:	1a9d      	subs	r5, r3, r2
   83bde:	2300      	movs	r3, #0
   83be0:	f7ff bb70 	b.w	832c4 <_dtoa_r+0x3cc>
   83be4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   83be6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83be8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83bec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83bee:	f7ff bb69 	b.w	832c4 <_dtoa_r+0x3cc>
   83bf2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   83bf6:	f04f 0a02 	mov.w	sl, #2
   83bfa:	e56d      	b.n	836d8 <_dtoa_r+0x7e0>
   83bfc:	9b07      	ldr	r3, [sp, #28]
   83bfe:	2b00      	cmp	r3, #0
   83c00:	f43f aeb8 	beq.w	83974 <_dtoa_r+0xa7c>
   83c04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83c06:	2b00      	cmp	r3, #0
   83c08:	f77f aede 	ble.w	839c8 <_dtoa_r+0xad0>
   83c0c:	2200      	movs	r2, #0
   83c0e:	4b24      	ldr	r3, [pc, #144]	; (83ca0 <_dtoa_r+0xda8>)
   83c10:	4638      	mov	r0, r7
   83c12:	4641      	mov	r1, r8
   83c14:	f001 fd58 	bl	856c8 <__aeabi_dmul>
   83c18:	4607      	mov	r7, r0
   83c1a:	4688      	mov	r8, r1
   83c1c:	f10a 0001 	add.w	r0, sl, #1
   83c20:	f001 fcec 	bl	855fc <__aeabi_i2d>
   83c24:	463a      	mov	r2, r7
   83c26:	4643      	mov	r3, r8
   83c28:	f001 fd4e 	bl	856c8 <__aeabi_dmul>
   83c2c:	2200      	movs	r2, #0
   83c2e:	4b17      	ldr	r3, [pc, #92]	; (83c8c <_dtoa_r+0xd94>)
   83c30:	f001 fb98 	bl	85364 <__adddf3>
   83c34:	9a02      	ldr	r2, [sp, #8]
   83c36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83c38:	3a01      	subs	r2, #1
   83c3a:	4605      	mov	r5, r0
   83c3c:	9215      	str	r2, [sp, #84]	; 0x54
   83c3e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83c42:	9312      	str	r3, [sp, #72]	; 0x48
   83c44:	e569      	b.n	8371a <_dtoa_r+0x822>
   83c46:	2239      	movs	r2, #57	; 0x39
   83c48:	46b3      	mov	fp, r6
   83c4a:	703a      	strb	r2, [r7, #0]
   83c4c:	9e08      	ldr	r6, [sp, #32]
   83c4e:	1c7d      	adds	r5, r7, #1
   83c50:	e4bf      	b.n	835d2 <_dtoa_r+0x6da>
   83c52:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   83c56:	2000      	movs	r0, #0
   83c58:	4910      	ldr	r1, [pc, #64]	; (83c9c <_dtoa_r+0xda4>)
   83c5a:	f001 fb81 	bl	85360 <__aeabi_dsub>
   83c5e:	4632      	mov	r2, r6
   83c60:	463b      	mov	r3, r7
   83c62:	f001 ffc1 	bl	85be8 <__aeabi_dcmpgt>
   83c66:	b908      	cbnz	r0, 83c6c <_dtoa_r+0xd74>
   83c68:	e6ae      	b.n	839c8 <_dtoa_r+0xad0>
   83c6a:	4615      	mov	r5, r2
   83c6c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83c70:	1e6a      	subs	r2, r5, #1
   83c72:	2b30      	cmp	r3, #48	; 0x30
   83c74:	d0f9      	beq.n	83c6a <_dtoa_r+0xd72>
   83c76:	e5d7      	b.n	83828 <_dtoa_r+0x930>
   83c78:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83c7c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83c7e:	9302      	str	r3, [sp, #8]
   83c80:	f7ff bae8 	b.w	83254 <_dtoa_r+0x35c>
   83c84:	970c      	str	r7, [sp, #48]	; 0x30
   83c86:	f7ff bba7 	b.w	833d8 <_dtoa_r+0x4e0>
   83c8a:	bf00      	nop
   83c8c:	401c0000 	.word	0x401c0000
   83c90:	40140000 	.word	0x40140000
   83c94:	000861a8 	.word	0x000861a8
   83c98:	00086180 	.word	0x00086180
   83c9c:	3fe00000 	.word	0x3fe00000
   83ca0:	40240000 	.word	0x40240000
   83ca4:	2b39      	cmp	r3, #57	; 0x39
   83ca6:	f8cd b020 	str.w	fp, [sp, #32]
   83caa:	46d0      	mov	r8, sl
   83cac:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83cb0:	469a      	mov	sl, r3
   83cb2:	d0c8      	beq.n	83c46 <_dtoa_r+0xd4e>
   83cb4:	f1bb 0f00 	cmp.w	fp, #0
   83cb8:	f73f aec0 	bgt.w	83a3c <_dtoa_r+0xb44>
   83cbc:	e6c0      	b.n	83a40 <_dtoa_r+0xb48>
   83cbe:	f47f aebf 	bne.w	83a40 <_dtoa_r+0xb48>
   83cc2:	f01a 0f01 	tst.w	sl, #1
   83cc6:	f43f aebb 	beq.w	83a40 <_dtoa_r+0xb48>
   83cca:	e6b3      	b.n	83a34 <_dtoa_r+0xb3c>
   83ccc:	f04f 0800 	mov.w	r8, #0
   83cd0:	4646      	mov	r6, r8
   83cd2:	e5e8      	b.n	838a6 <_dtoa_r+0x9ae>
   83cd4:	4631      	mov	r1, r6
   83cd6:	2300      	movs	r3, #0
   83cd8:	220a      	movs	r2, #10
   83cda:	4620      	mov	r0, r4
   83cdc:	f000 fbfe 	bl	844dc <__multadd>
   83ce0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83ce2:	4606      	mov	r6, r0
   83ce4:	2b00      	cmp	r3, #0
   83ce6:	dd07      	ble.n	83cf8 <_dtoa_r+0xe00>
   83ce8:	9307      	str	r3, [sp, #28]
   83cea:	f7ff bbab 	b.w	83444 <_dtoa_r+0x54c>
   83cee:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83cf0:	2b02      	cmp	r3, #2
   83cf2:	dc1f      	bgt.n	83d34 <_dtoa_r+0xe3c>
   83cf4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83cf6:	e43c      	b.n	83572 <_dtoa_r+0x67a>
   83cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
   83cfa:	2b02      	cmp	r3, #2
   83cfc:	dc1a      	bgt.n	83d34 <_dtoa_r+0xe3c>
   83cfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83d00:	e7f2      	b.n	83ce8 <_dtoa_r+0xdf0>
   83d02:	f43f ab81 	beq.w	83408 <_dtoa_r+0x510>
   83d06:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   83d0a:	e411      	b.n	83530 <_dtoa_r+0x638>
   83d0c:	2500      	movs	r5, #0
   83d0e:	4620      	mov	r0, r4
   83d10:	6465      	str	r5, [r4, #68]	; 0x44
   83d12:	4629      	mov	r1, r5
   83d14:	f000 fbb2 	bl	8447c <_Balloc>
   83d18:	f04f 33ff 	mov.w	r3, #4294967295
   83d1c:	9307      	str	r3, [sp, #28]
   83d1e:	930f      	str	r3, [sp, #60]	; 0x3c
   83d20:	2301      	movs	r3, #1
   83d22:	9004      	str	r0, [sp, #16]
   83d24:	9525      	str	r5, [sp, #148]	; 0x94
   83d26:	6420      	str	r0, [r4, #64]	; 0x40
   83d28:	930b      	str	r3, [sp, #44]	; 0x2c
   83d2a:	f7ff b9e0 	b.w	830ee <_dtoa_r+0x1f6>
   83d2e:	2501      	movs	r5, #1
   83d30:	f7ff b9a8 	b.w	83084 <_dtoa_r+0x18c>
   83d34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83d36:	9307      	str	r3, [sp, #28]
   83d38:	e5e8      	b.n	8390c <_dtoa_r+0xa14>
   83d3a:	bf00      	nop

00083d3c <__libc_fini_array>:
   83d3c:	b538      	push	{r3, r4, r5, lr}
   83d3e:	4c0a      	ldr	r4, [pc, #40]	; (83d68 <__libc_fini_array+0x2c>)
   83d40:	4d0a      	ldr	r5, [pc, #40]	; (83d6c <__libc_fini_array+0x30>)
   83d42:	1b64      	subs	r4, r4, r5
   83d44:	10a4      	asrs	r4, r4, #2
   83d46:	d00a      	beq.n	83d5e <__libc_fini_array+0x22>
   83d48:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   83d4c:	3b01      	subs	r3, #1
   83d4e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   83d52:	3c01      	subs	r4, #1
   83d54:	f855 3904 	ldr.w	r3, [r5], #-4
   83d58:	4798      	blx	r3
   83d5a:	2c00      	cmp	r4, #0
   83d5c:	d1f9      	bne.n	83d52 <__libc_fini_array+0x16>
   83d5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   83d62:	f002 bb17 	b.w	86394 <_fini>
   83d66:	bf00      	nop
   83d68:	000863a4 	.word	0x000863a4
   83d6c:	000863a0 	.word	0x000863a0

00083d70 <_localeconv_r>:
   83d70:	4a04      	ldr	r2, [pc, #16]	; (83d84 <_localeconv_r+0x14>)
   83d72:	4b05      	ldr	r3, [pc, #20]	; (83d88 <_localeconv_r+0x18>)
   83d74:	6812      	ldr	r2, [r2, #0]
   83d76:	6b50      	ldr	r0, [r2, #52]	; 0x34
   83d78:	2800      	cmp	r0, #0
   83d7a:	bf08      	it	eq
   83d7c:	4618      	moveq	r0, r3
   83d7e:	30f0      	adds	r0, #240	; 0xf0
   83d80:	4770      	bx	lr
   83d82:	bf00      	nop
   83d84:	2000057c 	.word	0x2000057c
   83d88:	200009a8 	.word	0x200009a8

00083d8c <_malloc_r>:
   83d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83d90:	f101 060b 	add.w	r6, r1, #11
   83d94:	2e16      	cmp	r6, #22
   83d96:	b083      	sub	sp, #12
   83d98:	4605      	mov	r5, r0
   83d9a:	f240 809e 	bls.w	83eda <_malloc_r+0x14e>
   83d9e:	f036 0607 	bics.w	r6, r6, #7
   83da2:	f100 80bd 	bmi.w	83f20 <_malloc_r+0x194>
   83da6:	42b1      	cmp	r1, r6
   83da8:	f200 80ba 	bhi.w	83f20 <_malloc_r+0x194>
   83dac:	f000 fb62 	bl	84474 <__malloc_lock>
   83db0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83db4:	f0c0 8285 	bcc.w	842c2 <_malloc_r+0x536>
   83db8:	0a73      	lsrs	r3, r6, #9
   83dba:	f000 80b8 	beq.w	83f2e <_malloc_r+0x1a2>
   83dbe:	2b04      	cmp	r3, #4
   83dc0:	f200 816c 	bhi.w	8409c <_malloc_r+0x310>
   83dc4:	09b3      	lsrs	r3, r6, #6
   83dc6:	f103 0039 	add.w	r0, r3, #57	; 0x39
   83dca:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   83dce:	00c1      	lsls	r1, r0, #3
   83dd0:	4fb8      	ldr	r7, [pc, #736]	; (840b4 <_malloc_r+0x328>)
   83dd2:	4439      	add	r1, r7
   83dd4:	684c      	ldr	r4, [r1, #4]
   83dd6:	3908      	subs	r1, #8
   83dd8:	42a1      	cmp	r1, r4
   83dda:	d106      	bne.n	83dea <_malloc_r+0x5e>
   83ddc:	e00c      	b.n	83df8 <_malloc_r+0x6c>
   83dde:	2a00      	cmp	r2, #0
   83de0:	f280 80ab 	bge.w	83f3a <_malloc_r+0x1ae>
   83de4:	68e4      	ldr	r4, [r4, #12]
   83de6:	42a1      	cmp	r1, r4
   83de8:	d006      	beq.n	83df8 <_malloc_r+0x6c>
   83dea:	6863      	ldr	r3, [r4, #4]
   83dec:	f023 0303 	bic.w	r3, r3, #3
   83df0:	1b9a      	subs	r2, r3, r6
   83df2:	2a0f      	cmp	r2, #15
   83df4:	ddf3      	ble.n	83dde <_malloc_r+0x52>
   83df6:	4670      	mov	r0, lr
   83df8:	693c      	ldr	r4, [r7, #16]
   83dfa:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 840c8 <_malloc_r+0x33c>
   83dfe:	4574      	cmp	r4, lr
   83e00:	f000 819e 	beq.w	84140 <_malloc_r+0x3b4>
   83e04:	6863      	ldr	r3, [r4, #4]
   83e06:	f023 0303 	bic.w	r3, r3, #3
   83e0a:	1b9a      	subs	r2, r3, r6
   83e0c:	2a0f      	cmp	r2, #15
   83e0e:	f300 8183 	bgt.w	84118 <_malloc_r+0x38c>
   83e12:	2a00      	cmp	r2, #0
   83e14:	f8c7 e014 	str.w	lr, [r7, #20]
   83e18:	f8c7 e010 	str.w	lr, [r7, #16]
   83e1c:	f280 8091 	bge.w	83f42 <_malloc_r+0x1b6>
   83e20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83e24:	f080 8154 	bcs.w	840d0 <_malloc_r+0x344>
   83e28:	2201      	movs	r2, #1
   83e2a:	08db      	lsrs	r3, r3, #3
   83e2c:	6879      	ldr	r1, [r7, #4]
   83e2e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   83e32:	4413      	add	r3, r2
   83e34:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   83e38:	fa02 f20c 	lsl.w	r2, r2, ip
   83e3c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   83e40:	430a      	orrs	r2, r1
   83e42:	f1ac 0108 	sub.w	r1, ip, #8
   83e46:	60e1      	str	r1, [r4, #12]
   83e48:	f8c4 8008 	str.w	r8, [r4, #8]
   83e4c:	607a      	str	r2, [r7, #4]
   83e4e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   83e52:	f8c8 400c 	str.w	r4, [r8, #12]
   83e56:	2401      	movs	r4, #1
   83e58:	1083      	asrs	r3, r0, #2
   83e5a:	409c      	lsls	r4, r3
   83e5c:	4294      	cmp	r4, r2
   83e5e:	d87d      	bhi.n	83f5c <_malloc_r+0x1d0>
   83e60:	4214      	tst	r4, r2
   83e62:	d106      	bne.n	83e72 <_malloc_r+0xe6>
   83e64:	f020 0003 	bic.w	r0, r0, #3
   83e68:	0064      	lsls	r4, r4, #1
   83e6a:	4214      	tst	r4, r2
   83e6c:	f100 0004 	add.w	r0, r0, #4
   83e70:	d0fa      	beq.n	83e68 <_malloc_r+0xdc>
   83e72:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   83e76:	46cc      	mov	ip, r9
   83e78:	4680      	mov	r8, r0
   83e7a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83e7e:	459c      	cmp	ip, r3
   83e80:	d107      	bne.n	83e92 <_malloc_r+0x106>
   83e82:	e15f      	b.n	84144 <_malloc_r+0x3b8>
   83e84:	2a00      	cmp	r2, #0
   83e86:	f280 816d 	bge.w	84164 <_malloc_r+0x3d8>
   83e8a:	68db      	ldr	r3, [r3, #12]
   83e8c:	459c      	cmp	ip, r3
   83e8e:	f000 8159 	beq.w	84144 <_malloc_r+0x3b8>
   83e92:	6859      	ldr	r1, [r3, #4]
   83e94:	f021 0103 	bic.w	r1, r1, #3
   83e98:	1b8a      	subs	r2, r1, r6
   83e9a:	2a0f      	cmp	r2, #15
   83e9c:	ddf2      	ble.n	83e84 <_malloc_r+0xf8>
   83e9e:	68dc      	ldr	r4, [r3, #12]
   83ea0:	f8d3 c008 	ldr.w	ip, [r3, #8]
   83ea4:	f046 0801 	orr.w	r8, r6, #1
   83ea8:	4628      	mov	r0, r5
   83eaa:	441e      	add	r6, r3
   83eac:	f042 0501 	orr.w	r5, r2, #1
   83eb0:	f8c3 8004 	str.w	r8, [r3, #4]
   83eb4:	f8cc 400c 	str.w	r4, [ip, #12]
   83eb8:	f8c4 c008 	str.w	ip, [r4, #8]
   83ebc:	617e      	str	r6, [r7, #20]
   83ebe:	613e      	str	r6, [r7, #16]
   83ec0:	f8c6 e00c 	str.w	lr, [r6, #12]
   83ec4:	f8c6 e008 	str.w	lr, [r6, #8]
   83ec8:	6075      	str	r5, [r6, #4]
   83eca:	505a      	str	r2, [r3, r1]
   83ecc:	9300      	str	r3, [sp, #0]
   83ece:	f000 fad3 	bl	84478 <__malloc_unlock>
   83ed2:	9b00      	ldr	r3, [sp, #0]
   83ed4:	f103 0408 	add.w	r4, r3, #8
   83ed8:	e01e      	b.n	83f18 <_malloc_r+0x18c>
   83eda:	2910      	cmp	r1, #16
   83edc:	d820      	bhi.n	83f20 <_malloc_r+0x194>
   83ede:	f000 fac9 	bl	84474 <__malloc_lock>
   83ee2:	2610      	movs	r6, #16
   83ee4:	2318      	movs	r3, #24
   83ee6:	2002      	movs	r0, #2
   83ee8:	4f72      	ldr	r7, [pc, #456]	; (840b4 <_malloc_r+0x328>)
   83eea:	443b      	add	r3, r7
   83eec:	685c      	ldr	r4, [r3, #4]
   83eee:	f1a3 0208 	sub.w	r2, r3, #8
   83ef2:	4294      	cmp	r4, r2
   83ef4:	f000 812f 	beq.w	84156 <_malloc_r+0x3ca>
   83ef8:	6863      	ldr	r3, [r4, #4]
   83efa:	68e1      	ldr	r1, [r4, #12]
   83efc:	f023 0303 	bic.w	r3, r3, #3
   83f00:	4423      	add	r3, r4
   83f02:	685a      	ldr	r2, [r3, #4]
   83f04:	68a6      	ldr	r6, [r4, #8]
   83f06:	f042 0201 	orr.w	r2, r2, #1
   83f0a:	60f1      	str	r1, [r6, #12]
   83f0c:	4628      	mov	r0, r5
   83f0e:	608e      	str	r6, [r1, #8]
   83f10:	605a      	str	r2, [r3, #4]
   83f12:	f000 fab1 	bl	84478 <__malloc_unlock>
   83f16:	3408      	adds	r4, #8
   83f18:	4620      	mov	r0, r4
   83f1a:	b003      	add	sp, #12
   83f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83f20:	2400      	movs	r4, #0
   83f22:	230c      	movs	r3, #12
   83f24:	4620      	mov	r0, r4
   83f26:	602b      	str	r3, [r5, #0]
   83f28:	b003      	add	sp, #12
   83f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83f2e:	2040      	movs	r0, #64	; 0x40
   83f30:	f44f 7100 	mov.w	r1, #512	; 0x200
   83f34:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   83f38:	e74a      	b.n	83dd0 <_malloc_r+0x44>
   83f3a:	4423      	add	r3, r4
   83f3c:	685a      	ldr	r2, [r3, #4]
   83f3e:	68e1      	ldr	r1, [r4, #12]
   83f40:	e7e0      	b.n	83f04 <_malloc_r+0x178>
   83f42:	4423      	add	r3, r4
   83f44:	685a      	ldr	r2, [r3, #4]
   83f46:	4628      	mov	r0, r5
   83f48:	f042 0201 	orr.w	r2, r2, #1
   83f4c:	605a      	str	r2, [r3, #4]
   83f4e:	3408      	adds	r4, #8
   83f50:	f000 fa92 	bl	84478 <__malloc_unlock>
   83f54:	4620      	mov	r0, r4
   83f56:	b003      	add	sp, #12
   83f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83f5c:	68bc      	ldr	r4, [r7, #8]
   83f5e:	6863      	ldr	r3, [r4, #4]
   83f60:	f023 0803 	bic.w	r8, r3, #3
   83f64:	45b0      	cmp	r8, r6
   83f66:	d304      	bcc.n	83f72 <_malloc_r+0x1e6>
   83f68:	eba8 0306 	sub.w	r3, r8, r6
   83f6c:	2b0f      	cmp	r3, #15
   83f6e:	f300 8085 	bgt.w	8407c <_malloc_r+0x2f0>
   83f72:	f8df 9158 	ldr.w	r9, [pc, #344]	; 840cc <_malloc_r+0x340>
   83f76:	4b50      	ldr	r3, [pc, #320]	; (840b8 <_malloc_r+0x32c>)
   83f78:	f8d9 2000 	ldr.w	r2, [r9]
   83f7c:	681b      	ldr	r3, [r3, #0]
   83f7e:	3201      	adds	r2, #1
   83f80:	4433      	add	r3, r6
   83f82:	eb04 0a08 	add.w	sl, r4, r8
   83f86:	f000 8154 	beq.w	84232 <_malloc_r+0x4a6>
   83f8a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83f8e:	330f      	adds	r3, #15
   83f90:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   83f94:	f02b 0b0f 	bic.w	fp, fp, #15
   83f98:	4659      	mov	r1, fp
   83f9a:	4628      	mov	r0, r5
   83f9c:	f000 fd6a 	bl	84a74 <_sbrk_r>
   83fa0:	1c41      	adds	r1, r0, #1
   83fa2:	4602      	mov	r2, r0
   83fa4:	f000 80fb 	beq.w	8419e <_malloc_r+0x412>
   83fa8:	4582      	cmp	sl, r0
   83faa:	f200 80f6 	bhi.w	8419a <_malloc_r+0x40e>
   83fae:	4b43      	ldr	r3, [pc, #268]	; (840bc <_malloc_r+0x330>)
   83fb0:	6819      	ldr	r1, [r3, #0]
   83fb2:	4459      	add	r1, fp
   83fb4:	6019      	str	r1, [r3, #0]
   83fb6:	f000 814c 	beq.w	84252 <_malloc_r+0x4c6>
   83fba:	f8d9 0000 	ldr.w	r0, [r9]
   83fbe:	3001      	adds	r0, #1
   83fc0:	bf1b      	ittet	ne
   83fc2:	eba2 0a0a 	subne.w	sl, r2, sl
   83fc6:	4451      	addne	r1, sl
   83fc8:	f8c9 2000 	streq.w	r2, [r9]
   83fcc:	6019      	strne	r1, [r3, #0]
   83fce:	f012 0107 	ands.w	r1, r2, #7
   83fd2:	f000 8114 	beq.w	841fe <_malloc_r+0x472>
   83fd6:	f1c1 0008 	rsb	r0, r1, #8
   83fda:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83fde:	4402      	add	r2, r0
   83fe0:	3108      	adds	r1, #8
   83fe2:	eb02 090b 	add.w	r9, r2, fp
   83fe6:	f3c9 090b 	ubfx	r9, r9, #0, #12
   83fea:	eba1 0909 	sub.w	r9, r1, r9
   83fee:	4649      	mov	r1, r9
   83ff0:	4628      	mov	r0, r5
   83ff2:	9301      	str	r3, [sp, #4]
   83ff4:	9200      	str	r2, [sp, #0]
   83ff6:	f000 fd3d 	bl	84a74 <_sbrk_r>
   83ffa:	1c43      	adds	r3, r0, #1
   83ffc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84000:	f000 8142 	beq.w	84288 <_malloc_r+0x4fc>
   84004:	1a80      	subs	r0, r0, r2
   84006:	4448      	add	r0, r9
   84008:	f040 0001 	orr.w	r0, r0, #1
   8400c:	6819      	ldr	r1, [r3, #0]
   8400e:	42bc      	cmp	r4, r7
   84010:	4449      	add	r1, r9
   84012:	60ba      	str	r2, [r7, #8]
   84014:	6019      	str	r1, [r3, #0]
   84016:	6050      	str	r0, [r2, #4]
   84018:	d017      	beq.n	8404a <_malloc_r+0x2be>
   8401a:	f1b8 0f0f 	cmp.w	r8, #15
   8401e:	f240 80fa 	bls.w	84216 <_malloc_r+0x48a>
   84022:	f04f 0c05 	mov.w	ip, #5
   84026:	6862      	ldr	r2, [r4, #4]
   84028:	f1a8 000c 	sub.w	r0, r8, #12
   8402c:	f020 0007 	bic.w	r0, r0, #7
   84030:	f002 0201 	and.w	r2, r2, #1
   84034:	eb04 0e00 	add.w	lr, r4, r0
   84038:	4302      	orrs	r2, r0
   8403a:	280f      	cmp	r0, #15
   8403c:	6062      	str	r2, [r4, #4]
   8403e:	f8ce c004 	str.w	ip, [lr, #4]
   84042:	f8ce c008 	str.w	ip, [lr, #8]
   84046:	f200 8116 	bhi.w	84276 <_malloc_r+0x4ea>
   8404a:	4b1d      	ldr	r3, [pc, #116]	; (840c0 <_malloc_r+0x334>)
   8404c:	68bc      	ldr	r4, [r7, #8]
   8404e:	681a      	ldr	r2, [r3, #0]
   84050:	4291      	cmp	r1, r2
   84052:	bf88      	it	hi
   84054:	6019      	strhi	r1, [r3, #0]
   84056:	4b1b      	ldr	r3, [pc, #108]	; (840c4 <_malloc_r+0x338>)
   84058:	681a      	ldr	r2, [r3, #0]
   8405a:	4291      	cmp	r1, r2
   8405c:	6862      	ldr	r2, [r4, #4]
   8405e:	bf88      	it	hi
   84060:	6019      	strhi	r1, [r3, #0]
   84062:	f022 0203 	bic.w	r2, r2, #3
   84066:	4296      	cmp	r6, r2
   84068:	eba2 0306 	sub.w	r3, r2, r6
   8406c:	d801      	bhi.n	84072 <_malloc_r+0x2e6>
   8406e:	2b0f      	cmp	r3, #15
   84070:	dc04      	bgt.n	8407c <_malloc_r+0x2f0>
   84072:	4628      	mov	r0, r5
   84074:	f000 fa00 	bl	84478 <__malloc_unlock>
   84078:	2400      	movs	r4, #0
   8407a:	e74d      	b.n	83f18 <_malloc_r+0x18c>
   8407c:	f046 0201 	orr.w	r2, r6, #1
   84080:	f043 0301 	orr.w	r3, r3, #1
   84084:	4426      	add	r6, r4
   84086:	6062      	str	r2, [r4, #4]
   84088:	4628      	mov	r0, r5
   8408a:	60be      	str	r6, [r7, #8]
   8408c:	3408      	adds	r4, #8
   8408e:	6073      	str	r3, [r6, #4]
   84090:	f000 f9f2 	bl	84478 <__malloc_unlock>
   84094:	4620      	mov	r0, r4
   84096:	b003      	add	sp, #12
   84098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8409c:	2b14      	cmp	r3, #20
   8409e:	d970      	bls.n	84182 <_malloc_r+0x3f6>
   840a0:	2b54      	cmp	r3, #84	; 0x54
   840a2:	f200 80a2 	bhi.w	841ea <_malloc_r+0x45e>
   840a6:	0b33      	lsrs	r3, r6, #12
   840a8:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   840ac:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   840b0:	00c1      	lsls	r1, r0, #3
   840b2:	e68d      	b.n	83dd0 <_malloc_r+0x44>
   840b4:	20000b14 	.word	0x20000b14
   840b8:	20000fec 	.word	0x20000fec
   840bc:	20000fbc 	.word	0x20000fbc
   840c0:	20000fe4 	.word	0x20000fe4
   840c4:	20000fe8 	.word	0x20000fe8
   840c8:	20000b1c 	.word	0x20000b1c
   840cc:	20000f1c 	.word	0x20000f1c
   840d0:	0a5a      	lsrs	r2, r3, #9
   840d2:	2a04      	cmp	r2, #4
   840d4:	d95b      	bls.n	8418e <_malloc_r+0x402>
   840d6:	2a14      	cmp	r2, #20
   840d8:	f200 80ae 	bhi.w	84238 <_malloc_r+0x4ac>
   840dc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   840e0:	00c9      	lsls	r1, r1, #3
   840e2:	325b      	adds	r2, #91	; 0x5b
   840e4:	eb07 0c01 	add.w	ip, r7, r1
   840e8:	5879      	ldr	r1, [r7, r1]
   840ea:	f1ac 0c08 	sub.w	ip, ip, #8
   840ee:	458c      	cmp	ip, r1
   840f0:	f000 8088 	beq.w	84204 <_malloc_r+0x478>
   840f4:	684a      	ldr	r2, [r1, #4]
   840f6:	f022 0203 	bic.w	r2, r2, #3
   840fa:	4293      	cmp	r3, r2
   840fc:	d273      	bcs.n	841e6 <_malloc_r+0x45a>
   840fe:	6889      	ldr	r1, [r1, #8]
   84100:	458c      	cmp	ip, r1
   84102:	d1f7      	bne.n	840f4 <_malloc_r+0x368>
   84104:	f8dc 300c 	ldr.w	r3, [ip, #12]
   84108:	687a      	ldr	r2, [r7, #4]
   8410a:	60e3      	str	r3, [r4, #12]
   8410c:	f8c4 c008 	str.w	ip, [r4, #8]
   84110:	609c      	str	r4, [r3, #8]
   84112:	f8cc 400c 	str.w	r4, [ip, #12]
   84116:	e69e      	b.n	83e56 <_malloc_r+0xca>
   84118:	f046 0c01 	orr.w	ip, r6, #1
   8411c:	f042 0101 	orr.w	r1, r2, #1
   84120:	4426      	add	r6, r4
   84122:	f8c4 c004 	str.w	ip, [r4, #4]
   84126:	4628      	mov	r0, r5
   84128:	617e      	str	r6, [r7, #20]
   8412a:	613e      	str	r6, [r7, #16]
   8412c:	f8c6 e00c 	str.w	lr, [r6, #12]
   84130:	f8c6 e008 	str.w	lr, [r6, #8]
   84134:	6071      	str	r1, [r6, #4]
   84136:	50e2      	str	r2, [r4, r3]
   84138:	f000 f99e 	bl	84478 <__malloc_unlock>
   8413c:	3408      	adds	r4, #8
   8413e:	e6eb      	b.n	83f18 <_malloc_r+0x18c>
   84140:	687a      	ldr	r2, [r7, #4]
   84142:	e688      	b.n	83e56 <_malloc_r+0xca>
   84144:	f108 0801 	add.w	r8, r8, #1
   84148:	f018 0f03 	tst.w	r8, #3
   8414c:	f10c 0c08 	add.w	ip, ip, #8
   84150:	f47f ae93 	bne.w	83e7a <_malloc_r+0xee>
   84154:	e02d      	b.n	841b2 <_malloc_r+0x426>
   84156:	68dc      	ldr	r4, [r3, #12]
   84158:	42a3      	cmp	r3, r4
   8415a:	bf08      	it	eq
   8415c:	3002      	addeq	r0, #2
   8415e:	f43f ae4b 	beq.w	83df8 <_malloc_r+0x6c>
   84162:	e6c9      	b.n	83ef8 <_malloc_r+0x16c>
   84164:	461c      	mov	r4, r3
   84166:	4419      	add	r1, r3
   84168:	684a      	ldr	r2, [r1, #4]
   8416a:	68db      	ldr	r3, [r3, #12]
   8416c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   84170:	f042 0201 	orr.w	r2, r2, #1
   84174:	604a      	str	r2, [r1, #4]
   84176:	4628      	mov	r0, r5
   84178:	60f3      	str	r3, [r6, #12]
   8417a:	609e      	str	r6, [r3, #8]
   8417c:	f000 f97c 	bl	84478 <__malloc_unlock>
   84180:	e6ca      	b.n	83f18 <_malloc_r+0x18c>
   84182:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   84186:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8418a:	00c1      	lsls	r1, r0, #3
   8418c:	e620      	b.n	83dd0 <_malloc_r+0x44>
   8418e:	099a      	lsrs	r2, r3, #6
   84190:	f102 0139 	add.w	r1, r2, #57	; 0x39
   84194:	00c9      	lsls	r1, r1, #3
   84196:	3238      	adds	r2, #56	; 0x38
   84198:	e7a4      	b.n	840e4 <_malloc_r+0x358>
   8419a:	42bc      	cmp	r4, r7
   8419c:	d054      	beq.n	84248 <_malloc_r+0x4bc>
   8419e:	68bc      	ldr	r4, [r7, #8]
   841a0:	6862      	ldr	r2, [r4, #4]
   841a2:	f022 0203 	bic.w	r2, r2, #3
   841a6:	e75e      	b.n	84066 <_malloc_r+0x2da>
   841a8:	f859 3908 	ldr.w	r3, [r9], #-8
   841ac:	4599      	cmp	r9, r3
   841ae:	f040 8086 	bne.w	842be <_malloc_r+0x532>
   841b2:	f010 0f03 	tst.w	r0, #3
   841b6:	f100 30ff 	add.w	r0, r0, #4294967295
   841ba:	d1f5      	bne.n	841a8 <_malloc_r+0x41c>
   841bc:	687b      	ldr	r3, [r7, #4]
   841be:	ea23 0304 	bic.w	r3, r3, r4
   841c2:	607b      	str	r3, [r7, #4]
   841c4:	0064      	lsls	r4, r4, #1
   841c6:	429c      	cmp	r4, r3
   841c8:	f63f aec8 	bhi.w	83f5c <_malloc_r+0x1d0>
   841cc:	2c00      	cmp	r4, #0
   841ce:	f43f aec5 	beq.w	83f5c <_malloc_r+0x1d0>
   841d2:	421c      	tst	r4, r3
   841d4:	4640      	mov	r0, r8
   841d6:	f47f ae4c 	bne.w	83e72 <_malloc_r+0xe6>
   841da:	0064      	lsls	r4, r4, #1
   841dc:	421c      	tst	r4, r3
   841de:	f100 0004 	add.w	r0, r0, #4
   841e2:	d0fa      	beq.n	841da <_malloc_r+0x44e>
   841e4:	e645      	b.n	83e72 <_malloc_r+0xe6>
   841e6:	468c      	mov	ip, r1
   841e8:	e78c      	b.n	84104 <_malloc_r+0x378>
   841ea:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   841ee:	d815      	bhi.n	8421c <_malloc_r+0x490>
   841f0:	0bf3      	lsrs	r3, r6, #15
   841f2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   841f6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   841fa:	00c1      	lsls	r1, r0, #3
   841fc:	e5e8      	b.n	83dd0 <_malloc_r+0x44>
   841fe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   84202:	e6ee      	b.n	83fe2 <_malloc_r+0x256>
   84204:	2101      	movs	r1, #1
   84206:	687b      	ldr	r3, [r7, #4]
   84208:	1092      	asrs	r2, r2, #2
   8420a:	fa01 f202 	lsl.w	r2, r1, r2
   8420e:	431a      	orrs	r2, r3
   84210:	607a      	str	r2, [r7, #4]
   84212:	4663      	mov	r3, ip
   84214:	e779      	b.n	8410a <_malloc_r+0x37e>
   84216:	2301      	movs	r3, #1
   84218:	6053      	str	r3, [r2, #4]
   8421a:	e72a      	b.n	84072 <_malloc_r+0x2e6>
   8421c:	f240 5254 	movw	r2, #1364	; 0x554
   84220:	4293      	cmp	r3, r2
   84222:	d822      	bhi.n	8426a <_malloc_r+0x4de>
   84224:	0cb3      	lsrs	r3, r6, #18
   84226:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8422a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8422e:	00c1      	lsls	r1, r0, #3
   84230:	e5ce      	b.n	83dd0 <_malloc_r+0x44>
   84232:	f103 0b10 	add.w	fp, r3, #16
   84236:	e6af      	b.n	83f98 <_malloc_r+0x20c>
   84238:	2a54      	cmp	r2, #84	; 0x54
   8423a:	d829      	bhi.n	84290 <_malloc_r+0x504>
   8423c:	0b1a      	lsrs	r2, r3, #12
   8423e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   84242:	00c9      	lsls	r1, r1, #3
   84244:	326e      	adds	r2, #110	; 0x6e
   84246:	e74d      	b.n	840e4 <_malloc_r+0x358>
   84248:	4b20      	ldr	r3, [pc, #128]	; (842cc <_malloc_r+0x540>)
   8424a:	6819      	ldr	r1, [r3, #0]
   8424c:	4459      	add	r1, fp
   8424e:	6019      	str	r1, [r3, #0]
   84250:	e6b3      	b.n	83fba <_malloc_r+0x22e>
   84252:	f3ca 000b 	ubfx	r0, sl, #0, #12
   84256:	2800      	cmp	r0, #0
   84258:	f47f aeaf 	bne.w	83fba <_malloc_r+0x22e>
   8425c:	eb08 030b 	add.w	r3, r8, fp
   84260:	68ba      	ldr	r2, [r7, #8]
   84262:	f043 0301 	orr.w	r3, r3, #1
   84266:	6053      	str	r3, [r2, #4]
   84268:	e6ef      	b.n	8404a <_malloc_r+0x2be>
   8426a:	207f      	movs	r0, #127	; 0x7f
   8426c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   84270:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   84274:	e5ac      	b.n	83dd0 <_malloc_r+0x44>
   84276:	f104 0108 	add.w	r1, r4, #8
   8427a:	4628      	mov	r0, r5
   8427c:	9300      	str	r3, [sp, #0]
   8427e:	f000 fd6b 	bl	84d58 <_free_r>
   84282:	9b00      	ldr	r3, [sp, #0]
   84284:	6819      	ldr	r1, [r3, #0]
   84286:	e6e0      	b.n	8404a <_malloc_r+0x2be>
   84288:	2001      	movs	r0, #1
   8428a:	f04f 0900 	mov.w	r9, #0
   8428e:	e6bd      	b.n	8400c <_malloc_r+0x280>
   84290:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84294:	d805      	bhi.n	842a2 <_malloc_r+0x516>
   84296:	0bda      	lsrs	r2, r3, #15
   84298:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8429c:	00c9      	lsls	r1, r1, #3
   8429e:	3277      	adds	r2, #119	; 0x77
   842a0:	e720      	b.n	840e4 <_malloc_r+0x358>
   842a2:	f240 5154 	movw	r1, #1364	; 0x554
   842a6:	428a      	cmp	r2, r1
   842a8:	d805      	bhi.n	842b6 <_malloc_r+0x52a>
   842aa:	0c9a      	lsrs	r2, r3, #18
   842ac:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   842b0:	00c9      	lsls	r1, r1, #3
   842b2:	327c      	adds	r2, #124	; 0x7c
   842b4:	e716      	b.n	840e4 <_malloc_r+0x358>
   842b6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   842ba:	227e      	movs	r2, #126	; 0x7e
   842bc:	e712      	b.n	840e4 <_malloc_r+0x358>
   842be:	687b      	ldr	r3, [r7, #4]
   842c0:	e780      	b.n	841c4 <_malloc_r+0x438>
   842c2:	08f0      	lsrs	r0, r6, #3
   842c4:	f106 0308 	add.w	r3, r6, #8
   842c8:	e60e      	b.n	83ee8 <_malloc_r+0x15c>
   842ca:	bf00      	nop
   842cc:	20000fbc 	.word	0x20000fbc

000842d0 <__ascii_mbtowc>:
   842d0:	b082      	sub	sp, #8
   842d2:	b149      	cbz	r1, 842e8 <__ascii_mbtowc+0x18>
   842d4:	b15a      	cbz	r2, 842ee <__ascii_mbtowc+0x1e>
   842d6:	b16b      	cbz	r3, 842f4 <__ascii_mbtowc+0x24>
   842d8:	7813      	ldrb	r3, [r2, #0]
   842da:	600b      	str	r3, [r1, #0]
   842dc:	7812      	ldrb	r2, [r2, #0]
   842de:	1c10      	adds	r0, r2, #0
   842e0:	bf18      	it	ne
   842e2:	2001      	movne	r0, #1
   842e4:	b002      	add	sp, #8
   842e6:	4770      	bx	lr
   842e8:	a901      	add	r1, sp, #4
   842ea:	2a00      	cmp	r2, #0
   842ec:	d1f3      	bne.n	842d6 <__ascii_mbtowc+0x6>
   842ee:	4610      	mov	r0, r2
   842f0:	b002      	add	sp, #8
   842f2:	4770      	bx	lr
   842f4:	f06f 0001 	mvn.w	r0, #1
   842f8:	e7f4      	b.n	842e4 <__ascii_mbtowc+0x14>
   842fa:	bf00      	nop

000842fc <memchr>:
   842fc:	0783      	lsls	r3, r0, #30
   842fe:	b470      	push	{r4, r5, r6}
   84300:	b2cd      	uxtb	r5, r1
   84302:	d03d      	beq.n	84380 <memchr+0x84>
   84304:	1e54      	subs	r4, r2, #1
   84306:	b30a      	cbz	r2, 8434c <memchr+0x50>
   84308:	7803      	ldrb	r3, [r0, #0]
   8430a:	42ab      	cmp	r3, r5
   8430c:	d01f      	beq.n	8434e <memchr+0x52>
   8430e:	1c43      	adds	r3, r0, #1
   84310:	e005      	b.n	8431e <memchr+0x22>
   84312:	f114 34ff 	adds.w	r4, r4, #4294967295
   84316:	d319      	bcc.n	8434c <memchr+0x50>
   84318:	7802      	ldrb	r2, [r0, #0]
   8431a:	42aa      	cmp	r2, r5
   8431c:	d017      	beq.n	8434e <memchr+0x52>
   8431e:	f013 0f03 	tst.w	r3, #3
   84322:	4618      	mov	r0, r3
   84324:	f103 0301 	add.w	r3, r3, #1
   84328:	d1f3      	bne.n	84312 <memchr+0x16>
   8432a:	2c03      	cmp	r4, #3
   8432c:	d811      	bhi.n	84352 <memchr+0x56>
   8432e:	b34c      	cbz	r4, 84384 <memchr+0x88>
   84330:	7803      	ldrb	r3, [r0, #0]
   84332:	42ab      	cmp	r3, r5
   84334:	d00b      	beq.n	8434e <memchr+0x52>
   84336:	4404      	add	r4, r0
   84338:	1c43      	adds	r3, r0, #1
   8433a:	e002      	b.n	84342 <memchr+0x46>
   8433c:	7802      	ldrb	r2, [r0, #0]
   8433e:	42aa      	cmp	r2, r5
   84340:	d005      	beq.n	8434e <memchr+0x52>
   84342:	429c      	cmp	r4, r3
   84344:	4618      	mov	r0, r3
   84346:	f103 0301 	add.w	r3, r3, #1
   8434a:	d1f7      	bne.n	8433c <memchr+0x40>
   8434c:	2000      	movs	r0, #0
   8434e:	bc70      	pop	{r4, r5, r6}
   84350:	4770      	bx	lr
   84352:	0209      	lsls	r1, r1, #8
   84354:	b289      	uxth	r1, r1
   84356:	4329      	orrs	r1, r5
   84358:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   8435c:	6803      	ldr	r3, [r0, #0]
   8435e:	4606      	mov	r6, r0
   84360:	404b      	eors	r3, r1
   84362:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   84366:	ea22 0303 	bic.w	r3, r2, r3
   8436a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8436e:	f100 0004 	add.w	r0, r0, #4
   84372:	d103      	bne.n	8437c <memchr+0x80>
   84374:	3c04      	subs	r4, #4
   84376:	2c03      	cmp	r4, #3
   84378:	d8f0      	bhi.n	8435c <memchr+0x60>
   8437a:	e7d8      	b.n	8432e <memchr+0x32>
   8437c:	4630      	mov	r0, r6
   8437e:	e7d7      	b.n	84330 <memchr+0x34>
   84380:	4614      	mov	r4, r2
   84382:	e7d2      	b.n	8432a <memchr+0x2e>
   84384:	4620      	mov	r0, r4
   84386:	e7e2      	b.n	8434e <memchr+0x52>

00084388 <memcpy>:
   84388:	4684      	mov	ip, r0
   8438a:	ea41 0300 	orr.w	r3, r1, r0
   8438e:	f013 0303 	ands.w	r3, r3, #3
   84392:	d149      	bne.n	84428 <memcpy+0xa0>
   84394:	3a40      	subs	r2, #64	; 0x40
   84396:	d323      	bcc.n	843e0 <memcpy+0x58>
   84398:	680b      	ldr	r3, [r1, #0]
   8439a:	6003      	str	r3, [r0, #0]
   8439c:	684b      	ldr	r3, [r1, #4]
   8439e:	6043      	str	r3, [r0, #4]
   843a0:	688b      	ldr	r3, [r1, #8]
   843a2:	6083      	str	r3, [r0, #8]
   843a4:	68cb      	ldr	r3, [r1, #12]
   843a6:	60c3      	str	r3, [r0, #12]
   843a8:	690b      	ldr	r3, [r1, #16]
   843aa:	6103      	str	r3, [r0, #16]
   843ac:	694b      	ldr	r3, [r1, #20]
   843ae:	6143      	str	r3, [r0, #20]
   843b0:	698b      	ldr	r3, [r1, #24]
   843b2:	6183      	str	r3, [r0, #24]
   843b4:	69cb      	ldr	r3, [r1, #28]
   843b6:	61c3      	str	r3, [r0, #28]
   843b8:	6a0b      	ldr	r3, [r1, #32]
   843ba:	6203      	str	r3, [r0, #32]
   843bc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   843be:	6243      	str	r3, [r0, #36]	; 0x24
   843c0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   843c2:	6283      	str	r3, [r0, #40]	; 0x28
   843c4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   843c6:	62c3      	str	r3, [r0, #44]	; 0x2c
   843c8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   843ca:	6303      	str	r3, [r0, #48]	; 0x30
   843cc:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   843ce:	6343      	str	r3, [r0, #52]	; 0x34
   843d0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   843d2:	6383      	str	r3, [r0, #56]	; 0x38
   843d4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   843d6:	63c3      	str	r3, [r0, #60]	; 0x3c
   843d8:	3040      	adds	r0, #64	; 0x40
   843da:	3140      	adds	r1, #64	; 0x40
   843dc:	3a40      	subs	r2, #64	; 0x40
   843de:	d2db      	bcs.n	84398 <memcpy+0x10>
   843e0:	3230      	adds	r2, #48	; 0x30
   843e2:	d30b      	bcc.n	843fc <memcpy+0x74>
   843e4:	680b      	ldr	r3, [r1, #0]
   843e6:	6003      	str	r3, [r0, #0]
   843e8:	684b      	ldr	r3, [r1, #4]
   843ea:	6043      	str	r3, [r0, #4]
   843ec:	688b      	ldr	r3, [r1, #8]
   843ee:	6083      	str	r3, [r0, #8]
   843f0:	68cb      	ldr	r3, [r1, #12]
   843f2:	60c3      	str	r3, [r0, #12]
   843f4:	3010      	adds	r0, #16
   843f6:	3110      	adds	r1, #16
   843f8:	3a10      	subs	r2, #16
   843fa:	d2f3      	bcs.n	843e4 <memcpy+0x5c>
   843fc:	320c      	adds	r2, #12
   843fe:	d305      	bcc.n	8440c <memcpy+0x84>
   84400:	f851 3b04 	ldr.w	r3, [r1], #4
   84404:	f840 3b04 	str.w	r3, [r0], #4
   84408:	3a04      	subs	r2, #4
   8440a:	d2f9      	bcs.n	84400 <memcpy+0x78>
   8440c:	3204      	adds	r2, #4
   8440e:	d008      	beq.n	84422 <memcpy+0x9a>
   84410:	07d2      	lsls	r2, r2, #31
   84412:	bf1c      	itt	ne
   84414:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84418:	f800 3b01 	strbne.w	r3, [r0], #1
   8441c:	d301      	bcc.n	84422 <memcpy+0x9a>
   8441e:	880b      	ldrh	r3, [r1, #0]
   84420:	8003      	strh	r3, [r0, #0]
   84422:	4660      	mov	r0, ip
   84424:	4770      	bx	lr
   84426:	bf00      	nop
   84428:	2a08      	cmp	r2, #8
   8442a:	d313      	bcc.n	84454 <memcpy+0xcc>
   8442c:	078b      	lsls	r3, r1, #30
   8442e:	d0b1      	beq.n	84394 <memcpy+0xc>
   84430:	f010 0303 	ands.w	r3, r0, #3
   84434:	d0ae      	beq.n	84394 <memcpy+0xc>
   84436:	f1c3 0304 	rsb	r3, r3, #4
   8443a:	1ad2      	subs	r2, r2, r3
   8443c:	07db      	lsls	r3, r3, #31
   8443e:	bf1c      	itt	ne
   84440:	f811 3b01 	ldrbne.w	r3, [r1], #1
   84444:	f800 3b01 	strbne.w	r3, [r0], #1
   84448:	d3a4      	bcc.n	84394 <memcpy+0xc>
   8444a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8444e:	f820 3b02 	strh.w	r3, [r0], #2
   84452:	e79f      	b.n	84394 <memcpy+0xc>
   84454:	3a04      	subs	r2, #4
   84456:	d3d9      	bcc.n	8440c <memcpy+0x84>
   84458:	3a01      	subs	r2, #1
   8445a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8445e:	f800 3b01 	strb.w	r3, [r0], #1
   84462:	d2f9      	bcs.n	84458 <memcpy+0xd0>
   84464:	780b      	ldrb	r3, [r1, #0]
   84466:	7003      	strb	r3, [r0, #0]
   84468:	784b      	ldrb	r3, [r1, #1]
   8446a:	7043      	strb	r3, [r0, #1]
   8446c:	788b      	ldrb	r3, [r1, #2]
   8446e:	7083      	strb	r3, [r0, #2]
   84470:	4660      	mov	r0, ip
   84472:	4770      	bx	lr

00084474 <__malloc_lock>:
   84474:	4770      	bx	lr
   84476:	bf00      	nop

00084478 <__malloc_unlock>:
   84478:	4770      	bx	lr
   8447a:	bf00      	nop

0008447c <_Balloc>:
   8447c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8447e:	b570      	push	{r4, r5, r6, lr}
   84480:	4605      	mov	r5, r0
   84482:	460c      	mov	r4, r1
   84484:	b14b      	cbz	r3, 8449a <_Balloc+0x1e>
   84486:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8448a:	b180      	cbz	r0, 844ae <_Balloc+0x32>
   8448c:	6802      	ldr	r2, [r0, #0]
   8448e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   84492:	2300      	movs	r3, #0
   84494:	6103      	str	r3, [r0, #16]
   84496:	60c3      	str	r3, [r0, #12]
   84498:	bd70      	pop	{r4, r5, r6, pc}
   8449a:	2221      	movs	r2, #33	; 0x21
   8449c:	2104      	movs	r1, #4
   8449e:	f000 fbdb 	bl	84c58 <_calloc_r>
   844a2:	64e8      	str	r0, [r5, #76]	; 0x4c
   844a4:	4603      	mov	r3, r0
   844a6:	2800      	cmp	r0, #0
   844a8:	d1ed      	bne.n	84486 <_Balloc+0xa>
   844aa:	2000      	movs	r0, #0
   844ac:	bd70      	pop	{r4, r5, r6, pc}
   844ae:	2101      	movs	r1, #1
   844b0:	fa01 f604 	lsl.w	r6, r1, r4
   844b4:	1d72      	adds	r2, r6, #5
   844b6:	4628      	mov	r0, r5
   844b8:	0092      	lsls	r2, r2, #2
   844ba:	f000 fbcd 	bl	84c58 <_calloc_r>
   844be:	2800      	cmp	r0, #0
   844c0:	d0f3      	beq.n	844aa <_Balloc+0x2e>
   844c2:	6044      	str	r4, [r0, #4]
   844c4:	6086      	str	r6, [r0, #8]
   844c6:	e7e4      	b.n	84492 <_Balloc+0x16>

000844c8 <_Bfree>:
   844c8:	b131      	cbz	r1, 844d8 <_Bfree+0x10>
   844ca:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   844cc:	684a      	ldr	r2, [r1, #4]
   844ce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   844d2:	6008      	str	r0, [r1, #0]
   844d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   844d8:	4770      	bx	lr
   844da:	bf00      	nop

000844dc <__multadd>:
   844dc:	b5f0      	push	{r4, r5, r6, r7, lr}
   844de:	460c      	mov	r4, r1
   844e0:	4605      	mov	r5, r0
   844e2:	f04f 0e00 	mov.w	lr, #0
   844e6:	690e      	ldr	r6, [r1, #16]
   844e8:	b083      	sub	sp, #12
   844ea:	f101 0714 	add.w	r7, r1, #20
   844ee:	6838      	ldr	r0, [r7, #0]
   844f0:	f10e 0e01 	add.w	lr, lr, #1
   844f4:	b281      	uxth	r1, r0
   844f6:	fb02 3301 	mla	r3, r2, r1, r3
   844fa:	0c01      	lsrs	r1, r0, #16
   844fc:	0c18      	lsrs	r0, r3, #16
   844fe:	fb02 0101 	mla	r1, r2, r1, r0
   84502:	b29b      	uxth	r3, r3
   84504:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   84508:	4576      	cmp	r6, lr
   8450a:	f847 3b04 	str.w	r3, [r7], #4
   8450e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   84512:	dcec      	bgt.n	844ee <__multadd+0x12>
   84514:	b13b      	cbz	r3, 84526 <__multadd+0x4a>
   84516:	68a2      	ldr	r2, [r4, #8]
   84518:	4296      	cmp	r6, r2
   8451a:	da07      	bge.n	8452c <__multadd+0x50>
   8451c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84520:	3601      	adds	r6, #1
   84522:	6153      	str	r3, [r2, #20]
   84524:	6126      	str	r6, [r4, #16]
   84526:	4620      	mov	r0, r4
   84528:	b003      	add	sp, #12
   8452a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8452c:	6861      	ldr	r1, [r4, #4]
   8452e:	4628      	mov	r0, r5
   84530:	3101      	adds	r1, #1
   84532:	9301      	str	r3, [sp, #4]
   84534:	f7ff ffa2 	bl	8447c <_Balloc>
   84538:	4607      	mov	r7, r0
   8453a:	6922      	ldr	r2, [r4, #16]
   8453c:	f104 010c 	add.w	r1, r4, #12
   84540:	3202      	adds	r2, #2
   84542:	0092      	lsls	r2, r2, #2
   84544:	300c      	adds	r0, #12
   84546:	f7ff ff1f 	bl	84388 <memcpy>
   8454a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   8454c:	6861      	ldr	r1, [r4, #4]
   8454e:	9b01      	ldr	r3, [sp, #4]
   84550:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84554:	6020      	str	r0, [r4, #0]
   84556:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8455a:	463c      	mov	r4, r7
   8455c:	e7de      	b.n	8451c <__multadd+0x40>
   8455e:	bf00      	nop

00084560 <__hi0bits>:
   84560:	0c02      	lsrs	r2, r0, #16
   84562:	0412      	lsls	r2, r2, #16
   84564:	4603      	mov	r3, r0
   84566:	b9b2      	cbnz	r2, 84596 <__hi0bits+0x36>
   84568:	0403      	lsls	r3, r0, #16
   8456a:	2010      	movs	r0, #16
   8456c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   84570:	bf04      	itt	eq
   84572:	021b      	lsleq	r3, r3, #8
   84574:	3008      	addeq	r0, #8
   84576:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8457a:	bf04      	itt	eq
   8457c:	011b      	lsleq	r3, r3, #4
   8457e:	3004      	addeq	r0, #4
   84580:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   84584:	bf04      	itt	eq
   84586:	009b      	lsleq	r3, r3, #2
   84588:	3002      	addeq	r0, #2
   8458a:	2b00      	cmp	r3, #0
   8458c:	db02      	blt.n	84594 <__hi0bits+0x34>
   8458e:	005b      	lsls	r3, r3, #1
   84590:	d403      	bmi.n	8459a <__hi0bits+0x3a>
   84592:	2020      	movs	r0, #32
   84594:	4770      	bx	lr
   84596:	2000      	movs	r0, #0
   84598:	e7e8      	b.n	8456c <__hi0bits+0xc>
   8459a:	3001      	adds	r0, #1
   8459c:	4770      	bx	lr
   8459e:	bf00      	nop

000845a0 <__lo0bits>:
   845a0:	6803      	ldr	r3, [r0, #0]
   845a2:	4601      	mov	r1, r0
   845a4:	f013 0207 	ands.w	r2, r3, #7
   845a8:	d007      	beq.n	845ba <__lo0bits+0x1a>
   845aa:	07da      	lsls	r2, r3, #31
   845ac:	d421      	bmi.n	845f2 <__lo0bits+0x52>
   845ae:	0798      	lsls	r0, r3, #30
   845b0:	d421      	bmi.n	845f6 <__lo0bits+0x56>
   845b2:	089b      	lsrs	r3, r3, #2
   845b4:	600b      	str	r3, [r1, #0]
   845b6:	2002      	movs	r0, #2
   845b8:	4770      	bx	lr
   845ba:	b298      	uxth	r0, r3
   845bc:	b198      	cbz	r0, 845e6 <__lo0bits+0x46>
   845be:	4610      	mov	r0, r2
   845c0:	f013 0fff 	tst.w	r3, #255	; 0xff
   845c4:	bf04      	itt	eq
   845c6:	0a1b      	lsreq	r3, r3, #8
   845c8:	3008      	addeq	r0, #8
   845ca:	071a      	lsls	r2, r3, #28
   845cc:	bf04      	itt	eq
   845ce:	091b      	lsreq	r3, r3, #4
   845d0:	3004      	addeq	r0, #4
   845d2:	079a      	lsls	r2, r3, #30
   845d4:	bf04      	itt	eq
   845d6:	089b      	lsreq	r3, r3, #2
   845d8:	3002      	addeq	r0, #2
   845da:	07da      	lsls	r2, r3, #31
   845dc:	d407      	bmi.n	845ee <__lo0bits+0x4e>
   845de:	085b      	lsrs	r3, r3, #1
   845e0:	d104      	bne.n	845ec <__lo0bits+0x4c>
   845e2:	2020      	movs	r0, #32
   845e4:	4770      	bx	lr
   845e6:	0c1b      	lsrs	r3, r3, #16
   845e8:	2010      	movs	r0, #16
   845ea:	e7e9      	b.n	845c0 <__lo0bits+0x20>
   845ec:	3001      	adds	r0, #1
   845ee:	600b      	str	r3, [r1, #0]
   845f0:	4770      	bx	lr
   845f2:	2000      	movs	r0, #0
   845f4:	4770      	bx	lr
   845f6:	085b      	lsrs	r3, r3, #1
   845f8:	600b      	str	r3, [r1, #0]
   845fa:	2001      	movs	r0, #1
   845fc:	4770      	bx	lr
   845fe:	bf00      	nop

00084600 <__i2b>:
   84600:	b510      	push	{r4, lr}
   84602:	460c      	mov	r4, r1
   84604:	2101      	movs	r1, #1
   84606:	f7ff ff39 	bl	8447c <_Balloc>
   8460a:	2201      	movs	r2, #1
   8460c:	6144      	str	r4, [r0, #20]
   8460e:	6102      	str	r2, [r0, #16]
   84610:	bd10      	pop	{r4, pc}
   84612:	bf00      	nop

00084614 <__multiply>:
   84614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84618:	690c      	ldr	r4, [r1, #16]
   8461a:	6915      	ldr	r5, [r2, #16]
   8461c:	b083      	sub	sp, #12
   8461e:	42ac      	cmp	r4, r5
   84620:	468b      	mov	fp, r1
   84622:	4616      	mov	r6, r2
   84624:	da04      	bge.n	84630 <__multiply+0x1c>
   84626:	4622      	mov	r2, r4
   84628:	46b3      	mov	fp, r6
   8462a:	462c      	mov	r4, r5
   8462c:	460e      	mov	r6, r1
   8462e:	4615      	mov	r5, r2
   84630:	f8db 3008 	ldr.w	r3, [fp, #8]
   84634:	eb04 0805 	add.w	r8, r4, r5
   84638:	f8db 1004 	ldr.w	r1, [fp, #4]
   8463c:	4598      	cmp	r8, r3
   8463e:	bfc8      	it	gt
   84640:	3101      	addgt	r1, #1
   84642:	f7ff ff1b 	bl	8447c <_Balloc>
   84646:	f100 0914 	add.w	r9, r0, #20
   8464a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   8464e:	45d1      	cmp	r9, sl
   84650:	9000      	str	r0, [sp, #0]
   84652:	d205      	bcs.n	84660 <__multiply+0x4c>
   84654:	464b      	mov	r3, r9
   84656:	2100      	movs	r1, #0
   84658:	f843 1b04 	str.w	r1, [r3], #4
   8465c:	459a      	cmp	sl, r3
   8465e:	d8fb      	bhi.n	84658 <__multiply+0x44>
   84660:	f106 0c14 	add.w	ip, r6, #20
   84664:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84668:	f10b 0b14 	add.w	fp, fp, #20
   8466c:	459c      	cmp	ip, r3
   8466e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   84672:	d24b      	bcs.n	8470c <__multiply+0xf8>
   84674:	f8cd a004 	str.w	sl, [sp, #4]
   84678:	469a      	mov	sl, r3
   8467a:	f8dc 5000 	ldr.w	r5, [ip]
   8467e:	b2af      	uxth	r7, r5
   84680:	b1e7      	cbz	r7, 846bc <__multiply+0xa8>
   84682:	464d      	mov	r5, r9
   84684:	465e      	mov	r6, fp
   84686:	2100      	movs	r1, #0
   84688:	f856 2b04 	ldr.w	r2, [r6], #4
   8468c:	6828      	ldr	r0, [r5, #0]
   8468e:	b293      	uxth	r3, r2
   84690:	b284      	uxth	r4, r0
   84692:	0c12      	lsrs	r2, r2, #16
   84694:	fb07 4303 	mla	r3, r7, r3, r4
   84698:	0c00      	lsrs	r0, r0, #16
   8469a:	fb07 0202 	mla	r2, r7, r2, r0
   8469e:	440b      	add	r3, r1
   846a0:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   846a4:	b29b      	uxth	r3, r3
   846a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   846aa:	45b6      	cmp	lr, r6
   846ac:	f845 3b04 	str.w	r3, [r5], #4
   846b0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   846b4:	d8e8      	bhi.n	84688 <__multiply+0x74>
   846b6:	6029      	str	r1, [r5, #0]
   846b8:	f8dc 5000 	ldr.w	r5, [ip]
   846bc:	0c2d      	lsrs	r5, r5, #16
   846be:	d01d      	beq.n	846fc <__multiply+0xe8>
   846c0:	f8d9 3000 	ldr.w	r3, [r9]
   846c4:	4648      	mov	r0, r9
   846c6:	461c      	mov	r4, r3
   846c8:	4659      	mov	r1, fp
   846ca:	2200      	movs	r2, #0
   846cc:	880e      	ldrh	r6, [r1, #0]
   846ce:	0c24      	lsrs	r4, r4, #16
   846d0:	fb05 4406 	mla	r4, r5, r6, r4
   846d4:	b29b      	uxth	r3, r3
   846d6:	4422      	add	r2, r4
   846d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   846dc:	f840 3b04 	str.w	r3, [r0], #4
   846e0:	f851 3b04 	ldr.w	r3, [r1], #4
   846e4:	6804      	ldr	r4, [r0, #0]
   846e6:	0c1b      	lsrs	r3, r3, #16
   846e8:	b2a6      	uxth	r6, r4
   846ea:	fb05 6303 	mla	r3, r5, r3, r6
   846ee:	458e      	cmp	lr, r1
   846f0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   846f4:	ea4f 4213 	mov.w	r2, r3, lsr #16
   846f8:	d8e8      	bhi.n	846cc <__multiply+0xb8>
   846fa:	6003      	str	r3, [r0, #0]
   846fc:	f10c 0c04 	add.w	ip, ip, #4
   84700:	45e2      	cmp	sl, ip
   84702:	f109 0904 	add.w	r9, r9, #4
   84706:	d8b8      	bhi.n	8467a <__multiply+0x66>
   84708:	f8dd a004 	ldr.w	sl, [sp, #4]
   8470c:	f1b8 0f00 	cmp.w	r8, #0
   84710:	dd0b      	ble.n	8472a <__multiply+0x116>
   84712:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   84716:	f1aa 0a04 	sub.w	sl, sl, #4
   8471a:	b11b      	cbz	r3, 84724 <__multiply+0x110>
   8471c:	e005      	b.n	8472a <__multiply+0x116>
   8471e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   84722:	b913      	cbnz	r3, 8472a <__multiply+0x116>
   84724:	f1b8 0801 	subs.w	r8, r8, #1
   84728:	d1f9      	bne.n	8471e <__multiply+0x10a>
   8472a:	9800      	ldr	r0, [sp, #0]
   8472c:	f8c0 8010 	str.w	r8, [r0, #16]
   84730:	b003      	add	sp, #12
   84732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84736:	bf00      	nop

00084738 <__pow5mult>:
   84738:	f012 0303 	ands.w	r3, r2, #3
   8473c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84740:	4614      	mov	r4, r2
   84742:	4607      	mov	r7, r0
   84744:	d12e      	bne.n	847a4 <__pow5mult+0x6c>
   84746:	460d      	mov	r5, r1
   84748:	10a4      	asrs	r4, r4, #2
   8474a:	d01c      	beq.n	84786 <__pow5mult+0x4e>
   8474c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   8474e:	b396      	cbz	r6, 847b6 <__pow5mult+0x7e>
   84750:	07e3      	lsls	r3, r4, #31
   84752:	f04f 0800 	mov.w	r8, #0
   84756:	d406      	bmi.n	84766 <__pow5mult+0x2e>
   84758:	1064      	asrs	r4, r4, #1
   8475a:	d014      	beq.n	84786 <__pow5mult+0x4e>
   8475c:	6830      	ldr	r0, [r6, #0]
   8475e:	b1a8      	cbz	r0, 8478c <__pow5mult+0x54>
   84760:	4606      	mov	r6, r0
   84762:	07e3      	lsls	r3, r4, #31
   84764:	d5f8      	bpl.n	84758 <__pow5mult+0x20>
   84766:	4632      	mov	r2, r6
   84768:	4629      	mov	r1, r5
   8476a:	4638      	mov	r0, r7
   8476c:	f7ff ff52 	bl	84614 <__multiply>
   84770:	b1b5      	cbz	r5, 847a0 <__pow5mult+0x68>
   84772:	686a      	ldr	r2, [r5, #4]
   84774:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84776:	1064      	asrs	r4, r4, #1
   84778:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8477c:	6029      	str	r1, [r5, #0]
   8477e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   84782:	4605      	mov	r5, r0
   84784:	d1ea      	bne.n	8475c <__pow5mult+0x24>
   84786:	4628      	mov	r0, r5
   84788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8478c:	4632      	mov	r2, r6
   8478e:	4631      	mov	r1, r6
   84790:	4638      	mov	r0, r7
   84792:	f7ff ff3f 	bl	84614 <__multiply>
   84796:	6030      	str	r0, [r6, #0]
   84798:	f8c0 8000 	str.w	r8, [r0]
   8479c:	4606      	mov	r6, r0
   8479e:	e7e0      	b.n	84762 <__pow5mult+0x2a>
   847a0:	4605      	mov	r5, r0
   847a2:	e7d9      	b.n	84758 <__pow5mult+0x20>
   847a4:	4a0b      	ldr	r2, [pc, #44]	; (847d4 <__pow5mult+0x9c>)
   847a6:	3b01      	subs	r3, #1
   847a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   847ac:	2300      	movs	r3, #0
   847ae:	f7ff fe95 	bl	844dc <__multadd>
   847b2:	4605      	mov	r5, r0
   847b4:	e7c8      	b.n	84748 <__pow5mult+0x10>
   847b6:	2101      	movs	r1, #1
   847b8:	4638      	mov	r0, r7
   847ba:	f7ff fe5f 	bl	8447c <_Balloc>
   847be:	f240 2171 	movw	r1, #625	; 0x271
   847c2:	2201      	movs	r2, #1
   847c4:	2300      	movs	r3, #0
   847c6:	6141      	str	r1, [r0, #20]
   847c8:	6102      	str	r2, [r0, #16]
   847ca:	4606      	mov	r6, r0
   847cc:	64b8      	str	r0, [r7, #72]	; 0x48
   847ce:	6003      	str	r3, [r0, #0]
   847d0:	e7be      	b.n	84750 <__pow5mult+0x18>
   847d2:	bf00      	nop
   847d4:	00086270 	.word	0x00086270

000847d8 <__lshift>:
   847d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   847dc:	690b      	ldr	r3, [r1, #16]
   847de:	1154      	asrs	r4, r2, #5
   847e0:	eb04 0803 	add.w	r8, r4, r3
   847e4:	688b      	ldr	r3, [r1, #8]
   847e6:	f108 0501 	add.w	r5, r8, #1
   847ea:	429d      	cmp	r5, r3
   847ec:	460e      	mov	r6, r1
   847ee:	4691      	mov	r9, r2
   847f0:	4607      	mov	r7, r0
   847f2:	6849      	ldr	r1, [r1, #4]
   847f4:	dd04      	ble.n	84800 <__lshift+0x28>
   847f6:	005b      	lsls	r3, r3, #1
   847f8:	429d      	cmp	r5, r3
   847fa:	f101 0101 	add.w	r1, r1, #1
   847fe:	dcfa      	bgt.n	847f6 <__lshift+0x1e>
   84800:	4638      	mov	r0, r7
   84802:	f7ff fe3b 	bl	8447c <_Balloc>
   84806:	2c00      	cmp	r4, #0
   84808:	f100 0314 	add.w	r3, r0, #20
   8480c:	dd06      	ble.n	8481c <__lshift+0x44>
   8480e:	2100      	movs	r1, #0
   84810:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84814:	f843 1b04 	str.w	r1, [r3], #4
   84818:	429a      	cmp	r2, r3
   8481a:	d1fb      	bne.n	84814 <__lshift+0x3c>
   8481c:	6934      	ldr	r4, [r6, #16]
   8481e:	f106 0114 	add.w	r1, r6, #20
   84822:	f019 091f 	ands.w	r9, r9, #31
   84826:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   8482a:	d01d      	beq.n	84868 <__lshift+0x90>
   8482c:	2200      	movs	r2, #0
   8482e:	f1c9 0c20 	rsb	ip, r9, #32
   84832:	680c      	ldr	r4, [r1, #0]
   84834:	fa04 f409 	lsl.w	r4, r4, r9
   84838:	4314      	orrs	r4, r2
   8483a:	f843 4b04 	str.w	r4, [r3], #4
   8483e:	f851 2b04 	ldr.w	r2, [r1], #4
   84842:	458e      	cmp	lr, r1
   84844:	fa22 f20c 	lsr.w	r2, r2, ip
   84848:	d8f3      	bhi.n	84832 <__lshift+0x5a>
   8484a:	601a      	str	r2, [r3, #0]
   8484c:	b10a      	cbz	r2, 84852 <__lshift+0x7a>
   8484e:	f108 0502 	add.w	r5, r8, #2
   84852:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84854:	6872      	ldr	r2, [r6, #4]
   84856:	3d01      	subs	r5, #1
   84858:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8485c:	6105      	str	r5, [r0, #16]
   8485e:	6031      	str	r1, [r6, #0]
   84860:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84864:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84868:	3b04      	subs	r3, #4
   8486a:	f851 2b04 	ldr.w	r2, [r1], #4
   8486e:	458e      	cmp	lr, r1
   84870:	f843 2f04 	str.w	r2, [r3, #4]!
   84874:	d8f9      	bhi.n	8486a <__lshift+0x92>
   84876:	e7ec      	b.n	84852 <__lshift+0x7a>

00084878 <__mcmp>:
   84878:	b430      	push	{r4, r5}
   8487a:	690b      	ldr	r3, [r1, #16]
   8487c:	4605      	mov	r5, r0
   8487e:	6900      	ldr	r0, [r0, #16]
   84880:	1ac0      	subs	r0, r0, r3
   84882:	d10f      	bne.n	848a4 <__mcmp+0x2c>
   84884:	009b      	lsls	r3, r3, #2
   84886:	3514      	adds	r5, #20
   84888:	3114      	adds	r1, #20
   8488a:	4419      	add	r1, r3
   8488c:	442b      	add	r3, r5
   8488e:	e001      	b.n	84894 <__mcmp+0x1c>
   84890:	429d      	cmp	r5, r3
   84892:	d207      	bcs.n	848a4 <__mcmp+0x2c>
   84894:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   84898:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   8489c:	4294      	cmp	r4, r2
   8489e:	d0f7      	beq.n	84890 <__mcmp+0x18>
   848a0:	d302      	bcc.n	848a8 <__mcmp+0x30>
   848a2:	2001      	movs	r0, #1
   848a4:	bc30      	pop	{r4, r5}
   848a6:	4770      	bx	lr
   848a8:	f04f 30ff 	mov.w	r0, #4294967295
   848ac:	e7fa      	b.n	848a4 <__mcmp+0x2c>
   848ae:	bf00      	nop

000848b0 <__mdiff>:
   848b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   848b4:	690c      	ldr	r4, [r1, #16]
   848b6:	4689      	mov	r9, r1
   848b8:	6911      	ldr	r1, [r2, #16]
   848ba:	4692      	mov	sl, r2
   848bc:	1a64      	subs	r4, r4, r1
   848be:	2c00      	cmp	r4, #0
   848c0:	d117      	bne.n	848f2 <__mdiff+0x42>
   848c2:	0089      	lsls	r1, r1, #2
   848c4:	f109 0714 	add.w	r7, r9, #20
   848c8:	f102 0614 	add.w	r6, r2, #20
   848cc:	187b      	adds	r3, r7, r1
   848ce:	4431      	add	r1, r6
   848d0:	e001      	b.n	848d6 <__mdiff+0x26>
   848d2:	429f      	cmp	r7, r3
   848d4:	d265      	bcs.n	849a2 <__mdiff+0xf2>
   848d6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   848da:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   848de:	4295      	cmp	r5, r2
   848e0:	d0f7      	beq.n	848d2 <__mdiff+0x22>
   848e2:	d267      	bcs.n	849b4 <__mdiff+0x104>
   848e4:	464b      	mov	r3, r9
   848e6:	46bb      	mov	fp, r7
   848e8:	46d1      	mov	r9, sl
   848ea:	4637      	mov	r7, r6
   848ec:	469a      	mov	sl, r3
   848ee:	2401      	movs	r4, #1
   848f0:	e005      	b.n	848fe <__mdiff+0x4e>
   848f2:	db61      	blt.n	849b8 <__mdiff+0x108>
   848f4:	2400      	movs	r4, #0
   848f6:	f109 0714 	add.w	r7, r9, #20
   848fa:	f10a 0b14 	add.w	fp, sl, #20
   848fe:	f8d9 1004 	ldr.w	r1, [r9, #4]
   84902:	f7ff fdbb 	bl	8447c <_Balloc>
   84906:	465d      	mov	r5, fp
   84908:	f04f 0800 	mov.w	r8, #0
   8490c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   84910:	f8da 3010 	ldr.w	r3, [sl, #16]
   84914:	463e      	mov	r6, r7
   84916:	60c4      	str	r4, [r0, #12]
   84918:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   8491c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   84920:	f100 0414 	add.w	r4, r0, #20
   84924:	f856 9b04 	ldr.w	r9, [r6], #4
   84928:	f855 2b04 	ldr.w	r2, [r5], #4
   8492c:	fa1f f389 	uxth.w	r3, r9
   84930:	4443      	add	r3, r8
   84932:	fa1f f882 	uxth.w	r8, r2
   84936:	0c12      	lsrs	r2, r2, #16
   84938:	eba3 0308 	sub.w	r3, r3, r8
   8493c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   84940:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84944:	b29b      	uxth	r3, r3
   84946:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8494a:	45ac      	cmp	ip, r5
   8494c:	f844 3b04 	str.w	r3, [r4], #4
   84950:	ea4f 4822 	mov.w	r8, r2, asr #16
   84954:	d8e6      	bhi.n	84924 <__mdiff+0x74>
   84956:	42b7      	cmp	r7, r6
   84958:	d917      	bls.n	8498a <__mdiff+0xda>
   8495a:	46a4      	mov	ip, r4
   8495c:	4635      	mov	r5, r6
   8495e:	f855 3b04 	ldr.w	r3, [r5], #4
   84962:	b299      	uxth	r1, r3
   84964:	4441      	add	r1, r8
   84966:	140a      	asrs	r2, r1, #16
   84968:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   8496c:	b289      	uxth	r1, r1
   8496e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   84972:	42af      	cmp	r7, r5
   84974:	f84c 3b04 	str.w	r3, [ip], #4
   84978:	ea4f 4822 	mov.w	r8, r2, asr #16
   8497c:	d8ef      	bhi.n	8495e <__mdiff+0xae>
   8497e:	43f6      	mvns	r6, r6
   84980:	4437      	add	r7, r6
   84982:	f027 0703 	bic.w	r7, r7, #3
   84986:	3704      	adds	r7, #4
   84988:	443c      	add	r4, r7
   8498a:	3c04      	subs	r4, #4
   8498c:	b92b      	cbnz	r3, 8499a <__mdiff+0xea>
   8498e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   84992:	f10e 3eff 	add.w	lr, lr, #4294967295
   84996:	2b00      	cmp	r3, #0
   84998:	d0f9      	beq.n	8498e <__mdiff+0xde>
   8499a:	f8c0 e010 	str.w	lr, [r0, #16]
   8499e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   849a2:	2100      	movs	r1, #0
   849a4:	f7ff fd6a 	bl	8447c <_Balloc>
   849a8:	2201      	movs	r2, #1
   849aa:	2300      	movs	r3, #0
   849ac:	6102      	str	r2, [r0, #16]
   849ae:	6143      	str	r3, [r0, #20]
   849b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   849b4:	46b3      	mov	fp, r6
   849b6:	e7a2      	b.n	848fe <__mdiff+0x4e>
   849b8:	464b      	mov	r3, r9
   849ba:	f109 0b14 	add.w	fp, r9, #20
   849be:	f102 0714 	add.w	r7, r2, #20
   849c2:	4691      	mov	r9, r2
   849c4:	2401      	movs	r4, #1
   849c6:	469a      	mov	sl, r3
   849c8:	e799      	b.n	848fe <__mdiff+0x4e>
   849ca:	bf00      	nop

000849cc <__d2b>:
   849cc:	b5f0      	push	{r4, r5, r6, r7, lr}
   849ce:	2101      	movs	r1, #1
   849d0:	b083      	sub	sp, #12
   849d2:	461c      	mov	r4, r3
   849d4:	f3c3 550a 	ubfx	r5, r3, #20, #11
   849d8:	4616      	mov	r6, r2
   849da:	f7ff fd4f 	bl	8447c <_Balloc>
   849de:	f3c4 0413 	ubfx	r4, r4, #0, #20
   849e2:	4607      	mov	r7, r0
   849e4:	b10d      	cbz	r5, 849ea <__d2b+0x1e>
   849e6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   849ea:	9401      	str	r4, [sp, #4]
   849ec:	b306      	cbz	r6, 84a30 <__d2b+0x64>
   849ee:	a802      	add	r0, sp, #8
   849f0:	f840 6d08 	str.w	r6, [r0, #-8]!
   849f4:	f7ff fdd4 	bl	845a0 <__lo0bits>
   849f8:	2800      	cmp	r0, #0
   849fa:	d130      	bne.n	84a5e <__d2b+0x92>
   849fc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84a00:	617a      	str	r2, [r7, #20]
   84a02:	2b00      	cmp	r3, #0
   84a04:	bf0c      	ite	eq
   84a06:	2101      	moveq	r1, #1
   84a08:	2102      	movne	r1, #2
   84a0a:	61bb      	str	r3, [r7, #24]
   84a0c:	6139      	str	r1, [r7, #16]
   84a0e:	b9d5      	cbnz	r5, 84a46 <__d2b+0x7a>
   84a10:	9a08      	ldr	r2, [sp, #32]
   84a12:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   84a16:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84a1a:	6010      	str	r0, [r2, #0]
   84a1c:	6918      	ldr	r0, [r3, #16]
   84a1e:	f7ff fd9f 	bl	84560 <__hi0bits>
   84a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84a24:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   84a28:	6018      	str	r0, [r3, #0]
   84a2a:	4638      	mov	r0, r7
   84a2c:	b003      	add	sp, #12
   84a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84a30:	a801      	add	r0, sp, #4
   84a32:	f7ff fdb5 	bl	845a0 <__lo0bits>
   84a36:	2201      	movs	r2, #1
   84a38:	9b01      	ldr	r3, [sp, #4]
   84a3a:	4611      	mov	r1, r2
   84a3c:	3020      	adds	r0, #32
   84a3e:	613a      	str	r2, [r7, #16]
   84a40:	617b      	str	r3, [r7, #20]
   84a42:	2d00      	cmp	r5, #0
   84a44:	d0e4      	beq.n	84a10 <__d2b+0x44>
   84a46:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   84a4a:	9a08      	ldr	r2, [sp, #32]
   84a4c:	4403      	add	r3, r0
   84a4e:	6013      	str	r3, [r2, #0]
   84a50:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84a52:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84a56:	6018      	str	r0, [r3, #0]
   84a58:	4638      	mov	r0, r7
   84a5a:	b003      	add	sp, #12
   84a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84a5e:	9b01      	ldr	r3, [sp, #4]
   84a60:	f1c0 0220 	rsb	r2, r0, #32
   84a64:	9900      	ldr	r1, [sp, #0]
   84a66:	fa03 f202 	lsl.w	r2, r3, r2
   84a6a:	430a      	orrs	r2, r1
   84a6c:	40c3      	lsrs	r3, r0
   84a6e:	9301      	str	r3, [sp, #4]
   84a70:	617a      	str	r2, [r7, #20]
   84a72:	e7c6      	b.n	84a02 <__d2b+0x36>

00084a74 <_sbrk_r>:
   84a74:	b538      	push	{r3, r4, r5, lr}
   84a76:	2300      	movs	r3, #0
   84a78:	4c06      	ldr	r4, [pc, #24]	; (84a94 <_sbrk_r+0x20>)
   84a7a:	4605      	mov	r5, r0
   84a7c:	4608      	mov	r0, r1
   84a7e:	6023      	str	r3, [r4, #0]
   84a80:	f7fc fdfa 	bl	81678 <_sbrk>
   84a84:	1c43      	adds	r3, r0, #1
   84a86:	d000      	beq.n	84a8a <_sbrk_r+0x16>
   84a88:	bd38      	pop	{r3, r4, r5, pc}
   84a8a:	6823      	ldr	r3, [r4, #0]
   84a8c:	2b00      	cmp	r3, #0
   84a8e:	d0fb      	beq.n	84a88 <_sbrk_r+0x14>
   84a90:	602b      	str	r3, [r5, #0]
   84a92:	bd38      	pop	{r3, r4, r5, pc}
   84a94:	20001564 	.word	0x20001564

00084a98 <__ssprint_r>:
   84a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84a9c:	6893      	ldr	r3, [r2, #8]
   84a9e:	b083      	sub	sp, #12
   84aa0:	4690      	mov	r8, r2
   84aa2:	2b00      	cmp	r3, #0
   84aa4:	d070      	beq.n	84b88 <__ssprint_r+0xf0>
   84aa6:	4682      	mov	sl, r0
   84aa8:	460c      	mov	r4, r1
   84aaa:	6817      	ldr	r7, [r2, #0]
   84aac:	688d      	ldr	r5, [r1, #8]
   84aae:	6808      	ldr	r0, [r1, #0]
   84ab0:	e042      	b.n	84b38 <__ssprint_r+0xa0>
   84ab2:	89a3      	ldrh	r3, [r4, #12]
   84ab4:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84ab8:	d02e      	beq.n	84b18 <__ssprint_r+0x80>
   84aba:	6965      	ldr	r5, [r4, #20]
   84abc:	6921      	ldr	r1, [r4, #16]
   84abe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   84ac2:	eba0 0b01 	sub.w	fp, r0, r1
   84ac6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   84aca:	f10b 0001 	add.w	r0, fp, #1
   84ace:	106d      	asrs	r5, r5, #1
   84ad0:	4430      	add	r0, r6
   84ad2:	42a8      	cmp	r0, r5
   84ad4:	462a      	mov	r2, r5
   84ad6:	bf84      	itt	hi
   84ad8:	4605      	movhi	r5, r0
   84ada:	462a      	movhi	r2, r5
   84adc:	055b      	lsls	r3, r3, #21
   84ade:	d538      	bpl.n	84b52 <__ssprint_r+0xba>
   84ae0:	4611      	mov	r1, r2
   84ae2:	4650      	mov	r0, sl
   84ae4:	f7ff f952 	bl	83d8c <_malloc_r>
   84ae8:	2800      	cmp	r0, #0
   84aea:	d03c      	beq.n	84b66 <__ssprint_r+0xce>
   84aec:	465a      	mov	r2, fp
   84aee:	6921      	ldr	r1, [r4, #16]
   84af0:	9001      	str	r0, [sp, #4]
   84af2:	f7ff fc49 	bl	84388 <memcpy>
   84af6:	89a2      	ldrh	r2, [r4, #12]
   84af8:	9b01      	ldr	r3, [sp, #4]
   84afa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84afe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84b02:	81a2      	strh	r2, [r4, #12]
   84b04:	eba5 020b 	sub.w	r2, r5, fp
   84b08:	eb03 000b 	add.w	r0, r3, fp
   84b0c:	6165      	str	r5, [r4, #20]
   84b0e:	46b3      	mov	fp, r6
   84b10:	4635      	mov	r5, r6
   84b12:	6123      	str	r3, [r4, #16]
   84b14:	6020      	str	r0, [r4, #0]
   84b16:	60a2      	str	r2, [r4, #8]
   84b18:	465a      	mov	r2, fp
   84b1a:	4649      	mov	r1, r9
   84b1c:	f000 fa02 	bl	84f24 <memmove>
   84b20:	f8d8 3008 	ldr.w	r3, [r8, #8]
   84b24:	68a2      	ldr	r2, [r4, #8]
   84b26:	6820      	ldr	r0, [r4, #0]
   84b28:	1b55      	subs	r5, r2, r5
   84b2a:	4458      	add	r0, fp
   84b2c:	1b9e      	subs	r6, r3, r6
   84b2e:	60a5      	str	r5, [r4, #8]
   84b30:	6020      	str	r0, [r4, #0]
   84b32:	f8c8 6008 	str.w	r6, [r8, #8]
   84b36:	b33e      	cbz	r6, 84b88 <__ssprint_r+0xf0>
   84b38:	687e      	ldr	r6, [r7, #4]
   84b3a:	463b      	mov	r3, r7
   84b3c:	3708      	adds	r7, #8
   84b3e:	2e00      	cmp	r6, #0
   84b40:	d0fa      	beq.n	84b38 <__ssprint_r+0xa0>
   84b42:	42ae      	cmp	r6, r5
   84b44:	f8d3 9000 	ldr.w	r9, [r3]
   84b48:	46ab      	mov	fp, r5
   84b4a:	d2b2      	bcs.n	84ab2 <__ssprint_r+0x1a>
   84b4c:	4635      	mov	r5, r6
   84b4e:	46b3      	mov	fp, r6
   84b50:	e7e2      	b.n	84b18 <__ssprint_r+0x80>
   84b52:	4650      	mov	r0, sl
   84b54:	f000 fa4a 	bl	84fec <_realloc_r>
   84b58:	4603      	mov	r3, r0
   84b5a:	2800      	cmp	r0, #0
   84b5c:	d1d2      	bne.n	84b04 <__ssprint_r+0x6c>
   84b5e:	6921      	ldr	r1, [r4, #16]
   84b60:	4650      	mov	r0, sl
   84b62:	f000 f8f9 	bl	84d58 <_free_r>
   84b66:	230c      	movs	r3, #12
   84b68:	2200      	movs	r2, #0
   84b6a:	f04f 30ff 	mov.w	r0, #4294967295
   84b6e:	f8ca 3000 	str.w	r3, [sl]
   84b72:	89a3      	ldrh	r3, [r4, #12]
   84b74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84b78:	81a3      	strh	r3, [r4, #12]
   84b7a:	f8c8 2008 	str.w	r2, [r8, #8]
   84b7e:	f8c8 2004 	str.w	r2, [r8, #4]
   84b82:	b003      	add	sp, #12
   84b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84b88:	2000      	movs	r0, #0
   84b8a:	f8c8 0004 	str.w	r0, [r8, #4]
   84b8e:	b003      	add	sp, #12
   84b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084b94 <__ascii_wctomb>:
   84b94:	b119      	cbz	r1, 84b9e <__ascii_wctomb+0xa>
   84b96:	2aff      	cmp	r2, #255	; 0xff
   84b98:	d803      	bhi.n	84ba2 <__ascii_wctomb+0xe>
   84b9a:	700a      	strb	r2, [r1, #0]
   84b9c:	2101      	movs	r1, #1
   84b9e:	4608      	mov	r0, r1
   84ba0:	4770      	bx	lr
   84ba2:	238a      	movs	r3, #138	; 0x8a
   84ba4:	f04f 31ff 	mov.w	r1, #4294967295
   84ba8:	6003      	str	r3, [r0, #0]
   84baa:	e7f8      	b.n	84b9e <__ascii_wctomb+0xa>

00084bac <__register_exitproc>:
   84bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   84bb0:	4c27      	ldr	r4, [pc, #156]	; (84c50 <__register_exitproc+0xa4>)
   84bb2:	4607      	mov	r7, r0
   84bb4:	6826      	ldr	r6, [r4, #0]
   84bb6:	4688      	mov	r8, r1
   84bb8:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   84bbc:	4692      	mov	sl, r2
   84bbe:	4699      	mov	r9, r3
   84bc0:	2c00      	cmp	r4, #0
   84bc2:	d03c      	beq.n	84c3e <__register_exitproc+0x92>
   84bc4:	6865      	ldr	r5, [r4, #4]
   84bc6:	2d1f      	cmp	r5, #31
   84bc8:	dc1a      	bgt.n	84c00 <__register_exitproc+0x54>
   84bca:	f105 0e01 	add.w	lr, r5, #1
   84bce:	b17f      	cbz	r7, 84bf0 <__register_exitproc+0x44>
   84bd0:	2001      	movs	r0, #1
   84bd2:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   84bd6:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   84bda:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
   84bde:	fa00 f205 	lsl.w	r2, r0, r5
   84be2:	4311      	orrs	r1, r2
   84be4:	2f02      	cmp	r7, #2
   84be6:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
   84bea:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   84bee:	d020      	beq.n	84c32 <__register_exitproc+0x86>
   84bf0:	3502      	adds	r5, #2
   84bf2:	f8c4 e004 	str.w	lr, [r4, #4]
   84bf6:	2000      	movs	r0, #0
   84bf8:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
   84bfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84c00:	4b14      	ldr	r3, [pc, #80]	; (84c54 <__register_exitproc+0xa8>)
   84c02:	b30b      	cbz	r3, 84c48 <__register_exitproc+0x9c>
   84c04:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84c08:	f3af 8000 	nop.w
   84c0c:	4604      	mov	r4, r0
   84c0e:	b1d8      	cbz	r0, 84c48 <__register_exitproc+0x9c>
   84c10:	2000      	movs	r0, #0
   84c12:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
   84c16:	f04f 0e01 	mov.w	lr, #1
   84c1a:	6060      	str	r0, [r4, #4]
   84c1c:	6023      	str	r3, [r4, #0]
   84c1e:	4605      	mov	r5, r0
   84c20:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84c24:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84c28:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84c2c:	2f00      	cmp	r7, #0
   84c2e:	d0df      	beq.n	84bf0 <__register_exitproc+0x44>
   84c30:	e7ce      	b.n	84bd0 <__register_exitproc+0x24>
   84c32:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84c36:	431a      	orrs	r2, r3
   84c38:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   84c3c:	e7d8      	b.n	84bf0 <__register_exitproc+0x44>
   84c3e:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84c42:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84c46:	e7bd      	b.n	84bc4 <__register_exitproc+0x18>
   84c48:	f04f 30ff 	mov.w	r0, #4294967295
   84c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84c50:	000860fc 	.word	0x000860fc
   84c54:	00000000 	.word	0x00000000

00084c58 <_calloc_r>:
   84c58:	b510      	push	{r4, lr}
   84c5a:	fb02 f101 	mul.w	r1, r2, r1
   84c5e:	f7ff f895 	bl	83d8c <_malloc_r>
   84c62:	4604      	mov	r4, r0
   84c64:	b1d8      	cbz	r0, 84c9e <_calloc_r+0x46>
   84c66:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84c6a:	f022 0203 	bic.w	r2, r2, #3
   84c6e:	3a04      	subs	r2, #4
   84c70:	2a24      	cmp	r2, #36	; 0x24
   84c72:	d818      	bhi.n	84ca6 <_calloc_r+0x4e>
   84c74:	2a13      	cmp	r2, #19
   84c76:	d914      	bls.n	84ca2 <_calloc_r+0x4a>
   84c78:	2300      	movs	r3, #0
   84c7a:	2a1b      	cmp	r2, #27
   84c7c:	6003      	str	r3, [r0, #0]
   84c7e:	6043      	str	r3, [r0, #4]
   84c80:	d916      	bls.n	84cb0 <_calloc_r+0x58>
   84c82:	2a24      	cmp	r2, #36	; 0x24
   84c84:	6083      	str	r3, [r0, #8]
   84c86:	60c3      	str	r3, [r0, #12]
   84c88:	bf11      	iteee	ne
   84c8a:	f100 0210 	addne.w	r2, r0, #16
   84c8e:	6103      	streq	r3, [r0, #16]
   84c90:	6143      	streq	r3, [r0, #20]
   84c92:	f100 0218 	addeq.w	r2, r0, #24
   84c96:	2300      	movs	r3, #0
   84c98:	6013      	str	r3, [r2, #0]
   84c9a:	6053      	str	r3, [r2, #4]
   84c9c:	6093      	str	r3, [r2, #8]
   84c9e:	4620      	mov	r0, r4
   84ca0:	bd10      	pop	{r4, pc}
   84ca2:	4602      	mov	r2, r0
   84ca4:	e7f7      	b.n	84c96 <_calloc_r+0x3e>
   84ca6:	2100      	movs	r1, #0
   84ca8:	f7fc fd2a 	bl	81700 <memset>
   84cac:	4620      	mov	r0, r4
   84cae:	bd10      	pop	{r4, pc}
   84cb0:	f100 0208 	add.w	r2, r0, #8
   84cb4:	e7ef      	b.n	84c96 <_calloc_r+0x3e>
   84cb6:	bf00      	nop

00084cb8 <_malloc_trim_r>:
   84cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84cba:	460c      	mov	r4, r1
   84cbc:	4f23      	ldr	r7, [pc, #140]	; (84d4c <_malloc_trim_r+0x94>)
   84cbe:	4606      	mov	r6, r0
   84cc0:	f7ff fbd8 	bl	84474 <__malloc_lock>
   84cc4:	68bb      	ldr	r3, [r7, #8]
   84cc6:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84cca:	685d      	ldr	r5, [r3, #4]
   84ccc:	310f      	adds	r1, #15
   84cce:	f025 0503 	bic.w	r5, r5, #3
   84cd2:	4429      	add	r1, r5
   84cd4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84cd8:	f021 010f 	bic.w	r1, r1, #15
   84cdc:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84ce0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84ce4:	db07      	blt.n	84cf6 <_malloc_trim_r+0x3e>
   84ce6:	2100      	movs	r1, #0
   84ce8:	4630      	mov	r0, r6
   84cea:	f7ff fec3 	bl	84a74 <_sbrk_r>
   84cee:	68bb      	ldr	r3, [r7, #8]
   84cf0:	442b      	add	r3, r5
   84cf2:	4298      	cmp	r0, r3
   84cf4:	d004      	beq.n	84d00 <_malloc_trim_r+0x48>
   84cf6:	4630      	mov	r0, r6
   84cf8:	f7ff fbbe 	bl	84478 <__malloc_unlock>
   84cfc:	2000      	movs	r0, #0
   84cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84d00:	4261      	negs	r1, r4
   84d02:	4630      	mov	r0, r6
   84d04:	f7ff feb6 	bl	84a74 <_sbrk_r>
   84d08:	3001      	adds	r0, #1
   84d0a:	d00d      	beq.n	84d28 <_malloc_trim_r+0x70>
   84d0c:	4b10      	ldr	r3, [pc, #64]	; (84d50 <_malloc_trim_r+0x98>)
   84d0e:	68ba      	ldr	r2, [r7, #8]
   84d10:	6819      	ldr	r1, [r3, #0]
   84d12:	1b2d      	subs	r5, r5, r4
   84d14:	f045 0501 	orr.w	r5, r5, #1
   84d18:	4630      	mov	r0, r6
   84d1a:	1b09      	subs	r1, r1, r4
   84d1c:	6055      	str	r5, [r2, #4]
   84d1e:	6019      	str	r1, [r3, #0]
   84d20:	f7ff fbaa 	bl	84478 <__malloc_unlock>
   84d24:	2001      	movs	r0, #1
   84d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84d28:	2100      	movs	r1, #0
   84d2a:	4630      	mov	r0, r6
   84d2c:	f7ff fea2 	bl	84a74 <_sbrk_r>
   84d30:	68ba      	ldr	r2, [r7, #8]
   84d32:	1a83      	subs	r3, r0, r2
   84d34:	2b0f      	cmp	r3, #15
   84d36:	ddde      	ble.n	84cf6 <_malloc_trim_r+0x3e>
   84d38:	4c06      	ldr	r4, [pc, #24]	; (84d54 <_malloc_trim_r+0x9c>)
   84d3a:	4905      	ldr	r1, [pc, #20]	; (84d50 <_malloc_trim_r+0x98>)
   84d3c:	6824      	ldr	r4, [r4, #0]
   84d3e:	f043 0301 	orr.w	r3, r3, #1
   84d42:	1b00      	subs	r0, r0, r4
   84d44:	6053      	str	r3, [r2, #4]
   84d46:	6008      	str	r0, [r1, #0]
   84d48:	e7d5      	b.n	84cf6 <_malloc_trim_r+0x3e>
   84d4a:	bf00      	nop
   84d4c:	20000b14 	.word	0x20000b14
   84d50:	20000fbc 	.word	0x20000fbc
   84d54:	20000f1c 	.word	0x20000f1c

00084d58 <_free_r>:
   84d58:	2900      	cmp	r1, #0
   84d5a:	d044      	beq.n	84de6 <_free_r+0x8e>
   84d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84d60:	460d      	mov	r5, r1
   84d62:	4680      	mov	r8, r0
   84d64:	f7ff fb86 	bl	84474 <__malloc_lock>
   84d68:	f855 7c04 	ldr.w	r7, [r5, #-4]
   84d6c:	4969      	ldr	r1, [pc, #420]	; (84f14 <_free_r+0x1bc>)
   84d6e:	f1a5 0408 	sub.w	r4, r5, #8
   84d72:	f027 0301 	bic.w	r3, r7, #1
   84d76:	18e2      	adds	r2, r4, r3
   84d78:	688e      	ldr	r6, [r1, #8]
   84d7a:	6850      	ldr	r0, [r2, #4]
   84d7c:	42b2      	cmp	r2, r6
   84d7e:	f020 0003 	bic.w	r0, r0, #3
   84d82:	d05e      	beq.n	84e42 <_free_r+0xea>
   84d84:	07fe      	lsls	r6, r7, #31
   84d86:	6050      	str	r0, [r2, #4]
   84d88:	d40b      	bmi.n	84da2 <_free_r+0x4a>
   84d8a:	f855 7c08 	ldr.w	r7, [r5, #-8]
   84d8e:	f101 0e08 	add.w	lr, r1, #8
   84d92:	1be4      	subs	r4, r4, r7
   84d94:	68a5      	ldr	r5, [r4, #8]
   84d96:	443b      	add	r3, r7
   84d98:	4575      	cmp	r5, lr
   84d9a:	d06d      	beq.n	84e78 <_free_r+0x120>
   84d9c:	68e7      	ldr	r7, [r4, #12]
   84d9e:	60ef      	str	r7, [r5, #12]
   84da0:	60bd      	str	r5, [r7, #8]
   84da2:	1815      	adds	r5, r2, r0
   84da4:	686d      	ldr	r5, [r5, #4]
   84da6:	07ed      	lsls	r5, r5, #31
   84da8:	d53e      	bpl.n	84e28 <_free_r+0xd0>
   84daa:	f043 0201 	orr.w	r2, r3, #1
   84dae:	6062      	str	r2, [r4, #4]
   84db0:	50e3      	str	r3, [r4, r3]
   84db2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84db6:	d217      	bcs.n	84de8 <_free_r+0x90>
   84db8:	2201      	movs	r2, #1
   84dba:	08db      	lsrs	r3, r3, #3
   84dbc:	1098      	asrs	r0, r3, #2
   84dbe:	684d      	ldr	r5, [r1, #4]
   84dc0:	4413      	add	r3, r2
   84dc2:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   84dc6:	4082      	lsls	r2, r0
   84dc8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   84dcc:	432a      	orrs	r2, r5
   84dce:	3808      	subs	r0, #8
   84dd0:	60e0      	str	r0, [r4, #12]
   84dd2:	60a7      	str	r7, [r4, #8]
   84dd4:	604a      	str	r2, [r1, #4]
   84dd6:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   84dda:	60fc      	str	r4, [r7, #12]
   84ddc:	4640      	mov	r0, r8
   84dde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84de2:	f7ff bb49 	b.w	84478 <__malloc_unlock>
   84de6:	4770      	bx	lr
   84de8:	0a5a      	lsrs	r2, r3, #9
   84dea:	2a04      	cmp	r2, #4
   84dec:	d852      	bhi.n	84e94 <_free_r+0x13c>
   84dee:	099a      	lsrs	r2, r3, #6
   84df0:	f102 0739 	add.w	r7, r2, #57	; 0x39
   84df4:	00ff      	lsls	r7, r7, #3
   84df6:	f102 0538 	add.w	r5, r2, #56	; 0x38
   84dfa:	19c8      	adds	r0, r1, r7
   84dfc:	59ca      	ldr	r2, [r1, r7]
   84dfe:	3808      	subs	r0, #8
   84e00:	4290      	cmp	r0, r2
   84e02:	d04f      	beq.n	84ea4 <_free_r+0x14c>
   84e04:	6851      	ldr	r1, [r2, #4]
   84e06:	f021 0103 	bic.w	r1, r1, #3
   84e0a:	428b      	cmp	r3, r1
   84e0c:	d232      	bcs.n	84e74 <_free_r+0x11c>
   84e0e:	6892      	ldr	r2, [r2, #8]
   84e10:	4290      	cmp	r0, r2
   84e12:	d1f7      	bne.n	84e04 <_free_r+0xac>
   84e14:	68c3      	ldr	r3, [r0, #12]
   84e16:	60a0      	str	r0, [r4, #8]
   84e18:	60e3      	str	r3, [r4, #12]
   84e1a:	609c      	str	r4, [r3, #8]
   84e1c:	60c4      	str	r4, [r0, #12]
   84e1e:	4640      	mov	r0, r8
   84e20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84e24:	f7ff bb28 	b.w	84478 <__malloc_unlock>
   84e28:	6895      	ldr	r5, [r2, #8]
   84e2a:	4f3b      	ldr	r7, [pc, #236]	; (84f18 <_free_r+0x1c0>)
   84e2c:	4403      	add	r3, r0
   84e2e:	42bd      	cmp	r5, r7
   84e30:	d040      	beq.n	84eb4 <_free_r+0x15c>
   84e32:	68d0      	ldr	r0, [r2, #12]
   84e34:	f043 0201 	orr.w	r2, r3, #1
   84e38:	60e8      	str	r0, [r5, #12]
   84e3a:	6085      	str	r5, [r0, #8]
   84e3c:	6062      	str	r2, [r4, #4]
   84e3e:	50e3      	str	r3, [r4, r3]
   84e40:	e7b7      	b.n	84db2 <_free_r+0x5a>
   84e42:	07ff      	lsls	r7, r7, #31
   84e44:	4403      	add	r3, r0
   84e46:	d407      	bmi.n	84e58 <_free_r+0x100>
   84e48:	f855 5c08 	ldr.w	r5, [r5, #-8]
   84e4c:	1b64      	subs	r4, r4, r5
   84e4e:	68e2      	ldr	r2, [r4, #12]
   84e50:	68a0      	ldr	r0, [r4, #8]
   84e52:	442b      	add	r3, r5
   84e54:	60c2      	str	r2, [r0, #12]
   84e56:	6090      	str	r0, [r2, #8]
   84e58:	4a30      	ldr	r2, [pc, #192]	; (84f1c <_free_r+0x1c4>)
   84e5a:	f043 0001 	orr.w	r0, r3, #1
   84e5e:	6812      	ldr	r2, [r2, #0]
   84e60:	6060      	str	r0, [r4, #4]
   84e62:	4293      	cmp	r3, r2
   84e64:	608c      	str	r4, [r1, #8]
   84e66:	d3b9      	bcc.n	84ddc <_free_r+0x84>
   84e68:	4b2d      	ldr	r3, [pc, #180]	; (84f20 <_free_r+0x1c8>)
   84e6a:	4640      	mov	r0, r8
   84e6c:	6819      	ldr	r1, [r3, #0]
   84e6e:	f7ff ff23 	bl	84cb8 <_malloc_trim_r>
   84e72:	e7b3      	b.n	84ddc <_free_r+0x84>
   84e74:	4610      	mov	r0, r2
   84e76:	e7cd      	b.n	84e14 <_free_r+0xbc>
   84e78:	1811      	adds	r1, r2, r0
   84e7a:	6849      	ldr	r1, [r1, #4]
   84e7c:	07c9      	lsls	r1, r1, #31
   84e7e:	d444      	bmi.n	84f0a <_free_r+0x1b2>
   84e80:	6891      	ldr	r1, [r2, #8]
   84e82:	4403      	add	r3, r0
   84e84:	68d2      	ldr	r2, [r2, #12]
   84e86:	f043 0001 	orr.w	r0, r3, #1
   84e8a:	60ca      	str	r2, [r1, #12]
   84e8c:	6091      	str	r1, [r2, #8]
   84e8e:	6060      	str	r0, [r4, #4]
   84e90:	50e3      	str	r3, [r4, r3]
   84e92:	e7a3      	b.n	84ddc <_free_r+0x84>
   84e94:	2a14      	cmp	r2, #20
   84e96:	d816      	bhi.n	84ec6 <_free_r+0x16e>
   84e98:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   84e9c:	00ff      	lsls	r7, r7, #3
   84e9e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   84ea2:	e7aa      	b.n	84dfa <_free_r+0xa2>
   84ea4:	2301      	movs	r3, #1
   84ea6:	10aa      	asrs	r2, r5, #2
   84ea8:	684d      	ldr	r5, [r1, #4]
   84eaa:	4093      	lsls	r3, r2
   84eac:	432b      	orrs	r3, r5
   84eae:	604b      	str	r3, [r1, #4]
   84eb0:	4603      	mov	r3, r0
   84eb2:	e7b0      	b.n	84e16 <_free_r+0xbe>
   84eb4:	f043 0201 	orr.w	r2, r3, #1
   84eb8:	614c      	str	r4, [r1, #20]
   84eba:	610c      	str	r4, [r1, #16]
   84ebc:	60e5      	str	r5, [r4, #12]
   84ebe:	60a5      	str	r5, [r4, #8]
   84ec0:	6062      	str	r2, [r4, #4]
   84ec2:	50e3      	str	r3, [r4, r3]
   84ec4:	e78a      	b.n	84ddc <_free_r+0x84>
   84ec6:	2a54      	cmp	r2, #84	; 0x54
   84ec8:	d806      	bhi.n	84ed8 <_free_r+0x180>
   84eca:	0b1a      	lsrs	r2, r3, #12
   84ecc:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   84ed0:	00ff      	lsls	r7, r7, #3
   84ed2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   84ed6:	e790      	b.n	84dfa <_free_r+0xa2>
   84ed8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84edc:	d806      	bhi.n	84eec <_free_r+0x194>
   84ede:	0bda      	lsrs	r2, r3, #15
   84ee0:	f102 0778 	add.w	r7, r2, #120	; 0x78
   84ee4:	00ff      	lsls	r7, r7, #3
   84ee6:	f102 0577 	add.w	r5, r2, #119	; 0x77
   84eea:	e786      	b.n	84dfa <_free_r+0xa2>
   84eec:	f240 5054 	movw	r0, #1364	; 0x554
   84ef0:	4282      	cmp	r2, r0
   84ef2:	d806      	bhi.n	84f02 <_free_r+0x1aa>
   84ef4:	0c9a      	lsrs	r2, r3, #18
   84ef6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   84efa:	00ff      	lsls	r7, r7, #3
   84efc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   84f00:	e77b      	b.n	84dfa <_free_r+0xa2>
   84f02:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   84f06:	257e      	movs	r5, #126	; 0x7e
   84f08:	e777      	b.n	84dfa <_free_r+0xa2>
   84f0a:	f043 0101 	orr.w	r1, r3, #1
   84f0e:	6061      	str	r1, [r4, #4]
   84f10:	6013      	str	r3, [r2, #0]
   84f12:	e763      	b.n	84ddc <_free_r+0x84>
   84f14:	20000b14 	.word	0x20000b14
   84f18:	20000b1c 	.word	0x20000b1c
   84f1c:	20000f20 	.word	0x20000f20
   84f20:	20000fec 	.word	0x20000fec

00084f24 <memmove>:
   84f24:	4288      	cmp	r0, r1
   84f26:	b5f0      	push	{r4, r5, r6, r7, lr}
   84f28:	d90d      	bls.n	84f46 <memmove+0x22>
   84f2a:	188b      	adds	r3, r1, r2
   84f2c:	4298      	cmp	r0, r3
   84f2e:	d20a      	bcs.n	84f46 <memmove+0x22>
   84f30:	1884      	adds	r4, r0, r2
   84f32:	2a00      	cmp	r2, #0
   84f34:	d051      	beq.n	84fda <memmove+0xb6>
   84f36:	4622      	mov	r2, r4
   84f38:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   84f3c:	4299      	cmp	r1, r3
   84f3e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   84f42:	d1f9      	bne.n	84f38 <memmove+0x14>
   84f44:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84f46:	2a0f      	cmp	r2, #15
   84f48:	d948      	bls.n	84fdc <memmove+0xb8>
   84f4a:	ea41 0300 	orr.w	r3, r1, r0
   84f4e:	079b      	lsls	r3, r3, #30
   84f50:	d146      	bne.n	84fe0 <memmove+0xbc>
   84f52:	4615      	mov	r5, r2
   84f54:	f100 0410 	add.w	r4, r0, #16
   84f58:	f101 0310 	add.w	r3, r1, #16
   84f5c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   84f60:	3d10      	subs	r5, #16
   84f62:	f844 6c10 	str.w	r6, [r4, #-16]
   84f66:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   84f6a:	2d0f      	cmp	r5, #15
   84f6c:	f844 6c0c 	str.w	r6, [r4, #-12]
   84f70:	f853 6c08 	ldr.w	r6, [r3, #-8]
   84f74:	f104 0410 	add.w	r4, r4, #16
   84f78:	f844 6c18 	str.w	r6, [r4, #-24]
   84f7c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   84f80:	f103 0310 	add.w	r3, r3, #16
   84f84:	f844 6c14 	str.w	r6, [r4, #-20]
   84f88:	d8e8      	bhi.n	84f5c <memmove+0x38>
   84f8a:	f1a2 0310 	sub.w	r3, r2, #16
   84f8e:	f023 030f 	bic.w	r3, r3, #15
   84f92:	f002 0e0f 	and.w	lr, r2, #15
   84f96:	3310      	adds	r3, #16
   84f98:	f1be 0f03 	cmp.w	lr, #3
   84f9c:	4419      	add	r1, r3
   84f9e:	4403      	add	r3, r0
   84fa0:	d921      	bls.n	84fe6 <memmove+0xc2>
   84fa2:	460e      	mov	r6, r1
   84fa4:	4674      	mov	r4, lr
   84fa6:	1f1d      	subs	r5, r3, #4
   84fa8:	f856 7b04 	ldr.w	r7, [r6], #4
   84fac:	3c04      	subs	r4, #4
   84fae:	2c03      	cmp	r4, #3
   84fb0:	f845 7f04 	str.w	r7, [r5, #4]!
   84fb4:	d8f8      	bhi.n	84fa8 <memmove+0x84>
   84fb6:	f1ae 0404 	sub.w	r4, lr, #4
   84fba:	f024 0403 	bic.w	r4, r4, #3
   84fbe:	3404      	adds	r4, #4
   84fc0:	4421      	add	r1, r4
   84fc2:	4423      	add	r3, r4
   84fc4:	f002 0203 	and.w	r2, r2, #3
   84fc8:	b162      	cbz	r2, 84fe4 <memmove+0xc0>
   84fca:	3b01      	subs	r3, #1
   84fcc:	440a      	add	r2, r1
   84fce:	f811 4b01 	ldrb.w	r4, [r1], #1
   84fd2:	428a      	cmp	r2, r1
   84fd4:	f803 4f01 	strb.w	r4, [r3, #1]!
   84fd8:	d1f9      	bne.n	84fce <memmove+0xaa>
   84fda:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84fdc:	4603      	mov	r3, r0
   84fde:	e7f3      	b.n	84fc8 <memmove+0xa4>
   84fe0:	4603      	mov	r3, r0
   84fe2:	e7f2      	b.n	84fca <memmove+0xa6>
   84fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84fe6:	4672      	mov	r2, lr
   84fe8:	e7ee      	b.n	84fc8 <memmove+0xa4>
   84fea:	bf00      	nop

00084fec <_realloc_r>:
   84fec:	2900      	cmp	r1, #0
   84fee:	f000 8094 	beq.w	8511a <_realloc_r+0x12e>
   84ff2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84ff6:	460c      	mov	r4, r1
   84ff8:	4615      	mov	r5, r2
   84ffa:	b083      	sub	sp, #12
   84ffc:	4680      	mov	r8, r0
   84ffe:	f105 060b 	add.w	r6, r5, #11
   85002:	f7ff fa37 	bl	84474 <__malloc_lock>
   85006:	f854 ec04 	ldr.w	lr, [r4, #-4]
   8500a:	2e16      	cmp	r6, #22
   8500c:	f02e 0703 	bic.w	r7, lr, #3
   85010:	f1a4 0908 	sub.w	r9, r4, #8
   85014:	d83c      	bhi.n	85090 <_realloc_r+0xa4>
   85016:	2210      	movs	r2, #16
   85018:	4616      	mov	r6, r2
   8501a:	42b5      	cmp	r5, r6
   8501c:	d83d      	bhi.n	8509a <_realloc_r+0xae>
   8501e:	4297      	cmp	r7, r2
   85020:	da43      	bge.n	850aa <_realloc_r+0xbe>
   85022:	4bc6      	ldr	r3, [pc, #792]	; (8533c <_realloc_r+0x350>)
   85024:	eb09 0007 	add.w	r0, r9, r7
   85028:	6899      	ldr	r1, [r3, #8]
   8502a:	4288      	cmp	r0, r1
   8502c:	f000 80c3 	beq.w	851b6 <_realloc_r+0x1ca>
   85030:	6843      	ldr	r3, [r0, #4]
   85032:	f023 0101 	bic.w	r1, r3, #1
   85036:	4401      	add	r1, r0
   85038:	6849      	ldr	r1, [r1, #4]
   8503a:	07c9      	lsls	r1, r1, #31
   8503c:	d54d      	bpl.n	850da <_realloc_r+0xee>
   8503e:	f01e 0f01 	tst.w	lr, #1
   85042:	f000 809b 	beq.w	8517c <_realloc_r+0x190>
   85046:	4629      	mov	r1, r5
   85048:	4640      	mov	r0, r8
   8504a:	f7fe fe9f 	bl	83d8c <_malloc_r>
   8504e:	4605      	mov	r5, r0
   85050:	2800      	cmp	r0, #0
   85052:	d03b      	beq.n	850cc <_realloc_r+0xe0>
   85054:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85058:	f1a0 0208 	sub.w	r2, r0, #8
   8505c:	f023 0301 	bic.w	r3, r3, #1
   85060:	444b      	add	r3, r9
   85062:	429a      	cmp	r2, r3
   85064:	f000 812b 	beq.w	852be <_realloc_r+0x2d2>
   85068:	1f3a      	subs	r2, r7, #4
   8506a:	2a24      	cmp	r2, #36	; 0x24
   8506c:	f200 8118 	bhi.w	852a0 <_realloc_r+0x2b4>
   85070:	2a13      	cmp	r2, #19
   85072:	f200 80eb 	bhi.w	8524c <_realloc_r+0x260>
   85076:	4603      	mov	r3, r0
   85078:	4622      	mov	r2, r4
   8507a:	6811      	ldr	r1, [r2, #0]
   8507c:	6019      	str	r1, [r3, #0]
   8507e:	6851      	ldr	r1, [r2, #4]
   85080:	6059      	str	r1, [r3, #4]
   85082:	6892      	ldr	r2, [r2, #8]
   85084:	609a      	str	r2, [r3, #8]
   85086:	4621      	mov	r1, r4
   85088:	4640      	mov	r0, r8
   8508a:	f7ff fe65 	bl	84d58 <_free_r>
   8508e:	e01d      	b.n	850cc <_realloc_r+0xe0>
   85090:	f026 0607 	bic.w	r6, r6, #7
   85094:	2e00      	cmp	r6, #0
   85096:	4632      	mov	r2, r6
   85098:	dabf      	bge.n	8501a <_realloc_r+0x2e>
   8509a:	2500      	movs	r5, #0
   8509c:	230c      	movs	r3, #12
   8509e:	4628      	mov	r0, r5
   850a0:	f8c8 3000 	str.w	r3, [r8]
   850a4:	b003      	add	sp, #12
   850a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850aa:	4625      	mov	r5, r4
   850ac:	1bbb      	subs	r3, r7, r6
   850ae:	2b0f      	cmp	r3, #15
   850b0:	f8d9 2004 	ldr.w	r2, [r9, #4]
   850b4:	d81d      	bhi.n	850f2 <_realloc_r+0x106>
   850b6:	f002 0201 	and.w	r2, r2, #1
   850ba:	433a      	orrs	r2, r7
   850bc:	eb09 0107 	add.w	r1, r9, r7
   850c0:	f8c9 2004 	str.w	r2, [r9, #4]
   850c4:	684b      	ldr	r3, [r1, #4]
   850c6:	f043 0301 	orr.w	r3, r3, #1
   850ca:	604b      	str	r3, [r1, #4]
   850cc:	4640      	mov	r0, r8
   850ce:	f7ff f9d3 	bl	84478 <__malloc_unlock>
   850d2:	4628      	mov	r0, r5
   850d4:	b003      	add	sp, #12
   850d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850da:	f023 0303 	bic.w	r3, r3, #3
   850de:	18f9      	adds	r1, r7, r3
   850e0:	4291      	cmp	r1, r2
   850e2:	db1d      	blt.n	85120 <_realloc_r+0x134>
   850e4:	68c3      	ldr	r3, [r0, #12]
   850e6:	6882      	ldr	r2, [r0, #8]
   850e8:	4625      	mov	r5, r4
   850ea:	60d3      	str	r3, [r2, #12]
   850ec:	460f      	mov	r7, r1
   850ee:	609a      	str	r2, [r3, #8]
   850f0:	e7dc      	b.n	850ac <_realloc_r+0xc0>
   850f2:	f002 0201 	and.w	r2, r2, #1
   850f6:	eb09 0106 	add.w	r1, r9, r6
   850fa:	f043 0301 	orr.w	r3, r3, #1
   850fe:	4332      	orrs	r2, r6
   85100:	f8c9 2004 	str.w	r2, [r9, #4]
   85104:	444f      	add	r7, r9
   85106:	604b      	str	r3, [r1, #4]
   85108:	687b      	ldr	r3, [r7, #4]
   8510a:	3108      	adds	r1, #8
   8510c:	f043 0301 	orr.w	r3, r3, #1
   85110:	607b      	str	r3, [r7, #4]
   85112:	4640      	mov	r0, r8
   85114:	f7ff fe20 	bl	84d58 <_free_r>
   85118:	e7d8      	b.n	850cc <_realloc_r+0xe0>
   8511a:	4611      	mov	r1, r2
   8511c:	f7fe be36 	b.w	83d8c <_malloc_r>
   85120:	f01e 0f01 	tst.w	lr, #1
   85124:	d18f      	bne.n	85046 <_realloc_r+0x5a>
   85126:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8512a:	eba9 0a01 	sub.w	sl, r9, r1
   8512e:	f8da 1004 	ldr.w	r1, [sl, #4]
   85132:	f021 0103 	bic.w	r1, r1, #3
   85136:	440b      	add	r3, r1
   85138:	443b      	add	r3, r7
   8513a:	4293      	cmp	r3, r2
   8513c:	db26      	blt.n	8518c <_realloc_r+0x1a0>
   8513e:	4655      	mov	r5, sl
   85140:	68c1      	ldr	r1, [r0, #12]
   85142:	6880      	ldr	r0, [r0, #8]
   85144:	1f3a      	subs	r2, r7, #4
   85146:	60c1      	str	r1, [r0, #12]
   85148:	6088      	str	r0, [r1, #8]
   8514a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8514e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85152:	2a24      	cmp	r2, #36	; 0x24
   85154:	60c1      	str	r1, [r0, #12]
   85156:	6088      	str	r0, [r1, #8]
   85158:	d826      	bhi.n	851a8 <_realloc_r+0x1bc>
   8515a:	2a13      	cmp	r2, #19
   8515c:	f240 8081 	bls.w	85262 <_realloc_r+0x276>
   85160:	6821      	ldr	r1, [r4, #0]
   85162:	2a1b      	cmp	r2, #27
   85164:	f8ca 1008 	str.w	r1, [sl, #8]
   85168:	6861      	ldr	r1, [r4, #4]
   8516a:	f8ca 100c 	str.w	r1, [sl, #12]
   8516e:	f200 80ad 	bhi.w	852cc <_realloc_r+0x2e0>
   85172:	f104 0008 	add.w	r0, r4, #8
   85176:	f10a 0210 	add.w	r2, sl, #16
   8517a:	e074      	b.n	85266 <_realloc_r+0x27a>
   8517c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   85180:	eba9 0a03 	sub.w	sl, r9, r3
   85184:	f8da 1004 	ldr.w	r1, [sl, #4]
   85188:	f021 0103 	bic.w	r1, r1, #3
   8518c:	187b      	adds	r3, r7, r1
   8518e:	4293      	cmp	r3, r2
   85190:	f6ff af59 	blt.w	85046 <_realloc_r+0x5a>
   85194:	4655      	mov	r5, sl
   85196:	f8da 100c 	ldr.w	r1, [sl, #12]
   8519a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8519e:	1f3a      	subs	r2, r7, #4
   851a0:	2a24      	cmp	r2, #36	; 0x24
   851a2:	60c1      	str	r1, [r0, #12]
   851a4:	6088      	str	r0, [r1, #8]
   851a6:	d9d8      	bls.n	8515a <_realloc_r+0x16e>
   851a8:	4621      	mov	r1, r4
   851aa:	4628      	mov	r0, r5
   851ac:	461f      	mov	r7, r3
   851ae:	46d1      	mov	r9, sl
   851b0:	f7ff feb8 	bl	84f24 <memmove>
   851b4:	e77a      	b.n	850ac <_realloc_r+0xc0>
   851b6:	6841      	ldr	r1, [r0, #4]
   851b8:	f106 0010 	add.w	r0, r6, #16
   851bc:	f021 0b03 	bic.w	fp, r1, #3
   851c0:	44bb      	add	fp, r7
   851c2:	4583      	cmp	fp, r0
   851c4:	da58      	bge.n	85278 <_realloc_r+0x28c>
   851c6:	f01e 0f01 	tst.w	lr, #1
   851ca:	f47f af3c 	bne.w	85046 <_realloc_r+0x5a>
   851ce:	f854 1c08 	ldr.w	r1, [r4, #-8]
   851d2:	eba9 0a01 	sub.w	sl, r9, r1
   851d6:	f8da 1004 	ldr.w	r1, [sl, #4]
   851da:	f021 0103 	bic.w	r1, r1, #3
   851de:	448b      	add	fp, r1
   851e0:	4558      	cmp	r0, fp
   851e2:	dcd3      	bgt.n	8518c <_realloc_r+0x1a0>
   851e4:	4655      	mov	r5, sl
   851e6:	f8da 100c 	ldr.w	r1, [sl, #12]
   851ea:	f855 0f08 	ldr.w	r0, [r5, #8]!
   851ee:	1f3a      	subs	r2, r7, #4
   851f0:	2a24      	cmp	r2, #36	; 0x24
   851f2:	60c1      	str	r1, [r0, #12]
   851f4:	6088      	str	r0, [r1, #8]
   851f6:	f200 808d 	bhi.w	85314 <_realloc_r+0x328>
   851fa:	2a13      	cmp	r2, #19
   851fc:	f240 8087 	bls.w	8530e <_realloc_r+0x322>
   85200:	6821      	ldr	r1, [r4, #0]
   85202:	2a1b      	cmp	r2, #27
   85204:	f8ca 1008 	str.w	r1, [sl, #8]
   85208:	6861      	ldr	r1, [r4, #4]
   8520a:	f8ca 100c 	str.w	r1, [sl, #12]
   8520e:	f200 8088 	bhi.w	85322 <_realloc_r+0x336>
   85212:	f104 0108 	add.w	r1, r4, #8
   85216:	f10a 0210 	add.w	r2, sl, #16
   8521a:	6808      	ldr	r0, [r1, #0]
   8521c:	6010      	str	r0, [r2, #0]
   8521e:	6848      	ldr	r0, [r1, #4]
   85220:	6050      	str	r0, [r2, #4]
   85222:	6889      	ldr	r1, [r1, #8]
   85224:	6091      	str	r1, [r2, #8]
   85226:	ebab 0206 	sub.w	r2, fp, r6
   8522a:	eb0a 0106 	add.w	r1, sl, r6
   8522e:	f042 0201 	orr.w	r2, r2, #1
   85232:	6099      	str	r1, [r3, #8]
   85234:	604a      	str	r2, [r1, #4]
   85236:	f8da 3004 	ldr.w	r3, [sl, #4]
   8523a:	4640      	mov	r0, r8
   8523c:	f003 0301 	and.w	r3, r3, #1
   85240:	431e      	orrs	r6, r3
   85242:	f8ca 6004 	str.w	r6, [sl, #4]
   85246:	f7ff f917 	bl	84478 <__malloc_unlock>
   8524a:	e742      	b.n	850d2 <_realloc_r+0xe6>
   8524c:	6823      	ldr	r3, [r4, #0]
   8524e:	2a1b      	cmp	r2, #27
   85250:	6003      	str	r3, [r0, #0]
   85252:	6863      	ldr	r3, [r4, #4]
   85254:	6043      	str	r3, [r0, #4]
   85256:	d827      	bhi.n	852a8 <_realloc_r+0x2bc>
   85258:	f100 0308 	add.w	r3, r0, #8
   8525c:	f104 0208 	add.w	r2, r4, #8
   85260:	e70b      	b.n	8507a <_realloc_r+0x8e>
   85262:	4620      	mov	r0, r4
   85264:	462a      	mov	r2, r5
   85266:	6801      	ldr	r1, [r0, #0]
   85268:	461f      	mov	r7, r3
   8526a:	6011      	str	r1, [r2, #0]
   8526c:	6841      	ldr	r1, [r0, #4]
   8526e:	46d1      	mov	r9, sl
   85270:	6051      	str	r1, [r2, #4]
   85272:	6883      	ldr	r3, [r0, #8]
   85274:	6093      	str	r3, [r2, #8]
   85276:	e719      	b.n	850ac <_realloc_r+0xc0>
   85278:	ebab 0b06 	sub.w	fp, fp, r6
   8527c:	eb09 0106 	add.w	r1, r9, r6
   85280:	f04b 0201 	orr.w	r2, fp, #1
   85284:	6099      	str	r1, [r3, #8]
   85286:	604a      	str	r2, [r1, #4]
   85288:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8528c:	4640      	mov	r0, r8
   8528e:	f003 0301 	and.w	r3, r3, #1
   85292:	431e      	orrs	r6, r3
   85294:	f844 6c04 	str.w	r6, [r4, #-4]
   85298:	f7ff f8ee 	bl	84478 <__malloc_unlock>
   8529c:	4625      	mov	r5, r4
   8529e:	e718      	b.n	850d2 <_realloc_r+0xe6>
   852a0:	4621      	mov	r1, r4
   852a2:	f7ff fe3f 	bl	84f24 <memmove>
   852a6:	e6ee      	b.n	85086 <_realloc_r+0x9a>
   852a8:	68a3      	ldr	r3, [r4, #8]
   852aa:	2a24      	cmp	r2, #36	; 0x24
   852ac:	6083      	str	r3, [r0, #8]
   852ae:	68e3      	ldr	r3, [r4, #12]
   852b0:	60c3      	str	r3, [r0, #12]
   852b2:	d018      	beq.n	852e6 <_realloc_r+0x2fa>
   852b4:	f100 0310 	add.w	r3, r0, #16
   852b8:	f104 0210 	add.w	r2, r4, #16
   852bc:	e6dd      	b.n	8507a <_realloc_r+0x8e>
   852be:	f850 3c04 	ldr.w	r3, [r0, #-4]
   852c2:	4625      	mov	r5, r4
   852c4:	f023 0303 	bic.w	r3, r3, #3
   852c8:	441f      	add	r7, r3
   852ca:	e6ef      	b.n	850ac <_realloc_r+0xc0>
   852cc:	68a1      	ldr	r1, [r4, #8]
   852ce:	2a24      	cmp	r2, #36	; 0x24
   852d0:	f8ca 1010 	str.w	r1, [sl, #16]
   852d4:	68e1      	ldr	r1, [r4, #12]
   852d6:	f8ca 1014 	str.w	r1, [sl, #20]
   852da:	d00d      	beq.n	852f8 <_realloc_r+0x30c>
   852dc:	f104 0010 	add.w	r0, r4, #16
   852e0:	f10a 0218 	add.w	r2, sl, #24
   852e4:	e7bf      	b.n	85266 <_realloc_r+0x27a>
   852e6:	6922      	ldr	r2, [r4, #16]
   852e8:	f100 0318 	add.w	r3, r0, #24
   852ec:	6102      	str	r2, [r0, #16]
   852ee:	6961      	ldr	r1, [r4, #20]
   852f0:	f104 0218 	add.w	r2, r4, #24
   852f4:	6141      	str	r1, [r0, #20]
   852f6:	e6c0      	b.n	8507a <_realloc_r+0x8e>
   852f8:	6922      	ldr	r2, [r4, #16]
   852fa:	f104 0018 	add.w	r0, r4, #24
   852fe:	f8ca 2018 	str.w	r2, [sl, #24]
   85302:	6961      	ldr	r1, [r4, #20]
   85304:	f10a 0220 	add.w	r2, sl, #32
   85308:	f8ca 101c 	str.w	r1, [sl, #28]
   8530c:	e7ab      	b.n	85266 <_realloc_r+0x27a>
   8530e:	4621      	mov	r1, r4
   85310:	462a      	mov	r2, r5
   85312:	e782      	b.n	8521a <_realloc_r+0x22e>
   85314:	4621      	mov	r1, r4
   85316:	4628      	mov	r0, r5
   85318:	9301      	str	r3, [sp, #4]
   8531a:	f7ff fe03 	bl	84f24 <memmove>
   8531e:	9b01      	ldr	r3, [sp, #4]
   85320:	e781      	b.n	85226 <_realloc_r+0x23a>
   85322:	68a1      	ldr	r1, [r4, #8]
   85324:	2a24      	cmp	r2, #36	; 0x24
   85326:	f8ca 1010 	str.w	r1, [sl, #16]
   8532a:	68e1      	ldr	r1, [r4, #12]
   8532c:	f8ca 1014 	str.w	r1, [sl, #20]
   85330:	d006      	beq.n	85340 <_realloc_r+0x354>
   85332:	f104 0110 	add.w	r1, r4, #16
   85336:	f10a 0218 	add.w	r2, sl, #24
   8533a:	e76e      	b.n	8521a <_realloc_r+0x22e>
   8533c:	20000b14 	.word	0x20000b14
   85340:	6922      	ldr	r2, [r4, #16]
   85342:	f104 0118 	add.w	r1, r4, #24
   85346:	f8ca 2018 	str.w	r2, [sl, #24]
   8534a:	6960      	ldr	r0, [r4, #20]
   8534c:	f10a 0220 	add.w	r2, sl, #32
   85350:	f8ca 001c 	str.w	r0, [sl, #28]
   85354:	e761      	b.n	8521a <_realloc_r+0x22e>
   85356:	bf00      	nop

00085358 <__aeabi_drsub>:
   85358:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8535c:	e002      	b.n	85364 <__adddf3>
   8535e:	bf00      	nop

00085360 <__aeabi_dsub>:
   85360:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00085364 <__adddf3>:
   85364:	b530      	push	{r4, r5, lr}
   85366:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8536a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   8536e:	ea94 0f05 	teq	r4, r5
   85372:	bf08      	it	eq
   85374:	ea90 0f02 	teqeq	r0, r2
   85378:	bf1f      	itttt	ne
   8537a:	ea54 0c00 	orrsne.w	ip, r4, r0
   8537e:	ea55 0c02 	orrsne.w	ip, r5, r2
   85382:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   85386:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8538a:	f000 80e2 	beq.w	85552 <__adddf3+0x1ee>
   8538e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   85392:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   85396:	bfb8      	it	lt
   85398:	426d      	neglt	r5, r5
   8539a:	dd0c      	ble.n	853b6 <__adddf3+0x52>
   8539c:	442c      	add	r4, r5
   8539e:	ea80 0202 	eor.w	r2, r0, r2
   853a2:	ea81 0303 	eor.w	r3, r1, r3
   853a6:	ea82 0000 	eor.w	r0, r2, r0
   853aa:	ea83 0101 	eor.w	r1, r3, r1
   853ae:	ea80 0202 	eor.w	r2, r0, r2
   853b2:	ea81 0303 	eor.w	r3, r1, r3
   853b6:	2d36      	cmp	r5, #54	; 0x36
   853b8:	bf88      	it	hi
   853ba:	bd30      	pophi	{r4, r5, pc}
   853bc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   853c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   853c4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   853c8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   853cc:	d002      	beq.n	853d4 <__adddf3+0x70>
   853ce:	4240      	negs	r0, r0
   853d0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   853d4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   853d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   853dc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   853e0:	d002      	beq.n	853e8 <__adddf3+0x84>
   853e2:	4252      	negs	r2, r2
   853e4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   853e8:	ea94 0f05 	teq	r4, r5
   853ec:	f000 80a7 	beq.w	8553e <__adddf3+0x1da>
   853f0:	f1a4 0401 	sub.w	r4, r4, #1
   853f4:	f1d5 0e20 	rsbs	lr, r5, #32
   853f8:	db0d      	blt.n	85416 <__adddf3+0xb2>
   853fa:	fa02 fc0e 	lsl.w	ip, r2, lr
   853fe:	fa22 f205 	lsr.w	r2, r2, r5
   85402:	1880      	adds	r0, r0, r2
   85404:	f141 0100 	adc.w	r1, r1, #0
   85408:	fa03 f20e 	lsl.w	r2, r3, lr
   8540c:	1880      	adds	r0, r0, r2
   8540e:	fa43 f305 	asr.w	r3, r3, r5
   85412:	4159      	adcs	r1, r3
   85414:	e00e      	b.n	85434 <__adddf3+0xd0>
   85416:	f1a5 0520 	sub.w	r5, r5, #32
   8541a:	f10e 0e20 	add.w	lr, lr, #32
   8541e:	2a01      	cmp	r2, #1
   85420:	fa03 fc0e 	lsl.w	ip, r3, lr
   85424:	bf28      	it	cs
   85426:	f04c 0c02 	orrcs.w	ip, ip, #2
   8542a:	fa43 f305 	asr.w	r3, r3, r5
   8542e:	18c0      	adds	r0, r0, r3
   85430:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   85434:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85438:	d507      	bpl.n	8544a <__adddf3+0xe6>
   8543a:	f04f 0e00 	mov.w	lr, #0
   8543e:	f1dc 0c00 	rsbs	ip, ip, #0
   85442:	eb7e 0000 	sbcs.w	r0, lr, r0
   85446:	eb6e 0101 	sbc.w	r1, lr, r1
   8544a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   8544e:	d31b      	bcc.n	85488 <__adddf3+0x124>
   85450:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   85454:	d30c      	bcc.n	85470 <__adddf3+0x10c>
   85456:	0849      	lsrs	r1, r1, #1
   85458:	ea5f 0030 	movs.w	r0, r0, rrx
   8545c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   85460:	f104 0401 	add.w	r4, r4, #1
   85464:	ea4f 5244 	mov.w	r2, r4, lsl #21
   85468:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   8546c:	f080 809a 	bcs.w	855a4 <__adddf3+0x240>
   85470:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   85474:	bf08      	it	eq
   85476:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8547a:	f150 0000 	adcs.w	r0, r0, #0
   8547e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85482:	ea41 0105 	orr.w	r1, r1, r5
   85486:	bd30      	pop	{r4, r5, pc}
   85488:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   8548c:	4140      	adcs	r0, r0
   8548e:	eb41 0101 	adc.w	r1, r1, r1
   85492:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85496:	f1a4 0401 	sub.w	r4, r4, #1
   8549a:	d1e9      	bne.n	85470 <__adddf3+0x10c>
   8549c:	f091 0f00 	teq	r1, #0
   854a0:	bf04      	itt	eq
   854a2:	4601      	moveq	r1, r0
   854a4:	2000      	moveq	r0, #0
   854a6:	fab1 f381 	clz	r3, r1
   854aa:	bf08      	it	eq
   854ac:	3320      	addeq	r3, #32
   854ae:	f1a3 030b 	sub.w	r3, r3, #11
   854b2:	f1b3 0220 	subs.w	r2, r3, #32
   854b6:	da0c      	bge.n	854d2 <__adddf3+0x16e>
   854b8:	320c      	adds	r2, #12
   854ba:	dd08      	ble.n	854ce <__adddf3+0x16a>
   854bc:	f102 0c14 	add.w	ip, r2, #20
   854c0:	f1c2 020c 	rsb	r2, r2, #12
   854c4:	fa01 f00c 	lsl.w	r0, r1, ip
   854c8:	fa21 f102 	lsr.w	r1, r1, r2
   854cc:	e00c      	b.n	854e8 <__adddf3+0x184>
   854ce:	f102 0214 	add.w	r2, r2, #20
   854d2:	bfd8      	it	le
   854d4:	f1c2 0c20 	rsble	ip, r2, #32
   854d8:	fa01 f102 	lsl.w	r1, r1, r2
   854dc:	fa20 fc0c 	lsr.w	ip, r0, ip
   854e0:	bfdc      	itt	le
   854e2:	ea41 010c 	orrle.w	r1, r1, ip
   854e6:	4090      	lslle	r0, r2
   854e8:	1ae4      	subs	r4, r4, r3
   854ea:	bfa2      	ittt	ge
   854ec:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   854f0:	4329      	orrge	r1, r5
   854f2:	bd30      	popge	{r4, r5, pc}
   854f4:	ea6f 0404 	mvn.w	r4, r4
   854f8:	3c1f      	subs	r4, #31
   854fa:	da1c      	bge.n	85536 <__adddf3+0x1d2>
   854fc:	340c      	adds	r4, #12
   854fe:	dc0e      	bgt.n	8551e <__adddf3+0x1ba>
   85500:	f104 0414 	add.w	r4, r4, #20
   85504:	f1c4 0220 	rsb	r2, r4, #32
   85508:	fa20 f004 	lsr.w	r0, r0, r4
   8550c:	fa01 f302 	lsl.w	r3, r1, r2
   85510:	ea40 0003 	orr.w	r0, r0, r3
   85514:	fa21 f304 	lsr.w	r3, r1, r4
   85518:	ea45 0103 	orr.w	r1, r5, r3
   8551c:	bd30      	pop	{r4, r5, pc}
   8551e:	f1c4 040c 	rsb	r4, r4, #12
   85522:	f1c4 0220 	rsb	r2, r4, #32
   85526:	fa20 f002 	lsr.w	r0, r0, r2
   8552a:	fa01 f304 	lsl.w	r3, r1, r4
   8552e:	ea40 0003 	orr.w	r0, r0, r3
   85532:	4629      	mov	r1, r5
   85534:	bd30      	pop	{r4, r5, pc}
   85536:	fa21 f004 	lsr.w	r0, r1, r4
   8553a:	4629      	mov	r1, r5
   8553c:	bd30      	pop	{r4, r5, pc}
   8553e:	f094 0f00 	teq	r4, #0
   85542:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   85546:	bf06      	itte	eq
   85548:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   8554c:	3401      	addeq	r4, #1
   8554e:	3d01      	subne	r5, #1
   85550:	e74e      	b.n	853f0 <__adddf3+0x8c>
   85552:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   85556:	bf18      	it	ne
   85558:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8555c:	d029      	beq.n	855b2 <__adddf3+0x24e>
   8555e:	ea94 0f05 	teq	r4, r5
   85562:	bf08      	it	eq
   85564:	ea90 0f02 	teqeq	r0, r2
   85568:	d005      	beq.n	85576 <__adddf3+0x212>
   8556a:	ea54 0c00 	orrs.w	ip, r4, r0
   8556e:	bf04      	itt	eq
   85570:	4619      	moveq	r1, r3
   85572:	4610      	moveq	r0, r2
   85574:	bd30      	pop	{r4, r5, pc}
   85576:	ea91 0f03 	teq	r1, r3
   8557a:	bf1e      	ittt	ne
   8557c:	2100      	movne	r1, #0
   8557e:	2000      	movne	r0, #0
   85580:	bd30      	popne	{r4, r5, pc}
   85582:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   85586:	d105      	bne.n	85594 <__adddf3+0x230>
   85588:	0040      	lsls	r0, r0, #1
   8558a:	4149      	adcs	r1, r1
   8558c:	bf28      	it	cs
   8558e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   85592:	bd30      	pop	{r4, r5, pc}
   85594:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   85598:	bf3c      	itt	cc
   8559a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   8559e:	bd30      	popcc	{r4, r5, pc}
   855a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   855a4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   855a8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   855ac:	f04f 0000 	mov.w	r0, #0
   855b0:	bd30      	pop	{r4, r5, pc}
   855b2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   855b6:	bf1a      	itte	ne
   855b8:	4619      	movne	r1, r3
   855ba:	4610      	movne	r0, r2
   855bc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   855c0:	bf1c      	itt	ne
   855c2:	460b      	movne	r3, r1
   855c4:	4602      	movne	r2, r0
   855c6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   855ca:	bf06      	itte	eq
   855cc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   855d0:	ea91 0f03 	teqeq	r1, r3
   855d4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   855d8:	bd30      	pop	{r4, r5, pc}
   855da:	bf00      	nop

000855dc <__aeabi_ui2d>:
   855dc:	f090 0f00 	teq	r0, #0
   855e0:	bf04      	itt	eq
   855e2:	2100      	moveq	r1, #0
   855e4:	4770      	bxeq	lr
   855e6:	b530      	push	{r4, r5, lr}
   855e8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   855ec:	f104 0432 	add.w	r4, r4, #50	; 0x32
   855f0:	f04f 0500 	mov.w	r5, #0
   855f4:	f04f 0100 	mov.w	r1, #0
   855f8:	e750      	b.n	8549c <__adddf3+0x138>
   855fa:	bf00      	nop

000855fc <__aeabi_i2d>:
   855fc:	f090 0f00 	teq	r0, #0
   85600:	bf04      	itt	eq
   85602:	2100      	moveq	r1, #0
   85604:	4770      	bxeq	lr
   85606:	b530      	push	{r4, r5, lr}
   85608:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8560c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85610:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   85614:	bf48      	it	mi
   85616:	4240      	negmi	r0, r0
   85618:	f04f 0100 	mov.w	r1, #0
   8561c:	e73e      	b.n	8549c <__adddf3+0x138>
   8561e:	bf00      	nop

00085620 <__aeabi_f2d>:
   85620:	0042      	lsls	r2, r0, #1
   85622:	ea4f 01e2 	mov.w	r1, r2, asr #3
   85626:	ea4f 0131 	mov.w	r1, r1, rrx
   8562a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8562e:	bf1f      	itttt	ne
   85630:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   85634:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85638:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   8563c:	4770      	bxne	lr
   8563e:	f092 0f00 	teq	r2, #0
   85642:	bf14      	ite	ne
   85644:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   85648:	4770      	bxeq	lr
   8564a:	b530      	push	{r4, r5, lr}
   8564c:	f44f 7460 	mov.w	r4, #896	; 0x380
   85650:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   85654:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85658:	e720      	b.n	8549c <__adddf3+0x138>
   8565a:	bf00      	nop

0008565c <__aeabi_ul2d>:
   8565c:	ea50 0201 	orrs.w	r2, r0, r1
   85660:	bf08      	it	eq
   85662:	4770      	bxeq	lr
   85664:	b530      	push	{r4, r5, lr}
   85666:	f04f 0500 	mov.w	r5, #0
   8566a:	e00a      	b.n	85682 <__aeabi_l2d+0x16>

0008566c <__aeabi_l2d>:
   8566c:	ea50 0201 	orrs.w	r2, r0, r1
   85670:	bf08      	it	eq
   85672:	4770      	bxeq	lr
   85674:	b530      	push	{r4, r5, lr}
   85676:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8567a:	d502      	bpl.n	85682 <__aeabi_l2d+0x16>
   8567c:	4240      	negs	r0, r0
   8567e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85682:	f44f 6480 	mov.w	r4, #1024	; 0x400
   85686:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8568a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   8568e:	f43f aedc 	beq.w	8544a <__adddf3+0xe6>
   85692:	f04f 0203 	mov.w	r2, #3
   85696:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8569a:	bf18      	it	ne
   8569c:	3203      	addne	r2, #3
   8569e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   856a2:	bf18      	it	ne
   856a4:	3203      	addne	r2, #3
   856a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   856aa:	f1c2 0320 	rsb	r3, r2, #32
   856ae:	fa00 fc03 	lsl.w	ip, r0, r3
   856b2:	fa20 f002 	lsr.w	r0, r0, r2
   856b6:	fa01 fe03 	lsl.w	lr, r1, r3
   856ba:	ea40 000e 	orr.w	r0, r0, lr
   856be:	fa21 f102 	lsr.w	r1, r1, r2
   856c2:	4414      	add	r4, r2
   856c4:	e6c1      	b.n	8544a <__adddf3+0xe6>
   856c6:	bf00      	nop

000856c8 <__aeabi_dmul>:
   856c8:	b570      	push	{r4, r5, r6, lr}
   856ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
   856ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   856d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   856d6:	bf1d      	ittte	ne
   856d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   856dc:	ea94 0f0c 	teqne	r4, ip
   856e0:	ea95 0f0c 	teqne	r5, ip
   856e4:	f000 f8de 	bleq	858a4 <__aeabi_dmul+0x1dc>
   856e8:	442c      	add	r4, r5
   856ea:	ea81 0603 	eor.w	r6, r1, r3
   856ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   856f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   856f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   856fa:	bf18      	it	ne
   856fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85704:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85708:	d038      	beq.n	8577c <__aeabi_dmul+0xb4>
   8570a:	fba0 ce02 	umull	ip, lr, r0, r2
   8570e:	f04f 0500 	mov.w	r5, #0
   85712:	fbe1 e502 	umlal	lr, r5, r1, r2
   85716:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8571a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8571e:	f04f 0600 	mov.w	r6, #0
   85722:	fbe1 5603 	umlal	r5, r6, r1, r3
   85726:	f09c 0f00 	teq	ip, #0
   8572a:	bf18      	it	ne
   8572c:	f04e 0e01 	orrne.w	lr, lr, #1
   85730:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85734:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85738:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8573c:	d204      	bcs.n	85748 <__aeabi_dmul+0x80>
   8573e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85742:	416d      	adcs	r5, r5
   85744:	eb46 0606 	adc.w	r6, r6, r6
   85748:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8574c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85750:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85754:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85758:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8575c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85760:	bf88      	it	hi
   85762:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85766:	d81e      	bhi.n	857a6 <__aeabi_dmul+0xde>
   85768:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   8576c:	bf08      	it	eq
   8576e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85772:	f150 0000 	adcs.w	r0, r0, #0
   85776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8577a:	bd70      	pop	{r4, r5, r6, pc}
   8577c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85780:	ea46 0101 	orr.w	r1, r6, r1
   85784:	ea40 0002 	orr.w	r0, r0, r2
   85788:	ea81 0103 	eor.w	r1, r1, r3
   8578c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85790:	bfc2      	ittt	gt
   85792:	ebd4 050c 	rsbsgt	r5, r4, ip
   85796:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8579a:	bd70      	popgt	{r4, r5, r6, pc}
   8579c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   857a0:	f04f 0e00 	mov.w	lr, #0
   857a4:	3c01      	subs	r4, #1
   857a6:	f300 80ab 	bgt.w	85900 <__aeabi_dmul+0x238>
   857aa:	f114 0f36 	cmn.w	r4, #54	; 0x36
   857ae:	bfde      	ittt	le
   857b0:	2000      	movle	r0, #0
   857b2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   857b6:	bd70      	pople	{r4, r5, r6, pc}
   857b8:	f1c4 0400 	rsb	r4, r4, #0
   857bc:	3c20      	subs	r4, #32
   857be:	da35      	bge.n	8582c <__aeabi_dmul+0x164>
   857c0:	340c      	adds	r4, #12
   857c2:	dc1b      	bgt.n	857fc <__aeabi_dmul+0x134>
   857c4:	f104 0414 	add.w	r4, r4, #20
   857c8:	f1c4 0520 	rsb	r5, r4, #32
   857cc:	fa00 f305 	lsl.w	r3, r0, r5
   857d0:	fa20 f004 	lsr.w	r0, r0, r4
   857d4:	fa01 f205 	lsl.w	r2, r1, r5
   857d8:	ea40 0002 	orr.w	r0, r0, r2
   857dc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   857e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   857e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   857e8:	fa21 f604 	lsr.w	r6, r1, r4
   857ec:	eb42 0106 	adc.w	r1, r2, r6
   857f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   857f4:	bf08      	it	eq
   857f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   857fa:	bd70      	pop	{r4, r5, r6, pc}
   857fc:	f1c4 040c 	rsb	r4, r4, #12
   85800:	f1c4 0520 	rsb	r5, r4, #32
   85804:	fa00 f304 	lsl.w	r3, r0, r4
   85808:	fa20 f005 	lsr.w	r0, r0, r5
   8580c:	fa01 f204 	lsl.w	r2, r1, r4
   85810:	ea40 0002 	orr.w	r0, r0, r2
   85814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85818:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8581c:	f141 0100 	adc.w	r1, r1, #0
   85820:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85824:	bf08      	it	eq
   85826:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8582a:	bd70      	pop	{r4, r5, r6, pc}
   8582c:	f1c4 0520 	rsb	r5, r4, #32
   85830:	fa00 f205 	lsl.w	r2, r0, r5
   85834:	ea4e 0e02 	orr.w	lr, lr, r2
   85838:	fa20 f304 	lsr.w	r3, r0, r4
   8583c:	fa01 f205 	lsl.w	r2, r1, r5
   85840:	ea43 0302 	orr.w	r3, r3, r2
   85844:	fa21 f004 	lsr.w	r0, r1, r4
   85848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8584c:	fa21 f204 	lsr.w	r2, r1, r4
   85850:	ea20 0002 	bic.w	r0, r0, r2
   85854:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85858:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8585c:	bf08      	it	eq
   8585e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85862:	bd70      	pop	{r4, r5, r6, pc}
   85864:	f094 0f00 	teq	r4, #0
   85868:	d10f      	bne.n	8588a <__aeabi_dmul+0x1c2>
   8586a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8586e:	0040      	lsls	r0, r0, #1
   85870:	eb41 0101 	adc.w	r1, r1, r1
   85874:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85878:	bf08      	it	eq
   8587a:	3c01      	subeq	r4, #1
   8587c:	d0f7      	beq.n	8586e <__aeabi_dmul+0x1a6>
   8587e:	ea41 0106 	orr.w	r1, r1, r6
   85882:	f095 0f00 	teq	r5, #0
   85886:	bf18      	it	ne
   85888:	4770      	bxne	lr
   8588a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8588e:	0052      	lsls	r2, r2, #1
   85890:	eb43 0303 	adc.w	r3, r3, r3
   85894:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85898:	bf08      	it	eq
   8589a:	3d01      	subeq	r5, #1
   8589c:	d0f7      	beq.n	8588e <__aeabi_dmul+0x1c6>
   8589e:	ea43 0306 	orr.w	r3, r3, r6
   858a2:	4770      	bx	lr
   858a4:	ea94 0f0c 	teq	r4, ip
   858a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   858ac:	bf18      	it	ne
   858ae:	ea95 0f0c 	teqne	r5, ip
   858b2:	d00c      	beq.n	858ce <__aeabi_dmul+0x206>
   858b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   858b8:	bf18      	it	ne
   858ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   858be:	d1d1      	bne.n	85864 <__aeabi_dmul+0x19c>
   858c0:	ea81 0103 	eor.w	r1, r1, r3
   858c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   858c8:	f04f 0000 	mov.w	r0, #0
   858cc:	bd70      	pop	{r4, r5, r6, pc}
   858ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   858d2:	bf06      	itte	eq
   858d4:	4610      	moveq	r0, r2
   858d6:	4619      	moveq	r1, r3
   858d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   858dc:	d019      	beq.n	85912 <__aeabi_dmul+0x24a>
   858de:	ea94 0f0c 	teq	r4, ip
   858e2:	d102      	bne.n	858ea <__aeabi_dmul+0x222>
   858e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   858e8:	d113      	bne.n	85912 <__aeabi_dmul+0x24a>
   858ea:	ea95 0f0c 	teq	r5, ip
   858ee:	d105      	bne.n	858fc <__aeabi_dmul+0x234>
   858f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   858f4:	bf1c      	itt	ne
   858f6:	4610      	movne	r0, r2
   858f8:	4619      	movne	r1, r3
   858fa:	d10a      	bne.n	85912 <__aeabi_dmul+0x24a>
   858fc:	ea81 0103 	eor.w	r1, r1, r3
   85900:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85904:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85908:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8590c:	f04f 0000 	mov.w	r0, #0
   85910:	bd70      	pop	{r4, r5, r6, pc}
   85912:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85916:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8591a:	bd70      	pop	{r4, r5, r6, pc}

0008591c <__aeabi_ddiv>:
   8591c:	b570      	push	{r4, r5, r6, lr}
   8591e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85922:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85926:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8592a:	bf1d      	ittte	ne
   8592c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85930:	ea94 0f0c 	teqne	r4, ip
   85934:	ea95 0f0c 	teqne	r5, ip
   85938:	f000 f8a7 	bleq	85a8a <__aeabi_ddiv+0x16e>
   8593c:	eba4 0405 	sub.w	r4, r4, r5
   85940:	ea81 0e03 	eor.w	lr, r1, r3
   85944:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85948:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8594c:	f000 8088 	beq.w	85a60 <__aeabi_ddiv+0x144>
   85950:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85954:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85958:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8595c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85960:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85964:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85968:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8596c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85970:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85974:	429d      	cmp	r5, r3
   85976:	bf08      	it	eq
   85978:	4296      	cmpeq	r6, r2
   8597a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8597e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   85982:	d202      	bcs.n	8598a <__aeabi_ddiv+0x6e>
   85984:	085b      	lsrs	r3, r3, #1
   85986:	ea4f 0232 	mov.w	r2, r2, rrx
   8598a:	1ab6      	subs	r6, r6, r2
   8598c:	eb65 0503 	sbc.w	r5, r5, r3
   85990:	085b      	lsrs	r3, r3, #1
   85992:	ea4f 0232 	mov.w	r2, r2, rrx
   85996:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8599a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8599e:	ebb6 0e02 	subs.w	lr, r6, r2
   859a2:	eb75 0e03 	sbcs.w	lr, r5, r3
   859a6:	bf22      	ittt	cs
   859a8:	1ab6      	subcs	r6, r6, r2
   859aa:	4675      	movcs	r5, lr
   859ac:	ea40 000c 	orrcs.w	r0, r0, ip
   859b0:	085b      	lsrs	r3, r3, #1
   859b2:	ea4f 0232 	mov.w	r2, r2, rrx
   859b6:	ebb6 0e02 	subs.w	lr, r6, r2
   859ba:	eb75 0e03 	sbcs.w	lr, r5, r3
   859be:	bf22      	ittt	cs
   859c0:	1ab6      	subcs	r6, r6, r2
   859c2:	4675      	movcs	r5, lr
   859c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   859c8:	085b      	lsrs	r3, r3, #1
   859ca:	ea4f 0232 	mov.w	r2, r2, rrx
   859ce:	ebb6 0e02 	subs.w	lr, r6, r2
   859d2:	eb75 0e03 	sbcs.w	lr, r5, r3
   859d6:	bf22      	ittt	cs
   859d8:	1ab6      	subcs	r6, r6, r2
   859da:	4675      	movcs	r5, lr
   859dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   859e0:	085b      	lsrs	r3, r3, #1
   859e2:	ea4f 0232 	mov.w	r2, r2, rrx
   859e6:	ebb6 0e02 	subs.w	lr, r6, r2
   859ea:	eb75 0e03 	sbcs.w	lr, r5, r3
   859ee:	bf22      	ittt	cs
   859f0:	1ab6      	subcs	r6, r6, r2
   859f2:	4675      	movcs	r5, lr
   859f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   859f8:	ea55 0e06 	orrs.w	lr, r5, r6
   859fc:	d018      	beq.n	85a30 <__aeabi_ddiv+0x114>
   859fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85a02:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85a06:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85a0a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85a0e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85a12:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85a16:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   85a1a:	d1c0      	bne.n	8599e <__aeabi_ddiv+0x82>
   85a1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85a20:	d10b      	bne.n	85a3a <__aeabi_ddiv+0x11e>
   85a22:	ea41 0100 	orr.w	r1, r1, r0
   85a26:	f04f 0000 	mov.w	r0, #0
   85a2a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   85a2e:	e7b6      	b.n	8599e <__aeabi_ddiv+0x82>
   85a30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85a34:	bf04      	itt	eq
   85a36:	4301      	orreq	r1, r0
   85a38:	2000      	moveq	r0, #0
   85a3a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85a3e:	bf88      	it	hi
   85a40:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85a44:	f63f aeaf 	bhi.w	857a6 <__aeabi_dmul+0xde>
   85a48:	ebb5 0c03 	subs.w	ip, r5, r3
   85a4c:	bf04      	itt	eq
   85a4e:	ebb6 0c02 	subseq.w	ip, r6, r2
   85a52:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85a56:	f150 0000 	adcs.w	r0, r0, #0
   85a5a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85a5e:	bd70      	pop	{r4, r5, r6, pc}
   85a60:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   85a64:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85a68:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85a6c:	bfc2      	ittt	gt
   85a6e:	ebd4 050c 	rsbsgt	r5, r4, ip
   85a72:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85a76:	bd70      	popgt	{r4, r5, r6, pc}
   85a78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85a7c:	f04f 0e00 	mov.w	lr, #0
   85a80:	3c01      	subs	r4, #1
   85a82:	e690      	b.n	857a6 <__aeabi_dmul+0xde>
   85a84:	ea45 0e06 	orr.w	lr, r5, r6
   85a88:	e68d      	b.n	857a6 <__aeabi_dmul+0xde>
   85a8a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85a8e:	ea94 0f0c 	teq	r4, ip
   85a92:	bf08      	it	eq
   85a94:	ea95 0f0c 	teqeq	r5, ip
   85a98:	f43f af3b 	beq.w	85912 <__aeabi_dmul+0x24a>
   85a9c:	ea94 0f0c 	teq	r4, ip
   85aa0:	d10a      	bne.n	85ab8 <__aeabi_ddiv+0x19c>
   85aa2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85aa6:	f47f af34 	bne.w	85912 <__aeabi_dmul+0x24a>
   85aaa:	ea95 0f0c 	teq	r5, ip
   85aae:	f47f af25 	bne.w	858fc <__aeabi_dmul+0x234>
   85ab2:	4610      	mov	r0, r2
   85ab4:	4619      	mov	r1, r3
   85ab6:	e72c      	b.n	85912 <__aeabi_dmul+0x24a>
   85ab8:	ea95 0f0c 	teq	r5, ip
   85abc:	d106      	bne.n	85acc <__aeabi_ddiv+0x1b0>
   85abe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85ac2:	f43f aefd 	beq.w	858c0 <__aeabi_dmul+0x1f8>
   85ac6:	4610      	mov	r0, r2
   85ac8:	4619      	mov	r1, r3
   85aca:	e722      	b.n	85912 <__aeabi_dmul+0x24a>
   85acc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85ad0:	bf18      	it	ne
   85ad2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85ad6:	f47f aec5 	bne.w	85864 <__aeabi_dmul+0x19c>
   85ada:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85ade:	f47f af0d 	bne.w	858fc <__aeabi_dmul+0x234>
   85ae2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85ae6:	f47f aeeb 	bne.w	858c0 <__aeabi_dmul+0x1f8>
   85aea:	e712      	b.n	85912 <__aeabi_dmul+0x24a>

00085aec <__gedf2>:
   85aec:	f04f 3cff 	mov.w	ip, #4294967295
   85af0:	e006      	b.n	85b00 <__cmpdf2+0x4>
   85af2:	bf00      	nop

00085af4 <__ledf2>:
   85af4:	f04f 0c01 	mov.w	ip, #1
   85af8:	e002      	b.n	85b00 <__cmpdf2+0x4>
   85afa:	bf00      	nop

00085afc <__cmpdf2>:
   85afc:	f04f 0c01 	mov.w	ip, #1
   85b00:	f84d cd04 	str.w	ip, [sp, #-4]!
   85b04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85b08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85b0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85b10:	bf18      	it	ne
   85b12:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85b16:	d01b      	beq.n	85b50 <__cmpdf2+0x54>
   85b18:	b001      	add	sp, #4
   85b1a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   85b1e:	bf0c      	ite	eq
   85b20:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85b24:	ea91 0f03 	teqne	r1, r3
   85b28:	bf02      	ittt	eq
   85b2a:	ea90 0f02 	teqeq	r0, r2
   85b2e:	2000      	moveq	r0, #0
   85b30:	4770      	bxeq	lr
   85b32:	f110 0f00 	cmn.w	r0, #0
   85b36:	ea91 0f03 	teq	r1, r3
   85b3a:	bf58      	it	pl
   85b3c:	4299      	cmppl	r1, r3
   85b3e:	bf08      	it	eq
   85b40:	4290      	cmpeq	r0, r2
   85b42:	bf2c      	ite	cs
   85b44:	17d8      	asrcs	r0, r3, #31
   85b46:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   85b4a:	f040 0001 	orr.w	r0, r0, #1
   85b4e:	4770      	bx	lr
   85b50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85b58:	d102      	bne.n	85b60 <__cmpdf2+0x64>
   85b5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85b5e:	d107      	bne.n	85b70 <__cmpdf2+0x74>
   85b60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85b64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85b68:	d1d6      	bne.n	85b18 <__cmpdf2+0x1c>
   85b6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85b6e:	d0d3      	beq.n	85b18 <__cmpdf2+0x1c>
   85b70:	f85d 0b04 	ldr.w	r0, [sp], #4
   85b74:	4770      	bx	lr
   85b76:	bf00      	nop

00085b78 <__aeabi_cdrcmple>:
   85b78:	4684      	mov	ip, r0
   85b7a:	4610      	mov	r0, r2
   85b7c:	4662      	mov	r2, ip
   85b7e:	468c      	mov	ip, r1
   85b80:	4619      	mov	r1, r3
   85b82:	4663      	mov	r3, ip
   85b84:	e000      	b.n	85b88 <__aeabi_cdcmpeq>
   85b86:	bf00      	nop

00085b88 <__aeabi_cdcmpeq>:
   85b88:	b501      	push	{r0, lr}
   85b8a:	f7ff ffb7 	bl	85afc <__cmpdf2>
   85b8e:	2800      	cmp	r0, #0
   85b90:	bf48      	it	mi
   85b92:	f110 0f00 	cmnmi.w	r0, #0
   85b96:	bd01      	pop	{r0, pc}

00085b98 <__aeabi_dcmpeq>:
   85b98:	f84d ed08 	str.w	lr, [sp, #-8]!
   85b9c:	f7ff fff4 	bl	85b88 <__aeabi_cdcmpeq>
   85ba0:	bf0c      	ite	eq
   85ba2:	2001      	moveq	r0, #1
   85ba4:	2000      	movne	r0, #0
   85ba6:	f85d fb08 	ldr.w	pc, [sp], #8
   85baa:	bf00      	nop

00085bac <__aeabi_dcmplt>:
   85bac:	f84d ed08 	str.w	lr, [sp, #-8]!
   85bb0:	f7ff ffea 	bl	85b88 <__aeabi_cdcmpeq>
   85bb4:	bf34      	ite	cc
   85bb6:	2001      	movcc	r0, #1
   85bb8:	2000      	movcs	r0, #0
   85bba:	f85d fb08 	ldr.w	pc, [sp], #8
   85bbe:	bf00      	nop

00085bc0 <__aeabi_dcmple>:
   85bc0:	f84d ed08 	str.w	lr, [sp, #-8]!
   85bc4:	f7ff ffe0 	bl	85b88 <__aeabi_cdcmpeq>
   85bc8:	bf94      	ite	ls
   85bca:	2001      	movls	r0, #1
   85bcc:	2000      	movhi	r0, #0
   85bce:	f85d fb08 	ldr.w	pc, [sp], #8
   85bd2:	bf00      	nop

00085bd4 <__aeabi_dcmpge>:
   85bd4:	f84d ed08 	str.w	lr, [sp, #-8]!
   85bd8:	f7ff ffce 	bl	85b78 <__aeabi_cdrcmple>
   85bdc:	bf94      	ite	ls
   85bde:	2001      	movls	r0, #1
   85be0:	2000      	movhi	r0, #0
   85be2:	f85d fb08 	ldr.w	pc, [sp], #8
   85be6:	bf00      	nop

00085be8 <__aeabi_dcmpgt>:
   85be8:	f84d ed08 	str.w	lr, [sp, #-8]!
   85bec:	f7ff ffc4 	bl	85b78 <__aeabi_cdrcmple>
   85bf0:	bf34      	ite	cc
   85bf2:	2001      	movcc	r0, #1
   85bf4:	2000      	movcs	r0, #0
   85bf6:	f85d fb08 	ldr.w	pc, [sp], #8
   85bfa:	bf00      	nop

00085bfc <__aeabi_dcmpun>:
   85bfc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85c00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85c04:	d102      	bne.n	85c0c <__aeabi_dcmpun+0x10>
   85c06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85c0a:	d10a      	bne.n	85c22 <__aeabi_dcmpun+0x26>
   85c0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85c10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85c14:	d102      	bne.n	85c1c <__aeabi_dcmpun+0x20>
   85c16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85c1a:	d102      	bne.n	85c22 <__aeabi_dcmpun+0x26>
   85c1c:	f04f 0000 	mov.w	r0, #0
   85c20:	4770      	bx	lr
   85c22:	f04f 0001 	mov.w	r0, #1
   85c26:	4770      	bx	lr

00085c28 <__aeabi_d2iz>:
   85c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85c2c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85c30:	d215      	bcs.n	85c5e <__aeabi_d2iz+0x36>
   85c32:	d511      	bpl.n	85c58 <__aeabi_d2iz+0x30>
   85c34:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85c38:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85c3c:	d912      	bls.n	85c64 <__aeabi_d2iz+0x3c>
   85c3e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85c42:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   85c46:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   85c4a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85c4e:	fa23 f002 	lsr.w	r0, r3, r2
   85c52:	bf18      	it	ne
   85c54:	4240      	negne	r0, r0
   85c56:	4770      	bx	lr
   85c58:	f04f 0000 	mov.w	r0, #0
   85c5c:	4770      	bx	lr
   85c5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85c62:	d105      	bne.n	85c70 <__aeabi_d2iz+0x48>
   85c64:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   85c68:	bf08      	it	eq
   85c6a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85c6e:	4770      	bx	lr
   85c70:	f04f 0000 	mov.w	r0, #0
   85c74:	4770      	bx	lr
   85c76:	bf00      	nop

00085c78 <__aeabi_uldivmod>:
   85c78:	b953      	cbnz	r3, 85c90 <__aeabi_uldivmod+0x18>
   85c7a:	b94a      	cbnz	r2, 85c90 <__aeabi_uldivmod+0x18>
   85c7c:	2900      	cmp	r1, #0
   85c7e:	bf08      	it	eq
   85c80:	2800      	cmpeq	r0, #0
   85c82:	bf1c      	itt	ne
   85c84:	f04f 31ff 	movne.w	r1, #4294967295
   85c88:	f04f 30ff 	movne.w	r0, #4294967295
   85c8c:	f000 b97a 	b.w	85f84 <__aeabi_idiv0>
   85c90:	f1ad 0c08 	sub.w	ip, sp, #8
   85c94:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   85c98:	f000 f806 	bl	85ca8 <__udivmoddi4>
   85c9c:	f8dd e004 	ldr.w	lr, [sp, #4]
   85ca0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   85ca4:	b004      	add	sp, #16
   85ca6:	4770      	bx	lr

00085ca8 <__udivmoddi4>:
   85ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   85cac:	468c      	mov	ip, r1
   85cae:	460e      	mov	r6, r1
   85cb0:	4604      	mov	r4, r0
   85cb2:	9d08      	ldr	r5, [sp, #32]
   85cb4:	2b00      	cmp	r3, #0
   85cb6:	d150      	bne.n	85d5a <__udivmoddi4+0xb2>
   85cb8:	428a      	cmp	r2, r1
   85cba:	4617      	mov	r7, r2
   85cbc:	d96c      	bls.n	85d98 <__udivmoddi4+0xf0>
   85cbe:	fab2 fe82 	clz	lr, r2
   85cc2:	f1be 0f00 	cmp.w	lr, #0
   85cc6:	d00b      	beq.n	85ce0 <__udivmoddi4+0x38>
   85cc8:	f1ce 0c20 	rsb	ip, lr, #32
   85ccc:	fa01 f60e 	lsl.w	r6, r1, lr
   85cd0:	fa20 fc0c 	lsr.w	ip, r0, ip
   85cd4:	fa02 f70e 	lsl.w	r7, r2, lr
   85cd8:	ea4c 0c06 	orr.w	ip, ip, r6
   85cdc:	fa00 f40e 	lsl.w	r4, r0, lr
   85ce0:	0c3a      	lsrs	r2, r7, #16
   85ce2:	fbbc f9f2 	udiv	r9, ip, r2
   85ce6:	b2bb      	uxth	r3, r7
   85ce8:	fb02 cc19 	mls	ip, r2, r9, ip
   85cec:	fb09 fa03 	mul.w	sl, r9, r3
   85cf0:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85cf4:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   85cf8:	45b2      	cmp	sl, r6
   85cfa:	d90a      	bls.n	85d12 <__udivmoddi4+0x6a>
   85cfc:	19f6      	adds	r6, r6, r7
   85cfe:	f109 31ff 	add.w	r1, r9, #4294967295
   85d02:	f080 8125 	bcs.w	85f50 <__udivmoddi4+0x2a8>
   85d06:	45b2      	cmp	sl, r6
   85d08:	f240 8122 	bls.w	85f50 <__udivmoddi4+0x2a8>
   85d0c:	f1a9 0902 	sub.w	r9, r9, #2
   85d10:	443e      	add	r6, r7
   85d12:	eba6 060a 	sub.w	r6, r6, sl
   85d16:	fbb6 f0f2 	udiv	r0, r6, r2
   85d1a:	fb02 6610 	mls	r6, r2, r0, r6
   85d1e:	fb00 f303 	mul.w	r3, r0, r3
   85d22:	b2a4      	uxth	r4, r4
   85d24:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   85d28:	42a3      	cmp	r3, r4
   85d2a:	d909      	bls.n	85d40 <__udivmoddi4+0x98>
   85d2c:	19e4      	adds	r4, r4, r7
   85d2e:	f100 32ff 	add.w	r2, r0, #4294967295
   85d32:	f080 810b 	bcs.w	85f4c <__udivmoddi4+0x2a4>
   85d36:	42a3      	cmp	r3, r4
   85d38:	f240 8108 	bls.w	85f4c <__udivmoddi4+0x2a4>
   85d3c:	3802      	subs	r0, #2
   85d3e:	443c      	add	r4, r7
   85d40:	2100      	movs	r1, #0
   85d42:	1ae4      	subs	r4, r4, r3
   85d44:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85d48:	2d00      	cmp	r5, #0
   85d4a:	d062      	beq.n	85e12 <__udivmoddi4+0x16a>
   85d4c:	2300      	movs	r3, #0
   85d4e:	fa24 f40e 	lsr.w	r4, r4, lr
   85d52:	602c      	str	r4, [r5, #0]
   85d54:	606b      	str	r3, [r5, #4]
   85d56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85d5a:	428b      	cmp	r3, r1
   85d5c:	d907      	bls.n	85d6e <__udivmoddi4+0xc6>
   85d5e:	2d00      	cmp	r5, #0
   85d60:	d055      	beq.n	85e0e <__udivmoddi4+0x166>
   85d62:	2100      	movs	r1, #0
   85d64:	e885 0041 	stmia.w	r5, {r0, r6}
   85d68:	4608      	mov	r0, r1
   85d6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85d6e:	fab3 f183 	clz	r1, r3
   85d72:	2900      	cmp	r1, #0
   85d74:	f040 808f 	bne.w	85e96 <__udivmoddi4+0x1ee>
   85d78:	42b3      	cmp	r3, r6
   85d7a:	d302      	bcc.n	85d82 <__udivmoddi4+0xda>
   85d7c:	4282      	cmp	r2, r0
   85d7e:	f200 80fc 	bhi.w	85f7a <__udivmoddi4+0x2d2>
   85d82:	1a84      	subs	r4, r0, r2
   85d84:	eb66 0603 	sbc.w	r6, r6, r3
   85d88:	2001      	movs	r0, #1
   85d8a:	46b4      	mov	ip, r6
   85d8c:	2d00      	cmp	r5, #0
   85d8e:	d040      	beq.n	85e12 <__udivmoddi4+0x16a>
   85d90:	e885 1010 	stmia.w	r5, {r4, ip}
   85d94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85d98:	b912      	cbnz	r2, 85da0 <__udivmoddi4+0xf8>
   85d9a:	2701      	movs	r7, #1
   85d9c:	fbb7 f7f2 	udiv	r7, r7, r2
   85da0:	fab7 fe87 	clz	lr, r7
   85da4:	f1be 0f00 	cmp.w	lr, #0
   85da8:	d135      	bne.n	85e16 <__udivmoddi4+0x16e>
   85daa:	2101      	movs	r1, #1
   85dac:	1bf6      	subs	r6, r6, r7
   85dae:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85db2:	fa1f f887 	uxth.w	r8, r7
   85db6:	fbb6 f2fc 	udiv	r2, r6, ip
   85dba:	fb0c 6612 	mls	r6, ip, r2, r6
   85dbe:	fb08 f002 	mul.w	r0, r8, r2
   85dc2:	0c23      	lsrs	r3, r4, #16
   85dc4:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   85dc8:	42b0      	cmp	r0, r6
   85dca:	d907      	bls.n	85ddc <__udivmoddi4+0x134>
   85dcc:	19f6      	adds	r6, r6, r7
   85dce:	f102 33ff 	add.w	r3, r2, #4294967295
   85dd2:	d202      	bcs.n	85dda <__udivmoddi4+0x132>
   85dd4:	42b0      	cmp	r0, r6
   85dd6:	f200 80d2 	bhi.w	85f7e <__udivmoddi4+0x2d6>
   85dda:	461a      	mov	r2, r3
   85ddc:	1a36      	subs	r6, r6, r0
   85dde:	fbb6 f0fc 	udiv	r0, r6, ip
   85de2:	fb0c 6610 	mls	r6, ip, r0, r6
   85de6:	fb08 f800 	mul.w	r8, r8, r0
   85dea:	b2a3      	uxth	r3, r4
   85dec:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   85df0:	45a0      	cmp	r8, r4
   85df2:	d907      	bls.n	85e04 <__udivmoddi4+0x15c>
   85df4:	19e4      	adds	r4, r4, r7
   85df6:	f100 33ff 	add.w	r3, r0, #4294967295
   85dfa:	d202      	bcs.n	85e02 <__udivmoddi4+0x15a>
   85dfc:	45a0      	cmp	r8, r4
   85dfe:	f200 80b9 	bhi.w	85f74 <__udivmoddi4+0x2cc>
   85e02:	4618      	mov	r0, r3
   85e04:	eba4 0408 	sub.w	r4, r4, r8
   85e08:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   85e0c:	e79c      	b.n	85d48 <__udivmoddi4+0xa0>
   85e0e:	4629      	mov	r1, r5
   85e10:	4628      	mov	r0, r5
   85e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85e16:	fa07 f70e 	lsl.w	r7, r7, lr
   85e1a:	f1ce 0320 	rsb	r3, lr, #32
   85e1e:	fa26 f203 	lsr.w	r2, r6, r3
   85e22:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85e26:	fbb2 f1fc 	udiv	r1, r2, ip
   85e2a:	fa1f f887 	uxth.w	r8, r7
   85e2e:	fb0c 2211 	mls	r2, ip, r1, r2
   85e32:	fa06 f60e 	lsl.w	r6, r6, lr
   85e36:	fa20 f303 	lsr.w	r3, r0, r3
   85e3a:	fb01 f908 	mul.w	r9, r1, r8
   85e3e:	4333      	orrs	r3, r6
   85e40:	0c1e      	lsrs	r6, r3, #16
   85e42:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   85e46:	45b1      	cmp	r9, r6
   85e48:	fa00 f40e 	lsl.w	r4, r0, lr
   85e4c:	d909      	bls.n	85e62 <__udivmoddi4+0x1ba>
   85e4e:	19f6      	adds	r6, r6, r7
   85e50:	f101 32ff 	add.w	r2, r1, #4294967295
   85e54:	f080 808c 	bcs.w	85f70 <__udivmoddi4+0x2c8>
   85e58:	45b1      	cmp	r9, r6
   85e5a:	f240 8089 	bls.w	85f70 <__udivmoddi4+0x2c8>
   85e5e:	3902      	subs	r1, #2
   85e60:	443e      	add	r6, r7
   85e62:	eba6 0609 	sub.w	r6, r6, r9
   85e66:	fbb6 f0fc 	udiv	r0, r6, ip
   85e6a:	fb0c 6210 	mls	r2, ip, r0, r6
   85e6e:	fb00 f908 	mul.w	r9, r0, r8
   85e72:	b29e      	uxth	r6, r3
   85e74:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   85e78:	45b1      	cmp	r9, r6
   85e7a:	d907      	bls.n	85e8c <__udivmoddi4+0x1e4>
   85e7c:	19f6      	adds	r6, r6, r7
   85e7e:	f100 33ff 	add.w	r3, r0, #4294967295
   85e82:	d271      	bcs.n	85f68 <__udivmoddi4+0x2c0>
   85e84:	45b1      	cmp	r9, r6
   85e86:	d96f      	bls.n	85f68 <__udivmoddi4+0x2c0>
   85e88:	3802      	subs	r0, #2
   85e8a:	443e      	add	r6, r7
   85e8c:	eba6 0609 	sub.w	r6, r6, r9
   85e90:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   85e94:	e78f      	b.n	85db6 <__udivmoddi4+0x10e>
   85e96:	f1c1 0720 	rsb	r7, r1, #32
   85e9a:	fa22 f807 	lsr.w	r8, r2, r7
   85e9e:	408b      	lsls	r3, r1
   85ea0:	ea48 0303 	orr.w	r3, r8, r3
   85ea4:	fa26 f407 	lsr.w	r4, r6, r7
   85ea8:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   85eac:	fbb4 f9fe 	udiv	r9, r4, lr
   85eb0:	fa1f fc83 	uxth.w	ip, r3
   85eb4:	fb0e 4419 	mls	r4, lr, r9, r4
   85eb8:	408e      	lsls	r6, r1
   85eba:	fa20 f807 	lsr.w	r8, r0, r7
   85ebe:	fb09 fa0c 	mul.w	sl, r9, ip
   85ec2:	ea48 0806 	orr.w	r8, r8, r6
   85ec6:	ea4f 4618 	mov.w	r6, r8, lsr #16
   85eca:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   85ece:	45a2      	cmp	sl, r4
   85ed0:	fa02 f201 	lsl.w	r2, r2, r1
   85ed4:	fa00 f601 	lsl.w	r6, r0, r1
   85ed8:	d908      	bls.n	85eec <__udivmoddi4+0x244>
   85eda:	18e4      	adds	r4, r4, r3
   85edc:	f109 30ff 	add.w	r0, r9, #4294967295
   85ee0:	d244      	bcs.n	85f6c <__udivmoddi4+0x2c4>
   85ee2:	45a2      	cmp	sl, r4
   85ee4:	d942      	bls.n	85f6c <__udivmoddi4+0x2c4>
   85ee6:	f1a9 0902 	sub.w	r9, r9, #2
   85eea:	441c      	add	r4, r3
   85eec:	eba4 040a 	sub.w	r4, r4, sl
   85ef0:	fbb4 f0fe 	udiv	r0, r4, lr
   85ef4:	fb0e 4410 	mls	r4, lr, r0, r4
   85ef8:	fb00 fc0c 	mul.w	ip, r0, ip
   85efc:	fa1f f888 	uxth.w	r8, r8
   85f00:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   85f04:	45a4      	cmp	ip, r4
   85f06:	d907      	bls.n	85f18 <__udivmoddi4+0x270>
   85f08:	18e4      	adds	r4, r4, r3
   85f0a:	f100 3eff 	add.w	lr, r0, #4294967295
   85f0e:	d229      	bcs.n	85f64 <__udivmoddi4+0x2bc>
   85f10:	45a4      	cmp	ip, r4
   85f12:	d927      	bls.n	85f64 <__udivmoddi4+0x2bc>
   85f14:	3802      	subs	r0, #2
   85f16:	441c      	add	r4, r3
   85f18:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85f1c:	fba0 8902 	umull	r8, r9, r0, r2
   85f20:	eba4 0c0c 	sub.w	ip, r4, ip
   85f24:	45cc      	cmp	ip, r9
   85f26:	46c2      	mov	sl, r8
   85f28:	46ce      	mov	lr, r9
   85f2a:	d315      	bcc.n	85f58 <__udivmoddi4+0x2b0>
   85f2c:	d012      	beq.n	85f54 <__udivmoddi4+0x2ac>
   85f2e:	b155      	cbz	r5, 85f46 <__udivmoddi4+0x29e>
   85f30:	ebb6 030a 	subs.w	r3, r6, sl
   85f34:	eb6c 060e 	sbc.w	r6, ip, lr
   85f38:	fa06 f707 	lsl.w	r7, r6, r7
   85f3c:	40cb      	lsrs	r3, r1
   85f3e:	431f      	orrs	r7, r3
   85f40:	40ce      	lsrs	r6, r1
   85f42:	602f      	str	r7, [r5, #0]
   85f44:	606e      	str	r6, [r5, #4]
   85f46:	2100      	movs	r1, #0
   85f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85f4c:	4610      	mov	r0, r2
   85f4e:	e6f7      	b.n	85d40 <__udivmoddi4+0x98>
   85f50:	4689      	mov	r9, r1
   85f52:	e6de      	b.n	85d12 <__udivmoddi4+0x6a>
   85f54:	4546      	cmp	r6, r8
   85f56:	d2ea      	bcs.n	85f2e <__udivmoddi4+0x286>
   85f58:	ebb8 0a02 	subs.w	sl, r8, r2
   85f5c:	eb69 0e03 	sbc.w	lr, r9, r3
   85f60:	3801      	subs	r0, #1
   85f62:	e7e4      	b.n	85f2e <__udivmoddi4+0x286>
   85f64:	4670      	mov	r0, lr
   85f66:	e7d7      	b.n	85f18 <__udivmoddi4+0x270>
   85f68:	4618      	mov	r0, r3
   85f6a:	e78f      	b.n	85e8c <__udivmoddi4+0x1e4>
   85f6c:	4681      	mov	r9, r0
   85f6e:	e7bd      	b.n	85eec <__udivmoddi4+0x244>
   85f70:	4611      	mov	r1, r2
   85f72:	e776      	b.n	85e62 <__udivmoddi4+0x1ba>
   85f74:	3802      	subs	r0, #2
   85f76:	443c      	add	r4, r7
   85f78:	e744      	b.n	85e04 <__udivmoddi4+0x15c>
   85f7a:	4608      	mov	r0, r1
   85f7c:	e706      	b.n	85d8c <__udivmoddi4+0xe4>
   85f7e:	3a02      	subs	r2, #2
   85f80:	443e      	add	r6, r7
   85f82:	e72b      	b.n	85ddc <__udivmoddi4+0x134>

00085f84 <__aeabi_idiv0>:
   85f84:	4770      	bx	lr
   85f86:	bf00      	nop

00085f88 <line2addr>:
   85f88:	4000 5414 0a0d 003e 0a0d 3e3e 003e 0000     .@.T..>...>>>...
   85f98:	0d20 000a 2e25 7333 2520 3230 2064 2e25      ...%.3s %02d %.
   85fa8:	7333 2520 3230 0064 3025 6432 253a 3230     3s %02d.%02d:%02
   85fb8:	3a64 3025 6432 0020                         d:%02d .

00085fc0 <flashSequ>:
   85fc0:	0032 0000 01f4 0000 0032 0000 04b0 0000     2.......2.......
   85fd0:	0000 0000 6874 0000 646e 0000 6472 0000     ....th..nd..rd..
   85fe0:	614a 756e 7261 0079 6546 7262 6175 7972     January.February
   85ff0:	0000 0000 614d 6372 0068 0000 7041 6972     ....March...Apri
   86000:	006c 0000 614d 0079 754a 656e 0000 0000     l...May.June....
   86010:	754a 796c 0000 0000 7541 7567 7473 0000     July....August..
   86020:	6553 7470 6d65 6562 0072 0000 634f 6f74     September...Octo
   86030:	6562 0072 6f4e 6576 626d 7265 0000 0000     ber.November....
   86040:	6544 6563 626d 7265 0000 0000 7553 646e     December....Sund
   86050:	7961 0000 6f4d 646e 7961 0000 7554 7365     ay..Monday..Tues
   86060:	6164 0079 6557 6e64 7365 6164 0079 0000     day.Wednesday...
   86070:	6854 7275 6473 7961 0000 0000 7246 6469     Thursday....Frid
   86080:	7961 0000 6153 7574 6472 7961 0000 0000     ay..Saturday....

00086090 <uart_opt>:
   86090:	d800 05b8 c200 0001 0800 0000 5041 4c50     ............APPL
   860a0:	5f49 454e 0d57 000a 6548 6c6c 206f 6f57     I_NEW...Hello Wo
   860b0:	6c72 2064 0030 0000 6548 6c6c 206f 6f57     rld 0...Hello Wo
   860c0:	6c72 2064 0031 0000 6548 6c6c 206f 6f57     rld 1...Hello Wo
   860d0:	6c72 2064 0032 0000 6548 6c6c 206f 6f57     rld 2...Hello Wo
   860e0:	6c72 2064 0033 0000 434c 2044 6548 6c6c     rld 3...LCD Hell
   860f0:	206f 6f57 6c72 2164 0a0d 0000               o World!....

000860fc <_global_impure_ptr>:
   860fc:	0580 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
   8610c:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
   8611c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
   8612c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
   8613c:	296c 0000                                   l)..

00086140 <blanks.7208>:
   86140:	2020 2020 2020 2020 2020 2020 2020 2020                     

00086150 <zeroes.7209>:
   86150:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
   86160:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
   86170:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

00086180 <__mprec_bigtens>:
   86180:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
   86190:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
   861a0:	bf3c 7f73 4fdd 7515                         <.s..O.u

000861a8 <__mprec_tens>:
   861a8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
   861b8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
   861c8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
   861d8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
   861e8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
   861f8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
   86208:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
   86218:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
   86228:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
   86238:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
   86248:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
   86258:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
   86268:	9db4 79d9 7843 44ea                         ...yCx.D

00086270 <p05.6040>:
   86270:	0005 0000 0019 0000 007d 0000               ........}...

0008627c <_ctype_>:
   8627c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
   8628c:	2020 2020 2020 2020 2020 2020 2020 2020                     
   8629c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
   862ac:	0410 0404 0404 0404 0404 1004 1010 1010     ................
   862bc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
   862cc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
   862dc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
   862ec:	0202 0202 0202 0202 0202 0202 1010 1010     ................
   862fc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00086380 <_init>:
   86380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86382:	bf00      	nop
   86384:	bcf8      	pop	{r3, r4, r5, r6, r7}
   86386:	bc08      	pop	{r3}
   86388:	469e      	mov	lr, r3
   8638a:	4770      	bx	lr

0008638c <__init_array_start>:
   8638c:	00082db1 	.word	0x00082db1

00086390 <__frame_dummy_init_array_entry>:
   86390:	000800e1                                ....

00086394 <_fini>:
   86394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86396:	bf00      	nop
   86398:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8639a:	bc08      	pop	{r3}
   8639c:	469e      	mov	lr, r3
   8639e:	4770      	bx	lr

000863a0 <__fini_array_start>:
   863a0:	000800bd 	.word	0x000800bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2000000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20000010:	4a21      	ldr	r2, [pc, #132]	; (20000098 <SystemInit+0x8c>)
20000012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20000014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20000018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2000001a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
2000001e:	f503 2360 	add.w	r3, r3, #917504	; 0xe0000
20000022:	6a1b      	ldr	r3, [r3, #32]
20000024:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000028:	d107      	bne.n	2000003a <SystemInit+0x2e>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
2000002a:	4a1c      	ldr	r2, [pc, #112]	; (2000009c <SystemInit+0x90>)
2000002c:	4b1c      	ldr	r3, [pc, #112]	; (200000a0 <SystemInit+0x94>)
2000002e:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20000030:	461a      	mov	r2, r3
20000032:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000034:	f013 0f01 	tst.w	r3, #1
20000038:	d0fb      	beq.n	20000032 <SystemInit+0x26>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
2000003a:	4a1a      	ldr	r2, [pc, #104]	; (200000a4 <SystemInit+0x98>)
2000003c:	4b18      	ldr	r3, [pc, #96]	; (200000a0 <SystemInit+0x94>)
2000003e:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000040:	461a      	mov	r2, r3
20000042:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000044:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000048:	d0fb      	beq.n	20000042 <SystemInit+0x36>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
2000004a:	4a15      	ldr	r2, [pc, #84]	; (200000a0 <SystemInit+0x94>)
2000004c:	6b13      	ldr	r3, [r2, #48]	; 0x30
2000004e:	f023 0303 	bic.w	r3, r3, #3
20000052:	f043 0301 	orr.w	r3, r3, #1
20000056:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000005a:	f013 0f08 	tst.w	r3, #8
2000005e:	d0fb      	beq.n	20000058 <SystemInit+0x4c>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000060:	4a11      	ldr	r2, [pc, #68]	; (200000a8 <SystemInit+0x9c>)
20000062:	4b0f      	ldr	r3, [pc, #60]	; (200000a0 <SystemInit+0x94>)
20000064:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20000066:	461a      	mov	r2, r3
20000068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000006a:	f013 0f02 	tst.w	r3, #2
2000006e:	d0fb      	beq.n	20000068 <SystemInit+0x5c>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20000070:	2211      	movs	r2, #17
20000072:	4b0b      	ldr	r3, [pc, #44]	; (200000a0 <SystemInit+0x94>)
20000074:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000076:	461a      	mov	r2, r3
20000078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000007a:	f013 0f08 	tst.w	r3, #8
2000007e:	d0fb      	beq.n	20000078 <SystemInit+0x6c>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20000080:	2212      	movs	r2, #18
20000082:	4b07      	ldr	r3, [pc, #28]	; (200000a0 <SystemInit+0x94>)
20000084:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000086:	461a      	mov	r2, r3
20000088:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000008a:	f013 0f08 	tst.w	r3, #8
2000008e:	d0fb      	beq.n	20000088 <SystemInit+0x7c>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000090:	4a06      	ldr	r2, [pc, #24]	; (200000ac <SystemInit+0xa0>)
20000092:	4b07      	ldr	r3, [pc, #28]	; (200000b0 <SystemInit+0xa4>)
20000094:	601a      	str	r2, [r3, #0]
20000096:	4770      	bx	lr
20000098:	400e0800 	.word	0x400e0800
2000009c:	00370809 	.word	0x00370809
200000a0:	400e0400 	.word	0x400e0400
200000a4:	01370809 	.word	0x01370809
200000a8:	200f3f01 	.word	0x200f3f01
200000ac:	05b8d800 	.word	0x05b8d800
200000b0:	20000578 	.word	0x20000578

200000b4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000b4:	4b16      	ldr	r3, [pc, #88]	; (20000110 <system_init_flash+0x5c>)
200000b6:	4298      	cmp	r0, r3
200000b8:	d912      	bls.n	200000e0 <system_init_flash+0x2c>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000ba:	4b16      	ldr	r3, [pc, #88]	; (20000114 <system_init_flash+0x60>)
200000bc:	4298      	cmp	r0, r3
200000be:	d916      	bls.n	200000ee <system_init_flash+0x3a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000c0:	4b15      	ldr	r3, [pc, #84]	; (20000118 <system_init_flash+0x64>)
200000c2:	4298      	cmp	r0, r3
200000c4:	d91b      	bls.n	200000fe <system_init_flash+0x4a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200000c6:	4b15      	ldr	r3, [pc, #84]	; (2000011c <system_init_flash+0x68>)
200000c8:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200000ca:	bf94      	ite	ls
200000cc:	f44f 7340 	movls.w	r3, #768	; 0x300
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200000d0:	f44f 6380 	movhi.w	r3, #1024	; 0x400
200000d4:	4a12      	ldr	r2, [pc, #72]	; (20000120 <system_init_flash+0x6c>)
200000d6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200000d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000dc:	6013      	str	r3, [r2, #0]
200000de:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200000e0:	2300      	movs	r3, #0
200000e2:	4a0f      	ldr	r2, [pc, #60]	; (20000120 <system_init_flash+0x6c>)
200000e4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200000e6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000ea:	6013      	str	r3, [r2, #0]
200000ec:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200000ee:	f44f 7380 	mov.w	r3, #256	; 0x100
200000f2:	4a0b      	ldr	r2, [pc, #44]	; (20000120 <system_init_flash+0x6c>)
200000f4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200000f6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000fa:	6013      	str	r3, [r2, #0]
200000fc:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200000fe:	f44f 7300 	mov.w	r3, #512	; 0x200
20000102:	4a07      	ldr	r2, [pc, #28]	; (20000120 <system_init_flash+0x6c>)
20000104:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20000106:	f502 7200 	add.w	r2, r2, #512	; 0x200
2000010a:	6013      	str	r3, [r2, #0]
2000010c:	4770      	bx	lr
2000010e:	bf00      	nop
20000110:	016e35ff 	.word	0x016e35ff
20000114:	026259ff 	.word	0x026259ff
20000118:	044aa1ff 	.word	0x044aa1ff
2000011c:	0501bcff 	.word	0x0501bcff
20000120:	400e0800 	.word	0x400e0800

20000124 <wCRCTable>:
20000124:	00000000 0000c0c1 0000c181 00000140     ............@...
20000134:	0000c301 000003c0 00000280 0000c241     ............A...
20000144:	0000c601 000006c0 00000780 0000c741     ............A...
20000154:	00000500 0000c5c1 0000c481 00000440     ............@...
20000164:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
20000174:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
20000184:	00000a00 0000cac1 0000cb81 00000b40     ............@...
20000194:	0000c901 000009c0 00000880 0000c841     ............A...
200001a4:	0000d801 000018c0 00001980 0000d941     ............A...
200001b4:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200001c4:	00001e00 0000dec1 0000df81 00001f40     ............@...
200001d4:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200001e4:	00001400 0000d4c1 0000d581 00001540     ............@...
200001f4:	0000d701 000017c0 00001680 0000d641     ............A...
20000204:	0000d201 000012c0 00001380 0000d341     ............A...
20000214:	00001100 0000d1c1 0000d081 00001040     ............@...
20000224:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
20000234:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
20000244:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
20000254:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
20000264:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
20000274:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
20000284:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
20000294:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200002a4:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200002b4:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200002c4:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200002d4:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200002e4:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
200002f4:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
20000304:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
20000314:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
20000324:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
20000334:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
20000344:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
20000354:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
20000364:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
20000374:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
20000384:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
20000394:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200003a4:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200003b4:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200003c4:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200003d4:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200003e4:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
200003f4:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
20000404:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
20000414:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
20000424:	00005000 000090c1 00009181 00005140     .P..........@Q..
20000434:	00009301 000053c0 00005280 00009241     .....S...R..A...
20000444:	00009601 000056c0 00005780 00009741     .....V...W..A...
20000454:	00005500 000095c1 00009481 00005440     .U..........@T..
20000464:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
20000474:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
20000484:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
20000494:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200004a4:	00008801 000048c0 00004980 00008941     .....H...I..A...
200004b4:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200004c4:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200004d4:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200004e4:	00004400 000084c1 00008581 00004540     .D..........@E..
200004f4:	00008701 000047c0 00004680 00008641     .....G...F..A...
20000504:	00008201 000042c0 00004380 00008341     .....B...C..A...
20000514:	00004100 000081c1 00008081 00004040     .A..........@@..

20000524 <pErrorFunc>:
20000524:	000801dd                                ....

20000528 <daysOfWeek>:
20000528:	0008604c 00086054 0008605c 00086064     L`..T`..\`..d`..
20000538:	00086070 0008607c 00086084              p`..|`...`..

20000544 <months>:
20000544:	00085fe0 00085fe8 00085ff4 00085ffc     ._..._..._..._..
20000554:	00086004 00086008 00086010 00086018     .`...`...`...`..
20000564:	00086020 0008602c 00086034 00086040      `..,`..4`..@`..

20000574 <g_interrupt_enabled>:
20000574:	00000001                                ....

20000578 <SystemCoreClock>:
20000578:	003d0900                                ..=.

2000057c <_impure_ptr>:
2000057c:	20000580                                ... 

20000580 <impure_data>:
20000580:	00000000 2000086c 200008d4 2000093c     ....l.. ... <.. 
	...
20000628:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000638:	0005deec 0000000b 00000000 00000000     ................
	...

200009a8 <__global_locale>:
200009a8:	00000043 00000000 00000000 00000000     C...............
	...
200009c8:	00000043 00000000 00000000 00000000     C...............
	...
200009e8:	00000043 00000000 00000000 00000000     C...............
	...
20000a08:	00000043 00000000 00000000 00000000     C...............
	...
20000a28:	00000043 00000000 00000000 00000000     C...............
	...
20000a48:	00000043 00000000 00000000 00000000     C...............
	...
20000a68:	00000043 00000000 00000000 00000000     C...............
	...
20000a88:	00084b95 000842d1 00000000 0008627c     .K...B......|b..
20000a98:	0008617c 00086120 00086120 00086120     |a.. a.. a.. a..
20000aa8:	00086120 00086120 00086120 00086120      a.. a.. a.. a..
20000ab8:	00086120 00086120 ffffffff ffffffff      a.. a..........
20000ac8:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000af0:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000b14 <__malloc_av_>:
	...
20000b1c:	20000b14 20000b14 20000b1c 20000b1c     ... ... ... ... 
20000b2c:	20000b24 20000b24 20000b2c 20000b2c     $.. $.. ,.. ,.. 
20000b3c:	20000b34 20000b34 20000b3c 20000b3c     4.. 4.. <.. <.. 
20000b4c:	20000b44 20000b44 20000b4c 20000b4c     D.. D.. L.. L.. 
20000b5c:	20000b54 20000b54 20000b5c 20000b5c     T.. T.. \.. \.. 
20000b6c:	20000b64 20000b64 20000b6c 20000b6c     d.. d.. l.. l.. 
20000b7c:	20000b74 20000b74 20000b7c 20000b7c     t.. t.. |.. |.. 
20000b8c:	20000b84 20000b84 20000b8c 20000b8c     ... ... ... ... 
20000b9c:	20000b94 20000b94 20000b9c 20000b9c     ... ... ... ... 
20000bac:	20000ba4 20000ba4 20000bac 20000bac     ... ... ... ... 
20000bbc:	20000bb4 20000bb4 20000bbc 20000bbc     ... ... ... ... 
20000bcc:	20000bc4 20000bc4 20000bcc 20000bcc     ... ... ... ... 
20000bdc:	20000bd4 20000bd4 20000bdc 20000bdc     ... ... ... ... 
20000bec:	20000be4 20000be4 20000bec 20000bec     ... ... ... ... 
20000bfc:	20000bf4 20000bf4 20000bfc 20000bfc     ... ... ... ... 
20000c0c:	20000c04 20000c04 20000c0c 20000c0c     ... ... ... ... 
20000c1c:	20000c14 20000c14 20000c1c 20000c1c     ... ... ... ... 
20000c2c:	20000c24 20000c24 20000c2c 20000c2c     $.. $.. ,.. ,.. 
20000c3c:	20000c34 20000c34 20000c3c 20000c3c     4.. 4.. <.. <.. 
20000c4c:	20000c44 20000c44 20000c4c 20000c4c     D.. D.. L.. L.. 
20000c5c:	20000c54 20000c54 20000c5c 20000c5c     T.. T.. \.. \.. 
20000c6c:	20000c64 20000c64 20000c6c 20000c6c     d.. d.. l.. l.. 
20000c7c:	20000c74 20000c74 20000c7c 20000c7c     t.. t.. |.. |.. 
20000c8c:	20000c84 20000c84 20000c8c 20000c8c     ... ... ... ... 
20000c9c:	20000c94 20000c94 20000c9c 20000c9c     ... ... ... ... 
20000cac:	20000ca4 20000ca4 20000cac 20000cac     ... ... ... ... 
20000cbc:	20000cb4 20000cb4 20000cbc 20000cbc     ... ... ... ... 
20000ccc:	20000cc4 20000cc4 20000ccc 20000ccc     ... ... ... ... 
20000cdc:	20000cd4 20000cd4 20000cdc 20000cdc     ... ... ... ... 
20000cec:	20000ce4 20000ce4 20000cec 20000cec     ... ... ... ... 
20000cfc:	20000cf4 20000cf4 20000cfc 20000cfc     ... ... ... ... 
20000d0c:	20000d04 20000d04 20000d0c 20000d0c     ... ... ... ... 
20000d1c:	20000d14 20000d14 20000d1c 20000d1c     ... ... ... ... 
20000d2c:	20000d24 20000d24 20000d2c 20000d2c     $.. $.. ,.. ,.. 
20000d3c:	20000d34 20000d34 20000d3c 20000d3c     4.. 4.. <.. <.. 
20000d4c:	20000d44 20000d44 20000d4c 20000d4c     D.. D.. L.. L.. 
20000d5c:	20000d54 20000d54 20000d5c 20000d5c     T.. T.. \.. \.. 
20000d6c:	20000d64 20000d64 20000d6c 20000d6c     d.. d.. l.. l.. 
20000d7c:	20000d74 20000d74 20000d7c 20000d7c     t.. t.. |.. |.. 
20000d8c:	20000d84 20000d84 20000d8c 20000d8c     ... ... ... ... 
20000d9c:	20000d94 20000d94 20000d9c 20000d9c     ... ... ... ... 
20000dac:	20000da4 20000da4 20000dac 20000dac     ... ... ... ... 
20000dbc:	20000db4 20000db4 20000dbc 20000dbc     ... ... ... ... 
20000dcc:	20000dc4 20000dc4 20000dcc 20000dcc     ... ... ... ... 
20000ddc:	20000dd4 20000dd4 20000ddc 20000ddc     ... ... ... ... 
20000dec:	20000de4 20000de4 20000dec 20000dec     ... ... ... ... 
20000dfc:	20000df4 20000df4 20000dfc 20000dfc     ... ... ... ... 
20000e0c:	20000e04 20000e04 20000e0c 20000e0c     ... ... ... ... 
20000e1c:	20000e14 20000e14 20000e1c 20000e1c     ... ... ... ... 
20000e2c:	20000e24 20000e24 20000e2c 20000e2c     $.. $.. ,.. ,.. 
20000e3c:	20000e34 20000e34 20000e3c 20000e3c     4.. 4.. <.. <.. 
20000e4c:	20000e44 20000e44 20000e4c 20000e4c     D.. D.. L.. L.. 
20000e5c:	20000e54 20000e54 20000e5c 20000e5c     T.. T.. \.. \.. 
20000e6c:	20000e64 20000e64 20000e6c 20000e6c     d.. d.. l.. l.. 
20000e7c:	20000e74 20000e74 20000e7c 20000e7c     t.. t.. |.. |.. 
20000e8c:	20000e84 20000e84 20000e8c 20000e8c     ... ... ... ... 
20000e9c:	20000e94 20000e94 20000e9c 20000e9c     ... ... ... ... 
20000eac:	20000ea4 20000ea4 20000eac 20000eac     ... ... ... ... 
20000ebc:	20000eb4 20000eb4 20000ebc 20000ebc     ... ... ... ... 
20000ecc:	20000ec4 20000ec4 20000ecc 20000ecc     ... ... ... ... 
20000edc:	20000ed4 20000ed4 20000edc 20000edc     ... ... ... ... 
20000eec:	20000ee4 20000ee4 20000eec 20000eec     ... ... ... ... 
20000efc:	20000ef4 20000ef4 20000efc 20000efc     ... ... ... ... 
20000f0c:	20000f04 20000f04 20000f0c 20000f0c     ... ... ... ... 

20000f1c <__malloc_sbrk_base>:
20000f1c:	ffffffff                                ....

20000f20 <__malloc_trim_threshold>:
20000f20:	00020000                                ....
