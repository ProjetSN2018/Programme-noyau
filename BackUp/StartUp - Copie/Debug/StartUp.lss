
StartUp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009354  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00089354  00089354  00019354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000fd8  20000000  0008935c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000888  20000fd8  0008a334  00020fd8  2**2
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020fd8  2**0
                  CONTENTS, READONLY
  6 .comment      000000b2  00000000  00000000  00021001  2**0
                  CONTENTS, READONLY
  7 .debug_info   00022897  00000000  00000000  000210b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004f84  00000000  00000000  0004394a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000055cb  00000000  00000000  000488ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c08  00000000  00000000  0004de99  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a68  00000000  00000000  0004eaa1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001a8e8  00000000  00000000  0004f509  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00018a2e  00000000  00000000  00069df1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051af5  00000000  00000000  0008281f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002690  00000000  00000000  000d4314  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 a5 0e 08 00 a1 0e 08 00 a1 0e 08 00     .@. ............
   80010:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 00 00 00 00     ................
	...
   8002c:	a1 0e 08 00 a1 0e 08 00 00 00 00 00 a1 0e 08 00     ................
   8003c:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 91 1b 08 00     ................
   8004c:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 a1 0e 08 00     ................
   8005c:	a1 0e 08 00 29 34 08 00 a1 0e 08 00 b5 05 08 00     ....)4..........
   8006c:	c9 05 08 00 a1 0e 08 00 a1 0e 08 00 a1 0e 08 00     ................
   8007c:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 a1 0e 08 00     ................
   8008c:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 a5 36 08 00     .............6..
   8009c:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 a1 0e 08 00     ................
   800ac:	a1 0e 08 00 a1 0e 08 00 a1 0e 08 00 a1 0e 08 00     ................

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000fd8 	.word	0x20000fd8
   800d8:	00000000 	.word	0x00000000
   800dc:	0008935c 	.word	0x0008935c

000800e0 <frame_dummy>:
   800e0:	4b0c      	ldr	r3, [pc, #48]	; (80114 <frame_dummy+0x34>)
   800e2:	b143      	cbz	r3, 800f6 <frame_dummy+0x16>
   800e4:	480c      	ldr	r0, [pc, #48]	; (80118 <frame_dummy+0x38>)
   800e6:	b510      	push	{r4, lr}
   800e8:	490c      	ldr	r1, [pc, #48]	; (8011c <frame_dummy+0x3c>)
   800ea:	f3af 8000 	nop.w
   800ee:	480c      	ldr	r0, [pc, #48]	; (80120 <frame_dummy+0x40>)
   800f0:	6803      	ldr	r3, [r0, #0]
   800f2:	b923      	cbnz	r3, 800fe <frame_dummy+0x1e>
   800f4:	bd10      	pop	{r4, pc}
   800f6:	480a      	ldr	r0, [pc, #40]	; (80120 <frame_dummy+0x40>)
   800f8:	6803      	ldr	r3, [r0, #0]
   800fa:	b933      	cbnz	r3, 8010a <frame_dummy+0x2a>
   800fc:	4770      	bx	lr
   800fe:	4b09      	ldr	r3, [pc, #36]	; (80124 <frame_dummy+0x44>)
   80100:	2b00      	cmp	r3, #0
   80102:	d0f7      	beq.n	800f4 <frame_dummy+0x14>
   80104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80108:	4718      	bx	r3
   8010a:	4b06      	ldr	r3, [pc, #24]	; (80124 <frame_dummy+0x44>)
   8010c:	2b00      	cmp	r3, #0
   8010e:	d0f5      	beq.n	800fc <frame_dummy+0x1c>
   80110:	4718      	bx	r3
   80112:	bf00      	nop
   80114:	00000000 	.word	0x00000000
   80118:	0008935c 	.word	0x0008935c
   8011c:	20000fdc 	.word	0x20000fdc
   80120:	0008935c 	.word	0x0008935c
   80124:	00000000 	.word	0x00000000

00080128 <Appli>:

#include "appli.h"


uint32_t Appli(uint32_t sc, ...)
{
   80128:	b40f      	push	{r0, r1, r2, r3}
   8012a:	b538      	push	{r3, r4, r5, lr}
   8012c:	9904      	ldr	r1, [sp, #16]
	switch(sc)
   8012e:	2964      	cmp	r1, #100	; 0x64
   80130:	d007      	beq.n	80142 <Appli+0x1a>
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
		LcdPutstr("www.a-2-s.fr",3,4);
		
		break;
	default:
		Error(ERROR_APPLI_SWITCH_BAD_SC,sc);
   80132:	2010      	movs	r0, #16
   80134:	4b27      	ldr	r3, [pc, #156]	; (801d4 <Appli+0xac>)
   80136:	4798      	blx	r3
	}
	return 0;
}
   80138:	2000      	movs	r0, #0
   8013a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8013e:	b004      	add	sp, #16
   80140:	4770      	bx	lr
		gpio_configure_pin(CMD_MOSFET,			CMD_MOSFET_FLAGS);
   80142:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80146:	2020      	movs	r0, #32
   80148:	4c23      	ldr	r4, [pc, #140]	; (801d8 <Appli+0xb0>)
   8014a:	47a0      	blx	r4
		gpio_configure_pin(CMD_MOT_SERRURE,		CMD_MOT_SERRURE_FLAGS);
   8014c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80150:	2021      	movs	r0, #33	; 0x21
   80152:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS,			CMD_RELAIS_FLAGS);
   80154:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80158:	2022      	movs	r0, #34	; 0x22
   8015a:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_1,		CMD_RELAIS_1_FLAGS);
   8015c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80160:	2023      	movs	r0, #35	; 0x23
   80162:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_2,		CMD_RELAIS_2_FLAGS);
   80164:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80168:	2024      	movs	r0, #36	; 0x24
   8016a:	47a0      	blx	r4
		pmc_enable_periph_clk(ID_PIOA);
   8016c:	200a      	movs	r0, #10
   8016e:	4d1b      	ldr	r5, [pc, #108]	; (801dc <Appli+0xb4>)
   80170:	47a8      	blx	r5
		pmc_enable_periph_clk(ID_PIOB);
   80172:	200b      	movs	r0, #11
   80174:	47a8      	blx	r5
		gpio_configure_pin(PENE_OUVERT,			PENE_OUVERT_FLAGS);
   80176:	4d1a      	ldr	r5, [pc, #104]	; (801e0 <Appli+0xb8>)
   80178:	4629      	mov	r1, r5
   8017a:	200e      	movs	r0, #14
   8017c:	47a0      	blx	r4
		gpio_configure_pin(PENE_FERME,			PENE_FERME_FLAGS);
   8017e:	4629      	mov	r1, r5
   80180:	200f      	movs	r0, #15
   80182:	47a0      	blx	r4
		gpio_configure_pin(IN_ILS,				IN_ILS_FLAGS);
   80184:	4629      	mov	r1, r5
   80186:	2010      	movs	r0, #16
   80188:	47a0      	blx	r4
		gpio_configure_pin(IN_SV,				IN_SV_FLAGS);
   8018a:	4629      	mov	r1, r5
   8018c:	2011      	movs	r0, #17
   8018e:	47a0      	blx	r4
		gpio_configure_pin(IN_RADAR,			IN_RADAR_FLAGS);
   80190:	4629      	mov	r1, r5
   80192:	2018      	movs	r0, #24
   80194:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU,				IN_DVU_FLAGS);
   80196:	4629      	mov	r1, r5
   80198:	2019      	movs	r0, #25
   8019a:	47a0      	blx	r4
		gpio_configure_pin(IN_PREMIERE_ENTREE,	IN_PREMIERE_ENTREE_FLAGS);
   8019c:	4629      	mov	r1, r5
   8019e:	201a      	movs	r0, #26
   801a0:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU_GENERAL,		IN_DVU_GENERAL_FLAGS);
   801a2:	4629      	mov	r1, r5
   801a4:	201b      	movs	r0, #27
   801a6:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_LIBRE,		IN_ENTREE_OPTION_FLAGS);
   801a8:	4629      	mov	r1, r5
   801aa:	201c      	movs	r0, #28
   801ac:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_OPTION,	IN_ENTREE_OPTION_FLAGS);
   801ae:	4629      	mov	r1, r5
   801b0:	201d      	movs	r0, #29
   801b2:	47a0      	blx	r4
		Putstr("\r\n\n\t*______________ CPU.ACX-ATSAM3U4CA-AU ______________*\r\n\n");
   801b4:	490b      	ldr	r1, [pc, #44]	; (801e4 <Appli+0xbc>)
   801b6:	2067      	movs	r0, #103	; 0x67
   801b8:	4b0b      	ldr	r3, [pc, #44]	; (801e8 <Appli+0xc0>)
   801ba:	4798      	blx	r3
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   801bc:	2301      	movs	r3, #1
   801be:	2202      	movs	r2, #2
   801c0:	490a      	ldr	r1, [pc, #40]	; (801ec <Appli+0xc4>)
   801c2:	2067      	movs	r0, #103	; 0x67
   801c4:	4c0a      	ldr	r4, [pc, #40]	; (801f0 <Appli+0xc8>)
   801c6:	47a0      	blx	r4
		LcdPutstr("www.a-2-s.fr",3,4);
   801c8:	2304      	movs	r3, #4
   801ca:	2203      	movs	r2, #3
   801cc:	4909      	ldr	r1, [pc, #36]	; (801f4 <Appli+0xcc>)
   801ce:	2067      	movs	r0, #103	; 0x67
   801d0:	47a0      	blx	r4
		break;
   801d2:	e7b1      	b.n	80138 <Appli+0x10>
   801d4:	000816a1 	.word	0x000816a1
   801d8:	00080799 	.word	0x00080799
   801dc:	00080999 	.word	0x00080999
   801e0:	28000001 	.word	0x28000001
   801e4:	00088280 	.word	0x00088280
   801e8:	00083269 	.word	0x00083269
   801ec:	000882c0 	.word	0x000882c0
   801f0:	00081bc1 	.word	0x00081bc1
   801f4:	000882d4 	.word	0x000882d4

000801f8 <chipid_read>:
   801f8:	b311      	cbz	r1, 80240 <chipid_read+0x48>
   801fa:	6802      	ldr	r2, [r0, #0]
   801fc:	f002 021f 	and.w	r2, r2, #31
   80200:	600a      	str	r2, [r1, #0]
   80202:	6802      	ldr	r2, [r0, #0]
   80204:	f3c2 1242 	ubfx	r2, r2, #5, #3
   80208:	604a      	str	r2, [r1, #4]
   8020a:	6802      	ldr	r2, [r0, #0]
   8020c:	f3c2 2203 	ubfx	r2, r2, #8, #4
   80210:	608a      	str	r2, [r1, #8]
   80212:	6802      	ldr	r2, [r0, #0]
   80214:	2200      	movs	r2, #0
   80216:	60ca      	str	r2, [r1, #12]
   80218:	6802      	ldr	r2, [r0, #0]
   8021a:	f3c2 4203 	ubfx	r2, r2, #16, #4
   8021e:	610a      	str	r2, [r1, #16]
   80220:	6802      	ldr	r2, [r0, #0]
   80222:	f3c2 5207 	ubfx	r2, r2, #20, #8
   80226:	614a      	str	r2, [r1, #20]
   80228:	6802      	ldr	r2, [r0, #0]
   8022a:	f3c2 7202 	ubfx	r2, r2, #28, #3
   8022e:	618a      	str	r2, [r1, #24]
   80230:	6802      	ldr	r2, [r0, #0]
   80232:	0fd2      	lsrs	r2, r2, #31
   80234:	61ca      	str	r2, [r1, #28]
   80236:	b132      	cbz	r2, 80246 <chipid_read+0x4e>
   80238:	6842      	ldr	r2, [r0, #4]
   8023a:	620a      	str	r2, [r1, #32]
   8023c:	2000      	movs	r0, #0
   8023e:	4770      	bx	lr
   80240:	f04f 30ff 	mov.w	r0, #4294967295
   80244:	4770      	bx	lr
   80246:	2000      	movs	r0, #0
   80248:	4770      	bx	lr
	...

0008024c <ButtonSwitch_ISR_Handler>:
	}
	return 0;
}

void ButtonSwitch_ISR_Handler()
{
   8024c:	b510      	push	{r4, lr}
   8024e:	b082      	sub	sp, #8
	PushTask(Menu, MENU_SWITCH_BUTTON,0,0);
   80250:	2300      	movs	r3, #0
   80252:	9300      	str	r3, [sp, #0]
   80254:	2265      	movs	r2, #101	; 0x65
   80256:	4903      	ldr	r1, [pc, #12]	; (80264 <ButtonSwitch_ISR_Handler+0x18>)
   80258:	2066      	movs	r0, #102	; 0x66
   8025a:	4c03      	ldr	r4, [pc, #12]	; (80268 <ButtonSwitch_ISR_Handler+0x1c>)
   8025c:	47a0      	blx	r4
	

	// if(ShellGetState() == IDLE) ShellSetState(SWITCH);
}
   8025e:	b002      	add	sp, #8
   80260:	bd10      	pop	{r4, pc}
   80262:	bf00      	nop
   80264:	000802ad 	.word	0x000802ad
   80268:	000834a5 	.word	0x000834a5

0008026c <ButtonSelect_ISR_Handler>:

void ButtonSelect_ISR_Handler()
{
   8026c:	b510      	push	{r4, lr}
   8026e:	b082      	sub	sp, #8

	PushTask(Menu, MENU_SELECT_BUTTON,0,0);
   80270:	2300      	movs	r3, #0
   80272:	9300      	str	r3, [sp, #0]
   80274:	2266      	movs	r2, #102	; 0x66
   80276:	4903      	ldr	r1, [pc, #12]	; (80284 <ButtonSelect_ISR_Handler+0x18>)
   80278:	4610      	mov	r0, r2
   8027a:	4c03      	ldr	r4, [pc, #12]	; (80288 <ButtonSelect_ISR_Handler+0x1c>)
   8027c:	47a0      	blx	r4

	//f(ShellGetState() == SWITCH) ShellSetState(IDLE);
}
   8027e:	b002      	add	sp, #8
   80280:	bd10      	pop	{r4, pc}
   80282:	bf00      	nop
   80284:	000802ad 	.word	0x000802ad
   80288:	000834a5 	.word	0x000834a5

0008028c <ButtonClear_ISR_Handler>:

void ButtonClear_ISR_Handler()
{
   8028c:	b510      	push	{r4, lr}
   8028e:	b082      	sub	sp, #8
	PushTask(Menu, MENU_CLEAR_BUTTON,0,0);
   80290:	2300      	movs	r3, #0
   80292:	9300      	str	r3, [sp, #0]
   80294:	2267      	movs	r2, #103	; 0x67
   80296:	4903      	ldr	r1, [pc, #12]	; (802a4 <ButtonClear_ISR_Handler+0x18>)
   80298:	2066      	movs	r0, #102	; 0x66
   8029a:	4c03      	ldr	r4, [pc, #12]	; (802a8 <ButtonClear_ISR_Handler+0x1c>)
   8029c:	47a0      	blx	r4
   8029e:	b002      	add	sp, #8
   802a0:	bd10      	pop	{r4, pc}
   802a2:	bf00      	nop
   802a4:	000802ad 	.word	0x000802ad
   802a8:	000834a5 	.word	0x000834a5

000802ac <Menu>:
{
   802ac:	b40f      	push	{r0, r1, r2, r3}
   802ae:	b5f0      	push	{r4, r5, r6, r7, lr}
   802b0:	b08d      	sub	sp, #52	; 0x34
   802b2:	9912      	ldr	r1, [sp, #72]	; 0x48
	switch(sc)
   802b4:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   802b8:	2b05      	cmp	r3, #5
   802ba:	f200 80aa 	bhi.w	80412 <Menu+0x166>
   802be:	e8df f003 	tbb	[pc, r3]
   802c2:	5f03      	.short	0x5f03
   802c4:	59a89d8b 	.word	0x59a89d8b
			Putstr("MENU_NEW\r");
   802c8:	4954      	ldr	r1, [pc, #336]	; (8041c <Menu+0x170>)
   802ca:	2067      	movs	r0, #103	; 0x67
   802cc:	4b54      	ldr	r3, [pc, #336]	; (80420 <Menu+0x174>)
   802ce:	4798      	blx	r3
			pio_set_input(PIOA, PIN_BUTTON_SWITCH, PIO_PULLUP); //A0 (Bouton Gauche)
   802d0:	4c54      	ldr	r4, [pc, #336]	; (80424 <Menu+0x178>)
   802d2:	2201      	movs	r2, #1
   802d4:	f44f 7180 	mov.w	r1, #256	; 0x100
   802d8:	4620      	mov	r0, r4
   802da:	4f53      	ldr	r7, [pc, #332]	; (80428 <Menu+0x17c>)
   802dc:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SWITCH, PIO_IT_FALL_EDGE, ButtonSwitch_ISR_Handler);
   802de:	4b53      	ldr	r3, [pc, #332]	; (8042c <Menu+0x180>)
   802e0:	9300      	str	r3, [sp, #0]
   802e2:	2350      	movs	r3, #80	; 0x50
   802e4:	f44f 7280 	mov.w	r2, #256	; 0x100
   802e8:	210a      	movs	r1, #10
   802ea:	4620      	mov	r0, r4
   802ec:	4e50      	ldr	r6, [pc, #320]	; (80430 <Menu+0x184>)
   802ee:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SWITCH);
   802f0:	f44f 7180 	mov.w	r1, #256	; 0x100
   802f4:	4620      	mov	r0, r4
   802f6:	4d4f      	ldr	r5, [pc, #316]	; (80434 <Menu+0x188>)
   802f8:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_SELECT, PIO_PULLUP); //A1 (Bouton Milieu)
   802fa:	2201      	movs	r2, #1
   802fc:	f44f 7100 	mov.w	r1, #512	; 0x200
   80300:	4620      	mov	r0, r4
   80302:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SELECT, PIO_IT_FALL_EDGE, ButtonSelect_ISR_Handler);
   80304:	4b4c      	ldr	r3, [pc, #304]	; (80438 <Menu+0x18c>)
   80306:	9300      	str	r3, [sp, #0]
   80308:	2350      	movs	r3, #80	; 0x50
   8030a:	f44f 7200 	mov.w	r2, #512	; 0x200
   8030e:	210a      	movs	r1, #10
   80310:	4620      	mov	r0, r4
   80312:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SELECT);
   80314:	f44f 7100 	mov.w	r1, #512	; 0x200
   80318:	4620      	mov	r0, r4
   8031a:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_CLEAR, PIO_PULLUP); //A1 (Bouton Droite)
   8031c:	2201      	movs	r2, #1
   8031e:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80322:	4620      	mov	r0, r4
   80324:	47b8      	blx	r7
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_CLEAR, PIO_IT_FALL_EDGE, ButtonClear_ISR_Handler);
   80326:	4b45      	ldr	r3, [pc, #276]	; (8043c <Menu+0x190>)
   80328:	9300      	str	r3, [sp, #0]
   8032a:	2350      	movs	r3, #80	; 0x50
   8032c:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80330:	210a      	movs	r1, #10
   80332:	4620      	mov	r0, r4
   80334:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_CLEAR);
   80336:	f44f 6180 	mov.w	r1, #1024	; 0x400
   8033a:	4620      	mov	r0, r4
   8033c:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8033e:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80342:	4b3f      	ldr	r3, [pc, #252]	; (80440 <Menu+0x194>)
   80344:	601a      	str	r2, [r3, #0]
				{ "Fermer portes 1", NULL, PushTask(Sas,SAS_FERMER_PORTE1,0 ,0)},
   80346:	4e3f      	ldr	r6, [pc, #252]	; (80444 <Menu+0x198>)
   80348:	2400      	movs	r4, #0
   8034a:	9400      	str	r4, [sp, #0]
   8034c:	4623      	mov	r3, r4
   8034e:	2215      	movs	r2, #21
   80350:	4631      	mov	r1, r6
   80352:	2066      	movs	r0, #102	; 0x66
   80354:	4d3c      	ldr	r5, [pc, #240]	; (80448 <Menu+0x19c>)
   80356:	47a8      	blx	r5
				{ "Fermer portes 2", NULL, PushTask(Sas,SAS_FERMER_PORTE2,0 ,0) },
   80358:	9400      	str	r4, [sp, #0]
   8035a:	4623      	mov	r3, r4
   8035c:	2216      	movs	r2, #22
   8035e:	4631      	mov	r1, r6
   80360:	2066      	movs	r0, #102	; 0x66
   80362:	47a8      	blx	r5
				{ "Option SAS",	NULL,	PushTask(Sas,SAS_FERMER_SAS,0 ,0)},
   80364:	9400      	str	r4, [sp, #0]
   80366:	4623      	mov	r3, r4
   80368:	220a      	movs	r2, #10
   8036a:	4631      	mov	r1, r6
   8036c:	2066      	movs	r0, #102	; 0x66
   8036e:	47a8      	blx	r5
			menuParam.iIndexX = 0;
   80370:	4b36      	ldr	r3, [pc, #216]	; (8044c <Menu+0x1a0>)
   80372:	601c      	str	r4, [r3, #0]
}
   80374:	2000      	movs	r0, #0
   80376:	b00d      	add	sp, #52	; 0x34
   80378:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8037c:	b004      	add	sp, #16
   8037e:	4770      	bx	lr
			gpio_toggle_pin(POWER_LED);
   80380:	2033      	movs	r0, #51	; 0x33
   80382:	4b33      	ldr	r3, [pc, #204]	; (80450 <Menu+0x1a4>)
   80384:	4798      	blx	r3
			if(_menu[menuParam.iIndexX++].pMenuStr == NULL) menuParam.iIndexX = 0;
   80386:	4a31      	ldr	r2, [pc, #196]	; (8044c <Menu+0x1a0>)
   80388:	6813      	ldr	r3, [r2, #0]
   8038a:	1c59      	adds	r1, r3, #1
   8038c:	6011      	str	r1, [r2, #0]
   8038e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   80392:	aa0c      	add	r2, sp, #48	; 0x30
   80394:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   80398:	f853 3c24 	ldr.w	r3, [r3, #-36]
   8039c:	b1c3      	cbz	r3, 803d0 <Menu+0x124>
			sprintf(buf, *_menu[menuParam.iIndexX].pMenuStr);
   8039e:	4b2b      	ldr	r3, [pc, #172]	; (8044c <Menu+0x1a0>)
   803a0:	681b      	ldr	r3, [r3, #0]
   803a2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   803a6:	aa0c      	add	r2, sp, #48	; 0x30
   803a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   803ac:	f853 3c24 	ldr.w	r3, [r3, #-36]
   803b0:	4c28      	ldr	r4, [pc, #160]	; (80454 <Menu+0x1a8>)
   803b2:	7819      	ldrb	r1, [r3, #0]
   803b4:	4620      	mov	r0, r4
   803b6:	4b28      	ldr	r3, [pc, #160]	; (80458 <Menu+0x1ac>)
   803b8:	4798      	blx	r3
			Putstr(buf);
   803ba:	4621      	mov	r1, r4
   803bc:	2067      	movs	r0, #103	; 0x67
   803be:	4b18      	ldr	r3, [pc, #96]	; (80420 <Menu+0x174>)
   803c0:	4798      	blx	r3
			LcdPutstr(buf, 3, 3);
   803c2:	2303      	movs	r3, #3
   803c4:	461a      	mov	r2, r3
   803c6:	4621      	mov	r1, r4
   803c8:	2067      	movs	r0, #103	; 0x67
   803ca:	4c24      	ldr	r4, [pc, #144]	; (8045c <Menu+0x1b0>)
   803cc:	47a0      	blx	r4
			break;
   803ce:	e7d1      	b.n	80374 <Menu+0xc8>
			if(_menu[menuParam.iIndexX++].pMenuStr == NULL) menuParam.iIndexX = 0;
   803d0:	2200      	movs	r2, #0
   803d2:	4b1e      	ldr	r3, [pc, #120]	; (8044c <Menu+0x1a0>)
   803d4:	601a      	str	r2, [r3, #0]
   803d6:	e7e2      	b.n	8039e <Menu+0xf2>
			gpio_toggle_pin(POWER_LED);
   803d8:	2033      	movs	r0, #51	; 0x33
   803da:	4b1d      	ldr	r3, [pc, #116]	; (80450 <Menu+0x1a4>)
   803dc:	4798      	blx	r3
			if(_menu[menuParam.iIndexX].pSubMenu == NULL) _menu[menuParam.iIndexX].pMenuFunc;
   803de:	4b1b      	ldr	r3, [pc, #108]	; (8044c <Menu+0x1a0>)
   803e0:	681b      	ldr	r3, [r3, #0]
   803e2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   803e6:	aa0c      	add	r2, sp, #48	; 0x30
   803e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   803ec:	f853 3c20 	ldr.w	r3, [r3, #-32]
   803f0:	2b00      	cmp	r3, #0
   803f2:	d0bf      	beq.n	80374 <Menu+0xc8>
				menuParam.iIndexX = 0;
   803f4:	2200      	movs	r2, #0
   803f6:	4b15      	ldr	r3, [pc, #84]	; (8044c <Menu+0x1a0>)
   803f8:	601a      	str	r2, [r3, #0]
   803fa:	e7bb      	b.n	80374 <Menu+0xc8>
			gpio_toggle_pin(POWER_LED);
   803fc:	2033      	movs	r0, #51	; 0x33
   803fe:	4b14      	ldr	r3, [pc, #80]	; (80450 <Menu+0x1a4>)
   80400:	4798      	blx	r3
			PushTask(Menu, MENU_PROMPT,0,0);
   80402:	2300      	movs	r3, #0
   80404:	9300      	str	r3, [sp, #0]
   80406:	2269      	movs	r2, #105	; 0x69
   80408:	4915      	ldr	r1, [pc, #84]	; (80460 <Menu+0x1b4>)
   8040a:	2066      	movs	r0, #102	; 0x66
   8040c:	4c0e      	ldr	r4, [pc, #56]	; (80448 <Menu+0x19c>)
   8040e:	47a0      	blx	r4
			break;
   80410:	e7b0      	b.n	80374 <Menu+0xc8>
			Error(ERROR_MENU_SWITCH_BAD_SC, sc);
   80412:	2011      	movs	r0, #17
   80414:	4b13      	ldr	r3, [pc, #76]	; (80464 <Menu+0x1b8>)
   80416:	4798      	blx	r3
   80418:	e7ac      	b.n	80374 <Menu+0xc8>
   8041a:	bf00      	nop
   8041c:	000882e4 	.word	0x000882e4
   80420:	00083269 	.word	0x00083269
   80424:	400e0c00 	.word	0x400e0c00
   80428:	00080697 	.word	0x00080697
   8042c:	0008024d 	.word	0x0008024d
   80430:	00080545 	.word	0x00080545
   80434:	0008071d 	.word	0x0008071d
   80438:	0008026d 	.word	0x0008026d
   8043c:	0008028d 	.word	0x0008028d
   80440:	e000e100 	.word	0xe000e100
   80444:	00080469 	.word	0x00080469
   80448:	000834a5 	.word	0x000834a5
   8044c:	200010b4 	.word	0x200010b4
   80450:	00080779 	.word	0x00080779
   80454:	200012a8 	.word	0x200012a8
   80458:	00083901 	.word	0x00083901
   8045c:	00081bc1 	.word	0x00081bc1
   80460:	000802ad 	.word	0x000802ad
   80464:	000816a1 	.word	0x000816a1

00080468 <Sas>:

#include "./kernel/kernel.h"


int Sas(int sc, ...)
{
   80468:	b40f      	push	{r0, r1, r2, r3}
   8046a:	b538      	push	{r3, r4, r5, lr}
   8046c:	9904      	ldr	r1, [sp, #16]
switch(sc)
   8046e:	2915      	cmp	r1, #21
   80470:	d017      	beq.n	804a2 <Sas+0x3a>
   80472:	2916      	cmp	r1, #22
   80474:	d023      	beq.n	804be <Sas+0x56>
   80476:	290a      	cmp	r1, #10
   80478:	d003      	beq.n	80482 <Sas+0x1a>
case SAS_FERMER_PORTE2:
sprintf(buf, "Fermeture Porte 2");
//Putstr(buf);
break;
default:
Error(ERROR_SAS_SWITCH_BAD_SC, sc);
   8047a:	2012      	movs	r0, #18
   8047c:	4b17      	ldr	r3, [pc, #92]	; (804dc <Sas+0x74>)
   8047e:	4798      	blx	r3
break;
   80480:	e00b      	b.n	8049a <Sas+0x32>
sprintf(buf, "Fermeture SAS");
   80482:	4c17      	ldr	r4, [pc, #92]	; (804e0 <Sas+0x78>)
   80484:	4b17      	ldr	r3, [pc, #92]	; (804e4 <Sas+0x7c>)
   80486:	cb07      	ldmia	r3!, {r0, r1, r2}
   80488:	6020      	str	r0, [r4, #0]
   8048a:	6061      	str	r1, [r4, #4]
   8048c:	60a2      	str	r2, [r4, #8]
   8048e:	881b      	ldrh	r3, [r3, #0]
   80490:	81a3      	strh	r3, [r4, #12]
//Putstr(buf);
   80492:	4621      	mov	r1, r4
   80494:	2067      	movs	r0, #103	; 0x67
   80496:	4b14      	ldr	r3, [pc, #80]	; (804e8 <Sas+0x80>)
   80498:	4798      	blx	r3
}

}
   8049a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8049e:	b004      	add	sp, #16
   804a0:	4770      	bx	lr
sprintf(buf, "Fermeture Porte 1");
   804a2:	4d0f      	ldr	r5, [pc, #60]	; (804e0 <Sas+0x78>)
   804a4:	4c11      	ldr	r4, [pc, #68]	; (804ec <Sas+0x84>)
   804a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   804a8:	6028      	str	r0, [r5, #0]
   804aa:	6069      	str	r1, [r5, #4]
   804ac:	60aa      	str	r2, [r5, #8]
   804ae:	60eb      	str	r3, [r5, #12]
   804b0:	8823      	ldrh	r3, [r4, #0]
   804b2:	822b      	strh	r3, [r5, #16]
//Putstr(buf);
   804b4:	4629      	mov	r1, r5
   804b6:	2067      	movs	r0, #103	; 0x67
   804b8:	4b0b      	ldr	r3, [pc, #44]	; (804e8 <Sas+0x80>)
   804ba:	4798      	blx	r3
break;
   804bc:	e7ed      	b.n	8049a <Sas+0x32>
sprintf(buf, "Fermeture Porte 2");
   804be:	4d08      	ldr	r5, [pc, #32]	; (804e0 <Sas+0x78>)
   804c0:	4c0b      	ldr	r4, [pc, #44]	; (804f0 <Sas+0x88>)
   804c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   804c4:	6028      	str	r0, [r5, #0]
   804c6:	6069      	str	r1, [r5, #4]
   804c8:	60aa      	str	r2, [r5, #8]
   804ca:	60eb      	str	r3, [r5, #12]
   804cc:	8823      	ldrh	r3, [r4, #0]
   804ce:	822b      	strh	r3, [r5, #16]
//Putstr(buf);
   804d0:	4629      	mov	r1, r5
   804d2:	2067      	movs	r0, #103	; 0x67
   804d4:	4b04      	ldr	r3, [pc, #16]	; (804e8 <Sas+0x80>)
   804d6:	4798      	blx	r3
break;
   804d8:	e7df      	b.n	8049a <Sas+0x32>
   804da:	bf00      	nop
   804dc:	000816a1 	.word	0x000816a1
   804e0:	200012a8 	.word	0x200012a8
   804e4:	000882f0 	.word	0x000882f0
   804e8:	00083269 	.word	0x00083269
   804ec:	00088300 	.word	0x00088300
   804f0:	00088314 	.word	0x00088314

000804f4 <pio_handler_process>:
   804f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   804f8:	4604      	mov	r4, r0
   804fa:	4688      	mov	r8, r1
   804fc:	4b0e      	ldr	r3, [pc, #56]	; (80538 <pio_handler_process+0x44>)
   804fe:	4798      	blx	r3
   80500:	4605      	mov	r5, r0
   80502:	4620      	mov	r0, r4
   80504:	4b0d      	ldr	r3, [pc, #52]	; (8053c <pio_handler_process+0x48>)
   80506:	4798      	blx	r3
   80508:	4005      	ands	r5, r0
   8050a:	d013      	beq.n	80534 <pio_handler_process+0x40>
   8050c:	4c0c      	ldr	r4, [pc, #48]	; (80540 <pio_handler_process+0x4c>)
   8050e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80512:	e003      	b.n	8051c <pio_handler_process+0x28>
   80514:	42b4      	cmp	r4, r6
   80516:	d00d      	beq.n	80534 <pio_handler_process+0x40>
   80518:	3410      	adds	r4, #16
   8051a:	b15d      	cbz	r5, 80534 <pio_handler_process+0x40>
   8051c:	6820      	ldr	r0, [r4, #0]
   8051e:	4540      	cmp	r0, r8
   80520:	d1f8      	bne.n	80514 <pio_handler_process+0x20>
   80522:	6861      	ldr	r1, [r4, #4]
   80524:	4229      	tst	r1, r5
   80526:	d0f5      	beq.n	80514 <pio_handler_process+0x20>
   80528:	68e3      	ldr	r3, [r4, #12]
   8052a:	4798      	blx	r3
   8052c:	6863      	ldr	r3, [r4, #4]
   8052e:	ea25 0503 	bic.w	r5, r5, r3
   80532:	e7ef      	b.n	80514 <pio_handler_process+0x20>
   80534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80538:	00080721 	.word	0x00080721
   8053c:	00080725 	.word	0x00080725
   80540:	20000ff4 	.word	0x20000ff4

00080544 <pio_handler_set>:
   80544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80546:	4c18      	ldr	r4, [pc, #96]	; (805a8 <pio_handler_set+0x64>)
   80548:	6826      	ldr	r6, [r4, #0]
   8054a:	2e06      	cmp	r6, #6
   8054c:	d829      	bhi.n	805a2 <pio_handler_set+0x5e>
   8054e:	f04f 0c00 	mov.w	ip, #0
   80552:	4664      	mov	r4, ip
   80554:	4f15      	ldr	r7, [pc, #84]	; (805ac <pio_handler_set+0x68>)
   80556:	e004      	b.n	80562 <pio_handler_set+0x1e>
   80558:	3401      	adds	r4, #1
   8055a:	b2e4      	uxtb	r4, r4
   8055c:	46a4      	mov	ip, r4
   8055e:	42a6      	cmp	r6, r4
   80560:	d309      	bcc.n	80576 <pio_handler_set+0x32>
   80562:	46a6      	mov	lr, r4
   80564:	0125      	lsls	r5, r4, #4
   80566:	597d      	ldr	r5, [r7, r5]
   80568:	428d      	cmp	r5, r1
   8056a:	d1f5      	bne.n	80558 <pio_handler_set+0x14>
   8056c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   80570:	686d      	ldr	r5, [r5, #4]
   80572:	4295      	cmp	r5, r2
   80574:	d1f0      	bne.n	80558 <pio_handler_set+0x14>
   80576:	4d0d      	ldr	r5, [pc, #52]	; (805ac <pio_handler_set+0x68>)
   80578:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   8057c:	eb05 040e 	add.w	r4, r5, lr
   80580:	f845 100e 	str.w	r1, [r5, lr]
   80584:	6062      	str	r2, [r4, #4]
   80586:	60a3      	str	r3, [r4, #8]
   80588:	9906      	ldr	r1, [sp, #24]
   8058a:	60e1      	str	r1, [r4, #12]
   8058c:	3601      	adds	r6, #1
   8058e:	4566      	cmp	r6, ip
   80590:	bf04      	itt	eq
   80592:	4905      	ldreq	r1, [pc, #20]	; (805a8 <pio_handler_set+0x64>)
   80594:	600e      	streq	r6, [r1, #0]
   80596:	4611      	mov	r1, r2
   80598:	461a      	mov	r2, r3
   8059a:	4b05      	ldr	r3, [pc, #20]	; (805b0 <pio_handler_set+0x6c>)
   8059c:	4798      	blx	r3
   8059e:	2000      	movs	r0, #0
   805a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   805a2:	2001      	movs	r0, #1
   805a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   805a6:	bf00      	nop
   805a8:	20001064 	.word	0x20001064
   805ac:	20000ff4 	.word	0x20000ff4
   805b0:	000806ef 	.word	0x000806ef

000805b4 <PIOA_Handler>:
   805b4:	b508      	push	{r3, lr}
   805b6:	210a      	movs	r1, #10
   805b8:	4801      	ldr	r0, [pc, #4]	; (805c0 <PIOA_Handler+0xc>)
   805ba:	4b02      	ldr	r3, [pc, #8]	; (805c4 <PIOA_Handler+0x10>)
   805bc:	4798      	blx	r3
   805be:	bd08      	pop	{r3, pc}
   805c0:	400e0c00 	.word	0x400e0c00
   805c4:	000804f5 	.word	0x000804f5

000805c8 <PIOB_Handler>:
   805c8:	b508      	push	{r3, lr}
   805ca:	210b      	movs	r1, #11
   805cc:	4801      	ldr	r0, [pc, #4]	; (805d4 <PIOB_Handler+0xc>)
   805ce:	4b02      	ldr	r3, [pc, #8]	; (805d8 <PIOB_Handler+0x10>)
   805d0:	4798      	blx	r3
   805d2:	bd08      	pop	{r3, pc}
   805d4:	400e0e00 	.word	0x400e0e00
   805d8:	000804f5 	.word	0x000804f5

000805dc <sysclk_init>:
   805dc:	b510      	push	{r4, lr}
   805de:	4812      	ldr	r0, [pc, #72]	; (80628 <sysclk_init+0x4c>)
   805e0:	4b12      	ldr	r3, [pc, #72]	; (8062c <sysclk_init+0x50>)
   805e2:	4798      	blx	r3
   805e4:	203e      	movs	r0, #62	; 0x3e
   805e6:	4b12      	ldr	r3, [pc, #72]	; (80630 <sysclk_init+0x54>)
   805e8:	4798      	blx	r3
   805ea:	4c12      	ldr	r4, [pc, #72]	; (80634 <sysclk_init+0x58>)
   805ec:	47a0      	blx	r4
   805ee:	2800      	cmp	r0, #0
   805f0:	d0fc      	beq.n	805ec <sysclk_init+0x10>
   805f2:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   805f6:	4b10      	ldr	r3, [pc, #64]	; (80638 <sysclk_init+0x5c>)
   805f8:	4798      	blx	r3
   805fa:	4c10      	ldr	r4, [pc, #64]	; (8063c <sysclk_init+0x60>)
   805fc:	47a0      	blx	r4
   805fe:	2800      	cmp	r0, #0
   80600:	d0fc      	beq.n	805fc <sysclk_init+0x20>
   80602:	4b0f      	ldr	r3, [pc, #60]	; (80640 <sysclk_init+0x64>)
   80604:	4798      	blx	r3
   80606:	4a0f      	ldr	r2, [pc, #60]	; (80644 <sysclk_init+0x68>)
   80608:	4b0f      	ldr	r3, [pc, #60]	; (80648 <sysclk_init+0x6c>)
   8060a:	629a      	str	r2, [r3, #40]	; 0x28
   8060c:	4c0f      	ldr	r4, [pc, #60]	; (8064c <sysclk_init+0x70>)
   8060e:	47a0      	blx	r4
   80610:	2800      	cmp	r0, #0
   80612:	d0fc      	beq.n	8060e <sysclk_init+0x32>
   80614:	2010      	movs	r0, #16
   80616:	4b0e      	ldr	r3, [pc, #56]	; (80650 <sysclk_init+0x74>)
   80618:	4798      	blx	r3
   8061a:	4b0e      	ldr	r3, [pc, #56]	; (80654 <sysclk_init+0x78>)
   8061c:	4798      	blx	r3
   8061e:	4802      	ldr	r0, [pc, #8]	; (80628 <sysclk_init+0x4c>)
   80620:	4b02      	ldr	r3, [pc, #8]	; (8062c <sysclk_init+0x50>)
   80622:	4798      	blx	r3
   80624:	bd10      	pop	{r4, pc}
   80626:	bf00      	nop
   80628:	05b8d800 	.word	0x05b8d800
   8062c:	200000b5 	.word	0x200000b5
   80630:	00080911 	.word	0x00080911
   80634:	00080939 	.word	0x00080939
   80638:	00080959 	.word	0x00080959
   8063c:	00080949 	.word	0x00080949
   80640:	00080979 	.word	0x00080979
   80644:	200f3f01 	.word	0x200f3f01
   80648:	400e0400 	.word	0x400e0400
   8064c:	00080989 	.word	0x00080989
   80650:	00080869 	.word	0x00080869
   80654:	00080f3d 	.word	0x00080f3d

00080658 <pio_set_peripheral>:
   80658:	6442      	str	r2, [r0, #68]	; 0x44
   8065a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8065e:	d016      	beq.n	8068e <pio_set_peripheral+0x36>
   80660:	d80b      	bhi.n	8067a <pio_set_peripheral+0x22>
   80662:	b149      	cbz	r1, 80678 <pio_set_peripheral+0x20>
   80664:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80668:	d105      	bne.n	80676 <pio_set_peripheral+0x1e>
   8066a:	6f03      	ldr	r3, [r0, #112]	; 0x70
   8066c:	6f01      	ldr	r1, [r0, #112]	; 0x70
   8066e:	400b      	ands	r3, r1
   80670:	ea23 0302 	bic.w	r3, r3, r2
   80674:	6703      	str	r3, [r0, #112]	; 0x70
   80676:	6042      	str	r2, [r0, #4]
   80678:	4770      	bx	lr
   8067a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8067e:	d0fb      	beq.n	80678 <pio_set_peripheral+0x20>
   80680:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80684:	d0f8      	beq.n	80678 <pio_set_peripheral+0x20>
   80686:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   8068a:	d1f4      	bne.n	80676 <pio_set_peripheral+0x1e>
   8068c:	4770      	bx	lr
   8068e:	6f03      	ldr	r3, [r0, #112]	; 0x70
   80690:	4313      	orrs	r3, r2
   80692:	6703      	str	r3, [r0, #112]	; 0x70
   80694:	e7ef      	b.n	80676 <pio_set_peripheral+0x1e>

00080696 <pio_set_input>:
   80696:	6441      	str	r1, [r0, #68]	; 0x44
   80698:	f012 0f01 	tst.w	r2, #1
   8069c:	bf14      	ite	ne
   8069e:	6641      	strne	r1, [r0, #100]	; 0x64
   806a0:	6601      	streq	r1, [r0, #96]	; 0x60
   806a2:	f012 0f0a 	tst.w	r2, #10
   806a6:	bf14      	ite	ne
   806a8:	6201      	strne	r1, [r0, #32]
   806aa:	6241      	streq	r1, [r0, #36]	; 0x24
   806ac:	f012 0f02 	tst.w	r2, #2
   806b0:	d107      	bne.n	806c2 <pio_set_input+0x2c>
   806b2:	f012 0f08 	tst.w	r2, #8
   806b6:	bf18      	it	ne
   806b8:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   806bc:	6141      	str	r1, [r0, #20]
   806be:	6001      	str	r1, [r0, #0]
   806c0:	4770      	bx	lr
   806c2:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   806c6:	e7f9      	b.n	806bc <pio_set_input+0x26>

000806c8 <pio_set_output>:
   806c8:	b410      	push	{r4}
   806ca:	9c01      	ldr	r4, [sp, #4]
   806cc:	6441      	str	r1, [r0, #68]	; 0x44
   806ce:	b944      	cbnz	r4, 806e2 <pio_set_output+0x1a>
   806d0:	6601      	str	r1, [r0, #96]	; 0x60
   806d2:	b143      	cbz	r3, 806e6 <pio_set_output+0x1e>
   806d4:	6501      	str	r1, [r0, #80]	; 0x50
   806d6:	b942      	cbnz	r2, 806ea <pio_set_output+0x22>
   806d8:	6341      	str	r1, [r0, #52]	; 0x34
   806da:	6101      	str	r1, [r0, #16]
   806dc:	6001      	str	r1, [r0, #0]
   806de:	bc10      	pop	{r4}
   806e0:	4770      	bx	lr
   806e2:	6641      	str	r1, [r0, #100]	; 0x64
   806e4:	e7f5      	b.n	806d2 <pio_set_output+0xa>
   806e6:	6541      	str	r1, [r0, #84]	; 0x54
   806e8:	e7f5      	b.n	806d6 <pio_set_output+0xe>
   806ea:	6301      	str	r1, [r0, #48]	; 0x30
   806ec:	e7f5      	b.n	806da <pio_set_output+0x12>

000806ee <pio_configure_interrupt>:
   806ee:	f012 0f10 	tst.w	r2, #16
   806f2:	d010      	beq.n	80716 <pio_configure_interrupt+0x28>
   806f4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
   806f8:	f012 0f20 	tst.w	r2, #32
   806fc:	bf14      	ite	ne
   806fe:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
   80702:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
   80706:	f012 0f40 	tst.w	r2, #64	; 0x40
   8070a:	bf14      	ite	ne
   8070c:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
   80710:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   80714:	4770      	bx	lr
   80716:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   8071a:	4770      	bx	lr

0008071c <pio_enable_interrupt>:
   8071c:	6401      	str	r1, [r0, #64]	; 0x40
   8071e:	4770      	bx	lr

00080720 <pio_get_interrupt_status>:
   80720:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   80722:	4770      	bx	lr

00080724 <pio_get_interrupt_mask>:
   80724:	6c80      	ldr	r0, [r0, #72]	; 0x48
   80726:	4770      	bx	lr

00080728 <pio_get_pin_value>:
   80728:	0943      	lsrs	r3, r0, #5
   8072a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8072e:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80732:	025b      	lsls	r3, r3, #9
   80734:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   80736:	f000 001f 	and.w	r0, r0, #31
   8073a:	fa23 f000 	lsr.w	r0, r3, r0
   8073e:	f000 0001 	and.w	r0, r0, #1
   80742:	4770      	bx	lr

00080744 <pio_set_pin_high>:
   80744:	0943      	lsrs	r3, r0, #5
   80746:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8074a:	f203 7306 	addw	r3, r3, #1798	; 0x706
   8074e:	025b      	lsls	r3, r3, #9
   80750:	f000 001f 	and.w	r0, r0, #31
   80754:	2201      	movs	r2, #1
   80756:	fa02 f000 	lsl.w	r0, r2, r0
   8075a:	6318      	str	r0, [r3, #48]	; 0x30
   8075c:	4770      	bx	lr

0008075e <pio_set_pin_low>:
   8075e:	0943      	lsrs	r3, r0, #5
   80760:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80764:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80768:	025b      	lsls	r3, r3, #9
   8076a:	f000 001f 	and.w	r0, r0, #31
   8076e:	2201      	movs	r2, #1
   80770:	fa02 f000 	lsl.w	r0, r2, r0
   80774:	6358      	str	r0, [r3, #52]	; 0x34
   80776:	4770      	bx	lr

00080778 <pio_toggle_pin>:
   80778:	0943      	lsrs	r3, r0, #5
   8077a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8077e:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80782:	025b      	lsls	r3, r3, #9
   80784:	6b99      	ldr	r1, [r3, #56]	; 0x38
   80786:	f000 021f 	and.w	r2, r0, #31
   8078a:	2001      	movs	r0, #1
   8078c:	4090      	lsls	r0, r2
   8078e:	4201      	tst	r1, r0
   80790:	bf14      	ite	ne
   80792:	6358      	strne	r0, [r3, #52]	; 0x34
   80794:	6318      	streq	r0, [r3, #48]	; 0x30
   80796:	4770      	bx	lr

00080798 <pio_configure_pin>:
   80798:	b570      	push	{r4, r5, r6, lr}
   8079a:	b082      	sub	sp, #8
   8079c:	460d      	mov	r5, r1
   8079e:	0943      	lsrs	r3, r0, #5
   807a0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   807a4:	f203 7306 	addw	r3, r3, #1798	; 0x706
   807a8:	025c      	lsls	r4, r3, #9
   807aa:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   807ae:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   807b2:	d031      	beq.n	80818 <pio_configure_pin+0x80>
   807b4:	d816      	bhi.n	807e4 <pio_configure_pin+0x4c>
   807b6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   807ba:	d01b      	beq.n	807f4 <pio_configure_pin+0x5c>
   807bc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   807c0:	d116      	bne.n	807f0 <pio_configure_pin+0x58>
   807c2:	f000 001f 	and.w	r0, r0, #31
   807c6:	2601      	movs	r6, #1
   807c8:	4086      	lsls	r6, r0
   807ca:	4632      	mov	r2, r6
   807cc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   807d0:	4620      	mov	r0, r4
   807d2:	4b22      	ldr	r3, [pc, #136]	; (8085c <pio_configure_pin+0xc4>)
   807d4:	4798      	blx	r3
   807d6:	f015 0f01 	tst.w	r5, #1
   807da:	bf14      	ite	ne
   807dc:	6666      	strne	r6, [r4, #100]	; 0x64
   807de:	6626      	streq	r6, [r4, #96]	; 0x60
   807e0:	2001      	movs	r0, #1
   807e2:	e017      	b.n	80814 <pio_configure_pin+0x7c>
   807e4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   807e8:	d021      	beq.n	8082e <pio_configure_pin+0x96>
   807ea:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   807ee:	d01e      	beq.n	8082e <pio_configure_pin+0x96>
   807f0:	2000      	movs	r0, #0
   807f2:	e00f      	b.n	80814 <pio_configure_pin+0x7c>
   807f4:	f000 001f 	and.w	r0, r0, #31
   807f8:	2601      	movs	r6, #1
   807fa:	4086      	lsls	r6, r0
   807fc:	4632      	mov	r2, r6
   807fe:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80802:	4620      	mov	r0, r4
   80804:	4b15      	ldr	r3, [pc, #84]	; (8085c <pio_configure_pin+0xc4>)
   80806:	4798      	blx	r3
   80808:	f015 0f01 	tst.w	r5, #1
   8080c:	bf14      	ite	ne
   8080e:	6666      	strne	r6, [r4, #100]	; 0x64
   80810:	6626      	streq	r6, [r4, #96]	; 0x60
   80812:	2001      	movs	r0, #1
   80814:	b002      	add	sp, #8
   80816:	bd70      	pop	{r4, r5, r6, pc}
   80818:	f000 011f 	and.w	r1, r0, #31
   8081c:	2601      	movs	r6, #1
   8081e:	462a      	mov	r2, r5
   80820:	fa06 f101 	lsl.w	r1, r6, r1
   80824:	4620      	mov	r0, r4
   80826:	4b0e      	ldr	r3, [pc, #56]	; (80860 <pio_configure_pin+0xc8>)
   80828:	4798      	blx	r3
   8082a:	4630      	mov	r0, r6
   8082c:	e7f2      	b.n	80814 <pio_configure_pin+0x7c>
   8082e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   80832:	f000 011f 	and.w	r1, r0, #31
   80836:	2601      	movs	r6, #1
   80838:	ea05 0306 	and.w	r3, r5, r6
   8083c:	9300      	str	r3, [sp, #0]
   8083e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80842:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80846:	bf14      	ite	ne
   80848:	2200      	movne	r2, #0
   8084a:	2201      	moveq	r2, #1
   8084c:	fa06 f101 	lsl.w	r1, r6, r1
   80850:	4620      	mov	r0, r4
   80852:	4c04      	ldr	r4, [pc, #16]	; (80864 <pio_configure_pin+0xcc>)
   80854:	47a0      	blx	r4
   80856:	4630      	mov	r0, r6
   80858:	e7dc      	b.n	80814 <pio_configure_pin+0x7c>
   8085a:	bf00      	nop
   8085c:	00080659 	.word	0x00080659
   80860:	00080697 	.word	0x00080697
   80864:	000806c9 	.word	0x000806c9

00080868 <pmc_switch_mck_to_pllack>:
   80868:	4a17      	ldr	r2, [pc, #92]	; (808c8 <pmc_switch_mck_to_pllack+0x60>)
   8086a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8086c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80870:	4318      	orrs	r0, r3
   80872:	6310      	str	r0, [r2, #48]	; 0x30
   80874:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80876:	f013 0f08 	tst.w	r3, #8
   8087a:	d10a      	bne.n	80892 <pmc_switch_mck_to_pllack+0x2a>
   8087c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80880:	4911      	ldr	r1, [pc, #68]	; (808c8 <pmc_switch_mck_to_pllack+0x60>)
   80882:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80884:	f012 0f08 	tst.w	r2, #8
   80888:	d103      	bne.n	80892 <pmc_switch_mck_to_pllack+0x2a>
   8088a:	3b01      	subs	r3, #1
   8088c:	d1f9      	bne.n	80882 <pmc_switch_mck_to_pllack+0x1a>
   8088e:	2001      	movs	r0, #1
   80890:	4770      	bx	lr
   80892:	4a0d      	ldr	r2, [pc, #52]	; (808c8 <pmc_switch_mck_to_pllack+0x60>)
   80894:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80896:	f023 0303 	bic.w	r3, r3, #3
   8089a:	f043 0302 	orr.w	r3, r3, #2
   8089e:	6313      	str	r3, [r2, #48]	; 0x30
   808a0:	6e93      	ldr	r3, [r2, #104]	; 0x68
   808a2:	f013 0f08 	tst.w	r3, #8
   808a6:	d10a      	bne.n	808be <pmc_switch_mck_to_pllack+0x56>
   808a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   808ac:	4906      	ldr	r1, [pc, #24]	; (808c8 <pmc_switch_mck_to_pllack+0x60>)
   808ae:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   808b0:	f012 0f08 	tst.w	r2, #8
   808b4:	d105      	bne.n	808c2 <pmc_switch_mck_to_pllack+0x5a>
   808b6:	3b01      	subs	r3, #1
   808b8:	d1f9      	bne.n	808ae <pmc_switch_mck_to_pllack+0x46>
   808ba:	2001      	movs	r0, #1
   808bc:	4770      	bx	lr
   808be:	2000      	movs	r0, #0
   808c0:	4770      	bx	lr
   808c2:	2000      	movs	r0, #0
   808c4:	4770      	bx	lr
   808c6:	bf00      	nop
   808c8:	400e0400 	.word	0x400e0400

000808cc <pmc_switch_sclk_to_32kxtal>:
   808cc:	2801      	cmp	r0, #1
   808ce:	d003      	beq.n	808d8 <pmc_switch_sclk_to_32kxtal+0xc>
   808d0:	4a05      	ldr	r2, [pc, #20]	; (808e8 <pmc_switch_sclk_to_32kxtal+0x1c>)
   808d2:	4b06      	ldr	r3, [pc, #24]	; (808ec <pmc_switch_sclk_to_32kxtal+0x20>)
   808d4:	601a      	str	r2, [r3, #0]
   808d6:	4770      	bx	lr
   808d8:	4a04      	ldr	r2, [pc, #16]	; (808ec <pmc_switch_sclk_to_32kxtal+0x20>)
   808da:	6893      	ldr	r3, [r2, #8]
   808dc:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   808e0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   808e4:	6093      	str	r3, [r2, #8]
   808e6:	e7f3      	b.n	808d0 <pmc_switch_sclk_to_32kxtal+0x4>
   808e8:	a5000008 	.word	0xa5000008
   808ec:	400e1210 	.word	0x400e1210

000808f0 <pmc_osc_is_ready_32kxtal>:
   808f0:	4b05      	ldr	r3, [pc, #20]	; (80908 <pmc_osc_is_ready_32kxtal+0x18>)
   808f2:	695b      	ldr	r3, [r3, #20]
   808f4:	f013 0f80 	tst.w	r3, #128	; 0x80
   808f8:	bf1d      	ittte	ne
   808fa:	4b04      	ldrne	r3, [pc, #16]	; (8090c <pmc_osc_is_ready_32kxtal+0x1c>)
   808fc:	6e98      	ldrne	r0, [r3, #104]	; 0x68
   808fe:	f3c0 10c0 	ubfxne	r0, r0, #7, #1
   80902:	2000      	moveq	r0, #0
   80904:	4770      	bx	lr
   80906:	bf00      	nop
   80908:	400e1210 	.word	0x400e1210
   8090c:	400e0400 	.word	0x400e0400

00080910 <pmc_osc_enable_main_xtal>:
   80910:	4a08      	ldr	r2, [pc, #32]	; (80934 <pmc_osc_enable_main_xtal+0x24>)
   80912:	6a13      	ldr	r3, [r2, #32]
   80914:	f023 0303 	bic.w	r3, r3, #3
   80918:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8091c:	f043 0301 	orr.w	r3, r3, #1
   80920:	0200      	lsls	r0, r0, #8
   80922:	b280      	uxth	r0, r0
   80924:	4303      	orrs	r3, r0
   80926:	6213      	str	r3, [r2, #32]
   80928:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8092a:	f013 0f01 	tst.w	r3, #1
   8092e:	d0fb      	beq.n	80928 <pmc_osc_enable_main_xtal+0x18>
   80930:	4770      	bx	lr
   80932:	bf00      	nop
   80934:	400e0400 	.word	0x400e0400

00080938 <pmc_osc_is_ready_main_xtal>:
   80938:	4b02      	ldr	r3, [pc, #8]	; (80944 <pmc_osc_is_ready_main_xtal+0xc>)
   8093a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   8093c:	f000 0001 	and.w	r0, r0, #1
   80940:	4770      	bx	lr
   80942:	bf00      	nop
   80944:	400e0400 	.word	0x400e0400

00080948 <pmc_osc_is_ready_mainck>:
   80948:	4b02      	ldr	r3, [pc, #8]	; (80954 <pmc_osc_is_ready_mainck+0xc>)
   8094a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   8094c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80950:	4770      	bx	lr
   80952:	bf00      	nop
   80954:	400e0400 	.word	0x400e0400

00080958 <pmc_mainck_osc_select>:
   80958:	4b06      	ldr	r3, [pc, #24]	; (80974 <pmc_mainck_osc_select+0x1c>)
   8095a:	6a1b      	ldr	r3, [r3, #32]
   8095c:	b930      	cbnz	r0, 8096c <pmc_mainck_osc_select+0x14>
   8095e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
   80962:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80966:	4a03      	ldr	r2, [pc, #12]	; (80974 <pmc_mainck_osc_select+0x1c>)
   80968:	6213      	str	r3, [r2, #32]
   8096a:	4770      	bx	lr
   8096c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   80970:	e7f7      	b.n	80962 <pmc_mainck_osc_select+0xa>
   80972:	bf00      	nop
   80974:	400e0400 	.word	0x400e0400

00080978 <pmc_disable_pllack>:
   80978:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8097c:	4b01      	ldr	r3, [pc, #4]	; (80984 <pmc_disable_pllack+0xc>)
   8097e:	629a      	str	r2, [r3, #40]	; 0x28
   80980:	4770      	bx	lr
   80982:	bf00      	nop
   80984:	400e0400 	.word	0x400e0400

00080988 <pmc_is_locked_pllack>:
   80988:	4b02      	ldr	r3, [pc, #8]	; (80994 <pmc_is_locked_pllack+0xc>)
   8098a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   8098c:	f000 0002 	and.w	r0, r0, #2
   80990:	4770      	bx	lr
   80992:	bf00      	nop
   80994:	400e0400 	.word	0x400e0400

00080998 <pmc_enable_periph_clk>:
   80998:	281d      	cmp	r0, #29
   8099a:	d80e      	bhi.n	809ba <pmc_enable_periph_clk+0x22>
   8099c:	281f      	cmp	r0, #31
   8099e:	d80e      	bhi.n	809be <pmc_enable_periph_clk+0x26>
   809a0:	4b09      	ldr	r3, [pc, #36]	; (809c8 <pmc_enable_periph_clk+0x30>)
   809a2:	699a      	ldr	r2, [r3, #24]
   809a4:	2301      	movs	r3, #1
   809a6:	4083      	lsls	r3, r0
   809a8:	4393      	bics	r3, r2
   809aa:	d00a      	beq.n	809c2 <pmc_enable_periph_clk+0x2a>
   809ac:	2301      	movs	r3, #1
   809ae:	fa03 f000 	lsl.w	r0, r3, r0
   809b2:	4b05      	ldr	r3, [pc, #20]	; (809c8 <pmc_enable_periph_clk+0x30>)
   809b4:	6118      	str	r0, [r3, #16]
   809b6:	2000      	movs	r0, #0
   809b8:	4770      	bx	lr
   809ba:	2001      	movs	r0, #1
   809bc:	4770      	bx	lr
   809be:	2000      	movs	r0, #0
   809c0:	4770      	bx	lr
   809c2:	2000      	movs	r0, #0
   809c4:	4770      	bx	lr
   809c6:	bf00      	nop
   809c8:	400e0400 	.word	0x400e0400

000809cc <board_init>:
   809cc:	4770      	bx	lr
	...

000809d0 <cpu_irq_enter_critical>:
   809d0:	4b0b      	ldr	r3, [pc, #44]	; (80a00 <cpu_irq_enter_critical+0x30>)
   809d2:	681b      	ldr	r3, [r3, #0]
   809d4:	b92b      	cbnz	r3, 809e2 <cpu_irq_enter_critical+0x12>
   809d6:	f3ef 8310 	mrs	r3, PRIMASK
   809da:	b13b      	cbz	r3, 809ec <cpu_irq_enter_critical+0x1c>
   809dc:	2200      	movs	r2, #0
   809de:	4b09      	ldr	r3, [pc, #36]	; (80a04 <cpu_irq_enter_critical+0x34>)
   809e0:	701a      	strb	r2, [r3, #0]
   809e2:	4a07      	ldr	r2, [pc, #28]	; (80a00 <cpu_irq_enter_critical+0x30>)
   809e4:	6813      	ldr	r3, [r2, #0]
   809e6:	3301      	adds	r3, #1
   809e8:	6013      	str	r3, [r2, #0]
   809ea:	4770      	bx	lr
   809ec:	b672      	cpsid	i
   809ee:	f3bf 8f5f 	dmb	sy
   809f2:	2200      	movs	r2, #0
   809f4:	4b04      	ldr	r3, [pc, #16]	; (80a08 <cpu_irq_enter_critical+0x38>)
   809f6:	701a      	strb	r2, [r3, #0]
   809f8:	2201      	movs	r2, #1
   809fa:	4b02      	ldr	r3, [pc, #8]	; (80a04 <cpu_irq_enter_critical+0x34>)
   809fc:	701a      	strb	r2, [r3, #0]
   809fe:	e7f0      	b.n	809e2 <cpu_irq_enter_critical+0x12>
   80a00:	20001068 	.word	0x20001068
   80a04:	2000106c 	.word	0x2000106c
   80a08:	20000124 	.word	0x20000124

00080a0c <cpu_irq_leave_critical>:
   80a0c:	4b07      	ldr	r3, [pc, #28]	; (80a2c <cpu_irq_leave_critical+0x20>)
   80a0e:	681a      	ldr	r2, [r3, #0]
   80a10:	3a01      	subs	r2, #1
   80a12:	601a      	str	r2, [r3, #0]
   80a14:	681b      	ldr	r3, [r3, #0]
   80a16:	b943      	cbnz	r3, 80a2a <cpu_irq_leave_critical+0x1e>
   80a18:	4b05      	ldr	r3, [pc, #20]	; (80a30 <cpu_irq_leave_critical+0x24>)
   80a1a:	781b      	ldrb	r3, [r3, #0]
   80a1c:	b12b      	cbz	r3, 80a2a <cpu_irq_leave_critical+0x1e>
   80a1e:	2201      	movs	r2, #1
   80a20:	4b04      	ldr	r3, [pc, #16]	; (80a34 <cpu_irq_leave_critical+0x28>)
   80a22:	701a      	strb	r2, [r3, #0]
   80a24:	f3bf 8f5f 	dmb	sy
   80a28:	b662      	cpsie	i
   80a2a:	4770      	bx	lr
   80a2c:	20001068 	.word	0x20001068
   80a30:	2000106c 	.word	0x2000106c
   80a34:	20000124 	.word	0x20000124

00080a38 <pwm_clocks_generate>:
   80a38:	b4f0      	push	{r4, r5, r6, r7}
   80a3a:	b08c      	sub	sp, #48	; 0x30
   80a3c:	4607      	mov	r7, r0
   80a3e:	460e      	mov	r6, r1
   80a40:	ac01      	add	r4, sp, #4
   80a42:	4d11      	ldr	r5, [pc, #68]	; (80a88 <pwm_clocks_generate+0x50>)
   80a44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80a46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80a48:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80a4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80a4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80a50:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80a54:	aa01      	add	r2, sp, #4
   80a56:	2300      	movs	r3, #0
   80a58:	f852 0b04 	ldr.w	r0, [r2], #4
   80a5c:	fbb6 f0f0 	udiv	r0, r6, r0
   80a60:	fbb0 f0f7 	udiv	r0, r0, r7
   80a64:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   80a68:	d907      	bls.n	80a7a <pwm_clocks_generate+0x42>
   80a6a:	3301      	adds	r3, #1
   80a6c:	2b0b      	cmp	r3, #11
   80a6e:	d1f3      	bne.n	80a58 <pwm_clocks_generate+0x20>
   80a70:	f64f 70ff 	movw	r0, #65535	; 0xffff
   80a74:	b00c      	add	sp, #48	; 0x30
   80a76:	bcf0      	pop	{r4, r5, r6, r7}
   80a78:	4770      	bx	lr
   80a7a:	2b0a      	cmp	r3, #10
   80a7c:	bf94      	ite	ls
   80a7e:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
   80a82:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
   80a86:	e7f5      	b.n	80a74 <pwm_clocks_generate+0x3c>
   80a88:	00088328 	.word	0x00088328

00080a8c <pwm_init>:
   80a8c:	b570      	push	{r4, r5, r6, lr}
   80a8e:	4606      	mov	r6, r0
   80a90:	460d      	mov	r5, r1
   80a92:	680c      	ldr	r4, [r1, #0]
   80a94:	b144      	cbz	r4, 80aa8 <pwm_init+0x1c>
   80a96:	6889      	ldr	r1, [r1, #8]
   80a98:	4620      	mov	r0, r4
   80a9a:	4b0c      	ldr	r3, [pc, #48]	; (80acc <pwm_init+0x40>)
   80a9c:	4798      	blx	r3
   80a9e:	4604      	mov	r4, r0
   80aa0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80aa4:	4298      	cmp	r0, r3
   80aa6:	d00c      	beq.n	80ac2 <pwm_init+0x36>
   80aa8:	6868      	ldr	r0, [r5, #4]
   80aaa:	b140      	cbz	r0, 80abe <pwm_init+0x32>
   80aac:	68a9      	ldr	r1, [r5, #8]
   80aae:	4b07      	ldr	r3, [pc, #28]	; (80acc <pwm_init+0x40>)
   80ab0:	4798      	blx	r3
   80ab2:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80ab6:	4298      	cmp	r0, r3
   80ab8:	d005      	beq.n	80ac6 <pwm_init+0x3a>
   80aba:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
   80abe:	6034      	str	r4, [r6, #0]
   80ac0:	2400      	movs	r4, #0
   80ac2:	4620      	mov	r0, r4
   80ac4:	bd70      	pop	{r4, r5, r6, pc}
   80ac6:	4604      	mov	r4, r0
   80ac8:	e7fb      	b.n	80ac2 <pwm_init+0x36>
   80aca:	bf00      	nop
   80acc:	00080a39 	.word	0x00080a39

00080ad0 <pwm_channel_init>:
   80ad0:	b470      	push	{r4, r5, r6}
   80ad2:	680a      	ldr	r2, [r1, #0]
   80ad4:	684b      	ldr	r3, [r1, #4]
   80ad6:	f003 030f 	and.w	r3, r3, #15
   80ada:	8a8c      	ldrh	r4, [r1, #20]
   80adc:	4323      	orrs	r3, r4
   80ade:	890c      	ldrh	r4, [r1, #8]
   80ae0:	4323      	orrs	r3, r4
   80ae2:	7a8c      	ldrb	r4, [r1, #10]
   80ae4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
   80ae8:	7d8c      	ldrb	r4, [r1, #22]
   80aea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80aee:	7dcc      	ldrb	r4, [r1, #23]
   80af0:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
   80af4:	7e0c      	ldrb	r4, [r1, #24]
   80af6:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
   80afa:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80afe:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
   80b02:	68cb      	ldr	r3, [r1, #12]
   80b04:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
   80b08:	690b      	ldr	r3, [r1, #16]
   80b0a:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
   80b0e:	7d8b      	ldrb	r3, [r1, #22]
   80b10:	b13b      	cbz	r3, 80b22 <pwm_channel_init+0x52>
   80b12:	8b8c      	ldrh	r4, [r1, #28]
   80b14:	8b4b      	ldrh	r3, [r1, #26]
   80b16:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80b1a:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80b1e:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   80b22:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80b24:	f04f 1301 	mov.w	r3, #65537	; 0x10001
   80b28:	4093      	lsls	r3, r2
   80b2a:	43db      	mvns	r3, r3
   80b2c:	401d      	ands	r5, r3
   80b2e:	7fcc      	ldrb	r4, [r1, #31]
   80b30:	fa04 f602 	lsl.w	r6, r4, r2
   80b34:	7f8c      	ldrb	r4, [r1, #30]
   80b36:	4094      	lsls	r4, r2
   80b38:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80b3c:	432c      	orrs	r4, r5
   80b3e:	6484      	str	r4, [r0, #72]	; 0x48
   80b40:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80b42:	4023      	ands	r3, r4
   80b44:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
   80b48:	fa04 f502 	lsl.w	r5, r4, r2
   80b4c:	f891 4020 	ldrb.w	r4, [r1, #32]
   80b50:	4094      	lsls	r4, r2
   80b52:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   80b56:	4323      	orrs	r3, r4
   80b58:	6443      	str	r3, [r0, #68]	; 0x44
   80b5a:	2301      	movs	r3, #1
   80b5c:	4093      	lsls	r3, r2
   80b5e:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   80b62:	b31c      	cbz	r4, 80bac <pwm_channel_init+0xdc>
   80b64:	6a04      	ldr	r4, [r0, #32]
   80b66:	431c      	orrs	r4, r3
   80b68:	6204      	str	r4, [r0, #32]
   80b6a:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80b6e:	2c01      	cmp	r4, #1
   80b70:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80b72:	bf0c      	ite	eq
   80b74:	431c      	orreq	r4, r3
   80b76:	439c      	bicne	r4, r3
   80b78:	6684      	str	r4, [r0, #104]	; 0x68
   80b7a:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   80b7e:	2c01      	cmp	r4, #1
   80b80:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80b82:	bf0c      	ite	eq
   80b84:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
   80b88:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
   80b8c:	6683      	str	r3, [r0, #104]	; 0x68
   80b8e:	00d2      	lsls	r2, r2, #3
   80b90:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
   80b92:	23ff      	movs	r3, #255	; 0xff
   80b94:	4093      	lsls	r3, r2
   80b96:	ea24 0403 	bic.w	r4, r4, r3
   80b9a:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   80b9e:	fa03 f202 	lsl.w	r2, r3, r2
   80ba2:	4322      	orrs	r2, r4
   80ba4:	66c2      	str	r2, [r0, #108]	; 0x6c
   80ba6:	2000      	movs	r0, #0
   80ba8:	bc70      	pop	{r4, r5, r6}
   80baa:	4770      	bx	lr
   80bac:	6a04      	ldr	r4, [r0, #32]
   80bae:	ea24 0403 	bic.w	r4, r4, r3
   80bb2:	6204      	str	r4, [r0, #32]
   80bb4:	e7d9      	b.n	80b6a <pwm_channel_init+0x9a>

00080bb6 <pwm_channel_enable>:
   80bb6:	2301      	movs	r3, #1
   80bb8:	fa03 f101 	lsl.w	r1, r3, r1
   80bbc:	6041      	str	r1, [r0, #4]
   80bbe:	4770      	bx	lr

00080bc0 <pwm_channel_disable>:
   80bc0:	2301      	movs	r3, #1
   80bc2:	fa03 f101 	lsl.w	r1, r3, r1
   80bc6:	6081      	str	r1, [r0, #8]
   80bc8:	4770      	bx	lr
	...

00080bcc <rstc_start_software_reset>:
   80bcc:	4b01      	ldr	r3, [pc, #4]	; (80bd4 <rstc_start_software_reset+0x8>)
   80bce:	6003      	str	r3, [r0, #0]
   80bd0:	4770      	bx	lr
   80bd2:	bf00      	nop
   80bd4:	a5000005 	.word	0xa5000005

00080bd8 <rtc_enable_interrupt>:
   80bd8:	6201      	str	r1, [r0, #32]
   80bda:	4770      	bx	lr

00080bdc <rtc_get_time>:
   80bdc:	b430      	push	{r4, r5}
   80bde:	6885      	ldr	r5, [r0, #8]
   80be0:	6884      	ldr	r4, [r0, #8]
   80be2:	42a5      	cmp	r5, r4
   80be4:	d003      	beq.n	80bee <rtc_get_time+0x12>
   80be6:	6885      	ldr	r5, [r0, #8]
   80be8:	6884      	ldr	r4, [r0, #8]
   80bea:	42ac      	cmp	r4, r5
   80bec:	d1fb      	bne.n	80be6 <rtc_get_time+0xa>
   80bee:	b161      	cbz	r1, 80c0a <rtc_get_time+0x2e>
   80bf0:	f3c4 5001 	ubfx	r0, r4, #20, #2
   80bf4:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80bf8:	f3c4 4003 	ubfx	r0, r4, #16, #4
   80bfc:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80c00:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
   80c04:	bf18      	it	ne
   80c06:	300c      	addne	r0, #12
   80c08:	6008      	str	r0, [r1, #0]
   80c0a:	b142      	cbz	r2, 80c1e <rtc_get_time+0x42>
   80c0c:	f3c4 3102 	ubfx	r1, r4, #12, #3
   80c10:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80c14:	f3c4 2003 	ubfx	r0, r4, #8, #4
   80c18:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   80c1c:	6011      	str	r1, [r2, #0]
   80c1e:	b143      	cbz	r3, 80c32 <rtc_get_time+0x56>
   80c20:	f3c4 1202 	ubfx	r2, r4, #4, #3
   80c24:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80c28:	f004 040f 	and.w	r4, r4, #15
   80c2c:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   80c30:	601c      	str	r4, [r3, #0]
   80c32:	bc30      	pop	{r4, r5}
   80c34:	4770      	bx	lr
	...

00080c38 <rtc_set_time>:
   80c38:	b4f0      	push	{r4, r5, r6, r7}
   80c3a:	6844      	ldr	r4, [r0, #4]
   80c3c:	f014 0f01 	tst.w	r4, #1
   80c40:	d005      	beq.n	80c4e <rtc_set_time+0x16>
   80c42:	290c      	cmp	r1, #12
   80c44:	d93d      	bls.n	80cc2 <rtc_set_time+0x8a>
   80c46:	390c      	subs	r1, #12
   80c48:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   80c4c:	e000      	b.n	80c50 <rtc_set_time+0x18>
   80c4e:	2700      	movs	r7, #0
   80c50:	4c1d      	ldr	r4, [pc, #116]	; (80cc8 <rtc_set_time+0x90>)
   80c52:	fba4 5603 	umull	r5, r6, r4, r3
   80c56:	08f6      	lsrs	r6, r6, #3
   80c58:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   80c5c:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   80c60:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
   80c64:	fba4 6502 	umull	r6, r5, r4, r2
   80c68:	08ed      	lsrs	r5, r5, #3
   80c6a:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
   80c6e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80c72:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   80c76:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80c7a:	433b      	orrs	r3, r7
   80c7c:	fba4 4201 	umull	r4, r2, r4, r1
   80c80:	08d2      	lsrs	r2, r2, #3
   80c82:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
   80c86:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80c8a:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
   80c8e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   80c92:	6983      	ldr	r3, [r0, #24]
   80c94:	f013 0f04 	tst.w	r3, #4
   80c98:	d0fb      	beq.n	80c92 <rtc_set_time+0x5a>
   80c9a:	6803      	ldr	r3, [r0, #0]
   80c9c:	f043 0301 	orr.w	r3, r3, #1
   80ca0:	6003      	str	r3, [r0, #0]
   80ca2:	6983      	ldr	r3, [r0, #24]
   80ca4:	f013 0f01 	tst.w	r3, #1
   80ca8:	d0fb      	beq.n	80ca2 <rtc_set_time+0x6a>
   80caa:	2301      	movs	r3, #1
   80cac:	61c3      	str	r3, [r0, #28]
   80cae:	6081      	str	r1, [r0, #8]
   80cb0:	6803      	ldr	r3, [r0, #0]
   80cb2:	f023 0301 	bic.w	r3, r3, #1
   80cb6:	6003      	str	r3, [r0, #0]
   80cb8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80cba:	f000 0001 	and.w	r0, r0, #1
   80cbe:	bcf0      	pop	{r4, r5, r6, r7}
   80cc0:	4770      	bx	lr
   80cc2:	2700      	movs	r7, #0
   80cc4:	e7c4      	b.n	80c50 <rtc_set_time+0x18>
   80cc6:	bf00      	nop
   80cc8:	cccccccd 	.word	0xcccccccd

00080ccc <rtc_get_date>:
   80ccc:	b4f0      	push	{r4, r5, r6, r7}
   80cce:	9e04      	ldr	r6, [sp, #16]
   80cd0:	68c5      	ldr	r5, [r0, #12]
   80cd2:	68c4      	ldr	r4, [r0, #12]
   80cd4:	42a5      	cmp	r5, r4
   80cd6:	d003      	beq.n	80ce0 <rtc_get_date+0x14>
   80cd8:	68c5      	ldr	r5, [r0, #12]
   80cda:	68c4      	ldr	r4, [r0, #12]
   80cdc:	42ac      	cmp	r4, r5
   80cde:	d1fb      	bne.n	80cd8 <rtc_get_date+0xc>
   80ce0:	b199      	cbz	r1, 80d0a <rtc_get_date+0x3e>
   80ce2:	f3c4 3003 	ubfx	r0, r4, #12, #4
   80ce6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80cea:	f3c4 2703 	ubfx	r7, r4, #8, #4
   80cee:	eb07 0740 	add.w	r7, r7, r0, lsl #1
   80cf2:	f3c4 1002 	ubfx	r0, r4, #4, #3
   80cf6:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80cfa:	f004 000f 	and.w	r0, r4, #15
   80cfe:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80d02:	2564      	movs	r5, #100	; 0x64
   80d04:	fb05 7000 	mla	r0, r5, r0, r7
   80d08:	6008      	str	r0, [r1, #0]
   80d0a:	b142      	cbz	r2, 80d1e <rtc_get_date+0x52>
   80d0c:	f3c4 5000 	ubfx	r0, r4, #20, #1
   80d10:	0081      	lsls	r1, r0, #2
   80d12:	4408      	add	r0, r1
   80d14:	f3c4 4103 	ubfx	r1, r4, #16, #4
   80d18:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   80d1c:	6011      	str	r1, [r2, #0]
   80d1e:	b143      	cbz	r3, 80d32 <rtc_get_date+0x66>
   80d20:	f3c4 7201 	ubfx	r2, r4, #28, #2
   80d24:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80d28:	f3c4 6103 	ubfx	r1, r4, #24, #4
   80d2c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   80d30:	601a      	str	r2, [r3, #0]
   80d32:	b116      	cbz	r6, 80d3a <rtc_get_date+0x6e>
   80d34:	f3c4 5442 	ubfx	r4, r4, #21, #3
   80d38:	6034      	str	r4, [r6, #0]
   80d3a:	bcf0      	pop	{r4, r5, r6, r7}
   80d3c:	4770      	bx	lr
	...

00080d40 <rtc_set_date>:
   80d40:	b470      	push	{r4, r5, r6}
   80d42:	4d2a      	ldr	r5, [pc, #168]	; (80dec <rtc_set_date+0xac>)
   80d44:	fba5 4603 	umull	r4, r6, r5, r3
   80d48:	08f6      	lsrs	r6, r6, #3
   80d4a:	9c03      	ldr	r4, [sp, #12]
   80d4c:	0564      	lsls	r4, r4, #21
   80d4e:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
   80d52:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   80d56:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
   80d5a:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
   80d5e:	fba5 6402 	umull	r6, r4, r5, r2
   80d62:	08e4      	lsrs	r4, r4, #3
   80d64:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
   80d68:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80d6c:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
   80d70:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   80d74:	4b1e      	ldr	r3, [pc, #120]	; (80df0 <rtc_set_date+0xb0>)
   80d76:	fba3 4301 	umull	r4, r3, r3, r1
   80d7a:	099b      	lsrs	r3, r3, #6
   80d7c:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
   80d80:	4b1c      	ldr	r3, [pc, #112]	; (80df4 <rtc_set_date+0xb4>)
   80d82:	fba3 4301 	umull	r4, r3, r3, r1
   80d86:	095b      	lsrs	r3, r3, #5
   80d88:	fba5 6403 	umull	r6, r4, r5, r3
   80d8c:	08e4      	lsrs	r4, r4, #3
   80d8e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80d92:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
   80d96:	431a      	orrs	r2, r3
   80d98:	fba5 4301 	umull	r4, r3, r5, r1
   80d9c:	08db      	lsrs	r3, r3, #3
   80d9e:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   80da2:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
   80da6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   80daa:	fba5 1503 	umull	r1, r5, r5, r3
   80dae:	08ed      	lsrs	r5, r5, #3
   80db0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80db4:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
   80db8:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
   80dbc:	6983      	ldr	r3, [r0, #24]
   80dbe:	f013 0f04 	tst.w	r3, #4
   80dc2:	d0fb      	beq.n	80dbc <rtc_set_date+0x7c>
   80dc4:	6803      	ldr	r3, [r0, #0]
   80dc6:	f043 0302 	orr.w	r3, r3, #2
   80dca:	6003      	str	r3, [r0, #0]
   80dcc:	6983      	ldr	r3, [r0, #24]
   80dce:	f013 0f01 	tst.w	r3, #1
   80dd2:	d0fb      	beq.n	80dcc <rtc_set_date+0x8c>
   80dd4:	2301      	movs	r3, #1
   80dd6:	61c3      	str	r3, [r0, #28]
   80dd8:	60c2      	str	r2, [r0, #12]
   80dda:	6803      	ldr	r3, [r0, #0]
   80ddc:	f023 0302 	bic.w	r3, r3, #2
   80de0:	6003      	str	r3, [r0, #0]
   80de2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80de4:	f000 0002 	and.w	r0, r0, #2
   80de8:	bc70      	pop	{r4, r5, r6}
   80dea:	4770      	bx	lr
   80dec:	cccccccd 	.word	0xcccccccd
   80df0:	10624dd3 	.word	0x10624dd3
   80df4:	51eb851f 	.word	0x51eb851f

00080df8 <rtc_clear_status>:
   80df8:	61c1      	str	r1, [r0, #28]
   80dfa:	4770      	bx	lr

00080dfc <tc_init>:
   80dfc:	b410      	push	{r4}
   80dfe:	0189      	lsls	r1, r1, #6
   80e00:	1843      	adds	r3, r0, r1
   80e02:	2402      	movs	r4, #2
   80e04:	5044      	str	r4, [r0, r1]
   80e06:	f04f 31ff 	mov.w	r1, #4294967295
   80e0a:	6299      	str	r1, [r3, #40]	; 0x28
   80e0c:	6a19      	ldr	r1, [r3, #32]
   80e0e:	605a      	str	r2, [r3, #4]
   80e10:	bc10      	pop	{r4}
   80e12:	4770      	bx	lr

00080e14 <tc_start>:
   80e14:	0189      	lsls	r1, r1, #6
   80e16:	2305      	movs	r3, #5
   80e18:	5043      	str	r3, [r0, r1]
   80e1a:	4770      	bx	lr

00080e1c <tc_write_ra>:
   80e1c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80e20:	614a      	str	r2, [r1, #20]
   80e22:	4770      	bx	lr

00080e24 <tc_write_rc>:
   80e24:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80e28:	61ca      	str	r2, [r1, #28]
   80e2a:	4770      	bx	lr

00080e2c <tc_enable_interrupt>:
   80e2c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80e30:	624a      	str	r2, [r1, #36]	; 0x24
   80e32:	4770      	bx	lr

00080e34 <tc_get_status>:
   80e34:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80e38:	6a08      	ldr	r0, [r1, #32]
   80e3a:	4770      	bx	lr

00080e3c <uart_init>:
   80e3c:	b410      	push	{r4}
   80e3e:	23ac      	movs	r3, #172	; 0xac
   80e40:	6003      	str	r3, [r0, #0]
   80e42:	680b      	ldr	r3, [r1, #0]
   80e44:	684a      	ldr	r2, [r1, #4]
   80e46:	fbb3 f3f2 	udiv	r3, r3, r2
   80e4a:	091b      	lsrs	r3, r3, #4
   80e4c:	1e5c      	subs	r4, r3, #1
   80e4e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80e52:	4294      	cmp	r4, r2
   80e54:	d80b      	bhi.n	80e6e <uart_init+0x32>
   80e56:	6203      	str	r3, [r0, #32]
   80e58:	688b      	ldr	r3, [r1, #8]
   80e5a:	6043      	str	r3, [r0, #4]
   80e5c:	f240 2302 	movw	r3, #514	; 0x202
   80e60:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   80e64:	2350      	movs	r3, #80	; 0x50
   80e66:	6003      	str	r3, [r0, #0]
   80e68:	2000      	movs	r0, #0
   80e6a:	bc10      	pop	{r4}
   80e6c:	4770      	bx	lr
   80e6e:	2001      	movs	r0, #1
   80e70:	e7fb      	b.n	80e6a <uart_init+0x2e>

00080e72 <uart_enable_interrupt>:
   80e72:	6081      	str	r1, [r0, #8]
   80e74:	4770      	bx	lr

00080e76 <uart_disable_interrupt>:
   80e76:	60c1      	str	r1, [r0, #12]
   80e78:	4770      	bx	lr

00080e7a <uart_get_status>:
   80e7a:	6940      	ldr	r0, [r0, #20]
   80e7c:	4770      	bx	lr

00080e7e <uart_is_rx_ready>:
   80e7e:	6940      	ldr	r0, [r0, #20]
   80e80:	f000 0001 	and.w	r0, r0, #1
   80e84:	4770      	bx	lr

00080e86 <uart_read>:
   80e86:	6943      	ldr	r3, [r0, #20]
   80e88:	f013 0f01 	tst.w	r3, #1
   80e8c:	bf1d      	ittte	ne
   80e8e:	6983      	ldrne	r3, [r0, #24]
   80e90:	700b      	strbne	r3, [r1, #0]
   80e92:	2000      	movne	r0, #0
   80e94:	2001      	moveq	r0, #1
   80e96:	4770      	bx	lr

00080e98 <wdt_disable>:
   80e98:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80e9c:	6043      	str	r3, [r0, #4]
   80e9e:	4770      	bx	lr

00080ea0 <Dummy_Handler>:
   80ea0:	e7fe      	b.n	80ea0 <Dummy_Handler>
	...

00080ea4 <Reset_Handler>:
   80ea4:	b508      	push	{r3, lr}
   80ea6:	4b1c      	ldr	r3, [pc, #112]	; (80f18 <Reset_Handler+0x74>)
   80ea8:	4a1c      	ldr	r2, [pc, #112]	; (80f1c <Reset_Handler+0x78>)
   80eaa:	429a      	cmp	r2, r3
   80eac:	d010      	beq.n	80ed0 <Reset_Handler+0x2c>
   80eae:	4b1c      	ldr	r3, [pc, #112]	; (80f20 <Reset_Handler+0x7c>)
   80eb0:	4a19      	ldr	r2, [pc, #100]	; (80f18 <Reset_Handler+0x74>)
   80eb2:	429a      	cmp	r2, r3
   80eb4:	d20c      	bcs.n	80ed0 <Reset_Handler+0x2c>
   80eb6:	3b01      	subs	r3, #1
   80eb8:	1a9b      	subs	r3, r3, r2
   80eba:	f023 0303 	bic.w	r3, r3, #3
   80ebe:	3304      	adds	r3, #4
   80ec0:	4413      	add	r3, r2
   80ec2:	4916      	ldr	r1, [pc, #88]	; (80f1c <Reset_Handler+0x78>)
   80ec4:	f851 0b04 	ldr.w	r0, [r1], #4
   80ec8:	f842 0b04 	str.w	r0, [r2], #4
   80ecc:	429a      	cmp	r2, r3
   80ece:	d1f9      	bne.n	80ec4 <Reset_Handler+0x20>
   80ed0:	4b14      	ldr	r3, [pc, #80]	; (80f24 <Reset_Handler+0x80>)
   80ed2:	4a15      	ldr	r2, [pc, #84]	; (80f28 <Reset_Handler+0x84>)
   80ed4:	429a      	cmp	r2, r3
   80ed6:	d20a      	bcs.n	80eee <Reset_Handler+0x4a>
   80ed8:	3b01      	subs	r3, #1
   80eda:	1a9b      	subs	r3, r3, r2
   80edc:	f023 0303 	bic.w	r3, r3, #3
   80ee0:	3304      	adds	r3, #4
   80ee2:	4413      	add	r3, r2
   80ee4:	2100      	movs	r1, #0
   80ee6:	f842 1b04 	str.w	r1, [r2], #4
   80eea:	4293      	cmp	r3, r2
   80eec:	d1fb      	bne.n	80ee6 <Reset_Handler+0x42>
   80eee:	4b0f      	ldr	r3, [pc, #60]	; (80f2c <Reset_Handler+0x88>)
   80ef0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80ef4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80ef8:	490d      	ldr	r1, [pc, #52]	; (80f30 <Reset_Handler+0x8c>)
   80efa:	608a      	str	r2, [r1, #8]
   80efc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80f00:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
   80f04:	d203      	bcs.n	80f0e <Reset_Handler+0x6a>
   80f06:	688b      	ldr	r3, [r1, #8]
   80f08:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80f0c:	608b      	str	r3, [r1, #8]
   80f0e:	4b09      	ldr	r3, [pc, #36]	; (80f34 <Reset_Handler+0x90>)
   80f10:	4798      	blx	r3
   80f12:	4b09      	ldr	r3, [pc, #36]	; (80f38 <Reset_Handler+0x94>)
   80f14:	4798      	blx	r3
   80f16:	e7fe      	b.n	80f16 <Reset_Handler+0x72>
   80f18:	20000000 	.word	0x20000000
   80f1c:	0008935c 	.word	0x0008935c
   80f20:	20000fd8 	.word	0x20000fd8
   80f24:	20001860 	.word	0x20001860
   80f28:	20000fd8 	.word	0x20000fd8
   80f2c:	00080000 	.word	0x00080000
   80f30:	e000ed00 	.word	0xe000ed00
   80f34:	00083815 	.word	0x00083815
   80f38:	000837a1 	.word	0x000837a1

00080f3c <SystemCoreClockUpdate>:
   80f3c:	4b3d      	ldr	r3, [pc, #244]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80f3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f40:	f003 0303 	and.w	r3, r3, #3
   80f44:	2b03      	cmp	r3, #3
   80f46:	d80e      	bhi.n	80f66 <SystemCoreClockUpdate+0x2a>
   80f48:	e8df f003 	tbb	[pc, r3]
   80f4c:	38381c02 	.word	0x38381c02
   80f50:	4b39      	ldr	r3, [pc, #228]	; (81038 <SystemCoreClockUpdate+0xfc>)
   80f52:	695b      	ldr	r3, [r3, #20]
   80f54:	f013 0f80 	tst.w	r3, #128	; 0x80
   80f58:	bf14      	ite	ne
   80f5a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   80f5e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80f62:	4b36      	ldr	r3, [pc, #216]	; (8103c <SystemCoreClockUpdate+0x100>)
   80f64:	601a      	str	r2, [r3, #0]
   80f66:	4b33      	ldr	r3, [pc, #204]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80f68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f6a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f6e:	2b70      	cmp	r3, #112	; 0x70
   80f70:	d057      	beq.n	81022 <SystemCoreClockUpdate+0xe6>
   80f72:	4b30      	ldr	r3, [pc, #192]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80f74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80f76:	4931      	ldr	r1, [pc, #196]	; (8103c <SystemCoreClockUpdate+0x100>)
   80f78:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80f7c:	680b      	ldr	r3, [r1, #0]
   80f7e:	40d3      	lsrs	r3, r2
   80f80:	600b      	str	r3, [r1, #0]
   80f82:	4770      	bx	lr
   80f84:	4b2b      	ldr	r3, [pc, #172]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80f86:	6a1b      	ldr	r3, [r3, #32]
   80f88:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f8c:	d003      	beq.n	80f96 <SystemCoreClockUpdate+0x5a>
   80f8e:	4a2c      	ldr	r2, [pc, #176]	; (81040 <SystemCoreClockUpdate+0x104>)
   80f90:	4b2a      	ldr	r3, [pc, #168]	; (8103c <SystemCoreClockUpdate+0x100>)
   80f92:	601a      	str	r2, [r3, #0]
   80f94:	e7e7      	b.n	80f66 <SystemCoreClockUpdate+0x2a>
   80f96:	4a2b      	ldr	r2, [pc, #172]	; (81044 <SystemCoreClockUpdate+0x108>)
   80f98:	4b28      	ldr	r3, [pc, #160]	; (8103c <SystemCoreClockUpdate+0x100>)
   80f9a:	601a      	str	r2, [r3, #0]
   80f9c:	4b25      	ldr	r3, [pc, #148]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80f9e:	6a1b      	ldr	r3, [r3, #32]
   80fa0:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80fa4:	2b10      	cmp	r3, #16
   80fa6:	d005      	beq.n	80fb4 <SystemCoreClockUpdate+0x78>
   80fa8:	2b20      	cmp	r3, #32
   80faa:	d1dc      	bne.n	80f66 <SystemCoreClockUpdate+0x2a>
   80fac:	4a24      	ldr	r2, [pc, #144]	; (81040 <SystemCoreClockUpdate+0x104>)
   80fae:	4b23      	ldr	r3, [pc, #140]	; (8103c <SystemCoreClockUpdate+0x100>)
   80fb0:	601a      	str	r2, [r3, #0]
   80fb2:	e7d8      	b.n	80f66 <SystemCoreClockUpdate+0x2a>
   80fb4:	4a24      	ldr	r2, [pc, #144]	; (81048 <SystemCoreClockUpdate+0x10c>)
   80fb6:	4b21      	ldr	r3, [pc, #132]	; (8103c <SystemCoreClockUpdate+0x100>)
   80fb8:	601a      	str	r2, [r3, #0]
   80fba:	e7d4      	b.n	80f66 <SystemCoreClockUpdate+0x2a>
   80fbc:	4b1d      	ldr	r3, [pc, #116]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80fbe:	6a1b      	ldr	r3, [r3, #32]
   80fc0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80fc4:	d00c      	beq.n	80fe0 <SystemCoreClockUpdate+0xa4>
   80fc6:	4a1e      	ldr	r2, [pc, #120]	; (81040 <SystemCoreClockUpdate+0x104>)
   80fc8:	4b1c      	ldr	r3, [pc, #112]	; (8103c <SystemCoreClockUpdate+0x100>)
   80fca:	601a      	str	r2, [r3, #0]
   80fcc:	4b19      	ldr	r3, [pc, #100]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80fce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80fd0:	f003 0303 	and.w	r3, r3, #3
   80fd4:	2b02      	cmp	r3, #2
   80fd6:	d016      	beq.n	81006 <SystemCoreClockUpdate+0xca>
   80fd8:	4a1c      	ldr	r2, [pc, #112]	; (8104c <SystemCoreClockUpdate+0x110>)
   80fda:	4b18      	ldr	r3, [pc, #96]	; (8103c <SystemCoreClockUpdate+0x100>)
   80fdc:	601a      	str	r2, [r3, #0]
   80fde:	e7c2      	b.n	80f66 <SystemCoreClockUpdate+0x2a>
   80fe0:	4a18      	ldr	r2, [pc, #96]	; (81044 <SystemCoreClockUpdate+0x108>)
   80fe2:	4b16      	ldr	r3, [pc, #88]	; (8103c <SystemCoreClockUpdate+0x100>)
   80fe4:	601a      	str	r2, [r3, #0]
   80fe6:	4b13      	ldr	r3, [pc, #76]	; (81034 <SystemCoreClockUpdate+0xf8>)
   80fe8:	6a1b      	ldr	r3, [r3, #32]
   80fea:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80fee:	2b10      	cmp	r3, #16
   80ff0:	d005      	beq.n	80ffe <SystemCoreClockUpdate+0xc2>
   80ff2:	2b20      	cmp	r3, #32
   80ff4:	d1ea      	bne.n	80fcc <SystemCoreClockUpdate+0x90>
   80ff6:	4a12      	ldr	r2, [pc, #72]	; (81040 <SystemCoreClockUpdate+0x104>)
   80ff8:	4b10      	ldr	r3, [pc, #64]	; (8103c <SystemCoreClockUpdate+0x100>)
   80ffa:	601a      	str	r2, [r3, #0]
   80ffc:	e7e6      	b.n	80fcc <SystemCoreClockUpdate+0x90>
   80ffe:	4a12      	ldr	r2, [pc, #72]	; (81048 <SystemCoreClockUpdate+0x10c>)
   81000:	4b0e      	ldr	r3, [pc, #56]	; (8103c <SystemCoreClockUpdate+0x100>)
   81002:	601a      	str	r2, [r3, #0]
   81004:	e7e2      	b.n	80fcc <SystemCoreClockUpdate+0x90>
   81006:	4a0b      	ldr	r2, [pc, #44]	; (81034 <SystemCoreClockUpdate+0xf8>)
   81008:	6a91      	ldr	r1, [r2, #40]	; 0x28
   8100a:	6a92      	ldr	r2, [r2, #40]	; 0x28
   8100c:	480b      	ldr	r0, [pc, #44]	; (8103c <SystemCoreClockUpdate+0x100>)
   8100e:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81012:	6803      	ldr	r3, [r0, #0]
   81014:	fb01 3303 	mla	r3, r1, r3, r3
   81018:	b2d2      	uxtb	r2, r2
   8101a:	fbb3 f3f2 	udiv	r3, r3, r2
   8101e:	6003      	str	r3, [r0, #0]
   81020:	e7a1      	b.n	80f66 <SystemCoreClockUpdate+0x2a>
   81022:	4a06      	ldr	r2, [pc, #24]	; (8103c <SystemCoreClockUpdate+0x100>)
   81024:	6813      	ldr	r3, [r2, #0]
   81026:	490a      	ldr	r1, [pc, #40]	; (81050 <SystemCoreClockUpdate+0x114>)
   81028:	fba1 1303 	umull	r1, r3, r1, r3
   8102c:	085b      	lsrs	r3, r3, #1
   8102e:	6013      	str	r3, [r2, #0]
   81030:	4770      	bx	lr
   81032:	bf00      	nop
   81034:	400e0400 	.word	0x400e0400
   81038:	400e1210 	.word	0x400e1210
   8103c:	20000128 	.word	0x20000128
   81040:	00b71b00 	.word	0x00b71b00
   81044:	003d0900 	.word	0x003d0900
   81048:	007a1200 	.word	0x007a1200
   8104c:	0e4e1c00 	.word	0x0e4e1c00
   81050:	aaaaaaab 	.word	0xaaaaaaab

00081054 <_sbrk>:
   81054:	4b0a      	ldr	r3, [pc, #40]	; (81080 <_sbrk+0x2c>)
   81056:	681b      	ldr	r3, [r3, #0]
   81058:	b153      	cbz	r3, 81070 <_sbrk+0x1c>
   8105a:	4b09      	ldr	r3, [pc, #36]	; (81080 <_sbrk+0x2c>)
   8105c:	681b      	ldr	r3, [r3, #0]
   8105e:	181a      	adds	r2, r3, r0
   81060:	4908      	ldr	r1, [pc, #32]	; (81084 <_sbrk+0x30>)
   81062:	4291      	cmp	r1, r2
   81064:	db08      	blt.n	81078 <_sbrk+0x24>
   81066:	4610      	mov	r0, r2
   81068:	4a05      	ldr	r2, [pc, #20]	; (81080 <_sbrk+0x2c>)
   8106a:	6010      	str	r0, [r2, #0]
   8106c:	4618      	mov	r0, r3
   8106e:	4770      	bx	lr
   81070:	4a05      	ldr	r2, [pc, #20]	; (81088 <_sbrk+0x34>)
   81072:	4b03      	ldr	r3, [pc, #12]	; (81080 <_sbrk+0x2c>)
   81074:	601a      	str	r2, [r3, #0]
   81076:	e7f0      	b.n	8105a <_sbrk+0x6>
   81078:	f04f 30ff 	mov.w	r0, #4294967295
   8107c:	4770      	bx	lr
   8107e:	bf00      	nop
   81080:	20001070 	.word	0x20001070
   81084:	20083ffc 	.word	0x20083ffc
   81088:	20084000 	.word	0x20084000

0008108c <Test>:
	PH_CMD_RELAIS_1,
	PH_CMD_RELAIS_2
};

void Test(uint32_t sc, uint32_t phase)
{
   8108c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81090:	b084      	sub	sp, #16
   81092:	9103      	str	r1, [sp, #12]
	switch(sc)
   81094:	2864      	cmp	r0, #100	; 0x64
   81096:	f000 80dc 	beq.w	81252 <Test+0x1c6>
   8109a:	2866      	cmp	r0, #102	; 0x66
   8109c:	f040 8123 	bne.w	812e6 <Test+0x25a>
		phase<<=8;
		phase&=0xFF00;
		phase|=PH_CMD_MOSFET;
		//no break;
	case TEST_RUN:
		sprintf(buf,"\r\nPH:%d--%d\r\n",*((char*)&phase+1),*((char*)&phase+0));
   810a0:	f89d 700d 	ldrb.w	r7, [sp, #13]
   810a4:	4c9c      	ldr	r4, [pc, #624]	; (81318 <Test+0x28c>)
   810a6:	f89d 300c 	ldrb.w	r3, [sp, #12]
   810aa:	463a      	mov	r2, r7
   810ac:	499b      	ldr	r1, [pc, #620]	; (8131c <Test+0x290>)
   810ae:	4620      	mov	r0, r4
   810b0:	4d9b      	ldr	r5, [pc, #620]	; (81320 <Test+0x294>)
   810b2:	47a8      	blx	r5
		Putstr(buf);
   810b4:	4621      	mov	r1, r4
   810b6:	2067      	movs	r0, #103	; 0x67
   810b8:	4c9a      	ldr	r4, [pc, #616]	; (81324 <Test+0x298>)
   810ba:	47a0      	blx	r4

		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   810bc:	499a      	ldr	r1, [pc, #616]	; (81328 <Test+0x29c>)
   810be:	2067      	movs	r0, #103	; 0x67
   810c0:	47a0      	blx	r4
   810c2:	4d9a      	ldr	r5, [pc, #616]	; (8132c <Test+0x2a0>)
   810c4:	4629      	mov	r1, r5
   810c6:	2067      	movs	r0, #103	; 0x67
   810c8:	47a0      	blx	r4
   810ca:	200e      	movs	r0, #14
   810cc:	4b98      	ldr	r3, [pc, #608]	; (81330 <Test+0x2a4>)
   810ce:	4798      	blx	r3
   810d0:	2800      	cmp	r0, #0
   810d2:	f040 80c9 	bne.w	81268 <Test+0x1dc>
   810d6:	4997      	ldr	r1, [pc, #604]	; (81334 <Test+0x2a8>)
   810d8:	2067      	movs	r0, #103	; 0x67
   810da:	47a0      	blx	r4
   810dc:	4c96      	ldr	r4, [pc, #600]	; (81338 <Test+0x2ac>)
   810de:	4621      	mov	r1, r4
   810e0:	2067      	movs	r0, #103	; 0x67
   810e2:	4e90      	ldr	r6, [pc, #576]	; (81324 <Test+0x298>)
   810e4:	47b0      	blx	r6
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   810e6:	4995      	ldr	r1, [pc, #596]	; (8133c <Test+0x2b0>)
   810e8:	2067      	movs	r0, #103	; 0x67
   810ea:	47b0      	blx	r6
   810ec:	4629      	mov	r1, r5
   810ee:	2067      	movs	r0, #103	; 0x67
   810f0:	47b0      	blx	r6
   810f2:	200f      	movs	r0, #15
   810f4:	4b8e      	ldr	r3, [pc, #568]	; (81330 <Test+0x2a4>)
   810f6:	4798      	blx	r3
   810f8:	2800      	cmp	r0, #0
   810fa:	f040 80ba 	bne.w	81272 <Test+0x1e6>
   810fe:	498d      	ldr	r1, [pc, #564]	; (81334 <Test+0x2a8>)
   81100:	2067      	movs	r0, #103	; 0x67
   81102:	47b0      	blx	r6
   81104:	4621      	mov	r1, r4
   81106:	2067      	movs	r0, #103	; 0x67
   81108:	f8df 8218 	ldr.w	r8, [pc, #536]	; 81324 <Test+0x298>
   8110c:	47c0      	blx	r8
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8110e:	498c      	ldr	r1, [pc, #560]	; (81340 <Test+0x2b4>)
   81110:	2067      	movs	r0, #103	; 0x67
   81112:	47c0      	blx	r8
   81114:	4e8b      	ldr	r6, [pc, #556]	; (81344 <Test+0x2b8>)
   81116:	4631      	mov	r1, r6
   81118:	2067      	movs	r0, #103	; 0x67
   8111a:	47c0      	blx	r8
   8111c:	2010      	movs	r0, #16
   8111e:	4b84      	ldr	r3, [pc, #528]	; (81330 <Test+0x2a4>)
   81120:	4798      	blx	r3
   81122:	2800      	cmp	r0, #0
   81124:	f040 80aa 	bne.w	8127c <Test+0x1f0>
   81128:	4982      	ldr	r1, [pc, #520]	; (81334 <Test+0x2a8>)
   8112a:	2067      	movs	r0, #103	; 0x67
   8112c:	47c0      	blx	r8
   8112e:	4621      	mov	r1, r4
   81130:	2067      	movs	r0, #103	; 0x67
   81132:	f8df 81f0 	ldr.w	r8, [pc, #496]	; 81324 <Test+0x298>
   81136:	47c0      	blx	r8
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   81138:	4983      	ldr	r1, [pc, #524]	; (81348 <Test+0x2bc>)
   8113a:	2067      	movs	r0, #103	; 0x67
   8113c:	47c0      	blx	r8
   8113e:	4631      	mov	r1, r6
   81140:	2067      	movs	r0, #103	; 0x67
   81142:	47c0      	blx	r8
   81144:	2011      	movs	r0, #17
   81146:	4b7a      	ldr	r3, [pc, #488]	; (81330 <Test+0x2a4>)
   81148:	4798      	blx	r3
   8114a:	2800      	cmp	r0, #0
   8114c:	f040 809b 	bne.w	81286 <Test+0x1fa>
   81150:	4978      	ldr	r1, [pc, #480]	; (81334 <Test+0x2a8>)
   81152:	2067      	movs	r0, #103	; 0x67
   81154:	47c0      	blx	r8
   81156:	4621      	mov	r1, r4
   81158:	2067      	movs	r0, #103	; 0x67
   8115a:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 81324 <Test+0x298>
   8115e:	47c0      	blx	r8
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81160:	497a      	ldr	r1, [pc, #488]	; (8134c <Test+0x2c0>)
   81162:	2067      	movs	r0, #103	; 0x67
   81164:	47c0      	blx	r8
   81166:	4631      	mov	r1, r6
   81168:	2067      	movs	r0, #103	; 0x67
   8116a:	47c0      	blx	r8
   8116c:	2018      	movs	r0, #24
   8116e:	4b70      	ldr	r3, [pc, #448]	; (81330 <Test+0x2a4>)
   81170:	4798      	blx	r3
   81172:	2800      	cmp	r0, #0
   81174:	f040 808c 	bne.w	81290 <Test+0x204>
   81178:	496e      	ldr	r1, [pc, #440]	; (81334 <Test+0x2a8>)
   8117a:	2067      	movs	r0, #103	; 0x67
   8117c:	47c0      	blx	r8
   8117e:	4621      	mov	r1, r4
   81180:	2067      	movs	r0, #103	; 0x67
   81182:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 81324 <Test+0x298>
   81186:	47c0      	blx	r8
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   81188:	4971      	ldr	r1, [pc, #452]	; (81350 <Test+0x2c4>)
   8118a:	2067      	movs	r0, #103	; 0x67
   8118c:	47c0      	blx	r8
   8118e:	4631      	mov	r1, r6
   81190:	2067      	movs	r0, #103	; 0x67
   81192:	47c0      	blx	r8
   81194:	2019      	movs	r0, #25
   81196:	4b66      	ldr	r3, [pc, #408]	; (81330 <Test+0x2a4>)
   81198:	4798      	blx	r3
   8119a:	2800      	cmp	r0, #0
   8119c:	d17d      	bne.n	8129a <Test+0x20e>
   8119e:	4965      	ldr	r1, [pc, #404]	; (81334 <Test+0x2a8>)
   811a0:	2067      	movs	r0, #103	; 0x67
   811a2:	47c0      	blx	r8
   811a4:	4621      	mov	r1, r4
   811a6:	2067      	movs	r0, #103	; 0x67
   811a8:	4e5e      	ldr	r6, [pc, #376]	; (81324 <Test+0x298>)
   811aa:	47b0      	blx	r6
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   811ac:	4969      	ldr	r1, [pc, #420]	; (81354 <Test+0x2c8>)
   811ae:	2067      	movs	r0, #103	; 0x67
   811b0:	47b0      	blx	r6
   811b2:	4629      	mov	r1, r5
   811b4:	2067      	movs	r0, #103	; 0x67
   811b6:	47b0      	blx	r6
   811b8:	201a      	movs	r0, #26
   811ba:	4b5d      	ldr	r3, [pc, #372]	; (81330 <Test+0x2a4>)
   811bc:	4798      	blx	r3
   811be:	2800      	cmp	r0, #0
   811c0:	d170      	bne.n	812a4 <Test+0x218>
   811c2:	495c      	ldr	r1, [pc, #368]	; (81334 <Test+0x2a8>)
   811c4:	2067      	movs	r0, #103	; 0x67
   811c6:	47b0      	blx	r6
   811c8:	4621      	mov	r1, r4
   811ca:	2067      	movs	r0, #103	; 0x67
   811cc:	4e55      	ldr	r6, [pc, #340]	; (81324 <Test+0x298>)
   811ce:	47b0      	blx	r6
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   811d0:	4961      	ldr	r1, [pc, #388]	; (81358 <Test+0x2cc>)
   811d2:	2067      	movs	r0, #103	; 0x67
   811d4:	47b0      	blx	r6
   811d6:	4629      	mov	r1, r5
   811d8:	2067      	movs	r0, #103	; 0x67
   811da:	47b0      	blx	r6
   811dc:	201b      	movs	r0, #27
   811de:	4b54      	ldr	r3, [pc, #336]	; (81330 <Test+0x2a4>)
   811e0:	4798      	blx	r3
   811e2:	2800      	cmp	r0, #0
   811e4:	d163      	bne.n	812ae <Test+0x222>
   811e6:	4953      	ldr	r1, [pc, #332]	; (81334 <Test+0x2a8>)
   811e8:	2067      	movs	r0, #103	; 0x67
   811ea:	47b0      	blx	r6
   811ec:	4621      	mov	r1, r4
   811ee:	2067      	movs	r0, #103	; 0x67
   811f0:	4e4c      	ldr	r6, [pc, #304]	; (81324 <Test+0x298>)
   811f2:	47b0      	blx	r6
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   811f4:	4959      	ldr	r1, [pc, #356]	; (8135c <Test+0x2d0>)
   811f6:	2067      	movs	r0, #103	; 0x67
   811f8:	47b0      	blx	r6
   811fa:	4629      	mov	r1, r5
   811fc:	2067      	movs	r0, #103	; 0x67
   811fe:	47b0      	blx	r6
   81200:	201c      	movs	r0, #28
   81202:	4b4b      	ldr	r3, [pc, #300]	; (81330 <Test+0x2a4>)
   81204:	4798      	blx	r3
   81206:	2800      	cmp	r0, #0
   81208:	d156      	bne.n	812b8 <Test+0x22c>
   8120a:	494a      	ldr	r1, [pc, #296]	; (81334 <Test+0x2a8>)
   8120c:	2067      	movs	r0, #103	; 0x67
   8120e:	47b0      	blx	r6
   81210:	4621      	mov	r1, r4
   81212:	2067      	movs	r0, #103	; 0x67
   81214:	4e43      	ldr	r6, [pc, #268]	; (81324 <Test+0x298>)
   81216:	47b0      	blx	r6
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81218:	4951      	ldr	r1, [pc, #324]	; (81360 <Test+0x2d4>)
   8121a:	2067      	movs	r0, #103	; 0x67
   8121c:	47b0      	blx	r6
   8121e:	4629      	mov	r1, r5
   81220:	2067      	movs	r0, #103	; 0x67
   81222:	47b0      	blx	r6
   81224:	201d      	movs	r0, #29
   81226:	4b42      	ldr	r3, [pc, #264]	; (81330 <Test+0x2a4>)
   81228:	4798      	blx	r3
   8122a:	2800      	cmp	r0, #0
   8122c:	d149      	bne.n	812c2 <Test+0x236>
   8122e:	4941      	ldr	r1, [pc, #260]	; (81334 <Test+0x2a8>)
   81230:	2067      	movs	r0, #103	; 0x67
   81232:	47b0      	blx	r6
   81234:	4621      	mov	r1, r4
   81236:	2067      	movs	r0, #103	; 0x67
   81238:	4b3a      	ldr	r3, [pc, #232]	; (81324 <Test+0x298>)
   8123a:	4798      	blx	r3

		switch(mBitsMsk(phase,0xFF))
   8123c:	f89d 300c 	ldrb.w	r3, [sp, #12]
   81240:	3b01      	subs	r3, #1
   81242:	2b04      	cmp	r3, #4
   81244:	f200 80a1 	bhi.w	8138a <Test+0x2fe>
   81248:	e8df f003 	tbb	[pc, r3]
   8124c:	5e575040 	.word	0x5e575040
   81250:	98          	.byte	0x98
   81251:	00          	.byte	0x00
		Putstr("\r\nTest started...\r\n");
   81252:	4944      	ldr	r1, [pc, #272]	; (81364 <Test+0x2d8>)
   81254:	2067      	movs	r0, #103	; 0x67
   81256:	4b33      	ldr	r3, [pc, #204]	; (81324 <Test+0x298>)
   81258:	4798      	blx	r3
		phase<<=8;
   8125a:	9b03      	ldr	r3, [sp, #12]
   8125c:	021b      	lsls	r3, r3, #8
		phase&=0xFF00;
   8125e:	b29b      	uxth	r3, r3
		phase|=PH_CMD_MOSFET;
   81260:	f043 0301 	orr.w	r3, r3, #1
   81264:	9303      	str	r3, [sp, #12]
   81266:	e71b      	b.n	810a0 <Test+0x14>
		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   81268:	493f      	ldr	r1, [pc, #252]	; (81368 <Test+0x2dc>)
   8126a:	2067      	movs	r0, #103	; 0x67
   8126c:	4b2d      	ldr	r3, [pc, #180]	; (81324 <Test+0x298>)
   8126e:	4798      	blx	r3
   81270:	e734      	b.n	810dc <Test+0x50>
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81272:	493d      	ldr	r1, [pc, #244]	; (81368 <Test+0x2dc>)
   81274:	2067      	movs	r0, #103	; 0x67
   81276:	4b2b      	ldr	r3, [pc, #172]	; (81324 <Test+0x298>)
   81278:	4798      	blx	r3
   8127a:	e743      	b.n	81104 <Test+0x78>
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8127c:	493a      	ldr	r1, [pc, #232]	; (81368 <Test+0x2dc>)
   8127e:	2067      	movs	r0, #103	; 0x67
   81280:	4b28      	ldr	r3, [pc, #160]	; (81324 <Test+0x298>)
   81282:	4798      	blx	r3
   81284:	e753      	b.n	8112e <Test+0xa2>
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   81286:	4938      	ldr	r1, [pc, #224]	; (81368 <Test+0x2dc>)
   81288:	2067      	movs	r0, #103	; 0x67
   8128a:	4b26      	ldr	r3, [pc, #152]	; (81324 <Test+0x298>)
   8128c:	4798      	blx	r3
   8128e:	e762      	b.n	81156 <Test+0xca>
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81290:	4935      	ldr	r1, [pc, #212]	; (81368 <Test+0x2dc>)
   81292:	2067      	movs	r0, #103	; 0x67
   81294:	4b23      	ldr	r3, [pc, #140]	; (81324 <Test+0x298>)
   81296:	4798      	blx	r3
   81298:	e771      	b.n	8117e <Test+0xf2>
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8129a:	4933      	ldr	r1, [pc, #204]	; (81368 <Test+0x2dc>)
   8129c:	2067      	movs	r0, #103	; 0x67
   8129e:	4b21      	ldr	r3, [pc, #132]	; (81324 <Test+0x298>)
   812a0:	4798      	blx	r3
   812a2:	e77f      	b.n	811a4 <Test+0x118>
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   812a4:	4930      	ldr	r1, [pc, #192]	; (81368 <Test+0x2dc>)
   812a6:	2067      	movs	r0, #103	; 0x67
   812a8:	4b1e      	ldr	r3, [pc, #120]	; (81324 <Test+0x298>)
   812aa:	4798      	blx	r3
   812ac:	e78c      	b.n	811c8 <Test+0x13c>
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   812ae:	492e      	ldr	r1, [pc, #184]	; (81368 <Test+0x2dc>)
   812b0:	2067      	movs	r0, #103	; 0x67
   812b2:	4b1c      	ldr	r3, [pc, #112]	; (81324 <Test+0x298>)
   812b4:	4798      	blx	r3
   812b6:	e799      	b.n	811ec <Test+0x160>
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   812b8:	492b      	ldr	r1, [pc, #172]	; (81368 <Test+0x2dc>)
   812ba:	2067      	movs	r0, #103	; 0x67
   812bc:	4b19      	ldr	r3, [pc, #100]	; (81324 <Test+0x298>)
   812be:	4798      	blx	r3
   812c0:	e7a6      	b.n	81210 <Test+0x184>
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   812c2:	4929      	ldr	r1, [pc, #164]	; (81368 <Test+0x2dc>)
   812c4:	2067      	movs	r0, #103	; 0x67
   812c6:	4b17      	ldr	r3, [pc, #92]	; (81324 <Test+0x298>)
   812c8:	4798      	blx	r3
   812ca:	e7b3      	b.n	81234 <Test+0x1a8>
		{
		case PH_CMD_MOSFET:
			gpio_set_pin_high(CMD_MOSFET);
   812cc:	2020      	movs	r0, #32
   812ce:	4b27      	ldr	r3, [pc, #156]	; (8136c <Test+0x2e0>)
   812d0:	4798      	blx	r3
		}
		break;
	default:
		return;
	}
	PushTask(Test,TEST_RUN,++phase,1000);
   812d2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   812d6:	9300      	str	r3, [sp, #0]
   812d8:	9b03      	ldr	r3, [sp, #12]
   812da:	3301      	adds	r3, #1
   812dc:	2266      	movs	r2, #102	; 0x66
   812de:	4924      	ldr	r1, [pc, #144]	; (81370 <Test+0x2e4>)
   812e0:	4610      	mov	r0, r2
   812e2:	4c24      	ldr	r4, [pc, #144]	; (81374 <Test+0x2e8>)
   812e4:	47a0      	blx	r4
}
   812e6:	b004      	add	sp, #16
   812e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			gpio_set_pin_low(CMD_MOSFET);
   812ec:	2020      	movs	r0, #32
   812ee:	4b22      	ldr	r3, [pc, #136]	; (81378 <Test+0x2ec>)
   812f0:	4798      	blx	r3
			gpio_set_pin_high(CMD_MOT_SERRURE);
   812f2:	2021      	movs	r0, #33	; 0x21
   812f4:	4b1d      	ldr	r3, [pc, #116]	; (8136c <Test+0x2e0>)
   812f6:	4798      	blx	r3
			break;
   812f8:	e7eb      	b.n	812d2 <Test+0x246>
			gpio_set_pin_low(CMD_MOT_SERRURE);
   812fa:	2021      	movs	r0, #33	; 0x21
   812fc:	4b1e      	ldr	r3, [pc, #120]	; (81378 <Test+0x2ec>)
   812fe:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS);
   81300:	2022      	movs	r0, #34	; 0x22
   81302:	4b1a      	ldr	r3, [pc, #104]	; (8136c <Test+0x2e0>)
   81304:	4798      	blx	r3
			break;
   81306:	e7e4      	b.n	812d2 <Test+0x246>
			gpio_set_pin_low(CMD_RELAIS);
   81308:	2022      	movs	r0, #34	; 0x22
   8130a:	4b1b      	ldr	r3, [pc, #108]	; (81378 <Test+0x2ec>)
   8130c:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_1);
   8130e:	2023      	movs	r0, #35	; 0x23
   81310:	4b16      	ldr	r3, [pc, #88]	; (8136c <Test+0x2e0>)
   81312:	4798      	blx	r3
			break;
   81314:	e7dd      	b.n	812d2 <Test+0x246>
   81316:	bf00      	nop
   81318:	200012a8 	.word	0x200012a8
   8131c:	00088374 	.word	0x00088374
   81320:	00083901 	.word	0x00083901
   81324:	00083269 	.word	0x00083269
   81328:	00088384 	.word	0x00088384
   8132c:	00088390 	.word	0x00088390
   81330:	00080729 	.word	0x00080729
   81334:	00088394 	.word	0x00088394
   81338:	000885d0 	.word	0x000885d0
   8133c:	0008839c 	.word	0x0008839c
   81340:	000883a8 	.word	0x000883a8
   81344:	000883ac 	.word	0x000883ac
   81348:	000883b4 	.word	0x000883b4
   8134c:	000883b8 	.word	0x000883b8
   81350:	000883c0 	.word	0x000883c0
   81354:	000883c4 	.word	0x000883c4
   81358:	000883d4 	.word	0x000883d4
   8135c:	000883e0 	.word	0x000883e0
   81360:	000883f0 	.word	0x000883f0
   81364:	00088360 	.word	0x00088360
   81368:	00088398 	.word	0x00088398
   8136c:	00080745 	.word	0x00080745
   81370:	0008108d 	.word	0x0008108d
   81374:	000834a5 	.word	0x000834a5
   81378:	0008075f 	.word	0x0008075f
			gpio_set_pin_low(CMD_RELAIS_1);
   8137c:	2023      	movs	r0, #35	; 0x23
   8137e:	4b13      	ldr	r3, [pc, #76]	; (813cc <Test+0x340>)
   81380:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_2);
   81382:	2024      	movs	r0, #36	; 0x24
   81384:	4b12      	ldr	r3, [pc, #72]	; (813d0 <Test+0x344>)
   81386:	4798      	blx	r3
			break;
   81388:	e7a3      	b.n	812d2 <Test+0x246>
			gpio_set_pin_low(CMD_MOSFET);
   8138a:	2020      	movs	r0, #32
   8138c:	4c0f      	ldr	r4, [pc, #60]	; (813cc <Test+0x340>)
   8138e:	47a0      	blx	r4
			gpio_set_pin_low(CMD_MOT_SERRURE);
   81390:	2021      	movs	r0, #33	; 0x21
   81392:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS);
   81394:	2022      	movs	r0, #34	; 0x22
   81396:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_1);
   81398:	2023      	movs	r0, #35	; 0x23
   8139a:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_2);
   8139c:	2024      	movs	r0, #36	; 0x24
   8139e:	47a0      	blx	r4
			if(*((char*)&phase+1))
   813a0:	b127      	cbz	r7, 813ac <Test+0x320>
				if(--(*((char*)&phase+1)))
   813a2:	3f01      	subs	r7, #1
   813a4:	b2ff      	uxtb	r7, r7
   813a6:	f88d 700d 	strb.w	r7, [sp, #13]
   813aa:	b927      	cbnz	r7, 813b6 <Test+0x32a>
			Putstr("\r\nTest terminated...\r\n");
   813ac:	4909      	ldr	r1, [pc, #36]	; (813d4 <Test+0x348>)
   813ae:	2067      	movs	r0, #103	; 0x67
   813b0:	4b09      	ldr	r3, [pc, #36]	; (813d8 <Test+0x34c>)
   813b2:	4798      	blx	r3
			return;
   813b4:	e797      	b.n	812e6 <Test+0x25a>
					PushTask(Test,TEST_NEW,phase>>8,0);
   813b6:	2300      	movs	r3, #0
   813b8:	9300      	str	r3, [sp, #0]
   813ba:	9b03      	ldr	r3, [sp, #12]
   813bc:	0a1b      	lsrs	r3, r3, #8
   813be:	2264      	movs	r2, #100	; 0x64
   813c0:	4906      	ldr	r1, [pc, #24]	; (813dc <Test+0x350>)
   813c2:	2066      	movs	r0, #102	; 0x66
   813c4:	4c06      	ldr	r4, [pc, #24]	; (813e0 <Test+0x354>)
   813c6:	47a0      	blx	r4
   813c8:	e7f0      	b.n	813ac <Test+0x320>
   813ca:	bf00      	nop
   813cc:	0008075f 	.word	0x0008075f
   813d0:	00080745 	.word	0x00080745
   813d4:	00088400 	.word	0x00088400
   813d8:	00083269 	.word	0x00083269
   813dc:	0008108d 	.word	0x0008108d
   813e0:	000834a5 	.word	0x000834a5

000813e4 <stop>:
	}
	mstrtokRestore();
}

void stop(uint32_t sc, void*pParam)
{
   813e4:	b510      	push	{r4, lr}
	char *pToken;
	switch(sc)
   813e6:	f242 6316 	movw	r3, #9750	; 0x2616
   813ea:	4298      	cmp	r0, r3
   813ec:	d01e      	beq.n	8142c <stop+0x48>
//#else
		//gpio_set_pin_high(BUZZER_PWR);
//#endif
		break;
	default:
		pToken = mstrtok(NULL," \r\n");
   813ee:	491c      	ldr	r1, [pc, #112]	; (81460 <stop+0x7c>)
   813f0:	2000      	movs	r0, #0
   813f2:	4b1c      	ldr	r3, [pc, #112]	; (81464 <stop+0x80>)
   813f4:	4798      	blx	r3
		if(pToken)
   813f6:	4604      	mov	r4, r0
   813f8:	b1a8      	cbz	r0, 81426 <stop+0x42>
		{
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   813fa:	4b1b      	ldr	r3, [pc, #108]	; (81468 <stop+0x84>)
   813fc:	4798      	blx	r3
   813fe:	4601      	mov	r1, r0
   81400:	4620      	mov	r0, r4
   81402:	4b1a      	ldr	r3, [pc, #104]	; (8146c <stop+0x88>)
   81404:	4798      	blx	r3
   81406:	f242 6316 	movw	r3, #9750	; 0x2616
   8140a:	4298      	cmp	r0, r3
   8140c:	d020      	beq.n	81450 <stop+0x6c>
   8140e:	d912      	bls.n	81436 <stop+0x52>
   81410:	f243 132b 	movw	r3, #12587	; 0x312b
   81414:	4298      	cmp	r0, r3
   81416:	d017      	beq.n	81448 <stop+0x64>
   81418:	f24c 6398 	movw	r3, #50840	; 0xc698
   8141c:	4298      	cmp	r0, r3
   8141e:	d102      	bne.n	81426 <stop+0x42>
			{
			case 0xC698:	//lcd
				Lcd(LCD_DEL);
   81420:	2065      	movs	r0, #101	; 0x65
   81422:	4b13      	ldr	r3, [pc, #76]	; (81470 <stop+0x8c>)
   81424:	4798      	blx	r3
				break;
			default:
				break;
			}
		}
		mstrtokRestore();
   81426:	4b13      	ldr	r3, [pc, #76]	; (81474 <stop+0x90>)
   81428:	4798      	blx	r3
   8142a:	bd10      	pop	{r4, pc}
		Putstr("\r\nBuzzer off...\r\n");
   8142c:	4912      	ldr	r1, [pc, #72]	; (81478 <stop+0x94>)
   8142e:	2067      	movs	r0, #103	; 0x67
   81430:	4b12      	ldr	r3, [pc, #72]	; (8147c <stop+0x98>)
   81432:	4798      	blx	r3
		break;
   81434:	bd10      	pop	{r4, pc}
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   81436:	f240 6334 	movw	r3, #1588	; 0x634
   8143a:	4298      	cmp	r0, r3
   8143c:	d1f3      	bne.n	81426 <stop+0x42>
				LcdBacklight(false);
   8143e:	2100      	movs	r1, #0
   81440:	2066      	movs	r0, #102	; 0x66
   81442:	4b0b      	ldr	r3, [pc, #44]	; (81470 <stop+0x8c>)
   81444:	4798      	blx	r3
				break;
   81446:	e7ee      	b.n	81426 <stop+0x42>
				gpio_set_pin_high(BLUETOOTH_PWR);
   81448:	2035      	movs	r0, #53	; 0x35
   8144a:	4b0d      	ldr	r3, [pc, #52]	; (81480 <stop+0x9c>)
   8144c:	4798      	blx	r3
				break;
   8144e:	e7ea      	b.n	81426 <stop+0x42>
				Putstr("\r\nBuzzer off...\r\n");
   81450:	4909      	ldr	r1, [pc, #36]	; (81478 <stop+0x94>)
   81452:	2067      	movs	r0, #103	; 0x67
   81454:	4b09      	ldr	r3, [pc, #36]	; (8147c <stop+0x98>)
   81456:	4798      	blx	r3
				gpio_set_pin_low(BUZZER_PWR);
   81458:	2030      	movs	r0, #48	; 0x30
   8145a:	4b0a      	ldr	r3, [pc, #40]	; (81484 <stop+0xa0>)
   8145c:	4798      	blx	r3
				break;
   8145e:	e7e2      	b.n	81426 <stop+0x42>
   81460:	00088474 	.word	0x00088474
   81464:	00083711 	.word	0x00083711
   81468:	0008394d 	.word	0x0008394d
   8146c:	00081659 	.word	0x00081659
   81470:	00081bc1 	.word	0x00081bc1
   81474:	000836cd 	.word	0x000836cd
   81478:	00088460 	.word	0x00088460
   8147c:	00083269 	.word	0x00083269
   81480:	00080745 	.word	0x00080745
   81484:	0008075f 	.word	0x0008075f

00081488 <start>:
{
   81488:	b570      	push	{r4, r5, r6, lr}
   8148a:	b090      	sub	sp, #64	; 0x40
	pToken = mstrtok(NULL," \r\n");
   8148c:	4957      	ldr	r1, [pc, #348]	; (815ec <start+0x164>)
   8148e:	2000      	movs	r0, #0
   81490:	4b57      	ldr	r3, [pc, #348]	; (815f0 <start+0x168>)
   81492:	4798      	blx	r3
	if(pToken)
   81494:	2800      	cmp	r0, #0
   81496:	f000 8094 	beq.w	815c2 <start+0x13a>
   8149a:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   8149c:	4b55      	ldr	r3, [pc, #340]	; (815f4 <start+0x16c>)
   8149e:	4798      	blx	r3
   814a0:	4601      	mov	r1, r0
   814a2:	4620      	mov	r0, r4
   814a4:	4b54      	ldr	r3, [pc, #336]	; (815f8 <start+0x170>)
   814a6:	4798      	blx	r3
   814a8:	f243 132b 	movw	r3, #12587	; 0x312b
   814ac:	4298      	cmp	r0, r3
   814ae:	f000 8093 	beq.w	815d8 <start+0x150>
   814b2:	d851      	bhi.n	81558 <start+0xd0>
   814b4:	f240 6334 	movw	r3, #1588	; 0x634
   814b8:	4298      	cmp	r0, r3
   814ba:	f000 8086 	beq.w	815ca <start+0x142>
   814be:	f242 6316 	movw	r3, #9750	; 0x2616
   814c2:	4298      	cmp	r0, r3
   814c4:	d17d      	bne.n	815c2 <start+0x13a>
			mstrtokRestore();
   814c6:	4b4d      	ldr	r3, [pc, #308]	; (815fc <start+0x174>)
   814c8:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   814ca:	4948      	ldr	r1, [pc, #288]	; (815ec <start+0x164>)
   814cc:	2000      	movs	r0, #0
   814ce:	4b48      	ldr	r3, [pc, #288]	; (815f0 <start+0x168>)
   814d0:	4798      	blx	r3
			pParam=atoi((char*)pToken);
   814d2:	4b4b      	ldr	r3, [pc, #300]	; (81600 <start+0x178>)
   814d4:	4798      	blx	r3
			if(pParam)
   814d6:	4606      	mov	r6, r0
   814d8:	2800      	cmp	r0, #0
   814da:	d072      	beq.n	815c2 <start+0x13a>
				Putstr("\r\nBuzzer on for ");
   814dc:	4949      	ldr	r1, [pc, #292]	; (81604 <start+0x17c>)
   814de:	2067      	movs	r0, #103	; 0x67
   814e0:	4c49      	ldr	r4, [pc, #292]	; (81608 <start+0x180>)
   814e2:	47a0      	blx	r4
				sprintf(buf,"%d ms...\r\n",(int)pParam);
   814e4:	4d49      	ldr	r5, [pc, #292]	; (8160c <start+0x184>)
   814e6:	4632      	mov	r2, r6
   814e8:	4949      	ldr	r1, [pc, #292]	; (81610 <start+0x188>)
   814ea:	4628      	mov	r0, r5
   814ec:	4b49      	ldr	r3, [pc, #292]	; (81614 <start+0x18c>)
   814ee:	4798      	blx	r3
				Putstr(buf);
   814f0:	4629      	mov	r1, r5
   814f2:	2067      	movs	r0, #103	; 0x67
   814f4:	47a0      	blx	r4
				gpio_configure_pin(BUZZER_PWR,BUZZER_FLAGS);
   814f6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   814fa:	2030      	movs	r0, #48	; 0x30
   814fc:	4b46      	ldr	r3, [pc, #280]	; (81618 <start+0x190>)
   814fe:	4798      	blx	r3
					const pwm_clock_t clockSetting ={
   81500:	4b46      	ldr	r3, [pc, #280]	; (8161c <start+0x194>)
   81502:	ad03      	add	r5, sp, #12
   81504:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   81508:	e885 0007 	stmia.w	r5, {r0, r1, r2}
					pmc_enable_periph_clk(ID_PWM);
   8150c:	2019      	movs	r0, #25
   8150e:	4b44      	ldr	r3, [pc, #272]	; (81620 <start+0x198>)
   81510:	4798      	blx	r3
					pwm_channel_disable(PWM,PWM_CHANNEL_3);
   81512:	4c44      	ldr	r4, [pc, #272]	; (81624 <start+0x19c>)
   81514:	2103      	movs	r1, #3
   81516:	4620      	mov	r0, r4
   81518:	4b43      	ldr	r3, [pc, #268]	; (81628 <start+0x1a0>)
   8151a:	4798      	blx	r3
					pwm_init(PWM,(pwm_clock_t*)&clockSetting);
   8151c:	4629      	mov	r1, r5
   8151e:	4620      	mov	r0, r4
   81520:	4b42      	ldr	r3, [pc, #264]	; (8162c <start+0x1a4>)
   81522:	4798      	blx	r3
					pwmChannelInstance.ul_prescaler=PWM_CMR_CPRE_CLKB;
   81524:	230c      	movs	r3, #12
   81526:	9307      	str	r3, [sp, #28]
					pwmChannelInstance.ul_period=100;
   81528:	2364      	movs	r3, #100	; 0x64
   8152a:	930a      	str	r3, [sp, #40]	; 0x28
					pwmChannelInstance.ul_duty=50;
   8152c:	2332      	movs	r3, #50	; 0x32
   8152e:	9309      	str	r3, [sp, #36]	; 0x24
					pwmChannelInstance.channel=PWM_CHANNEL_3;
   81530:	2503      	movs	r5, #3
   81532:	a910      	add	r1, sp, #64	; 0x40
   81534:	f841 5d28 	str.w	r5, [r1, #-40]!
					pwm_channel_init(PWM,&pwmChannelInstance);
   81538:	4620      	mov	r0, r4
   8153a:	4b3d      	ldr	r3, [pc, #244]	; (81630 <start+0x1a8>)
   8153c:	4798      	blx	r3
					pwm_channel_enable(PWM,PWM_CHANNEL_3);
   8153e:	4629      	mov	r1, r5
   81540:	4620      	mov	r0, r4
   81542:	4b3c      	ldr	r3, [pc, #240]	; (81634 <start+0x1ac>)
   81544:	4798      	blx	r3
				PushTask(stop,0x2616,0,(uint32_t)pParam);
   81546:	9600      	str	r6, [sp, #0]
   81548:	2300      	movs	r3, #0
   8154a:	f242 6216 	movw	r2, #9750	; 0x2616
   8154e:	493a      	ldr	r1, [pc, #232]	; (81638 <start+0x1b0>)
   81550:	2066      	movs	r0, #102	; 0x66
   81552:	4c3a      	ldr	r4, [pc, #232]	; (8163c <start+0x1b4>)
   81554:	47a0      	blx	r4
   81556:	e034      	b.n	815c2 <start+0x13a>
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   81558:	f24c 6398 	movw	r3, #50840	; 0xc698
   8155c:	4298      	cmp	r0, r3
   8155e:	d021      	beq.n	815a4 <start+0x11c>
   81560:	f64d 432e 	movw	r3, #56366	; 0xdc2e
   81564:	4298      	cmp	r0, r3
   81566:	d12c      	bne.n	815c2 <start+0x13a>
			mstrtokRestore();
   81568:	4b24      	ldr	r3, [pc, #144]	; (815fc <start+0x174>)
   8156a:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   8156c:	491f      	ldr	r1, [pc, #124]	; (815ec <start+0x164>)
   8156e:	2000      	movs	r0, #0
   81570:	4b1f      	ldr	r3, [pc, #124]	; (815f0 <start+0x168>)
   81572:	4798      	blx	r3
			if(pToken)
   81574:	2800      	cmp	r0, #0
   81576:	d02d      	beq.n	815d4 <start+0x14c>
				 sc=atoi((char*)pToken);
   81578:	4b21      	ldr	r3, [pc, #132]	; (81600 <start+0x178>)
   8157a:	4798      	blx	r3
   8157c:	4604      	mov	r4, r0
				 sprintf(buf,"\r\nNbTest: %d\r\n",(int)sc);
   8157e:	4d23      	ldr	r5, [pc, #140]	; (8160c <start+0x184>)
   81580:	4602      	mov	r2, r0
   81582:	492f      	ldr	r1, [pc, #188]	; (81640 <start+0x1b8>)
   81584:	4628      	mov	r0, r5
   81586:	4b23      	ldr	r3, [pc, #140]	; (81614 <start+0x18c>)
   81588:	4798      	blx	r3
				 Putstr(buf);
   8158a:	4629      	mov	r1, r5
   8158c:	2067      	movs	r0, #103	; 0x67
   8158e:	4b1e      	ldr	r3, [pc, #120]	; (81608 <start+0x180>)
   81590:	4798      	blx	r3
			PushTask(Test,TEST_NEW,sc,0);
   81592:	2300      	movs	r3, #0
   81594:	9300      	str	r3, [sp, #0]
   81596:	4623      	mov	r3, r4
   81598:	2264      	movs	r2, #100	; 0x64
   8159a:	492a      	ldr	r1, [pc, #168]	; (81644 <start+0x1bc>)
   8159c:	2066      	movs	r0, #102	; 0x66
   8159e:	4c27      	ldr	r4, [pc, #156]	; (8163c <start+0x1b4>)
   815a0:	47a0      	blx	r4
			break;
   815a2:	e00e      	b.n	815c2 <start+0x13a>
			Lcd(LCD_DEL);
   815a4:	2065      	movs	r0, #101	; 0x65
   815a6:	4c28      	ldr	r4, [pc, #160]	; (81648 <start+0x1c0>)
   815a8:	47a0      	blx	r4
			Lcd(LCD_NEW);
   815aa:	2064      	movs	r0, #100	; 0x64
   815ac:	47a0      	blx	r4
			LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   815ae:	2301      	movs	r3, #1
   815b0:	2202      	movs	r2, #2
   815b2:	4926      	ldr	r1, [pc, #152]	; (8164c <start+0x1c4>)
   815b4:	2067      	movs	r0, #103	; 0x67
   815b6:	47a0      	blx	r4
			LcdPutstr("www.a-2-s.fr",3,4);
   815b8:	2304      	movs	r3, #4
   815ba:	2203      	movs	r2, #3
   815bc:	4924      	ldr	r1, [pc, #144]	; (81650 <start+0x1c8>)
   815be:	2067      	movs	r0, #103	; 0x67
   815c0:	47a0      	blx	r4
	mstrtokRestore();
   815c2:	4b0e      	ldr	r3, [pc, #56]	; (815fc <start+0x174>)
   815c4:	4798      	blx	r3
}
   815c6:	b010      	add	sp, #64	; 0x40
   815c8:	bd70      	pop	{r4, r5, r6, pc}
			LcdBacklight(true);
   815ca:	2101      	movs	r1, #1
   815cc:	2066      	movs	r0, #102	; 0x66
   815ce:	4b1e      	ldr	r3, [pc, #120]	; (81648 <start+0x1c0>)
   815d0:	4798      	blx	r3
			break;
   815d2:	e7f6      	b.n	815c2 <start+0x13a>
				sc=1;
   815d4:	2401      	movs	r4, #1
   815d6:	e7dc      	b.n	81592 <start+0x10a>
			gpio_configure_pin(BLUETOOTH_PWR,BLUETOOTH_FLAGS);
   815d8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   815dc:	2035      	movs	r0, #53	; 0x35
   815de:	4b0e      	ldr	r3, [pc, #56]	; (81618 <start+0x190>)
   815e0:	4798      	blx	r3
			gpio_set_pin_low(BLUETOOTH_PWR);
   815e2:	2035      	movs	r0, #53	; 0x35
   815e4:	4b1b      	ldr	r3, [pc, #108]	; (81654 <start+0x1cc>)
   815e6:	4798      	blx	r3
			break;
   815e8:	e7eb      	b.n	815c2 <start+0x13a>
   815ea:	bf00      	nop
   815ec:	00088474 	.word	0x00088474
   815f0:	00083711 	.word	0x00083711
   815f4:	0008394d 	.word	0x0008394d
   815f8:	00081659 	.word	0x00081659
   815fc:	000836cd 	.word	0x000836cd
   81600:	0008380d 	.word	0x0008380d
   81604:	00088440 	.word	0x00088440
   81608:	00083269 	.word	0x00083269
   8160c:	200012a8 	.word	0x200012a8
   81610:	00088454 	.word	0x00088454
   81614:	00083901 	.word	0x00083901
   81618:	00080799 	.word	0x00080799
   8161c:	00088354 	.word	0x00088354
   81620:	00080999 	.word	0x00080999
   81624:	4008c000 	.word	0x4008c000
   81628:	00080bc1 	.word	0x00080bc1
   8162c:	00080a8d 	.word	0x00080a8d
   81630:	00080ad1 	.word	0x00080ad1
   81634:	00080bb7 	.word	0x00080bb7
   81638:	000813e5 	.word	0x000813e5
   8163c:	000834a5 	.word	0x000834a5
   81640:	00088430 	.word	0x00088430
   81644:	0008108d 	.word	0x0008108d
   81648:	00081bc1 	.word	0x00081bc1
   8164c:	000882c0 	.word	0x000882c0
   81650:	000882d4 	.word	0x000882d4
   81654:	0008075f 	.word	0x0008075f

00081658 <CRC16MODBUSFRAME>:
   81658:	b189      	cbz	r1, 8167e <CRC16MODBUSFRAME+0x26>
   8165a:	b410      	push	{r4}
   8165c:	1841      	adds	r1, r0, r1
   8165e:	f64f 72ff 	movw	r2, #65535	; 0xffff
   81662:	4c09      	ldr	r4, [pc, #36]	; (81688 <CRC16MODBUSFRAME+0x30>)
   81664:	f810 3b01 	ldrb.w	r3, [r0], #1
   81668:	4053      	eors	r3, r2
   8166a:	b2db      	uxtb	r3, r3
   8166c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   81670:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
   81674:	4281      	cmp	r1, r0
   81676:	d1f5      	bne.n	81664 <CRC16MODBUSFRAME+0xc>
   81678:	4610      	mov	r0, r2
   8167a:	bc10      	pop	{r4}
   8167c:	4770      	bx	lr
   8167e:	f64f 72ff 	movw	r2, #65535	; 0xffff
   81682:	4610      	mov	r0, r2
   81684:	4770      	bx	lr
   81686:	bf00      	nop
   81688:	2000012c 	.word	0x2000012c

0008168c <CRC16MODBUS>:
   8168c:	4048      	eors	r0, r1
   8168e:	b2c0      	uxtb	r0, r0
   81690:	4b02      	ldr	r3, [pc, #8]	; (8169c <CRC16MODBUS+0x10>)
   81692:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   81696:	ea80 2011 	eor.w	r0, r0, r1, lsr #8
   8169a:	4770      	bx	lr
   8169c:	2000012c 	.word	0x2000012c

000816a0 <Error>:




void Error(uint32_t sc, ...)
{
   816a0:	b40f      	push	{r0, r1, r2, r3}
   816a2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   816a6:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   816a8:	f3bf 8f5f 	dmb	sy
	uint32_t i,k;
#define er sc
	cpu_irq_disable();
   816ac:	2200      	movs	r2, #0
   816ae:	4b65      	ldr	r3, [pc, #404]	; (81844 <Error+0x1a4>)
   816b0:	701a      	strb	r2, [r3, #0]
	gpio_configure_pin(ERROR_LED, ERROR_LED_FLAGS);
   816b2:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   816b6:	2033      	movs	r0, #51	; 0x33
   816b8:	4b63      	ldr	r3, [pc, #396]	; (81848 <Error+0x1a8>)
   816ba:	4798      	blx	r3
   816bc:	f04f 0805 	mov.w	r8, #5
//#if HEART_LED_ACTIVE_LEVEL==1	
	
	for(k=0;k<5;k++)
	{
		gpio_set_pin_high(ERROR_LED);
		delay_ms(3000);
   816c0:	4c62      	ldr	r4, [pc, #392]	; (8184c <Error+0x1ac>)
			delay_ms(1500);
			gpio_set_pin_low(ERROR_LED);
		}
		else
		{
			for(i=0;i<(er/10)*2;i++)
   816c2:	4f63      	ldr	r7, [pc, #396]	; (81850 <Error+0x1b0>)
   816c4:	e031      	b.n	8172a <Error+0x8a>
			gpio_set_pin_high(ERROR_LED);
   816c6:	2033      	movs	r0, #51	; 0x33
   816c8:	4b62      	ldr	r3, [pc, #392]	; (81854 <Error+0x1b4>)
   816ca:	4798      	blx	r3
			delay_ms(1500);
   816cc:	4862      	ldr	r0, [pc, #392]	; (81858 <Error+0x1b8>)
   816ce:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   816d0:	2033      	movs	r0, #51	; 0x33
   816d2:	4b62      	ldr	r3, [pc, #392]	; (8185c <Error+0x1bc>)
   816d4:	4798      	blx	r3
   816d6:	e048      	b.n	8176a <Error+0xca>
		}
		delay_ms(800);

		if((er%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   816d8:	2033      	movs	r0, #51	; 0x33
   816da:	4b5e      	ldr	r3, [pc, #376]	; (81854 <Error+0x1b4>)
   816dc:	4798      	blx	r3
			delay_ms(1500);
   816de:	485e      	ldr	r0, [pc, #376]	; (81858 <Error+0x1b8>)
   816e0:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   816e2:	2033      	movs	r0, #51	; 0x33
   816e4:	4b5d      	ldr	r3, [pc, #372]	; (8185c <Error+0x1bc>)
   816e6:	4798      	blx	r3
   816e8:	e057      	b.n	8179a <Error+0xfa>
		delay_ms(1000);
#undef er
#define _param	pa1
		if((_param/100)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   816ea:	2033      	movs	r0, #51	; 0x33
   816ec:	4b59      	ldr	r3, [pc, #356]	; (81854 <Error+0x1b4>)
   816ee:	4798      	blx	r3
			delay_ms(1500);
   816f0:	4859      	ldr	r0, [pc, #356]	; (81858 <Error+0x1b8>)
   816f2:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   816f4:	2033      	movs	r0, #51	; 0x33
   816f6:	4b59      	ldr	r3, [pc, #356]	; (8185c <Error+0x1bc>)
   816f8:	4798      	blx	r3
   816fa:	e067      	b.n	817cc <Error+0x12c>
		}
		delay_ms(800);

		if(((_param/10)%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   816fc:	2033      	movs	r0, #51	; 0x33
   816fe:	4b55      	ldr	r3, [pc, #340]	; (81854 <Error+0x1b4>)
   81700:	4798      	blx	r3
			delay_ms(1500);
   81702:	4855      	ldr	r0, [pc, #340]	; (81858 <Error+0x1b8>)
   81704:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81706:	2033      	movs	r0, #51	; 0x33
   81708:	4b54      	ldr	r3, [pc, #336]	; (8185c <Error+0x1bc>)
   8170a:	4798      	blx	r3
   8170c:	e079      	b.n	81802 <Error+0x162>
		delay_ms(800);


		if((_param%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   8170e:	2033      	movs	r0, #51	; 0x33
   81710:	4b50      	ldr	r3, [pc, #320]	; (81854 <Error+0x1b4>)
   81712:	4798      	blx	r3
			delay_ms(1500);
   81714:	4850      	ldr	r0, [pc, #320]	; (81858 <Error+0x1b8>)
   81716:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81718:	2033      	movs	r0, #51	; 0x33
   8171a:	4b50      	ldr	r3, [pc, #320]	; (8185c <Error+0x1bc>)
   8171c:	4798      	blx	r3
				gpio_toggle_pin(ERROR_LED);
				delay_ms(200);
			}
		}
		
		delay_ms(1000);
   8171e:	4850      	ldr	r0, [pc, #320]	; (81860 <Error+0x1c0>)
   81720:	47a0      	blx	r4
	for(k=0;k<5;k++)
   81722:	f1b8 0801 	subs.w	r8, r8, #1
   81726:	f000 8086 	beq.w	81836 <Error+0x196>
		gpio_set_pin_high(ERROR_LED);
   8172a:	2033      	movs	r0, #51	; 0x33
   8172c:	4b49      	ldr	r3, [pc, #292]	; (81854 <Error+0x1b4>)
   8172e:	4798      	blx	r3
		delay_ms(3000);
   81730:	484c      	ldr	r0, [pc, #304]	; (81864 <Error+0x1c4>)
   81732:	47a0      	blx	r4
		gpio_set_pin_low(ERROR_LED);
   81734:	2033      	movs	r0, #51	; 0x33
   81736:	4b49      	ldr	r3, [pc, #292]	; (8185c <Error+0x1bc>)
   81738:	4798      	blx	r3
		delay_ms(800);
   8173a:	484b      	ldr	r0, [pc, #300]	; (81868 <Error+0x1c8>)
   8173c:	47a0      	blx	r4
		if((er/10)==0)
   8173e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   81742:	f1b9 0f09 	cmp.w	r9, #9
   81746:	d9be      	bls.n	816c6 <Error+0x26>
			for(i=0;i<(er/10)*2;i++)
   81748:	fba7 2309 	umull	r2, r3, r7, r9
   8174c:	08db      	lsrs	r3, r3, #3
   8174e:	005e      	lsls	r6, r3, #1
   81750:	b15b      	cbz	r3, 8176a <Error+0xca>
   81752:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81754:	f8df b120 	ldr.w	fp, [pc, #288]	; 81878 <Error+0x1d8>
				delay_ms(200);
   81758:	f8df a120 	ldr.w	sl, [pc, #288]	; 8187c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8175c:	2033      	movs	r0, #51	; 0x33
   8175e:	47d8      	blx	fp
				delay_ms(200);
   81760:	4650      	mov	r0, sl
   81762:	47a0      	blx	r4
			for(i=0;i<(er/10)*2;i++)
   81764:	3501      	adds	r5, #1
   81766:	42b5      	cmp	r5, r6
   81768:	d1f8      	bne.n	8175c <Error+0xbc>
		delay_ms(800);
   8176a:	483f      	ldr	r0, [pc, #252]	; (81868 <Error+0x1c8>)
   8176c:	47a0      	blx	r4
		if((er%10)==0)
   8176e:	fba7 3609 	umull	r3, r6, r7, r9
   81772:	08f6      	lsrs	r6, r6, #3
   81774:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   81778:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   8177c:	d0ac      	beq.n	816d8 <Error+0x38>
			for(i=0;i<(er%10)*2;i++)
   8177e:	0076      	lsls	r6, r6, #1
   81780:	d00b      	beq.n	8179a <Error+0xfa>
   81782:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81784:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 81878 <Error+0x1d8>
				delay_ms(200);
   81788:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 8187c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8178c:	2033      	movs	r0, #51	; 0x33
   8178e:	47d0      	blx	sl
				delay_ms(200);
   81790:	4648      	mov	r0, r9
   81792:	47a0      	blx	r4
			for(i=0;i<(er%10)*2;i++)
   81794:	3501      	adds	r5, #1
   81796:	42b5      	cmp	r5, r6
   81798:	d1f8      	bne.n	8178c <Error+0xec>
		delay_ms(1000);
   8179a:	4831      	ldr	r0, [pc, #196]	; (81860 <Error+0x1c0>)
   8179c:	47a0      	blx	r4
		if((_param/100)==0)
   8179e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   817a2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
   817a6:	d9a0      	bls.n	816ea <Error+0x4a>
			for(i=0;i<(_param/100)*2;i++)
   817a8:	4b30      	ldr	r3, [pc, #192]	; (8186c <Error+0x1cc>)
   817aa:	fba3 2309 	umull	r2, r3, r3, r9
   817ae:	095b      	lsrs	r3, r3, #5
   817b0:	005e      	lsls	r6, r3, #1
   817b2:	b15b      	cbz	r3, 817cc <Error+0x12c>
   817b4:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   817b6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 81878 <Error+0x1d8>
				delay_ms(200);
   817ba:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8187c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   817be:	2033      	movs	r0, #51	; 0x33
   817c0:	47d8      	blx	fp
				delay_ms(200);
   817c2:	4650      	mov	r0, sl
   817c4:	47a0      	blx	r4
			for(i=0;i<(_param/100)*2;i++)
   817c6:	3501      	adds	r5, #1
   817c8:	42b5      	cmp	r5, r6
   817ca:	d1f8      	bne.n	817be <Error+0x11e>
		delay_ms(800);
   817cc:	4826      	ldr	r0, [pc, #152]	; (81868 <Error+0x1c8>)
   817ce:	47a0      	blx	r4
		if(((_param/10)%10)==0)
   817d0:	fba7 2309 	umull	r2, r3, r7, r9
   817d4:	08db      	lsrs	r3, r3, #3
   817d6:	fba7 2603 	umull	r2, r6, r7, r3
   817da:	08f6      	lsrs	r6, r6, #3
   817dc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   817e0:	ebb3 0646 	subs.w	r6, r3, r6, lsl #1
   817e4:	d08a      	beq.n	816fc <Error+0x5c>
			for(i=0;i<((_param/10)%10)*2;i++)
   817e6:	0076      	lsls	r6, r6, #1
   817e8:	d00b      	beq.n	81802 <Error+0x162>
   817ea:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   817ec:	f8df b088 	ldr.w	fp, [pc, #136]	; 81878 <Error+0x1d8>
				delay_ms(200);
   817f0:	f8df a088 	ldr.w	sl, [pc, #136]	; 8187c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   817f4:	2033      	movs	r0, #51	; 0x33
   817f6:	47d8      	blx	fp
				delay_ms(200);
   817f8:	4650      	mov	r0, sl
   817fa:	47a0      	blx	r4
			for(i=0;i<((_param/10)%10)*2;i++)
   817fc:	3501      	adds	r5, #1
   817fe:	42b5      	cmp	r5, r6
   81800:	d1f8      	bne.n	817f4 <Error+0x154>
		delay_ms(800);
   81802:	4819      	ldr	r0, [pc, #100]	; (81868 <Error+0x1c8>)
   81804:	47a0      	blx	r4
		if((_param%10)==0)
   81806:	fba7 3609 	umull	r3, r6, r7, r9
   8180a:	08f6      	lsrs	r6, r6, #3
   8180c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   81810:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   81814:	f43f af7b 	beq.w	8170e <Error+0x6e>
			for(i=0;i<(_param%10)*2;i++)
   81818:	0076      	lsls	r6, r6, #1
   8181a:	d080      	beq.n	8171e <Error+0x7e>
   8181c:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   8181e:	f8df a058 	ldr.w	sl, [pc, #88]	; 81878 <Error+0x1d8>
				delay_ms(200);
   81822:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8187c <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   81826:	2033      	movs	r0, #51	; 0x33
   81828:	47d0      	blx	sl
				delay_ms(200);
   8182a:	4648      	mov	r0, r9
   8182c:	47a0      	blx	r4
			for(i=0;i<(_param%10)*2;i++)
   8182e:	3501      	adds	r5, #1
   81830:	42b5      	cmp	r5, r6
   81832:	d1f8      	bne.n	81826 <Error+0x186>
   81834:	e773      	b.n	8171e <Error+0x7e>

#undef _param
	}
	rstc_start_software_reset(RSTC);
   81836:	480e      	ldr	r0, [pc, #56]	; (81870 <Error+0x1d0>)
   81838:	4b0e      	ldr	r3, [pc, #56]	; (81874 <Error+0x1d4>)
   8183a:	4798      	blx	r3
   8183c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81840:	b004      	add	sp, #16
   81842:	4770      	bx	lr
   81844:	20000124 	.word	0x20000124
   81848:	00080799 	.word	0x00080799
   8184c:	20000001 	.word	0x20000001
   81850:	cccccccd 	.word	0xcccccccd
   81854:	00080745 	.word	0x00080745
   81858:	009cf293 	.word	0x009cf293
   8185c:	0008075f 	.word	0x0008075f
   81860:	0068a1b7 	.word	0x0068a1b7
   81864:	0139e525 	.word	0x0139e525
   81868:	0053b493 	.word	0x0053b493
   8186c:	51eb851f 	.word	0x51eb851f
   81870:	400e1200 	.word	0x400e1200
   81874:	00080bcd 	.word	0x00080bcd
   81878:	00080779 	.word	0x00080779
   8187c:	0014ed25 	.word	0x0014ed25

00081880 <kRtc>:
#define _rtcCalr	((t_RTC_CALR*)&RTC->RTC_CALR)
#define _rtcTimr	((t_RTC_TIMR*)&RTC->RTC_TIMR)


uint32_t kRtc(uint32_t sc,...)
{
   81880:	b40f      	push	{r0, r1, r2, r3}
   81882:	b5f0      	push	{r4, r5, r6, r7, lr}
   81884:	b087      	sub	sp, #28
	uint32_t u1,u2,u3,u4;
	
	switch(sc)
   81886:	990c      	ldr	r1, [sp, #48]	; 0x30
   81888:	2964      	cmp	r1, #100	; 0x64
   8188a:	d021      	beq.n	818d0 <kRtc+0x50>
   8188c:	d814      	bhi.n	818b8 <kRtc+0x38>
   8188e:	2901      	cmp	r1, #1
   81890:	f000 810e 	beq.w	81ab0 <kRtc+0x230>
   81894:	2900      	cmp	r1, #0
   81896:	f000 80bb 	beq.w	81a10 <kRtc+0x190>
   8189a:	2902      	cmp	r1, #2
   8189c:	d113      	bne.n	818c6 <kRtc+0x46>
	case _KRTC_IS_SUMMER_TIME:
#define _day	pa1
#define _date	pa2
#define _month	pa3
#define _hour	pa4
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   8189e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   818a0:	1f1a      	subs	r2, r3, #4
   818a2:	2a05      	cmp	r2, #5
   818a4:	f240 8148 	bls.w	81b38 <kRtc+0x2b8>
		else
		{
			if(_month==MARCH)
   818a8:	2b03      	cmp	r3, #3
   818aa:	f000 811b 	beq.w	81ae4 <kRtc+0x264>
					{
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
					}
				}
			}
			else if(_month==OCTOBER)
   818ae:	2b0a      	cmp	r3, #10
   818b0:	f000 812d 	beq.w	81b0e <kRtc+0x28e>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
					}
				}
			}
		}
		return 0;
   818b4:	2400      	movs	r4, #0
   818b6:	e0d1      	b.n	81a5c <kRtc+0x1dc>
	switch(sc)
   818b8:	2967      	cmp	r1, #103	; 0x67
   818ba:	d040      	beq.n	8193e <kRtc+0xbe>
   818bc:	2968      	cmp	r1, #104	; 0x68
   818be:	f000 808d 	beq.w	819dc <kRtc+0x15c>
   818c2:	2966      	cmp	r1, #102	; 0x66
   818c4:	d01a      	beq.n	818fc <kRtc+0x7c>
		//no break;


	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_KRTC_SWITCH_BAD_SC,sc);
   818c6:	200e      	movs	r0, #14
   818c8:	4b9e      	ldr	r3, [pc, #632]	; (81b44 <kRtc+0x2c4>)
   818ca:	4798      	blx	r3
}
	return 0;
   818cc:	2400      	movs	r4, #0
   818ce:	e0c5      	b.n	81a5c <kRtc+0x1dc>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   818d0:	2000      	movs	r0, #0
   818d2:	4b9d      	ldr	r3, [pc, #628]	; (81b48 <kRtc+0x2c8>)
   818d4:	4798      	blx	r3
		while (!pmc_osc_is_ready_32kxtal());
   818d6:	4c9d      	ldr	r4, [pc, #628]	; (81b4c <kRtc+0x2cc>)
   818d8:	47a0      	blx	r4
   818da:	2800      	cmp	r0, #0
   818dc:	d0fc      	beq.n	818d8 <kRtc+0x58>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   818de:	4b9c      	ldr	r3, [pc, #624]	; (81b50 <kRtc+0x2d0>)
   818e0:	2104      	movs	r1, #4
   818e2:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   818e6:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   818ea:	2210      	movs	r2, #16
   818ec:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   818f0:	6019      	str	r1, [r3, #0]
		rtc_enable_interrupt(RTC,RTC_IER_SECEN);	//Second IRQ enabled
   818f2:	4898      	ldr	r0, [pc, #608]	; (81b54 <kRtc+0x2d4>)
   818f4:	4b98      	ldr	r3, [pc, #608]	; (81b58 <kRtc+0x2d8>)
   818f6:	4798      	blx	r3
	return 0;
   818f8:	2400      	movs	r4, #0
		break;
   818fa:	e0af      	b.n	81a5c <kRtc+0x1dc>
		_res = rtc_set_time(RTC,_hour,_minute,_second);
   818fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   818fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81900:	990d      	ldr	r1, [sp, #52]	; 0x34
   81902:	4894      	ldr	r0, [pc, #592]	; (81b54 <kRtc+0x2d4>)
   81904:	4c95      	ldr	r4, [pc, #596]	; (81b5c <kRtc+0x2dc>)
   81906:	47a0      	blx	r4
   81908:	4604      	mov	r4, r0
   8190a:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res	== 0)
   8190c:	2800      	cmp	r0, #0
   8190e:	f040 80a5 	bne.w	81a5c <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   81912:	4b93      	ldr	r3, [pc, #588]	; (81b60 <kRtc+0x2e0>)
   81914:	7899      	ldrb	r1, [r3, #2]
   81916:	78da      	ldrb	r2, [r3, #3]
   81918:	3b04      	subs	r3, #4
   8191a:	789b      	ldrb	r3, [r3, #2]
   8191c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   81920:	9300      	str	r3, [sp, #0]
   81922:	f001 031f 	and.w	r3, r1, #31
   81926:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   8192a:	0949      	lsrs	r1, r1, #5
   8192c:	2002      	movs	r0, #2
   8192e:	f7ff ffa7 	bl	81880 <kRtc>
   81932:	4b8c      	ldr	r3, [pc, #560]	; (81b64 <kRtc+0x2e4>)
   81934:	781a      	ldrb	r2, [r3, #0]
   81936:	f360 0282 	bfi	r2, r0, #2, #1
   8193a:	701a      	strb	r2, [r3, #0]
   8193c:	e08e      	b.n	81a5c <kRtc+0x1dc>
		if((_month==0)||(_month)>12) return -1;
   8193e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81940:	1e63      	subs	r3, r4, #1
   81942:	2b0b      	cmp	r3, #11
   81944:	d902      	bls.n	8194c <kRtc+0xcc>
   81946:	f04f 34ff 	mov.w	r4, #4294967295
   8194a:	e087      	b.n	81a5c <kRtc+0x1dc>
		if(_date>nbDaysInMonth[_month-1]+_kRtcIsLeapYear(_centyear)?1:0) return -1;
   8194c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   8194e:	4a86      	ldr	r2, [pc, #536]	; (81b68 <kRtc+0x2e8>)
   81950:	5cd5      	ldrb	r5, [r2, r3]
   81952:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   81954:	4631      	mov	r1, r6
   81956:	2001      	movs	r0, #1
   81958:	f7ff ff92 	bl	81880 <kRtc>
   8195c:	4428      	add	r0, r5
   8195e:	4287      	cmp	r7, r0
   81960:	d902      	bls.n	81968 <kRtc+0xe8>
   81962:	f04f 34ff 	mov.w	r4, #4294967295
   81966:	e079      	b.n	81a5c <kRtc+0x1dc>
		if((_centyear/100>20)||(_centyear/100<19)||(_centyear%100>99)) return -1;
   81968:	f2a6 736c 	subw	r3, r6, #1900	; 0x76c
   8196c:	2bc7      	cmp	r3, #199	; 0xc7
   8196e:	d902      	bls.n	81976 <kRtc+0xf6>
   81970:	f04f 34ff 	mov.w	r4, #4294967295
   81974:	e072      	b.n	81a5c <kRtc+0x1dc>
   81976:	4d7d      	ldr	r5, [pc, #500]	; (81b6c <kRtc+0x2ec>)
   81978:	fba5 3506 	umull	r3, r5, r5, r6
   8197c:	096d      	lsrs	r5, r5, #5
   8197e:	2364      	movs	r3, #100	; 0x64
   81980:	fb03 6515 	mls	r5, r3, r5, r6
   81984:	2d63      	cmp	r5, #99	; 0x63
   81986:	d902      	bls.n	8198e <kRtc+0x10e>
   81988:	f04f 34ff 	mov.w	r4, #4294967295
   8198c:	e066      	b.n	81a5c <kRtc+0x1dc>
		_day = _kRtcDayByDate(_date,_month,_centyear);
   8198e:	4633      	mov	r3, r6
   81990:	4622      	mov	r2, r4
   81992:	4639      	mov	r1, r7
   81994:	2000      	movs	r0, #0
   81996:	f7ff ff73 	bl	81880 <kRtc>
		_res = rtc_set_date(RTC,_centyear%100,_month,_date,_day);
   8199a:	9000      	str	r0, [sp, #0]
   8199c:	463b      	mov	r3, r7
   8199e:	4622      	mov	r2, r4
   819a0:	4629      	mov	r1, r5
   819a2:	486c      	ldr	r0, [pc, #432]	; (81b54 <kRtc+0x2d4>)
   819a4:	4c72      	ldr	r4, [pc, #456]	; (81b70 <kRtc+0x2f0>)
   819a6:	47a0      	blx	r4
   819a8:	4604      	mov	r4, r0
   819aa:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res == 0)
   819ac:	2800      	cmp	r0, #0
   819ae:	d155      	bne.n	81a5c <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   819b0:	4b6b      	ldr	r3, [pc, #428]	; (81b60 <kRtc+0x2e0>)
   819b2:	7899      	ldrb	r1, [r3, #2]
   819b4:	78da      	ldrb	r2, [r3, #3]
   819b6:	3b04      	subs	r3, #4
   819b8:	789b      	ldrb	r3, [r3, #2]
   819ba:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   819be:	9300      	str	r3, [sp, #0]
   819c0:	f001 031f 	and.w	r3, r1, #31
   819c4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   819c8:	0949      	lsrs	r1, r1, #5
   819ca:	2002      	movs	r0, #2
   819cc:	f7ff ff58 	bl	81880 <kRtc>
   819d0:	4b64      	ldr	r3, [pc, #400]	; (81b64 <kRtc+0x2e4>)
   819d2:	781a      	ldrb	r2, [r3, #0]
   819d4:	f360 0282 	bfi	r2, r0, #2, #1
   819d8:	701a      	strb	r2, [r3, #0]
   819da:	e03f      	b.n	81a5c <kRtc+0x1dc>
		rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   819dc:	ab02      	add	r3, sp, #8
   819de:	9300      	str	r3, [sp, #0]
   819e0:	ab03      	add	r3, sp, #12
   819e2:	aa04      	add	r2, sp, #16
   819e4:	a905      	add	r1, sp, #20
   819e6:	485b      	ldr	r0, [pc, #364]	; (81b54 <kRtc+0x2d4>)
   819e8:	4c62      	ldr	r4, [pc, #392]	; (81b74 <kRtc+0x2f4>)
   819ea:	47a0      	blx	r4
		sprintf((char*)_pStr,"%s %d %s %4d",daysOfWeek[_day-1],(int)_date,months[_month-1],(int)_year);
   819ec:	9b02      	ldr	r3, [sp, #8]
   819ee:	3b01      	subs	r3, #1
   819f0:	4a61      	ldr	r2, [pc, #388]	; (81b78 <kRtc+0x2f8>)
   819f2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   819f6:	9b05      	ldr	r3, [sp, #20]
   819f8:	9301      	str	r3, [sp, #4]
   819fa:	9b04      	ldr	r3, [sp, #16]
   819fc:	3b01      	subs	r3, #1
   819fe:	495f      	ldr	r1, [pc, #380]	; (81b7c <kRtc+0x2fc>)
   81a00:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
   81a04:	9300      	str	r3, [sp, #0]
   81a06:	9b03      	ldr	r3, [sp, #12]
   81a08:	495d      	ldr	r1, [pc, #372]	; (81b80 <kRtc+0x300>)
   81a0a:	980d      	ldr	r0, [sp, #52]	; 0x34
   81a0c:	4c5d      	ldr	r4, [pc, #372]	; (81b84 <kRtc+0x304>)
   81a0e:	47a0      	blx	r4
		if(_month>=3)
   81a10:	990e      	ldr	r1, [sp, #56]	; 0x38
   81a12:	2902      	cmp	r1, #2
   81a14:	d928      	bls.n	81a68 <kRtc+0x1e8>
			_day = ((_month*23)/9 + _date + 4 + _centyear + _centyear/4 - _centyear/100 + _centyear/400 - 2 ) % 7 + 1;
   81a16:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81a18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81a1a:	1883      	adds	r3, r0, r2
   81a1c:	3302      	adds	r3, #2
   81a1e:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81a22:	4a52      	ldr	r2, [pc, #328]	; (81b6c <kRtc+0x2ec>)
   81a24:	fba2 2000 	umull	r2, r0, r2, r0
   81a28:	eb03 13d0 	add.w	r3, r3, r0, lsr #7
   81a2c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81a30:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81a34:	4954      	ldr	r1, [pc, #336]	; (81b88 <kRtc+0x308>)
   81a36:	fba1 1202 	umull	r1, r2, r1, r2
   81a3a:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81a3e:	eba3 1350 	sub.w	r3, r3, r0, lsr #5
   81a42:	4a52      	ldr	r2, [pc, #328]	; (81b8c <kRtc+0x30c>)
   81a44:	fba2 1203 	umull	r1, r2, r2, r3
   81a48:	1a99      	subs	r1, r3, r2
   81a4a:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81a4e:	0892      	lsrs	r2, r2, #2
   81a50:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81a54:	1a9b      	subs	r3, r3, r2
   81a56:	3301      	adds	r3, #1
   81a58:	930c      	str	r3, [sp, #48]	; 0x30
		return _day; //Normally 1 to 7 !!!!
   81a5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
}
   81a5c:	4620      	mov	r0, r4
   81a5e:	b007      	add	sp, #28
   81a60:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81a64:	b004      	add	sp, #16
   81a66:	4770      	bx	lr
			_day = ((_month*23)/9 + _date + 4 + _centyear + (_centyear-1)/4 - (_centyear-1)/100 + (_centyear-1)/400 ) % 7 + 1;
   81a68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81a6a:	1e50      	subs	r0, r2, #1
   81a6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81a6e:	4413      	add	r3, r2
   81a70:	3304      	adds	r3, #4
   81a72:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81a76:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81a7a:	4943      	ldr	r1, [pc, #268]	; (81b88 <kRtc+0x308>)
   81a7c:	fba1 1202 	umull	r1, r2, r1, r2
   81a80:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81a84:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81a88:	4a38      	ldr	r2, [pc, #224]	; (81b6c <kRtc+0x2ec>)
   81a8a:	fba2 1200 	umull	r1, r2, r2, r0
   81a8e:	eb03 13d2 	add.w	r3, r3, r2, lsr #7
   81a92:	eba3 1352 	sub.w	r3, r3, r2, lsr #5
   81a96:	4a3d      	ldr	r2, [pc, #244]	; (81b8c <kRtc+0x30c>)
   81a98:	fba2 1203 	umull	r1, r2, r2, r3
   81a9c:	1a99      	subs	r1, r3, r2
   81a9e:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81aa2:	0892      	lsrs	r2, r2, #2
   81aa4:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81aa8:	1a9b      	subs	r3, r3, r2
   81aaa:	3301      	adds	r3, #1
   81aac:	930c      	str	r3, [sp, #48]	; 0x30
   81aae:	e7d4      	b.n	81a5a <kRtc+0x1da>
		return (((_centyear%4==0)&&(_centyear%100!=0)) || (_centyear%400==0));
   81ab0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81ab2:	f013 0f03 	tst.w	r3, #3
   81ab6:	d107      	bne.n	81ac8 <kRtc+0x248>
   81ab8:	4a2c      	ldr	r2, [pc, #176]	; (81b6c <kRtc+0x2ec>)
   81aba:	fba2 1203 	umull	r1, r2, r2, r3
   81abe:	0952      	lsrs	r2, r2, #5
   81ac0:	2164      	movs	r1, #100	; 0x64
   81ac2:	fb01 3212 	mls	r2, r1, r2, r3
   81ac6:	b95a      	cbnz	r2, 81ae0 <kRtc+0x260>
   81ac8:	4c28      	ldr	r4, [pc, #160]	; (81b6c <kRtc+0x2ec>)
   81aca:	fba4 2403 	umull	r2, r4, r4, r3
   81ace:	09e4      	lsrs	r4, r4, #7
   81ad0:	f44f 72c8 	mov.w	r2, #400	; 0x190
   81ad4:	fb02 3414 	mls	r4, r2, r4, r3
   81ad8:	fab4 f484 	clz	r4, r4
   81adc:	0964      	lsrs	r4, r4, #5
   81ade:	e7bd      	b.n	81a5c <kRtc+0x1dc>
   81ae0:	2401      	movs	r4, #1
   81ae2:	e7bb      	b.n	81a5c <kRtc+0x1dc>
				if(_date>=25)
   81ae4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81ae6:	2c18      	cmp	r4, #24
   81ae8:	d928      	bls.n	81b3c <kRtc+0x2bc>
					if(_day==SUNDAY)
   81aea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81aec:	2a01      	cmp	r2, #1
   81aee:	d008      	beq.n	81b02 <kRtc+0x282>
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
   81af0:	3c18      	subs	r4, #24
   81af2:	b264      	sxtb	r4, r4
   81af4:	b252      	sxtb	r2, r2
   81af6:	1aa4      	subs	r4, r4, r2
   81af8:	2c00      	cmp	r4, #0
   81afa:	bfd4      	ite	le
   81afc:	2400      	movle	r4, #0
   81afe:	2401      	movgt	r4, #1
   81b00:	e7ac      	b.n	81a5c <kRtc+0x1dc>
						if(_hour>=2) return 1;
   81b02:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81b04:	2c01      	cmp	r4, #1
   81b06:	bf94      	ite	ls
   81b08:	2400      	movls	r4, #0
   81b0a:	2401      	movhi	r4, #1
   81b0c:	e7a6      	b.n	81a5c <kRtc+0x1dc>
				if(_date>=25)
   81b0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81b10:	2c18      	cmp	r4, #24
   81b12:	d915      	bls.n	81b40 <kRtc+0x2c0>
					if(_day==SUNDAY)
   81b14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81b16:	2a01      	cmp	r2, #1
   81b18:	d008      	beq.n	81b2c <kRtc+0x2ac>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
   81b1a:	3c18      	subs	r4, #24
   81b1c:	b264      	sxtb	r4, r4
   81b1e:	b252      	sxtb	r2, r2
   81b20:	1aa4      	subs	r4, r4, r2
   81b22:	2c00      	cmp	r4, #0
   81b24:	bfcc      	ite	gt
   81b26:	2400      	movgt	r4, #0
   81b28:	2401      	movle	r4, #1
   81b2a:	e797      	b.n	81a5c <kRtc+0x1dc>
						if(_hour<2) return 1;
   81b2c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81b2e:	2c01      	cmp	r4, #1
   81b30:	bf8c      	ite	hi
   81b32:	2400      	movhi	r4, #0
   81b34:	2401      	movls	r4, #1
   81b36:	e791      	b.n	81a5c <kRtc+0x1dc>
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   81b38:	2401      	movs	r4, #1
   81b3a:	e78f      	b.n	81a5c <kRtc+0x1dc>
		return 0;
   81b3c:	2400      	movs	r4, #0
   81b3e:	e78d      	b.n	81a5c <kRtc+0x1dc>
   81b40:	2400      	movs	r4, #0
   81b42:	e78b      	b.n	81a5c <kRtc+0x1dc>
   81b44:	000816a1 	.word	0x000816a1
   81b48:	000808cd 	.word	0x000808cd
   81b4c:	000808f1 	.word	0x000808f1
   81b50:	e000e100 	.word	0xe000e100
   81b54:	400e1260 	.word	0x400e1260
   81b58:	00080bd9 	.word	0x00080bd9
   81b5c:	00080c39 	.word	0x00080c39
   81b60:	400e126c 	.word	0x400e126c
   81b64:	200010bc 	.word	0x200010bc
   81b68:	00088488 	.word	0x00088488
   81b6c:	51eb851f 	.word	0x51eb851f
   81b70:	00080d41 	.word	0x00080d41
   81b74:	00080ccd 	.word	0x00080ccd
   81b78:	2000052c 	.word	0x2000052c
   81b7c:	20000548 	.word	0x20000548
   81b80:	00088478 	.word	0x00088478
   81b84:	00083901 	.word	0x00083901
   81b88:	38e38e39 	.word	0x38e38e39
   81b8c:	24924925 	.word	0x24924925

00081b90 <RTC_Handler>:
enum{
	_SHELL_PROMPT = 4
};

void RTC_Handler(void)
{
   81b90:	b510      	push	{r4, lr}
   81b92:	b082      	sub	sp, #8
	rtc_clear_status(RTC,RTC_SCCR_SECCLR);
   81b94:	2104      	movs	r1, #4
   81b96:	4806      	ldr	r0, [pc, #24]	; (81bb0 <RTC_Handler+0x20>)
   81b98:	4b06      	ldr	r3, [pc, #24]	; (81bb4 <RTC_Handler+0x24>)
   81b9a:	4798      	blx	r3
	PushTask(Shell,_SHELL_PROMPT,0,0);
   81b9c:	2300      	movs	r3, #0
   81b9e:	9300      	str	r3, [sp, #0]
   81ba0:	2204      	movs	r2, #4
   81ba2:	4905      	ldr	r1, [pc, #20]	; (81bb8 <RTC_Handler+0x28>)
   81ba4:	2066      	movs	r0, #102	; 0x66
   81ba6:	4c05      	ldr	r4, [pc, #20]	; (81bbc <RTC_Handler+0x2c>)
   81ba8:	47a0      	blx	r4
}
   81baa:	b002      	add	sp, #8
   81bac:	bd10      	pop	{r4, pc}
   81bae:	bf00      	nop
   81bb0:	400e1260 	.word	0x400e1260
   81bb4:	00080df9 	.word	0x00080df9
   81bb8:	000820d5 	.word	0x000820d5
   81bbc:	000834a5 	.word	0x000834a5

00081bc0 <Lcd>:

#define ST_LCD_ON		0x0000001


uint32_t Lcd(uint32_t sc, ...)
{
   81bc0:	b40f      	push	{r0, r1, r2, r3}
   81bc2:	b570      	push	{r4, r5, r6, lr}
	switch(sc)
   81bc4:	9904      	ldr	r1, [sp, #16]
   81bc6:	1e4b      	subs	r3, r1, #1
   81bc8:	2b67      	cmp	r3, #103	; 0x67
   81bca:	f200 826a 	bhi.w	820a2 <Lcd+0x4e2>
   81bce:	e8df f013 	tbh	[pc, r3, lsl #1]
   81bd2:	010e      	.short	0x010e
   81bd4:	01680142 	.word	0x01680142
   81bd8:	01a0018e 	.word	0x01a0018e
   81bdc:	01b201a9 	.word	0x01b201a9
   81be0:	024201d3 	.word	0x024201d3
   81be4:	02680255 	.word	0x02680255
   81be8:	02680268 	.word	0x02680268
   81bec:	02680268 	.word	0x02680268
   81bf0:	02680268 	.word	0x02680268
   81bf4:	02680268 	.word	0x02680268
   81bf8:	02680268 	.word	0x02680268
   81bfc:	02680268 	.word	0x02680268
   81c00:	02680268 	.word	0x02680268
   81c04:	02680268 	.word	0x02680268
   81c08:	02680268 	.word	0x02680268
   81c0c:	02680268 	.word	0x02680268
   81c10:	02680268 	.word	0x02680268
   81c14:	02680268 	.word	0x02680268
   81c18:	02680268 	.word	0x02680268
   81c1c:	02680268 	.word	0x02680268
   81c20:	02680268 	.word	0x02680268
   81c24:	02680268 	.word	0x02680268
   81c28:	02680268 	.word	0x02680268
   81c2c:	02680268 	.word	0x02680268
   81c30:	02680268 	.word	0x02680268
   81c34:	02680268 	.word	0x02680268
   81c38:	02680268 	.word	0x02680268
   81c3c:	02680268 	.word	0x02680268
   81c40:	02680268 	.word	0x02680268
   81c44:	02680268 	.word	0x02680268
   81c48:	02680268 	.word	0x02680268
   81c4c:	02680268 	.word	0x02680268
   81c50:	02680268 	.word	0x02680268
   81c54:	02680268 	.word	0x02680268
   81c58:	02680268 	.word	0x02680268
   81c5c:	02680268 	.word	0x02680268
   81c60:	02680268 	.word	0x02680268
   81c64:	02680268 	.word	0x02680268
   81c68:	02680268 	.word	0x02680268
   81c6c:	02680268 	.word	0x02680268
   81c70:	02680268 	.word	0x02680268
   81c74:	02680268 	.word	0x02680268
   81c78:	02680268 	.word	0x02680268
   81c7c:	02680268 	.word	0x02680268
   81c80:	02680268 	.word	0x02680268
   81c84:	02680268 	.word	0x02680268
   81c88:	02680268 	.word	0x02680268
   81c8c:	02680268 	.word	0x02680268
   81c90:	02680268 	.word	0x02680268
   81c94:	02680268 	.word	0x02680268
   81c98:	00c40068 	.word	0x00c40068
   81c9c:	00ee0103 	.word	0x00ee0103
   81ca0:	00e9      	.short	0x00e9
	{
	case LCD_NEW:
		Lcd(LCD_DEL);
   81ca2:	2065      	movs	r0, #101	; 0x65
   81ca4:	f7ff ff8c 	bl	81bc0 <Lcd>
		delay_ms(200);
   81ca8:	48aa      	ldr	r0, [pc, #680]	; (81f54 <Lcd+0x394>)
   81caa:	4cab      	ldr	r4, [pc, #684]	; (81f58 <Lcd+0x398>)
   81cac:	47a0      	blx	r4
		_LcdSetDataLineOut();
   81cae:	2009      	movs	r0, #9
   81cb0:	f7ff ff86 	bl	81bc0 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81cb4:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81cb8:	2004      	movs	r0, #4
   81cba:	4da8      	ldr	r5, [pc, #672]	; (81f5c <Lcd+0x39c>)
   81cbc:	47a8      	blx	r5
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81cbe:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81cc2:	2005      	movs	r0, #5
   81cc4:	47a8      	blx	r5
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81cc6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81cca:	2006      	movs	r0, #6
   81ccc:	47a8      	blx	r5
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81cce:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81cd2:	2007      	movs	r0, #7
   81cd4:	47a8      	blx	r5

		gpio_set_pin_low(LCD_E);
   81cd6:	2004      	movs	r0, #4
   81cd8:	4da1      	ldr	r5, [pc, #644]	; (81f60 <Lcd+0x3a0>)
   81cda:	47a8      	blx	r5
		gpio_set_pin_low(LCD_RS);
   81cdc:	2006      	movs	r0, #6
   81cde:	47a8      	blx	r5
		gpio_set_pin_low(LCD_RWB);
   81ce0:	2005      	movs	r0, #5
   81ce2:	47a8      	blx	r5
		gpio_set_pin_high(LCD_BACKLIGHT);
   81ce4:	2007      	movs	r0, #7
   81ce6:	4b9f      	ldr	r3, [pc, #636]	; (81f64 <Lcd+0x3a4>)
   81ce8:	4798      	blx	r3

		delay_ms(300);
   81cea:	489f      	ldr	r0, [pc, #636]	; (81f68 <Lcd+0x3a8>)
   81cec:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81cee:	2130      	movs	r1, #48	; 0x30
   81cf0:	2001      	movs	r0, #1
   81cf2:	f7ff ff65 	bl	81bc0 <Lcd>
		delay_ms(10);
   81cf6:	4d9d      	ldr	r5, [pc, #628]	; (81f6c <Lcd+0x3ac>)
   81cf8:	4628      	mov	r0, r5
   81cfa:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81cfc:	2130      	movs	r1, #48	; 0x30
   81cfe:	2001      	movs	r0, #1
   81d00:	f7ff ff5e 	bl	81bc0 <Lcd>
		delay_ms(10);
   81d04:	4628      	mov	r0, r5
   81d06:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81d08:	2130      	movs	r1, #48	; 0x30
   81d0a:	2001      	movs	r0, #1
   81d0c:	f7ff ff58 	bl	81bc0 <Lcd>
		delay_ms(10);
   81d10:	4628      	mov	r0, r5
   81d12:	47a0      	blx	r4
		_LcdWriteHalf(0x20);
   81d14:	2120      	movs	r1, #32
   81d16:	2001      	movs	r0, #1
   81d18:	f7ff ff52 	bl	81bc0 <Lcd>
		delay_ms(10);
   81d1c:	4628      	mov	r0, r5
   81d1e:	47a0      	blx	r4
		_LcdWriteInst(0x28);	//SET FUNCTION : 4 bits interface/2 line display/5x7 dots
   81d20:	2128      	movs	r1, #40	; 0x28
   81d22:	2002      	movs	r0, #2
   81d24:	f7ff ff4c 	bl	81bc0 <Lcd>
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81d28:	2108      	movs	r1, #8
   81d2a:	2002      	movs	r0, #2
   81d2c:	f7ff ff48 	bl	81bc0 <Lcd>
		_LcdWriteInst(0x01);	//DISPLAY CLEAR
   81d30:	2101      	movs	r1, #1
   81d32:	2002      	movs	r0, #2
   81d34:	f7ff ff44 	bl	81bc0 <Lcd>
		_LcdWriteInst(0x06);	//ENTRY MODE SET : Cursor Increase/Display is not shift
   81d38:	2106      	movs	r1, #6
   81d3a:	2002      	movs	r0, #2
   81d3c:	f7ff ff40 	bl	81bc0 <Lcd>
		_LcdWriteInst(0x0C);	//DISPLAY ON/CURSOR OFF
   81d40:	210c      	movs	r1, #12
   81d42:	2002      	movs	r0, #2
   81d44:	f7ff ff3c 	bl	81bc0 <Lcd>
		
		//_LcdWriteInst(0x01);	//DISPLAY CLEAR
		//_LcdWriteInst(0x02);	//RETURN HOME
		
		lcd.status = ST_LCD_ON;
   81d48:	2201      	movs	r2, #1
   81d4a:	4b89      	ldr	r3, [pc, #548]	; (81f70 <Lcd+0x3b0>)
   81d4c:	601a      	str	r2, [r3, #0]

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
	}
	return 0;
   81d4e:	2400      	movs	r4, #0
   81d50:	4620      	mov	r0, r4
   81d52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   81d56:	b004      	add	sp, #16
   81d58:	4770      	bx	lr
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81d5a:	2108      	movs	r1, #8
   81d5c:	2002      	movs	r0, #2
   81d5e:	f7ff ff2f 	bl	81bc0 <Lcd>
		_LcdSetDataLineIn();
   81d62:	200a      	movs	r0, #10
   81d64:	f7ff ff2c 	bl	81bc0 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81d68:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d6c:	2004      	movs	r0, #4
   81d6e:	4c7b      	ldr	r4, [pc, #492]	; (81f5c <Lcd+0x39c>)
   81d70:	47a0      	blx	r4
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81d72:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d76:	2005      	movs	r0, #5
   81d78:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81d7a:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d7e:	2006      	movs	r0, #6
   81d80:	47a0      	blx	r4
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81d82:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81d86:	2007      	movs	r0, #7
   81d88:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81d8a:	2004      	movs	r0, #4
   81d8c:	4c74      	ldr	r4, [pc, #464]	; (81f60 <Lcd+0x3a0>)
   81d8e:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   81d90:	2006      	movs	r0, #6
   81d92:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RWB);
   81d94:	2005      	movs	r0, #5
   81d96:	47a0      	blx	r4
		gpio_set_pin_low(LCD_BACKLIGHT);
   81d98:	2007      	movs	r0, #7
   81d9a:	47a0      	blx	r4
		lcd.status=0;
   81d9c:	2400      	movs	r4, #0
   81d9e:	4b74      	ldr	r3, [pc, #464]	; (81f70 <Lcd+0x3b0>)
   81da0:	601c      	str	r4, [r3, #0]
		break;
   81da2:	e7d5      	b.n	81d50 <Lcd+0x190>
		return (uint32_t)(mIsBitsSet(lcd.status,ST_LCD_ON));
   81da4:	4b72      	ldr	r3, [pc, #456]	; (81f70 <Lcd+0x3b0>)
   81da6:	681c      	ldr	r4, [r3, #0]
   81da8:	f004 0401 	and.w	r4, r4, #1
   81dac:	e7d0      	b.n	81d50 <Lcd+0x190>
		_LcdSetCursor(_line,_col);
   81dae:	9a07      	ldr	r2, [sp, #28]
   81db0:	9906      	ldr	r1, [sp, #24]
   81db2:	2007      	movs	r0, #7
   81db4:	f7ff ff04 	bl	81bc0 <Lcd>
		while(*(char*)_str)
   81db8:	9c05      	ldr	r4, [sp, #20]
   81dba:	7821      	ldrb	r1, [r4, #0]
   81dbc:	2900      	cmp	r1, #0
   81dbe:	f000 8175 	beq.w	820ac <Lcd+0x4ec>
			_LcdWriteData(*(char*)_str++);
   81dc2:	2503      	movs	r5, #3
   81dc4:	3401      	adds	r4, #1
   81dc6:	9405      	str	r4, [sp, #20]
   81dc8:	4628      	mov	r0, r5
   81dca:	f7ff fef9 	bl	81bc0 <Lcd>
		while(*(char*)_str)
   81dce:	7821      	ldrb	r1, [r4, #0]
   81dd0:	2900      	cmp	r1, #0
   81dd2:	d1f7      	bne.n	81dc4 <Lcd+0x204>
	return 0;
   81dd4:	2400      	movs	r4, #0
   81dd6:	e7bb      	b.n	81d50 <Lcd+0x190>
		if(_onOff)
   81dd8:	9c05      	ldr	r4, [sp, #20]
   81dda:	b124      	cbz	r4, 81de6 <Lcd+0x226>
			gpio_set_pin_high(LCD_BACKLIGHT);
   81ddc:	2007      	movs	r0, #7
   81dde:	4b61      	ldr	r3, [pc, #388]	; (81f64 <Lcd+0x3a4>)
   81de0:	4798      	blx	r3
	return 0;
   81de2:	2400      	movs	r4, #0
   81de4:	e7b4      	b.n	81d50 <Lcd+0x190>
			gpio_set_pin_low(LCD_BACKLIGHT);
   81de6:	2007      	movs	r0, #7
   81de8:	4b5d      	ldr	r3, [pc, #372]	; (81f60 <Lcd+0x3a0>)
   81dea:	4798      	blx	r3
   81dec:	e7b0      	b.n	81d50 <Lcd+0x190>
		_LcdSetDataLineOut();
   81dee:	2009      	movs	r0, #9
   81df0:	f7ff fee6 	bl	81bc0 <Lcd>
		gpio_set_pin_low(LCD_RWB);
   81df4:	2005      	movs	r0, #5
   81df6:	4b5a      	ldr	r3, [pc, #360]	; (81f60 <Lcd+0x3a0>)
   81df8:	4798      	blx	r3
		_LcdEup();
   81dfa:	2005      	movs	r0, #5
   81dfc:	f7ff fee0 	bl	81bc0 <Lcd>
		(_half&0x80)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   81e00:	9c05      	ldr	r4, [sp, #20]
   81e02:	f014 0f80 	tst.w	r4, #128	; 0x80
   81e06:	f04f 0003 	mov.w	r0, #3
   81e0a:	bf14      	ite	ne
   81e0c:	4b55      	ldrne	r3, [pc, #340]	; (81f64 <Lcd+0x3a4>)
   81e0e:	4b54      	ldreq	r3, [pc, #336]	; (81f60 <Lcd+0x3a0>)
   81e10:	4798      	blx	r3
		(_half&0x40)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   81e12:	b2e4      	uxtb	r4, r4
   81e14:	f014 0f40 	tst.w	r4, #64	; 0x40
   81e18:	f04f 0002 	mov.w	r0, #2
   81e1c:	bf14      	ite	ne
   81e1e:	4b51      	ldrne	r3, [pc, #324]	; (81f64 <Lcd+0x3a4>)
   81e20:	4b4f      	ldreq	r3, [pc, #316]	; (81f60 <Lcd+0x3a0>)
   81e22:	4798      	blx	r3
		(_half&0x20)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   81e24:	f014 0f20 	tst.w	r4, #32
   81e28:	f04f 0001 	mov.w	r0, #1
   81e2c:	bf14      	ite	ne
   81e2e:	4b4d      	ldrne	r3, [pc, #308]	; (81f64 <Lcd+0x3a4>)
   81e30:	4b4b      	ldreq	r3, [pc, #300]	; (81f60 <Lcd+0x3a0>)
   81e32:	4798      	blx	r3
		(_half&0x10)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   81e34:	f014 0f10 	tst.w	r4, #16
   81e38:	f04f 0000 	mov.w	r0, #0
   81e3c:	bf14      	ite	ne
   81e3e:	4b49      	ldrne	r3, [pc, #292]	; (81f64 <Lcd+0x3a4>)
   81e40:	4b47      	ldreq	r3, [pc, #284]	; (81f60 <Lcd+0x3a0>)
   81e42:	4798      	blx	r3
		delay_us(500);
   81e44:	f640 5065 	movw	r0, #3429	; 0xd65
   81e48:	4b43      	ldr	r3, [pc, #268]	; (81f58 <Lcd+0x398>)
   81e4a:	4798      	blx	r3
		_LcdEdown();
   81e4c:	2006      	movs	r0, #6
   81e4e:	f7ff feb7 	bl	81bc0 <Lcd>
	return 0;
   81e52:	2400      	movs	r4, #0
		break;
   81e54:	e77c      	b.n	81d50 <Lcd+0x190>
		_try=5;
   81e56:	2305      	movs	r3, #5
   81e58:	9304      	str	r3, [sp, #16]
		while(_LcdIsBusy()&&_try)
   81e5a:	2408      	movs	r4, #8
			delay_us(500);
   81e5c:	f640 5665 	movw	r6, #3429	; 0xd65
   81e60:	4d3d      	ldr	r5, [pc, #244]	; (81f58 <Lcd+0x398>)
		while(_LcdIsBusy()&&_try)
   81e62:	4620      	mov	r0, r4
   81e64:	f7ff feac 	bl	81bc0 <Lcd>
   81e68:	b148      	cbz	r0, 81e7e <Lcd+0x2be>
   81e6a:	9b04      	ldr	r3, [sp, #16]
   81e6c:	b13b      	cbz	r3, 81e7e <Lcd+0x2be>
			if(!--_try)
   81e6e:	3b01      	subs	r3, #1
   81e70:	9304      	str	r3, [sp, #16]
   81e72:	2b00      	cmp	r3, #0
   81e74:	f000 811c 	beq.w	820b0 <Lcd+0x4f0>
			delay_us(500);
   81e78:	4630      	mov	r0, r6
   81e7a:	47a8      	blx	r5
   81e7c:	e7f1      	b.n	81e62 <Lcd+0x2a2>
		gpio_set_pin_low(LCD_RS);
   81e7e:	2006      	movs	r0, #6
   81e80:	4d37      	ldr	r5, [pc, #220]	; (81f60 <Lcd+0x3a0>)
   81e82:	47a8      	blx	r5
		_LcdWriteHalf(_inst);
   81e84:	9c05      	ldr	r4, [sp, #20]
   81e86:	b2e1      	uxtb	r1, r4
   81e88:	2001      	movs	r0, #1
   81e8a:	f7ff fe99 	bl	81bc0 <Lcd>
		gpio_set_pin_low(LCD_RS);
   81e8e:	2006      	movs	r0, #6
   81e90:	47a8      	blx	r5
		_LcdWriteHalf(_inst<<4);
   81e92:	0121      	lsls	r1, r4, #4
   81e94:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   81e98:	2001      	movs	r0, #1
   81e9a:	f7ff fe91 	bl	81bc0 <Lcd>
	return 0;
   81e9e:	2400      	movs	r4, #0
		break;
   81ea0:	e756      	b.n	81d50 <Lcd+0x190>
		_try=5;
   81ea2:	2305      	movs	r3, #5
   81ea4:	9304      	str	r3, [sp, #16]
		while(_LcdIsBusy()&&_try)
   81ea6:	2408      	movs	r4, #8
			delay_us(500);
   81ea8:	f640 5665 	movw	r6, #3429	; 0xd65
   81eac:	4d2a      	ldr	r5, [pc, #168]	; (81f58 <Lcd+0x398>)
		while(_LcdIsBusy()&&_try)
   81eae:	4620      	mov	r0, r4
   81eb0:	f7ff fe86 	bl	81bc0 <Lcd>
   81eb4:	b148      	cbz	r0, 81eca <Lcd+0x30a>
   81eb6:	9b04      	ldr	r3, [sp, #16]
   81eb8:	b13b      	cbz	r3, 81eca <Lcd+0x30a>
			if(!--_try)
   81eba:	3b01      	subs	r3, #1
   81ebc:	9304      	str	r3, [sp, #16]
   81ebe:	2b00      	cmp	r3, #0
   81ec0:	f000 80f9 	beq.w	820b6 <Lcd+0x4f6>
			delay_us(500);
   81ec4:	4630      	mov	r0, r6
   81ec6:	47a8      	blx	r5
   81ec8:	e7f1      	b.n	81eae <Lcd+0x2ee>
		gpio_set_pin_high(LCD_RS);
   81eca:	2006      	movs	r0, #6
   81ecc:	4d25      	ldr	r5, [pc, #148]	; (81f64 <Lcd+0x3a4>)
   81ece:	47a8      	blx	r5
		_LcdWriteHalf(_data);
   81ed0:	9c05      	ldr	r4, [sp, #20]
   81ed2:	b2e1      	uxtb	r1, r4
   81ed4:	2001      	movs	r0, #1
   81ed6:	f7ff fe73 	bl	81bc0 <Lcd>
		gpio_set_pin_high(LCD_RS);
   81eda:	2006      	movs	r0, #6
   81edc:	47a8      	blx	r5
		_LcdWriteHalf(_data<<4);
   81ede:	0121      	lsls	r1, r4, #4
   81ee0:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   81ee4:	2001      	movs	r0, #1
   81ee6:	f7ff fe6b 	bl	81bc0 <Lcd>
	return 0;
   81eea:	2400      	movs	r4, #0
		break;
   81eec:	e730      	b.n	81d50 <Lcd+0x190>
		delay_us(500);
   81eee:	f640 5065 	movw	r0, #3429	; 0xd65
   81ef2:	4c19      	ldr	r4, [pc, #100]	; (81f58 <Lcd+0x398>)
   81ef4:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   81ef6:	2004      	movs	r0, #4
   81ef8:	4b1a      	ldr	r3, [pc, #104]	; (81f64 <Lcd+0x3a4>)
   81efa:	4798      	blx	r3
		delay_us(500);
   81efc:	f640 5065 	movw	r0, #3429	; 0xd65
   81f00:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81f02:	2004      	movs	r0, #4
   81f04:	4b16      	ldr	r3, [pc, #88]	; (81f60 <Lcd+0x3a0>)
   81f06:	4798      	blx	r3
		delay_us(500);
   81f08:	f640 5065 	movw	r0, #3429	; 0xd65
   81f0c:	47a0      	blx	r4
	return 0;
   81f0e:	2400      	movs	r4, #0
		break;
   81f10:	e71e      	b.n	81d50 <Lcd+0x190>
		delay_us(1500);
   81f12:	f642 002e 	movw	r0, #10286	; 0x282e
   81f16:	4b10      	ldr	r3, [pc, #64]	; (81f58 <Lcd+0x398>)
   81f18:	4798      	blx	r3
		gpio_set_pin_high(LCD_E);
   81f1a:	2004      	movs	r0, #4
   81f1c:	4b11      	ldr	r3, [pc, #68]	; (81f64 <Lcd+0x3a4>)
   81f1e:	4798      	blx	r3
	return 0;
   81f20:	2400      	movs	r4, #0
		break;
   81f22:	e715      	b.n	81d50 <Lcd+0x190>
		gpio_set_pin_low(LCD_E);
   81f24:	2004      	movs	r0, #4
   81f26:	4b0e      	ldr	r3, [pc, #56]	; (81f60 <Lcd+0x3a0>)
   81f28:	4798      	blx	r3
		delay_us(1500);
   81f2a:	f642 002e 	movw	r0, #10286	; 0x282e
   81f2e:	4b0a      	ldr	r3, [pc, #40]	; (81f58 <Lcd+0x398>)
   81f30:	4798      	blx	r3
	return 0;
   81f32:	2400      	movs	r4, #0
		break;
   81f34:	e70c      	b.n	81d50 <Lcd+0x190>
		_LcdWriteInst((line2addr[_nLine&0x03]+_nCol)|0x80);
   81f36:	9b05      	ldr	r3, [sp, #20]
   81f38:	f003 0303 	and.w	r3, r3, #3
   81f3c:	4a0d      	ldr	r2, [pc, #52]	; (81f74 <Lcd+0x3b4>)
   81f3e:	5cd1      	ldrb	r1, [r2, r3]
   81f40:	9b06      	ldr	r3, [sp, #24]
   81f42:	4419      	add	r1, r3
   81f44:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   81f48:	2002      	movs	r0, #2
   81f4a:	f7ff fe39 	bl	81bc0 <Lcd>
	return 0;
   81f4e:	2400      	movs	r4, #0
		break;
   81f50:	e6fe      	b.n	81d50 <Lcd+0x190>
   81f52:	bf00      	nop
   81f54:	0014ed25 	.word	0x0014ed25
   81f58:	20000001 	.word	0x20000001
   81f5c:	00080799 	.word	0x00080799
   81f60:	0008075f 	.word	0x0008075f
   81f64:	00080745 	.word	0x00080745
   81f68:	001f63b7 	.word	0x001f63b7
   81f6c:	00010bdc 	.word	0x00010bdc
   81f70:	200010c0 	.word	0x200010c0
   81f74:	00088544 	.word	0x00088544
		_LcdSetDataLineIn();
   81f78:	200a      	movs	r0, #10
   81f7a:	f7ff fe21 	bl	81bc0 <Lcd>
		gpio_set_pin_low(LCD_RS);
   81f7e:	2006      	movs	r0, #6
   81f80:	4b4e      	ldr	r3, [pc, #312]	; (820bc <Lcd+0x4fc>)
   81f82:	4798      	blx	r3
		gpio_set_pin_high(LCD_RWB);
   81f84:	2005      	movs	r0, #5
   81f86:	4d4e      	ldr	r5, [pc, #312]	; (820c0 <Lcd+0x500>)
   81f88:	47a8      	blx	r5
		delay_us(50);
   81f8a:	f240 1057 	movw	r0, #343	; 0x157
   81f8e:	4c4d      	ldr	r4, [pc, #308]	; (820c4 <Lcd+0x504>)
   81f90:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   81f92:	2004      	movs	r0, #4
   81f94:	47a8      	blx	r5
		delay_us(50);
   81f96:	f240 1057 	movw	r0, #343	; 0x157
   81f9a:	47a0      	blx	r4
		_lcdStatus = (gpio_pin_is_high(LCD_DB7)<<7)|(gpio_pin_is_high(LCD_DB6)<<6)|(gpio_pin_is_high(LCD_DB5)<<5)|(gpio_pin_is_high(LCD_DB4)<<4);
   81f9c:	2003      	movs	r0, #3
   81f9e:	4b4a      	ldr	r3, [pc, #296]	; (820c8 <Lcd+0x508>)
   81fa0:	4798      	blx	r3
   81fa2:	2800      	cmp	r0, #0
   81fa4:	bf14      	ite	ne
   81fa6:	2580      	movne	r5, #128	; 0x80
   81fa8:	2500      	moveq	r5, #0
   81faa:	2002      	movs	r0, #2
   81fac:	4b46      	ldr	r3, [pc, #280]	; (820c8 <Lcd+0x508>)
   81fae:	4798      	blx	r3
   81fb0:	2800      	cmp	r0, #0
   81fb2:	bf14      	ite	ne
   81fb4:	2440      	movne	r4, #64	; 0x40
   81fb6:	2400      	moveq	r4, #0
   81fb8:	4325      	orrs	r5, r4
   81fba:	2001      	movs	r0, #1
   81fbc:	4b42      	ldr	r3, [pc, #264]	; (820c8 <Lcd+0x508>)
   81fbe:	4798      	blx	r3
   81fc0:	2800      	cmp	r0, #0
   81fc2:	bf14      	ite	ne
   81fc4:	2420      	movne	r4, #32
   81fc6:	2400      	moveq	r4, #0
   81fc8:	432c      	orrs	r4, r5
   81fca:	2000      	movs	r0, #0
   81fcc:	4b3e      	ldr	r3, [pc, #248]	; (820c8 <Lcd+0x508>)
   81fce:	4798      	blx	r3
   81fd0:	2800      	cmp	r0, #0
   81fd2:	bf14      	ite	ne
   81fd4:	2510      	movne	r5, #16
   81fd6:	2500      	moveq	r5, #0
   81fd8:	4325      	orrs	r5, r4
		delay_us(50);
   81fda:	f240 1057 	movw	r0, #343	; 0x157
   81fde:	4c39      	ldr	r4, [pc, #228]	; (820c4 <Lcd+0x504>)
   81fe0:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81fe2:	2004      	movs	r0, #4
   81fe4:	4b35      	ldr	r3, [pc, #212]	; (820bc <Lcd+0x4fc>)
   81fe6:	4798      	blx	r3
		delay_us(50);
   81fe8:	f240 1057 	movw	r0, #343	; 0x157
   81fec:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   81fee:	2004      	movs	r0, #4
   81ff0:	4b33      	ldr	r3, [pc, #204]	; (820c0 <Lcd+0x500>)
   81ff2:	4798      	blx	r3
		delay_us(50);
   81ff4:	f240 1057 	movw	r0, #343	; 0x157
   81ff8:	47a0      	blx	r4
		_lcdStatus |= (gpio_pin_is_high(LCD_DB7)<<3)|(gpio_pin_is_high(LCD_DB6)<<2)|(gpio_pin_is_high(LCD_DB5)<<1)|(gpio_pin_is_high(LCD_DB4)<<0);
   81ffa:	2003      	movs	r0, #3
   81ffc:	4b32      	ldr	r3, [pc, #200]	; (820c8 <Lcd+0x508>)
   81ffe:	4798      	blx	r3
   82000:	2800      	cmp	r0, #0
   82002:	bf14      	ite	ne
   82004:	2408      	movne	r4, #8
   82006:	2400      	moveq	r4, #0
   82008:	2002      	movs	r0, #2
   8200a:	4b2f      	ldr	r3, [pc, #188]	; (820c8 <Lcd+0x508>)
   8200c:	4798      	blx	r3
   8200e:	2800      	cmp	r0, #0
   82010:	bf14      	ite	ne
   82012:	2604      	movne	r6, #4
   82014:	2600      	moveq	r6, #0
   82016:	4326      	orrs	r6, r4
   82018:	2001      	movs	r0, #1
   8201a:	4b2b      	ldr	r3, [pc, #172]	; (820c8 <Lcd+0x508>)
   8201c:	4798      	blx	r3
   8201e:	2800      	cmp	r0, #0
   82020:	bf14      	ite	ne
   82022:	2402      	movne	r4, #2
   82024:	2400      	moveq	r4, #0
   82026:	4334      	orrs	r4, r6
   82028:	2000      	movs	r0, #0
   8202a:	4b27      	ldr	r3, [pc, #156]	; (820c8 <Lcd+0x508>)
   8202c:	4798      	blx	r3
   8202e:	2800      	cmp	r0, #0
   82030:	bf18      	it	ne
   82032:	f044 0401 	orrne.w	r4, r4, #1
   82036:	432c      	orrs	r4, r5
		delay_us(50);
   82038:	f240 1057 	movw	r0, #343	; 0x157
   8203c:	4d21      	ldr	r5, [pc, #132]	; (820c4 <Lcd+0x504>)
   8203e:	47a8      	blx	r5
		gpio_set_pin_low(LCD_E);
   82040:	2004      	movs	r0, #4
   82042:	4b1e      	ldr	r3, [pc, #120]	; (820bc <Lcd+0x4fc>)
   82044:	4798      	blx	r3
		delay_us(50);
   82046:	f240 1057 	movw	r0, #343	; 0x157
   8204a:	47a8      	blx	r5
		_LcdSetDataLineOut();
   8204c:	2009      	movs	r0, #9
   8204e:	f7ff fdb7 	bl	81bc0 <Lcd>
		return (uint32_t)((_lcdStatus&0x80)==0x80);
   82052:	09e4      	lsrs	r4, r4, #7
   82054:	e67c      	b.n	81d50 <Lcd+0x190>
		gpio_configure_pin(LCD_DB4,			LCD_PIN_OUT_FLAGS);
   82056:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8205a:	2000      	movs	r0, #0
   8205c:	4c1b      	ldr	r4, [pc, #108]	; (820cc <Lcd+0x50c>)
   8205e:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_OUT_FLAGS);
   82060:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   82064:	2001      	movs	r0, #1
   82066:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_OUT_FLAGS);
   82068:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8206c:	2002      	movs	r0, #2
   8206e:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_OUT_FLAGS);
   82070:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   82074:	2003      	movs	r0, #3
   82076:	47a0      	blx	r4
	return 0;
   82078:	2400      	movs	r4, #0
		break;
   8207a:	e669      	b.n	81d50 <Lcd+0x190>
		gpio_configure_pin(LCD_DB4,			LCD_PIN_IN_FLAGS);
   8207c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82080:	2000      	movs	r0, #0
   82082:	4c12      	ldr	r4, [pc, #72]	; (820cc <Lcd+0x50c>)
   82084:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_IN_FLAGS);
   82086:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8208a:	2001      	movs	r0, #1
   8208c:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_IN_FLAGS);
   8208e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82092:	2002      	movs	r0, #2
   82094:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_IN_FLAGS);
   82096:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8209a:	2003      	movs	r0, #3
   8209c:	47a0      	blx	r4
	return 0;
   8209e:	2400      	movs	r4, #0
		break;
   820a0:	e656      	b.n	81d50 <Lcd+0x190>
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
   820a2:	200f      	movs	r0, #15
   820a4:	4b0a      	ldr	r3, [pc, #40]	; (820d0 <Lcd+0x510>)
   820a6:	4798      	blx	r3
	return 0;
   820a8:	2400      	movs	r4, #0
   820aa:	e651      	b.n	81d50 <Lcd+0x190>
   820ac:	2400      	movs	r4, #0
   820ae:	e64f      	b.n	81d50 <Lcd+0x190>
				return -1;
   820b0:	f04f 34ff 	mov.w	r4, #4294967295
   820b4:	e64c      	b.n	81d50 <Lcd+0x190>
				return -1;
   820b6:	f04f 34ff 	mov.w	r4, #4294967295
   820ba:	e649      	b.n	81d50 <Lcd+0x190>
   820bc:	0008075f 	.word	0x0008075f
   820c0:	00080745 	.word	0x00080745
   820c4:	20000001 	.word	0x20000001
   820c8:	00080729 	.word	0x00080729
   820cc:	00080799 	.word	0x00080799
   820d0:	000816a1 	.word	0x000816a1

000820d4 <Shell>:

#define EnterEditMode()					mBitsSet(shell.status,ST_SHELL_PROMPT_DISABLED)
#define ExitEditMode()					mBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED)

uint32_t Shell(uint32_t sc, ...)
{
   820d4:	b40f      	push	{r0, r1, r2, r3}
   820d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   820da:	b087      	sub	sp, #28
	uint32_t u1,u2;
	char*pSt;

	switch(sc)
   820dc:	990e      	ldr	r1, [sp, #56]	; 0x38
   820de:	2904      	cmp	r1, #4
   820e0:	f000 80a1 	beq.w	82226 <Shell+0x152>
   820e4:	d940      	bls.n	82168 <Shell+0x94>
   820e6:	2906      	cmp	r1, #6
   820e8:	d054      	beq.n	82194 <Shell+0xc0>
   820ea:	d362      	bcc.n	821b2 <Shell+0xde>
   820ec:	2907      	cmp	r1, #7
   820ee:	f000 85eb 	beq.w	82cc8 <Shell+0xbf4>
   820f2:	2964      	cmp	r1, #100	; 0x64
   820f4:	f040 8668 	bne.w	82dc8 <Shell+0xcf4>
	{
	case SHELL_NEW:
		shell.editTimer=shell.escapeTimer=0;
   820f8:	4b9d      	ldr	r3, [pc, #628]	; (82370 <Shell+0x29c>)
   820fa:	2400      	movs	r4, #0
   820fc:	619c      	str	r4, [r3, #24]
   820fe:	615c      	str	r4, [r3, #20]
		shell.state=IDLE;
   82100:	771c      	strb	r4, [r3, #28]
		shell.status=ST_SHELL_SHOW_UNKNOW_CRC;
   82102:	2202      	movs	r2, #2
   82104:	801a      	strh	r2, [r3, #0]
		Lcd(LCD_NEW);
   82106:	2064      	movs	r0, #100	; 0x64
   82108:	4b9a      	ldr	r3, [pc, #616]	; (82374 <Shell+0x2a0>)
   8210a:	4798      	blx	r3
		gpio_configure_pin(HEART_LED, HEART_LED_FLAGS);
   8210c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82110:	2034      	movs	r0, #52	; 0x34
   82112:	4d99      	ldr	r5, [pc, #612]	; (82378 <Shell+0x2a4>)
   82114:	47a8      	blx	r5
		gpio_configure_pin(POWER_LED, POWER_LED_FLAGS);
   82116:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8211a:	2033      	movs	r0, #51	; 0x33
   8211c:	47a8      	blx	r5

#if POWER_LED_ACTIVE_LEVEL
		gpio_set_pin_low(POWER_LED);
   8211e:	2033      	movs	r0, #51	; 0x33
   82120:	4b96      	ldr	r3, [pc, #600]	; (8237c <Shell+0x2a8>)
   82122:	4798      	blx	r3
#else
		gpio_set_pin_high(POWER_LED);
#endif
		kRtc(KRTC_NEW);
   82124:	2064      	movs	r0, #100	; 0x64
   82126:	4b96      	ldr	r3, [pc, #600]	; (82380 <Shell+0x2ac>)
   82128:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   8212a:	2064      	movs	r0, #100	; 0x64
   8212c:	4b95      	ldr	r3, [pc, #596]	; (82384 <Shell+0x2b0>)
   8212e:	4798      	blx	r3
		//LcdPutstr("Hello World!",0,0);
		//LcdPutstr("Hello World!",1,1);
		//LcdPutstr("Hello World!",2,2);
		//LcdPutstr("Hello World!",3,3);
		PushTask(Shell,_SHELL_HEART_BEAT,-1,0);
   82130:	4e95      	ldr	r6, [pc, #596]	; (82388 <Shell+0x2b4>)
   82132:	9400      	str	r4, [sp, #0]
   82134:	f04f 33ff 	mov.w	r3, #4294967295
   82138:	2201      	movs	r2, #1
   8213a:	4631      	mov	r1, r6
   8213c:	2066      	movs	r0, #102	; 0x66
   8213e:	4d93      	ldr	r5, [pc, #588]	; (8238c <Shell+0x2b8>)
   82140:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,0);
   82142:	9400      	str	r4, [sp, #0]
   82144:	4623      	mov	r3, r4
   82146:	2204      	movs	r2, #4
   82148:	4631      	mov	r1, r6
   8214a:	2066      	movs	r0, #102	; 0x66
   8214c:	47a8      	blx	r5
		PushTask(Menu,MENU_NEW,0,0);
   8214e:	9400      	str	r4, [sp, #0]
   82150:	4623      	mov	r3, r4
   82152:	2264      	movs	r2, #100	; 0x64
   82154:	498e      	ldr	r1, [pc, #568]	; (82390 <Shell+0x2bc>)
   82156:	2066      	movs	r0, #102	; 0x66
   82158:	47a8      	blx	r5

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
	}
	return 0;
   8215a:	46a0      	mov	r8, r4
}
   8215c:	4640      	mov	r0, r8
   8215e:	b007      	add	sp, #28
   82160:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82164:	b004      	add	sp, #16
   82166:	4770      	bx	lr
	switch(sc)
   82168:	2902      	cmp	r1, #2
   8216a:	f000 80a6 	beq.w	822ba <Shell+0x1e6>
   8216e:	f200 833c 	bhi.w	827ea <Shell+0x716>
   82172:	2901      	cmp	r1, #1
   82174:	f040 8628 	bne.w	82dc8 <Shell+0xcf4>
		if(heartBeatRhythm[++k]==0) k=0;
   82178:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8217a:	3301      	adds	r3, #1
   8217c:	930f      	str	r3, [sp, #60]	; 0x3c
   8217e:	4a85      	ldr	r2, [pc, #532]	; (82394 <Shell+0x2c0>)
   82180:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   82184:	2a00      	cmp	r2, #0
   82186:	d13b      	bne.n	82200 <Shell+0x12c>
   82188:	2300      	movs	r3, #0
   8218a:	930f      	str	r3, [sp, #60]	; 0x3c
		else gpio_set_pin_low(HEART_LED);
   8218c:	2034      	movs	r0, #52	; 0x34
   8218e:	4b7b      	ldr	r3, [pc, #492]	; (8237c <Shell+0x2a8>)
   82190:	4798      	blx	r3
   82192:	e03b      	b.n	8220c <Shell+0x138>
	    while((*(char*)_pSep)&&(*(char*)_pSep!=_ch)) _pSep++;
   82194:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82196:	781a      	ldrb	r2, [r3, #0]
   82198:	b14a      	cbz	r2, 821ae <Shell+0xda>
   8219a:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   8219e:	428a      	cmp	r2, r1
   821a0:	d005      	beq.n	821ae <Shell+0xda>
   821a2:	3301      	adds	r3, #1
   821a4:	9310      	str	r3, [sp, #64]	; 0x40
   821a6:	781a      	ldrb	r2, [r3, #0]
   821a8:	b10a      	cbz	r2, 821ae <Shell+0xda>
   821aa:	428a      	cmp	r2, r1
   821ac:	d1f9      	bne.n	821a2 <Shell+0xce>
	    return (uint32_t)*(char*)_pSep;
   821ae:	4690      	mov	r8, r2
   821b0:	e7d4      	b.n	8215c <Shell+0x88>
		while(len--)
   821b2:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   821b6:	f108 33ff 	add.w	r3, r8, #4294967295
   821ba:	9310      	str	r3, [sp, #64]	; 0x40
   821bc:	f1b8 0f00 	cmp.w	r8, #0
   821c0:	d0cc      	beq.n	8215c <Shell+0x88>
			Putc(hexDigits[*(char*)str>>4]);
   821c2:	4e75      	ldr	r6, [pc, #468]	; (82398 <Shell+0x2c4>)
   821c4:	2566      	movs	r5, #102	; 0x66
   821c6:	4c6f      	ldr	r4, [pc, #444]	; (82384 <Shell+0x2b0>)
   821c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821ca:	781b      	ldrb	r3, [r3, #0]
   821cc:	091b      	lsrs	r3, r3, #4
   821ce:	5cf1      	ldrb	r1, [r6, r3]
   821d0:	4628      	mov	r0, r5
   821d2:	47a0      	blx	r4
			Putc(hexDigits[*(char*)str&0x0F]);
   821d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821d6:	781b      	ldrb	r3, [r3, #0]
   821d8:	f003 030f 	and.w	r3, r3, #15
   821dc:	5cf1      	ldrb	r1, [r6, r3]
   821de:	4628      	mov	r0, r5
   821e0:	47a0      	blx	r4
			Putc(' ');
   821e2:	2120      	movs	r1, #32
   821e4:	4628      	mov	r0, r5
   821e6:	47a0      	blx	r4
			str++;
   821e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   821ea:	3301      	adds	r3, #1
   821ec:	930f      	str	r3, [sp, #60]	; 0x3c
		while(len--)
   821ee:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   821f2:	f108 33ff 	add.w	r3, r8, #4294967295
   821f6:	9310      	str	r3, [sp, #64]	; 0x40
   821f8:	f1b8 0f00 	cmp.w	r8, #0
   821fc:	d1e4      	bne.n	821c8 <Shell+0xf4>
   821fe:	e7ad      	b.n	8215c <Shell+0x88>
		if((k%2==0)^(!HEART_LED_ACTIVE_LEVEL)) gpio_set_pin_high(HEART_LED);
   82200:	f013 0f01 	tst.w	r3, #1
   82204:	d0c2      	beq.n	8218c <Shell+0xb8>
   82206:	2034      	movs	r0, #52	; 0x34
   82208:	4b64      	ldr	r3, [pc, #400]	; (8239c <Shell+0x2c8>)
   8220a:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEART_BEAT,k,heartBeatRhythm[k]);
   8220c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8220e:	4a61      	ldr	r2, [pc, #388]	; (82394 <Shell+0x2c0>)
   82210:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   82214:	9200      	str	r2, [sp, #0]
   82216:	2201      	movs	r2, #1
   82218:	495b      	ldr	r1, [pc, #364]	; (82388 <Shell+0x2b4>)
   8221a:	2066      	movs	r0, #102	; 0x66
   8221c:	4c5b      	ldr	r4, [pc, #364]	; (8238c <Shell+0x2b8>)
   8221e:	47a0      	blx	r4
	return 0;
   82220:	f04f 0800 	mov.w	r8, #0
		break;
   82224:	e79a      	b.n	8215c <Shell+0x88>
		rtc_get_time(RTC,&_hour,&_minute,&_second);
   82226:	ab05      	add	r3, sp, #20
   82228:	aa0f      	add	r2, sp, #60	; 0x3c
   8222a:	a90e      	add	r1, sp, #56	; 0x38
   8222c:	485c      	ldr	r0, [pc, #368]	; (823a0 <Shell+0x2cc>)
   8222e:	4c5d      	ldr	r4, [pc, #372]	; (823a4 <Shell+0x2d0>)
   82230:	47a0      	blx	r4
		if(mIsBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED))
   82232:	4b4f      	ldr	r3, [pc, #316]	; (82370 <Shell+0x29c>)
   82234:	881b      	ldrh	r3, [r3, #0]
   82236:	f013 0f04 	tst.w	r3, #4
   8223a:	d030      	beq.n	8229e <Shell+0x1ca>
		if(IsLcdOn())
   8223c:	2068      	movs	r0, #104	; 0x68
   8223e:	4b4d      	ldr	r3, [pc, #308]	; (82374 <Shell+0x2a0>)
   82240:	4798      	blx	r3
   82242:	4680      	mov	r8, r0
   82244:	2800      	cmp	r0, #0
   82246:	d089      	beq.n	8215c <Shell+0x88>
			sprintf(shellTmpBuf,"%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   82248:	ad0e      	add	r5, sp, #56	; 0x38
   8224a:	f855 2b04 	ldr.w	r2, [r5], #4
   8224e:	4c56      	ldr	r4, [pc, #344]	; (823a8 <Shell+0x2d4>)
   82250:	ae06      	add	r6, sp, #24
   82252:	f856 3d04 	ldr.w	r3, [r6, #-4]!
   82256:	9300      	str	r3, [sp, #0]
   82258:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8225a:	4954      	ldr	r1, [pc, #336]	; (823ac <Shell+0x2d8>)
   8225c:	4620      	mov	r0, r4
   8225e:	f8df 815c 	ldr.w	r8, [pc, #348]	; 823bc <Shell+0x2e8>
   82262:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,1,6);
   82264:	2306      	movs	r3, #6
   82266:	2201      	movs	r2, #1
   82268:	4621      	mov	r1, r4
   8226a:	2067      	movs	r0, #103	; 0x67
   8226c:	4f41      	ldr	r7, [pc, #260]	; (82374 <Shell+0x2a0>)
   8226e:	47b8      	blx	r7
			rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   82270:	ab04      	add	r3, sp, #16
   82272:	9300      	str	r3, [sp, #0]
   82274:	4633      	mov	r3, r6
   82276:	462a      	mov	r2, r5
   82278:	a90e      	add	r1, sp, #56	; 0x38
   8227a:	4849      	ldr	r0, [pc, #292]	; (823a0 <Shell+0x2cc>)
   8227c:	4d4c      	ldr	r5, [pc, #304]	; (823b0 <Shell+0x2dc>)
   8227e:	47a8      	blx	r5
			sprintf(shellTmpBuf,"%02d/%02d/%04d",(int)_date,(int)_month,(int)_year);
   82280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82282:	9300      	str	r3, [sp, #0]
   82284:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82286:	9a05      	ldr	r2, [sp, #20]
   82288:	494a      	ldr	r1, [pc, #296]	; (823b4 <Shell+0x2e0>)
   8228a:	4620      	mov	r0, r4
   8228c:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,0,5);
   8228e:	2305      	movs	r3, #5
   82290:	2200      	movs	r2, #0
   82292:	4621      	mov	r1, r4
   82294:	2067      	movs	r0, #103	; 0x67
   82296:	47b8      	blx	r7
	return 0;
   82298:	f04f 0800 	mov.w	r8, #0
   8229c:	e75e      	b.n	8215c <Shell+0x88>
			sprintf(shellTmpBuf,"\r%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   8229e:	4c42      	ldr	r4, [pc, #264]	; (823a8 <Shell+0x2d4>)
   822a0:	9b05      	ldr	r3, [sp, #20]
   822a2:	9300      	str	r3, [sp, #0]
   822a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   822a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   822a8:	4943      	ldr	r1, [pc, #268]	; (823b8 <Shell+0x2e4>)
   822aa:	4620      	mov	r0, r4
   822ac:	4d43      	ldr	r5, [pc, #268]	; (823bc <Shell+0x2e8>)
   822ae:	47a8      	blx	r5
			Putstr(shellTmpBuf);
   822b0:	4621      	mov	r1, r4
   822b2:	2067      	movs	r0, #103	; 0x67
   822b4:	4b33      	ldr	r3, [pc, #204]	; (82384 <Shell+0x2b0>)
   822b6:	4798      	blx	r3
   822b8:	e7c0      	b.n	8223c <Shell+0x168>
		switch(shell.state)
   822ba:	4b2d      	ldr	r3, [pc, #180]	; (82370 <Shell+0x29c>)
   822bc:	7f1b      	ldrb	r3, [r3, #28]
   822be:	2b06      	cmp	r3, #6
   822c0:	f200 8285 	bhi.w	827ce <Shell+0x6fa>
   822c4:	e8df f013 	tbh	[pc, r3, lsl #1]
   822c8:	00840007 	.word	0x00840007
   822cc:	009b0087 	.word	0x009b0087
   822d0:	026f026c 	.word	0x026f026c
   822d4:	01bc      	.short	0x01bc
			switch(_kbhitchar)
   822d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   822d8:	b2d3      	uxtb	r3, r2
   822da:	3b08      	subs	r3, #8
   822dc:	2b18      	cmp	r3, #24
   822de:	d82d      	bhi.n	8233c <Shell+0x268>
   822e0:	e8df f013 	tbh	[pc, r3, lsl #1]
   822e4:	05790579 	.word	0x05790579
   822e8:	002c0579 	.word	0x002c0579
   822ec:	0579002c 	.word	0x0579002c
   822f0:	002c002c 	.word	0x002c002c
   822f4:	002c002c 	.word	0x002c002c
   822f8:	002c002c 	.word	0x002c002c
   822fc:	002c002c 	.word	0x002c002c
   82300:	002c002c 	.word	0x002c002c
   82304:	002c002c 	.word	0x002c002c
   82308:	0019002c 	.word	0x0019002c
   8230c:	002c002c 	.word	0x002c002c
   82310:	002c002c 	.word	0x002c002c
   82314:	0579      	.short	0x0579
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   82316:	4c16      	ldr	r4, [pc, #88]	; (82370 <Shell+0x29c>)
   82318:	2314      	movs	r3, #20
   8231a:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   8231c:	4b28      	ldr	r3, [pc, #160]	; (823c0 <Shell+0x2ec>)
   8231e:	60a3      	str	r3, [r4, #8]
   82320:	201b      	movs	r0, #27
   82322:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   82326:	2501      	movs	r5, #1
   82328:	81e5      	strh	r5, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   8232a:	f64f 71ff 	movw	r1, #65535	; 0xffff
   8232e:	4b25      	ldr	r3, [pc, #148]	; (823c4 <Shell+0x2f0>)
   82330:	4798      	blx	r3
   82332:	8220      	strh	r0, [r4, #16]
				shell.state=ESCAPE;
   82334:	7725      	strb	r5, [r4, #28]
	return 0;
   82336:	f04f 0800 	mov.w	r8, #0
				break;
   8233a:	e70f      	b.n	8215c <Shell+0x88>
				EnterEditMode();
   8233c:	4c0c      	ldr	r4, [pc, #48]	; (82370 <Shell+0x29c>)
   8233e:	8823      	ldrh	r3, [r4, #0]
   82340:	f043 0304 	orr.w	r3, r3, #4
   82344:	8023      	strh	r3, [r4, #0]
				shell.editTimer=SHELL_EDIT_TIMEOUT;
   82346:	2500      	movs	r5, #0
   82348:	6165      	str	r5, [r4, #20]
				*shell.pEdit++=_kbhitchar;
   8234a:	4b1f      	ldr	r3, [pc, #124]	; (823c8 <Shell+0x2f4>)
   8234c:	6063      	str	r3, [r4, #4]
			switch(_kbhitchar)
   8234e:	f803 2c01 	strb.w	r2, [r3, #-1]
				shell.nChar=1;
   82352:	2301      	movs	r3, #1
   82354:	81a3      	strh	r3, [r4, #12]
				Putstr("\r\n>"); Putc(_kbhitchar);
   82356:	491d      	ldr	r1, [pc, #116]	; (823cc <Shell+0x2f8>)
   82358:	2067      	movs	r0, #103	; 0x67
   8235a:	4e0a      	ldr	r6, [pc, #40]	; (82384 <Shell+0x2b0>)
   8235c:	47b0      	blx	r6
   8235e:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   82362:	2066      	movs	r0, #102	; 0x66
   82364:	47b0      	blx	r6
				shell.state=EDITION;
   82366:	2303      	movs	r3, #3
   82368:	7723      	strb	r3, [r4, #28]
	return 0;
   8236a:	46a8      	mov	r8, r5
				break;
   8236c:	e6f6      	b.n	8215c <Shell+0x88>
   8236e:	bf00      	nop
   82370:	200011c8 	.word	0x200011c8
   82374:	00081bc1 	.word	0x00081bc1
   82378:	00080799 	.word	0x00080799
   8237c:	0008075f 	.word	0x0008075f
   82380:	00081881 	.word	0x00081881
   82384:	00083269 	.word	0x00083269
   82388:	000820d5 	.word	0x000820d5
   8238c:	000834a5 	.word	0x000834a5
   82390:	000802ad 	.word	0x000802ad
   82394:	00088600 	.word	0x00088600
   82398:	00088614 	.word	0x00088614
   8239c:	00080745 	.word	0x00080745
   823a0:	400e1260 	.word	0x400e1260
   823a4:	00080bdd 	.word	0x00080bdd
   823a8:	20001268 	.word	0x20001268
   823ac:	00088558 	.word	0x00088558
   823b0:	00080ccd 	.word	0x00080ccd
   823b4:	00088568 	.word	0x00088568
   823b8:	00088548 	.word	0x00088548
   823bc:	00083901 	.word	0x00083901
   823c0:	200011e9 	.word	0x200011e9
   823c4:	0008168d 	.word	0x0008168d
   823c8:	200010c5 	.word	0x200010c5
   823cc:	00088578 	.word	0x00088578
				shell.state=ESCAPE_SEQ;
   823d0:	2202      	movs	r2, #2
   823d2:	4b91      	ldr	r3, [pc, #580]	; (82618 <Shell+0x544>)
   823d4:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   823d6:	4c90      	ldr	r4, [pc, #576]	; (82618 <Shell+0x544>)
   823d8:	2314      	movs	r3, #20
   823da:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++=_kbhitchar;
   823dc:	68a3      	ldr	r3, [r4, #8]
   823de:	1c5a      	adds	r2, r3, #1
   823e0:	60a2      	str	r2, [r4, #8]
   823e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   823e4:	701a      	strb	r2, [r3, #0]
				shell.nEscChar++;
   823e6:	89e3      	ldrh	r3, [r4, #14]
   823e8:	3301      	adds	r3, #1
   823ea:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   823ec:	8a21      	ldrh	r1, [r4, #16]
   823ee:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   823f2:	4b8a      	ldr	r3, [pc, #552]	; (8261c <Shell+0x548>)
   823f4:	4798      	blx	r3
   823f6:	8220      	strh	r0, [r4, #16]
	return 0;
   823f8:	f04f 0800 	mov.w	r8, #0
			break;
   823fc:	e6ae      	b.n	8215c <Shell+0x88>
			shell.editTimer=SHELL_EDIT_TIMEOUT;
   823fe:	2200      	movs	r2, #0
   82400:	4b85      	ldr	r3, [pc, #532]	; (82618 <Shell+0x544>)
   82402:	615a      	str	r2, [r3, #20]
			switch(_kbhitchar)
   82404:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82406:	b2d1      	uxtb	r1, r2
   82408:	f1a1 0308 	sub.w	r3, r1, #8
   8240c:	2b13      	cmp	r3, #19
   8240e:	f200 8094 	bhi.w	8253a <Shell+0x466>
   82412:	e8df f003 	tbb	[pc, r3]
   82416:	1e36      	.short	0x1e36
   82418:	74929274 	.word	0x74929274
   8241c:	92929292 	.word	0x92929292
   82420:	92929292 	.word	0x92929292
   82424:	92929292 	.word	0x92929292
   82428:	0a92      	.short	0x0a92
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   8242a:	4c7b      	ldr	r4, [pc, #492]	; (82618 <Shell+0x544>)
   8242c:	2314      	movs	r3, #20
   8242e:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   82430:	4b7b      	ldr	r3, [pc, #492]	; (82620 <Shell+0x54c>)
   82432:	60a3      	str	r3, [r4, #8]
   82434:	201b      	movs	r0, #27
   82436:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   8243a:	2301      	movs	r3, #1
   8243c:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   8243e:	f64f 71ff 	movw	r1, #65535	; 0xffff
   82442:	4b76      	ldr	r3, [pc, #472]	; (8261c <Shell+0x548>)
   82444:	4798      	blx	r3
   82446:	8220      	strh	r0, [r4, #16]
				shell.state=ED_ESCAPE;
   82448:	2304      	movs	r3, #4
   8244a:	7723      	strb	r3, [r4, #28]
	return 0;
   8244c:	f04f 0800 	mov.w	r8, #0
				break;
   82450:	e684      	b.n	8215c <Shell+0x88>
				const char ctrl_right_arrow[]="\e[1;5C";
   82452:	4b74      	ldr	r3, [pc, #464]	; (82624 <Shell+0x550>)
   82454:	e893 0003 	ldmia.w	r3, {r0, r1}
   82458:	9002      	str	r0, [sp, #8]
   8245a:	f8ad 100c 	strh.w	r1, [sp, #12]
   8245e:	0c09      	lsrs	r1, r1, #16
   82460:	f88d 100e 	strb.w	r1, [sp, #14]
				memcpy(shellEscapeBuf,ctrl_right_arrow,6);
   82464:	4b70      	ldr	r3, [pc, #448]	; (82628 <Shell+0x554>)
   82466:	6018      	str	r0, [r3, #0]
   82468:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   8246c:	809a      	strh	r2, [r3, #4]
				shell.nEscChar=6;
   8246e:	4b6a      	ldr	r3, [pc, #424]	; (82618 <Shell+0x544>)
   82470:	2206      	movs	r2, #6
   82472:	81da      	strh	r2, [r3, #14]
				shell.state=ED_ESCAPE_SEQ;
   82474:	2205      	movs	r2, #5
   82476:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=1;	//Ask a ESC SEQUENCE timeout : treat as a "ctrl+right_arrow" key
   82478:	2201      	movs	r2, #1
   8247a:	619a      	str	r2, [r3, #24]
	return 0;
   8247c:	f04f 0800 	mov.w	r8, #0
				break;
   82480:	e66c      	b.n	8215c <Shell+0x88>
                if(shell.nChar)
   82482:	4b65      	ldr	r3, [pc, #404]	; (82618 <Shell+0x544>)
   82484:	899a      	ldrh	r2, [r3, #12]
   82486:	2a00      	cmp	r2, #0
   82488:	f000 84a9 	beq.w	82dde <Shell+0xd0a>
	                pEnd = (uint32_t)shellEditBuf+shell.nChar;
   8248c:	4c67      	ldr	r4, [pc, #412]	; (8262c <Shell+0x558>)
   8248e:	4422      	add	r2, r4
   82490:	920e      	str	r2, [sp, #56]	; 0x38
	                pSrc = (uint32_t)shell.pEdit;
   82492:	685b      	ldr	r3, [r3, #4]
   82494:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   82496:	429a      	cmp	r2, r3
   82498:	d908      	bls.n	824ac <Shell+0x3d8>
		                *(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   8249a:	781a      	ldrb	r2, [r3, #0]
   8249c:	f803 2c01 	strb.w	r2, [r3, #-1]
   824a0:	9b05      	ldr	r3, [sp, #20]
   824a2:	3301      	adds	r3, #1
   824a4:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   824a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   824a8:	429a      	cmp	r2, r3
   824aa:	d8f6      	bhi.n	8249a <Shell+0x3c6>
	                *(char*)pSrc++=' ';
   824ac:	2220      	movs	r2, #32
   824ae:	f803 2c01 	strb.w	r2, [r3, #-1]
	                Putstr("\e[D");
   824b2:	4d5f      	ldr	r5, [pc, #380]	; (82630 <Shell+0x55c>)
   824b4:	4629      	mov	r1, r5
   824b6:	2067      	movs	r0, #103	; 0x67
   824b8:	4e5e      	ldr	r6, [pc, #376]	; (82634 <Shell+0x560>)
   824ba:	47b0      	blx	r6
	                shell.pEdit--; shell.nChar--;
   824bc:	4a56      	ldr	r2, [pc, #344]	; (82618 <Shell+0x544>)
   824be:	6851      	ldr	r1, [r2, #4]
   824c0:	3901      	subs	r1, #1
   824c2:	6051      	str	r1, [r2, #4]
   824c4:	8993      	ldrh	r3, [r2, #12]
   824c6:	3b01      	subs	r3, #1
   824c8:	b29b      	uxth	r3, r3
   824ca:	8193      	strh	r3, [r2, #12]
	                k=Putstrlen(shell.pEdit,shell.nChar-(shell.pEdit-shellEditBuf)+1);
   824cc:	1c62      	adds	r2, r4, #1
   824ce:	441a      	add	r2, r3
   824d0:	1a52      	subs	r2, r2, r1
   824d2:	2068      	movs	r0, #104	; 0x68
   824d4:	47b0      	blx	r6
   824d6:	4680      	mov	r8, r0
	                while(k--) Putstr("\e[D");
   824d8:	1e43      	subs	r3, r0, #1
   824da:	9305      	str	r3, [sp, #20]
   824dc:	2800      	cmp	r0, #0
   824de:	f43f ae3d 	beq.w	8215c <Shell+0x88>
   824e2:	2667      	movs	r6, #103	; 0x67
   824e4:	4c53      	ldr	r4, [pc, #332]	; (82634 <Shell+0x560>)
   824e6:	4629      	mov	r1, r5
   824e8:	4630      	mov	r0, r6
   824ea:	47a0      	blx	r4
   824ec:	f8dd 8014 	ldr.w	r8, [sp, #20]
   824f0:	f108 33ff 	add.w	r3, r8, #4294967295
   824f4:	9305      	str	r3, [sp, #20]
   824f6:	f1b8 0f00 	cmp.w	r8, #0
   824fa:	d1f4      	bne.n	824e6 <Shell+0x412>
   824fc:	e62e      	b.n	8215c <Shell+0x88>
				if(shell.nChar==0)
   824fe:	4b46      	ldr	r3, [pc, #280]	; (82618 <Shell+0x544>)
   82500:	899b      	ldrh	r3, [r3, #12]
   82502:	b96b      	cbnz	r3, 82520 <Shell+0x44c>
					ExitEditMode();
   82504:	4b44      	ldr	r3, [pc, #272]	; (82618 <Shell+0x544>)
   82506:	881a      	ldrh	r2, [r3, #0]
   82508:	f022 0204 	bic.w	r2, r2, #4
   8250c:	801a      	strh	r2, [r3, #0]
					shell.state=IDLE;
   8250e:	f04f 0800 	mov.w	r8, #0
   82512:	f883 801c 	strb.w	r8, [r3, #28]
					Putc('\r');
   82516:	210d      	movs	r1, #13
   82518:	2066      	movs	r0, #102	; 0x66
   8251a:	4b46      	ldr	r3, [pc, #280]	; (82634 <Shell+0x560>)
   8251c:	4798      	blx	r3
   8251e:	e61d      	b.n	8215c <Shell+0x88>
					shell.state=EXECUTION;
   82520:	2206      	movs	r2, #6
   82522:	4b3d      	ldr	r3, [pc, #244]	; (82618 <Shell+0x544>)
   82524:	771a      	strb	r2, [r3, #28]
					PushTask(Shell,_SHELL_KBHIT,'\r',0);
   82526:	2400      	movs	r4, #0
   82528:	9400      	str	r4, [sp, #0]
   8252a:	230d      	movs	r3, #13
   8252c:	2202      	movs	r2, #2
   8252e:	4942      	ldr	r1, [pc, #264]	; (82638 <Shell+0x564>)
   82530:	2066      	movs	r0, #102	; 0x66
   82532:	4d42      	ldr	r5, [pc, #264]	; (8263c <Shell+0x568>)
   82534:	47a8      	blx	r5
	return 0;
   82536:	46a0      	mov	r8, r4
   82538:	e610      	b.n	8215c <Shell+0x88>
			switch(_kbhitchar)
   8253a:	b2d2      	uxtb	r2, r2
				if(shell.nChar==0)
   8253c:	4b36      	ldr	r3, [pc, #216]	; (82618 <Shell+0x544>)
   8253e:	899b      	ldrh	r3, [r3, #12]
   82540:	b983      	cbnz	r3, 82564 <Shell+0x490>
					if(_kbhitchar!=0x20) //Excluding space char
   82542:	2a20      	cmp	r2, #32
   82544:	f000 844f 	beq.w	82de6 <Shell+0xd12>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   82548:	4c33      	ldr	r4, [pc, #204]	; (82618 <Shell+0x544>)
   8254a:	6863      	ldr	r3, [r4, #4]
   8254c:	1c58      	adds	r0, r3, #1
   8254e:	6060      	str	r0, [r4, #4]
   82550:	701a      	strb	r2, [r3, #0]
   82552:	2066      	movs	r0, #102	; 0x66
   82554:	4b37      	ldr	r3, [pc, #220]	; (82634 <Shell+0x560>)
   82556:	4798      	blx	r3
   82558:	89a3      	ldrh	r3, [r4, #12]
   8255a:	3301      	adds	r3, #1
   8255c:	81a3      	strh	r3, [r4, #12]
	return 0;
   8255e:	f04f 0800 	mov.w	r8, #0
   82562:	e5fb      	b.n	8215c <Shell+0x88>
				else if(shell.nChar<(SHELL_EDITBUF_LEN))
   82564:	2bff      	cmp	r3, #255	; 0xff
   82566:	f200 8451 	bhi.w	82e0c <Shell+0xd38>
					if(mIsBitsClr(shell.status,ST_SHELL_INSERT_MODE))
   8256a:	482b      	ldr	r0, [pc, #172]	; (82618 <Shell+0x544>)
   8256c:	8800      	ldrh	r0, [r0, #0]
   8256e:	f010 0f01 	tst.w	r0, #1
   82572:	d112      	bne.n	8259a <Shell+0x4c6>
						if(shell.pEdit==shellEditBuf+shell.nChar)	shell.nChar++;
   82574:	4828      	ldr	r0, [pc, #160]	; (82618 <Shell+0x544>)
   82576:	6840      	ldr	r0, [r0, #4]
   82578:	4c2c      	ldr	r4, [pc, #176]	; (8262c <Shell+0x558>)
   8257a:	441c      	add	r4, r3
   8257c:	42a0      	cmp	r0, r4
   8257e:	d102      	bne.n	82586 <Shell+0x4b2>
   82580:	3301      	adds	r3, #1
   82582:	4c25      	ldr	r4, [pc, #148]	; (82618 <Shell+0x544>)
   82584:	81a3      	strh	r3, [r4, #12]
						Putc((*shell.pEdit++=_kbhitchar));
   82586:	1c44      	adds	r4, r0, #1
   82588:	4b23      	ldr	r3, [pc, #140]	; (82618 <Shell+0x544>)
   8258a:	605c      	str	r4, [r3, #4]
   8258c:	7002      	strb	r2, [r0, #0]
   8258e:	2066      	movs	r0, #102	; 0x66
   82590:	4b28      	ldr	r3, [pc, #160]	; (82634 <Shell+0x560>)
   82592:	4798      	blx	r3
	return 0;
   82594:	f04f 0800 	mov.w	r8, #0
   82598:	e5e0      	b.n	8215c <Shell+0x88>
						if(shell.pEdit!=shellEditBuf+shell.nChar)
   8259a:	4a1f      	ldr	r2, [pc, #124]	; (82618 <Shell+0x544>)
   8259c:	6851      	ldr	r1, [r2, #4]
   8259e:	4a23      	ldr	r2, [pc, #140]	; (8262c <Shell+0x558>)
   825a0:	441a      	add	r2, r3
   825a2:	4291      	cmp	r1, r2
   825a4:	d00f      	beq.n	825c6 <Shell+0x4f2>
							pDst=(uint32_t)shellEditBuf+shell.nChar;
   825a6:	4a21      	ldr	r2, [pc, #132]	; (8262c <Shell+0x558>)
   825a8:	4413      	add	r3, r2
   825aa:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   825ac:	1e5a      	subs	r2, r3, #1
   825ae:	4291      	cmp	r1, r2
   825b0:	d809      	bhi.n	825c6 <Shell+0x4f2>
   825b2:	4919      	ldr	r1, [pc, #100]	; (82618 <Shell+0x544>)
								*(char*)pDst=*(char*)(pDst-1); pDst--;
   825b4:	7812      	ldrb	r2, [r2, #0]
   825b6:	701a      	strb	r2, [r3, #0]
   825b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   825ba:	1e53      	subs	r3, r2, #1
   825bc:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   825be:	3a02      	subs	r2, #2
   825c0:	6848      	ldr	r0, [r1, #4]
   825c2:	4290      	cmp	r0, r2
   825c4:	d9f6      	bls.n	825b4 <Shell+0x4e0>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   825c6:	4c14      	ldr	r4, [pc, #80]	; (82618 <Shell+0x544>)
   825c8:	6863      	ldr	r3, [r4, #4]
   825ca:	1c5a      	adds	r2, r3, #1
   825cc:	6062      	str	r2, [r4, #4]
   825ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
   825d0:	7019      	strb	r1, [r3, #0]
   825d2:	b2c9      	uxtb	r1, r1
   825d4:	2066      	movs	r0, #102	; 0x66
   825d6:	4d17      	ldr	r5, [pc, #92]	; (82634 <Shell+0x560>)
   825d8:	47a8      	blx	r5
   825da:	89a3      	ldrh	r3, [r4, #12]
   825dc:	3301      	adds	r3, #1
   825de:	b29b      	uxth	r3, r3
   825e0:	81a3      	strh	r3, [r4, #12]
						k=Putstrlen(shell.pEdit,(shellEditBuf+shell.nChar-shell.pEdit));
   825e2:	6861      	ldr	r1, [r4, #4]
   825e4:	4a11      	ldr	r2, [pc, #68]	; (8262c <Shell+0x558>)
   825e6:	441a      	add	r2, r3
   825e8:	1a52      	subs	r2, r2, r1
   825ea:	2068      	movs	r0, #104	; 0x68
   825ec:	47a8      	blx	r5
   825ee:	4680      	mov	r8, r0
						while(k--) Putstr("\e[D");
   825f0:	1e43      	subs	r3, r0, #1
   825f2:	930e      	str	r3, [sp, #56]	; 0x38
   825f4:	2800      	cmp	r0, #0
   825f6:	f43f adb1 	beq.w	8215c <Shell+0x88>
   825fa:	4e0d      	ldr	r6, [pc, #52]	; (82630 <Shell+0x55c>)
   825fc:	2567      	movs	r5, #103	; 0x67
   825fe:	4c0d      	ldr	r4, [pc, #52]	; (82634 <Shell+0x560>)
   82600:	4631      	mov	r1, r6
   82602:	4628      	mov	r0, r5
   82604:	47a0      	blx	r4
   82606:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
   8260a:	f108 33ff 	add.w	r3, r8, #4294967295
   8260e:	930e      	str	r3, [sp, #56]	; 0x38
   82610:	f1b8 0f00 	cmp.w	r8, #0
   82614:	d1f4      	bne.n	82600 <Shell+0x52c>
   82616:	e5a1      	b.n	8215c <Shell+0x88>
   82618:	200011c8 	.word	0x200011c8
   8261c:	0008168d 	.word	0x0008168d
   82620:	200011e9 	.word	0x200011e9
   82624:	000885f8 	.word	0x000885f8
   82628:	200011e8 	.word	0x200011e8
   8262c:	200010c4 	.word	0x200010c4
   82630:	0008857c 	.word	0x0008857c
   82634:	00083269 	.word	0x00083269
   82638:	000820d5 	.word	0x000820d5
   8263c:	000834a5 	.word	0x000834a5
			k=shell.nChar-(shell.pEdit-shellEditBuf);
   82640:	4a8f      	ldr	r2, [pc, #572]	; (82880 <Shell+0x7ac>)
   82642:	8993      	ldrh	r3, [r2, #12]
   82644:	6852      	ldr	r2, [r2, #4]
   82646:	498f      	ldr	r1, [pc, #572]	; (82884 <Shell+0x7b0>)
   82648:	1a52      	subs	r2, r2, r1
   8264a:	1a9b      	subs	r3, r3, r2
			while(k--) Putstr("\e[C");
   8264c:	1e5a      	subs	r2, r3, #1
   8264e:	9205      	str	r2, [sp, #20]
   82650:	b153      	cbz	r3, 82668 <Shell+0x594>
   82652:	4e8d      	ldr	r6, [pc, #564]	; (82888 <Shell+0x7b4>)
   82654:	2567      	movs	r5, #103	; 0x67
   82656:	4c8d      	ldr	r4, [pc, #564]	; (8288c <Shell+0x7b8>)
   82658:	4631      	mov	r1, r6
   8265a:	4628      	mov	r0, r5
   8265c:	47a0      	blx	r4
   8265e:	9b05      	ldr	r3, [sp, #20]
   82660:	1e5a      	subs	r2, r3, #1
   82662:	9205      	str	r2, [sp, #20]
   82664:	2b00      	cmp	r3, #0
   82666:	d1f7      	bne.n	82658 <Shell+0x584>
			shell.pEdit=shellEditBuf+shell.nChar;
   82668:	4d85      	ldr	r5, [pc, #532]	; (82880 <Shell+0x7ac>)
   8266a:	89aa      	ldrh	r2, [r5, #12]
   8266c:	4c85      	ldr	r4, [pc, #532]	; (82884 <Shell+0x7b0>)
   8266e:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   82670:	3301      	adds	r3, #1
   82672:	606b      	str	r3, [r5, #4]
   82674:	2600      	movs	r6, #0
   82676:	5516      	strb	r6, [r2, r4]
			_CleanUp_cmd_Line();
   82678:	2007      	movs	r0, #7
   8267a:	f7ff fd2b 	bl	820d4 <Shell>
			shell.pEdit=shellEditBuf+shell.nChar;
   8267e:	89aa      	ldrh	r2, [r5, #12]
   82680:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   82682:	3301      	adds	r3, #1
   82684:	606b      	str	r3, [r5, #4]
   82686:	5516      	strb	r6, [r2, r4]
			Putstr("\r\n/>");
   82688:	4981      	ldr	r1, [pc, #516]	; (82890 <Shell+0x7bc>)
   8268a:	2067      	movs	r0, #103	; 0x67
   8268c:	4d7f      	ldr	r5, [pc, #508]	; (8288c <Shell+0x7b8>)
   8268e:	47a8      	blx	r5
			Putstr(shellEditBuf);
   82690:	4621      	mov	r1, r4
   82692:	2067      	movs	r0, #103	; 0x67
   82694:	47a8      	blx	r5
			mstrtokReset();
   82696:	4b7f      	ldr	r3, [pc, #508]	; (82894 <Shell+0x7c0>)
   82698:	4798      	blx	r3
			pToken=mstrtok(shellEditBuf,(char*)" \r\n");
   8269a:	497f      	ldr	r1, [pc, #508]	; (82898 <Shell+0x7c4>)
   8269c:	4620      	mov	r0, r4
   8269e:	4b7f      	ldr	r3, [pc, #508]	; (8289c <Shell+0x7c8>)
   826a0:	4798      	blx	r3
   826a2:	4604      	mov	r4, r0
   826a4:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   826a6:	b968      	cbnz	r0, 826c4 <Shell+0x5f0>
			Putstr("\r\n");
   826a8:	497d      	ldr	r1, [pc, #500]	; (828a0 <Shell+0x7cc>)
   826aa:	2067      	movs	r0, #103	; 0x67
   826ac:	4b77      	ldr	r3, [pc, #476]	; (8288c <Shell+0x7b8>)
   826ae:	4798      	blx	r3
			shell.state=IDLE;
   826b0:	4b73      	ldr	r3, [pc, #460]	; (82880 <Shell+0x7ac>)
   826b2:	f04f 0800 	mov.w	r8, #0
   826b6:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   826ba:	881a      	ldrh	r2, [r3, #0]
   826bc:	f022 0204 	bic.w	r2, r2, #4
   826c0:	801a      	strh	r2, [r3, #0]
			break;
   826c2:	e54b      	b.n	8215c <Shell+0x88>
				shell.crc=CRC16MODBUSFRAME((unsigned char*)pToken,strlen((char*)pToken));
   826c4:	4b77      	ldr	r3, [pc, #476]	; (828a4 <Shell+0x7d0>)
   826c6:	4798      	blx	r3
   826c8:	4601      	mov	r1, r0
   826ca:	4620      	mov	r0, r4
   826cc:	4b76      	ldr	r3, [pc, #472]	; (828a8 <Shell+0x7d4>)
   826ce:	4798      	blx	r3
   826d0:	b281      	uxth	r1, r0
   826d2:	4b6b      	ldr	r3, [pc, #428]	; (82880 <Shell+0x7ac>)
   826d4:	8219      	strh	r1, [r3, #16]
				k=0;
   826d6:	9605      	str	r6, [sp, #20]
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   826d8:	4b74      	ldr	r3, [pc, #464]	; (828ac <Shell+0x7d8>)
   826da:	881b      	ldrh	r3, [r3, #0]
   826dc:	b1f3      	cbz	r3, 8271c <Shell+0x648>
   826de:	4299      	cmp	r1, r3
   826e0:	d01e      	beq.n	82720 <Shell+0x64c>
   826e2:	2301      	movs	r3, #1
   826e4:	4a71      	ldr	r2, [pc, #452]	; (828ac <Shell+0x7d8>)
   826e6:	e000      	b.n	826ea <Shell+0x616>
   826e8:	462b      	mov	r3, r5
   826ea:	f832 4033 	ldrh.w	r4, [r2, r3, lsl #3]
   826ee:	b124      	cbz	r4, 826fa <Shell+0x626>
   826f0:	1c5d      	adds	r5, r3, #1
   826f2:	42a1      	cmp	r1, r4
   826f4:	d1f8      	bne.n	826e8 <Shell+0x614>
   826f6:	9305      	str	r3, [sp, #20]
   826f8:	e000      	b.n	826fc <Shell+0x628>
   826fa:	9305      	str	r3, [sp, #20]
				if(commands[k].pCmdFunc)
   826fc:	4c6b      	ldr	r4, [pc, #428]	; (828ac <Shell+0x7d8>)
   826fe:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   82702:	685d      	ldr	r5, [r3, #4]
   82704:	b175      	cbz	r5, 82724 <Shell+0x650>
					commands[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   82706:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82708:	4620      	mov	r0, r4
   8270a:	4b66      	ldr	r3, [pc, #408]	; (828a4 <Shell+0x7d0>)
   8270c:	4798      	blx	r3
   8270e:	1c61      	adds	r1, r4, #1
   82710:	4401      	add	r1, r0
   82712:	485b      	ldr	r0, [pc, #364]	; (82880 <Shell+0x7ac>)
   82714:	47a8      	blx	r5
					mstrtokRestore();
   82716:	4b66      	ldr	r3, [pc, #408]	; (828b0 <Shell+0x7dc>)
   82718:	4798      	blx	r3
   8271a:	e7c5      	b.n	826a8 <Shell+0x5d4>
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   8271c:	2300      	movs	r3, #0
   8271e:	e7ed      	b.n	826fc <Shell+0x628>
   82720:	2300      	movs	r3, #0
   82722:	e7eb      	b.n	826fc <Shell+0x628>
					k=0;
   82724:	2300      	movs	r3, #0
   82726:	9305      	str	r3, [sp, #20]
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   82728:	4b62      	ldr	r3, [pc, #392]	; (828b4 <Shell+0x7e0>)
   8272a:	881b      	ldrh	r3, [r3, #0]
   8272c:	b313      	cbz	r3, 82774 <Shell+0x6a0>
   8272e:	4299      	cmp	r1, r3
   82730:	d022      	beq.n	82778 <Shell+0x6a4>
   82732:	2301      	movs	r3, #1
   82734:	4c5f      	ldr	r4, [pc, #380]	; (828b4 <Shell+0x7e0>)
   82736:	e000      	b.n	8273a <Shell+0x666>
   82738:	462b      	mov	r3, r5
   8273a:	f834 2033 	ldrh.w	r2, [r4, r3, lsl #3]
   8273e:	b122      	cbz	r2, 8274a <Shell+0x676>
   82740:	1c5d      	adds	r5, r3, #1
   82742:	4291      	cmp	r1, r2
   82744:	d1f8      	bne.n	82738 <Shell+0x664>
   82746:	9305      	str	r3, [sp, #20]
   82748:	e000      	b.n	8274c <Shell+0x678>
   8274a:	9305      	str	r3, [sp, #20]
                    if(cmdEntries[k].pCmdFunc)
   8274c:	4959      	ldr	r1, [pc, #356]	; (828b4 <Shell+0x7e0>)
   8274e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   82752:	685d      	ldr	r5, [r3, #4]
   82754:	b195      	cbz	r5, 8277c <Shell+0x6a8>
	                    cmdEntries[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   82756:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82758:	4620      	mov	r0, r4
   8275a:	4b52      	ldr	r3, [pc, #328]	; (828a4 <Shell+0x7d0>)
   8275c:	4798      	blx	r3
   8275e:	1c61      	adds	r1, r4, #1
   82760:	4401      	add	r1, r0
   82762:	4847      	ldr	r0, [pc, #284]	; (82880 <Shell+0x7ac>)
   82764:	47a8      	blx	r5
						mstrtokRestore();
   82766:	4b52      	ldr	r3, [pc, #328]	; (828b0 <Shell+0x7dc>)
   82768:	4798      	blx	r3
						Putstr("\r\n");
   8276a:	494d      	ldr	r1, [pc, #308]	; (828a0 <Shell+0x7cc>)
   8276c:	2067      	movs	r0, #103	; 0x67
   8276e:	4b47      	ldr	r3, [pc, #284]	; (8288c <Shell+0x7b8>)
   82770:	4798      	blx	r3
   82772:	e799      	b.n	826a8 <Shell+0x5d4>
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   82774:	2300      	movs	r3, #0
   82776:	e7e9      	b.n	8274c <Shell+0x678>
   82778:	2300      	movs	r3, #0
   8277a:	e7e7      	b.n	8274c <Shell+0x678>
                    else if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   8277c:	4b40      	ldr	r3, [pc, #256]	; (82880 <Shell+0x7ac>)
   8277e:	881b      	ldrh	r3, [r3, #0]
   82780:	f013 0f02 	tst.w	r3, #2
   82784:	d090      	beq.n	826a8 <Shell+0x5d4>
	                    sprintf(shellTmpBuf,"\tunknown cmd: %04X\r\n",shell.crc);
   82786:	4c4c      	ldr	r4, [pc, #304]	; (828b8 <Shell+0x7e4>)
   82788:	b282      	uxth	r2, r0
   8278a:	494c      	ldr	r1, [pc, #304]	; (828bc <Shell+0x7e8>)
   8278c:	4620      	mov	r0, r4
   8278e:	4b4c      	ldr	r3, [pc, #304]	; (828c0 <Shell+0x7ec>)
   82790:	4798      	blx	r3
	                    Putstr(shellTmpBuf);
   82792:	4621      	mov	r1, r4
   82794:	2067      	movs	r0, #103	; 0x67
   82796:	4b3d      	ldr	r3, [pc, #244]	; (8288c <Shell+0x7b8>)
   82798:	4798      	blx	r3
						mstrtokRestore();
   8279a:	4b45      	ldr	r3, [pc, #276]	; (828b0 <Shell+0x7dc>)
   8279c:	4798      	blx	r3
   8279e:	e783      	b.n	826a8 <Shell+0x5d4>
			shell.state=ED_ESCAPE_SEQ;
   827a0:	2205      	movs	r2, #5
   827a2:	4b37      	ldr	r3, [pc, #220]	; (82880 <Shell+0x7ac>)
   827a4:	771a      	strb	r2, [r3, #28]
			shell.escapeTimer=SHELL_ESC_TIMEOUT;
   827a6:	4c36      	ldr	r4, [pc, #216]	; (82880 <Shell+0x7ac>)
   827a8:	2314      	movs	r3, #20
   827aa:	61a3      	str	r3, [r4, #24]
			*shell.pEscbuf++=_kbhitchar;
   827ac:	68a3      	ldr	r3, [r4, #8]
   827ae:	1c5a      	adds	r2, r3, #1
   827b0:	60a2      	str	r2, [r4, #8]
   827b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   827b4:	701a      	strb	r2, [r3, #0]
			shell.nEscChar++;
   827b6:	89e3      	ldrh	r3, [r4, #14]
   827b8:	3301      	adds	r3, #1
   827ba:	81e3      	strh	r3, [r4, #14]
			shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   827bc:	8a21      	ldrh	r1, [r4, #16]
   827be:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   827c2:	4b40      	ldr	r3, [pc, #256]	; (828c4 <Shell+0x7f0>)
   827c4:	4798      	blx	r3
   827c6:	8220      	strh	r0, [r4, #16]
	return 0;
   827c8:	f04f 0800 	mov.w	r8, #0
			break;
   827cc:	e4c6      	b.n	8215c <Shell+0x88>
			Putstr("\r\n\t***** case _SHELL_KBHIT: BAD case! ******\r\n");
   827ce:	493e      	ldr	r1, [pc, #248]	; (828c8 <Shell+0x7f4>)
   827d0:	2067      	movs	r0, #103	; 0x67
   827d2:	4b2e      	ldr	r3, [pc, #184]	; (8288c <Shell+0x7b8>)
   827d4:	4798      	blx	r3
			shell.state=IDLE;
   827d6:	4b2a      	ldr	r3, [pc, #168]	; (82880 <Shell+0x7ac>)
   827d8:	f04f 0800 	mov.w	r8, #0
   827dc:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   827e0:	881a      	ldrh	r2, [r3, #0]
   827e2:	f022 0204 	bic.w	r2, r2, #4
   827e6:	801a      	strh	r2, [r3, #0]
			break;
   827e8:	e4b8      	b.n	8215c <Shell+0x88>
		if(shell.escapeTimer)
   827ea:	4b25      	ldr	r3, [pc, #148]	; (82880 <Shell+0x7ac>)
   827ec:	699b      	ldr	r3, [r3, #24]
   827ee:	b1b3      	cbz	r3, 8281e <Shell+0x74a>
			if(--shell.escapeTimer==0)
   827f0:	f103 38ff 	add.w	r8, r3, #4294967295
   827f4:	4b22      	ldr	r3, [pc, #136]	; (82880 <Shell+0x7ac>)
   827f6:	f8c3 8018 	str.w	r8, [r3, #24]
   827fa:	f1b8 0f00 	cmp.w	r8, #0
   827fe:	d10e      	bne.n	8281e <Shell+0x74a>
				switch(shell.state)
   82800:	7f19      	ldrb	r1, [r3, #28]
   82802:	2905      	cmp	r1, #5
   82804:	f200 825c 	bhi.w	82cc0 <Shell+0xbec>
   82808:	e8df f011 	tbh	[pc, r1, lsl #1]
   8280c:	00060009 	.word	0x00060009
   82810:	025a0016 	.word	0x025a0016
   82814:	0097008b 	.word	0x0097008b
					shell.state=IDLE;
   82818:	2200      	movs	r2, #0
   8281a:	4b19      	ldr	r3, [pc, #100]	; (82880 <Shell+0x7ac>)
   8281c:	771a      	strb	r2, [r3, #28]
        if(shell.editTimer)
   8281e:	4b18      	ldr	r3, [pc, #96]	; (82880 <Shell+0x7ac>)
   82820:	f8d3 8014 	ldr.w	r8, [r3, #20]
   82824:	f1b8 0f00 	cmp.w	r8, #0
   82828:	f43f ac98 	beq.w	8215c <Shell+0x88>
	        if(--shell.editTimer==0)
   8282c:	f108 32ff 	add.w	r2, r8, #4294967295
   82830:	615a      	str	r2, [r3, #20]
	return 0;
   82832:	f04f 0800 	mov.w	r8, #0
   82836:	e491      	b.n	8215c <Shell+0x88>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   82838:	4c11      	ldr	r4, [pc, #68]	; (82880 <Shell+0x7ac>)
   8283a:	89e1      	ldrh	r1, [r4, #14]
   8283c:	4823      	ldr	r0, [pc, #140]	; (828cc <Shell+0x7f8>)
   8283e:	4b1a      	ldr	r3, [pc, #104]	; (828a8 <Shell+0x7d4>)
   82840:	4798      	blx	r3
   82842:	b280      	uxth	r0, r0
   82844:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   82846:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   8284a:	4298      	cmp	r0, r3
   8284c:	d00c      	beq.n	82868 <Shell+0x794>
   8284e:	f24c 73fa 	movw	r3, #51194	; 0xc7fa
   82852:	4298      	cmp	r0, r3
   82854:	d00c      	beq.n	82870 <Shell+0x79c>
						if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   82856:	4b0a      	ldr	r3, [pc, #40]	; (82880 <Shell+0x7ac>)
   82858:	881b      	ldrh	r3, [r3, #0]
   8285a:	f013 0f02 	tst.w	r3, #2
   8285e:	d14c      	bne.n	828fa <Shell+0x826>
						shell.state=IDLE;
   82860:	2200      	movs	r2, #0
   82862:	4b07      	ldr	r3, [pc, #28]	; (82880 <Shell+0x7ac>)
   82864:	771a      	strb	r2, [r3, #28]
						break;
   82866:	e7da      	b.n	8281e <Shell+0x74a>
						shell.state=IDLE;
   82868:	2200      	movs	r2, #0
   8286a:	4b05      	ldr	r3, [pc, #20]	; (82880 <Shell+0x7ac>)
   8286c:	771a      	strb	r2, [r3, #28]
						break;
   8286e:	e7d6      	b.n	8281e <Shell+0x74a>
						if(shell.nChar)
   82870:	4b03      	ldr	r3, [pc, #12]	; (82880 <Shell+0x7ac>)
   82872:	899b      	ldrh	r3, [r3, #12]
   82874:	bb63      	cbnz	r3, 828d0 <Shell+0x7fc>
							shell.state=IDLE;
   82876:	2200      	movs	r2, #0
   82878:	4b01      	ldr	r3, [pc, #4]	; (82880 <Shell+0x7ac>)
   8287a:	771a      	strb	r2, [r3, #28]
   8287c:	e7cf      	b.n	8281e <Shell+0x74a>
   8287e:	bf00      	nop
   82880:	200011c8 	.word	0x200011c8
   82884:	200010c4 	.word	0x200010c4
   82888:	00088580 	.word	0x00088580
   8288c:	00083269 	.word	0x00083269
   82890:	00088584 	.word	0x00088584
   82894:	000836e5 	.word	0x000836e5
   82898:	00088474 	.word	0x00088474
   8289c:	00083711 	.word	0x00083711
   828a0:	000885d0 	.word	0x000885d0
   828a4:	0008394d 	.word	0x0008394d
   828a8:	00081659 	.word	0x00081659
   828ac:	00088418 	.word	0x00088418
   828b0:	000836cd 	.word	0x000836cd
   828b4:	00088920 	.word	0x00088920
   828b8:	20001268 	.word	0x20001268
   828bc:	0008858c 	.word	0x0008858c
   828c0:	00083901 	.word	0x00083901
   828c4:	0008168d 	.word	0x0008168d
   828c8:	000885a4 	.word	0x000885a4
   828cc:	200011e8 	.word	0x200011e8
							EnterEditMode();
   828d0:	4c99      	ldr	r4, [pc, #612]	; (82b38 <Shell+0xa64>)
   828d2:	8822      	ldrh	r2, [r4, #0]
   828d4:	f042 0204 	orr.w	r2, r2, #4
   828d8:	8022      	strh	r2, [r4, #0]
							shell.editTimer=SHELL_EDIT_TIMEOUT;
   828da:	2200      	movs	r2, #0
   828dc:	6162      	str	r2, [r4, #20]
							shell.pEdit=shellEditBuf+shell.nChar;
   828de:	4e97      	ldr	r6, [pc, #604]	; (82b3c <Shell+0xa68>)
   828e0:	4433      	add	r3, r6
   828e2:	6063      	str	r3, [r4, #4]
							Putstr("\r\n");
   828e4:	4996      	ldr	r1, [pc, #600]	; (82b40 <Shell+0xa6c>)
   828e6:	2067      	movs	r0, #103	; 0x67
   828e8:	4d96      	ldr	r5, [pc, #600]	; (82b44 <Shell+0xa70>)
   828ea:	47a8      	blx	r5
							Putstrlen(shellEditBuf,shell.nChar);
   828ec:	89a2      	ldrh	r2, [r4, #12]
   828ee:	4631      	mov	r1, r6
   828f0:	2068      	movs	r0, #104	; 0x68
   828f2:	47a8      	blx	r5
							shell.state=EDITION;
   828f4:	2303      	movs	r3, #3
   828f6:	7723      	strb	r3, [r4, #28]
   828f8:	e791      	b.n	8281e <Shell+0x74a>
							Putstr("\r\n   ESC_SEQ: ");
   828fa:	4993      	ldr	r1, [pc, #588]	; (82b48 <Shell+0xa74>)
   828fc:	2067      	movs	r0, #103	; 0x67
   828fe:	4c91      	ldr	r4, [pc, #580]	; (82b44 <Shell+0xa70>)
   82900:	47a0      	blx	r4
							_PutAscii2Hex(shellEscapeBuf,shell.nEscChar);
   82902:	4e8d      	ldr	r6, [pc, #564]	; (82b38 <Shell+0xa64>)
   82904:	89f2      	ldrh	r2, [r6, #14]
   82906:	4991      	ldr	r1, [pc, #580]	; (82b4c <Shell+0xa78>)
   82908:	2005      	movs	r0, #5
   8290a:	f7ff fbe3 	bl	820d4 <Shell>
							sprintf(shellTmpBuf," <%04X>\r\n",shell.crc);
   8290e:	4d90      	ldr	r5, [pc, #576]	; (82b50 <Shell+0xa7c>)
   82910:	8a32      	ldrh	r2, [r6, #16]
   82912:	4990      	ldr	r1, [pc, #576]	; (82b54 <Shell+0xa80>)
   82914:	4628      	mov	r0, r5
   82916:	4b90      	ldr	r3, [pc, #576]	; (82b58 <Shell+0xa84>)
   82918:	4798      	blx	r3
							Putstr(shellTmpBuf);
   8291a:	4629      	mov	r1, r5
   8291c:	2067      	movs	r0, #103	; 0x67
   8291e:	47a0      	blx	r4
   82920:	e79e      	b.n	82860 <Shell+0x78c>
					Putstr("\e[2K\r");
   82922:	498e      	ldr	r1, [pc, #568]	; (82b5c <Shell+0xa88>)
   82924:	2067      	movs	r0, #103	; 0x67
   82926:	4b87      	ldr	r3, [pc, #540]	; (82b44 <Shell+0xa70>)
   82928:	4798      	blx	r3
					shell.state=IDLE;
   8292a:	4b83      	ldr	r3, [pc, #524]	; (82b38 <Shell+0xa64>)
   8292c:	2200      	movs	r2, #0
   8292e:	771a      	strb	r2, [r3, #28]
					ExitEditMode();
   82930:	881a      	ldrh	r2, [r3, #0]
   82932:	f022 0204 	bic.w	r2, r2, #4
   82936:	801a      	strh	r2, [r3, #0]
					break;
   82938:	e771      	b.n	8281e <Shell+0x74a>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   8293a:	4c7f      	ldr	r4, [pc, #508]	; (82b38 <Shell+0xa64>)
   8293c:	89e1      	ldrh	r1, [r4, #14]
   8293e:	4883      	ldr	r0, [pc, #524]	; (82b4c <Shell+0xa78>)
   82940:	4b87      	ldr	r3, [pc, #540]	; (82b60 <Shell+0xa8c>)
   82942:	4798      	blx	r3
   82944:	b280      	uxth	r0, r0
   82946:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   82948:	f24c 133a 	movw	r3, #49466	; 0xc13a
   8294c:	4298      	cmp	r0, r3
   8294e:	f000 810f 	beq.w	82b70 <Shell+0xa9c>
   82952:	d834      	bhi.n	829be <Shell+0x8ea>
   82954:	f245 33e2 	movw	r3, #21474	; 0x53e2
   82958:	4298      	cmp	r0, r3
   8295a:	f000 80e2 	beq.w	82b22 <Shell+0xa4e>
   8295e:	d81e      	bhi.n	8299e <Shell+0x8ca>
   82960:	f240 53bb 	movw	r3, #1467	; 0x5bb
   82964:	4298      	cmp	r0, r3
   82966:	f000 811e 	beq.w	82ba6 <Shell+0xad2>
   8296a:	f240 637b 	movw	r3, #1659	; 0x67b
   8296e:	4298      	cmp	r0, r3
   82970:	d11e      	bne.n	829b0 <Shell+0x8dc>
						if(shell.pEdit<(shellEditBuf+shell.nChar))
   82972:	4a71      	ldr	r2, [pc, #452]	; (82b38 <Shell+0xa64>)
   82974:	8993      	ldrh	r3, [r2, #12]
   82976:	4971      	ldr	r1, [pc, #452]	; (82b3c <Shell+0xa68>)
   82978:	440b      	add	r3, r1
   8297a:	6852      	ldr	r2, [r2, #4]
   8297c:	429a      	cmp	r2, r3
   8297e:	d207      	bcs.n	82990 <Shell+0x8bc>
							Putstr("\e[C");
   82980:	4978      	ldr	r1, [pc, #480]	; (82b64 <Shell+0xa90>)
   82982:	2067      	movs	r0, #103	; 0x67
   82984:	4b6f      	ldr	r3, [pc, #444]	; (82b44 <Shell+0xa70>)
   82986:	4798      	blx	r3
							shell.pEdit++;
   82988:	4a6b      	ldr	r2, [pc, #428]	; (82b38 <Shell+0xa64>)
   8298a:	6853      	ldr	r3, [r2, #4]
   8298c:	3301      	adds	r3, #1
   8298e:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82990:	4b69      	ldr	r3, [pc, #420]	; (82b38 <Shell+0xa64>)
   82992:	2200      	movs	r2, #0
   82994:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82996:	2203      	movs	r2, #3
   82998:	771a      	strb	r2, [r3, #28]
						break;
   8299a:	f7ff bbdf 	b.w	8215c <Shell+0x88>
					switch(shell.crc)
   8299e:	f646 730e 	movw	r3, #28430	; 0x6f0e
   829a2:	4298      	cmp	r0, r3
   829a4:	d034      	beq.n	82a10 <Shell+0x93c>
   829a6:	f64a 534f 	movw	r3, #44367	; 0xad4f
   829aa:	4298      	cmp	r0, r3
   829ac:	f000 814a 	beq.w	82c44 <Shell+0xb70>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   829b0:	4b61      	ldr	r3, [pc, #388]	; (82b38 <Shell+0xa64>)
   829b2:	2200      	movs	r2, #0
   829b4:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   829b6:	2203      	movs	r2, #3
   829b8:	771a      	strb	r2, [r3, #28]
						break;
   829ba:	f7ff bbcf 	b.w	8215c <Shell+0x88>
					switch(shell.crc)
   829be:	f24c 63ba 	movw	r3, #50874	; 0xc6ba
   829c2:	4298      	cmp	r0, r3
   829c4:	d064      	beq.n	82a90 <Shell+0x9bc>
   829c6:	d81b      	bhi.n	82a00 <Shell+0x92c>
   829c8:	f24c 33e3 	movw	r3, #50147	; 0xc3e3
   829cc:	4298      	cmp	r0, r3
   829ce:	d072      	beq.n	82ab6 <Shell+0x9e2>
   829d0:	f24c 433a 	movw	r3, #50234	; 0xc43a
   829d4:	4298      	cmp	r0, r3
   829d6:	d1eb      	bne.n	829b0 <Shell+0x8dc>
						if(shell.pEdit>shellEditBuf)
   829d8:	4b57      	ldr	r3, [pc, #348]	; (82b38 <Shell+0xa64>)
   829da:	685a      	ldr	r2, [r3, #4]
   829dc:	4b57      	ldr	r3, [pc, #348]	; (82b3c <Shell+0xa68>)
   829de:	429a      	cmp	r2, r3
   829e0:	d907      	bls.n	829f2 <Shell+0x91e>
							Putstr("\e[D");
   829e2:	4961      	ldr	r1, [pc, #388]	; (82b68 <Shell+0xa94>)
   829e4:	2067      	movs	r0, #103	; 0x67
   829e6:	4b57      	ldr	r3, [pc, #348]	; (82b44 <Shell+0xa70>)
   829e8:	4798      	blx	r3
							shell.pEdit--;
   829ea:	4a53      	ldr	r2, [pc, #332]	; (82b38 <Shell+0xa64>)
   829ec:	6853      	ldr	r3, [r2, #4]
   829ee:	3b01      	subs	r3, #1
   829f0:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   829f2:	4b51      	ldr	r3, [pc, #324]	; (82b38 <Shell+0xa64>)
   829f4:	2200      	movs	r2, #0
   829f6:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   829f8:	2203      	movs	r2, #3
   829fa:	771a      	strb	r2, [r3, #28]
						break;
   829fc:	f7ff bbae 	b.w	8215c <Shell+0x88>
					switch(shell.crc)
   82a00:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   82a04:	4298      	cmp	r0, r3
   82a06:	d04f      	beq.n	82aa8 <Shell+0x9d4>
   82a08:	f64c 43ba 	movw	r3, #52410	; 0xccba
   82a0c:	4298      	cmp	r0, r3
   82a0e:	d1cf      	bne.n	829b0 <Shell+0x8dc>
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   82a10:	4b49      	ldr	r3, [pc, #292]	; (82b38 <Shell+0xa64>)
   82a12:	899b      	ldrh	r3, [r3, #12]
   82a14:	b12b      	cbz	r3, 82a22 <Shell+0x94e>
   82a16:	4a49      	ldr	r2, [pc, #292]	; (82b3c <Shell+0xa68>)
   82a18:	4413      	add	r3, r2
   82a1a:	4a47      	ldr	r2, [pc, #284]	; (82b38 <Shell+0xa64>)
   82a1c:	6852      	ldr	r2, [r2, #4]
   82a1e:	429a      	cmp	r2, r3
   82a20:	d015      	beq.n	82a4e <Shell+0x97a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82a22:	4b45      	ldr	r3, [pc, #276]	; (82b38 <Shell+0xa64>)
   82a24:	685b      	ldr	r3, [r3, #4]
   82a26:	1e59      	subs	r1, r3, #1
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   82a28:	4a44      	ldr	r2, [pc, #272]	; (82b3c <Shell+0xa68>)
   82a2a:	4291      	cmp	r1, r2
   82a2c:	d317      	bcc.n	82a5e <Shell+0x98a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82a2e:	4c4f      	ldr	r4, [pc, #316]	; (82b6c <Shell+0xa98>)
   82a30:	4622      	mov	r2, r4
   82a32:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82a36:	2006      	movs	r0, #6
   82a38:	f7ff fb4c 	bl	820d4 <Shell>
   82a3c:	b178      	cbz	r0, 82a5e <Shell+0x98a>
   82a3e:	4b3e      	ldr	r3, [pc, #248]	; (82b38 <Shell+0xa64>)
   82a40:	685b      	ldr	r3, [r3, #4]
   82a42:	4622      	mov	r2, r4
   82a44:	7819      	ldrb	r1, [r3, #0]
   82a46:	2006      	movs	r0, #6
   82a48:	f7ff fb44 	bl	820d4 <Shell>
   82a4c:	b938      	cbnz	r0, 82a5e <Shell+0x98a>
							shell.pEdit--; Putstr("\e[D");
   82a4e:	4a3a      	ldr	r2, [pc, #232]	; (82b38 <Shell+0xa64>)
   82a50:	6853      	ldr	r3, [r2, #4]
   82a52:	3b01      	subs	r3, #1
   82a54:	6053      	str	r3, [r2, #4]
   82a56:	4944      	ldr	r1, [pc, #272]	; (82b68 <Shell+0xa94>)
   82a58:	2067      	movs	r0, #103	; 0x67
   82a5a:	4b3a      	ldr	r3, [pc, #232]	; (82b44 <Shell+0xa70>)
   82a5c:	4798      	blx	r3
						if(_IsSeparator(*shell.pEdit,separators))
   82a5e:	4d43      	ldr	r5, [pc, #268]	; (82b6c <Shell+0xa98>)
   82a60:	4b35      	ldr	r3, [pc, #212]	; (82b38 <Shell+0xa64>)
   82a62:	685b      	ldr	r3, [r3, #4]
   82a64:	462a      	mov	r2, r5
   82a66:	7819      	ldrb	r1, [r3, #0]
   82a68:	2006      	movs	r0, #6
   82a6a:	f7ff fb33 	bl	820d4 <Shell>
   82a6e:	2800      	cmp	r0, #0
   82a70:	f040 80cb 	bne.w	82c0a <Shell+0xb36>
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82a74:	4b30      	ldr	r3, [pc, #192]	; (82b38 <Shell+0xa64>)
   82a76:	685b      	ldr	r3, [r3, #4]
   82a78:	1e59      	subs	r1, r3, #1
   82a7a:	4a30      	ldr	r2, [pc, #192]	; (82b3c <Shell+0xa68>)
   82a7c:	4291      	cmp	r1, r2
   82a7e:	f080 80dd 	bcs.w	82c3c <Shell+0xb68>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82a82:	4b2d      	ldr	r3, [pc, #180]	; (82b38 <Shell+0xa64>)
   82a84:	2200      	movs	r2, #0
   82a86:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82a88:	2203      	movs	r2, #3
   82a8a:	771a      	strb	r2, [r3, #28]
						break;
   82a8c:	f7ff bb66 	b.w	8215c <Shell+0x88>
						Putstr("\e[2K\r");
   82a90:	4932      	ldr	r1, [pc, #200]	; (82b5c <Shell+0xa88>)
   82a92:	2067      	movs	r0, #103	; 0x67
   82a94:	4b2b      	ldr	r3, [pc, #172]	; (82b44 <Shell+0xa70>)
   82a96:	4798      	blx	r3
						ExitEditMode();
   82a98:	4b27      	ldr	r3, [pc, #156]	; (82b38 <Shell+0xa64>)
   82a9a:	881a      	ldrh	r2, [r3, #0]
   82a9c:	f022 0204 	bic.w	r2, r2, #4
   82aa0:	801a      	strh	r2, [r3, #0]
						shell.state=IDLE;
   82aa2:	2200      	movs	r2, #0
   82aa4:	771a      	strb	r2, [r3, #28]
						break;
   82aa6:	e6ba      	b.n	8281e <Shell+0x74a>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82aa8:	4b23      	ldr	r3, [pc, #140]	; (82b38 <Shell+0xa64>)
   82aaa:	2200      	movs	r2, #0
   82aac:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82aae:	2203      	movs	r2, #3
   82ab0:	771a      	strb	r2, [r3, #28]
						break;
   82ab2:	f7ff bb53 	b.w	8215c <Shell+0x88>
						pSrc=(uint32_t)shell.pEdit+1;
   82ab6:	4a20      	ldr	r2, [pc, #128]	; (82b38 <Shell+0xa64>)
   82ab8:	6853      	ldr	r3, [r2, #4]
   82aba:	3301      	adds	r3, #1
   82abc:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82abe:	491f      	ldr	r1, [pc, #124]	; (82b3c <Shell+0xa68>)
   82ac0:	8992      	ldrh	r2, [r2, #12]
   82ac2:	440a      	add	r2, r1
   82ac4:	4293      	cmp	r3, r2
   82ac6:	d20a      	bcs.n	82ade <Shell+0xa0a>
   82ac8:	481b      	ldr	r0, [pc, #108]	; (82b38 <Shell+0xa64>)
							*(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   82aca:	781a      	ldrb	r2, [r3, #0]
   82acc:	f803 2c01 	strb.w	r2, [r3, #-1]
   82ad0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82ad2:	3301      	adds	r3, #1
   82ad4:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ad6:	8982      	ldrh	r2, [r0, #12]
   82ad8:	440a      	add	r2, r1
   82ada:	429a      	cmp	r2, r3
   82adc:	d8f5      	bhi.n	82aca <Shell+0x9f6>
						*(char*)(pSrc-1)=' ';
   82ade:	2220      	movs	r2, #32
   82ae0:	f803 2c01 	strb.w	r2, [r3, #-1]
	                    k=Putstrlen(shell.pEdit,pSrc-(uint32_t)shell.pEdit);
   82ae4:	4b14      	ldr	r3, [pc, #80]	; (82b38 <Shell+0xa64>)
   82ae6:	6859      	ldr	r1, [r3, #4]
   82ae8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82aea:	1a52      	subs	r2, r2, r1
   82aec:	2068      	movs	r0, #104	; 0x68
   82aee:	4b15      	ldr	r3, [pc, #84]	; (82b44 <Shell+0xa70>)
   82af0:	4798      	blx	r3
		                while(k--) Putstr("\e[D");
   82af2:	1e43      	subs	r3, r0, #1
   82af4:	930e      	str	r3, [sp, #56]	; 0x38
   82af6:	b150      	cbz	r0, 82b0e <Shell+0xa3a>
   82af8:	4e1b      	ldr	r6, [pc, #108]	; (82b68 <Shell+0xa94>)
   82afa:	2567      	movs	r5, #103	; 0x67
   82afc:	4c11      	ldr	r4, [pc, #68]	; (82b44 <Shell+0xa70>)
   82afe:	4631      	mov	r1, r6
   82b00:	4628      	mov	r0, r5
   82b02:	47a0      	blx	r4
   82b04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b06:	1e5a      	subs	r2, r3, #1
   82b08:	920e      	str	r2, [sp, #56]	; 0x38
   82b0a:	2b00      	cmp	r3, #0
   82b0c:	d1f7      	bne.n	82afe <Shell+0xa2a>
			            shell.nChar--;
   82b0e:	4b0a      	ldr	r3, [pc, #40]	; (82b38 <Shell+0xa64>)
   82b10:	899a      	ldrh	r2, [r3, #12]
   82b12:	3a01      	subs	r2, #1
   82b14:	819a      	strh	r2, [r3, #12]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b16:	2200      	movs	r2, #0
   82b18:	615a      	str	r2, [r3, #20]
				        shell.state=EDITION;
   82b1a:	2203      	movs	r2, #3
   82b1c:	771a      	strb	r2, [r3, #28]
					    break;
   82b1e:	f7ff bb1d 	b.w	8215c <Shell+0x88>
						mBitsTgl(shell.status,ST_SHELL_INSERT_MODE);
   82b22:	4b05      	ldr	r3, [pc, #20]	; (82b38 <Shell+0xa64>)
   82b24:	881a      	ldrh	r2, [r3, #0]
   82b26:	f082 0201 	eor.w	r2, r2, #1
   82b2a:	801a      	strh	r2, [r3, #0]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b2c:	2200      	movs	r2, #0
   82b2e:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b30:	2203      	movs	r2, #3
   82b32:	771a      	strb	r2, [r3, #28]
						break;
   82b34:	f7ff bb12 	b.w	8215c <Shell+0x88>
   82b38:	200011c8 	.word	0x200011c8
   82b3c:	200010c4 	.word	0x200010c4
   82b40:	000885d0 	.word	0x000885d0
   82b44:	00083269 	.word	0x00083269
   82b48:	000885d4 	.word	0x000885d4
   82b4c:	200011e8 	.word	0x200011e8
   82b50:	20001268 	.word	0x20001268
   82b54:	000885e4 	.word	0x000885e4
   82b58:	00083901 	.word	0x00083901
   82b5c:	000885f0 	.word	0x000885f0
   82b60:	00081659 	.word	0x00081659
   82b64:	00088580 	.word	0x00088580
   82b68:	0008857c 	.word	0x0008857c
   82b6c:	00088628 	.word	0x00088628
						k=(shell.pEdit-shellEditBuf);
   82b70:	4b9f      	ldr	r3, [pc, #636]	; (82df0 <Shell+0xd1c>)
   82b72:	685b      	ldr	r3, [r3, #4]
   82b74:	4a9f      	ldr	r2, [pc, #636]	; (82df4 <Shell+0xd20>)
   82b76:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[D");
   82b78:	1e5a      	subs	r2, r3, #1
   82b7a:	920e      	str	r2, [sp, #56]	; 0x38
   82b7c:	b153      	cbz	r3, 82b94 <Shell+0xac0>
   82b7e:	4e9e      	ldr	r6, [pc, #632]	; (82df8 <Shell+0xd24>)
   82b80:	2567      	movs	r5, #103	; 0x67
   82b82:	4c9e      	ldr	r4, [pc, #632]	; (82dfc <Shell+0xd28>)
   82b84:	4631      	mov	r1, r6
   82b86:	4628      	mov	r0, r5
   82b88:	47a0      	blx	r4
   82b8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b8c:	1e5a      	subs	r2, r3, #1
   82b8e:	920e      	str	r2, [sp, #56]	; 0x38
   82b90:	2b00      	cmp	r3, #0
   82b92:	d1f7      	bne.n	82b84 <Shell+0xab0>
						shell.pEdit=shellEditBuf;
   82b94:	4b96      	ldr	r3, [pc, #600]	; (82df0 <Shell+0xd1c>)
   82b96:	4a97      	ldr	r2, [pc, #604]	; (82df4 <Shell+0xd20>)
   82b98:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b9a:	2200      	movs	r2, #0
   82b9c:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b9e:	2203      	movs	r2, #3
   82ba0:	771a      	strb	r2, [r3, #28]
						break;
   82ba2:	f7ff badb 	b.w	8215c <Shell+0x88>
						k=((shellEditBuf+shell.nChar)-shell.pEdit);
   82ba6:	4a92      	ldr	r2, [pc, #584]	; (82df0 <Shell+0xd1c>)
   82ba8:	8993      	ldrh	r3, [r2, #12]
   82baa:	4992      	ldr	r1, [pc, #584]	; (82df4 <Shell+0xd20>)
   82bac:	440b      	add	r3, r1
   82bae:	6852      	ldr	r2, [r2, #4]
   82bb0:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[C");
   82bb2:	1e5a      	subs	r2, r3, #1
   82bb4:	920e      	str	r2, [sp, #56]	; 0x38
   82bb6:	b153      	cbz	r3, 82bce <Shell+0xafa>
   82bb8:	4e91      	ldr	r6, [pc, #580]	; (82e00 <Shell+0xd2c>)
   82bba:	2567      	movs	r5, #103	; 0x67
   82bbc:	4c8f      	ldr	r4, [pc, #572]	; (82dfc <Shell+0xd28>)
   82bbe:	4631      	mov	r1, r6
   82bc0:	4628      	mov	r0, r5
   82bc2:	47a0      	blx	r4
   82bc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82bc6:	1e5a      	subs	r2, r3, #1
   82bc8:	920e      	str	r2, [sp, #56]	; 0x38
   82bca:	2b00      	cmp	r3, #0
   82bcc:	d1f7      	bne.n	82bbe <Shell+0xaea>
						shell.pEdit=shellEditBuf+shell.nChar;
   82bce:	4b88      	ldr	r3, [pc, #544]	; (82df0 <Shell+0xd1c>)
   82bd0:	899a      	ldrh	r2, [r3, #12]
   82bd2:	4988      	ldr	r1, [pc, #544]	; (82df4 <Shell+0xd20>)
   82bd4:	440a      	add	r2, r1
   82bd6:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82bd8:	2200      	movs	r2, #0
   82bda:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82bdc:	2203      	movs	r2, #3
   82bde:	771a      	strb	r2, [r3, #28]
						break;
   82be0:	f7ff babc 	b.w	8215c <Shell+0x88>
								shell.pEdit--;
   82be4:	3b01      	subs	r3, #1
   82be6:	6063      	str	r3, [r4, #4]
								Putstr("\e[D");
   82be8:	4631      	mov	r1, r6
   82bea:	2067      	movs	r0, #103	; 0x67
   82bec:	4b83      	ldr	r3, [pc, #524]	; (82dfc <Shell+0xd28>)
   82bee:	4798      	blx	r3
							while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit>shellEditBuf))
   82bf0:	6863      	ldr	r3, [r4, #4]
   82bf2:	462a      	mov	r2, r5
   82bf4:	7819      	ldrb	r1, [r3, #0]
   82bf6:	2006      	movs	r0, #6
   82bf8:	f7ff fa6c 	bl	820d4 <Shell>
   82bfc:	2800      	cmp	r0, #0
   82bfe:	f43f af39 	beq.w	82a74 <Shell+0x9a0>
   82c02:	6863      	ldr	r3, [r4, #4]
   82c04:	42bb      	cmp	r3, r7
   82c06:	d8ed      	bhi.n	82be4 <Shell+0xb10>
   82c08:	e734      	b.n	82a74 <Shell+0x9a0>
   82c0a:	4c79      	ldr	r4, [pc, #484]	; (82df0 <Shell+0xd1c>)
   82c0c:	4f79      	ldr	r7, [pc, #484]	; (82df4 <Shell+0xd20>)
								Putstr("\e[D");
   82c0e:	4e7a      	ldr	r6, [pc, #488]	; (82df8 <Shell+0xd24>)
   82c10:	e7ee      	b.n	82bf0 <Shell+0xb1c>
							shell.pEdit--;
   82c12:	6863      	ldr	r3, [r4, #4]
   82c14:	3b01      	subs	r3, #1
   82c16:	6063      	str	r3, [r4, #4]
							Putstr("\e[D");
   82c18:	4639      	mov	r1, r7
   82c1a:	2067      	movs	r0, #103	; 0x67
   82c1c:	47b0      	blx	r6
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82c1e:	6863      	ldr	r3, [r4, #4]
   82c20:	1e59      	subs	r1, r3, #1
   82c22:	4a74      	ldr	r2, [pc, #464]	; (82df4 <Shell+0xd20>)
   82c24:	4291      	cmp	r1, r2
   82c26:	f4ff af2c 	bcc.w	82a82 <Shell+0x9ae>
   82c2a:	462a      	mov	r2, r5
   82c2c:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82c30:	2006      	movs	r0, #6
   82c32:	f7ff fa4f 	bl	820d4 <Shell>
   82c36:	2800      	cmp	r0, #0
   82c38:	d0eb      	beq.n	82c12 <Shell+0xb3e>
   82c3a:	e722      	b.n	82a82 <Shell+0x9ae>
							shell.pEdit--;
   82c3c:	4c6c      	ldr	r4, [pc, #432]	; (82df0 <Shell+0xd1c>)
							Putstr("\e[D");
   82c3e:	4f6e      	ldr	r7, [pc, #440]	; (82df8 <Shell+0xd24>)
   82c40:	4e6e      	ldr	r6, [pc, #440]	; (82dfc <Shell+0xd28>)
   82c42:	e7f2      	b.n	82c2a <Shell+0xb56>
						if(!_IsSeparator(*shell.pEdit,separators))
   82c44:	4d6f      	ldr	r5, [pc, #444]	; (82e04 <Shell+0xd30>)
   82c46:	4b6a      	ldr	r3, [pc, #424]	; (82df0 <Shell+0xd1c>)
   82c48:	685b      	ldr	r3, [r3, #4]
   82c4a:	462a      	mov	r2, r5
   82c4c:	7819      	ldrb	r1, [r3, #0]
   82c4e:	2006      	movs	r0, #6
   82c50:	f7ff fa40 	bl	820d4 <Shell>
   82c54:	b1b8      	cbz	r0, 82c86 <Shell+0xbb2>
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c56:	4c66      	ldr	r4, [pc, #408]	; (82df0 <Shell+0xd1c>)
   82c58:	4f66      	ldr	r7, [pc, #408]	; (82df4 <Shell+0xd20>)
							Putstr("\e[C");
   82c5a:	4e69      	ldr	r6, [pc, #420]	; (82e00 <Shell+0xd2c>)
   82c5c:	e01d      	b.n	82c9a <Shell+0xbc6>
								shell.pEdit++;
   82c5e:	3301      	adds	r3, #1
   82c60:	6063      	str	r3, [r4, #4]
								Putstr("\e[C");
   82c62:	4631      	mov	r1, r6
   82c64:	2067      	movs	r0, #103	; 0x67
   82c66:	4b65      	ldr	r3, [pc, #404]	; (82dfc <Shell+0xd28>)
   82c68:	4798      	blx	r3
							while((!_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c6a:	6863      	ldr	r3, [r4, #4]
   82c6c:	462a      	mov	r2, r5
   82c6e:	7819      	ldrb	r1, [r3, #0]
   82c70:	2006      	movs	r0, #6
   82c72:	f7ff fa2f 	bl	820d4 <Shell>
   82c76:	2800      	cmp	r0, #0
   82c78:	d1ed      	bne.n	82c56 <Shell+0xb82>
   82c7a:	6863      	ldr	r3, [r4, #4]
   82c7c:	89a2      	ldrh	r2, [r4, #12]
   82c7e:	443a      	add	r2, r7
   82c80:	4293      	cmp	r3, r2
   82c82:	d3ec      	bcc.n	82c5e <Shell+0xb8a>
   82c84:	e7e7      	b.n	82c56 <Shell+0xb82>
   82c86:	4c5a      	ldr	r4, [pc, #360]	; (82df0 <Shell+0xd1c>)
   82c88:	4f5a      	ldr	r7, [pc, #360]	; (82df4 <Shell+0xd20>)
								Putstr("\e[C");
   82c8a:	4e5d      	ldr	r6, [pc, #372]	; (82e00 <Shell+0xd2c>)
   82c8c:	e7ed      	b.n	82c6a <Shell+0xb96>
							shell.pEdit++;
   82c8e:	3301      	adds	r3, #1
   82c90:	6063      	str	r3, [r4, #4]
							Putstr("\e[C");
   82c92:	4631      	mov	r1, r6
   82c94:	2067      	movs	r0, #103	; 0x67
   82c96:	4b59      	ldr	r3, [pc, #356]	; (82dfc <Shell+0xd28>)
   82c98:	4798      	blx	r3
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82c9a:	6863      	ldr	r3, [r4, #4]
   82c9c:	462a      	mov	r2, r5
   82c9e:	7819      	ldrb	r1, [r3, #0]
   82ca0:	2006      	movs	r0, #6
   82ca2:	f7ff fa17 	bl	820d4 <Shell>
   82ca6:	b120      	cbz	r0, 82cb2 <Shell+0xbde>
   82ca8:	6863      	ldr	r3, [r4, #4]
   82caa:	89a2      	ldrh	r2, [r4, #12]
   82cac:	443a      	add	r2, r7
   82cae:	4293      	cmp	r3, r2
   82cb0:	d3ed      	bcc.n	82c8e <Shell+0xbba>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82cb2:	4b4f      	ldr	r3, [pc, #316]	; (82df0 <Shell+0xd1c>)
   82cb4:	2200      	movs	r2, #0
   82cb6:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82cb8:	2203      	movs	r2, #3
   82cba:	771a      	strb	r2, [r3, #28]
						break;
   82cbc:	f7ff ba4e 	b.w	8215c <Shell+0x88>
					Error(ERROR_SHELL_TIMER_ESC_BAD_SATE,shell.state);
   82cc0:	201f      	movs	r0, #31
   82cc2:	4b51      	ldr	r3, [pc, #324]	; (82e08 <Shell+0xd34>)
   82cc4:	4798      	blx	r3
   82cc6:	e5aa      	b.n	8281e <Shell+0x74a>
		pSrc=(uint32_t)shellEditBuf;
   82cc8:	4d4a      	ldr	r5, [pc, #296]	; (82df4 <Shell+0xd20>)
   82cca:	950e      	str	r5, [sp, #56]	; 0x38
		while(_IsSeparator(*(char*)pSrc,separators)) pSrc++;
   82ccc:	4e4d      	ldr	r6, [pc, #308]	; (82e04 <Shell+0xd30>)
   82cce:	2406      	movs	r4, #6
   82cd0:	4632      	mov	r2, r6
   82cd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cd4:	7819      	ldrb	r1, [r3, #0]
   82cd6:	4620      	mov	r0, r4
   82cd8:	f7ff f9fc 	bl	820d4 <Shell>
   82cdc:	4680      	mov	r8, r0
   82cde:	b118      	cbz	r0, 82ce8 <Shell+0xc14>
   82ce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82ce2:	3301      	adds	r3, #1
   82ce4:	930e      	str	r3, [sp, #56]	; 0x38
   82ce6:	e7f3      	b.n	82cd0 <Shell+0xbfc>
		k=pSrc-(uint32_t)shellEditBuf;
   82ce8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cea:	1b5a      	subs	r2, r3, r5
   82cec:	9205      	str	r2, [sp, #20]
		if(k)
   82cee:	b19a      	cbz	r2, 82d18 <Shell+0xc44>
			shell.pEdit=shellEditBuf;
   82cf0:	4a3f      	ldr	r2, [pc, #252]	; (82df0 <Shell+0xd1c>)
   82cf2:	4940      	ldr	r1, [pc, #256]	; (82df4 <Shell+0xd20>)
   82cf4:	6051      	str	r1, [r2, #4]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82cf6:	8992      	ldrh	r2, [r2, #12]
   82cf8:	442a      	add	r2, r5
   82cfa:	4293      	cmp	r3, r2
   82cfc:	d20c      	bcs.n	82d18 <Shell+0xc44>
				*shell.pEdit++=*(char*)pSrc++;
   82cfe:	493c      	ldr	r1, [pc, #240]	; (82df0 <Shell+0xd1c>)
   82d00:	684a      	ldr	r2, [r1, #4]
   82d02:	1c50      	adds	r0, r2, #1
   82d04:	6048      	str	r0, [r1, #4]
   82d06:	1c58      	adds	r0, r3, #1
   82d08:	900e      	str	r0, [sp, #56]	; 0x38
   82d0a:	781b      	ldrb	r3, [r3, #0]
   82d0c:	7013      	strb	r3, [r2, #0]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d10:	898a      	ldrh	r2, [r1, #12]
   82d12:	442a      	add	r2, r5
   82d14:	429a      	cmp	r2, r3
   82d16:	d8f3      	bhi.n	82d00 <Shell+0xc2c>
		pSrc=(uint32_t)shellEditBuf+k;
   82d18:	9905      	ldr	r1, [sp, #20]
   82d1a:	186b      	adds	r3, r5, r1
   82d1c:	930e      	str	r3, [sp, #56]	; 0x38
		shell.nChar-=k;
   82d1e:	4a34      	ldr	r2, [pc, #208]	; (82df0 <Shell+0xd1c>)
   82d20:	8993      	ldrh	r3, [r2, #12]
   82d22:	1a5b      	subs	r3, r3, r1
   82d24:	8193      	strh	r3, [r2, #12]
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d26:	4614      	mov	r4, r2
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d28:	2706      	movs	r7, #6
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d2a:	e004      	b.n	82d36 <Shell+0xc62>
			if(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d2c:	89a3      	ldrh	r3, [r4, #12]
   82d2e:	442b      	add	r3, r5
   82d30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82d32:	4293      	cmp	r3, r2
   82d34:	d814      	bhi.n	82d60 <Shell+0xc8c>
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d38:	89a2      	ldrh	r2, [r4, #12]
   82d3a:	442a      	add	r2, r5
   82d3c:	429a      	cmp	r2, r3
   82d3e:	f67f aa0d 	bls.w	8215c <Shell+0x88>
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d42:	4632      	mov	r2, r6
   82d44:	7819      	ldrb	r1, [r3, #0]
   82d46:	4638      	mov	r0, r7
   82d48:	f7ff f9c4 	bl	820d4 <Shell>
   82d4c:	2800      	cmp	r0, #0
   82d4e:	d1ed      	bne.n	82d2c <Shell+0xc58>
   82d50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d52:	3301      	adds	r3, #1
   82d54:	930e      	str	r3, [sp, #56]	; 0x38
   82d56:	89a2      	ldrh	r2, [r4, #12]
   82d58:	442a      	add	r2, r5
   82d5a:	429a      	cmp	r2, r3
   82d5c:	d8f1      	bhi.n	82d42 <Shell+0xc6e>
   82d5e:	e7ea      	b.n	82d36 <Shell+0xc62>
				pSrc++; pSt=shell.pEdit=(char*)pSrc;
   82d60:	f102 0901 	add.w	r9, r2, #1
   82d64:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82d68:	f8c4 9004 	str.w	r9, [r4, #4]
				while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82d6c:	454b      	cmp	r3, r9
   82d6e:	bf88      	it	hi
   82d70:	464b      	movhi	r3, r9
   82d72:	d90c      	bls.n	82d8e <Shell+0xcba>
   82d74:	4632      	mov	r2, r6
   82d76:	7819      	ldrb	r1, [r3, #0]
   82d78:	4638      	mov	r0, r7
   82d7a:	f7ff f9ab 	bl	820d4 <Shell>
   82d7e:	b130      	cbz	r0, 82d8e <Shell+0xcba>
   82d80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d82:	3301      	adds	r3, #1
   82d84:	930e      	str	r3, [sp, #56]	; 0x38
   82d86:	89a2      	ldrh	r2, [r4, #12]
   82d88:	442a      	add	r2, r5
   82d8a:	429a      	cmp	r2, r3
   82d8c:	d8f2      	bhi.n	82d74 <Shell+0xca0>
				k=pSrc-(uint32_t)shell.pEdit;
   82d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d90:	6861      	ldr	r1, [r4, #4]
   82d92:	1a59      	subs	r1, r3, r1
   82d94:	9105      	str	r1, [sp, #20]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82d96:	b189      	cbz	r1, 82dbc <Shell+0xce8>
   82d98:	89a2      	ldrh	r2, [r4, #12]
   82d9a:	442a      	add	r2, r5
   82d9c:	4293      	cmp	r3, r2
   82d9e:	d20d      	bcs.n	82dbc <Shell+0xce8>
					*shell.pEdit++=*(char*)pSrc++;
   82da0:	6862      	ldr	r2, [r4, #4]
   82da2:	1c51      	adds	r1, r2, #1
   82da4:	6061      	str	r1, [r4, #4]
   82da6:	1c59      	adds	r1, r3, #1
   82da8:	910e      	str	r1, [sp, #56]	; 0x38
   82daa:	781b      	ldrb	r3, [r3, #0]
   82dac:	7013      	strb	r3, [r2, #0]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82dae:	9905      	ldr	r1, [sp, #20]
   82db0:	b121      	cbz	r1, 82dbc <Shell+0xce8>
   82db2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82db4:	89a2      	ldrh	r2, [r4, #12]
   82db6:	442a      	add	r2, r5
   82db8:	429a      	cmp	r2, r3
   82dba:	d8f1      	bhi.n	82da0 <Shell+0xccc>
				shell.nChar-=k;
   82dbc:	89a3      	ldrh	r3, [r4, #12]
   82dbe:	1a59      	subs	r1, r3, r1
   82dc0:	81a1      	strh	r1, [r4, #12]
				pSrc=(uint32_t)pSt;
   82dc2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82dc6:	e7b6      	b.n	82d36 <Shell+0xc62>
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
   82dc8:	200d      	movs	r0, #13
   82dca:	4b0f      	ldr	r3, [pc, #60]	; (82e08 <Shell+0xd34>)
   82dcc:	4798      	blx	r3
	return 0;
   82dce:	f04f 0800 	mov.w	r8, #0
   82dd2:	f7ff b9c3 	b.w	8215c <Shell+0x88>
   82dd6:	f04f 0800 	mov.w	r8, #0
   82dda:	f7ff b9bf 	b.w	8215c <Shell+0x88>
   82dde:	f04f 0800 	mov.w	r8, #0
   82de2:	f7ff b9bb 	b.w	8215c <Shell+0x88>
   82de6:	f04f 0800 	mov.w	r8, #0
   82dea:	f7ff b9b7 	b.w	8215c <Shell+0x88>
   82dee:	bf00      	nop
   82df0:	200011c8 	.word	0x200011c8
   82df4:	200010c4 	.word	0x200010c4
   82df8:	0008857c 	.word	0x0008857c
   82dfc:	00083269 	.word	0x00083269
   82e00:	00088580 	.word	0x00088580
   82e04:	00088628 	.word	0x00088628
   82e08:	000816a1 	.word	0x000816a1
   82e0c:	f04f 0800 	mov.w	r8, #0
   82e10:	f7ff b9a4 	b.w	8215c <Shell+0x88>

00082e14 <_cmd_show>:
#define ST_SHELL_PROMPT_DISABLED        0x000004

char buf[256];

void _cmd_show(uint32_t sc, void*pParam)
{
   82e14:	b538      	push	{r3, r4, r5, lr}
   82e16:	4605      	mov	r5, r0
   82e18:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82e1a:	490a      	ldr	r1, [pc, #40]	; (82e44 <_cmd_show+0x30>)
   82e1c:	4b0a      	ldr	r3, [pc, #40]	; (82e48 <_cmd_show+0x34>)
   82e1e:	4798      	blx	r3
	if(pToken)
   82e20:	b170      	cbz	r0, 82e40 <_cmd_show+0x2c>
   82e22:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82e24:	4b09      	ldr	r3, [pc, #36]	; (82e4c <_cmd_show+0x38>)
   82e26:	4798      	blx	r3
   82e28:	4601      	mov	r1, r0
   82e2a:	4620      	mov	r0, r4
   82e2c:	4b08      	ldr	r3, [pc, #32]	; (82e50 <_cmd_show+0x3c>)
   82e2e:	4798      	blx	r3
   82e30:	f245 73e5 	movw	r3, #22501	; 0x57e5
   82e34:	4298      	cmp	r0, r3
   82e36:	d103      	bne.n	82e40 <_cmd_show+0x2c>
		{
		case 0x57E5:    //crc
			mBitsSet(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   82e38:	882b      	ldrh	r3, [r5, #0]
   82e3a:	f043 0302 	orr.w	r3, r3, #2
   82e3e:	802b      	strh	r3, [r5, #0]
   82e40:	bd38      	pop	{r3, r4, r5, pc}
   82e42:	bf00      	nop
   82e44:	00088474 	.word	0x00088474
   82e48:	000839a9 	.word	0x000839a9
   82e4c:	0008394d 	.word	0x0008394d
   82e50:	00081659 	.word	0x00081659

00082e54 <_cmd_hide>:
		}
	}
}

void _cmd_hide(uint32_t sc, void*pParam)
{
   82e54:	b538      	push	{r3, r4, r5, lr}
   82e56:	4605      	mov	r5, r0
   82e58:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82e5a:	490a      	ldr	r1, [pc, #40]	; (82e84 <_cmd_hide+0x30>)
   82e5c:	4b0a      	ldr	r3, [pc, #40]	; (82e88 <_cmd_hide+0x34>)
   82e5e:	4798      	blx	r3
	if(pToken)
   82e60:	b170      	cbz	r0, 82e80 <_cmd_hide+0x2c>
   82e62:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82e64:	4b09      	ldr	r3, [pc, #36]	; (82e8c <_cmd_hide+0x38>)
   82e66:	4798      	blx	r3
   82e68:	4601      	mov	r1, r0
   82e6a:	4620      	mov	r0, r4
   82e6c:	4b08      	ldr	r3, [pc, #32]	; (82e90 <_cmd_hide+0x3c>)
   82e6e:	4798      	blx	r3
   82e70:	f245 73e5 	movw	r3, #22501	; 0x57e5
   82e74:	4298      	cmp	r0, r3
   82e76:	d103      	bne.n	82e80 <_cmd_hide+0x2c>
		{
		case 0x57E5:    //crc
			mBitsClr(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   82e78:	882b      	ldrh	r3, [r5, #0]
   82e7a:	f023 0302 	bic.w	r3, r3, #2
   82e7e:	802b      	strh	r3, [r5, #0]
   82e80:	bd38      	pop	{r3, r4, r5, pc}
   82e82:	bf00      	nop
   82e84:	00088474 	.word	0x00088474
   82e88:	000839a9 	.word	0x000839a9
   82e8c:	0008394d 	.word	0x0008394d
   82e90:	00081659 	.word	0x00081659

00082e94 <_cmd_start>:
		}
	}
}

void _cmd_start(uint32_t sc, void*pParam)
{
   82e94:	b538      	push	{r3, r4, r5, lr}
   82e96:	460d      	mov	r5, r1
	Putstr(" cmd start : ");
   82e98:	4903      	ldr	r1, [pc, #12]	; (82ea8 <_cmd_start+0x14>)
   82e9a:	2067      	movs	r0, #103	; 0x67
   82e9c:	4c03      	ldr	r4, [pc, #12]	; (82eac <_cmd_start+0x18>)
   82e9e:	47a0      	blx	r4
	Putstr(pParam);
   82ea0:	4629      	mov	r1, r5
   82ea2:	2067      	movs	r0, #103	; 0x67
   82ea4:	47a0      	blx	r4
   82ea6:	bd38      	pop	{r3, r4, r5, pc}
   82ea8:	00088760 	.word	0x00088760
   82eac:	00083269 	.word	0x00083269

00082eb0 <_cmd_cls>:
	pParam=atoi((char*)pParam);
	PushTask(_cmd_restart_proc,sc,pParam,0);
}

void _cmd_cls(uint32_t sc, void*pParam)
{
   82eb0:	b508      	push	{r3, lr}
	Putstr("\e[2J");
   82eb2:	4902      	ldr	r1, [pc, #8]	; (82ebc <_cmd_cls+0xc>)
   82eb4:	2067      	movs	r0, #103	; 0x67
   82eb6:	4b02      	ldr	r3, [pc, #8]	; (82ec0 <_cmd_cls+0x10>)
   82eb8:	4798      	blx	r3
   82eba:	bd08      	pop	{r3, pc}
   82ebc:	00088634 	.word	0x00088634
   82ec0:	00083269 	.word	0x00083269

00082ec4 <_cmd_set>:
{
   82ec4:	b570      	push	{r4, r5, r6, lr}
	pToken = mstrtok(NULL," \r\n");
   82ec6:	493a      	ldr	r1, [pc, #232]	; (82fb0 <_cmd_set+0xec>)
   82ec8:	2000      	movs	r0, #0
   82eca:	4b3a      	ldr	r3, [pc, #232]	; (82fb4 <_cmd_set+0xf0>)
   82ecc:	4798      	blx	r3
	if(pToken)
   82ece:	2800      	cmp	r0, #0
   82ed0:	d056      	beq.n	82f80 <_cmd_set+0xbc>
   82ed2:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82ed4:	4b38      	ldr	r3, [pc, #224]	; (82fb8 <_cmd_set+0xf4>)
   82ed6:	4798      	blx	r3
   82ed8:	4601      	mov	r1, r0
   82eda:	4620      	mov	r0, r4
   82edc:	4b37      	ldr	r3, [pc, #220]	; (82fbc <_cmd_set+0xf8>)
   82ede:	4798      	blx	r3
   82ee0:	f247 3327 	movw	r3, #29479	; 0x7327
   82ee4:	4298      	cmp	r0, r3
   82ee6:	d004      	beq.n	82ef2 <_cmd_set+0x2e>
   82ee8:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   82eec:	4298      	cmp	r0, r3
   82eee:	d024      	beq.n	82f3a <_cmd_set+0x76>
   82ef0:	bd70      	pop	{r4, r5, r6, pc}
			pToken=mstrtok(NULL," :./\r\n");
   82ef2:	4933      	ldr	r1, [pc, #204]	; (82fc0 <_cmd_set+0xfc>)
   82ef4:	2000      	movs	r0, #0
   82ef6:	4b2f      	ldr	r3, [pc, #188]	; (82fb4 <_cmd_set+0xf0>)
   82ef8:	4798      	blx	r3
			if(pToken) hour=atoi((char*)pToken);
   82efa:	b1c0      	cbz	r0, 82f2e <_cmd_set+0x6a>
   82efc:	4b31      	ldr	r3, [pc, #196]	; (82fc4 <_cmd_set+0x100>)
   82efe:	4798      	blx	r3
   82f00:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f02:	492f      	ldr	r1, [pc, #188]	; (82fc0 <_cmd_set+0xfc>)
   82f04:	2000      	movs	r0, #0
   82f06:	4b2b      	ldr	r3, [pc, #172]	; (82fb4 <_cmd_set+0xf0>)
   82f08:	4798      	blx	r3
			if(pToken) minute=atoi((char*)pToken);
   82f0a:	b190      	cbz	r0, 82f32 <_cmd_set+0x6e>
   82f0c:	4b2d      	ldr	r3, [pc, #180]	; (82fc4 <_cmd_set+0x100>)
   82f0e:	4798      	blx	r3
   82f10:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f12:	492b      	ldr	r1, [pc, #172]	; (82fc0 <_cmd_set+0xfc>)
   82f14:	2000      	movs	r0, #0
   82f16:	4b27      	ldr	r3, [pc, #156]	; (82fb4 <_cmd_set+0xf0>)
   82f18:	4798      	blx	r3
			if(pToken) second=atoi((char*)pToken);
   82f1a:	b160      	cbz	r0, 82f36 <_cmd_set+0x72>
   82f1c:	4b29      	ldr	r3, [pc, #164]	; (82fc4 <_cmd_set+0x100>)
   82f1e:	4798      	blx	r3
   82f20:	b2c3      	uxtb	r3, r0
			kRtc(KRTC_SET_TIME,(uint32_t)hour,(uint32_t)minute,(uint32_t)second);
   82f22:	462a      	mov	r2, r5
   82f24:	4621      	mov	r1, r4
   82f26:	2066      	movs	r0, #102	; 0x66
   82f28:	4c27      	ldr	r4, [pc, #156]	; (82fc8 <_cmd_set+0x104>)
   82f2a:	47a0      	blx	r4
			break;
   82f2c:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   82f2e:	2400      	movs	r4, #0
   82f30:	e7e7      	b.n	82f02 <_cmd_set+0x3e>
   82f32:	2500      	movs	r5, #0
   82f34:	e7ed      	b.n	82f12 <_cmd_set+0x4e>
   82f36:	2300      	movs	r3, #0
   82f38:	e7f3      	b.n	82f22 <_cmd_set+0x5e>
			pToken=mstrtok(NULL," :./\r\n");
   82f3a:	4921      	ldr	r1, [pc, #132]	; (82fc0 <_cmd_set+0xfc>)
   82f3c:	2000      	movs	r0, #0
   82f3e:	4b1d      	ldr	r3, [pc, #116]	; (82fb4 <_cmd_set+0xf0>)
   82f40:	4798      	blx	r3
			if(pToken) date=atoi((char*)pToken);
   82f42:	b1f0      	cbz	r0, 82f82 <_cmd_set+0xbe>
   82f44:	4b1f      	ldr	r3, [pc, #124]	; (82fc4 <_cmd_set+0x100>)
   82f46:	4798      	blx	r3
   82f48:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f4a:	491d      	ldr	r1, [pc, #116]	; (82fc0 <_cmd_set+0xfc>)
   82f4c:	2000      	movs	r0, #0
   82f4e:	4b19      	ldr	r3, [pc, #100]	; (82fb4 <_cmd_set+0xf0>)
   82f50:	4798      	blx	r3
			if(pToken) month=atoi((char*)pToken);
   82f52:	b1c0      	cbz	r0, 82f86 <_cmd_set+0xc2>
   82f54:	4b1b      	ldr	r3, [pc, #108]	; (82fc4 <_cmd_set+0x100>)
   82f56:	4798      	blx	r3
   82f58:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   82f5a:	4919      	ldr	r1, [pc, #100]	; (82fc0 <_cmd_set+0xfc>)
   82f5c:	2000      	movs	r0, #0
   82f5e:	4b15      	ldr	r3, [pc, #84]	; (82fb4 <_cmd_set+0xf0>)
   82f60:	4798      	blx	r3
			if(pToken) centYear=atoi((char*)pToken);
   82f62:	b190      	cbz	r0, 82f8a <_cmd_set+0xc6>
   82f64:	4b17      	ldr	r3, [pc, #92]	; (82fc4 <_cmd_set+0x100>)
   82f66:	4798      	blx	r3
   82f68:	b286      	uxth	r6, r0
			Putstr("\e[2K"); //Erase current line on terminal screen
   82f6a:	4918      	ldr	r1, [pc, #96]	; (82fcc <_cmd_set+0x108>)
   82f6c:	2067      	movs	r0, #103	; 0x67
   82f6e:	4b18      	ldr	r3, [pc, #96]	; (82fd0 <_cmd_set+0x10c>)
   82f70:	4798      	blx	r3
			if(kRtc(KRTC_SET_DATE,(uint32_t)date,(uint32_t)month,(uint32_t)centYear)==0)
   82f72:	4633      	mov	r3, r6
   82f74:	462a      	mov	r2, r5
   82f76:	4621      	mov	r1, r4
   82f78:	2067      	movs	r0, #103	; 0x67
   82f7a:	4c13      	ldr	r4, [pc, #76]	; (82fc8 <_cmd_set+0x104>)
   82f7c:	47a0      	blx	r4
   82f7e:	b130      	cbz	r0, 82f8e <_cmd_set+0xca>
   82f80:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   82f82:	2400      	movs	r4, #0
   82f84:	e7e1      	b.n	82f4a <_cmd_set+0x86>
   82f86:	2500      	movs	r5, #0
   82f88:	e7e7      	b.n	82f5a <_cmd_set+0x96>
	uint16_t u4=0;
   82f8a:	2600      	movs	r6, #0
   82f8c:	e7ed      	b.n	82f6a <_cmd_set+0xa6>
				Putstr("\r\n");
   82f8e:	4d11      	ldr	r5, [pc, #68]	; (82fd4 <_cmd_set+0x110>)
   82f90:	4629      	mov	r1, r5
   82f92:	2067      	movs	r0, #103	; 0x67
   82f94:	4c0e      	ldr	r4, [pc, #56]	; (82fd0 <_cmd_set+0x10c>)
   82f96:	47a0      	blx	r4
				kRtc(KRTC_GETF_DATE,(uint32_t)buf);
   82f98:	4e0f      	ldr	r6, [pc, #60]	; (82fd8 <_cmd_set+0x114>)
   82f9a:	4631      	mov	r1, r6
   82f9c:	2068      	movs	r0, #104	; 0x68
   82f9e:	4b0a      	ldr	r3, [pc, #40]	; (82fc8 <_cmd_set+0x104>)
   82fa0:	4798      	blx	r3
				Putstr(buf);
   82fa2:	4631      	mov	r1, r6
   82fa4:	2067      	movs	r0, #103	; 0x67
   82fa6:	47a0      	blx	r4
				Putstr("\r\n");
   82fa8:	4629      	mov	r1, r5
   82faa:	2067      	movs	r0, #103	; 0x67
   82fac:	47a0      	blx	r4
}
   82fae:	e7e7      	b.n	82f80 <_cmd_set+0xbc>
   82fb0:	00088474 	.word	0x00088474
   82fb4:	00083711 	.word	0x00083711
   82fb8:	0008394d 	.word	0x0008394d
   82fbc:	00081659 	.word	0x00081659
   82fc0:	00088750 	.word	0x00088750
   82fc4:	0008380d 	.word	0x0008380d
   82fc8:	00081881 	.word	0x00081881
   82fcc:	00088758 	.word	0x00088758
   82fd0:	00083269 	.word	0x00083269
   82fd4:	000885d0 	.word	0x000885d0
   82fd8:	200012a8 	.word	0x200012a8

00082fdc <_cmd_menu>:
{
   82fdc:	b510      	push	{r4, lr}
   82fde:	4608      	mov	r0, r1
	pToken = (uint32_t)strtok(pParam, " \r\n");
   82fe0:	4915      	ldr	r1, [pc, #84]	; (83038 <_cmd_menu+0x5c>)
   82fe2:	4b16      	ldr	r3, [pc, #88]	; (8303c <_cmd_menu+0x60>)
   82fe4:	4798      	blx	r3
	if(pToken)
   82fe6:	b900      	cbnz	r0, 82fea <_cmd_menu+0xe>
   82fe8:	bd10      	pop	{r4, pc}
   82fea:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   82fec:	4b14      	ldr	r3, [pc, #80]	; (83040 <_cmd_menu+0x64>)
   82fee:	4798      	blx	r3
   82ff0:	4601      	mov	r1, r0
   82ff2:	4620      	mov	r0, r4
   82ff4:	4b13      	ldr	r3, [pc, #76]	; (83044 <_cmd_menu+0x68>)
   82ff6:	4798      	blx	r3
		switch(crc)
   82ff8:	b280      	uxth	r0, r0
   82ffa:	f648 0362 	movw	r3, #34914	; 0x8862
   82ffe:	4298      	cmp	r0, r3
   83000:	d012      	beq.n	83028 <_cmd_menu+0x4c>
   83002:	f648 338b 	movw	r3, #35723	; 0x8b8b
   83006:	4298      	cmp	r0, r3
   83008:	d008      	beq.n	8301c <_cmd_menu+0x40>
   8300a:	f241 2352 	movw	r3, #4690	; 0x1252
   8300e:	4298      	cmp	r0, r3
   83010:	d00e      	beq.n	83030 <_cmd_menu+0x54>
			Error(ERROR_SHELL_CMD_MENU_SWITCH_BAD_SC, sc);
   83012:	4621      	mov	r1, r4
   83014:	2013      	movs	r0, #19
   83016:	4b0c      	ldr	r3, [pc, #48]	; (83048 <_cmd_menu+0x6c>)
   83018:	4798      	blx	r3
}
   8301a:	e7e5      	b.n	82fe8 <_cmd_menu+0xc>
			Menu(MENU_SWITCH_BUTTON);
   8301c:	2065      	movs	r0, #101	; 0x65
   8301e:	4c0b      	ldr	r4, [pc, #44]	; (8304c <_cmd_menu+0x70>)
   83020:	47a0      	blx	r4
			Menu(MENU_PROMPT);
   83022:	2069      	movs	r0, #105	; 0x69
   83024:	47a0      	blx	r4
			break;
   83026:	bd10      	pop	{r4, pc}
			Menu(MENU_SELECT_BUTTON);
   83028:	2066      	movs	r0, #102	; 0x66
   8302a:	4b08      	ldr	r3, [pc, #32]	; (8304c <_cmd_menu+0x70>)
   8302c:	4798      	blx	r3
			break;
   8302e:	bd10      	pop	{r4, pc}
			Menu(MENU_INIT);
   83030:	206b      	movs	r0, #107	; 0x6b
   83032:	4b06      	ldr	r3, [pc, #24]	; (8304c <_cmd_menu+0x70>)
   83034:	4798      	blx	r3
			break;
   83036:	bd10      	pop	{r4, pc}
   83038:	00088474 	.word	0x00088474
   8303c:	000839a9 	.word	0x000839a9
   83040:	0008394d 	.word	0x0008394d
   83044:	00081659 	.word	0x00081659
   83048:	000816a1 	.word	0x000816a1
   8304c:	000802ad 	.word	0x000802ad

00083050 <_cmd_restart_proc>:
{
   83050:	b570      	push	{r4, r5, r6, lr}
   83052:	b082      	sub	sp, #8
   83054:	4604      	mov	r4, r0
   83056:	460d      	mov	r5, r1
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   83058:	8803      	ldrh	r3, [r0, #0]
   8305a:	f043 0304 	orr.w	r3, r3, #4
   8305e:	8003      	strh	r3, [r0, #0]
	sprintf(buf,"\rSystem will restart in %i second...",(int)timeout); Putstr(buf);
   83060:	4e0e      	ldr	r6, [pc, #56]	; (8309c <_cmd_restart_proc+0x4c>)
   83062:	460a      	mov	r2, r1
   83064:	490e      	ldr	r1, [pc, #56]	; (830a0 <_cmd_restart_proc+0x50>)
   83066:	4630      	mov	r0, r6
   83068:	4b0e      	ldr	r3, [pc, #56]	; (830a4 <_cmd_restart_proc+0x54>)
   8306a:	4798      	blx	r3
   8306c:	4631      	mov	r1, r6
   8306e:	2067      	movs	r0, #103	; 0x67
   83070:	4b0d      	ldr	r3, [pc, #52]	; (830a8 <_cmd_restart_proc+0x58>)
   83072:	4798      	blx	r3
	if(timeout==0)
   83074:	b935      	cbnz	r5, 83084 <_cmd_restart_proc+0x34>
   83076:	4b0d      	ldr	r3, [pc, #52]	; (830ac <_cmd_restart_proc+0x5c>)
		for(sc=100000;sc;sc--);
   83078:	3b01      	subs	r3, #1
   8307a:	d1fd      	bne.n	83078 <_cmd_restart_proc+0x28>
		rstc_start_software_reset(RSTC);
   8307c:	480c      	ldr	r0, [pc, #48]	; (830b0 <_cmd_restart_proc+0x60>)
   8307e:	4b0d      	ldr	r3, [pc, #52]	; (830b4 <_cmd_restart_proc+0x64>)
   83080:	4798      	blx	r3
   83082:	e7fe      	b.n	83082 <_cmd_restart_proc+0x32>
		PushTask(_cmd_restart_proc,sc,--timeout,1000);	
   83084:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   83088:	9300      	str	r3, [sp, #0]
   8308a:	1e6b      	subs	r3, r5, #1
   8308c:	4622      	mov	r2, r4
   8308e:	490a      	ldr	r1, [pc, #40]	; (830b8 <_cmd_restart_proc+0x68>)
   83090:	2066      	movs	r0, #102	; 0x66
   83092:	4c0a      	ldr	r4, [pc, #40]	; (830bc <_cmd_restart_proc+0x6c>)
   83094:	47a0      	blx	r4
}
   83096:	b002      	add	sp, #8
   83098:	bd70      	pop	{r4, r5, r6, pc}
   8309a:	bf00      	nop
   8309c:	200012a8 	.word	0x200012a8
   830a0:	00088728 	.word	0x00088728
   830a4:	00083901 	.word	0x00083901
   830a8:	00083269 	.word	0x00083269
   830ac:	000186a0 	.word	0x000186a0
   830b0:	400e1200 	.word	0x400e1200
   830b4:	00080bcd 	.word	0x00080bcd
   830b8:	00083051 	.word	0x00083051
   830bc:	000834a5 	.word	0x000834a5

000830c0 <_cmd_restart>:
{
   830c0:	b510      	push	{r4, lr}
   830c2:	b082      	sub	sp, #8
   830c4:	4604      	mov	r4, r0
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   830c6:	8803      	ldrh	r3, [r0, #0]
   830c8:	f043 0304 	orr.w	r3, r3, #4
   830cc:	8003      	strh	r3, [r0, #0]
	pParam=atoi((char*)pParam);
   830ce:	4608      	mov	r0, r1
   830d0:	4b05      	ldr	r3, [pc, #20]	; (830e8 <_cmd_restart+0x28>)
   830d2:	4798      	blx	r3
	PushTask(_cmd_restart_proc,sc,pParam,0);
   830d4:	2300      	movs	r3, #0
   830d6:	9300      	str	r3, [sp, #0]
   830d8:	4603      	mov	r3, r0
   830da:	4622      	mov	r2, r4
   830dc:	4903      	ldr	r1, [pc, #12]	; (830ec <_cmd_restart+0x2c>)
   830de:	2066      	movs	r0, #102	; 0x66
   830e0:	4c03      	ldr	r4, [pc, #12]	; (830f0 <_cmd_restart+0x30>)
   830e2:	47a0      	blx	r4
}
   830e4:	b002      	add	sp, #8
   830e6:	bd10      	pop	{r4, pc}
   830e8:	0008380d 	.word	0x0008380d
   830ec:	00083051 	.word	0x00083051
   830f0:	000834a5 	.word	0x000834a5

000830f4 <_cmd_infos>:
	"ROM_FLASH --- ROM and Embedded Flash Memory [NVPSIZ is ROM size / NVPSIZ2 is Flash size]",
	"SRAM --- SRAM emulating ROM"
};

void _cmd_infos(uint32_t sc, void*pParam)
{
   830f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   830f8:	b08b      	sub	sp, #44	; 0x2c
	chipid_data_t chipData;

	chipid_read(CHIPID,&chipData);
   830fa:	a901      	add	r1, sp, #4
   830fc:	4844      	ldr	r0, [pc, #272]	; (83210 <_cmd_infos+0x11c>)
   830fe:	4b45      	ldr	r3, [pc, #276]	; (83214 <_cmd_infos+0x120>)
   83100:	4798      	blx	r3
	Putstr("\r\n\t=============== CHIP IDENTIFIER INFOS ===============\r\n\n");
   83102:	4945      	ldr	r1, [pc, #276]	; (83218 <_cmd_infos+0x124>)
   83104:	2067      	movs	r0, #103	; 0x67
   83106:	4c45      	ldr	r4, [pc, #276]	; (8321c <_cmd_infos+0x128>)
   83108:	47a0      	blx	r4
	sprintf(buf,"\tVERSION: %c\r\n",(char)(chipData.ul_version-1)+'A');	Putstr(buf);
   8310a:	9a01      	ldr	r2, [sp, #4]
   8310c:	3a01      	subs	r2, #1
   8310e:	b2d2      	uxtb	r2, r2
   83110:	4f43      	ldr	r7, [pc, #268]	; (83220 <_cmd_infos+0x12c>)
   83112:	3241      	adds	r2, #65	; 0x41
   83114:	4943      	ldr	r1, [pc, #268]	; (83224 <_cmd_infos+0x130>)
   83116:	4638      	mov	r0, r7
   83118:	4b43      	ldr	r3, [pc, #268]	; (83228 <_cmd_infos+0x134>)
   8311a:	4798      	blx	r3
   8311c:	4639      	mov	r1, r7
   8311e:	2067      	movs	r0, #103	; 0x67
   83120:	47a0      	blx	r4
		Putstr("\t  EPROC: "),Putstr(eprocs[chipData.ul_eproc]);	Putstr("\r\n");
   83122:	4942      	ldr	r1, [pc, #264]	; (8322c <_cmd_infos+0x138>)
   83124:	2067      	movs	r0, #103	; 0x67
   83126:	47a0      	blx	r4
   83128:	9a02      	ldr	r2, [sp, #8]
   8312a:	4b41      	ldr	r3, [pc, #260]	; (83230 <_cmd_infos+0x13c>)
   8312c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   83130:	2067      	movs	r0, #103	; 0x67
   83132:	47a0      	blx	r4
   83134:	4e3f      	ldr	r6, [pc, #252]	; (83234 <_cmd_infos+0x140>)
   83136:	4631      	mov	r1, r6
   83138:	2067      	movs	r0, #103	; 0x67
   8313a:	47a0      	blx	r4
		Putstr("\t NVPSIZ: "),Putstr(nvpsiz[chipData.ul_nvpsiz]);	Putstr("\r\n");
   8313c:	493e      	ldr	r1, [pc, #248]	; (83238 <_cmd_infos+0x144>)
   8313e:	2067      	movs	r0, #103	; 0x67
   83140:	47a0      	blx	r4
   83142:	4d3e      	ldr	r5, [pc, #248]	; (8323c <_cmd_infos+0x148>)
   83144:	9b03      	ldr	r3, [sp, #12]
   83146:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   8314a:	2067      	movs	r0, #103	; 0x67
   8314c:	47a0      	blx	r4
   8314e:	4631      	mov	r1, r6
   83150:	2067      	movs	r0, #103	; 0x67
   83152:	47a0      	blx	r4
		Putstr("\tNVPSIZ2: "),Putstr(nvpsiz[chipData.ul_nvpsiz2]);	Putstr("\r\n");
   83154:	493a      	ldr	r1, [pc, #232]	; (83240 <_cmd_infos+0x14c>)
   83156:	2067      	movs	r0, #103	; 0x67
   83158:	47a0      	blx	r4
   8315a:	9b04      	ldr	r3, [sp, #16]
   8315c:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   83160:	2067      	movs	r0, #103	; 0x67
   83162:	47a0      	blx	r4
   83164:	4631      	mov	r1, r6
   83166:	2067      	movs	r0, #103	; 0x67
   83168:	47a0      	blx	r4
		Putstr("\tSRAMSIZ: "),Putstr(sramsiz[chipData.ul_sramsiz]);	Putstr("\r\n");
   8316a:	4936      	ldr	r1, [pc, #216]	; (83244 <_cmd_infos+0x150>)
   8316c:	2067      	movs	r0, #103	; 0x67
   8316e:	47a0      	blx	r4
   83170:	9a05      	ldr	r2, [sp, #20]
   83172:	4b35      	ldr	r3, [pc, #212]	; (83248 <_cmd_infos+0x154>)
   83174:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   83178:	2067      	movs	r0, #103	; 0x67
   8317a:	47a0      	blx	r4
   8317c:	4631      	mov	r1, r6
   8317e:	2067      	movs	r0, #103	; 0x67
   83180:	47a0      	blx	r4
#define k sc
		k=0;
		while(arch[k].value && (arch[k].value!=chipData.ul_arch)) k++;
   83182:	9906      	ldr	r1, [sp, #24]
   83184:	2919      	cmp	r1, #25
   83186:	d038      	beq.n	831fa <_cmd_infos+0x106>
   83188:	4b30      	ldr	r3, [pc, #192]	; (8324c <_cmd_infos+0x158>)
   8318a:	2400      	movs	r4, #0
   8318c:	3401      	adds	r4, #1
   8318e:	7b1a      	ldrb	r2, [r3, #12]
   83190:	b112      	cbz	r2, 83198 <_cmd_infos+0xa4>
   83192:	330c      	adds	r3, #12
   83194:	428a      	cmp	r2, r1
   83196:	d1f9      	bne.n	8318c <_cmd_infos+0x98>
		Putstr("\t   ARCH: "),Putstr(arch[k].name); Putstr(" --- "); Putstr(arch[k].description); Putstr("\r\n");
   83198:	492d      	ldr	r1, [pc, #180]	; (83250 <_cmd_infos+0x15c>)
   8319a:	2067      	movs	r0, #103	; 0x67
   8319c:	4d1f      	ldr	r5, [pc, #124]	; (8321c <_cmd_infos+0x128>)
   8319e:	47a8      	blx	r5
   831a0:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8324c <_cmd_infos+0x158>
   831a4:	ea4f 0944 	mov.w	r9, r4, lsl #1
   831a8:	eb09 0304 	add.w	r3, r9, r4
   831ac:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   831b0:	6859      	ldr	r1, [r3, #4]
   831b2:	2067      	movs	r0, #103	; 0x67
   831b4:	47a8      	blx	r5
   831b6:	4927      	ldr	r1, [pc, #156]	; (83254 <_cmd_infos+0x160>)
   831b8:	2067      	movs	r0, #103	; 0x67
   831ba:	47a8      	blx	r5
   831bc:	444c      	add	r4, r9
   831be:	eb08 0884 	add.w	r8, r8, r4, lsl #2
   831c2:	f8d8 1008 	ldr.w	r1, [r8, #8]
   831c6:	2067      	movs	r0, #103	; 0x67
   831c8:	47a8      	blx	r5
   831ca:	4631      	mov	r1, r6
   831cc:	2067      	movs	r0, #103	; 0x67
   831ce:	47a8      	blx	r5
#undef k
		Putstr("\t NVPTYP: "),Putstr(nvptyp[chipData.ul_nvptyp]);	Putstr("\r\n");
   831d0:	4921      	ldr	r1, [pc, #132]	; (83258 <_cmd_infos+0x164>)
   831d2:	2067      	movs	r0, #103	; 0x67
   831d4:	47a8      	blx	r5
   831d6:	9a07      	ldr	r2, [sp, #28]
   831d8:	4b20      	ldr	r3, [pc, #128]	; (8325c <_cmd_infos+0x168>)
   831da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   831de:	2067      	movs	r0, #103	; 0x67
   831e0:	47a8      	blx	r5
   831e2:	4631      	mov	r1, r6
   831e4:	2067      	movs	r0, #103	; 0x67
   831e6:	47a8      	blx	r5
	if(chipData.ul_extflag)
   831e8:	9b08      	ldr	r3, [sp, #32]
   831ea:	b943      	cbnz	r3, 831fe <_cmd_infos+0x10a>
	{
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
	}
	Putstr("\r\n\t=====================================================\r\n\n");
   831ec:	491c      	ldr	r1, [pc, #112]	; (83260 <_cmd_infos+0x16c>)
   831ee:	2067      	movs	r0, #103	; 0x67
   831f0:	4b0a      	ldr	r3, [pc, #40]	; (8321c <_cmd_infos+0x128>)
   831f2:	4798      	blx	r3
}
   831f4:	b00b      	add	sp, #44	; 0x2c
   831f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		k=0;
   831fa:	2400      	movs	r4, #0
   831fc:	e7cc      	b.n	83198 <_cmd_infos+0xa4>
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
   831fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83200:	4918      	ldr	r1, [pc, #96]	; (83264 <_cmd_infos+0x170>)
   83202:	4807      	ldr	r0, [pc, #28]	; (83220 <_cmd_infos+0x12c>)
   83204:	4b08      	ldr	r3, [pc, #32]	; (83228 <_cmd_infos+0x134>)
   83206:	4798      	blx	r3
   83208:	4639      	mov	r1, r7
   8320a:	2067      	movs	r0, #103	; 0x67
   8320c:	47a8      	blx	r5
   8320e:	e7ed      	b.n	831ec <_cmd_infos+0xf8>
   83210:	400e0740 	.word	0x400e0740
   83214:	000801f9 	.word	0x000801f9
   83218:	0008863c 	.word	0x0008863c
   8321c:	00083269 	.word	0x00083269
   83220:	200012a8 	.word	0x200012a8
   83224:	00088678 	.word	0x00088678
   83228:	00083901 	.word	0x00083901
   8322c:	00088688 	.word	0x00088688
   83230:	20000578 	.word	0x20000578
   83234:	000885d0 	.word	0x000885d0
   83238:	00088694 	.word	0x00088694
   8323c:	20000598 	.word	0x20000598
   83240:	000886a0 	.word	0x000886a0
   83244:	000886ac 	.word	0x000886ac
   83248:	200005ec 	.word	0x200005ec
   8324c:	00088770 	.word	0x00088770
   83250:	000886b8 	.word	0x000886b8
   83254:	000886c4 	.word	0x000886c4
   83258:	000886cc 	.word	0x000886cc
   8325c:	200005d8 	.word	0x200005d8
   83260:	000886ec 	.word	0x000886ec
   83264:	000886d8 	.word	0x000886d8

00083268 <Shellcom>:
	char	*pTxRead;
}shellcom;


uint32_t Shellcom(uint32_t sc, ...)
{
   83268:	b40f      	push	{r0, r1, r2, r3}
   8326a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	switch(sc)
   8326c:	9906      	ldr	r1, [sp, #24]
   8326e:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   83272:	2b04      	cmp	r3, #4
   83274:	f200 80b5 	bhi.w	833e2 <Shellcom+0x17a>
   83278:	e8df f013 	tbh	[pc, r3, lsl #1]
   8327c:	00b30005 	.word	0x00b30005
   83280:	0059003a 	.word	0x0059003a
   83284:	0086      	.short	0x0086
	{
	case SHELLCOM_NEW:
		shellcom.pTxRead=shellcom.pTxWrite=shellcomTxBuf;
   83286:	4b59      	ldr	r3, [pc, #356]	; (833ec <Shellcom+0x184>)
   83288:	4a59      	ldr	r2, [pc, #356]	; (833f0 <Shellcom+0x188>)
   8328a:	601a      	str	r2, [r3, #0]
   8328c:	605a      	str	r2, [r3, #4]
		pmc_enable_periph_clk(ID_UART);
   8328e:	2008      	movs	r0, #8
   83290:	4b58      	ldr	r3, [pc, #352]	; (833f4 <Shellcom+0x18c>)
   83292:	4798      	blx	r3
		pio_configure_pin(UART_TX_PIN,UART_TX_PIN_FLAGS);
   83294:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   83298:	200c      	movs	r0, #12
   8329a:	4c57      	ldr	r4, [pc, #348]	; (833f8 <Shellcom+0x190>)
   8329c:	47a0      	blx	r4
		pio_configure_pin(UART_RX_PIN,UART_RX_PIN_FLAGS);
   8329e:	4957      	ldr	r1, [pc, #348]	; (833fc <Shellcom+0x194>)
   832a0:	200b      	movs	r0, #11
   832a2:	47a0      	blx	r4
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   832a4:	4956      	ldr	r1, [pc, #344]	; (83400 <Shellcom+0x198>)
   832a6:	4857      	ldr	r0, [pc, #348]	; (83404 <Shellcom+0x19c>)
   832a8:	4b57      	ldr	r3, [pc, #348]	; (83408 <Shellcom+0x1a0>)
   832aa:	4798      	blx	r3
   832ac:	b938      	cbnz	r0, 832be <Shellcom+0x56>
   832ae:	f44f 7280 	mov.w	r2, #256	; 0x100
   832b2:	4b56      	ldr	r3, [pc, #344]	; (8340c <Shellcom+0x1a4>)
   832b4:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(ID_UART);
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   832b6:	4c53      	ldr	r4, [pc, #332]	; (83404 <Shellcom+0x19c>)
   832b8:	4e55      	ldr	r6, [pc, #340]	; (83410 <Shellcom+0x1a8>)
   832ba:	4f56      	ldr	r7, [pc, #344]	; (83414 <Shellcom+0x1ac>)
   832bc:	e006      	b.n	832cc <Shellcom+0x64>
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   832be:	2018      	movs	r0, #24
   832c0:	4b55      	ldr	r3, [pc, #340]	; (83418 <Shellcom+0x1b0>)
   832c2:	4798      	blx	r3
   832c4:	e7f3      	b.n	832ae <Shellcom+0x46>
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   832c6:	a906      	add	r1, sp, #24
   832c8:	4620      	mov	r0, r4
   832ca:	47b8      	blx	r7
   832cc:	4620      	mov	r0, r4
   832ce:	47b0      	blx	r6
   832d0:	4605      	mov	r5, r0
   832d2:	2800      	cmp	r0, #0
   832d4:	d1f7      	bne.n	832c6 <Shellcom+0x5e>
		uart_get_status(UART);	
   832d6:	4c4b      	ldr	r4, [pc, #300]	; (83404 <Shellcom+0x19c>)
   832d8:	4620      	mov	r0, r4
   832da:	4b50      	ldr	r3, [pc, #320]	; (8341c <Shellcom+0x1b4>)
   832dc:	4798      	blx	r3
		uart_enable_interrupt(UART,US_IER_RXRDY);
   832de:	2101      	movs	r1, #1
   832e0:	4620      	mov	r0, r4
   832e2:	4b4f      	ldr	r3, [pc, #316]	; (83420 <Shellcom+0x1b8>)
   832e4:	4798      	blx	r3
	default:
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
	}

	return 0;
}
   832e6:	4628      	mov	r0, r5
   832e8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   832ec:	b004      	add	sp, #16
   832ee:	4770      	bx	lr
		*shellcom.pTxWrite++=_charData;
   832f0:	4b3e      	ldr	r3, [pc, #248]	; (833ec <Shellcom+0x184>)
   832f2:	681a      	ldr	r2, [r3, #0]
   832f4:	1c51      	adds	r1, r2, #1
   832f6:	6019      	str	r1, [r3, #0]
   832f8:	9907      	ldr	r1, [sp, #28]
   832fa:	7011      	strb	r1, [r2, #0]
		if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   832fc:	681a      	ldr	r2, [r3, #0]
   832fe:	4b49      	ldr	r3, [pc, #292]	; (83424 <Shellcom+0x1bc>)
   83300:	429a      	cmp	r2, r3
   83302:	d303      	bcc.n	8330c <Shellcom+0xa4>
   83304:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   83308:	4b38      	ldr	r3, [pc, #224]	; (833ec <Shellcom+0x184>)
   8330a:	601a      	str	r2, [r3, #0]
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   8330c:	4b37      	ldr	r3, [pc, #220]	; (833ec <Shellcom+0x184>)
   8330e:	681a      	ldr	r2, [r3, #0]
   83310:	685b      	ldr	r3, [r3, #4]
   83312:	429a      	cmp	r2, r3
   83314:	d006      	beq.n	83324 <Shellcom+0xbc>
		uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83316:	f44f 7100 	mov.w	r1, #512	; 0x200
   8331a:	483a      	ldr	r0, [pc, #232]	; (83404 <Shellcom+0x19c>)
   8331c:	4b40      	ldr	r3, [pc, #256]	; (83420 <Shellcom+0x1b8>)
   8331e:	4798      	blx	r3
		return 1;
   83320:	2501      	movs	r5, #1
   83322:	e7e0      	b.n	832e6 <Shellcom+0x7e>
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   83324:	2100      	movs	r1, #0
   83326:	2017      	movs	r0, #23
   83328:	4b3b      	ldr	r3, [pc, #236]	; (83418 <Shellcom+0x1b0>)
   8332a:	4798      	blx	r3
   8332c:	e7f3      	b.n	83316 <Shellcom+0xae>
		_nChar=0;
   8332e:	2300      	movs	r3, #0
   83330:	9306      	str	r3, [sp, #24]
		while(*(char*)_pStr)
   83332:	9b07      	ldr	r3, [sp, #28]
   83334:	4619      	mov	r1, r3
   83336:	781a      	ldrb	r2, [r3, #0]
   83338:	b1fa      	cbz	r2, 8337a <Shellcom+0x112>
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   8333a:	4c2c      	ldr	r4, [pc, #176]	; (833ec <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   8333c:	4e39      	ldr	r6, [pc, #228]	; (83424 <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   8333e:	4d31      	ldr	r5, [pc, #196]	; (83404 <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   83340:	6822      	ldr	r2, [r4, #0]
   83342:	1c50      	adds	r0, r2, #1
   83344:	6020      	str	r0, [r4, #0]
   83346:	3301      	adds	r3, #1
   83348:	9307      	str	r3, [sp, #28]
   8334a:	780b      	ldrb	r3, [r1, #0]
   8334c:	7013      	strb	r3, [r2, #0]
   8334e:	9b06      	ldr	r3, [sp, #24]
   83350:	3301      	adds	r3, #1
   83352:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   83354:	6823      	ldr	r3, [r4, #0]
   83356:	42b3      	cmp	r3, r6
   83358:	bf24      	itt	cs
   8335a:	4b25      	ldrcs	r3, [pc, #148]	; (833f0 <Shellcom+0x188>)
   8335c:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   8335e:	6822      	ldr	r2, [r4, #0]
   83360:	6863      	ldr	r3, [r4, #4]
   83362:	429a      	cmp	r2, r3
   83364:	d00b      	beq.n	8337e <Shellcom+0x116>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83366:	f44f 7100 	mov.w	r1, #512	; 0x200
   8336a:	4628      	mov	r0, r5
   8336c:	4b2c      	ldr	r3, [pc, #176]	; (83420 <Shellcom+0x1b8>)
   8336e:	4798      	blx	r3
		while(*(char*)_pStr)
   83370:	9b07      	ldr	r3, [sp, #28]
   83372:	4619      	mov	r1, r3
   83374:	781a      	ldrb	r2, [r3, #0]
   83376:	2a00      	cmp	r2, #0
   83378:	d1e2      	bne.n	83340 <Shellcom+0xd8>
		return _nChar;
   8337a:	9d06      	ldr	r5, [sp, #24]
   8337c:	e7b3      	b.n	832e6 <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   8337e:	2100      	movs	r1, #0
   83380:	2017      	movs	r0, #23
   83382:	4b25      	ldr	r3, [pc, #148]	; (83418 <Shellcom+0x1b0>)
   83384:	4798      	blx	r3
   83386:	e7ee      	b.n	83366 <Shellcom+0xfe>
		_nChar=0;
   83388:	2300      	movs	r3, #0
   8338a:	9306      	str	r3, [sp, #24]
		while(_strLen)
   8338c:	9b08      	ldr	r3, [sp, #32]
   8338e:	b30b      	cbz	r3, 833d4 <Shellcom+0x16c>
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   83390:	4c16      	ldr	r4, [pc, #88]	; (833ec <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   83392:	4e24      	ldr	r6, [pc, #144]	; (83424 <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   83394:	4d1b      	ldr	r5, [pc, #108]	; (83404 <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   83396:	6823      	ldr	r3, [r4, #0]
   83398:	1c5a      	adds	r2, r3, #1
   8339a:	6022      	str	r2, [r4, #0]
   8339c:	9a07      	ldr	r2, [sp, #28]
   8339e:	1c51      	adds	r1, r2, #1
   833a0:	9107      	str	r1, [sp, #28]
   833a2:	7812      	ldrb	r2, [r2, #0]
   833a4:	701a      	strb	r2, [r3, #0]
   833a6:	9b08      	ldr	r3, [sp, #32]
   833a8:	3b01      	subs	r3, #1
   833aa:	9308      	str	r3, [sp, #32]
   833ac:	9b06      	ldr	r3, [sp, #24]
   833ae:	3301      	adds	r3, #1
   833b0:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   833b2:	6823      	ldr	r3, [r4, #0]
   833b4:	42b3      	cmp	r3, r6
   833b6:	bf24      	itt	cs
   833b8:	4b0d      	ldrcs	r3, [pc, #52]	; (833f0 <Shellcom+0x188>)
   833ba:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   833bc:	6822      	ldr	r2, [r4, #0]
   833be:	6863      	ldr	r3, [r4, #4]
   833c0:	429a      	cmp	r2, r3
   833c2:	d009      	beq.n	833d8 <Shellcom+0x170>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   833c4:	f44f 7100 	mov.w	r1, #512	; 0x200
   833c8:	4628      	mov	r0, r5
   833ca:	4b15      	ldr	r3, [pc, #84]	; (83420 <Shellcom+0x1b8>)
   833cc:	4798      	blx	r3
		while(_strLen)
   833ce:	9b08      	ldr	r3, [sp, #32]
   833d0:	2b00      	cmp	r3, #0
   833d2:	d1e0      	bne.n	83396 <Shellcom+0x12e>
		return _nChar;
   833d4:	9d06      	ldr	r5, [sp, #24]
   833d6:	e786      	b.n	832e6 <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   833d8:	2100      	movs	r1, #0
   833da:	2017      	movs	r0, #23
   833dc:	4b0e      	ldr	r3, [pc, #56]	; (83418 <Shellcom+0x1b0>)
   833de:	4798      	blx	r3
   833e0:	e7f0      	b.n	833c4 <Shellcom+0x15c>
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
   833e2:	200c      	movs	r0, #12
   833e4:	4b0c      	ldr	r3, [pc, #48]	; (83418 <Shellcom+0x1b0>)
   833e6:	4798      	blx	r3
	return 0;
   833e8:	2500      	movs	r5, #0
   833ea:	e77c      	b.n	832e6 <Shellcom+0x7e>
   833ec:	200013a8 	.word	0x200013a8
   833f0:	200013b0 	.word	0x200013b0
   833f4:	00080999 	.word	0x00080999
   833f8:	00080799 	.word	0x00080799
   833fc:	08000001 	.word	0x08000001
   83400:	00089098 	.word	0x00089098
   83404:	400e0600 	.word	0x400e0600
   83408:	00080e3d 	.word	0x00080e3d
   8340c:	e000e100 	.word	0xe000e100
   83410:	00080e7f 	.word	0x00080e7f
   83414:	00080e87 	.word	0x00080e87
   83418:	000816a1 	.word	0x000816a1
   8341c:	00080e7b 	.word	0x00080e7b
   83420:	00080e73 	.word	0x00080e73
   83424:	200015b0 	.word	0x200015b0

00083428 <UART_Handler>:
enum{
	_SHELL_KBHIT = 2
};

void UART_Handler()
{
   83428:	b510      	push	{r4, lr}
   8342a:	b082      	sub	sp, #8
	uint32_t dw_status = uart_get_status(UART);
   8342c:	4816      	ldr	r0, [pc, #88]	; (83488 <UART_Handler+0x60>)
   8342e:	4b17      	ldr	r3, [pc, #92]	; (8348c <UART_Handler+0x64>)
   83430:	4798      	blx	r3
   83432:	4604      	mov	r4, r0
	//TX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_TXEMPTY))
   83434:	f410 7f00 	tst.w	r0, #512	; 0x200
   83438:	d011      	beq.n	8345e <UART_Handler+0x36>
	{
		if(shellcom.pTxRead!=shellcom.pTxWrite)
   8343a:	4a15      	ldr	r2, [pc, #84]	; (83490 <UART_Handler+0x68>)
   8343c:	6853      	ldr	r3, [r2, #4]
   8343e:	6812      	ldr	r2, [r2, #0]
   83440:	4293      	cmp	r3, r2
   83442:	d011      	beq.n	83468 <UART_Handler+0x40>
		{
			UART->UART_THR = *shellcom.pTxRead++;
   83444:	1c5a      	adds	r2, r3, #1
   83446:	4912      	ldr	r1, [pc, #72]	; (83490 <UART_Handler+0x68>)
   83448:	604a      	str	r2, [r1, #4]
   8344a:	7819      	ldrb	r1, [r3, #0]
   8344c:	4b0e      	ldr	r3, [pc, #56]	; (83488 <UART_Handler+0x60>)
   8344e:	61d9      	str	r1, [r3, #28]
			if(shellcom.pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxRead=shellcomTxBuf;
   83450:	4b10      	ldr	r3, [pc, #64]	; (83494 <UART_Handler+0x6c>)
   83452:	429a      	cmp	r2, r3
   83454:	d303      	bcc.n	8345e <UART_Handler+0x36>
   83456:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   8345a:	4b0d      	ldr	r3, [pc, #52]	; (83490 <UART_Handler+0x68>)
   8345c:	605a      	str	r2, [r3, #4]
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
		}
	}

	//RX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_RXRDY))
   8345e:	f014 0f01 	tst.w	r4, #1
   83462:	d107      	bne.n	83474 <UART_Handler+0x4c>
	{
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
	}
}
   83464:	b002      	add	sp, #8
   83466:	bd10      	pop	{r4, pc}
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
   83468:	f44f 7100 	mov.w	r1, #512	; 0x200
   8346c:	4806      	ldr	r0, [pc, #24]	; (83488 <UART_Handler+0x60>)
   8346e:	4b0a      	ldr	r3, [pc, #40]	; (83498 <UART_Handler+0x70>)
   83470:	4798      	blx	r3
   83472:	e7f4      	b.n	8345e <UART_Handler+0x36>
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
   83474:	4b04      	ldr	r3, [pc, #16]	; (83488 <UART_Handler+0x60>)
   83476:	699b      	ldr	r3, [r3, #24]
   83478:	2200      	movs	r2, #0
   8347a:	9200      	str	r2, [sp, #0]
   8347c:	2202      	movs	r2, #2
   8347e:	4907      	ldr	r1, [pc, #28]	; (8349c <UART_Handler+0x74>)
   83480:	2066      	movs	r0, #102	; 0x66
   83482:	4c07      	ldr	r4, [pc, #28]	; (834a0 <UART_Handler+0x78>)
   83484:	47a0      	blx	r4
}
   83486:	e7ed      	b.n	83464 <UART_Handler+0x3c>
   83488:	400e0600 	.word	0x400e0600
   8348c:	00080e7b 	.word	0x00080e7b
   83490:	200013a8 	.word	0x200013a8
   83494:	200015b0 	.word	0x200015b0
   83498:	00080e77 	.word	0x00080e77
   8349c:	000820d5 	.word	0x000820d5
   834a0:	000834a5 	.word	0x000834a5

000834a4 <Taskman>:
	_TASKMAN_DELAYED_TASK_PROC	= 1
};


uint32_t Taskman(uint32_t sc, ...)
{
   834a4:	b40f      	push	{r0, r1, r2, r3}
   834a6:	b5f0      	push	{r4, r5, r6, r7, lr}
   834a8:	b083      	sub	sp, #12
	switch(sc)
   834aa:	9908      	ldr	r1, [sp, #32]
   834ac:	2964      	cmp	r1, #100	; 0x64
   834ae:	d028      	beq.n	83502 <Taskman+0x5e>
   834b0:	d91e      	bls.n	834f0 <Taskman+0x4c>
   834b2:	2966      	cmp	r1, #102	; 0x66
   834b4:	d06b      	beq.n	8358e <Taskman+0xea>
   834b6:	2967      	cmp	r1, #103	; 0x67
   834b8:	f040 80cd 	bne.w	83656 <Taskman+0x1b2>
#undef _delay
#undef k
		break;

	case TASKMAN_POP:
		cpu_irq_enter_critical();
   834bc:	4b68      	ldr	r3, [pc, #416]	; (83660 <Taskman+0x1bc>)
   834be:	4798      	blx	r3
		if(taskman.pPop!=taskman.pPush)
   834c0:	4a68      	ldr	r2, [pc, #416]	; (83664 <Taskman+0x1c0>)
   834c2:	6853      	ldr	r3, [r2, #4]
   834c4:	6812      	ldr	r2, [r2, #0]
   834c6:	4293      	cmp	r3, r2
   834c8:	f000 80ae 	beq.w	83628 <Taskman+0x184>
		{
			t_pTaskFunc	 func;
			uint32_t pa;
			func = taskman.pPop->pFunc;
   834cc:	681d      	ldr	r5, [r3, #0]
			sc = taskman.pPop->sc;
   834ce:	685c      	ldr	r4, [r3, #4]
   834d0:	9408      	str	r4, [sp, #32]
			pa = taskman.pPop->param;
   834d2:	689e      	ldr	r6, [r3, #8]
			taskman.pPop++;
   834d4:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPop=tasks;
   834d6:	4a64      	ldr	r2, [pc, #400]	; (83668 <Taskman+0x1c4>)
   834d8:	4293      	cmp	r3, r2
   834da:	f0c0 80a2 	bcc.w	83622 <Taskman+0x17e>
   834de:	4a63      	ldr	r2, [pc, #396]	; (8366c <Taskman+0x1c8>)
   834e0:	4b60      	ldr	r3, [pc, #384]	; (83664 <Taskman+0x1c0>)
   834e2:	605a      	str	r2, [r3, #4]
			cpu_irq_leave_critical();
   834e4:	4b62      	ldr	r3, [pc, #392]	; (83670 <Taskman+0x1cc>)
   834e6:	4798      	blx	r3
			func(sc,pa);
   834e8:	4631      	mov	r1, r6
   834ea:	4620      	mov	r0, r4
   834ec:	47a8      	blx	r5
			return 0; //Must return here because of "cpu_irq_leave_critical()"
   834ee:	e048      	b.n	83582 <Taskman+0xde>
	switch(sc)
   834f0:	2901      	cmp	r1, #1
   834f2:	f040 80b0 	bne.w	83656 <Taskman+0x1b2>


	////////// PRIVATE SERVICES IMPLEMENTATION ///////////////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   834f6:	2500      	movs	r5, #0
   834f8:	9508      	str	r5, [sp, #32]
   834fa:	4c5e      	ldr	r4, [pc, #376]	; (83674 <Taskman+0x1d0>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   834fc:	462f      	mov	r7, r5
   834fe:	2666      	movs	r6, #102	; 0x66
   83500:	e09a      	b.n	83638 <Taskman+0x194>
		taskman.pPop=taskman.pPush=tasks;
   83502:	4b58      	ldr	r3, [pc, #352]	; (83664 <Taskman+0x1c0>)
   83504:	4a59      	ldr	r2, [pc, #356]	; (8366c <Taskman+0x1c8>)
   83506:	601a      	str	r2, [r3, #0]
   83508:	605a      	str	r2, [r3, #4]
   8350a:	4b5a      	ldr	r3, [pc, #360]	; (83674 <Taskman+0x1d0>)
   8350c:	f503 71a0 	add.w	r1, r3, #320	; 0x140
			dTasks[k].delay=0;
   83510:	2200      	movs	r2, #0
   83512:	60da      	str	r2, [r3, #12]
   83514:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   83516:	428b      	cmp	r3, r1
   83518:	d1fb      	bne.n	83512 <Taskman+0x6e>
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   8351a:	4b57      	ldr	r3, [pc, #348]	; (83678 <Taskman+0x1d4>)
   8351c:	2202      	movs	r2, #2
   8351e:	661a      	str	r2, [r3, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   83520:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   83522:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   83524:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   83528:	6f19      	ldr	r1, [r3, #112]	; 0x70
   8352a:	f021 0102 	bic.w	r1, r1, #2
   8352e:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   83530:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   83532:	2016      	movs	r0, #22
   83534:	4b51      	ldr	r3, [pc, #324]	; (8367c <Taskman+0x1d8>)
   83536:	4798      	blx	r3

	//Configure the PMC to enable the TC module.
	sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	//Init TC to waveform mode.
	tc_init(
   83538:	4c51      	ldr	r4, [pc, #324]	; (83680 <Taskman+0x1dc>)
   8353a:	4a52      	ldr	r2, [pc, #328]	; (83684 <Taskman+0x1e0>)
   8353c:	2100      	movs	r1, #0
   8353e:	4620      	mov	r0, r4
   83540:	4b51      	ldr	r3, [pc, #324]	; (83688 <Taskman+0x1e4>)
   83542:	4798      	blx	r3

	//Configure waveform frequency and duty cycle.
	rc =	(sysclk_get_peripheral_bus_hz(TC) /
	TC_WAVEFORM_DIVISOR) /
	TC_WAVEFORM_FREQUENCY;
	tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   83544:	f240 22ee 	movw	r2, #750	; 0x2ee
   83548:	2100      	movs	r1, #0
   8354a:	4620      	mov	r0, r4
   8354c:	4b4f      	ldr	r3, [pc, #316]	; (8368c <Taskman+0x1e8>)
   8354e:	4798      	blx	r3

	ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   83550:	f240 220d 	movw	r2, #525	; 0x20d
   83554:	2100      	movs	r1, #0
   83556:	4620      	mov	r0, r4
   83558:	4b4d      	ldr	r3, [pc, #308]	; (83690 <Taskman+0x1ec>)
   8355a:	4798      	blx	r3

	//Enable TC TC_CHANNEL_WAVEFORM
	tc_start(TC, TC_CHANNEL_WAVEFORM);
   8355c:	2100      	movs	r1, #0
   8355e:	4620      	mov	r0, r4
   83560:	4b4c      	ldr	r3, [pc, #304]	; (83694 <Taskman+0x1f0>)
   83562:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   83564:	4b4c      	ldr	r3, [pc, #304]	; (83698 <Taskman+0x1f4>)
   83566:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   8356a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   8356e:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   83572:	2100      	movs	r1, #0
   83574:	f883 1316 	strb.w	r1, [r3, #790]	; 0x316
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   83578:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   8357a:	2204      	movs	r2, #4
   8357c:	4620      	mov	r0, r4
   8357e:	4b47      	ldr	r3, [pc, #284]	; (8369c <Taskman+0x1f8>)
   83580:	4798      	blx	r3
}
   83582:	2000      	movs	r0, #0
   83584:	b003      	add	sp, #12
   83586:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8358a:	b004      	add	sp, #16
   8358c:	4770      	bx	lr
		cpu_irq_enter_critical();
   8358e:	4b34      	ldr	r3, [pc, #208]	; (83660 <Taskman+0x1bc>)
   83590:	4798      	blx	r3
		if(_delay)
   83592:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   83594:	b345      	cbz	r5, 835e8 <Taskman+0x144>
			for(k=0;(k<TASKMAN_DELAYED_TASK_LIST_LEN)&&(dTasks[k].delay);k++);
   83596:	2300      	movs	r3, #0
   83598:	9308      	str	r3, [sp, #32]
   8359a:	4b36      	ldr	r3, [pc, #216]	; (83674 <Taskman+0x1d0>)
   8359c:	68db      	ldr	r3, [r3, #12]
   8359e:	b1a3      	cbz	r3, 835ca <Taskman+0x126>
   835a0:	2301      	movs	r3, #1
   835a2:	9308      	str	r3, [sp, #32]
   835a4:	4a33      	ldr	r2, [pc, #204]	; (83674 <Taskman+0x1d0>)
   835a6:	2000      	movs	r0, #0
   835a8:	461c      	mov	r4, r3
   835aa:	69d1      	ldr	r1, [r2, #28]
   835ac:	b151      	cbz	r1, 835c4 <Taskman+0x120>
   835ae:	3301      	adds	r3, #1
   835b0:	3210      	adds	r2, #16
   835b2:	4620      	mov	r0, r4
   835b4:	2b14      	cmp	r3, #20
   835b6:	d1f8      	bne.n	835aa <Taskman+0x106>
			if(k==TASKMAN_DELAYED_TASK_LIST_LEN) Error(ERROR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   835b8:	2100      	movs	r1, #0
   835ba:	2016      	movs	r0, #22
   835bc:	4b38      	ldr	r3, [pc, #224]	; (836a0 <Taskman+0x1fc>)
   835be:	4798      	blx	r3
   835c0:	2314      	movs	r3, #20
   835c2:	e002      	b.n	835ca <Taskman+0x126>
   835c4:	b970      	cbnz	r0, 835e4 <Taskman+0x140>
   835c6:	2b14      	cmp	r3, #20
   835c8:	d0f6      	beq.n	835b8 <Taskman+0x114>
			dTasks[k].pFunc=_func;
   835ca:	492a      	ldr	r1, [pc, #168]	; (83674 <Taskman+0x1d0>)
   835cc:	011b      	lsls	r3, r3, #4
   835ce:	18ca      	adds	r2, r1, r3
   835d0:	9809      	ldr	r0, [sp, #36]	; 0x24
   835d2:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   835d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   835d6:	6053      	str	r3, [r2, #4]
			dTasks[k].param=_param;
   835d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   835da:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   835dc:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   835de:	4b24      	ldr	r3, [pc, #144]	; (83670 <Taskman+0x1cc>)
   835e0:	4798      	blx	r3
		break;
   835e2:	e7ce      	b.n	83582 <Taskman+0xde>
   835e4:	9308      	str	r3, [sp, #32]
   835e6:	e7ee      	b.n	835c6 <Taskman+0x122>
			taskman.pPush->pFunc=_func;
   835e8:	4b1e      	ldr	r3, [pc, #120]	; (83664 <Taskman+0x1c0>)
   835ea:	681a      	ldr	r2, [r3, #0]
   835ec:	9909      	ldr	r1, [sp, #36]	; 0x24
   835ee:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   835f0:	681b      	ldr	r3, [r3, #0]
   835f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   835f4:	605a      	str	r2, [r3, #4]
			taskman.pPush->param=_param;
   835f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   835f8:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   835fa:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   835fc:	4a1a      	ldr	r2, [pc, #104]	; (83668 <Taskman+0x1c4>)
   835fe:	4293      	cmp	r3, r2
   83600:	d20b      	bcs.n	8361a <Taskman+0x176>
			taskman.pPush++;
   83602:	4a18      	ldr	r2, [pc, #96]	; (83664 <Taskman+0x1c0>)
   83604:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERROR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   83606:	4b17      	ldr	r3, [pc, #92]	; (83664 <Taskman+0x1c0>)
   83608:	681a      	ldr	r2, [r3, #0]
   8360a:	685b      	ldr	r3, [r3, #4]
   8360c:	429a      	cmp	r2, r3
   8360e:	d1e6      	bne.n	835de <Taskman+0x13a>
   83610:	2100      	movs	r1, #0
   83612:	2015      	movs	r0, #21
   83614:	4b22      	ldr	r3, [pc, #136]	; (836a0 <Taskman+0x1fc>)
   83616:	4798      	blx	r3
   83618:	e7e1      	b.n	835de <Taskman+0x13a>
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   8361a:	4a14      	ldr	r2, [pc, #80]	; (8366c <Taskman+0x1c8>)
   8361c:	4b11      	ldr	r3, [pc, #68]	; (83664 <Taskman+0x1c0>)
   8361e:	601a      	str	r2, [r3, #0]
   83620:	e7f1      	b.n	83606 <Taskman+0x162>
			taskman.pPop++;
   83622:	4a10      	ldr	r2, [pc, #64]	; (83664 <Taskman+0x1c0>)
   83624:	6053      	str	r3, [r2, #4]
   83626:	e75d      	b.n	834e4 <Taskman+0x40>
		cpu_irq_leave_critical();
   83628:	4b11      	ldr	r3, [pc, #68]	; (83670 <Taskman+0x1cc>)
   8362a:	4798      	blx	r3
		break;
   8362c:	e7a9      	b.n	83582 <Taskman+0xde>
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   8362e:	3501      	adds	r5, #1
   83630:	9508      	str	r5, [sp, #32]
   83632:	3410      	adds	r4, #16
   83634:	2d14      	cmp	r5, #20
   83636:	d0a4      	beq.n	83582 <Taskman+0xde>
			if(dTasks[k].delay)
   83638:	68e3      	ldr	r3, [r4, #12]
   8363a:	2b00      	cmp	r3, #0
   8363c:	d0f7      	beq.n	8362e <Taskman+0x18a>
				if(--dTasks[k].delay==0)
   8363e:	3b01      	subs	r3, #1
   83640:	60e3      	str	r3, [r4, #12]
   83642:	2b00      	cmp	r3, #0
   83644:	d1f3      	bne.n	8362e <Taskman+0x18a>
					PushTask(
   83646:	68a3      	ldr	r3, [r4, #8]
   83648:	6862      	ldr	r2, [r4, #4]
   8364a:	6821      	ldr	r1, [r4, #0]
   8364c:	9700      	str	r7, [sp, #0]
   8364e:	4630      	mov	r0, r6
   83650:	f7ff ff28 	bl	834a4 <Taskman>
   83654:	e7eb      	b.n	8362e <Taskman+0x18a>
		Error(ERROR_TASKMAN_SWITCH_BAD_SC,  (uint32_t)sc);
   83656:	200b      	movs	r0, #11
   83658:	4b11      	ldr	r3, [pc, #68]	; (836a0 <Taskman+0x1fc>)
   8365a:	4798      	blx	r3
   8365c:	e791      	b.n	83582 <Taskman+0xde>
   8365e:	bf00      	nop
   83660:	000809d1 	.word	0x000809d1
   83664:	200016f0 	.word	0x200016f0
   83668:	200016f0 	.word	0x200016f0
   8366c:	200015b0 	.word	0x200015b0
   83670:	00080a0d 	.word	0x00080a0d
   83674:	200016f8 	.word	0x200016f8
   83678:	400e0c00 	.word	0x400e0c00
   8367c:	00080999 	.word	0x00080999
   83680:	40080000 	.word	0x40080000
   83684:	0009c003 	.word	0x0009c003
   83688:	00080dfd 	.word	0x00080dfd
   8368c:	00080e25 	.word	0x00080e25
   83690:	00080e1d 	.word	0x00080e1d
   83694:	00080e15 	.word	0x00080e15
   83698:	e000e100 	.word	0xe000e100
   8369c:	00080e2d 	.word	0x00080e2d
   836a0:	000816a1 	.word	0x000816a1

000836a4 <TC0_Handler>:
{
   836a4:	b508      	push	{r3, lr}
	tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   836a6:	2100      	movs	r1, #0
   836a8:	4804      	ldr	r0, [pc, #16]	; (836bc <TC0_Handler+0x18>)
   836aa:	4b05      	ldr	r3, [pc, #20]	; (836c0 <TC0_Handler+0x1c>)
   836ac:	4798      	blx	r3
	Taskman(_TASKMAN_DELAYED_TASK_PROC);
   836ae:	2001      	movs	r0, #1
   836b0:	4b04      	ldr	r3, [pc, #16]	; (836c4 <TC0_Handler+0x20>)
   836b2:	4798      	blx	r3
	Shell(_SHELL_TIMER);
   836b4:	2003      	movs	r0, #3
   836b6:	4b04      	ldr	r3, [pc, #16]	; (836c8 <TC0_Handler+0x24>)
   836b8:	4798      	blx	r3
   836ba:	bd08      	pop	{r3, pc}
   836bc:	40080000 	.word	0x40080000
   836c0:	00080e35 	.word	0x00080e35
   836c4:	000834a5 	.word	0x000834a5
   836c8:	000820d5 	.word	0x000820d5

000836cc <mstrtokRestore>:
   836cc:	4b03      	ldr	r3, [pc, #12]	; (836dc <mstrtokRestore+0x10>)
   836ce:	681b      	ldr	r3, [r3, #0]
   836d0:	b113      	cbz	r3, 836d8 <mstrtokRestore+0xc>
   836d2:	4a03      	ldr	r2, [pc, #12]	; (836e0 <mstrtokRestore+0x14>)
   836d4:	7812      	ldrb	r2, [r2, #0]
   836d6:	701a      	strb	r2, [r3, #0]
   836d8:	4770      	bx	lr
   836da:	bf00      	nop
   836dc:	20001078 	.word	0x20001078
   836e0:	20001074 	.word	0x20001074

000836e4 <mstrtokReset>:
   836e4:	2300      	movs	r3, #0
   836e6:	4a02      	ldr	r2, [pc, #8]	; (836f0 <mstrtokReset+0xc>)
   836e8:	7013      	strb	r3, [r2, #0]
   836ea:	4a02      	ldr	r2, [pc, #8]	; (836f4 <mstrtokReset+0x10>)
   836ec:	6013      	str	r3, [r2, #0]
   836ee:	4770      	bx	lr
   836f0:	20001074 	.word	0x20001074
   836f4:	20001078 	.word	0x20001078

000836f8 <_IsSeparator>:
   836f8:	780b      	ldrb	r3, [r1, #0]
   836fa:	b13b      	cbz	r3, 8370c <_IsSeparator+0x14>
   836fc:	4298      	cmp	r0, r3
   836fe:	d005      	beq.n	8370c <_IsSeparator+0x14>
   83700:	f811 3f01 	ldrb.w	r3, [r1, #1]!
   83704:	b113      	cbz	r3, 8370c <_IsSeparator+0x14>
   83706:	4283      	cmp	r3, r0
   83708:	d1fa      	bne.n	83700 <_IsSeparator+0x8>
   8370a:	4603      	mov	r3, r0
   8370c:	4618      	mov	r0, r3
   8370e:	4770      	bx	lr

00083710 <mstrtok>:
   83710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83714:	2800      	cmp	r0, #0
   83716:	d02b      	beq.n	83770 <mstrtok+0x60>
   83718:	4a1d      	ldr	r2, [pc, #116]	; (83790 <mstrtok+0x80>)
   8371a:	6010      	str	r0, [r2, #0]
   8371c:	4b1c      	ldr	r3, [pc, #112]	; (83790 <mstrtok+0x80>)
   8371e:	681d      	ldr	r5, [r3, #0]
   83720:	782c      	ldrb	r4, [r5, #0]
   83722:	2c00      	cmp	r4, #0
   83724:	d030      	beq.n	83788 <mstrtok+0x78>
   83726:	4688      	mov	r8, r1
   83728:	4e1a      	ldr	r6, [pc, #104]	; (83794 <mstrtok+0x84>)
   8372a:	4f19      	ldr	r7, [pc, #100]	; (83790 <mstrtok+0x80>)
   8372c:	4641      	mov	r1, r8
   8372e:	4620      	mov	r0, r4
   83730:	47b0      	blx	r6
   83732:	b120      	cbz	r0, 8373e <mstrtok+0x2e>
   83734:	3501      	adds	r5, #1
   83736:	603d      	str	r5, [r7, #0]
   83738:	782c      	ldrb	r4, [r5, #0]
   8373a:	2c00      	cmp	r4, #0
   8373c:	d1f6      	bne.n	8372c <mstrtok+0x1c>
   8373e:	4b16      	ldr	r3, [pc, #88]	; (83798 <mstrtok+0x88>)
   83740:	601d      	str	r5, [r3, #0]
   83742:	782c      	ldrb	r4, [r5, #0]
   83744:	b1f4      	cbz	r4, 83784 <mstrtok+0x74>
   83746:	462e      	mov	r6, r5
   83748:	4f12      	ldr	r7, [pc, #72]	; (83794 <mstrtok+0x84>)
   8374a:	f8df 904c 	ldr.w	r9, [pc, #76]	; 83798 <mstrtok+0x88>
   8374e:	4641      	mov	r1, r8
   83750:	4620      	mov	r0, r4
   83752:	47b8      	blx	r7
   83754:	b928      	cbnz	r0, 83762 <mstrtok+0x52>
   83756:	3601      	adds	r6, #1
   83758:	f8c9 6000 	str.w	r6, [r9]
   8375c:	7834      	ldrb	r4, [r6, #0]
   8375e:	2c00      	cmp	r4, #0
   83760:	d1f5      	bne.n	8374e <mstrtok+0x3e>
   83762:	4b0e      	ldr	r3, [pc, #56]	; (8379c <mstrtok+0x8c>)
   83764:	701c      	strb	r4, [r3, #0]
   83766:	2300      	movs	r3, #0
   83768:	7033      	strb	r3, [r6, #0]
   8376a:	4628      	mov	r0, r5
   8376c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83770:	4b09      	ldr	r3, [pc, #36]	; (83798 <mstrtok+0x88>)
   83772:	681d      	ldr	r5, [r3, #0]
   83774:	2d00      	cmp	r5, #0
   83776:	d0f8      	beq.n	8376a <mstrtok+0x5a>
   83778:	4b08      	ldr	r3, [pc, #32]	; (8379c <mstrtok+0x8c>)
   8377a:	781b      	ldrb	r3, [r3, #0]
   8377c:	702b      	strb	r3, [r5, #0]
   8377e:	4b04      	ldr	r3, [pc, #16]	; (83790 <mstrtok+0x80>)
   83780:	601d      	str	r5, [r3, #0]
   83782:	e7cb      	b.n	8371c <mstrtok+0xc>
   83784:	462e      	mov	r6, r5
   83786:	e7ec      	b.n	83762 <mstrtok+0x52>
   83788:	4b03      	ldr	r3, [pc, #12]	; (83798 <mstrtok+0x88>)
   8378a:	601d      	str	r5, [r3, #0]
   8378c:	462e      	mov	r6, r5
   8378e:	e7e8      	b.n	83762 <mstrtok+0x52>
   83790:	2000107c 	.word	0x2000107c
   83794:	000836f9 	.word	0x000836f9
   83798:	20001078 	.word	0x20001078
   8379c:	20001074 	.word	0x20001074

000837a0 <main>:
#define SABLIER_NEW			100



int main (void)
{
   837a0:	b500      	push	{lr}
   837a2:	b083      	sub	sp, #12
   837a4:	b672      	cpsid	i
   837a6:	f3bf 8f5f 	dmb	sy
	//osc_enable(OSC_MAINCK_XTAL);
	/* Insert system clock initialization code here (sysclk_init()). */
	cpu_irq_disable();
   837aa:	4e10      	ldr	r6, [pc, #64]	; (837ec <main+0x4c>)
   837ac:	2400      	movs	r4, #0
   837ae:	7034      	strb	r4, [r6, #0]
	wdt_disable(WDT);
   837b0:	480f      	ldr	r0, [pc, #60]	; (837f0 <main+0x50>)
   837b2:	4b10      	ldr	r3, [pc, #64]	; (837f4 <main+0x54>)
   837b4:	4798      	blx	r3
	sysclk_init();
   837b6:	4b10      	ldr	r3, [pc, #64]	; (837f8 <main+0x58>)
   837b8:	4798      	blx	r3
	board_init();
   837ba:	4b10      	ldr	r3, [pc, #64]	; (837fc <main+0x5c>)
   837bc:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());

	/* Insert application code here, after the board has been initialized. */
	KernelNew();
   837be:	2064      	movs	r0, #100	; 0x64
   837c0:	4d0f      	ldr	r5, [pc, #60]	; (83800 <main+0x60>)
   837c2:	47a8      	blx	r5
   837c4:	2064      	movs	r0, #100	; 0x64
   837c6:	4b0f      	ldr	r3, [pc, #60]	; (83804 <main+0x64>)
   837c8:	4798      	blx	r3
	cpu_irq_enable();
   837ca:	2301      	movs	r3, #1
   837cc:	7033      	strb	r3, [r6, #0]
   837ce:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   837d2:	b662      	cpsie	i
	PushTask(Appli,APPLI_NEW,0,0);
   837d4:	9400      	str	r4, [sp, #0]
   837d6:	4623      	mov	r3, r4
   837d8:	2264      	movs	r2, #100	; 0x64
   837da:	490b      	ldr	r1, [pc, #44]	; (83808 <main+0x68>)
   837dc:	2066      	movs	r0, #102	; 0x66
   837de:	47a8      	blx	r5
	KernelRun();
   837e0:	2567      	movs	r5, #103	; 0x67
   837e2:	4c07      	ldr	r4, [pc, #28]	; (83800 <main+0x60>)
   837e4:	4628      	mov	r0, r5
   837e6:	47a0      	blx	r4
   837e8:	e7fc      	b.n	837e4 <main+0x44>
   837ea:	bf00      	nop
   837ec:	20000124 	.word	0x20000124
   837f0:	400e1250 	.word	0x400e1250
   837f4:	00080e99 	.word	0x00080e99
   837f8:	000805dd 	.word	0x000805dd
   837fc:	000809cd 	.word	0x000809cd
   83800:	000834a5 	.word	0x000834a5
   83804:	000820d5 	.word	0x000820d5
   83808:	00080129 	.word	0x00080129

0008380c <atoi>:
   8380c:	220a      	movs	r2, #10
   8380e:	2100      	movs	r1, #0
   83810:	f000 b998 	b.w	83b44 <strtol>

00083814 <__libc_init_array>:
   83814:	b570      	push	{r4, r5, r6, lr}
   83816:	4e0f      	ldr	r6, [pc, #60]	; (83854 <__libc_init_array+0x40>)
   83818:	4d0f      	ldr	r5, [pc, #60]	; (83858 <__libc_init_array+0x44>)
   8381a:	1b76      	subs	r6, r6, r5
   8381c:	10b6      	asrs	r6, r6, #2
   8381e:	bf18      	it	ne
   83820:	2400      	movne	r4, #0
   83822:	d005      	beq.n	83830 <__libc_init_array+0x1c>
   83824:	3401      	adds	r4, #1
   83826:	f855 3b04 	ldr.w	r3, [r5], #4
   8382a:	4798      	blx	r3
   8382c:	42a6      	cmp	r6, r4
   8382e:	d1f9      	bne.n	83824 <__libc_init_array+0x10>
   83830:	4e0a      	ldr	r6, [pc, #40]	; (8385c <__libc_init_array+0x48>)
   83832:	4d0b      	ldr	r5, [pc, #44]	; (83860 <__libc_init_array+0x4c>)
   83834:	f005 fd7c 	bl	89330 <_init>
   83838:	1b76      	subs	r6, r6, r5
   8383a:	10b6      	asrs	r6, r6, #2
   8383c:	bf18      	it	ne
   8383e:	2400      	movne	r4, #0
   83840:	d006      	beq.n	83850 <__libc_init_array+0x3c>
   83842:	3401      	adds	r4, #1
   83844:	f855 3b04 	ldr.w	r3, [r5], #4
   83848:	4798      	blx	r3
   8384a:	42a6      	cmp	r6, r4
   8384c:	d1f9      	bne.n	83842 <__libc_init_array+0x2e>
   8384e:	bd70      	pop	{r4, r5, r6, pc}
   83850:	bd70      	pop	{r4, r5, r6, pc}
   83852:	bf00      	nop
   83854:	0008933c 	.word	0x0008933c
   83858:	0008933c 	.word	0x0008933c
   8385c:	00089344 	.word	0x00089344
   83860:	0008933c 	.word	0x0008933c

00083864 <memset>:
   83864:	b470      	push	{r4, r5, r6}
   83866:	0786      	lsls	r6, r0, #30
   83868:	d046      	beq.n	838f8 <memset+0x94>
   8386a:	1e54      	subs	r4, r2, #1
   8386c:	2a00      	cmp	r2, #0
   8386e:	d041      	beq.n	838f4 <memset+0x90>
   83870:	b2ca      	uxtb	r2, r1
   83872:	4603      	mov	r3, r0
   83874:	e002      	b.n	8387c <memset+0x18>
   83876:	f114 34ff 	adds.w	r4, r4, #4294967295
   8387a:	d33b      	bcc.n	838f4 <memset+0x90>
   8387c:	f803 2b01 	strb.w	r2, [r3], #1
   83880:	079d      	lsls	r5, r3, #30
   83882:	d1f8      	bne.n	83876 <memset+0x12>
   83884:	2c03      	cmp	r4, #3
   83886:	d92e      	bls.n	838e6 <memset+0x82>
   83888:	b2cd      	uxtb	r5, r1
   8388a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8388e:	2c0f      	cmp	r4, #15
   83890:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   83894:	d919      	bls.n	838ca <memset+0x66>
   83896:	4626      	mov	r6, r4
   83898:	f103 0210 	add.w	r2, r3, #16
   8389c:	3e10      	subs	r6, #16
   8389e:	2e0f      	cmp	r6, #15
   838a0:	f842 5c10 	str.w	r5, [r2, #-16]
   838a4:	f842 5c0c 	str.w	r5, [r2, #-12]
   838a8:	f842 5c08 	str.w	r5, [r2, #-8]
   838ac:	f842 5c04 	str.w	r5, [r2, #-4]
   838b0:	f102 0210 	add.w	r2, r2, #16
   838b4:	d8f2      	bhi.n	8389c <memset+0x38>
   838b6:	f1a4 0210 	sub.w	r2, r4, #16
   838ba:	f022 020f 	bic.w	r2, r2, #15
   838be:	f004 040f 	and.w	r4, r4, #15
   838c2:	3210      	adds	r2, #16
   838c4:	2c03      	cmp	r4, #3
   838c6:	4413      	add	r3, r2
   838c8:	d90d      	bls.n	838e6 <memset+0x82>
   838ca:	461e      	mov	r6, r3
   838cc:	4622      	mov	r2, r4
   838ce:	3a04      	subs	r2, #4
   838d0:	2a03      	cmp	r2, #3
   838d2:	f846 5b04 	str.w	r5, [r6], #4
   838d6:	d8fa      	bhi.n	838ce <memset+0x6a>
   838d8:	1f22      	subs	r2, r4, #4
   838da:	f022 0203 	bic.w	r2, r2, #3
   838de:	3204      	adds	r2, #4
   838e0:	4413      	add	r3, r2
   838e2:	f004 0403 	and.w	r4, r4, #3
   838e6:	b12c      	cbz	r4, 838f4 <memset+0x90>
   838e8:	b2c9      	uxtb	r1, r1
   838ea:	441c      	add	r4, r3
   838ec:	f803 1b01 	strb.w	r1, [r3], #1
   838f0:	429c      	cmp	r4, r3
   838f2:	d1fb      	bne.n	838ec <memset+0x88>
   838f4:	bc70      	pop	{r4, r5, r6}
   838f6:	4770      	bx	lr
   838f8:	4614      	mov	r4, r2
   838fa:	4603      	mov	r3, r0
   838fc:	e7c2      	b.n	83884 <memset+0x20>
   838fe:	bf00      	nop

00083900 <sprintf>:
   83900:	b40e      	push	{r1, r2, r3}
   83902:	4601      	mov	r1, r0
   83904:	b5f0      	push	{r4, r5, r6, r7, lr}
   83906:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   8390a:	f44f 7702 	mov.w	r7, #520	; 0x208
   8390e:	f64f 76ff 	movw	r6, #65535	; 0xffff
   83912:	b09c      	sub	sp, #112	; 0x70
   83914:	ac21      	add	r4, sp, #132	; 0x84
   83916:	f854 2b04 	ldr.w	r2, [r4], #4
   8391a:	4b0b      	ldr	r3, [pc, #44]	; (83948 <sprintf+0x48>)
   8391c:	9102      	str	r1, [sp, #8]
   8391e:	9106      	str	r1, [sp, #24]
   83920:	6818      	ldr	r0, [r3, #0]
   83922:	a902      	add	r1, sp, #8
   83924:	4623      	mov	r3, r4
   83926:	9401      	str	r4, [sp, #4]
   83928:	f8ad 7014 	strh.w	r7, [sp, #20]
   8392c:	9504      	str	r5, [sp, #16]
   8392e:	9507      	str	r5, [sp, #28]
   83930:	f8ad 6016 	strh.w	r6, [sp, #22]
   83934:	f000 f91c 	bl	83b70 <_svfprintf_r>
   83938:	2200      	movs	r2, #0
   8393a:	9b02      	ldr	r3, [sp, #8]
   8393c:	701a      	strb	r2, [r3, #0]
   8393e:	b01c      	add	sp, #112	; 0x70
   83940:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83944:	b003      	add	sp, #12
   83946:	4770      	bx	lr
   83948:	2000062c 	.word	0x2000062c

0008394c <strlen>:
   8394c:	f020 0103 	bic.w	r1, r0, #3
   83950:	f010 0003 	ands.w	r0, r0, #3
   83954:	f1c0 0000 	rsb	r0, r0, #0
   83958:	f851 3b04 	ldr.w	r3, [r1], #4
   8395c:	f100 0c04 	add.w	ip, r0, #4
   83960:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83964:	f06f 0200 	mvn.w	r2, #0
   83968:	bf1c      	itt	ne
   8396a:	fa22 f20c 	lsrne.w	r2, r2, ip
   8396e:	4313      	orrne	r3, r2
   83970:	f04f 0c01 	mov.w	ip, #1
   83974:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83978:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   8397c:	eba3 020c 	sub.w	r2, r3, ip
   83980:	ea22 0203 	bic.w	r2, r2, r3
   83984:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83988:	bf04      	itt	eq
   8398a:	f851 3b04 	ldreq.w	r3, [r1], #4
   8398e:	3004      	addeq	r0, #4
   83990:	d0f4      	beq.n	8397c <strlen+0x30>
   83992:	f1c2 0100 	rsb	r1, r2, #0
   83996:	ea02 0201 	and.w	r2, r2, r1
   8399a:	fab2 f282 	clz	r2, r2
   8399e:	f1c2 021f 	rsb	r2, r2, #31
   839a2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   839a6:	4770      	bx	lr

000839a8 <strtok>:
   839a8:	4a02      	ldr	r2, [pc, #8]	; (839b4 <strtok+0xc>)
   839aa:	2301      	movs	r3, #1
   839ac:	6812      	ldr	r2, [r2, #0]
   839ae:	325c      	adds	r2, #92	; 0x5c
   839b0:	f000 b802 	b.w	839b8 <__strtok_r>
   839b4:	2000062c 	.word	0x2000062c

000839b8 <__strtok_r>:
   839b8:	b4f0      	push	{r4, r5, r6, r7}
   839ba:	b318      	cbz	r0, 83a04 <__strtok_r+0x4c>
   839bc:	4607      	mov	r7, r0
   839be:	460d      	mov	r5, r1
   839c0:	f817 6b01 	ldrb.w	r6, [r7], #1
   839c4:	e001      	b.n	839ca <__strtok_r+0x12>
   839c6:	42a6      	cmp	r6, r4
   839c8:	d017      	beq.n	839fa <__strtok_r+0x42>
   839ca:	f815 4b01 	ldrb.w	r4, [r5], #1
   839ce:	2c00      	cmp	r4, #0
   839d0:	d1f9      	bne.n	839c6 <__strtok_r+0xe>
   839d2:	b1e6      	cbz	r6, 83a0e <__strtok_r+0x56>
   839d4:	460c      	mov	r4, r1
   839d6:	f817 5b01 	ldrb.w	r5, [r7], #1
   839da:	e001      	b.n	839e0 <__strtok_r+0x28>
   839dc:	2b00      	cmp	r3, #0
   839de:	d0f9      	beq.n	839d4 <__strtok_r+0x1c>
   839e0:	f814 3b01 	ldrb.w	r3, [r4], #1
   839e4:	429d      	cmp	r5, r3
   839e6:	d1f9      	bne.n	839dc <__strtok_r+0x24>
   839e8:	b155      	cbz	r5, 83a00 <__strtok_r+0x48>
   839ea:	2300      	movs	r3, #0
   839ec:	f807 3c01 	strb.w	r3, [r7, #-1]
   839f0:	4606      	mov	r6, r0
   839f2:	6017      	str	r7, [r2, #0]
   839f4:	4630      	mov	r0, r6
   839f6:	bcf0      	pop	{r4, r5, r6, r7}
   839f8:	4770      	bx	lr
   839fa:	b153      	cbz	r3, 83a12 <__strtok_r+0x5a>
   839fc:	4638      	mov	r0, r7
   839fe:	e7dd      	b.n	839bc <__strtok_r+0x4>
   83a00:	462f      	mov	r7, r5
   83a02:	e7f5      	b.n	839f0 <__strtok_r+0x38>
   83a04:	6810      	ldr	r0, [r2, #0]
   83a06:	2800      	cmp	r0, #0
   83a08:	d1d8      	bne.n	839bc <__strtok_r+0x4>
   83a0a:	4606      	mov	r6, r0
   83a0c:	e7f2      	b.n	839f4 <__strtok_r+0x3c>
   83a0e:	6016      	str	r6, [r2, #0]
   83a10:	e7f0      	b.n	839f4 <__strtok_r+0x3c>
   83a12:	6017      	str	r7, [r2, #0]
   83a14:	4606      	mov	r6, r0
   83a16:	7003      	strb	r3, [r0, #0]
   83a18:	e7ec      	b.n	839f4 <__strtok_r+0x3c>
   83a1a:	bf00      	nop

00083a1c <_strtol_l.isra.0>:
   83a1c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83a20:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83a24:	460f      	mov	r7, r1
   83a26:	4680      	mov	r8, r0
   83a28:	4616      	mov	r6, r2
   83a2a:	461d      	mov	r5, r3
   83a2c:	468a      	mov	sl, r1
   83a2e:	e000      	b.n	83a32 <_strtol_l.isra.0+0x16>
   83a30:	46a2      	mov	sl, r4
   83a32:	4654      	mov	r4, sl
   83a34:	4648      	mov	r0, r9
   83a36:	f814 bb01 	ldrb.w	fp, [r4], #1
   83a3a:	f002 faf9 	bl	86030 <__locale_ctype_ptr_l>
   83a3e:	4458      	add	r0, fp
   83a40:	7842      	ldrb	r2, [r0, #1]
   83a42:	f012 0208 	ands.w	r2, r2, #8
   83a46:	d1f3      	bne.n	83a30 <_strtol_l.isra.0+0x14>
   83a48:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   83a4c:	d04f      	beq.n	83aee <_strtol_l.isra.0+0xd2>
   83a4e:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   83a52:	bf04      	itt	eq
   83a54:	f894 b000 	ldrbeq.w	fp, [r4]
   83a58:	f10a 0402 	addeq.w	r4, sl, #2
   83a5c:	b11d      	cbz	r5, 83a66 <_strtol_l.isra.0+0x4a>
   83a5e:	2d10      	cmp	r5, #16
   83a60:	d056      	beq.n	83b10 <_strtol_l.isra.0+0xf4>
   83a62:	46ac      	mov	ip, r5
   83a64:	e004      	b.n	83a70 <_strtol_l.isra.0+0x54>
   83a66:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   83a6a:	d060      	beq.n	83b2e <_strtol_l.isra.0+0x112>
   83a6c:	250a      	movs	r5, #10
   83a6e:	46ac      	mov	ip, r5
   83a70:	2a00      	cmp	r2, #0
   83a72:	bf0c      	ite	eq
   83a74:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   83a78:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   83a7c:	2100      	movs	r1, #0
   83a7e:	fbb9 fefc 	udiv	lr, r9, ip
   83a82:	4608      	mov	r0, r1
   83a84:	fb0c 9a1e 	mls	sl, ip, lr, r9
   83a88:	e005      	b.n	83a96 <_strtol_l.isra.0+0x7a>
   83a8a:	d029      	beq.n	83ae0 <_strtol_l.isra.0+0xc4>
   83a8c:	2101      	movs	r1, #1
   83a8e:	fb0c 3000 	mla	r0, ip, r0, r3
   83a92:	f814 bb01 	ldrb.w	fp, [r4], #1
   83a96:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   83a9a:	2b09      	cmp	r3, #9
   83a9c:	d905      	bls.n	83aaa <_strtol_l.isra.0+0x8e>
   83a9e:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   83aa2:	2b19      	cmp	r3, #25
   83aa4:	d80b      	bhi.n	83abe <_strtol_l.isra.0+0xa2>
   83aa6:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   83aaa:	429d      	cmp	r5, r3
   83aac:	dd0f      	ble.n	83ace <_strtol_l.isra.0+0xb2>
   83aae:	f1b1 3fff 	cmp.w	r1, #4294967295
   83ab2:	d0ee      	beq.n	83a92 <_strtol_l.isra.0+0x76>
   83ab4:	4586      	cmp	lr, r0
   83ab6:	d2e8      	bcs.n	83a8a <_strtol_l.isra.0+0x6e>
   83ab8:	f04f 31ff 	mov.w	r1, #4294967295
   83abc:	e7e9      	b.n	83a92 <_strtol_l.isra.0+0x76>
   83abe:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   83ac2:	2b19      	cmp	r3, #25
   83ac4:	d803      	bhi.n	83ace <_strtol_l.isra.0+0xb2>
   83ac6:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   83aca:	429d      	cmp	r5, r3
   83acc:	dcef      	bgt.n	83aae <_strtol_l.isra.0+0x92>
   83ace:	1c4b      	adds	r3, r1, #1
   83ad0:	d013      	beq.n	83afa <_strtol_l.isra.0+0xde>
   83ad2:	b102      	cbz	r2, 83ad6 <_strtol_l.isra.0+0xba>
   83ad4:	4240      	negs	r0, r0
   83ad6:	b146      	cbz	r6, 83aea <_strtol_l.isra.0+0xce>
   83ad8:	b9c1      	cbnz	r1, 83b0c <_strtol_l.isra.0+0xf0>
   83ada:	6037      	str	r7, [r6, #0]
   83adc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ae0:	459a      	cmp	sl, r3
   83ae2:	dad3      	bge.n	83a8c <_strtol_l.isra.0+0x70>
   83ae4:	f04f 31ff 	mov.w	r1, #4294967295
   83ae8:	e7d3      	b.n	83a92 <_strtol_l.isra.0+0x76>
   83aea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83aee:	f894 b000 	ldrb.w	fp, [r4]
   83af2:	2201      	movs	r2, #1
   83af4:	f10a 0402 	add.w	r4, sl, #2
   83af8:	e7b0      	b.n	83a5c <_strtol_l.isra.0+0x40>
   83afa:	2322      	movs	r3, #34	; 0x22
   83afc:	f8c8 3000 	str.w	r3, [r8]
   83b00:	b1ee      	cbz	r6, 83b3e <_strtol_l.isra.0+0x122>
   83b02:	1e67      	subs	r7, r4, #1
   83b04:	4648      	mov	r0, r9
   83b06:	6037      	str	r7, [r6, #0]
   83b08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83b0c:	4681      	mov	r9, r0
   83b0e:	e7f8      	b.n	83b02 <_strtol_l.isra.0+0xe6>
   83b10:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   83b14:	d1a5      	bne.n	83a62 <_strtol_l.isra.0+0x46>
   83b16:	7823      	ldrb	r3, [r4, #0]
   83b18:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   83b1c:	2b58      	cmp	r3, #88	; 0x58
   83b1e:	d1a0      	bne.n	83a62 <_strtol_l.isra.0+0x46>
   83b20:	f04f 0c10 	mov.w	ip, #16
   83b24:	f894 b001 	ldrb.w	fp, [r4, #1]
   83b28:	4665      	mov	r5, ip
   83b2a:	3402      	adds	r4, #2
   83b2c:	e7a0      	b.n	83a70 <_strtol_l.isra.0+0x54>
   83b2e:	7823      	ldrb	r3, [r4, #0]
   83b30:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   83b34:	2b58      	cmp	r3, #88	; 0x58
   83b36:	d0f3      	beq.n	83b20 <_strtol_l.isra.0+0x104>
   83b38:	2508      	movs	r5, #8
   83b3a:	46ac      	mov	ip, r5
   83b3c:	e798      	b.n	83a70 <_strtol_l.isra.0+0x54>
   83b3e:	4648      	mov	r0, r9
   83b40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00083b44 <strtol>:
   83b44:	4b08      	ldr	r3, [pc, #32]	; (83b68 <strtol+0x24>)
   83b46:	b570      	push	{r4, r5, r6, lr}
   83b48:	681d      	ldr	r5, [r3, #0]
   83b4a:	4e08      	ldr	r6, [pc, #32]	; (83b6c <strtol+0x28>)
   83b4c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   83b4e:	b082      	sub	sp, #8
   83b50:	2c00      	cmp	r4, #0
   83b52:	bf08      	it	eq
   83b54:	4634      	moveq	r4, r6
   83b56:	4613      	mov	r3, r2
   83b58:	9400      	str	r4, [sp, #0]
   83b5a:	460a      	mov	r2, r1
   83b5c:	4601      	mov	r1, r0
   83b5e:	4628      	mov	r0, r5
   83b60:	f7ff ff5c 	bl	83a1c <_strtol_l.isra.0>
   83b64:	b002      	add	sp, #8
   83b66:	bd70      	pop	{r4, r5, r6, pc}
   83b68:	2000062c 	.word	0x2000062c
   83b6c:	20000a5c 	.word	0x20000a5c

00083b70 <_svfprintf_r>:
   83b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b74:	b0c3      	sub	sp, #268	; 0x10c
   83b76:	460c      	mov	r4, r1
   83b78:	910b      	str	r1, [sp, #44]	; 0x2c
   83b7a:	4692      	mov	sl, r2
   83b7c:	930f      	str	r3, [sp, #60]	; 0x3c
   83b7e:	900c      	str	r0, [sp, #48]	; 0x30
   83b80:	f002 fa5a 	bl	86038 <_localeconv_r>
   83b84:	6803      	ldr	r3, [r0, #0]
   83b86:	4618      	mov	r0, r3
   83b88:	931a      	str	r3, [sp, #104]	; 0x68
   83b8a:	f7ff fedf 	bl	8394c <strlen>
   83b8e:	89a3      	ldrh	r3, [r4, #12]
   83b90:	9019      	str	r0, [sp, #100]	; 0x64
   83b92:	0619      	lsls	r1, r3, #24
   83b94:	d503      	bpl.n	83b9e <_svfprintf_r+0x2e>
   83b96:	6923      	ldr	r3, [r4, #16]
   83b98:	2b00      	cmp	r3, #0
   83b9a:	f001 8035 	beq.w	84c08 <_svfprintf_r+0x1098>
   83b9e:	2300      	movs	r3, #0
   83ba0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   83ba4:	46c8      	mov	r8, r9
   83ba6:	9315      	str	r3, [sp, #84]	; 0x54
   83ba8:	9313      	str	r3, [sp, #76]	; 0x4c
   83baa:	9314      	str	r3, [sp, #80]	; 0x50
   83bac:	9318      	str	r3, [sp, #96]	; 0x60
   83bae:	931b      	str	r3, [sp, #108]	; 0x6c
   83bb0:	9309      	str	r3, [sp, #36]	; 0x24
   83bb2:	9316      	str	r3, [sp, #88]	; 0x58
   83bb4:	9317      	str	r3, [sp, #92]	; 0x5c
   83bb6:	9327      	str	r3, [sp, #156]	; 0x9c
   83bb8:	9326      	str	r3, [sp, #152]	; 0x98
   83bba:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   83bbe:	f89a 3000 	ldrb.w	r3, [sl]
   83bc2:	4654      	mov	r4, sl
   83bc4:	b1eb      	cbz	r3, 83c02 <_svfprintf_r+0x92>
   83bc6:	2b25      	cmp	r3, #37	; 0x25
   83bc8:	d102      	bne.n	83bd0 <_svfprintf_r+0x60>
   83bca:	e01a      	b.n	83c02 <_svfprintf_r+0x92>
   83bcc:	2b25      	cmp	r3, #37	; 0x25
   83bce:	d003      	beq.n	83bd8 <_svfprintf_r+0x68>
   83bd0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   83bd4:	2b00      	cmp	r3, #0
   83bd6:	d1f9      	bne.n	83bcc <_svfprintf_r+0x5c>
   83bd8:	eba4 050a 	sub.w	r5, r4, sl
   83bdc:	b18d      	cbz	r5, 83c02 <_svfprintf_r+0x92>
   83bde:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83be0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83be2:	3301      	adds	r3, #1
   83be4:	442a      	add	r2, r5
   83be6:	2b07      	cmp	r3, #7
   83be8:	f8c8 a000 	str.w	sl, [r8]
   83bec:	f8c8 5004 	str.w	r5, [r8, #4]
   83bf0:	9227      	str	r2, [sp, #156]	; 0x9c
   83bf2:	9326      	str	r3, [sp, #152]	; 0x98
   83bf4:	f300 808a 	bgt.w	83d0c <_svfprintf_r+0x19c>
   83bf8:	f108 0808 	add.w	r8, r8, #8
   83bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83bfe:	442b      	add	r3, r5
   83c00:	9309      	str	r3, [sp, #36]	; 0x24
   83c02:	7823      	ldrb	r3, [r4, #0]
   83c04:	2b00      	cmp	r3, #0
   83c06:	f000 8089 	beq.w	83d1c <_svfprintf_r+0x1ac>
   83c0a:	2300      	movs	r3, #0
   83c0c:	f04f 30ff 	mov.w	r0, #4294967295
   83c10:	461a      	mov	r2, r3
   83c12:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83c16:	4619      	mov	r1, r3
   83c18:	930d      	str	r3, [sp, #52]	; 0x34
   83c1a:	469b      	mov	fp, r3
   83c1c:	7863      	ldrb	r3, [r4, #1]
   83c1e:	f104 0a01 	add.w	sl, r4, #1
   83c22:	900a      	str	r0, [sp, #40]	; 0x28
   83c24:	f10a 0a01 	add.w	sl, sl, #1
   83c28:	f1a3 0020 	sub.w	r0, r3, #32
   83c2c:	2858      	cmp	r0, #88	; 0x58
   83c2e:	f200 83b7 	bhi.w	843a0 <_svfprintf_r+0x830>
   83c32:	e8df f010 	tbh	[pc, r0, lsl #1]
   83c36:	034c      	.short	0x034c
   83c38:	03b503b5 	.word	0x03b503b5
   83c3c:	03b50354 	.word	0x03b50354
   83c40:	03b503b5 	.word	0x03b503b5
   83c44:	03b503b5 	.word	0x03b503b5
   83c48:	005903b5 	.word	0x005903b5
   83c4c:	03b50359 	.word	0x03b50359
   83c50:	02140066 	.word	0x02140066
   83c54:	022f03b5 	.word	0x022f03b5
   83c58:	03a503a5 	.word	0x03a503a5
   83c5c:	03a503a5 	.word	0x03a503a5
   83c60:	03a503a5 	.word	0x03a503a5
   83c64:	03a503a5 	.word	0x03a503a5
   83c68:	03b503a5 	.word	0x03b503a5
   83c6c:	03b503b5 	.word	0x03b503b5
   83c70:	03b503b5 	.word	0x03b503b5
   83c74:	03b503b5 	.word	0x03b503b5
   83c78:	03b503b5 	.word	0x03b503b5
   83c7c:	028b03b5 	.word	0x028b03b5
   83c80:	03b502d3 	.word	0x03b502d3
   83c84:	03b502d3 	.word	0x03b502d3
   83c88:	03b503b5 	.word	0x03b503b5
   83c8c:	031b03b5 	.word	0x031b03b5
   83c90:	03b503b5 	.word	0x03b503b5
   83c94:	03b50320 	.word	0x03b50320
   83c98:	03b503b5 	.word	0x03b503b5
   83c9c:	03b503b5 	.word	0x03b503b5
   83ca0:	03b50234 	.word	0x03b50234
   83ca4:	024b03b5 	.word	0x024b03b5
   83ca8:	03b503b5 	.word	0x03b503b5
   83cac:	03b503b5 	.word	0x03b503b5
   83cb0:	03b503b5 	.word	0x03b503b5
   83cb4:	03b503b5 	.word	0x03b503b5
   83cb8:	03b503b5 	.word	0x03b503b5
   83cbc:	039e0276 	.word	0x039e0276
   83cc0:	02d302d3 	.word	0x02d302d3
   83cc4:	036302d3 	.word	0x036302d3
   83cc8:	03b5039e 	.word	0x03b5039e
   83ccc:	036803b5 	.word	0x036803b5
   83cd0:	037503b5 	.word	0x037503b5
   83cd4:	038c01dd 	.word	0x038c01dd
   83cd8:	03b5035e 	.word	0x03b5035e
   83cdc:	03b501f2 	.word	0x03b501f2
   83ce0:	03b50087 	.word	0x03b50087
   83ce4:	033203b5 	.word	0x033203b5
   83ce8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83cea:	6823      	ldr	r3, [r4, #0]
   83cec:	4618      	mov	r0, r3
   83cee:	930d      	str	r3, [sp, #52]	; 0x34
   83cf0:	4623      	mov	r3, r4
   83cf2:	2800      	cmp	r0, #0
   83cf4:	f103 0304 	add.w	r3, r3, #4
   83cf8:	930f      	str	r3, [sp, #60]	; 0x3c
   83cfa:	da04      	bge.n	83d06 <_svfprintf_r+0x196>
   83cfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83cfe:	425b      	negs	r3, r3
   83d00:	930d      	str	r3, [sp, #52]	; 0x34
   83d02:	f04b 0b04 	orr.w	fp, fp, #4
   83d06:	f89a 3000 	ldrb.w	r3, [sl]
   83d0a:	e78b      	b.n	83c24 <_svfprintf_r+0xb4>
   83d0c:	aa25      	add	r2, sp, #148	; 0x94
   83d0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d10:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d12:	f003 f831 	bl	86d78 <__ssprint_r>
   83d16:	b940      	cbnz	r0, 83d2a <_svfprintf_r+0x1ba>
   83d18:	46c8      	mov	r8, r9
   83d1a:	e76f      	b.n	83bfc <_svfprintf_r+0x8c>
   83d1c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   83d1e:	b123      	cbz	r3, 83d2a <_svfprintf_r+0x1ba>
   83d20:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d22:	aa25      	add	r2, sp, #148	; 0x94
   83d24:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d26:	f003 f827 	bl	86d78 <__ssprint_r>
   83d2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83d2c:	899b      	ldrh	r3, [r3, #12]
   83d2e:	f013 0f40 	tst.w	r3, #64	; 0x40
   83d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83d34:	bf18      	it	ne
   83d36:	f04f 33ff 	movne.w	r3, #4294967295
   83d3a:	9309      	str	r3, [sp, #36]	; 0x24
   83d3c:	9809      	ldr	r0, [sp, #36]	; 0x24
   83d3e:	b043      	add	sp, #268	; 0x10c
   83d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d44:	f01b 0f20 	tst.w	fp, #32
   83d48:	9311      	str	r3, [sp, #68]	; 0x44
   83d4a:	f040 81af 	bne.w	840ac <_svfprintf_r+0x53c>
   83d4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83d50:	f01b 0f10 	tst.w	fp, #16
   83d54:	4613      	mov	r3, r2
   83d56:	f040 859a 	bne.w	8488e <_svfprintf_r+0xd1e>
   83d5a:	f01b 0f40 	tst.w	fp, #64	; 0x40
   83d5e:	f000 8596 	beq.w	8488e <_svfprintf_r+0xd1e>
   83d62:	2500      	movs	r5, #0
   83d64:	2301      	movs	r3, #1
   83d66:	8814      	ldrh	r4, [r2, #0]
   83d68:	3204      	adds	r2, #4
   83d6a:	920f      	str	r2, [sp, #60]	; 0x3c
   83d6c:	2200      	movs	r2, #0
   83d6e:	4617      	mov	r7, r2
   83d70:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   83d74:	990a      	ldr	r1, [sp, #40]	; 0x28
   83d76:	1c4a      	adds	r2, r1, #1
   83d78:	f000 8210 	beq.w	8419c <_svfprintf_r+0x62c>
   83d7c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   83d80:	9207      	str	r2, [sp, #28]
   83d82:	ea54 0205 	orrs.w	r2, r4, r5
   83d86:	f040 820f 	bne.w	841a8 <_svfprintf_r+0x638>
   83d8a:	2900      	cmp	r1, #0
   83d8c:	f040 8431 	bne.w	845f2 <_svfprintf_r+0xa82>
   83d90:	2b00      	cmp	r3, #0
   83d92:	f040 8539 	bne.w	84808 <_svfprintf_r+0xc98>
   83d96:	f01b 0301 	ands.w	r3, fp, #1
   83d9a:	930e      	str	r3, [sp, #56]	; 0x38
   83d9c:	f000 8662 	beq.w	84a64 <_svfprintf_r+0xef4>
   83da0:	2330      	movs	r3, #48	; 0x30
   83da2:	ae42      	add	r6, sp, #264	; 0x108
   83da4:	f806 3d41 	strb.w	r3, [r6, #-65]!
   83da8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83daa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83dac:	4293      	cmp	r3, r2
   83dae:	bfb8      	it	lt
   83db0:	4613      	movlt	r3, r2
   83db2:	9308      	str	r3, [sp, #32]
   83db4:	2300      	movs	r3, #0
   83db6:	9312      	str	r3, [sp, #72]	; 0x48
   83db8:	b117      	cbz	r7, 83dc0 <_svfprintf_r+0x250>
   83dba:	9b08      	ldr	r3, [sp, #32]
   83dbc:	3301      	adds	r3, #1
   83dbe:	9308      	str	r3, [sp, #32]
   83dc0:	9b07      	ldr	r3, [sp, #28]
   83dc2:	f013 0302 	ands.w	r3, r3, #2
   83dc6:	9310      	str	r3, [sp, #64]	; 0x40
   83dc8:	d002      	beq.n	83dd0 <_svfprintf_r+0x260>
   83dca:	9b08      	ldr	r3, [sp, #32]
   83dcc:	3302      	adds	r3, #2
   83dce:	9308      	str	r3, [sp, #32]
   83dd0:	9b07      	ldr	r3, [sp, #28]
   83dd2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   83dd6:	f040 8310 	bne.w	843fa <_svfprintf_r+0x88a>
   83dda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83ddc:	9a08      	ldr	r2, [sp, #32]
   83dde:	eba3 0b02 	sub.w	fp, r3, r2
   83de2:	f1bb 0f00 	cmp.w	fp, #0
   83de6:	f340 8308 	ble.w	843fa <_svfprintf_r+0x88a>
   83dea:	f1bb 0f10 	cmp.w	fp, #16
   83dee:	f340 87b2 	ble.w	84d56 <_svfprintf_r+0x11e6>
   83df2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83df4:	4643      	mov	r3, r8
   83df6:	4621      	mov	r1, r4
   83df8:	46a8      	mov	r8, r5
   83dfa:	2710      	movs	r7, #16
   83dfc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83dfe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83e00:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83e02:	e006      	b.n	83e12 <_svfprintf_r+0x2a2>
   83e04:	f1ab 0b10 	sub.w	fp, fp, #16
   83e08:	f1bb 0f10 	cmp.w	fp, #16
   83e0c:	f103 0308 	add.w	r3, r3, #8
   83e10:	dd18      	ble.n	83e44 <_svfprintf_r+0x2d4>
   83e12:	3201      	adds	r2, #1
   83e14:	48ab      	ldr	r0, [pc, #684]	; (840c4 <_svfprintf_r+0x554>)
   83e16:	3110      	adds	r1, #16
   83e18:	2a07      	cmp	r2, #7
   83e1a:	9127      	str	r1, [sp, #156]	; 0x9c
   83e1c:	9226      	str	r2, [sp, #152]	; 0x98
   83e1e:	e883 0081 	stmia.w	r3, {r0, r7}
   83e22:	ddef      	ble.n	83e04 <_svfprintf_r+0x294>
   83e24:	aa25      	add	r2, sp, #148	; 0x94
   83e26:	4629      	mov	r1, r5
   83e28:	4620      	mov	r0, r4
   83e2a:	f002 ffa5 	bl	86d78 <__ssprint_r>
   83e2e:	2800      	cmp	r0, #0
   83e30:	f47f af7b 	bne.w	83d2a <_svfprintf_r+0x1ba>
   83e34:	f1ab 0b10 	sub.w	fp, fp, #16
   83e38:	f1bb 0f10 	cmp.w	fp, #16
   83e3c:	464b      	mov	r3, r9
   83e3e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83e40:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83e42:	dce6      	bgt.n	83e12 <_svfprintf_r+0x2a2>
   83e44:	4645      	mov	r5, r8
   83e46:	460c      	mov	r4, r1
   83e48:	4698      	mov	r8, r3
   83e4a:	3201      	adds	r2, #1
   83e4c:	4b9d      	ldr	r3, [pc, #628]	; (840c4 <_svfprintf_r+0x554>)
   83e4e:	445c      	add	r4, fp
   83e50:	2a07      	cmp	r2, #7
   83e52:	9427      	str	r4, [sp, #156]	; 0x9c
   83e54:	9226      	str	r2, [sp, #152]	; 0x98
   83e56:	e888 0808 	stmia.w	r8, {r3, fp}
   83e5a:	f300 82c3 	bgt.w	843e4 <_svfprintf_r+0x874>
   83e5e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83e62:	f108 0808 	add.w	r8, r8, #8
   83e66:	b187      	cbz	r7, 83e8a <_svfprintf_r+0x31a>
   83e68:	2101      	movs	r1, #1
   83e6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83e6c:	440c      	add	r4, r1
   83e6e:	440b      	add	r3, r1
   83e70:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   83e74:	2b07      	cmp	r3, #7
   83e76:	9427      	str	r4, [sp, #156]	; 0x9c
   83e78:	9326      	str	r3, [sp, #152]	; 0x98
   83e7a:	f8c8 1004 	str.w	r1, [r8, #4]
   83e7e:	f8c8 2000 	str.w	r2, [r8]
   83e82:	f300 83cd 	bgt.w	84620 <_svfprintf_r+0xab0>
   83e86:	f108 0808 	add.w	r8, r8, #8
   83e8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   83e8c:	b17b      	cbz	r3, 83eae <_svfprintf_r+0x33e>
   83e8e:	2102      	movs	r1, #2
   83e90:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83e92:	440c      	add	r4, r1
   83e94:	3301      	adds	r3, #1
   83e96:	aa1e      	add	r2, sp, #120	; 0x78
   83e98:	2b07      	cmp	r3, #7
   83e9a:	9427      	str	r4, [sp, #156]	; 0x9c
   83e9c:	9326      	str	r3, [sp, #152]	; 0x98
   83e9e:	f8c8 1004 	str.w	r1, [r8, #4]
   83ea2:	f8c8 2000 	str.w	r2, [r8]
   83ea6:	f300 8411 	bgt.w	846cc <_svfprintf_r+0xb5c>
   83eaa:	f108 0808 	add.w	r8, r8, #8
   83eae:	2d80      	cmp	r5, #128	; 0x80
   83eb0:	f000 8304 	beq.w	844bc <_svfprintf_r+0x94c>
   83eb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83eb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83eb8:	1a9f      	subs	r7, r3, r2
   83eba:	2f00      	cmp	r7, #0
   83ebc:	dd37      	ble.n	83f2e <_svfprintf_r+0x3be>
   83ebe:	2f10      	cmp	r7, #16
   83ec0:	f340 8679 	ble.w	84bb6 <_svfprintf_r+0x1046>
   83ec4:	4d80      	ldr	r5, [pc, #512]	; (840c8 <_svfprintf_r+0x558>)
   83ec6:	4642      	mov	r2, r8
   83ec8:	4621      	mov	r1, r4
   83eca:	46b0      	mov	r8, r6
   83ecc:	f04f 0b10 	mov.w	fp, #16
   83ed0:	462e      	mov	r6, r5
   83ed2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83ed4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83ed6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83ed8:	e004      	b.n	83ee4 <_svfprintf_r+0x374>
   83eda:	3f10      	subs	r7, #16
   83edc:	2f10      	cmp	r7, #16
   83ede:	f102 0208 	add.w	r2, r2, #8
   83ee2:	dd15      	ble.n	83f10 <_svfprintf_r+0x3a0>
   83ee4:	3301      	adds	r3, #1
   83ee6:	3110      	adds	r1, #16
   83ee8:	2b07      	cmp	r3, #7
   83eea:	9127      	str	r1, [sp, #156]	; 0x9c
   83eec:	9326      	str	r3, [sp, #152]	; 0x98
   83eee:	e882 0840 	stmia.w	r2, {r6, fp}
   83ef2:	ddf2      	ble.n	83eda <_svfprintf_r+0x36a>
   83ef4:	aa25      	add	r2, sp, #148	; 0x94
   83ef6:	4629      	mov	r1, r5
   83ef8:	4620      	mov	r0, r4
   83efa:	f002 ff3d 	bl	86d78 <__ssprint_r>
   83efe:	2800      	cmp	r0, #0
   83f00:	f47f af13 	bne.w	83d2a <_svfprintf_r+0x1ba>
   83f04:	3f10      	subs	r7, #16
   83f06:	2f10      	cmp	r7, #16
   83f08:	464a      	mov	r2, r9
   83f0a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83f0e:	dce9      	bgt.n	83ee4 <_svfprintf_r+0x374>
   83f10:	4635      	mov	r5, r6
   83f12:	460c      	mov	r4, r1
   83f14:	4646      	mov	r6, r8
   83f16:	4690      	mov	r8, r2
   83f18:	3301      	adds	r3, #1
   83f1a:	443c      	add	r4, r7
   83f1c:	2b07      	cmp	r3, #7
   83f1e:	9427      	str	r4, [sp, #156]	; 0x9c
   83f20:	9326      	str	r3, [sp, #152]	; 0x98
   83f22:	e888 00a0 	stmia.w	r8, {r5, r7}
   83f26:	f300 8370 	bgt.w	8460a <_svfprintf_r+0xa9a>
   83f2a:	f108 0808 	add.w	r8, r8, #8
   83f2e:	9b07      	ldr	r3, [sp, #28]
   83f30:	05df      	lsls	r7, r3, #23
   83f32:	f100 8264 	bmi.w	843fe <_svfprintf_r+0x88e>
   83f36:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83f38:	990e      	ldr	r1, [sp, #56]	; 0x38
   83f3a:	3301      	adds	r3, #1
   83f3c:	440c      	add	r4, r1
   83f3e:	2b07      	cmp	r3, #7
   83f40:	9427      	str	r4, [sp, #156]	; 0x9c
   83f42:	f8c8 6000 	str.w	r6, [r8]
   83f46:	f8c8 1004 	str.w	r1, [r8, #4]
   83f4a:	9326      	str	r3, [sp, #152]	; 0x98
   83f4c:	f300 83b3 	bgt.w	846b6 <_svfprintf_r+0xb46>
   83f50:	f108 0808 	add.w	r8, r8, #8
   83f54:	9b07      	ldr	r3, [sp, #28]
   83f56:	075b      	lsls	r3, r3, #29
   83f58:	d53b      	bpl.n	83fd2 <_svfprintf_r+0x462>
   83f5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83f5c:	9a08      	ldr	r2, [sp, #32]
   83f5e:	1a9d      	subs	r5, r3, r2
   83f60:	2d00      	cmp	r5, #0
   83f62:	dd36      	ble.n	83fd2 <_svfprintf_r+0x462>
   83f64:	2d10      	cmp	r5, #16
   83f66:	f340 8721 	ble.w	84dac <_svfprintf_r+0x123c>
   83f6a:	2610      	movs	r6, #16
   83f6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83f6e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83f70:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   83f74:	e004      	b.n	83f80 <_svfprintf_r+0x410>
   83f76:	3d10      	subs	r5, #16
   83f78:	2d10      	cmp	r5, #16
   83f7a:	f108 0808 	add.w	r8, r8, #8
   83f7e:	dd16      	ble.n	83fae <_svfprintf_r+0x43e>
   83f80:	3301      	adds	r3, #1
   83f82:	4a50      	ldr	r2, [pc, #320]	; (840c4 <_svfprintf_r+0x554>)
   83f84:	3410      	adds	r4, #16
   83f86:	2b07      	cmp	r3, #7
   83f88:	9427      	str	r4, [sp, #156]	; 0x9c
   83f8a:	9326      	str	r3, [sp, #152]	; 0x98
   83f8c:	e888 0044 	stmia.w	r8, {r2, r6}
   83f90:	ddf1      	ble.n	83f76 <_svfprintf_r+0x406>
   83f92:	aa25      	add	r2, sp, #148	; 0x94
   83f94:	4659      	mov	r1, fp
   83f96:	4638      	mov	r0, r7
   83f98:	f002 feee 	bl	86d78 <__ssprint_r>
   83f9c:	2800      	cmp	r0, #0
   83f9e:	f47f aec4 	bne.w	83d2a <_svfprintf_r+0x1ba>
   83fa2:	3d10      	subs	r5, #16
   83fa4:	2d10      	cmp	r5, #16
   83fa6:	46c8      	mov	r8, r9
   83fa8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83faa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83fac:	dce8      	bgt.n	83f80 <_svfprintf_r+0x410>
   83fae:	3301      	adds	r3, #1
   83fb0:	4a44      	ldr	r2, [pc, #272]	; (840c4 <_svfprintf_r+0x554>)
   83fb2:	442c      	add	r4, r5
   83fb4:	2b07      	cmp	r3, #7
   83fb6:	9427      	str	r4, [sp, #156]	; 0x9c
   83fb8:	9326      	str	r3, [sp, #152]	; 0x98
   83fba:	e888 0024 	stmia.w	r8, {r2, r5}
   83fbe:	dd08      	ble.n	83fd2 <_svfprintf_r+0x462>
   83fc0:	aa25      	add	r2, sp, #148	; 0x94
   83fc2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83fc4:	980c      	ldr	r0, [sp, #48]	; 0x30
   83fc6:	f002 fed7 	bl	86d78 <__ssprint_r>
   83fca:	2800      	cmp	r0, #0
   83fcc:	f47f aead 	bne.w	83d2a <_svfprintf_r+0x1ba>
   83fd0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83fd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83fd6:	9908      	ldr	r1, [sp, #32]
   83fd8:	428a      	cmp	r2, r1
   83fda:	bfac      	ite	ge
   83fdc:	189b      	addge	r3, r3, r2
   83fde:	185b      	addlt	r3, r3, r1
   83fe0:	9309      	str	r3, [sp, #36]	; 0x24
   83fe2:	2c00      	cmp	r4, #0
   83fe4:	f040 82fb 	bne.w	845de <_svfprintf_r+0xa6e>
   83fe8:	2300      	movs	r3, #0
   83fea:	46c8      	mov	r8, r9
   83fec:	9326      	str	r3, [sp, #152]	; 0x98
   83fee:	e5e6      	b.n	83bbe <_svfprintf_r+0x4e>
   83ff0:	9311      	str	r3, [sp, #68]	; 0x44
   83ff2:	f01b 0320 	ands.w	r3, fp, #32
   83ff6:	f040 8145 	bne.w	84284 <_svfprintf_r+0x714>
   83ffa:	f01b 0210 	ands.w	r2, fp, #16
   83ffe:	f040 8466 	bne.w	848ce <_svfprintf_r+0xd5e>
   84002:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   84006:	f000 8462 	beq.w	848ce <_svfprintf_r+0xd5e>
   8400a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8400c:	4613      	mov	r3, r2
   8400e:	460a      	mov	r2, r1
   84010:	3204      	adds	r2, #4
   84012:	880c      	ldrh	r4, [r1, #0]
   84014:	2500      	movs	r5, #0
   84016:	920f      	str	r2, [sp, #60]	; 0x3c
   84018:	e6a8      	b.n	83d6c <_svfprintf_r+0x1fc>
   8401a:	2500      	movs	r5, #0
   8401c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8401e:	9311      	str	r3, [sp, #68]	; 0x44
   84020:	6816      	ldr	r6, [r2, #0]
   84022:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   84026:	1d14      	adds	r4, r2, #4
   84028:	2e00      	cmp	r6, #0
   8402a:	f000 86cd 	beq.w	84dc8 <_svfprintf_r+0x1258>
   8402e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84030:	1c53      	adds	r3, r2, #1
   84032:	f000 861b 	beq.w	84c6c <_svfprintf_r+0x10fc>
   84036:	4629      	mov	r1, r5
   84038:	4630      	mov	r0, r6
   8403a:	f002 fac7 	bl	865cc <memchr>
   8403e:	2800      	cmp	r0, #0
   84040:	f000 870d 	beq.w	84e5e <_svfprintf_r+0x12ee>
   84044:	1b83      	subs	r3, r0, r6
   84046:	950a      	str	r5, [sp, #40]	; 0x28
   84048:	930e      	str	r3, [sp, #56]	; 0x38
   8404a:	940f      	str	r4, [sp, #60]	; 0x3c
   8404c:	f8cd b01c 	str.w	fp, [sp, #28]
   84050:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84054:	9308      	str	r3, [sp, #32]
   84056:	9512      	str	r5, [sp, #72]	; 0x48
   84058:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8405c:	e6ac      	b.n	83db8 <_svfprintf_r+0x248>
   8405e:	f89a 3000 	ldrb.w	r3, [sl]
   84062:	f10a 0401 	add.w	r4, sl, #1
   84066:	2b2a      	cmp	r3, #42	; 0x2a
   84068:	f000 87c2 	beq.w	84ff0 <_svfprintf_r+0x1480>
   8406c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84070:	2809      	cmp	r0, #9
   84072:	46a2      	mov	sl, r4
   84074:	f200 8718 	bhi.w	84ea8 <_svfprintf_r+0x1338>
   84078:	2300      	movs	r3, #0
   8407a:	461c      	mov	r4, r3
   8407c:	f81a 3b01 	ldrb.w	r3, [sl], #1
   84080:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   84084:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   84088:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   8408c:	2809      	cmp	r0, #9
   8408e:	d9f5      	bls.n	8407c <_svfprintf_r+0x50c>
   84090:	940a      	str	r4, [sp, #40]	; 0x28
   84092:	e5c9      	b.n	83c28 <_svfprintf_r+0xb8>
   84094:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   84098:	f89a 3000 	ldrb.w	r3, [sl]
   8409c:	e5c2      	b.n	83c24 <_svfprintf_r+0xb4>
   8409e:	f04b 0b10 	orr.w	fp, fp, #16
   840a2:	f01b 0f20 	tst.w	fp, #32
   840a6:	9311      	str	r3, [sp, #68]	; 0x44
   840a8:	f43f ae51 	beq.w	83d4e <_svfprintf_r+0x1de>
   840ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   840ae:	3407      	adds	r4, #7
   840b0:	f024 0307 	bic.w	r3, r4, #7
   840b4:	f103 0208 	add.w	r2, r3, #8
   840b8:	e9d3 4500 	ldrd	r4, r5, [r3]
   840bc:	920f      	str	r2, [sp, #60]	; 0x3c
   840be:	2301      	movs	r3, #1
   840c0:	e654      	b.n	83d6c <_svfprintf_r+0x1fc>
   840c2:	bf00      	nop
   840c4:	000890ec 	.word	0x000890ec
   840c8:	000890fc 	.word	0x000890fc
   840cc:	9311      	str	r3, [sp, #68]	; 0x44
   840ce:	2a00      	cmp	r2, #0
   840d0:	f040 87ad 	bne.w	8502e <_svfprintf_r+0x14be>
   840d4:	4bbe      	ldr	r3, [pc, #760]	; (843d0 <_svfprintf_r+0x860>)
   840d6:	f01b 0f20 	tst.w	fp, #32
   840da:	9318      	str	r3, [sp, #96]	; 0x60
   840dc:	f040 80e7 	bne.w	842ae <_svfprintf_r+0x73e>
   840e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   840e2:	f01b 0f10 	tst.w	fp, #16
   840e6:	4613      	mov	r3, r2
   840e8:	f040 83d8 	bne.w	8489c <_svfprintf_r+0xd2c>
   840ec:	f01b 0f40 	tst.w	fp, #64	; 0x40
   840f0:	f000 83d4 	beq.w	8489c <_svfprintf_r+0xd2c>
   840f4:	2500      	movs	r5, #0
   840f6:	3304      	adds	r3, #4
   840f8:	8814      	ldrh	r4, [r2, #0]
   840fa:	930f      	str	r3, [sp, #60]	; 0x3c
   840fc:	f01b 0f01 	tst.w	fp, #1
   84100:	f000 80e3 	beq.w	842ca <_svfprintf_r+0x75a>
   84104:	ea54 0305 	orrs.w	r3, r4, r5
   84108:	f000 80df 	beq.w	842ca <_svfprintf_r+0x75a>
   8410c:	2330      	movs	r3, #48	; 0x30
   8410e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   84112:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   84116:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   8411a:	f04b 0b02 	orr.w	fp, fp, #2
   8411e:	2302      	movs	r3, #2
   84120:	e624      	b.n	83d6c <_svfprintf_r+0x1fc>
   84122:	2201      	movs	r2, #1
   84124:	9311      	str	r3, [sp, #68]	; 0x44
   84126:	2300      	movs	r3, #0
   84128:	4611      	mov	r1, r2
   8412a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8412c:	9208      	str	r2, [sp, #32]
   8412e:	6802      	ldr	r2, [r0, #0]
   84130:	461f      	mov	r7, r3
   84132:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84136:	930a      	str	r3, [sp, #40]	; 0x28
   84138:	9312      	str	r3, [sp, #72]	; 0x48
   8413a:	1d03      	adds	r3, r0, #4
   8413c:	f8cd b01c 	str.w	fp, [sp, #28]
   84140:	910e      	str	r1, [sp, #56]	; 0x38
   84142:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   84146:	930f      	str	r3, [sp, #60]	; 0x3c
   84148:	ae28      	add	r6, sp, #160	; 0xa0
   8414a:	e639      	b.n	83dc0 <_svfprintf_r+0x250>
   8414c:	9311      	str	r3, [sp, #68]	; 0x44
   8414e:	2a00      	cmp	r2, #0
   84150:	f040 8784 	bne.w	8505c <_svfprintf_r+0x14ec>
   84154:	f04b 0b10 	orr.w	fp, fp, #16
   84158:	f01b 0f20 	tst.w	fp, #32
   8415c:	f040 8475 	bne.w	84a4a <_svfprintf_r+0xeda>
   84160:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84162:	f01b 0f10 	tst.w	fp, #16
   84166:	4613      	mov	r3, r2
   84168:	f040 839d 	bne.w	848a6 <_svfprintf_r+0xd36>
   8416c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84170:	f000 8399 	beq.w	848a6 <_svfprintf_r+0xd36>
   84174:	f9b2 4000 	ldrsh.w	r4, [r2]
   84178:	3304      	adds	r3, #4
   8417a:	17e5      	asrs	r5, r4, #31
   8417c:	930f      	str	r3, [sp, #60]	; 0x3c
   8417e:	4622      	mov	r2, r4
   84180:	462b      	mov	r3, r5
   84182:	2a00      	cmp	r2, #0
   84184:	f173 0300 	sbcs.w	r3, r3, #0
   84188:	f2c0 8398 	blt.w	848bc <_svfprintf_r+0xd4c>
   8418c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8418e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84192:	1c4a      	adds	r2, r1, #1
   84194:	f04f 0301 	mov.w	r3, #1
   84198:	f47f adf0 	bne.w	83d7c <_svfprintf_r+0x20c>
   8419c:	ea54 0205 	orrs.w	r2, r4, r5
   841a0:	f000 8229 	beq.w	845f6 <_svfprintf_r+0xa86>
   841a4:	f8cd b01c 	str.w	fp, [sp, #28]
   841a8:	2b01      	cmp	r3, #1
   841aa:	f000 830e 	beq.w	847ca <_svfprintf_r+0xc5a>
   841ae:	2b02      	cmp	r3, #2
   841b0:	f040 829c 	bne.w	846ec <_svfprintf_r+0xb7c>
   841b4:	464e      	mov	r6, r9
   841b6:	9818      	ldr	r0, [sp, #96]	; 0x60
   841b8:	0923      	lsrs	r3, r4, #4
   841ba:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   841be:	0929      	lsrs	r1, r5, #4
   841c0:	f004 020f 	and.w	r2, r4, #15
   841c4:	460d      	mov	r5, r1
   841c6:	461c      	mov	r4, r3
   841c8:	5c83      	ldrb	r3, [r0, r2]
   841ca:	f806 3d01 	strb.w	r3, [r6, #-1]!
   841ce:	ea54 0305 	orrs.w	r3, r4, r5
   841d2:	d1f1      	bne.n	841b8 <_svfprintf_r+0x648>
   841d4:	eba9 0306 	sub.w	r3, r9, r6
   841d8:	930e      	str	r3, [sp, #56]	; 0x38
   841da:	e5e5      	b.n	83da8 <_svfprintf_r+0x238>
   841dc:	9311      	str	r3, [sp, #68]	; 0x44
   841de:	2a00      	cmp	r2, #0
   841e0:	f040 8738 	bne.w	85054 <_svfprintf_r+0x14e4>
   841e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   841e6:	f01b 0f08 	tst.w	fp, #8
   841ea:	f104 0407 	add.w	r4, r4, #7
   841ee:	f000 84cf 	beq.w	84b90 <_svfprintf_r+0x1020>
   841f2:	f024 0307 	bic.w	r3, r4, #7
   841f6:	f103 0208 	add.w	r2, r3, #8
   841fa:	920f      	str	r2, [sp, #60]	; 0x3c
   841fc:	681a      	ldr	r2, [r3, #0]
   841fe:	685b      	ldr	r3, [r3, #4]
   84200:	9215      	str	r2, [sp, #84]	; 0x54
   84202:	9314      	str	r3, [sp, #80]	; 0x50
   84204:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84206:	9d15      	ldr	r5, [sp, #84]	; 0x54
   84208:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   8420c:	4628      	mov	r0, r5
   8420e:	4621      	mov	r1, r4
   84210:	f04f 32ff 	mov.w	r2, #4294967295
   84214:	4b6f      	ldr	r3, [pc, #444]	; (843d4 <_svfprintf_r+0x864>)
   84216:	f003 fe6d 	bl	87ef4 <__aeabi_dcmpun>
   8421a:	2800      	cmp	r0, #0
   8421c:	f040 8434 	bne.w	84a88 <_svfprintf_r+0xf18>
   84220:	4628      	mov	r0, r5
   84222:	4621      	mov	r1, r4
   84224:	f04f 32ff 	mov.w	r2, #4294967295
   84228:	4b6a      	ldr	r3, [pc, #424]	; (843d4 <_svfprintf_r+0x864>)
   8422a:	f003 fe45 	bl	87eb8 <__aeabi_dcmple>
   8422e:	2800      	cmp	r0, #0
   84230:	f040 842a 	bne.w	84a88 <_svfprintf_r+0xf18>
   84234:	a815      	add	r0, sp, #84	; 0x54
   84236:	c80d      	ldmia	r0, {r0, r2, r3}
   84238:	9914      	ldr	r1, [sp, #80]	; 0x50
   8423a:	f003 fe33 	bl	87ea4 <__aeabi_dcmplt>
   8423e:	2800      	cmp	r0, #0
   84240:	f040 85d4 	bne.w	84dec <_svfprintf_r+0x127c>
   84244:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84248:	2303      	movs	r3, #3
   8424a:	461a      	mov	r2, r3
   8424c:	9308      	str	r3, [sp, #32]
   8424e:	2300      	movs	r3, #0
   84250:	4e61      	ldr	r6, [pc, #388]	; (843d8 <_svfprintf_r+0x868>)
   84252:	4619      	mov	r1, r3
   84254:	930a      	str	r3, [sp, #40]	; 0x28
   84256:	4b61      	ldr	r3, [pc, #388]	; (843dc <_svfprintf_r+0x86c>)
   84258:	920e      	str	r2, [sp, #56]	; 0x38
   8425a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8425c:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   84260:	9007      	str	r0, [sp, #28]
   84262:	9112      	str	r1, [sp, #72]	; 0x48
   84264:	2a47      	cmp	r2, #71	; 0x47
   84266:	bfd8      	it	le
   84268:	461e      	movle	r6, r3
   8426a:	e5a5      	b.n	83db8 <_svfprintf_r+0x248>
   8426c:	f04b 0b08 	orr.w	fp, fp, #8
   84270:	f89a 3000 	ldrb.w	r3, [sl]
   84274:	e4d6      	b.n	83c24 <_svfprintf_r+0xb4>
   84276:	f04b 0b10 	orr.w	fp, fp, #16
   8427a:	9311      	str	r3, [sp, #68]	; 0x44
   8427c:	f01b 0320 	ands.w	r3, fp, #32
   84280:	f43f aebb 	beq.w	83ffa <_svfprintf_r+0x48a>
   84284:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84286:	3407      	adds	r4, #7
   84288:	f024 0307 	bic.w	r3, r4, #7
   8428c:	f103 0208 	add.w	r2, r3, #8
   84290:	e9d3 4500 	ldrd	r4, r5, [r3]
   84294:	920f      	str	r2, [sp, #60]	; 0x3c
   84296:	2300      	movs	r3, #0
   84298:	e568      	b.n	83d6c <_svfprintf_r+0x1fc>
   8429a:	9311      	str	r3, [sp, #68]	; 0x44
   8429c:	2a00      	cmp	r2, #0
   8429e:	f040 86c2 	bne.w	85026 <_svfprintf_r+0x14b6>
   842a2:	4b4f      	ldr	r3, [pc, #316]	; (843e0 <_svfprintf_r+0x870>)
   842a4:	f01b 0f20 	tst.w	fp, #32
   842a8:	9318      	str	r3, [sp, #96]	; 0x60
   842aa:	f43f af19 	beq.w	840e0 <_svfprintf_r+0x570>
   842ae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   842b0:	f01b 0f01 	tst.w	fp, #1
   842b4:	f104 0407 	add.w	r4, r4, #7
   842b8:	f024 0307 	bic.w	r3, r4, #7
   842bc:	f103 0208 	add.w	r2, r3, #8
   842c0:	920f      	str	r2, [sp, #60]	; 0x3c
   842c2:	e9d3 4500 	ldrd	r4, r5, [r3]
   842c6:	f47f af1d 	bne.w	84104 <_svfprintf_r+0x594>
   842ca:	2302      	movs	r3, #2
   842cc:	e54e      	b.n	83d6c <_svfprintf_r+0x1fc>
   842ce:	f89a 3000 	ldrb.w	r3, [sl]
   842d2:	2900      	cmp	r1, #0
   842d4:	f47f aca6 	bne.w	83c24 <_svfprintf_r+0xb4>
   842d8:	2201      	movs	r2, #1
   842da:	2120      	movs	r1, #32
   842dc:	e4a2      	b.n	83c24 <_svfprintf_r+0xb4>
   842de:	f04b 0b01 	orr.w	fp, fp, #1
   842e2:	f89a 3000 	ldrb.w	r3, [sl]
   842e6:	e49d      	b.n	83c24 <_svfprintf_r+0xb4>
   842e8:	f89a 3000 	ldrb.w	r3, [sl]
   842ec:	2201      	movs	r2, #1
   842ee:	212b      	movs	r1, #43	; 0x2b
   842f0:	e498      	b.n	83c24 <_svfprintf_r+0xb4>
   842f2:	f04b 0b20 	orr.w	fp, fp, #32
   842f6:	f89a 3000 	ldrb.w	r3, [sl]
   842fa:	e493      	b.n	83c24 <_svfprintf_r+0xb4>
   842fc:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   84300:	f89a 3000 	ldrb.w	r3, [sl]
   84304:	e48e      	b.n	83c24 <_svfprintf_r+0xb4>
   84306:	f89a 3000 	ldrb.w	r3, [sl]
   8430a:	2b6c      	cmp	r3, #108	; 0x6c
   8430c:	bf03      	ittte	eq
   8430e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   84312:	f04b 0b20 	orreq.w	fp, fp, #32
   84316:	f10a 0a01 	addeq.w	sl, sl, #1
   8431a:	f04b 0b10 	orrne.w	fp, fp, #16
   8431e:	e481      	b.n	83c24 <_svfprintf_r+0xb4>
   84320:	2a00      	cmp	r2, #0
   84322:	f040 867c 	bne.w	8501e <_svfprintf_r+0x14ae>
   84326:	f01b 0f20 	tst.w	fp, #32
   8432a:	f040 8452 	bne.w	84bd2 <_svfprintf_r+0x1062>
   8432e:	f01b 0f10 	tst.w	fp, #16
   84332:	f040 8438 	bne.w	84ba6 <_svfprintf_r+0x1036>
   84336:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8433a:	f000 8434 	beq.w	84ba6 <_svfprintf_r+0x1036>
   8433e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84340:	6813      	ldr	r3, [r2, #0]
   84342:	3204      	adds	r2, #4
   84344:	920f      	str	r2, [sp, #60]	; 0x3c
   84346:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   8434a:	801a      	strh	r2, [r3, #0]
   8434c:	e437      	b.n	83bbe <_svfprintf_r+0x4e>
   8434e:	2378      	movs	r3, #120	; 0x78
   84350:	2230      	movs	r2, #48	; 0x30
   84352:	980f      	ldr	r0, [sp, #60]	; 0x3c
   84354:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   84358:	9311      	str	r3, [sp, #68]	; 0x44
   8435a:	1d03      	adds	r3, r0, #4
   8435c:	930f      	str	r3, [sp, #60]	; 0x3c
   8435e:	4b20      	ldr	r3, [pc, #128]	; (843e0 <_svfprintf_r+0x870>)
   84360:	6804      	ldr	r4, [r0, #0]
   84362:	9318      	str	r3, [sp, #96]	; 0x60
   84364:	f04b 0b02 	orr.w	fp, fp, #2
   84368:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   8436c:	2500      	movs	r5, #0
   8436e:	2302      	movs	r3, #2
   84370:	e4fc      	b.n	83d6c <_svfprintf_r+0x1fc>
   84372:	9311      	str	r3, [sp, #68]	; 0x44
   84374:	2a00      	cmp	r2, #0
   84376:	f43f aeef 	beq.w	84158 <_svfprintf_r+0x5e8>
   8437a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8437e:	e6eb      	b.n	84158 <_svfprintf_r+0x5e8>
   84380:	2000      	movs	r0, #0
   84382:	4604      	mov	r4, r0
   84384:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84388:	f81a 3b01 	ldrb.w	r3, [sl], #1
   8438c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   84390:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   84394:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84398:	2809      	cmp	r0, #9
   8439a:	d9f5      	bls.n	84388 <_svfprintf_r+0x818>
   8439c:	940d      	str	r4, [sp, #52]	; 0x34
   8439e:	e443      	b.n	83c28 <_svfprintf_r+0xb8>
   843a0:	9311      	str	r3, [sp, #68]	; 0x44
   843a2:	2a00      	cmp	r2, #0
   843a4:	f040 864a 	bne.w	8503c <_svfprintf_r+0x14cc>
   843a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   843aa:	2a00      	cmp	r2, #0
   843ac:	f43f acb6 	beq.w	83d1c <_svfprintf_r+0x1ac>
   843b0:	2300      	movs	r3, #0
   843b2:	2101      	movs	r1, #1
   843b4:	461f      	mov	r7, r3
   843b6:	9108      	str	r1, [sp, #32]
   843b8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   843bc:	f8cd b01c 	str.w	fp, [sp, #28]
   843c0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   843c4:	930a      	str	r3, [sp, #40]	; 0x28
   843c6:	9312      	str	r3, [sp, #72]	; 0x48
   843c8:	910e      	str	r1, [sp, #56]	; 0x38
   843ca:	ae28      	add	r6, sp, #160	; 0xa0
   843cc:	e4f8      	b.n	83dc0 <_svfprintf_r+0x250>
   843ce:	bf00      	nop
   843d0:	000890b8 	.word	0x000890b8
   843d4:	7fefffff 	.word	0x7fefffff
   843d8:	000890ac 	.word	0x000890ac
   843dc:	000890a8 	.word	0x000890a8
   843e0:	000890cc 	.word	0x000890cc
   843e4:	aa25      	add	r2, sp, #148	; 0x94
   843e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   843e8:	980c      	ldr	r0, [sp, #48]	; 0x30
   843ea:	f002 fcc5 	bl	86d78 <__ssprint_r>
   843ee:	2800      	cmp	r0, #0
   843f0:	f47f ac9b 	bne.w	83d2a <_svfprintf_r+0x1ba>
   843f4:	46c8      	mov	r8, r9
   843f6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   843fa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   843fc:	e533      	b.n	83e66 <_svfprintf_r+0x2f6>
   843fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84400:	2b65      	cmp	r3, #101	; 0x65
   84402:	f340 809a 	ble.w	8453a <_svfprintf_r+0x9ca>
   84406:	a815      	add	r0, sp, #84	; 0x54
   84408:	c80d      	ldmia	r0, {r0, r2, r3}
   8440a:	9914      	ldr	r1, [sp, #80]	; 0x50
   8440c:	f003 fd40 	bl	87e90 <__aeabi_dcmpeq>
   84410:	2800      	cmp	r0, #0
   84412:	f000 8193 	beq.w	8473c <_svfprintf_r+0xbcc>
   84416:	2101      	movs	r1, #1
   84418:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8441a:	4ab5      	ldr	r2, [pc, #724]	; (846f0 <_svfprintf_r+0xb80>)
   8441c:	440b      	add	r3, r1
   8441e:	440c      	add	r4, r1
   84420:	2b07      	cmp	r3, #7
   84422:	9427      	str	r4, [sp, #156]	; 0x9c
   84424:	9326      	str	r3, [sp, #152]	; 0x98
   84426:	f8c8 1004 	str.w	r1, [r8, #4]
   8442a:	f8c8 2000 	str.w	r2, [r8]
   8442e:	f300 83c6 	bgt.w	84bbe <_svfprintf_r+0x104e>
   84432:	f108 0808 	add.w	r8, r8, #8
   84436:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84438:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8443a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8443c:	4293      	cmp	r3, r2
   8443e:	db03      	blt.n	84448 <_svfprintf_r+0x8d8>
   84440:	9b07      	ldr	r3, [sp, #28]
   84442:	07dd      	lsls	r5, r3, #31
   84444:	f57f ad86 	bpl.w	83f54 <_svfprintf_r+0x3e4>
   84448:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8444a:	9919      	ldr	r1, [sp, #100]	; 0x64
   8444c:	3301      	adds	r3, #1
   8444e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   84450:	440c      	add	r4, r1
   84452:	2b07      	cmp	r3, #7
   84454:	f8c8 2000 	str.w	r2, [r8]
   84458:	f8c8 1004 	str.w	r1, [r8, #4]
   8445c:	9427      	str	r4, [sp, #156]	; 0x9c
   8445e:	9326      	str	r3, [sp, #152]	; 0x98
   84460:	f300 83c4 	bgt.w	84bec <_svfprintf_r+0x107c>
   84464:	f108 0808 	add.w	r8, r8, #8
   84468:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8446a:	1e5e      	subs	r6, r3, #1
   8446c:	2e00      	cmp	r6, #0
   8446e:	f77f ad71 	ble.w	83f54 <_svfprintf_r+0x3e4>
   84472:	2e10      	cmp	r6, #16
   84474:	f340 8575 	ble.w	84f62 <_svfprintf_r+0x13f2>
   84478:	4622      	mov	r2, r4
   8447a:	2710      	movs	r7, #16
   8447c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8447e:	4d9d      	ldr	r5, [pc, #628]	; (846f4 <_svfprintf_r+0xb84>)
   84480:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84484:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84486:	e005      	b.n	84494 <_svfprintf_r+0x924>
   84488:	f108 0808 	add.w	r8, r8, #8
   8448c:	3e10      	subs	r6, #16
   8448e:	2e10      	cmp	r6, #16
   84490:	f340 8225 	ble.w	848de <_svfprintf_r+0xd6e>
   84494:	3301      	adds	r3, #1
   84496:	3210      	adds	r2, #16
   84498:	2b07      	cmp	r3, #7
   8449a:	9227      	str	r2, [sp, #156]	; 0x9c
   8449c:	9326      	str	r3, [sp, #152]	; 0x98
   8449e:	e888 00a0 	stmia.w	r8, {r5, r7}
   844a2:	ddf1      	ble.n	84488 <_svfprintf_r+0x918>
   844a4:	aa25      	add	r2, sp, #148	; 0x94
   844a6:	4621      	mov	r1, r4
   844a8:	4658      	mov	r0, fp
   844aa:	f002 fc65 	bl	86d78 <__ssprint_r>
   844ae:	2800      	cmp	r0, #0
   844b0:	f47f ac3b 	bne.w	83d2a <_svfprintf_r+0x1ba>
   844b4:	46c8      	mov	r8, r9
   844b6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   844b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   844ba:	e7e7      	b.n	8448c <_svfprintf_r+0x91c>
   844bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   844be:	9a08      	ldr	r2, [sp, #32]
   844c0:	1a9f      	subs	r7, r3, r2
   844c2:	2f00      	cmp	r7, #0
   844c4:	f77f acf6 	ble.w	83eb4 <_svfprintf_r+0x344>
   844c8:	2f10      	cmp	r7, #16
   844ca:	f340 84a8 	ble.w	84e1e <_svfprintf_r+0x12ae>
   844ce:	4d89      	ldr	r5, [pc, #548]	; (846f4 <_svfprintf_r+0xb84>)
   844d0:	4642      	mov	r2, r8
   844d2:	4621      	mov	r1, r4
   844d4:	46b0      	mov	r8, r6
   844d6:	f04f 0b10 	mov.w	fp, #16
   844da:	462e      	mov	r6, r5
   844dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   844de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   844e0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   844e2:	e004      	b.n	844ee <_svfprintf_r+0x97e>
   844e4:	3f10      	subs	r7, #16
   844e6:	2f10      	cmp	r7, #16
   844e8:	f102 0208 	add.w	r2, r2, #8
   844ec:	dd15      	ble.n	8451a <_svfprintf_r+0x9aa>
   844ee:	3301      	adds	r3, #1
   844f0:	3110      	adds	r1, #16
   844f2:	2b07      	cmp	r3, #7
   844f4:	9127      	str	r1, [sp, #156]	; 0x9c
   844f6:	9326      	str	r3, [sp, #152]	; 0x98
   844f8:	e882 0840 	stmia.w	r2, {r6, fp}
   844fc:	ddf2      	ble.n	844e4 <_svfprintf_r+0x974>
   844fe:	aa25      	add	r2, sp, #148	; 0x94
   84500:	4629      	mov	r1, r5
   84502:	4620      	mov	r0, r4
   84504:	f002 fc38 	bl	86d78 <__ssprint_r>
   84508:	2800      	cmp	r0, #0
   8450a:	f47f ac0e 	bne.w	83d2a <_svfprintf_r+0x1ba>
   8450e:	3f10      	subs	r7, #16
   84510:	2f10      	cmp	r7, #16
   84512:	464a      	mov	r2, r9
   84514:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84516:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84518:	dce9      	bgt.n	844ee <_svfprintf_r+0x97e>
   8451a:	4635      	mov	r5, r6
   8451c:	460c      	mov	r4, r1
   8451e:	4646      	mov	r6, r8
   84520:	4690      	mov	r8, r2
   84522:	3301      	adds	r3, #1
   84524:	443c      	add	r4, r7
   84526:	2b07      	cmp	r3, #7
   84528:	9427      	str	r4, [sp, #156]	; 0x9c
   8452a:	9326      	str	r3, [sp, #152]	; 0x98
   8452c:	e888 00a0 	stmia.w	r8, {r5, r7}
   84530:	f300 829e 	bgt.w	84a70 <_svfprintf_r+0xf00>
   84534:	f108 0808 	add.w	r8, r8, #8
   84538:	e4bc      	b.n	83eb4 <_svfprintf_r+0x344>
   8453a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8453c:	2b01      	cmp	r3, #1
   8453e:	f340 824f 	ble.w	849e0 <_svfprintf_r+0xe70>
   84542:	2301      	movs	r3, #1
   84544:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84546:	441c      	add	r4, r3
   84548:	441f      	add	r7, r3
   8454a:	2f07      	cmp	r7, #7
   8454c:	9427      	str	r4, [sp, #156]	; 0x9c
   8454e:	f8c8 6000 	str.w	r6, [r8]
   84552:	9726      	str	r7, [sp, #152]	; 0x98
   84554:	f8c8 3004 	str.w	r3, [r8, #4]
   84558:	f300 825f 	bgt.w	84a1a <_svfprintf_r+0xeaa>
   8455c:	f108 0808 	add.w	r8, r8, #8
   84560:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84562:	3701      	adds	r7, #1
   84564:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   84566:	4414      	add	r4, r2
   84568:	2f07      	cmp	r7, #7
   8456a:	9427      	str	r4, [sp, #156]	; 0x9c
   8456c:	9726      	str	r7, [sp, #152]	; 0x98
   8456e:	f8c8 3000 	str.w	r3, [r8]
   84572:	f8c8 2004 	str.w	r2, [r8, #4]
   84576:	f300 825c 	bgt.w	84a32 <_svfprintf_r+0xec2>
   8457a:	f108 0808 	add.w	r8, r8, #8
   8457e:	a815      	add	r0, sp, #84	; 0x54
   84580:	c80d      	ldmia	r0, {r0, r2, r3}
   84582:	9914      	ldr	r1, [sp, #80]	; 0x50
   84584:	f003 fc84 	bl	87e90 <__aeabi_dcmpeq>
   84588:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8458a:	2800      	cmp	r0, #0
   8458c:	f040 8141 	bne.w	84812 <_svfprintf_r+0xca2>
   84590:	3b01      	subs	r3, #1
   84592:	3701      	adds	r7, #1
   84594:	3601      	adds	r6, #1
   84596:	441c      	add	r4, r3
   84598:	2f07      	cmp	r7, #7
   8459a:	f8c8 6000 	str.w	r6, [r8]
   8459e:	9726      	str	r7, [sp, #152]	; 0x98
   845a0:	9427      	str	r4, [sp, #156]	; 0x9c
   845a2:	f8c8 3004 	str.w	r3, [r8, #4]
   845a6:	f300 8166 	bgt.w	84876 <_svfprintf_r+0xd06>
   845aa:	f108 0808 	add.w	r8, r8, #8
   845ae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   845b0:	3701      	adds	r7, #1
   845b2:	4414      	add	r4, r2
   845b4:	ab21      	add	r3, sp, #132	; 0x84
   845b6:	2f07      	cmp	r7, #7
   845b8:	9427      	str	r4, [sp, #156]	; 0x9c
   845ba:	9726      	str	r7, [sp, #152]	; 0x98
   845bc:	f8c8 2004 	str.w	r2, [r8, #4]
   845c0:	f8c8 3000 	str.w	r3, [r8]
   845c4:	f77f acc4 	ble.w	83f50 <_svfprintf_r+0x3e0>
   845c8:	aa25      	add	r2, sp, #148	; 0x94
   845ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
   845cc:	980c      	ldr	r0, [sp, #48]	; 0x30
   845ce:	f002 fbd3 	bl	86d78 <__ssprint_r>
   845d2:	2800      	cmp	r0, #0
   845d4:	f47f aba9 	bne.w	83d2a <_svfprintf_r+0x1ba>
   845d8:	46c8      	mov	r8, r9
   845da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   845dc:	e4ba      	b.n	83f54 <_svfprintf_r+0x3e4>
   845de:	aa25      	add	r2, sp, #148	; 0x94
   845e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   845e2:	980c      	ldr	r0, [sp, #48]	; 0x30
   845e4:	f002 fbc8 	bl	86d78 <__ssprint_r>
   845e8:	2800      	cmp	r0, #0
   845ea:	f43f acfd 	beq.w	83fe8 <_svfprintf_r+0x478>
   845ee:	f7ff bb9c 	b.w	83d2a <_svfprintf_r+0x1ba>
   845f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
   845f6:	2b01      	cmp	r3, #1
   845f8:	f000 817e 	beq.w	848f8 <_svfprintf_r+0xd88>
   845fc:	2b02      	cmp	r3, #2
   845fe:	d171      	bne.n	846e4 <_svfprintf_r+0xb74>
   84600:	f8cd b01c 	str.w	fp, [sp, #28]
   84604:	2400      	movs	r4, #0
   84606:	2500      	movs	r5, #0
   84608:	e5d4      	b.n	841b4 <_svfprintf_r+0x644>
   8460a:	aa25      	add	r2, sp, #148	; 0x94
   8460c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8460e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84610:	f002 fbb2 	bl	86d78 <__ssprint_r>
   84614:	2800      	cmp	r0, #0
   84616:	f47f ab88 	bne.w	83d2a <_svfprintf_r+0x1ba>
   8461a:	46c8      	mov	r8, r9
   8461c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8461e:	e486      	b.n	83f2e <_svfprintf_r+0x3be>
   84620:	aa25      	add	r2, sp, #148	; 0x94
   84622:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84624:	980c      	ldr	r0, [sp, #48]	; 0x30
   84626:	f002 fba7 	bl	86d78 <__ssprint_r>
   8462a:	2800      	cmp	r0, #0
   8462c:	f47f ab7d 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84630:	46c8      	mov	r8, r9
   84632:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84634:	e429      	b.n	83e8a <_svfprintf_r+0x31a>
   84636:	2001      	movs	r0, #1
   84638:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8463a:	4a2d      	ldr	r2, [pc, #180]	; (846f0 <_svfprintf_r+0xb80>)
   8463c:	4403      	add	r3, r0
   8463e:	4404      	add	r4, r0
   84640:	2b07      	cmp	r3, #7
   84642:	9427      	str	r4, [sp, #156]	; 0x9c
   84644:	9326      	str	r3, [sp, #152]	; 0x98
   84646:	f8c8 0004 	str.w	r0, [r8, #4]
   8464a:	f8c8 2000 	str.w	r2, [r8]
   8464e:	f340 82d8 	ble.w	84c02 <_svfprintf_r+0x1092>
   84652:	aa25      	add	r2, sp, #148	; 0x94
   84654:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84656:	980c      	ldr	r0, [sp, #48]	; 0x30
   84658:	f002 fb8e 	bl	86d78 <__ssprint_r>
   8465c:	2800      	cmp	r0, #0
   8465e:	f47f ab64 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84662:	46c8      	mov	r8, r9
   84664:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84666:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84668:	b929      	cbnz	r1, 84676 <_svfprintf_r+0xb06>
   8466a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8466c:	b91b      	cbnz	r3, 84676 <_svfprintf_r+0xb06>
   8466e:	9b07      	ldr	r3, [sp, #28]
   84670:	07d8      	lsls	r0, r3, #31
   84672:	f57f ac6f 	bpl.w	83f54 <_svfprintf_r+0x3e4>
   84676:	9819      	ldr	r0, [sp, #100]	; 0x64
   84678:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8467a:	4602      	mov	r2, r0
   8467c:	3301      	adds	r3, #1
   8467e:	4422      	add	r2, r4
   84680:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   84682:	2b07      	cmp	r3, #7
   84684:	9227      	str	r2, [sp, #156]	; 0x9c
   84686:	f8c8 4000 	str.w	r4, [r8]
   8468a:	f8c8 0004 	str.w	r0, [r8, #4]
   8468e:	9326      	str	r3, [sp, #152]	; 0x98
   84690:	f300 8431 	bgt.w	84ef6 <_svfprintf_r+0x1386>
   84694:	f108 0808 	add.w	r8, r8, #8
   84698:	2900      	cmp	r1, #0
   8469a:	f2c0 8409 	blt.w	84eb0 <_svfprintf_r+0x1340>
   8469e:	9913      	ldr	r1, [sp, #76]	; 0x4c
   846a0:	3301      	adds	r3, #1
   846a2:	188c      	adds	r4, r1, r2
   846a4:	2b07      	cmp	r3, #7
   846a6:	9427      	str	r4, [sp, #156]	; 0x9c
   846a8:	9326      	str	r3, [sp, #152]	; 0x98
   846aa:	f8c8 6000 	str.w	r6, [r8]
   846ae:	f8c8 1004 	str.w	r1, [r8, #4]
   846b2:	f77f ac4d 	ble.w	83f50 <_svfprintf_r+0x3e0>
   846b6:	aa25      	add	r2, sp, #148	; 0x94
   846b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   846ba:	980c      	ldr	r0, [sp, #48]	; 0x30
   846bc:	f002 fb5c 	bl	86d78 <__ssprint_r>
   846c0:	2800      	cmp	r0, #0
   846c2:	f47f ab32 	bne.w	83d2a <_svfprintf_r+0x1ba>
   846c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   846c8:	46c8      	mov	r8, r9
   846ca:	e443      	b.n	83f54 <_svfprintf_r+0x3e4>
   846cc:	aa25      	add	r2, sp, #148	; 0x94
   846ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   846d0:	980c      	ldr	r0, [sp, #48]	; 0x30
   846d2:	f002 fb51 	bl	86d78 <__ssprint_r>
   846d6:	2800      	cmp	r0, #0
   846d8:	f47f ab27 	bne.w	83d2a <_svfprintf_r+0x1ba>
   846dc:	46c8      	mov	r8, r9
   846de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   846e0:	f7ff bbe5 	b.w	83eae <_svfprintf_r+0x33e>
   846e4:	2400      	movs	r4, #0
   846e6:	2500      	movs	r5, #0
   846e8:	f8cd b01c 	str.w	fp, [sp, #28]
   846ec:	4649      	mov	r1, r9
   846ee:	e004      	b.n	846fa <_svfprintf_r+0xb8a>
   846f0:	000890e8 	.word	0x000890e8
   846f4:	000890fc 	.word	0x000890fc
   846f8:	4631      	mov	r1, r6
   846fa:	08e2      	lsrs	r2, r4, #3
   846fc:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   84700:	08e8      	lsrs	r0, r5, #3
   84702:	f004 0307 	and.w	r3, r4, #7
   84706:	4605      	mov	r5, r0
   84708:	4614      	mov	r4, r2
   8470a:	3330      	adds	r3, #48	; 0x30
   8470c:	ea54 0205 	orrs.w	r2, r4, r5
   84710:	f801 3c01 	strb.w	r3, [r1, #-1]
   84714:	f101 36ff 	add.w	r6, r1, #4294967295
   84718:	d1ee      	bne.n	846f8 <_svfprintf_r+0xb88>
   8471a:	9a07      	ldr	r2, [sp, #28]
   8471c:	07d2      	lsls	r2, r2, #31
   8471e:	f57f ad59 	bpl.w	841d4 <_svfprintf_r+0x664>
   84722:	2b30      	cmp	r3, #48	; 0x30
   84724:	f43f ad56 	beq.w	841d4 <_svfprintf_r+0x664>
   84728:	2330      	movs	r3, #48	; 0x30
   8472a:	3902      	subs	r1, #2
   8472c:	f806 3c01 	strb.w	r3, [r6, #-1]
   84730:	eba9 0301 	sub.w	r3, r9, r1
   84734:	930e      	str	r3, [sp, #56]	; 0x38
   84736:	460e      	mov	r6, r1
   84738:	f7ff bb36 	b.w	83da8 <_svfprintf_r+0x238>
   8473c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8473e:	2900      	cmp	r1, #0
   84740:	f77f af79 	ble.w	84636 <_svfprintf_r+0xac6>
   84744:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84746:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84748:	4293      	cmp	r3, r2
   8474a:	bfa8      	it	ge
   8474c:	4613      	movge	r3, r2
   8474e:	2b00      	cmp	r3, #0
   84750:	461f      	mov	r7, r3
   84752:	dd0b      	ble.n	8476c <_svfprintf_r+0xbfc>
   84754:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84756:	443c      	add	r4, r7
   84758:	3301      	adds	r3, #1
   8475a:	2b07      	cmp	r3, #7
   8475c:	9427      	str	r4, [sp, #156]	; 0x9c
   8475e:	e888 00c0 	stmia.w	r8, {r6, r7}
   84762:	9326      	str	r3, [sp, #152]	; 0x98
   84764:	f300 82fb 	bgt.w	84d5e <_svfprintf_r+0x11ee>
   84768:	f108 0808 	add.w	r8, r8, #8
   8476c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8476e:	2f00      	cmp	r7, #0
   84770:	bfa8      	it	ge
   84772:	1bdb      	subge	r3, r3, r7
   84774:	2b00      	cmp	r3, #0
   84776:	461f      	mov	r7, r3
   84778:	f340 80d7 	ble.w	8492a <_svfprintf_r+0xdba>
   8477c:	2b10      	cmp	r3, #16
   8477e:	f340 8434 	ble.w	84fea <_svfprintf_r+0x147a>
   84782:	4dba      	ldr	r5, [pc, #744]	; (84a6c <_svfprintf_r+0xefc>)
   84784:	4642      	mov	r2, r8
   84786:	4621      	mov	r1, r4
   84788:	46b0      	mov	r8, r6
   8478a:	f04f 0b10 	mov.w	fp, #16
   8478e:	462e      	mov	r6, r5
   84790:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84792:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84794:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84796:	e004      	b.n	847a2 <_svfprintf_r+0xc32>
   84798:	3208      	adds	r2, #8
   8479a:	3f10      	subs	r7, #16
   8479c:	2f10      	cmp	r7, #16
   8479e:	f340 80b5 	ble.w	8490c <_svfprintf_r+0xd9c>
   847a2:	3301      	adds	r3, #1
   847a4:	3110      	adds	r1, #16
   847a6:	2b07      	cmp	r3, #7
   847a8:	9127      	str	r1, [sp, #156]	; 0x9c
   847aa:	9326      	str	r3, [sp, #152]	; 0x98
   847ac:	e882 0840 	stmia.w	r2, {r6, fp}
   847b0:	ddf2      	ble.n	84798 <_svfprintf_r+0xc28>
   847b2:	aa25      	add	r2, sp, #148	; 0x94
   847b4:	4629      	mov	r1, r5
   847b6:	4620      	mov	r0, r4
   847b8:	f002 fade 	bl	86d78 <__ssprint_r>
   847bc:	2800      	cmp	r0, #0
   847be:	f47f aab4 	bne.w	83d2a <_svfprintf_r+0x1ba>
   847c2:	464a      	mov	r2, r9
   847c4:	9927      	ldr	r1, [sp, #156]	; 0x9c
   847c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   847c8:	e7e7      	b.n	8479a <_svfprintf_r+0xc2a>
   847ca:	2d00      	cmp	r5, #0
   847cc:	bf08      	it	eq
   847ce:	2c0a      	cmpeq	r4, #10
   847d0:	f0c0 8090 	bcc.w	848f4 <_svfprintf_r+0xd84>
   847d4:	464e      	mov	r6, r9
   847d6:	4620      	mov	r0, r4
   847d8:	4629      	mov	r1, r5
   847da:	220a      	movs	r2, #10
   847dc:	2300      	movs	r3, #0
   847de:	f003 fbc7 	bl	87f70 <__aeabi_uldivmod>
   847e2:	3230      	adds	r2, #48	; 0x30
   847e4:	f806 2d01 	strb.w	r2, [r6, #-1]!
   847e8:	4620      	mov	r0, r4
   847ea:	4629      	mov	r1, r5
   847ec:	2300      	movs	r3, #0
   847ee:	220a      	movs	r2, #10
   847f0:	f003 fbbe 	bl	87f70 <__aeabi_uldivmod>
   847f4:	4604      	mov	r4, r0
   847f6:	460d      	mov	r5, r1
   847f8:	ea54 0305 	orrs.w	r3, r4, r5
   847fc:	d1eb      	bne.n	847d6 <_svfprintf_r+0xc66>
   847fe:	eba9 0306 	sub.w	r3, r9, r6
   84802:	930e      	str	r3, [sp, #56]	; 0x38
   84804:	f7ff bad0 	b.w	83da8 <_svfprintf_r+0x238>
   84808:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8480a:	464e      	mov	r6, r9
   8480c:	930e      	str	r3, [sp, #56]	; 0x38
   8480e:	f7ff bacb 	b.w	83da8 <_svfprintf_r+0x238>
   84812:	1e5e      	subs	r6, r3, #1
   84814:	2e00      	cmp	r6, #0
   84816:	f77f aeca 	ble.w	845ae <_svfprintf_r+0xa3e>
   8481a:	2e10      	cmp	r6, #16
   8481c:	f340 83e3 	ble.w	84fe6 <_svfprintf_r+0x1476>
   84820:	4622      	mov	r2, r4
   84822:	f04f 0b10 	mov.w	fp, #16
   84826:	4d91      	ldr	r5, [pc, #580]	; (84a6c <_svfprintf_r+0xefc>)
   84828:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8482a:	e004      	b.n	84836 <_svfprintf_r+0xcc6>
   8482c:	3e10      	subs	r6, #16
   8482e:	2e10      	cmp	r6, #16
   84830:	f108 0808 	add.w	r8, r8, #8
   84834:	dd15      	ble.n	84862 <_svfprintf_r+0xcf2>
   84836:	3701      	adds	r7, #1
   84838:	3210      	adds	r2, #16
   8483a:	2f07      	cmp	r7, #7
   8483c:	9227      	str	r2, [sp, #156]	; 0x9c
   8483e:	9726      	str	r7, [sp, #152]	; 0x98
   84840:	e888 0820 	stmia.w	r8, {r5, fp}
   84844:	ddf2      	ble.n	8482c <_svfprintf_r+0xcbc>
   84846:	aa25      	add	r2, sp, #148	; 0x94
   84848:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8484a:	4620      	mov	r0, r4
   8484c:	f002 fa94 	bl	86d78 <__ssprint_r>
   84850:	2800      	cmp	r0, #0
   84852:	f47f aa6a 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84856:	3e10      	subs	r6, #16
   84858:	2e10      	cmp	r6, #16
   8485a:	46c8      	mov	r8, r9
   8485c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8485e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84860:	dce9      	bgt.n	84836 <_svfprintf_r+0xcc6>
   84862:	4614      	mov	r4, r2
   84864:	3701      	adds	r7, #1
   84866:	4434      	add	r4, r6
   84868:	2f07      	cmp	r7, #7
   8486a:	9427      	str	r4, [sp, #156]	; 0x9c
   8486c:	9726      	str	r7, [sp, #152]	; 0x98
   8486e:	e888 0060 	stmia.w	r8, {r5, r6}
   84872:	f77f ae9a 	ble.w	845aa <_svfprintf_r+0xa3a>
   84876:	aa25      	add	r2, sp, #148	; 0x94
   84878:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8487a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8487c:	f002 fa7c 	bl	86d78 <__ssprint_r>
   84880:	2800      	cmp	r0, #0
   84882:	f47f aa52 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84886:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84888:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8488a:	46c8      	mov	r8, r9
   8488c:	e68f      	b.n	845ae <_svfprintf_r+0xa3e>
   8488e:	3204      	adds	r2, #4
   84890:	681c      	ldr	r4, [r3, #0]
   84892:	2500      	movs	r5, #0
   84894:	2301      	movs	r3, #1
   84896:	920f      	str	r2, [sp, #60]	; 0x3c
   84898:	f7ff ba68 	b.w	83d6c <_svfprintf_r+0x1fc>
   8489c:	681c      	ldr	r4, [r3, #0]
   8489e:	3304      	adds	r3, #4
   848a0:	930f      	str	r3, [sp, #60]	; 0x3c
   848a2:	2500      	movs	r5, #0
   848a4:	e42a      	b.n	840fc <_svfprintf_r+0x58c>
   848a6:	681c      	ldr	r4, [r3, #0]
   848a8:	3304      	adds	r3, #4
   848aa:	17e5      	asrs	r5, r4, #31
   848ac:	4622      	mov	r2, r4
   848ae:	930f      	str	r3, [sp, #60]	; 0x3c
   848b0:	462b      	mov	r3, r5
   848b2:	2a00      	cmp	r2, #0
   848b4:	f173 0300 	sbcs.w	r3, r3, #0
   848b8:	f6bf ac68 	bge.w	8418c <_svfprintf_r+0x61c>
   848bc:	272d      	movs	r7, #45	; 0x2d
   848be:	4264      	negs	r4, r4
   848c0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   848c4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   848c8:	2301      	movs	r3, #1
   848ca:	f7ff ba53 	b.w	83d74 <_svfprintf_r+0x204>
   848ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
   848d0:	2500      	movs	r5, #0
   848d2:	460a      	mov	r2, r1
   848d4:	3204      	adds	r2, #4
   848d6:	680c      	ldr	r4, [r1, #0]
   848d8:	920f      	str	r2, [sp, #60]	; 0x3c
   848da:	f7ff ba47 	b.w	83d6c <_svfprintf_r+0x1fc>
   848de:	4614      	mov	r4, r2
   848e0:	3301      	adds	r3, #1
   848e2:	4434      	add	r4, r6
   848e4:	2b07      	cmp	r3, #7
   848e6:	9427      	str	r4, [sp, #156]	; 0x9c
   848e8:	9326      	str	r3, [sp, #152]	; 0x98
   848ea:	e888 0060 	stmia.w	r8, {r5, r6}
   848ee:	f77f ab2f 	ble.w	83f50 <_svfprintf_r+0x3e0>
   848f2:	e6e0      	b.n	846b6 <_svfprintf_r+0xb46>
   848f4:	f8dd b01c 	ldr.w	fp, [sp, #28]
   848f8:	2301      	movs	r3, #1
   848fa:	ae42      	add	r6, sp, #264	; 0x108
   848fc:	3430      	adds	r4, #48	; 0x30
   848fe:	f8cd b01c 	str.w	fp, [sp, #28]
   84902:	f806 4d41 	strb.w	r4, [r6, #-65]!
   84906:	930e      	str	r3, [sp, #56]	; 0x38
   84908:	f7ff ba4e 	b.w	83da8 <_svfprintf_r+0x238>
   8490c:	4635      	mov	r5, r6
   8490e:	460c      	mov	r4, r1
   84910:	4646      	mov	r6, r8
   84912:	4690      	mov	r8, r2
   84914:	3301      	adds	r3, #1
   84916:	443c      	add	r4, r7
   84918:	2b07      	cmp	r3, #7
   8491a:	9427      	str	r4, [sp, #156]	; 0x9c
   8491c:	9326      	str	r3, [sp, #152]	; 0x98
   8491e:	e888 00a0 	stmia.w	r8, {r5, r7}
   84922:	f300 8246 	bgt.w	84db2 <_svfprintf_r+0x1242>
   84926:	f108 0808 	add.w	r8, r8, #8
   8492a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8492c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8492e:	429a      	cmp	r2, r3
   84930:	db45      	blt.n	849be <_svfprintf_r+0xe4e>
   84932:	9b07      	ldr	r3, [sp, #28]
   84934:	07d9      	lsls	r1, r3, #31
   84936:	d442      	bmi.n	849be <_svfprintf_r+0xe4e>
   84938:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8493a:	9812      	ldr	r0, [sp, #72]	; 0x48
   8493c:	1a9a      	subs	r2, r3, r2
   8493e:	1a1d      	subs	r5, r3, r0
   84940:	4295      	cmp	r5, r2
   84942:	bfa8      	it	ge
   84944:	4615      	movge	r5, r2
   84946:	2d00      	cmp	r5, #0
   84948:	dd0e      	ble.n	84968 <_svfprintf_r+0xdf8>
   8494a:	9926      	ldr	r1, [sp, #152]	; 0x98
   8494c:	4406      	add	r6, r0
   8494e:	3101      	adds	r1, #1
   84950:	442c      	add	r4, r5
   84952:	2907      	cmp	r1, #7
   84954:	f8c8 6000 	str.w	r6, [r8]
   84958:	9427      	str	r4, [sp, #156]	; 0x9c
   8495a:	f8c8 5004 	str.w	r5, [r8, #4]
   8495e:	9126      	str	r1, [sp, #152]	; 0x98
   84960:	f300 8216 	bgt.w	84d90 <_svfprintf_r+0x1220>
   84964:	f108 0808 	add.w	r8, r8, #8
   84968:	2d00      	cmp	r5, #0
   8496a:	bfb4      	ite	lt
   8496c:	4616      	movlt	r6, r2
   8496e:	1b56      	subge	r6, r2, r5
   84970:	2e00      	cmp	r6, #0
   84972:	f77f aaef 	ble.w	83f54 <_svfprintf_r+0x3e4>
   84976:	2e10      	cmp	r6, #16
   84978:	f340 82f3 	ble.w	84f62 <_svfprintf_r+0x13f2>
   8497c:	4622      	mov	r2, r4
   8497e:	2710      	movs	r7, #16
   84980:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84982:	4d3a      	ldr	r5, [pc, #232]	; (84a6c <_svfprintf_r+0xefc>)
   84984:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84988:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8498a:	e004      	b.n	84996 <_svfprintf_r+0xe26>
   8498c:	f108 0808 	add.w	r8, r8, #8
   84990:	3e10      	subs	r6, #16
   84992:	2e10      	cmp	r6, #16
   84994:	dda3      	ble.n	848de <_svfprintf_r+0xd6e>
   84996:	3301      	adds	r3, #1
   84998:	3210      	adds	r2, #16
   8499a:	2b07      	cmp	r3, #7
   8499c:	9227      	str	r2, [sp, #156]	; 0x9c
   8499e:	9326      	str	r3, [sp, #152]	; 0x98
   849a0:	e888 00a0 	stmia.w	r8, {r5, r7}
   849a4:	ddf2      	ble.n	8498c <_svfprintf_r+0xe1c>
   849a6:	aa25      	add	r2, sp, #148	; 0x94
   849a8:	4621      	mov	r1, r4
   849aa:	4658      	mov	r0, fp
   849ac:	f002 f9e4 	bl	86d78 <__ssprint_r>
   849b0:	2800      	cmp	r0, #0
   849b2:	f47f a9ba 	bne.w	83d2a <_svfprintf_r+0x1ba>
   849b6:	46c8      	mov	r8, r9
   849b8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   849ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
   849bc:	e7e8      	b.n	84990 <_svfprintf_r+0xe20>
   849be:	9b26      	ldr	r3, [sp, #152]	; 0x98
   849c0:	9819      	ldr	r0, [sp, #100]	; 0x64
   849c2:	3301      	adds	r3, #1
   849c4:	991a      	ldr	r1, [sp, #104]	; 0x68
   849c6:	4404      	add	r4, r0
   849c8:	2b07      	cmp	r3, #7
   849ca:	9427      	str	r4, [sp, #156]	; 0x9c
   849cc:	f8c8 1000 	str.w	r1, [r8]
   849d0:	f8c8 0004 	str.w	r0, [r8, #4]
   849d4:	9326      	str	r3, [sp, #152]	; 0x98
   849d6:	f300 81cf 	bgt.w	84d78 <_svfprintf_r+0x1208>
   849da:	f108 0808 	add.w	r8, r8, #8
   849de:	e7ab      	b.n	84938 <_svfprintf_r+0xdc8>
   849e0:	9b07      	ldr	r3, [sp, #28]
   849e2:	07da      	lsls	r2, r3, #31
   849e4:	f53f adad 	bmi.w	84542 <_svfprintf_r+0x9d2>
   849e8:	2301      	movs	r3, #1
   849ea:	9f26      	ldr	r7, [sp, #152]	; 0x98
   849ec:	441c      	add	r4, r3
   849ee:	441f      	add	r7, r3
   849f0:	2f07      	cmp	r7, #7
   849f2:	9427      	str	r4, [sp, #156]	; 0x9c
   849f4:	f8c8 6000 	str.w	r6, [r8]
   849f8:	9726      	str	r7, [sp, #152]	; 0x98
   849fa:	f8c8 3004 	str.w	r3, [r8, #4]
   849fe:	f77f add4 	ble.w	845aa <_svfprintf_r+0xa3a>
   84a02:	aa25      	add	r2, sp, #148	; 0x94
   84a04:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84a06:	980c      	ldr	r0, [sp, #48]	; 0x30
   84a08:	f002 f9b6 	bl	86d78 <__ssprint_r>
   84a0c:	2800      	cmp	r0, #0
   84a0e:	f47f a98c 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84a12:	46c8      	mov	r8, r9
   84a14:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84a16:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84a18:	e5c9      	b.n	845ae <_svfprintf_r+0xa3e>
   84a1a:	aa25      	add	r2, sp, #148	; 0x94
   84a1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84a1e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84a20:	f002 f9aa 	bl	86d78 <__ssprint_r>
   84a24:	2800      	cmp	r0, #0
   84a26:	f47f a980 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84a2a:	46c8      	mov	r8, r9
   84a2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84a2e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84a30:	e596      	b.n	84560 <_svfprintf_r+0x9f0>
   84a32:	aa25      	add	r2, sp, #148	; 0x94
   84a34:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84a36:	980c      	ldr	r0, [sp, #48]	; 0x30
   84a38:	f002 f99e 	bl	86d78 <__ssprint_r>
   84a3c:	2800      	cmp	r0, #0
   84a3e:	f47f a974 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84a42:	46c8      	mov	r8, r9
   84a44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84a46:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84a48:	e599      	b.n	8457e <_svfprintf_r+0xa0e>
   84a4a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84a4c:	3407      	adds	r4, #7
   84a4e:	f024 0407 	bic.w	r4, r4, #7
   84a52:	f104 0108 	add.w	r1, r4, #8
   84a56:	e9d4 2300 	ldrd	r2, r3, [r4]
   84a5a:	910f      	str	r1, [sp, #60]	; 0x3c
   84a5c:	4614      	mov	r4, r2
   84a5e:	461d      	mov	r5, r3
   84a60:	f7ff bb8f 	b.w	84182 <_svfprintf_r+0x612>
   84a64:	464e      	mov	r6, r9
   84a66:	f7ff b99f 	b.w	83da8 <_svfprintf_r+0x238>
   84a6a:	bf00      	nop
   84a6c:	000890fc 	.word	0x000890fc
   84a70:	aa25      	add	r2, sp, #148	; 0x94
   84a72:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84a74:	980c      	ldr	r0, [sp, #48]	; 0x30
   84a76:	f002 f97f 	bl	86d78 <__ssprint_r>
   84a7a:	2800      	cmp	r0, #0
   84a7c:	f47f a955 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84a80:	46c8      	mov	r8, r9
   84a82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84a84:	f7ff ba16 	b.w	83eb4 <_svfprintf_r+0x344>
   84a88:	9c15      	ldr	r4, [sp, #84]	; 0x54
   84a8a:	4622      	mov	r2, r4
   84a8c:	4620      	mov	r0, r4
   84a8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
   84a90:	4623      	mov	r3, r4
   84a92:	4621      	mov	r1, r4
   84a94:	f003 fa2e 	bl	87ef4 <__aeabi_dcmpun>
   84a98:	2800      	cmp	r0, #0
   84a9a:	f040 8273 	bne.w	84f84 <_svfprintf_r+0x1414>
   84a9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84aa0:	3301      	adds	r3, #1
   84aa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84aa4:	f023 0320 	bic.w	r3, r3, #32
   84aa8:	930e      	str	r3, [sp, #56]	; 0x38
   84aaa:	f000 819c 	beq.w	84de6 <_svfprintf_r+0x1276>
   84aae:	2b47      	cmp	r3, #71	; 0x47
   84ab0:	f000 80d6 	beq.w	84c60 <_svfprintf_r+0x10f0>
   84ab4:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   84ab8:	9307      	str	r3, [sp, #28]
   84aba:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84abc:	1e1f      	subs	r7, r3, #0
   84abe:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84ac0:	9308      	str	r3, [sp, #32]
   84ac2:	bfb7      	itett	lt
   84ac4:	463b      	movlt	r3, r7
   84ac6:	2300      	movge	r3, #0
   84ac8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   84acc:	232d      	movlt	r3, #45	; 0x2d
   84ace:	9310      	str	r3, [sp, #64]	; 0x40
   84ad0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84ad2:	2b66      	cmp	r3, #102	; 0x66
   84ad4:	f000 8190 	beq.w	84df8 <_svfprintf_r+0x1288>
   84ad8:	2b46      	cmp	r3, #70	; 0x46
   84ada:	f000 80a4 	beq.w	84c26 <_svfprintf_r+0x10b6>
   84ade:	2002      	movs	r0, #2
   84ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84ae2:	a923      	add	r1, sp, #140	; 0x8c
   84ae4:	2b45      	cmp	r3, #69	; 0x45
   84ae6:	bf0a      	itet	eq
   84ae8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   84aea:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   84aec:	1c5d      	addeq	r5, r3, #1
   84aee:	e88d 0021 	stmia.w	sp, {r0, r5}
   84af2:	9104      	str	r1, [sp, #16]
   84af4:	a820      	add	r0, sp, #128	; 0x80
   84af6:	a91f      	add	r1, sp, #124	; 0x7c
   84af8:	463b      	mov	r3, r7
   84afa:	9003      	str	r0, [sp, #12]
   84afc:	9a08      	ldr	r2, [sp, #32]
   84afe:	9102      	str	r1, [sp, #8]
   84b00:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b02:	f000 fb59 	bl	851b8 <_dtoa_r>
   84b06:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84b08:	4606      	mov	r6, r0
   84b0a:	2b67      	cmp	r3, #103	; 0x67
   84b0c:	f040 81ba 	bne.w	84e84 <_svfprintf_r+0x1314>
   84b10:	f01b 0f01 	tst.w	fp, #1
   84b14:	f000 8223 	beq.w	84f5e <_svfprintf_r+0x13ee>
   84b18:	1974      	adds	r4, r6, r5
   84b1a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84b1c:	9808      	ldr	r0, [sp, #32]
   84b1e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   84b20:	4639      	mov	r1, r7
   84b22:	f003 f9b5 	bl	87e90 <__aeabi_dcmpeq>
   84b26:	2800      	cmp	r0, #0
   84b28:	f040 8124 	bne.w	84d74 <_svfprintf_r+0x1204>
   84b2c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84b2e:	42a3      	cmp	r3, r4
   84b30:	d206      	bcs.n	84b40 <_svfprintf_r+0xfd0>
   84b32:	2130      	movs	r1, #48	; 0x30
   84b34:	1c5a      	adds	r2, r3, #1
   84b36:	9223      	str	r2, [sp, #140]	; 0x8c
   84b38:	7019      	strb	r1, [r3, #0]
   84b3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84b3c:	429c      	cmp	r4, r3
   84b3e:	d8f9      	bhi.n	84b34 <_svfprintf_r+0xfc4>
   84b40:	1b9b      	subs	r3, r3, r6
   84b42:	9313      	str	r3, [sp, #76]	; 0x4c
   84b44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84b46:	2b47      	cmp	r3, #71	; 0x47
   84b48:	f000 80a2 	beq.w	84c90 <_svfprintf_r+0x1120>
   84b4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84b4e:	2b65      	cmp	r3, #101	; 0x65
   84b50:	f340 81a7 	ble.w	84ea2 <_svfprintf_r+0x1332>
   84b54:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84b56:	2b66      	cmp	r3, #102	; 0x66
   84b58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84b5a:	9312      	str	r3, [sp, #72]	; 0x48
   84b5c:	f000 8171 	beq.w	84e42 <_svfprintf_r+0x12d2>
   84b60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84b62:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84b64:	4619      	mov	r1, r3
   84b66:	4291      	cmp	r1, r2
   84b68:	f300 815d 	bgt.w	84e26 <_svfprintf_r+0x12b6>
   84b6c:	f01b 0f01 	tst.w	fp, #1
   84b70:	f040 81f0 	bne.w	84f54 <_svfprintf_r+0x13e4>
   84b74:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   84b78:	9308      	str	r3, [sp, #32]
   84b7a:	2367      	movs	r3, #103	; 0x67
   84b7c:	920e      	str	r2, [sp, #56]	; 0x38
   84b7e:	9311      	str	r3, [sp, #68]	; 0x44
   84b80:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84b82:	2b00      	cmp	r3, #0
   84b84:	d17d      	bne.n	84c82 <_svfprintf_r+0x1112>
   84b86:	930a      	str	r3, [sp, #40]	; 0x28
   84b88:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84b8c:	f7ff b914 	b.w	83db8 <_svfprintf_r+0x248>
   84b90:	f024 0407 	bic.w	r4, r4, #7
   84b94:	6823      	ldr	r3, [r4, #0]
   84b96:	9315      	str	r3, [sp, #84]	; 0x54
   84b98:	6863      	ldr	r3, [r4, #4]
   84b9a:	9314      	str	r3, [sp, #80]	; 0x50
   84b9c:	f104 0308 	add.w	r3, r4, #8
   84ba0:	930f      	str	r3, [sp, #60]	; 0x3c
   84ba2:	f7ff bb2f 	b.w	84204 <_svfprintf_r+0x694>
   84ba6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84ba8:	6813      	ldr	r3, [r2, #0]
   84baa:	3204      	adds	r2, #4
   84bac:	920f      	str	r2, [sp, #60]	; 0x3c
   84bae:	9a09      	ldr	r2, [sp, #36]	; 0x24
   84bb0:	601a      	str	r2, [r3, #0]
   84bb2:	f7ff b804 	b.w	83bbe <_svfprintf_r+0x4e>
   84bb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84bb8:	4daf      	ldr	r5, [pc, #700]	; (84e78 <_svfprintf_r+0x1308>)
   84bba:	f7ff b9ad 	b.w	83f18 <_svfprintf_r+0x3a8>
   84bbe:	aa25      	add	r2, sp, #148	; 0x94
   84bc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84bc2:	980c      	ldr	r0, [sp, #48]	; 0x30
   84bc4:	f002 f8d8 	bl	86d78 <__ssprint_r>
   84bc8:	2800      	cmp	r0, #0
   84bca:	f47f a8ae 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84bce:	46c8      	mov	r8, r9
   84bd0:	e431      	b.n	84436 <_svfprintf_r+0x8c6>
   84bd2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84bd4:	4613      	mov	r3, r2
   84bd6:	3304      	adds	r3, #4
   84bd8:	930f      	str	r3, [sp, #60]	; 0x3c
   84bda:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84bdc:	6811      	ldr	r1, [r2, #0]
   84bde:	17dd      	asrs	r5, r3, #31
   84be0:	461a      	mov	r2, r3
   84be2:	462b      	mov	r3, r5
   84be4:	e9c1 2300 	strd	r2, r3, [r1]
   84be8:	f7fe bfe9 	b.w	83bbe <_svfprintf_r+0x4e>
   84bec:	aa25      	add	r2, sp, #148	; 0x94
   84bee:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84bf0:	980c      	ldr	r0, [sp, #48]	; 0x30
   84bf2:	f002 f8c1 	bl	86d78 <__ssprint_r>
   84bf6:	2800      	cmp	r0, #0
   84bf8:	f47f a897 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84bfc:	46c8      	mov	r8, r9
   84bfe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84c00:	e432      	b.n	84468 <_svfprintf_r+0x8f8>
   84c02:	f108 0808 	add.w	r8, r8, #8
   84c06:	e52f      	b.n	84668 <_svfprintf_r+0xaf8>
   84c08:	2140      	movs	r1, #64	; 0x40
   84c0a:	980c      	ldr	r0, [sp, #48]	; 0x30
   84c0c:	f001 fa26 	bl	8605c <_malloc_r>
   84c10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84c12:	6010      	str	r0, [r2, #0]
   84c14:	6110      	str	r0, [r2, #16]
   84c16:	2800      	cmp	r0, #0
   84c18:	f000 8214 	beq.w	85044 <_svfprintf_r+0x14d4>
   84c1c:	2340      	movs	r3, #64	; 0x40
   84c1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84c20:	6153      	str	r3, [r2, #20]
   84c22:	f7fe bfbc 	b.w	83b9e <_svfprintf_r+0x2e>
   84c26:	2003      	movs	r0, #3
   84c28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84c2a:	a923      	add	r1, sp, #140	; 0x8c
   84c2c:	e88d 0011 	stmia.w	sp, {r0, r4}
   84c30:	9104      	str	r1, [sp, #16]
   84c32:	a820      	add	r0, sp, #128	; 0x80
   84c34:	a91f      	add	r1, sp, #124	; 0x7c
   84c36:	9003      	str	r0, [sp, #12]
   84c38:	9a08      	ldr	r2, [sp, #32]
   84c3a:	463b      	mov	r3, r7
   84c3c:	9102      	str	r1, [sp, #8]
   84c3e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84c40:	f000 faba 	bl	851b8 <_dtoa_r>
   84c44:	4625      	mov	r5, r4
   84c46:	4606      	mov	r6, r0
   84c48:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84c4a:	1974      	adds	r4, r6, r5
   84c4c:	2b46      	cmp	r3, #70	; 0x46
   84c4e:	f47f af64 	bne.w	84b1a <_svfprintf_r+0xfaa>
   84c52:	7833      	ldrb	r3, [r6, #0]
   84c54:	2b30      	cmp	r3, #48	; 0x30
   84c56:	f000 8187 	beq.w	84f68 <_svfprintf_r+0x13f8>
   84c5a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   84c5c:	442c      	add	r4, r5
   84c5e:	e75c      	b.n	84b1a <_svfprintf_r+0xfaa>
   84c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84c62:	2b00      	cmp	r3, #0
   84c64:	bf08      	it	eq
   84c66:	2301      	moveq	r3, #1
   84c68:	930a      	str	r3, [sp, #40]	; 0x28
   84c6a:	e723      	b.n	84ab4 <_svfprintf_r+0xf44>
   84c6c:	4630      	mov	r0, r6
   84c6e:	950a      	str	r5, [sp, #40]	; 0x28
   84c70:	f7fe fe6c 	bl	8394c <strlen>
   84c74:	940f      	str	r4, [sp, #60]	; 0x3c
   84c76:	900e      	str	r0, [sp, #56]	; 0x38
   84c78:	f8cd b01c 	str.w	fp, [sp, #28]
   84c7c:	4603      	mov	r3, r0
   84c7e:	f7ff b9e7 	b.w	84050 <_svfprintf_r+0x4e0>
   84c82:	272d      	movs	r7, #45	; 0x2d
   84c84:	2300      	movs	r3, #0
   84c86:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   84c8a:	930a      	str	r3, [sp, #40]	; 0x28
   84c8c:	f7ff b895 	b.w	83dba <_svfprintf_r+0x24a>
   84c90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84c92:	461a      	mov	r2, r3
   84c94:	9312      	str	r3, [sp, #72]	; 0x48
   84c96:	3303      	adds	r3, #3
   84c98:	db04      	blt.n	84ca4 <_svfprintf_r+0x1134>
   84c9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84c9c:	4619      	mov	r1, r3
   84c9e:	4291      	cmp	r1, r2
   84ca0:	f6bf af5e 	bge.w	84b60 <_svfprintf_r+0xff0>
   84ca4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84ca6:	3b02      	subs	r3, #2
   84ca8:	9311      	str	r3, [sp, #68]	; 0x44
   84caa:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84cac:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   84cb0:	3b01      	subs	r3, #1
   84cb2:	2b00      	cmp	r3, #0
   84cb4:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   84cb8:	bfb4      	ite	lt
   84cba:	222d      	movlt	r2, #45	; 0x2d
   84cbc:	222b      	movge	r2, #43	; 0x2b
   84cbe:	931f      	str	r3, [sp, #124]	; 0x7c
   84cc0:	bfb8      	it	lt
   84cc2:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   84cc4:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   84cc8:	bfb8      	it	lt
   84cca:	f1c3 0301 	rsblt	r3, r3, #1
   84cce:	2b09      	cmp	r3, #9
   84cd0:	f340 811f 	ble.w	84f12 <_svfprintf_r+0x13a2>
   84cd4:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   84cd8:	4601      	mov	r1, r0
   84cda:	4c68      	ldr	r4, [pc, #416]	; (84e7c <_svfprintf_r+0x130c>)
   84cdc:	e000      	b.n	84ce0 <_svfprintf_r+0x1170>
   84cde:	4611      	mov	r1, r2
   84ce0:	fb84 5203 	smull	r5, r2, r4, r3
   84ce4:	17dd      	asrs	r5, r3, #31
   84ce6:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   84cea:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   84cee:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   84cf2:	3230      	adds	r2, #48	; 0x30
   84cf4:	2d09      	cmp	r5, #9
   84cf6:	f801 2c01 	strb.w	r2, [r1, #-1]
   84cfa:	462b      	mov	r3, r5
   84cfc:	f101 32ff 	add.w	r2, r1, #4294967295
   84d00:	dced      	bgt.n	84cde <_svfprintf_r+0x116e>
   84d02:	3330      	adds	r3, #48	; 0x30
   84d04:	3902      	subs	r1, #2
   84d06:	b2dc      	uxtb	r4, r3
   84d08:	4288      	cmp	r0, r1
   84d0a:	f802 4c01 	strb.w	r4, [r2, #-1]
   84d0e:	f240 8192 	bls.w	85036 <_svfprintf_r+0x14c6>
   84d12:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   84d16:	4613      	mov	r3, r2
   84d18:	e001      	b.n	84d1e <_svfprintf_r+0x11ae>
   84d1a:	f813 4b01 	ldrb.w	r4, [r3], #1
   84d1e:	4283      	cmp	r3, r0
   84d20:	f801 4b01 	strb.w	r4, [r1], #1
   84d24:	d1f9      	bne.n	84d1a <_svfprintf_r+0x11aa>
   84d26:	3301      	adds	r3, #1
   84d28:	1a9b      	subs	r3, r3, r2
   84d2a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   84d2e:	4413      	add	r3, r2
   84d30:	aa21      	add	r2, sp, #132	; 0x84
   84d32:	1a9b      	subs	r3, r3, r2
   84d34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84d36:	931b      	str	r3, [sp, #108]	; 0x6c
   84d38:	2a01      	cmp	r2, #1
   84d3a:	4413      	add	r3, r2
   84d3c:	930e      	str	r3, [sp, #56]	; 0x38
   84d3e:	f340 8148 	ble.w	84fd2 <_svfprintf_r+0x1462>
   84d42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84d44:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84d46:	4413      	add	r3, r2
   84d48:	930e      	str	r3, [sp, #56]	; 0x38
   84d4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84d4e:	9308      	str	r3, [sp, #32]
   84d50:	2300      	movs	r3, #0
   84d52:	9312      	str	r3, [sp, #72]	; 0x48
   84d54:	e714      	b.n	84b80 <_svfprintf_r+0x1010>
   84d56:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d58:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84d5a:	f7ff b876 	b.w	83e4a <_svfprintf_r+0x2da>
   84d5e:	aa25      	add	r2, sp, #148	; 0x94
   84d60:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d62:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d64:	f002 f808 	bl	86d78 <__ssprint_r>
   84d68:	2800      	cmp	r0, #0
   84d6a:	f47e afde 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84d6e:	46c8      	mov	r8, r9
   84d70:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d72:	e4fb      	b.n	8476c <_svfprintf_r+0xbfc>
   84d74:	4623      	mov	r3, r4
   84d76:	e6e3      	b.n	84b40 <_svfprintf_r+0xfd0>
   84d78:	aa25      	add	r2, sp, #148	; 0x94
   84d7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d7c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d7e:	f001 fffb 	bl	86d78 <__ssprint_r>
   84d82:	2800      	cmp	r0, #0
   84d84:	f47e afd1 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84d88:	46c8      	mov	r8, r9
   84d8a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84d8c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d8e:	e5d3      	b.n	84938 <_svfprintf_r+0xdc8>
   84d90:	aa25      	add	r2, sp, #148	; 0x94
   84d92:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d94:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d96:	f001 ffef 	bl	86d78 <__ssprint_r>
   84d9a:	2800      	cmp	r0, #0
   84d9c:	f47e afc5 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84da0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84da2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84da4:	46c8      	mov	r8, r9
   84da6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84da8:	1a9a      	subs	r2, r3, r2
   84daa:	e5dd      	b.n	84968 <_svfprintf_r+0xdf8>
   84dac:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84dae:	f7ff b8fe 	b.w	83fae <_svfprintf_r+0x43e>
   84db2:	aa25      	add	r2, sp, #148	; 0x94
   84db4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84db6:	980c      	ldr	r0, [sp, #48]	; 0x30
   84db8:	f001 ffde 	bl	86d78 <__ssprint_r>
   84dbc:	2800      	cmp	r0, #0
   84dbe:	f47e afb4 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84dc2:	46c8      	mov	r8, r9
   84dc4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84dc6:	e5b0      	b.n	8492a <_svfprintf_r+0xdba>
   84dc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84dca:	4637      	mov	r7, r6
   84dcc:	2b06      	cmp	r3, #6
   84dce:	bf28      	it	cs
   84dd0:	2306      	movcs	r3, #6
   84dd2:	960a      	str	r6, [sp, #40]	; 0x28
   84dd4:	9612      	str	r6, [sp, #72]	; 0x48
   84dd6:	9308      	str	r3, [sp, #32]
   84dd8:	940f      	str	r4, [sp, #60]	; 0x3c
   84dda:	f8cd b01c 	str.w	fp, [sp, #28]
   84dde:	930e      	str	r3, [sp, #56]	; 0x38
   84de0:	4e27      	ldr	r6, [pc, #156]	; (84e80 <_svfprintf_r+0x1310>)
   84de2:	f7fe bfe9 	b.w	83db8 <_svfprintf_r+0x248>
   84de6:	2306      	movs	r3, #6
   84de8:	930a      	str	r3, [sp, #40]	; 0x28
   84dea:	e663      	b.n	84ab4 <_svfprintf_r+0xf44>
   84dec:	232d      	movs	r3, #45	; 0x2d
   84dee:	461f      	mov	r7, r3
   84df0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84df4:	f7ff ba28 	b.w	84248 <_svfprintf_r+0x6d8>
   84df8:	2003      	movs	r0, #3
   84dfa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84dfc:	a923      	add	r1, sp, #140	; 0x8c
   84dfe:	e88d 0011 	stmia.w	sp, {r0, r4}
   84e02:	9104      	str	r1, [sp, #16]
   84e04:	a820      	add	r0, sp, #128	; 0x80
   84e06:	a91f      	add	r1, sp, #124	; 0x7c
   84e08:	9003      	str	r0, [sp, #12]
   84e0a:	9a08      	ldr	r2, [sp, #32]
   84e0c:	463b      	mov	r3, r7
   84e0e:	9102      	str	r1, [sp, #8]
   84e10:	980c      	ldr	r0, [sp, #48]	; 0x30
   84e12:	f000 f9d1 	bl	851b8 <_dtoa_r>
   84e16:	4625      	mov	r5, r4
   84e18:	4606      	mov	r6, r0
   84e1a:	1904      	adds	r4, r0, r4
   84e1c:	e719      	b.n	84c52 <_svfprintf_r+0x10e2>
   84e1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84e20:	4d15      	ldr	r5, [pc, #84]	; (84e78 <_svfprintf_r+0x1308>)
   84e22:	f7ff bb7e 	b.w	84522 <_svfprintf_r+0x9b2>
   84e26:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84e28:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84e2a:	4413      	add	r3, r2
   84e2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84e2e:	930e      	str	r3, [sp, #56]	; 0x38
   84e30:	2a00      	cmp	r2, #0
   84e32:	f340 80c7 	ble.w	84fc4 <_svfprintf_r+0x1454>
   84e36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84e3a:	9308      	str	r3, [sp, #32]
   84e3c:	2367      	movs	r3, #103	; 0x67
   84e3e:	9311      	str	r3, [sp, #68]	; 0x44
   84e40:	e69e      	b.n	84b80 <_svfprintf_r+0x1010>
   84e42:	2b00      	cmp	r3, #0
   84e44:	f340 80e1 	ble.w	8500a <_svfprintf_r+0x149a>
   84e48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84e4a:	2a00      	cmp	r2, #0
   84e4c:	f040 80b0 	bne.w	84fb0 <_svfprintf_r+0x1440>
   84e50:	f01b 0f01 	tst.w	fp, #1
   84e54:	f040 80ac 	bne.w	84fb0 <_svfprintf_r+0x1440>
   84e58:	9308      	str	r3, [sp, #32]
   84e5a:	930e      	str	r3, [sp, #56]	; 0x38
   84e5c:	e690      	b.n	84b80 <_svfprintf_r+0x1010>
   84e5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84e60:	940f      	str	r4, [sp, #60]	; 0x3c
   84e62:	9308      	str	r3, [sp, #32]
   84e64:	930e      	str	r3, [sp, #56]	; 0x38
   84e66:	900a      	str	r0, [sp, #40]	; 0x28
   84e68:	f8cd b01c 	str.w	fp, [sp, #28]
   84e6c:	9012      	str	r0, [sp, #72]	; 0x48
   84e6e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84e72:	f7fe bfa1 	b.w	83db8 <_svfprintf_r+0x248>
   84e76:	bf00      	nop
   84e78:	000890fc 	.word	0x000890fc
   84e7c:	66666667 	.word	0x66666667
   84e80:	000890e0 	.word	0x000890e0
   84e84:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84e86:	2b47      	cmp	r3, #71	; 0x47
   84e88:	f47f ae46 	bne.w	84b18 <_svfprintf_r+0xfa8>
   84e8c:	f01b 0f01 	tst.w	fp, #1
   84e90:	f47f aeda 	bne.w	84c48 <_svfprintf_r+0x10d8>
   84e94:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84e96:	1b9b      	subs	r3, r3, r6
   84e98:	9313      	str	r3, [sp, #76]	; 0x4c
   84e9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84e9c:	2b47      	cmp	r3, #71	; 0x47
   84e9e:	f43f aef7 	beq.w	84c90 <_svfprintf_r+0x1120>
   84ea2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84ea4:	9312      	str	r3, [sp, #72]	; 0x48
   84ea6:	e700      	b.n	84caa <_svfprintf_r+0x113a>
   84ea8:	2000      	movs	r0, #0
   84eaa:	900a      	str	r0, [sp, #40]	; 0x28
   84eac:	f7fe bebc 	b.w	83c28 <_svfprintf_r+0xb8>
   84eb0:	424f      	negs	r7, r1
   84eb2:	3110      	adds	r1, #16
   84eb4:	da35      	bge.n	84f22 <_svfprintf_r+0x13b2>
   84eb6:	2410      	movs	r4, #16
   84eb8:	4d6a      	ldr	r5, [pc, #424]	; (85064 <_svfprintf_r+0x14f4>)
   84eba:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84ebe:	e004      	b.n	84eca <_svfprintf_r+0x135a>
   84ec0:	f108 0808 	add.w	r8, r8, #8
   84ec4:	3f10      	subs	r7, #16
   84ec6:	2f10      	cmp	r7, #16
   84ec8:	dd2c      	ble.n	84f24 <_svfprintf_r+0x13b4>
   84eca:	3301      	adds	r3, #1
   84ecc:	3210      	adds	r2, #16
   84ece:	2b07      	cmp	r3, #7
   84ed0:	9227      	str	r2, [sp, #156]	; 0x9c
   84ed2:	9326      	str	r3, [sp, #152]	; 0x98
   84ed4:	f8c8 5000 	str.w	r5, [r8]
   84ed8:	f8c8 4004 	str.w	r4, [r8, #4]
   84edc:	ddf0      	ble.n	84ec0 <_svfprintf_r+0x1350>
   84ede:	aa25      	add	r2, sp, #148	; 0x94
   84ee0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84ee2:	4658      	mov	r0, fp
   84ee4:	f001 ff48 	bl	86d78 <__ssprint_r>
   84ee8:	2800      	cmp	r0, #0
   84eea:	f47e af1e 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84eee:	46c8      	mov	r8, r9
   84ef0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84ef2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84ef4:	e7e6      	b.n	84ec4 <_svfprintf_r+0x1354>
   84ef6:	aa25      	add	r2, sp, #148	; 0x94
   84ef8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84efa:	980c      	ldr	r0, [sp, #48]	; 0x30
   84efc:	f001 ff3c 	bl	86d78 <__ssprint_r>
   84f00:	2800      	cmp	r0, #0
   84f02:	f47e af12 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84f06:	46c8      	mov	r8, r9
   84f08:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84f0a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84f0e:	f7ff bbc3 	b.w	84698 <_svfprintf_r+0xb28>
   84f12:	2230      	movs	r2, #48	; 0x30
   84f14:	4413      	add	r3, r2
   84f16:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   84f1a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   84f1e:	ab22      	add	r3, sp, #136	; 0x88
   84f20:	e706      	b.n	84d30 <_svfprintf_r+0x11c0>
   84f22:	4d50      	ldr	r5, [pc, #320]	; (85064 <_svfprintf_r+0x14f4>)
   84f24:	3301      	adds	r3, #1
   84f26:	443a      	add	r2, r7
   84f28:	2b07      	cmp	r3, #7
   84f2a:	e888 00a0 	stmia.w	r8, {r5, r7}
   84f2e:	9227      	str	r2, [sp, #156]	; 0x9c
   84f30:	9326      	str	r3, [sp, #152]	; 0x98
   84f32:	f108 0808 	add.w	r8, r8, #8
   84f36:	f77f abb2 	ble.w	8469e <_svfprintf_r+0xb2e>
   84f3a:	aa25      	add	r2, sp, #148	; 0x94
   84f3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f3e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84f40:	f001 ff1a 	bl	86d78 <__ssprint_r>
   84f44:	2800      	cmp	r0, #0
   84f46:	f47e aef0 	bne.w	83d2a <_svfprintf_r+0x1ba>
   84f4a:	46c8      	mov	r8, r9
   84f4c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84f4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84f50:	f7ff bba5 	b.w	8469e <_svfprintf_r+0xb2e>
   84f54:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84f56:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84f58:	4413      	add	r3, r2
   84f5a:	930e      	str	r3, [sp, #56]	; 0x38
   84f5c:	e76b      	b.n	84e36 <_svfprintf_r+0x12c6>
   84f5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84f60:	e5ee      	b.n	84b40 <_svfprintf_r+0xfd0>
   84f62:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84f64:	4d3f      	ldr	r5, [pc, #252]	; (85064 <_svfprintf_r+0x14f4>)
   84f66:	e4bb      	b.n	848e0 <_svfprintf_r+0xd70>
   84f68:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84f6a:	9808      	ldr	r0, [sp, #32]
   84f6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   84f6e:	4639      	mov	r1, r7
   84f70:	f002 ff8e 	bl	87e90 <__aeabi_dcmpeq>
   84f74:	2800      	cmp	r0, #0
   84f76:	f47f ae70 	bne.w	84c5a <_svfprintf_r+0x10ea>
   84f7a:	f1c5 0501 	rsb	r5, r5, #1
   84f7e:	951f      	str	r5, [sp, #124]	; 0x7c
   84f80:	442c      	add	r4, r5
   84f82:	e5ca      	b.n	84b1a <_svfprintf_r+0xfaa>
   84f84:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84f86:	4e38      	ldr	r6, [pc, #224]	; (85068 <_svfprintf_r+0x14f8>)
   84f88:	2b00      	cmp	r3, #0
   84f8a:	bfbe      	ittt	lt
   84f8c:	232d      	movlt	r3, #45	; 0x2d
   84f8e:	461f      	movlt	r7, r3
   84f90:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   84f94:	f04f 0303 	mov.w	r3, #3
   84f98:	461a      	mov	r2, r3
   84f9a:	9308      	str	r3, [sp, #32]
   84f9c:	f04f 0300 	mov.w	r3, #0
   84fa0:	bfa8      	it	ge
   84fa2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   84fa6:	4619      	mov	r1, r3
   84fa8:	930a      	str	r3, [sp, #40]	; 0x28
   84faa:	4b30      	ldr	r3, [pc, #192]	; (8506c <_svfprintf_r+0x14fc>)
   84fac:	f7ff b954 	b.w	84258 <_svfprintf_r+0x6e8>
   84fb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84fb2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84fb4:	4413      	add	r3, r2
   84fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84fb8:	441a      	add	r2, r3
   84fba:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   84fbe:	920e      	str	r2, [sp, #56]	; 0x38
   84fc0:	9308      	str	r3, [sp, #32]
   84fc2:	e5dd      	b.n	84b80 <_svfprintf_r+0x1010>
   84fc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84fc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84fc8:	f1c3 0301 	rsb	r3, r3, #1
   84fcc:	441a      	add	r2, r3
   84fce:	4613      	mov	r3, r2
   84fd0:	e7c3      	b.n	84f5a <_svfprintf_r+0x13ea>
   84fd2:	f01b 0301 	ands.w	r3, fp, #1
   84fd6:	9312      	str	r3, [sp, #72]	; 0x48
   84fd8:	f47f aeb3 	bne.w	84d42 <_svfprintf_r+0x11d2>
   84fdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84fde:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84fe2:	9308      	str	r3, [sp, #32]
   84fe4:	e5cc      	b.n	84b80 <_svfprintf_r+0x1010>
   84fe6:	4d1f      	ldr	r5, [pc, #124]	; (85064 <_svfprintf_r+0x14f4>)
   84fe8:	e43c      	b.n	84864 <_svfprintf_r+0xcf4>
   84fea:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84fec:	4d1d      	ldr	r5, [pc, #116]	; (85064 <_svfprintf_r+0x14f4>)
   84fee:	e491      	b.n	84914 <_svfprintf_r+0xda4>
   84ff0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   84ff2:	f89a 3001 	ldrb.w	r3, [sl, #1]
   84ff6:	6828      	ldr	r0, [r5, #0]
   84ff8:	46a2      	mov	sl, r4
   84ffa:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   84ffe:	900a      	str	r0, [sp, #40]	; 0x28
   85000:	4628      	mov	r0, r5
   85002:	3004      	adds	r0, #4
   85004:	900f      	str	r0, [sp, #60]	; 0x3c
   85006:	f7fe be0d 	b.w	83c24 <_svfprintf_r+0xb4>
   8500a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8500c:	b913      	cbnz	r3, 85014 <_svfprintf_r+0x14a4>
   8500e:	f01b 0f01 	tst.w	fp, #1
   85012:	d002      	beq.n	8501a <_svfprintf_r+0x14aa>
   85014:	9b19      	ldr	r3, [sp, #100]	; 0x64
   85016:	3301      	adds	r3, #1
   85018:	e7cd      	b.n	84fb6 <_svfprintf_r+0x1446>
   8501a:	2301      	movs	r3, #1
   8501c:	e71c      	b.n	84e58 <_svfprintf_r+0x12e8>
   8501e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85022:	f7ff b980 	b.w	84326 <_svfprintf_r+0x7b6>
   85026:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8502a:	f7ff b93a 	b.w	842a2 <_svfprintf_r+0x732>
   8502e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85032:	f7ff b84f 	b.w	840d4 <_svfprintf_r+0x564>
   85036:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   8503a:	e679      	b.n	84d30 <_svfprintf_r+0x11c0>
   8503c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85040:	f7ff b9b2 	b.w	843a8 <_svfprintf_r+0x838>
   85044:	f04f 32ff 	mov.w	r2, #4294967295
   85048:	230c      	movs	r3, #12
   8504a:	9209      	str	r2, [sp, #36]	; 0x24
   8504c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8504e:	6013      	str	r3, [r2, #0]
   85050:	f7fe be74 	b.w	83d3c <_svfprintf_r+0x1cc>
   85054:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85058:	f7ff b8c4 	b.w	841e4 <_svfprintf_r+0x674>
   8505c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85060:	f7ff b878 	b.w	84154 <_svfprintf_r+0x5e4>
   85064:	000890fc 	.word	0x000890fc
   85068:	000890b4 	.word	0x000890b4
   8506c:	000890b0 	.word	0x000890b0

00085070 <register_fini>:
   85070:	4b02      	ldr	r3, [pc, #8]	; (8507c <register_fini+0xc>)
   85072:	b113      	cbz	r3, 8507a <register_fini+0xa>
   85074:	4802      	ldr	r0, [pc, #8]	; (85080 <register_fini+0x10>)
   85076:	f000 b805 	b.w	85084 <atexit>
   8507a:	4770      	bx	lr
   8507c:	00000000 	.word	0x00000000
   85080:	00085ffd 	.word	0x00085ffd

00085084 <atexit>:
   85084:	2300      	movs	r3, #0
   85086:	4601      	mov	r1, r0
   85088:	461a      	mov	r2, r3
   8508a:	4618      	mov	r0, r3
   8508c:	f001 befe 	b.w	86e8c <__register_exitproc>

00085090 <quorem>:
   85090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85094:	6903      	ldr	r3, [r0, #16]
   85096:	690f      	ldr	r7, [r1, #16]
   85098:	b083      	sub	sp, #12
   8509a:	429f      	cmp	r7, r3
   8509c:	f300 8088 	bgt.w	851b0 <quorem+0x120>
   850a0:	3f01      	subs	r7, #1
   850a2:	f101 0614 	add.w	r6, r1, #20
   850a6:	f100 0a14 	add.w	sl, r0, #20
   850aa:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   850ae:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   850b2:	3301      	adds	r3, #1
   850b4:	fbb2 f8f3 	udiv	r8, r2, r3
   850b8:	00bb      	lsls	r3, r7, #2
   850ba:	9300      	str	r3, [sp, #0]
   850bc:	eb06 0903 	add.w	r9, r6, r3
   850c0:	4453      	add	r3, sl
   850c2:	9301      	str	r3, [sp, #4]
   850c4:	f1b8 0f00 	cmp.w	r8, #0
   850c8:	d03b      	beq.n	85142 <quorem+0xb2>
   850ca:	2300      	movs	r3, #0
   850cc:	46b4      	mov	ip, r6
   850ce:	461c      	mov	r4, r3
   850d0:	46d6      	mov	lr, sl
   850d2:	f85c 2b04 	ldr.w	r2, [ip], #4
   850d6:	f8de 5000 	ldr.w	r5, [lr]
   850da:	fa1f fb82 	uxth.w	fp, r2
   850de:	fb08 330b 	mla	r3, r8, fp, r3
   850e2:	0c12      	lsrs	r2, r2, #16
   850e4:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   850e8:	fb08 bb02 	mla	fp, r8, r2, fp
   850ec:	b29a      	uxth	r2, r3
   850ee:	1aa2      	subs	r2, r4, r2
   850f0:	b2ab      	uxth	r3, r5
   850f2:	fa1f f48b 	uxth.w	r4, fp
   850f6:	441a      	add	r2, r3
   850f8:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   850fc:	eb04 4422 	add.w	r4, r4, r2, asr #16
   85100:	b292      	uxth	r2, r2
   85102:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   85106:	45e1      	cmp	r9, ip
   85108:	f84e 2b04 	str.w	r2, [lr], #4
   8510c:	ea4f 4424 	mov.w	r4, r4, asr #16
   85110:	ea4f 431b 	mov.w	r3, fp, lsr #16
   85114:	d2dd      	bcs.n	850d2 <quorem+0x42>
   85116:	9b00      	ldr	r3, [sp, #0]
   85118:	f85a 3003 	ldr.w	r3, [sl, r3]
   8511c:	b98b      	cbnz	r3, 85142 <quorem+0xb2>
   8511e:	9c01      	ldr	r4, [sp, #4]
   85120:	1f23      	subs	r3, r4, #4
   85122:	459a      	cmp	sl, r3
   85124:	d20c      	bcs.n	85140 <quorem+0xb0>
   85126:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8512a:	b94b      	cbnz	r3, 85140 <quorem+0xb0>
   8512c:	f1a4 0308 	sub.w	r3, r4, #8
   85130:	e002      	b.n	85138 <quorem+0xa8>
   85132:	681a      	ldr	r2, [r3, #0]
   85134:	3b04      	subs	r3, #4
   85136:	b91a      	cbnz	r2, 85140 <quorem+0xb0>
   85138:	459a      	cmp	sl, r3
   8513a:	f107 37ff 	add.w	r7, r7, #4294967295
   8513e:	d3f8      	bcc.n	85132 <quorem+0xa2>
   85140:	6107      	str	r7, [r0, #16]
   85142:	4604      	mov	r4, r0
   85144:	f001 fd08 	bl	86b58 <__mcmp>
   85148:	2800      	cmp	r0, #0
   8514a:	db2d      	blt.n	851a8 <quorem+0x118>
   8514c:	4655      	mov	r5, sl
   8514e:	2300      	movs	r3, #0
   85150:	f108 0801 	add.w	r8, r8, #1
   85154:	f856 1b04 	ldr.w	r1, [r6], #4
   85158:	6828      	ldr	r0, [r5, #0]
   8515a:	b28a      	uxth	r2, r1
   8515c:	1a9a      	subs	r2, r3, r2
   8515e:	0c0b      	lsrs	r3, r1, #16
   85160:	b281      	uxth	r1, r0
   85162:	440a      	add	r2, r1
   85164:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   85168:	eb03 4322 	add.w	r3, r3, r2, asr #16
   8516c:	b292      	uxth	r2, r2
   8516e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   85172:	45b1      	cmp	r9, r6
   85174:	f845 2b04 	str.w	r2, [r5], #4
   85178:	ea4f 4323 	mov.w	r3, r3, asr #16
   8517c:	d2ea      	bcs.n	85154 <quorem+0xc4>
   8517e:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   85182:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   85186:	b97a      	cbnz	r2, 851a8 <quorem+0x118>
   85188:	1f1a      	subs	r2, r3, #4
   8518a:	4592      	cmp	sl, r2
   8518c:	d20b      	bcs.n	851a6 <quorem+0x116>
   8518e:	f853 2c04 	ldr.w	r2, [r3, #-4]
   85192:	b942      	cbnz	r2, 851a6 <quorem+0x116>
   85194:	3b08      	subs	r3, #8
   85196:	e002      	b.n	8519e <quorem+0x10e>
   85198:	681a      	ldr	r2, [r3, #0]
   8519a:	3b04      	subs	r3, #4
   8519c:	b91a      	cbnz	r2, 851a6 <quorem+0x116>
   8519e:	459a      	cmp	sl, r3
   851a0:	f107 37ff 	add.w	r7, r7, #4294967295
   851a4:	d3f8      	bcc.n	85198 <quorem+0x108>
   851a6:	6127      	str	r7, [r4, #16]
   851a8:	4640      	mov	r0, r8
   851aa:	b003      	add	sp, #12
   851ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   851b0:	2000      	movs	r0, #0
   851b2:	b003      	add	sp, #12
   851b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000851b8 <_dtoa_r>:
   851b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   851bc:	6c05      	ldr	r5, [r0, #64]	; 0x40
   851be:	b09b      	sub	sp, #108	; 0x6c
   851c0:	4604      	mov	r4, r0
   851c2:	4692      	mov	sl, r2
   851c4:	469b      	mov	fp, r3
   851c6:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   851c8:	b14d      	cbz	r5, 851de <_dtoa_r+0x26>
   851ca:	2301      	movs	r3, #1
   851cc:	6c42      	ldr	r2, [r0, #68]	; 0x44
   851ce:	4629      	mov	r1, r5
   851d0:	4093      	lsls	r3, r2
   851d2:	60ab      	str	r3, [r5, #8]
   851d4:	606a      	str	r2, [r5, #4]
   851d6:	f001 fae7 	bl	867a8 <_Bfree>
   851da:	2300      	movs	r3, #0
   851dc:	6423      	str	r3, [r4, #64]	; 0x40
   851de:	f1bb 0f00 	cmp.w	fp, #0
   851e2:	465d      	mov	r5, fp
   851e4:	db35      	blt.n	85252 <_dtoa_r+0x9a>
   851e6:	2300      	movs	r3, #0
   851e8:	6033      	str	r3, [r6, #0]
   851ea:	4b9d      	ldr	r3, [pc, #628]	; (85460 <_dtoa_r+0x2a8>)
   851ec:	43ab      	bics	r3, r5
   851ee:	d015      	beq.n	8521c <_dtoa_r+0x64>
   851f0:	2200      	movs	r2, #0
   851f2:	2300      	movs	r3, #0
   851f4:	4650      	mov	r0, sl
   851f6:	4659      	mov	r1, fp
   851f8:	f002 fe4a 	bl	87e90 <__aeabi_dcmpeq>
   851fc:	4680      	mov	r8, r0
   851fe:	2800      	cmp	r0, #0
   85200:	d02d      	beq.n	8525e <_dtoa_r+0xa6>
   85202:	2301      	movs	r3, #1
   85204:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85206:	6013      	str	r3, [r2, #0]
   85208:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8520a:	2b00      	cmp	r3, #0
   8520c:	f000 80bd 	beq.w	8538a <_dtoa_r+0x1d2>
   85210:	4894      	ldr	r0, [pc, #592]	; (85464 <_dtoa_r+0x2ac>)
   85212:	6018      	str	r0, [r3, #0]
   85214:	3801      	subs	r0, #1
   85216:	b01b      	add	sp, #108	; 0x6c
   85218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8521c:	f242 730f 	movw	r3, #9999	; 0x270f
   85220:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85222:	6013      	str	r3, [r2, #0]
   85224:	f1ba 0f00 	cmp.w	sl, #0
   85228:	d10d      	bne.n	85246 <_dtoa_r+0x8e>
   8522a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   8522e:	b955      	cbnz	r5, 85246 <_dtoa_r+0x8e>
   85230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85232:	488d      	ldr	r0, [pc, #564]	; (85468 <_dtoa_r+0x2b0>)
   85234:	2b00      	cmp	r3, #0
   85236:	d0ee      	beq.n	85216 <_dtoa_r+0x5e>
   85238:	f100 0308 	add.w	r3, r0, #8
   8523c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   8523e:	6013      	str	r3, [r2, #0]
   85240:	b01b      	add	sp, #108	; 0x6c
   85242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85246:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85248:	4888      	ldr	r0, [pc, #544]	; (8546c <_dtoa_r+0x2b4>)
   8524a:	2b00      	cmp	r3, #0
   8524c:	d0e3      	beq.n	85216 <_dtoa_r+0x5e>
   8524e:	1cc3      	adds	r3, r0, #3
   85250:	e7f4      	b.n	8523c <_dtoa_r+0x84>
   85252:	2301      	movs	r3, #1
   85254:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   85258:	6033      	str	r3, [r6, #0]
   8525a:	46ab      	mov	fp, r5
   8525c:	e7c5      	b.n	851ea <_dtoa_r+0x32>
   8525e:	aa18      	add	r2, sp, #96	; 0x60
   85260:	ab19      	add	r3, sp, #100	; 0x64
   85262:	9201      	str	r2, [sp, #4]
   85264:	9300      	str	r3, [sp, #0]
   85266:	4652      	mov	r2, sl
   85268:	465b      	mov	r3, fp
   8526a:	4620      	mov	r0, r4
   8526c:	f001 fd1e 	bl	86cac <__d2b>
   85270:	0d2b      	lsrs	r3, r5, #20
   85272:	4681      	mov	r9, r0
   85274:	d071      	beq.n	8535a <_dtoa_r+0x1a2>
   85276:	4650      	mov	r0, sl
   85278:	f3cb 0213 	ubfx	r2, fp, #0, #20
   8527c:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   85280:	9f18      	ldr	r7, [sp, #96]	; 0x60
   85282:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   85286:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   8528a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   8528e:	2200      	movs	r2, #0
   85290:	4b77      	ldr	r3, [pc, #476]	; (85470 <_dtoa_r+0x2b8>)
   85292:	f002 f9e1 	bl	87658 <__aeabi_dsub>
   85296:	a36c      	add	r3, pc, #432	; (adr r3, 85448 <_dtoa_r+0x290>)
   85298:	e9d3 2300 	ldrd	r2, r3, [r3]
   8529c:	f002 fb90 	bl	879c0 <__aeabi_dmul>
   852a0:	a36b      	add	r3, pc, #428	; (adr r3, 85450 <_dtoa_r+0x298>)
   852a2:	e9d3 2300 	ldrd	r2, r3, [r3]
   852a6:	f002 f9d9 	bl	8765c <__adddf3>
   852aa:	e9cd 0102 	strd	r0, r1, [sp, #8]
   852ae:	4630      	mov	r0, r6
   852b0:	f002 fb20 	bl	878f4 <__aeabi_i2d>
   852b4:	a368      	add	r3, pc, #416	; (adr r3, 85458 <_dtoa_r+0x2a0>)
   852b6:	e9d3 2300 	ldrd	r2, r3, [r3]
   852ba:	f002 fb81 	bl	879c0 <__aeabi_dmul>
   852be:	4602      	mov	r2, r0
   852c0:	460b      	mov	r3, r1
   852c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   852c6:	f002 f9c9 	bl	8765c <__adddf3>
   852ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
   852ce:	f002 fe27 	bl	87f20 <__aeabi_d2iz>
   852d2:	2200      	movs	r2, #0
   852d4:	9002      	str	r0, [sp, #8]
   852d6:	2300      	movs	r3, #0
   852d8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   852dc:	f002 fde2 	bl	87ea4 <__aeabi_dcmplt>
   852e0:	2800      	cmp	r0, #0
   852e2:	f040 816d 	bne.w	855c0 <_dtoa_r+0x408>
   852e6:	9d02      	ldr	r5, [sp, #8]
   852e8:	2d16      	cmp	r5, #22
   852ea:	f200 8157 	bhi.w	8559c <_dtoa_r+0x3e4>
   852ee:	4961      	ldr	r1, [pc, #388]	; (85474 <_dtoa_r+0x2bc>)
   852f0:	4652      	mov	r2, sl
   852f2:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   852f6:	465b      	mov	r3, fp
   852f8:	e9d1 0100 	ldrd	r0, r1, [r1]
   852fc:	f002 fdf0 	bl	87ee0 <__aeabi_dcmpgt>
   85300:	2800      	cmp	r0, #0
   85302:	f000 81be 	beq.w	85682 <_dtoa_r+0x4ca>
   85306:	1e6b      	subs	r3, r5, #1
   85308:	9302      	str	r3, [sp, #8]
   8530a:	2300      	movs	r3, #0
   8530c:	930e      	str	r3, [sp, #56]	; 0x38
   8530e:	1bbf      	subs	r7, r7, r6
   85310:	1e7b      	subs	r3, r7, #1
   85312:	9308      	str	r3, [sp, #32]
   85314:	f100 814e 	bmi.w	855b4 <_dtoa_r+0x3fc>
   85318:	2300      	movs	r3, #0
   8531a:	930a      	str	r3, [sp, #40]	; 0x28
   8531c:	9b02      	ldr	r3, [sp, #8]
   8531e:	2b00      	cmp	r3, #0
   85320:	f2c0 813f 	blt.w	855a2 <_dtoa_r+0x3ea>
   85324:	9a08      	ldr	r2, [sp, #32]
   85326:	930d      	str	r3, [sp, #52]	; 0x34
   85328:	4611      	mov	r1, r2
   8532a:	4419      	add	r1, r3
   8532c:	2300      	movs	r3, #0
   8532e:	9108      	str	r1, [sp, #32]
   85330:	930c      	str	r3, [sp, #48]	; 0x30
   85332:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85334:	2b09      	cmp	r3, #9
   85336:	d82a      	bhi.n	8538e <_dtoa_r+0x1d6>
   85338:	2b05      	cmp	r3, #5
   8533a:	f340 8658 	ble.w	85fee <_dtoa_r+0xe36>
   8533e:	2500      	movs	r5, #0
   85340:	3b04      	subs	r3, #4
   85342:	9324      	str	r3, [sp, #144]	; 0x90
   85344:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85346:	3b02      	subs	r3, #2
   85348:	2b03      	cmp	r3, #3
   8534a:	f200 863f 	bhi.w	85fcc <_dtoa_r+0xe14>
   8534e:	e8df f013 	tbh	[pc, r3, lsl #1]
   85352:	03ce      	.short	0x03ce
   85354:	03d902c3 	.word	0x03d902c3
   85358:	045b      	.short	0x045b
   8535a:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8535c:	9e19      	ldr	r6, [sp, #100]	; 0x64
   8535e:	443e      	add	r6, r7
   85360:	f206 4332 	addw	r3, r6, #1074	; 0x432
   85364:	2b20      	cmp	r3, #32
   85366:	f340 8187 	ble.w	85678 <_dtoa_r+0x4c0>
   8536a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   8536e:	f206 4012 	addw	r0, r6, #1042	; 0x412
   85372:	409d      	lsls	r5, r3
   85374:	fa2a f000 	lsr.w	r0, sl, r0
   85378:	4328      	orrs	r0, r5
   8537a:	f002 faab 	bl	878d4 <__aeabi_ui2d>
   8537e:	2301      	movs	r3, #1
   85380:	3e01      	subs	r6, #1
   85382:	9314      	str	r3, [sp, #80]	; 0x50
   85384:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   85388:	e781      	b.n	8528e <_dtoa_r+0xd6>
   8538a:	483b      	ldr	r0, [pc, #236]	; (85478 <_dtoa_r+0x2c0>)
   8538c:	e743      	b.n	85216 <_dtoa_r+0x5e>
   8538e:	2100      	movs	r1, #0
   85390:	4620      	mov	r0, r4
   85392:	6461      	str	r1, [r4, #68]	; 0x44
   85394:	9125      	str	r1, [sp, #148]	; 0x94
   85396:	f001 f9e1 	bl	8675c <_Balloc>
   8539a:	f04f 33ff 	mov.w	r3, #4294967295
   8539e:	9307      	str	r3, [sp, #28]
   853a0:	930f      	str	r3, [sp, #60]	; 0x3c
   853a2:	2301      	movs	r3, #1
   853a4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   853a6:	9004      	str	r0, [sp, #16]
   853a8:	6420      	str	r0, [r4, #64]	; 0x40
   853aa:	9224      	str	r2, [sp, #144]	; 0x90
   853ac:	930b      	str	r3, [sp, #44]	; 0x2c
   853ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
   853b0:	2b00      	cmp	r3, #0
   853b2:	f2c0 80d3 	blt.w	8555c <_dtoa_r+0x3a4>
   853b6:	9a02      	ldr	r2, [sp, #8]
   853b8:	2a0e      	cmp	r2, #14
   853ba:	f300 80cf 	bgt.w	8555c <_dtoa_r+0x3a4>
   853be:	4b2d      	ldr	r3, [pc, #180]	; (85474 <_dtoa_r+0x2bc>)
   853c0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   853c4:	e9d3 2300 	ldrd	r2, r3, [r3]
   853c8:	e9cd 2308 	strd	r2, r3, [sp, #32]
   853cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
   853ce:	2b00      	cmp	r3, #0
   853d0:	f2c0 83b4 	blt.w	85b3c <_dtoa_r+0x984>
   853d4:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   853d8:	4650      	mov	r0, sl
   853da:	462a      	mov	r2, r5
   853dc:	4633      	mov	r3, r6
   853de:	4659      	mov	r1, fp
   853e0:	f002 fc18 	bl	87c14 <__aeabi_ddiv>
   853e4:	f002 fd9c 	bl	87f20 <__aeabi_d2iz>
   853e8:	4680      	mov	r8, r0
   853ea:	f002 fa83 	bl	878f4 <__aeabi_i2d>
   853ee:	462a      	mov	r2, r5
   853f0:	4633      	mov	r3, r6
   853f2:	f002 fae5 	bl	879c0 <__aeabi_dmul>
   853f6:	4602      	mov	r2, r0
   853f8:	460b      	mov	r3, r1
   853fa:	4650      	mov	r0, sl
   853fc:	4659      	mov	r1, fp
   853fe:	f002 f92b 	bl	87658 <__aeabi_dsub>
   85402:	9e07      	ldr	r6, [sp, #28]
   85404:	9f04      	ldr	r7, [sp, #16]
   85406:	f108 0530 	add.w	r5, r8, #48	; 0x30
   8540a:	2e01      	cmp	r6, #1
   8540c:	703d      	strb	r5, [r7, #0]
   8540e:	4602      	mov	r2, r0
   85410:	460b      	mov	r3, r1
   85412:	f107 0501 	add.w	r5, r7, #1
   85416:	d064      	beq.n	854e2 <_dtoa_r+0x32a>
   85418:	2200      	movs	r2, #0
   8541a:	4b18      	ldr	r3, [pc, #96]	; (8547c <_dtoa_r+0x2c4>)
   8541c:	f002 fad0 	bl	879c0 <__aeabi_dmul>
   85420:	2200      	movs	r2, #0
   85422:	2300      	movs	r3, #0
   85424:	4606      	mov	r6, r0
   85426:	460f      	mov	r7, r1
   85428:	f002 fd32 	bl	87e90 <__aeabi_dcmpeq>
   8542c:	2800      	cmp	r0, #0
   8542e:	f040 8082 	bne.w	85536 <_dtoa_r+0x37e>
   85432:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   85436:	f04f 0a00 	mov.w	sl, #0
   8543a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   8543e:	f04f 0b00 	mov.w	fp, #0
   85442:	940b      	str	r4, [sp, #44]	; 0x2c
   85444:	e029      	b.n	8549a <_dtoa_r+0x2e2>
   85446:	bf00      	nop
   85448:	636f4361 	.word	0x636f4361
   8544c:	3fd287a7 	.word	0x3fd287a7
   85450:	8b60c8b3 	.word	0x8b60c8b3
   85454:	3fc68a28 	.word	0x3fc68a28
   85458:	509f79fb 	.word	0x509f79fb
   8545c:	3fd34413 	.word	0x3fd34413
   85460:	7ff00000 	.word	0x7ff00000
   85464:	000890e9 	.word	0x000890e9
   85468:	0008910c 	.word	0x0008910c
   8546c:	00089118 	.word	0x00089118
   85470:	3ff80000 	.word	0x3ff80000
   85474:	00089158 	.word	0x00089158
   85478:	000890e8 	.word	0x000890e8
   8547c:	40240000 	.word	0x40240000
   85480:	2200      	movs	r2, #0
   85482:	4b81      	ldr	r3, [pc, #516]	; (85688 <_dtoa_r+0x4d0>)
   85484:	f002 fa9c 	bl	879c0 <__aeabi_dmul>
   85488:	4652      	mov	r2, sl
   8548a:	465b      	mov	r3, fp
   8548c:	4606      	mov	r6, r0
   8548e:	460f      	mov	r7, r1
   85490:	f002 fcfe 	bl	87e90 <__aeabi_dcmpeq>
   85494:	2800      	cmp	r0, #0
   85496:	f040 83ba 	bne.w	85c0e <_dtoa_r+0xa56>
   8549a:	4642      	mov	r2, r8
   8549c:	464b      	mov	r3, r9
   8549e:	4630      	mov	r0, r6
   854a0:	4639      	mov	r1, r7
   854a2:	f002 fbb7 	bl	87c14 <__aeabi_ddiv>
   854a6:	f002 fd3b 	bl	87f20 <__aeabi_d2iz>
   854aa:	4604      	mov	r4, r0
   854ac:	f002 fa22 	bl	878f4 <__aeabi_i2d>
   854b0:	4642      	mov	r2, r8
   854b2:	464b      	mov	r3, r9
   854b4:	f002 fa84 	bl	879c0 <__aeabi_dmul>
   854b8:	4602      	mov	r2, r0
   854ba:	460b      	mov	r3, r1
   854bc:	4630      	mov	r0, r6
   854be:	4639      	mov	r1, r7
   854c0:	f002 f8ca 	bl	87658 <__aeabi_dsub>
   854c4:	f104 0630 	add.w	r6, r4, #48	; 0x30
   854c8:	f805 6b01 	strb.w	r6, [r5], #1
   854cc:	9e04      	ldr	r6, [sp, #16]
   854ce:	9f07      	ldr	r7, [sp, #28]
   854d0:	1bae      	subs	r6, r5, r6
   854d2:	42be      	cmp	r6, r7
   854d4:	4602      	mov	r2, r0
   854d6:	460b      	mov	r3, r1
   854d8:	d1d2      	bne.n	85480 <_dtoa_r+0x2c8>
   854da:	46a0      	mov	r8, r4
   854dc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   854e0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   854e2:	4610      	mov	r0, r2
   854e4:	4619      	mov	r1, r3
   854e6:	f002 f8b9 	bl	8765c <__adddf3>
   854ea:	4606      	mov	r6, r0
   854ec:	460f      	mov	r7, r1
   854ee:	4602      	mov	r2, r0
   854f0:	460b      	mov	r3, r1
   854f2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   854f6:	f002 fcd5 	bl	87ea4 <__aeabi_dcmplt>
   854fa:	b948      	cbnz	r0, 85510 <_dtoa_r+0x358>
   854fc:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   85500:	4632      	mov	r2, r6
   85502:	463b      	mov	r3, r7
   85504:	f002 fcc4 	bl	87e90 <__aeabi_dcmpeq>
   85508:	b1a8      	cbz	r0, 85536 <_dtoa_r+0x37e>
   8550a:	f018 0f01 	tst.w	r8, #1
   8550e:	d012      	beq.n	85536 <_dtoa_r+0x37e>
   85510:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   85514:	1e6b      	subs	r3, r5, #1
   85516:	9a04      	ldr	r2, [sp, #16]
   85518:	e004      	b.n	85524 <_dtoa_r+0x36c>
   8551a:	429a      	cmp	r2, r3
   8551c:	f000 8402 	beq.w	85d24 <_dtoa_r+0xb6c>
   85520:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   85524:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   85528:	f103 0501 	add.w	r5, r3, #1
   8552c:	d0f5      	beq.n	8551a <_dtoa_r+0x362>
   8552e:	f108 0801 	add.w	r8, r8, #1
   85532:	f883 8000 	strb.w	r8, [r3]
   85536:	4649      	mov	r1, r9
   85538:	4620      	mov	r0, r4
   8553a:	f001 f935 	bl	867a8 <_Bfree>
   8553e:	2200      	movs	r2, #0
   85540:	9b02      	ldr	r3, [sp, #8]
   85542:	702a      	strb	r2, [r5, #0]
   85544:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85546:	3301      	adds	r3, #1
   85548:	6013      	str	r3, [r2, #0]
   8554a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8554c:	2b00      	cmp	r3, #0
   8554e:	f000 839f 	beq.w	85c90 <_dtoa_r+0xad8>
   85552:	9804      	ldr	r0, [sp, #16]
   85554:	601d      	str	r5, [r3, #0]
   85556:	b01b      	add	sp, #108	; 0x6c
   85558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8555c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8555e:	2a00      	cmp	r2, #0
   85560:	d03e      	beq.n	855e0 <_dtoa_r+0x428>
   85562:	9a24      	ldr	r2, [sp, #144]	; 0x90
   85564:	2a01      	cmp	r2, #1
   85566:	f340 8311 	ble.w	85b8c <_dtoa_r+0x9d4>
   8556a:	9b07      	ldr	r3, [sp, #28]
   8556c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8556e:	1e5f      	subs	r7, r3, #1
   85570:	42ba      	cmp	r2, r7
   85572:	f2c0 8390 	blt.w	85c96 <_dtoa_r+0xade>
   85576:	1bd7      	subs	r7, r2, r7
   85578:	9b07      	ldr	r3, [sp, #28]
   8557a:	2b00      	cmp	r3, #0
   8557c:	f2c0 848c 	blt.w	85e98 <_dtoa_r+0xce0>
   85580:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   85582:	9b07      	ldr	r3, [sp, #28]
   85584:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85586:	2101      	movs	r1, #1
   85588:	441a      	add	r2, r3
   8558a:	920a      	str	r2, [sp, #40]	; 0x28
   8558c:	9a08      	ldr	r2, [sp, #32]
   8558e:	4620      	mov	r0, r4
   85590:	441a      	add	r2, r3
   85592:	9208      	str	r2, [sp, #32]
   85594:	f001 f9a4 	bl	868e0 <__i2b>
   85598:	4606      	mov	r6, r0
   8559a:	e023      	b.n	855e4 <_dtoa_r+0x42c>
   8559c:	2301      	movs	r3, #1
   8559e:	930e      	str	r3, [sp, #56]	; 0x38
   855a0:	e6b5      	b.n	8530e <_dtoa_r+0x156>
   855a2:	2300      	movs	r3, #0
   855a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   855a6:	930d      	str	r3, [sp, #52]	; 0x34
   855a8:	9b02      	ldr	r3, [sp, #8]
   855aa:	1ad2      	subs	r2, r2, r3
   855ac:	425b      	negs	r3, r3
   855ae:	920a      	str	r2, [sp, #40]	; 0x28
   855b0:	930c      	str	r3, [sp, #48]	; 0x30
   855b2:	e6be      	b.n	85332 <_dtoa_r+0x17a>
   855b4:	f1c7 0301 	rsb	r3, r7, #1
   855b8:	930a      	str	r3, [sp, #40]	; 0x28
   855ba:	2300      	movs	r3, #0
   855bc:	9308      	str	r3, [sp, #32]
   855be:	e6ad      	b.n	8531c <_dtoa_r+0x164>
   855c0:	9d02      	ldr	r5, [sp, #8]
   855c2:	4628      	mov	r0, r5
   855c4:	f002 f996 	bl	878f4 <__aeabi_i2d>
   855c8:	4602      	mov	r2, r0
   855ca:	460b      	mov	r3, r1
   855cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   855d0:	f002 fc5e 	bl	87e90 <__aeabi_dcmpeq>
   855d4:	2800      	cmp	r0, #0
   855d6:	f47f ae86 	bne.w	852e6 <_dtoa_r+0x12e>
   855da:	1e6b      	subs	r3, r5, #1
   855dc:	9302      	str	r3, [sp, #8]
   855de:	e682      	b.n	852e6 <_dtoa_r+0x12e>
   855e0:	ad0a      	add	r5, sp, #40	; 0x28
   855e2:	cde0      	ldmia	r5, {r5, r6, r7}
   855e4:	2d00      	cmp	r5, #0
   855e6:	dd0c      	ble.n	85602 <_dtoa_r+0x44a>
   855e8:	9908      	ldr	r1, [sp, #32]
   855ea:	2900      	cmp	r1, #0
   855ec:	460b      	mov	r3, r1
   855ee:	dd08      	ble.n	85602 <_dtoa_r+0x44a>
   855f0:	42a9      	cmp	r1, r5
   855f2:	bfa8      	it	ge
   855f4:	462b      	movge	r3, r5
   855f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   855f8:	1aed      	subs	r5, r5, r3
   855fa:	1ad2      	subs	r2, r2, r3
   855fc:	1acb      	subs	r3, r1, r3
   855fe:	920a      	str	r2, [sp, #40]	; 0x28
   85600:	9308      	str	r3, [sp, #32]
   85602:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85604:	b1d3      	cbz	r3, 8563c <_dtoa_r+0x484>
   85606:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85608:	2b00      	cmp	r3, #0
   8560a:	f000 82b8 	beq.w	85b7e <_dtoa_r+0x9c6>
   8560e:	2f00      	cmp	r7, #0
   85610:	dd10      	ble.n	85634 <_dtoa_r+0x47c>
   85612:	4631      	mov	r1, r6
   85614:	463a      	mov	r2, r7
   85616:	4620      	mov	r0, r4
   85618:	f001 f9fe 	bl	86a18 <__pow5mult>
   8561c:	464a      	mov	r2, r9
   8561e:	4601      	mov	r1, r0
   85620:	4606      	mov	r6, r0
   85622:	4620      	mov	r0, r4
   85624:	f001 f966 	bl	868f4 <__multiply>
   85628:	4603      	mov	r3, r0
   8562a:	4649      	mov	r1, r9
   8562c:	4620      	mov	r0, r4
   8562e:	4699      	mov	r9, r3
   85630:	f001 f8ba 	bl	867a8 <_Bfree>
   85634:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85636:	1bda      	subs	r2, r3, r7
   85638:	f040 82a2 	bne.w	85b80 <_dtoa_r+0x9c8>
   8563c:	2101      	movs	r1, #1
   8563e:	4620      	mov	r0, r4
   85640:	f001 f94e 	bl	868e0 <__i2b>
   85644:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85646:	4680      	mov	r8, r0
   85648:	2b00      	cmp	r3, #0
   8564a:	dd1f      	ble.n	8568c <_dtoa_r+0x4d4>
   8564c:	4601      	mov	r1, r0
   8564e:	461a      	mov	r2, r3
   85650:	4620      	mov	r0, r4
   85652:	f001 f9e1 	bl	86a18 <__pow5mult>
   85656:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85658:	4680      	mov	r8, r0
   8565a:	2b01      	cmp	r3, #1
   8565c:	f340 8255 	ble.w	85b0a <_dtoa_r+0x952>
   85660:	2300      	movs	r3, #0
   85662:	930c      	str	r3, [sp, #48]	; 0x30
   85664:	f8d8 3010 	ldr.w	r3, [r8, #16]
   85668:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   8566c:	6918      	ldr	r0, [r3, #16]
   8566e:	f001 f8e7 	bl	86840 <__hi0bits>
   85672:	f1c0 0020 	rsb	r0, r0, #32
   85676:	e013      	b.n	856a0 <_dtoa_r+0x4e8>
   85678:	f1c3 0520 	rsb	r5, r3, #32
   8567c:	fa0a f005 	lsl.w	r0, sl, r5
   85680:	e67b      	b.n	8537a <_dtoa_r+0x1c2>
   85682:	900e      	str	r0, [sp, #56]	; 0x38
   85684:	e643      	b.n	8530e <_dtoa_r+0x156>
   85686:	bf00      	nop
   85688:	40240000 	.word	0x40240000
   8568c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8568e:	2b01      	cmp	r3, #1
   85690:	f340 8285 	ble.w	85b9e <_dtoa_r+0x9e6>
   85694:	2300      	movs	r3, #0
   85696:	930c      	str	r3, [sp, #48]	; 0x30
   85698:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8569a:	2001      	movs	r0, #1
   8569c:	2b00      	cmp	r3, #0
   8569e:	d1e1      	bne.n	85664 <_dtoa_r+0x4ac>
   856a0:	9a08      	ldr	r2, [sp, #32]
   856a2:	4410      	add	r0, r2
   856a4:	f010 001f 	ands.w	r0, r0, #31
   856a8:	f000 80a1 	beq.w	857ee <_dtoa_r+0x636>
   856ac:	f1c0 0320 	rsb	r3, r0, #32
   856b0:	2b04      	cmp	r3, #4
   856b2:	f340 8486 	ble.w	85fc2 <_dtoa_r+0xe0a>
   856b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   856b8:	f1c0 001c 	rsb	r0, r0, #28
   856bc:	4403      	add	r3, r0
   856be:	930a      	str	r3, [sp, #40]	; 0x28
   856c0:	4613      	mov	r3, r2
   856c2:	4403      	add	r3, r0
   856c4:	4405      	add	r5, r0
   856c6:	9308      	str	r3, [sp, #32]
   856c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   856ca:	2b00      	cmp	r3, #0
   856cc:	dd05      	ble.n	856da <_dtoa_r+0x522>
   856ce:	4649      	mov	r1, r9
   856d0:	461a      	mov	r2, r3
   856d2:	4620      	mov	r0, r4
   856d4:	f001 f9f0 	bl	86ab8 <__lshift>
   856d8:	4681      	mov	r9, r0
   856da:	9b08      	ldr	r3, [sp, #32]
   856dc:	2b00      	cmp	r3, #0
   856de:	dd05      	ble.n	856ec <_dtoa_r+0x534>
   856e0:	4641      	mov	r1, r8
   856e2:	461a      	mov	r2, r3
   856e4:	4620      	mov	r0, r4
   856e6:	f001 f9e7 	bl	86ab8 <__lshift>
   856ea:	4680      	mov	r8, r0
   856ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   856ee:	2b00      	cmp	r3, #0
   856f0:	f040 8086 	bne.w	85800 <_dtoa_r+0x648>
   856f4:	9b07      	ldr	r3, [sp, #28]
   856f6:	2b00      	cmp	r3, #0
   856f8:	f340 8264 	ble.w	85bc4 <_dtoa_r+0xa0c>
   856fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   856fe:	2b00      	cmp	r3, #0
   85700:	f000 8098 	beq.w	85834 <_dtoa_r+0x67c>
   85704:	2d00      	cmp	r5, #0
   85706:	dd05      	ble.n	85714 <_dtoa_r+0x55c>
   85708:	4631      	mov	r1, r6
   8570a:	462a      	mov	r2, r5
   8570c:	4620      	mov	r0, r4
   8570e:	f001 f9d3 	bl	86ab8 <__lshift>
   85712:	4606      	mov	r6, r0
   85714:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85716:	2b00      	cmp	r3, #0
   85718:	f040 8336 	bne.w	85d88 <_dtoa_r+0xbd0>
   8571c:	9608      	str	r6, [sp, #32]
   8571e:	9b07      	ldr	r3, [sp, #28]
   85720:	9a04      	ldr	r2, [sp, #16]
   85722:	3b01      	subs	r3, #1
   85724:	18d3      	adds	r3, r2, r3
   85726:	930b      	str	r3, [sp, #44]	; 0x2c
   85728:	4617      	mov	r7, r2
   8572a:	f00a 0301 	and.w	r3, sl, #1
   8572e:	46c2      	mov	sl, r8
   85730:	f8dd b020 	ldr.w	fp, [sp, #32]
   85734:	930c      	str	r3, [sp, #48]	; 0x30
   85736:	4651      	mov	r1, sl
   85738:	4648      	mov	r0, r9
   8573a:	f7ff fca9 	bl	85090 <quorem>
   8573e:	4631      	mov	r1, r6
   85740:	4605      	mov	r5, r0
   85742:	4648      	mov	r0, r9
   85744:	f001 fa08 	bl	86b58 <__mcmp>
   85748:	465a      	mov	r2, fp
   8574a:	9007      	str	r0, [sp, #28]
   8574c:	4651      	mov	r1, sl
   8574e:	4620      	mov	r0, r4
   85750:	f001 fa1e 	bl	86b90 <__mdiff>
   85754:	68c2      	ldr	r2, [r0, #12]
   85756:	4680      	mov	r8, r0
   85758:	f105 0330 	add.w	r3, r5, #48	; 0x30
   8575c:	2a00      	cmp	r2, #0
   8575e:	f040 8229 	bne.w	85bb4 <_dtoa_r+0x9fc>
   85762:	4601      	mov	r1, r0
   85764:	4648      	mov	r0, r9
   85766:	930a      	str	r3, [sp, #40]	; 0x28
   85768:	f001 f9f6 	bl	86b58 <__mcmp>
   8576c:	4641      	mov	r1, r8
   8576e:	9008      	str	r0, [sp, #32]
   85770:	4620      	mov	r0, r4
   85772:	f001 f819 	bl	867a8 <_Bfree>
   85776:	9a08      	ldr	r2, [sp, #32]
   85778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8577a:	b932      	cbnz	r2, 8578a <_dtoa_r+0x5d2>
   8577c:	9924      	ldr	r1, [sp, #144]	; 0x90
   8577e:	b921      	cbnz	r1, 8578a <_dtoa_r+0x5d2>
   85780:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85782:	2a00      	cmp	r2, #0
   85784:	f000 83ee 	beq.w	85f64 <_dtoa_r+0xdac>
   85788:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8578a:	9907      	ldr	r1, [sp, #28]
   8578c:	2900      	cmp	r1, #0
   8578e:	f2c0 829f 	blt.w	85cd0 <_dtoa_r+0xb18>
   85792:	d105      	bne.n	857a0 <_dtoa_r+0x5e8>
   85794:	9924      	ldr	r1, [sp, #144]	; 0x90
   85796:	b919      	cbnz	r1, 857a0 <_dtoa_r+0x5e8>
   85798:	990c      	ldr	r1, [sp, #48]	; 0x30
   8579a:	2900      	cmp	r1, #0
   8579c:	f000 8298 	beq.w	85cd0 <_dtoa_r+0xb18>
   857a0:	2a00      	cmp	r2, #0
   857a2:	f300 8305 	bgt.w	85db0 <_dtoa_r+0xbf8>
   857a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   857a8:	f107 0801 	add.w	r8, r7, #1
   857ac:	4297      	cmp	r7, r2
   857ae:	703b      	strb	r3, [r7, #0]
   857b0:	4645      	mov	r5, r8
   857b2:	f000 830b 	beq.w	85dcc <_dtoa_r+0xc14>
   857b6:	4649      	mov	r1, r9
   857b8:	2300      	movs	r3, #0
   857ba:	220a      	movs	r2, #10
   857bc:	4620      	mov	r0, r4
   857be:	f000 fffd 	bl	867bc <__multadd>
   857c2:	455e      	cmp	r6, fp
   857c4:	4681      	mov	r9, r0
   857c6:	4631      	mov	r1, r6
   857c8:	f04f 0300 	mov.w	r3, #0
   857cc:	f04f 020a 	mov.w	r2, #10
   857d0:	4620      	mov	r0, r4
   857d2:	f000 81e9 	beq.w	85ba8 <_dtoa_r+0x9f0>
   857d6:	f000 fff1 	bl	867bc <__multadd>
   857da:	4659      	mov	r1, fp
   857dc:	4606      	mov	r6, r0
   857de:	2300      	movs	r3, #0
   857e0:	220a      	movs	r2, #10
   857e2:	4620      	mov	r0, r4
   857e4:	f000 ffea 	bl	867bc <__multadd>
   857e8:	4647      	mov	r7, r8
   857ea:	4683      	mov	fp, r0
   857ec:	e7a3      	b.n	85736 <_dtoa_r+0x57e>
   857ee:	201c      	movs	r0, #28
   857f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   857f2:	4405      	add	r5, r0
   857f4:	4403      	add	r3, r0
   857f6:	930a      	str	r3, [sp, #40]	; 0x28
   857f8:	9b08      	ldr	r3, [sp, #32]
   857fa:	4403      	add	r3, r0
   857fc:	9308      	str	r3, [sp, #32]
   857fe:	e763      	b.n	856c8 <_dtoa_r+0x510>
   85800:	4641      	mov	r1, r8
   85802:	4648      	mov	r0, r9
   85804:	f001 f9a8 	bl	86b58 <__mcmp>
   85808:	2800      	cmp	r0, #0
   8580a:	f6bf af73 	bge.w	856f4 <_dtoa_r+0x53c>
   8580e:	9f02      	ldr	r7, [sp, #8]
   85810:	4649      	mov	r1, r9
   85812:	2300      	movs	r3, #0
   85814:	220a      	movs	r2, #10
   85816:	4620      	mov	r0, r4
   85818:	3f01      	subs	r7, #1
   8581a:	9702      	str	r7, [sp, #8]
   8581c:	f000 ffce 	bl	867bc <__multadd>
   85820:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85822:	4681      	mov	r9, r0
   85824:	2b00      	cmp	r3, #0
   85826:	f040 83b5 	bne.w	85f94 <_dtoa_r+0xddc>
   8582a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8582c:	2b00      	cmp	r3, #0
   8582e:	f340 83be 	ble.w	85fae <_dtoa_r+0xdf6>
   85832:	9307      	str	r3, [sp, #28]
   85834:	f8dd a010 	ldr.w	sl, [sp, #16]
   85838:	9f07      	ldr	r7, [sp, #28]
   8583a:	4655      	mov	r5, sl
   8583c:	e006      	b.n	8584c <_dtoa_r+0x694>
   8583e:	4649      	mov	r1, r9
   85840:	2300      	movs	r3, #0
   85842:	220a      	movs	r2, #10
   85844:	4620      	mov	r0, r4
   85846:	f000 ffb9 	bl	867bc <__multadd>
   8584a:	4681      	mov	r9, r0
   8584c:	4641      	mov	r1, r8
   8584e:	4648      	mov	r0, r9
   85850:	f7ff fc1e 	bl	85090 <quorem>
   85854:	3030      	adds	r0, #48	; 0x30
   85856:	f805 0b01 	strb.w	r0, [r5], #1
   8585a:	eba5 030a 	sub.w	r3, r5, sl
   8585e:	42bb      	cmp	r3, r7
   85860:	dbed      	blt.n	8583e <_dtoa_r+0x686>
   85862:	9b04      	ldr	r3, [sp, #16]
   85864:	9a07      	ldr	r2, [sp, #28]
   85866:	4682      	mov	sl, r0
   85868:	2a01      	cmp	r2, #1
   8586a:	bfac      	ite	ge
   8586c:	189b      	addge	r3, r3, r2
   8586e:	3301      	addlt	r3, #1
   85870:	f04f 0b00 	mov.w	fp, #0
   85874:	461d      	mov	r5, r3
   85876:	4649      	mov	r1, r9
   85878:	2201      	movs	r2, #1
   8587a:	4620      	mov	r0, r4
   8587c:	f001 f91c 	bl	86ab8 <__lshift>
   85880:	4641      	mov	r1, r8
   85882:	4681      	mov	r9, r0
   85884:	f001 f968 	bl	86b58 <__mcmp>
   85888:	2800      	cmp	r0, #0
   8588a:	f340 823f 	ble.w	85d0c <_dtoa_r+0xb54>
   8588e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   85892:	1e6b      	subs	r3, r5, #1
   85894:	9904      	ldr	r1, [sp, #16]
   85896:	e004      	b.n	858a2 <_dtoa_r+0x6ea>
   85898:	428b      	cmp	r3, r1
   8589a:	f000 81ae 	beq.w	85bfa <_dtoa_r+0xa42>
   8589e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   858a2:	2a39      	cmp	r2, #57	; 0x39
   858a4:	f103 0501 	add.w	r5, r3, #1
   858a8:	d0f6      	beq.n	85898 <_dtoa_r+0x6e0>
   858aa:	3201      	adds	r2, #1
   858ac:	701a      	strb	r2, [r3, #0]
   858ae:	4641      	mov	r1, r8
   858b0:	4620      	mov	r0, r4
   858b2:	f000 ff79 	bl	867a8 <_Bfree>
   858b6:	2e00      	cmp	r6, #0
   858b8:	f43f ae3d 	beq.w	85536 <_dtoa_r+0x37e>
   858bc:	f1bb 0f00 	cmp.w	fp, #0
   858c0:	d005      	beq.n	858ce <_dtoa_r+0x716>
   858c2:	45b3      	cmp	fp, r6
   858c4:	d003      	beq.n	858ce <_dtoa_r+0x716>
   858c6:	4659      	mov	r1, fp
   858c8:	4620      	mov	r0, r4
   858ca:	f000 ff6d 	bl	867a8 <_Bfree>
   858ce:	4631      	mov	r1, r6
   858d0:	4620      	mov	r0, r4
   858d2:	f000 ff69 	bl	867a8 <_Bfree>
   858d6:	e62e      	b.n	85536 <_dtoa_r+0x37e>
   858d8:	2300      	movs	r3, #0
   858da:	930b      	str	r3, [sp, #44]	; 0x2c
   858dc:	9b02      	ldr	r3, [sp, #8]
   858de:	9a25      	ldr	r2, [sp, #148]	; 0x94
   858e0:	4413      	add	r3, r2
   858e2:	930f      	str	r3, [sp, #60]	; 0x3c
   858e4:	3301      	adds	r3, #1
   858e6:	2b01      	cmp	r3, #1
   858e8:	461f      	mov	r7, r3
   858ea:	461e      	mov	r6, r3
   858ec:	bfb8      	it	lt
   858ee:	2701      	movlt	r7, #1
   858f0:	9307      	str	r3, [sp, #28]
   858f2:	2100      	movs	r1, #0
   858f4:	2f17      	cmp	r7, #23
   858f6:	6461      	str	r1, [r4, #68]	; 0x44
   858f8:	d90a      	bls.n	85910 <_dtoa_r+0x758>
   858fa:	2201      	movs	r2, #1
   858fc:	2304      	movs	r3, #4
   858fe:	005b      	lsls	r3, r3, #1
   85900:	f103 0014 	add.w	r0, r3, #20
   85904:	4287      	cmp	r7, r0
   85906:	4611      	mov	r1, r2
   85908:	f102 0201 	add.w	r2, r2, #1
   8590c:	d2f7      	bcs.n	858fe <_dtoa_r+0x746>
   8590e:	6461      	str	r1, [r4, #68]	; 0x44
   85910:	4620      	mov	r0, r4
   85912:	f000 ff23 	bl	8675c <_Balloc>
   85916:	2e0e      	cmp	r6, #14
   85918:	9004      	str	r0, [sp, #16]
   8591a:	6420      	str	r0, [r4, #64]	; 0x40
   8591c:	f63f ad47 	bhi.w	853ae <_dtoa_r+0x1f6>
   85920:	2d00      	cmp	r5, #0
   85922:	f43f ad44 	beq.w	853ae <_dtoa_r+0x1f6>
   85926:	9902      	ldr	r1, [sp, #8]
   85928:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   8592c:	2900      	cmp	r1, #0
   8592e:	f340 8203 	ble.w	85d38 <_dtoa_r+0xb80>
   85932:	4bb9      	ldr	r3, [pc, #740]	; (85c18 <_dtoa_r+0xa60>)
   85934:	f001 020f 	and.w	r2, r1, #15
   85938:	110d      	asrs	r5, r1, #4
   8593a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8593e:	06e9      	lsls	r1, r5, #27
   85940:	e9d3 6700 	ldrd	r6, r7, [r3]
   85944:	f140 81af 	bpl.w	85ca6 <_dtoa_r+0xaee>
   85948:	4bb4      	ldr	r3, [pc, #720]	; (85c1c <_dtoa_r+0xa64>)
   8594a:	4650      	mov	r0, sl
   8594c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   85950:	4659      	mov	r1, fp
   85952:	f002 f95f 	bl	87c14 <__aeabi_ddiv>
   85956:	f04f 0a03 	mov.w	sl, #3
   8595a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   8595e:	f005 050f 	and.w	r5, r5, #15
   85962:	b18d      	cbz	r5, 85988 <_dtoa_r+0x7d0>
   85964:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 85c1c <_dtoa_r+0xa64>
   85968:	07ea      	lsls	r2, r5, #31
   8596a:	d509      	bpl.n	85980 <_dtoa_r+0x7c8>
   8596c:	e9d8 2300 	ldrd	r2, r3, [r8]
   85970:	4630      	mov	r0, r6
   85972:	4639      	mov	r1, r7
   85974:	f002 f824 	bl	879c0 <__aeabi_dmul>
   85978:	4606      	mov	r6, r0
   8597a:	460f      	mov	r7, r1
   8597c:	f10a 0a01 	add.w	sl, sl, #1
   85980:	106d      	asrs	r5, r5, #1
   85982:	f108 0808 	add.w	r8, r8, #8
   85986:	d1ef      	bne.n	85968 <_dtoa_r+0x7b0>
   85988:	463b      	mov	r3, r7
   8598a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8598e:	4632      	mov	r2, r6
   85990:	f002 f940 	bl	87c14 <__aeabi_ddiv>
   85994:	4607      	mov	r7, r0
   85996:	4688      	mov	r8, r1
   85998:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8599a:	b143      	cbz	r3, 859ae <_dtoa_r+0x7f6>
   8599c:	2200      	movs	r2, #0
   8599e:	4ba0      	ldr	r3, [pc, #640]	; (85c20 <_dtoa_r+0xa68>)
   859a0:	4638      	mov	r0, r7
   859a2:	4641      	mov	r1, r8
   859a4:	f002 fa7e 	bl	87ea4 <__aeabi_dcmplt>
   859a8:	2800      	cmp	r0, #0
   859aa:	f040 8287 	bne.w	85ebc <_dtoa_r+0xd04>
   859ae:	4650      	mov	r0, sl
   859b0:	f001 ffa0 	bl	878f4 <__aeabi_i2d>
   859b4:	463a      	mov	r2, r7
   859b6:	4643      	mov	r3, r8
   859b8:	f002 f802 	bl	879c0 <__aeabi_dmul>
   859bc:	4b99      	ldr	r3, [pc, #612]	; (85c24 <_dtoa_r+0xa6c>)
   859be:	2200      	movs	r2, #0
   859c0:	f001 fe4c 	bl	8765c <__adddf3>
   859c4:	9b07      	ldr	r3, [sp, #28]
   859c6:	4605      	mov	r5, r0
   859c8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   859cc:	2b00      	cmp	r3, #0
   859ce:	f000 813f 	beq.w	85c50 <_dtoa_r+0xa98>
   859d2:	9b02      	ldr	r3, [sp, #8]
   859d4:	9315      	str	r3, [sp, #84]	; 0x54
   859d6:	9b07      	ldr	r3, [sp, #28]
   859d8:	9312      	str	r3, [sp, #72]	; 0x48
   859da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   859dc:	2b00      	cmp	r3, #0
   859de:	f000 81fb 	beq.w	85dd8 <_dtoa_r+0xc20>
   859e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   859e4:	4b8c      	ldr	r3, [pc, #560]	; (85c18 <_dtoa_r+0xa60>)
   859e6:	2000      	movs	r0, #0
   859e8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   859ec:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   859f0:	498d      	ldr	r1, [pc, #564]	; (85c28 <_dtoa_r+0xa70>)
   859f2:	f002 f90f 	bl	87c14 <__aeabi_ddiv>
   859f6:	462a      	mov	r2, r5
   859f8:	4633      	mov	r3, r6
   859fa:	f001 fe2d 	bl	87658 <__aeabi_dsub>
   859fe:	4682      	mov	sl, r0
   85a00:	468b      	mov	fp, r1
   85a02:	4638      	mov	r0, r7
   85a04:	4641      	mov	r1, r8
   85a06:	f002 fa8b 	bl	87f20 <__aeabi_d2iz>
   85a0a:	4605      	mov	r5, r0
   85a0c:	f001 ff72 	bl	878f4 <__aeabi_i2d>
   85a10:	4602      	mov	r2, r0
   85a12:	460b      	mov	r3, r1
   85a14:	4638      	mov	r0, r7
   85a16:	4641      	mov	r1, r8
   85a18:	f001 fe1e 	bl	87658 <__aeabi_dsub>
   85a1c:	3530      	adds	r5, #48	; 0x30
   85a1e:	fa5f f885 	uxtb.w	r8, r5
   85a22:	9d04      	ldr	r5, [sp, #16]
   85a24:	4606      	mov	r6, r0
   85a26:	460f      	mov	r7, r1
   85a28:	f885 8000 	strb.w	r8, [r5]
   85a2c:	4602      	mov	r2, r0
   85a2e:	460b      	mov	r3, r1
   85a30:	4650      	mov	r0, sl
   85a32:	4659      	mov	r1, fp
   85a34:	3501      	adds	r5, #1
   85a36:	f002 fa53 	bl	87ee0 <__aeabi_dcmpgt>
   85a3a:	2800      	cmp	r0, #0
   85a3c:	d154      	bne.n	85ae8 <_dtoa_r+0x930>
   85a3e:	4632      	mov	r2, r6
   85a40:	463b      	mov	r3, r7
   85a42:	2000      	movs	r0, #0
   85a44:	4976      	ldr	r1, [pc, #472]	; (85c20 <_dtoa_r+0xa68>)
   85a46:	f001 fe07 	bl	87658 <__aeabi_dsub>
   85a4a:	4602      	mov	r2, r0
   85a4c:	460b      	mov	r3, r1
   85a4e:	4650      	mov	r0, sl
   85a50:	4659      	mov	r1, fp
   85a52:	f002 fa45 	bl	87ee0 <__aeabi_dcmpgt>
   85a56:	2800      	cmp	r0, #0
   85a58:	f040 8270 	bne.w	85f3c <_dtoa_r+0xd84>
   85a5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85a5e:	2a01      	cmp	r2, #1
   85a60:	f000 8112 	beq.w	85c88 <_dtoa_r+0xad0>
   85a64:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85a66:	9a04      	ldr	r2, [sp, #16]
   85a68:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   85a6c:	4413      	add	r3, r2
   85a6e:	4699      	mov	r9, r3
   85a70:	e00f      	b.n	85a92 <_dtoa_r+0x8da>
   85a72:	4632      	mov	r2, r6
   85a74:	463b      	mov	r3, r7
   85a76:	2000      	movs	r0, #0
   85a78:	4969      	ldr	r1, [pc, #420]	; (85c20 <_dtoa_r+0xa68>)
   85a7a:	f001 fded 	bl	87658 <__aeabi_dsub>
   85a7e:	4652      	mov	r2, sl
   85a80:	465b      	mov	r3, fp
   85a82:	f002 fa0f 	bl	87ea4 <__aeabi_dcmplt>
   85a86:	2800      	cmp	r0, #0
   85a88:	f040 8256 	bne.w	85f38 <_dtoa_r+0xd80>
   85a8c:	454d      	cmp	r5, r9
   85a8e:	f000 80f9 	beq.w	85c84 <_dtoa_r+0xacc>
   85a92:	4650      	mov	r0, sl
   85a94:	4659      	mov	r1, fp
   85a96:	2200      	movs	r2, #0
   85a98:	4b64      	ldr	r3, [pc, #400]	; (85c2c <_dtoa_r+0xa74>)
   85a9a:	f001 ff91 	bl	879c0 <__aeabi_dmul>
   85a9e:	2200      	movs	r2, #0
   85aa0:	4b62      	ldr	r3, [pc, #392]	; (85c2c <_dtoa_r+0xa74>)
   85aa2:	4682      	mov	sl, r0
   85aa4:	468b      	mov	fp, r1
   85aa6:	4630      	mov	r0, r6
   85aa8:	4639      	mov	r1, r7
   85aaa:	f001 ff89 	bl	879c0 <__aeabi_dmul>
   85aae:	460f      	mov	r7, r1
   85ab0:	4606      	mov	r6, r0
   85ab2:	f002 fa35 	bl	87f20 <__aeabi_d2iz>
   85ab6:	4680      	mov	r8, r0
   85ab8:	f001 ff1c 	bl	878f4 <__aeabi_i2d>
   85abc:	4602      	mov	r2, r0
   85abe:	460b      	mov	r3, r1
   85ac0:	4630      	mov	r0, r6
   85ac2:	4639      	mov	r1, r7
   85ac4:	f001 fdc8 	bl	87658 <__aeabi_dsub>
   85ac8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   85acc:	fa5f f888 	uxtb.w	r8, r8
   85ad0:	f805 8b01 	strb.w	r8, [r5], #1
   85ad4:	4652      	mov	r2, sl
   85ad6:	465b      	mov	r3, fp
   85ad8:	4606      	mov	r6, r0
   85ada:	460f      	mov	r7, r1
   85adc:	f002 f9e2 	bl	87ea4 <__aeabi_dcmplt>
   85ae0:	2800      	cmp	r0, #0
   85ae2:	d0c6      	beq.n	85a72 <_dtoa_r+0x8ba>
   85ae4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   85ae8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85aea:	9302      	str	r3, [sp, #8]
   85aec:	e523      	b.n	85536 <_dtoa_r+0x37e>
   85aee:	2300      	movs	r3, #0
   85af0:	930b      	str	r3, [sp, #44]	; 0x2c
   85af2:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85af4:	2b00      	cmp	r3, #0
   85af6:	f340 80dd 	ble.w	85cb4 <_dtoa_r+0xafc>
   85afa:	461f      	mov	r7, r3
   85afc:	461e      	mov	r6, r3
   85afe:	930f      	str	r3, [sp, #60]	; 0x3c
   85b00:	9307      	str	r3, [sp, #28]
   85b02:	e6f6      	b.n	858f2 <_dtoa_r+0x73a>
   85b04:	2301      	movs	r3, #1
   85b06:	930b      	str	r3, [sp, #44]	; 0x2c
   85b08:	e7f3      	b.n	85af2 <_dtoa_r+0x93a>
   85b0a:	f1ba 0f00 	cmp.w	sl, #0
   85b0e:	f47f ada7 	bne.w	85660 <_dtoa_r+0x4a8>
   85b12:	f3cb 0313 	ubfx	r3, fp, #0, #20
   85b16:	2b00      	cmp	r3, #0
   85b18:	f47f adbc 	bne.w	85694 <_dtoa_r+0x4dc>
   85b1c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   85b20:	0d3f      	lsrs	r7, r7, #20
   85b22:	053f      	lsls	r7, r7, #20
   85b24:	2f00      	cmp	r7, #0
   85b26:	f000 820d 	beq.w	85f44 <_dtoa_r+0xd8c>
   85b2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85b2c:	3301      	adds	r3, #1
   85b2e:	930a      	str	r3, [sp, #40]	; 0x28
   85b30:	9b08      	ldr	r3, [sp, #32]
   85b32:	3301      	adds	r3, #1
   85b34:	9308      	str	r3, [sp, #32]
   85b36:	2301      	movs	r3, #1
   85b38:	930c      	str	r3, [sp, #48]	; 0x30
   85b3a:	e5ad      	b.n	85698 <_dtoa_r+0x4e0>
   85b3c:	9b07      	ldr	r3, [sp, #28]
   85b3e:	2b00      	cmp	r3, #0
   85b40:	f73f ac48 	bgt.w	853d4 <_dtoa_r+0x21c>
   85b44:	f040 8222 	bne.w	85f8c <_dtoa_r+0xdd4>
   85b48:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   85b4c:	2200      	movs	r2, #0
   85b4e:	4b38      	ldr	r3, [pc, #224]	; (85c30 <_dtoa_r+0xa78>)
   85b50:	f001 ff36 	bl	879c0 <__aeabi_dmul>
   85b54:	4652      	mov	r2, sl
   85b56:	465b      	mov	r3, fp
   85b58:	f002 f9b8 	bl	87ecc <__aeabi_dcmpge>
   85b5c:	f8dd 801c 	ldr.w	r8, [sp, #28]
   85b60:	4646      	mov	r6, r8
   85b62:	2800      	cmp	r0, #0
   85b64:	d041      	beq.n	85bea <_dtoa_r+0xa32>
   85b66:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85b68:	9d04      	ldr	r5, [sp, #16]
   85b6a:	43db      	mvns	r3, r3
   85b6c:	9302      	str	r3, [sp, #8]
   85b6e:	4641      	mov	r1, r8
   85b70:	4620      	mov	r0, r4
   85b72:	f000 fe19 	bl	867a8 <_Bfree>
   85b76:	2e00      	cmp	r6, #0
   85b78:	f43f acdd 	beq.w	85536 <_dtoa_r+0x37e>
   85b7c:	e6a7      	b.n	858ce <_dtoa_r+0x716>
   85b7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85b80:	4649      	mov	r1, r9
   85b82:	4620      	mov	r0, r4
   85b84:	f000 ff48 	bl	86a18 <__pow5mult>
   85b88:	4681      	mov	r9, r0
   85b8a:	e557      	b.n	8563c <_dtoa_r+0x484>
   85b8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
   85b8e:	2a00      	cmp	r2, #0
   85b90:	f000 8188 	beq.w	85ea4 <_dtoa_r+0xcec>
   85b94:	f203 4333 	addw	r3, r3, #1075	; 0x433
   85b98:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   85b9a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   85b9c:	e4f2      	b.n	85584 <_dtoa_r+0x3cc>
   85b9e:	f1ba 0f00 	cmp.w	sl, #0
   85ba2:	f47f ad77 	bne.w	85694 <_dtoa_r+0x4dc>
   85ba6:	e7b4      	b.n	85b12 <_dtoa_r+0x95a>
   85ba8:	f000 fe08 	bl	867bc <__multadd>
   85bac:	4647      	mov	r7, r8
   85bae:	4606      	mov	r6, r0
   85bb0:	4683      	mov	fp, r0
   85bb2:	e5c0      	b.n	85736 <_dtoa_r+0x57e>
   85bb4:	4601      	mov	r1, r0
   85bb6:	4620      	mov	r0, r4
   85bb8:	9308      	str	r3, [sp, #32]
   85bba:	f000 fdf5 	bl	867a8 <_Bfree>
   85bbe:	2201      	movs	r2, #1
   85bc0:	9b08      	ldr	r3, [sp, #32]
   85bc2:	e5e2      	b.n	8578a <_dtoa_r+0x5d2>
   85bc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85bc6:	2b02      	cmp	r3, #2
   85bc8:	f77f ad98 	ble.w	856fc <_dtoa_r+0x544>
   85bcc:	9b07      	ldr	r3, [sp, #28]
   85bce:	2b00      	cmp	r3, #0
   85bd0:	d1c9      	bne.n	85b66 <_dtoa_r+0x9ae>
   85bd2:	4641      	mov	r1, r8
   85bd4:	2205      	movs	r2, #5
   85bd6:	4620      	mov	r0, r4
   85bd8:	f000 fdf0 	bl	867bc <__multadd>
   85bdc:	4601      	mov	r1, r0
   85bde:	4680      	mov	r8, r0
   85be0:	4648      	mov	r0, r9
   85be2:	f000 ffb9 	bl	86b58 <__mcmp>
   85be6:	2800      	cmp	r0, #0
   85be8:	ddbd      	ble.n	85b66 <_dtoa_r+0x9ae>
   85bea:	2331      	movs	r3, #49	; 0x31
   85bec:	9a02      	ldr	r2, [sp, #8]
   85bee:	9904      	ldr	r1, [sp, #16]
   85bf0:	3201      	adds	r2, #1
   85bf2:	9202      	str	r2, [sp, #8]
   85bf4:	700b      	strb	r3, [r1, #0]
   85bf6:	1c4d      	adds	r5, r1, #1
   85bf8:	e7b9      	b.n	85b6e <_dtoa_r+0x9b6>
   85bfa:	2331      	movs	r3, #49	; 0x31
   85bfc:	9a02      	ldr	r2, [sp, #8]
   85bfe:	3201      	adds	r2, #1
   85c00:	9202      	str	r2, [sp, #8]
   85c02:	9a04      	ldr	r2, [sp, #16]
   85c04:	7013      	strb	r3, [r2, #0]
   85c06:	e652      	b.n	858ae <_dtoa_r+0x6f6>
   85c08:	2301      	movs	r3, #1
   85c0a:	930b      	str	r3, [sp, #44]	; 0x2c
   85c0c:	e666      	b.n	858dc <_dtoa_r+0x724>
   85c0e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   85c12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   85c14:	e48f      	b.n	85536 <_dtoa_r+0x37e>
   85c16:	bf00      	nop
   85c18:	00089158 	.word	0x00089158
   85c1c:	00089130 	.word	0x00089130
   85c20:	3ff00000 	.word	0x3ff00000
   85c24:	401c0000 	.word	0x401c0000
   85c28:	3fe00000 	.word	0x3fe00000
   85c2c:	40240000 	.word	0x40240000
   85c30:	40140000 	.word	0x40140000
   85c34:	4650      	mov	r0, sl
   85c36:	f001 fe5d 	bl	878f4 <__aeabi_i2d>
   85c3a:	463a      	mov	r2, r7
   85c3c:	4643      	mov	r3, r8
   85c3e:	f001 febf 	bl	879c0 <__aeabi_dmul>
   85c42:	2200      	movs	r2, #0
   85c44:	4bc1      	ldr	r3, [pc, #772]	; (85f4c <_dtoa_r+0xd94>)
   85c46:	f001 fd09 	bl	8765c <__adddf3>
   85c4a:	4605      	mov	r5, r0
   85c4c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   85c50:	4641      	mov	r1, r8
   85c52:	2200      	movs	r2, #0
   85c54:	4bbe      	ldr	r3, [pc, #760]	; (85f50 <_dtoa_r+0xd98>)
   85c56:	4638      	mov	r0, r7
   85c58:	f001 fcfe 	bl	87658 <__aeabi_dsub>
   85c5c:	462a      	mov	r2, r5
   85c5e:	4633      	mov	r3, r6
   85c60:	4682      	mov	sl, r0
   85c62:	468b      	mov	fp, r1
   85c64:	f002 f93c 	bl	87ee0 <__aeabi_dcmpgt>
   85c68:	4680      	mov	r8, r0
   85c6a:	2800      	cmp	r0, #0
   85c6c:	f040 8110 	bne.w	85e90 <_dtoa_r+0xcd8>
   85c70:	462a      	mov	r2, r5
   85c72:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   85c76:	4650      	mov	r0, sl
   85c78:	4659      	mov	r1, fp
   85c7a:	f002 f913 	bl	87ea4 <__aeabi_dcmplt>
   85c7e:	b118      	cbz	r0, 85c88 <_dtoa_r+0xad0>
   85c80:	4646      	mov	r6, r8
   85c82:	e770      	b.n	85b66 <_dtoa_r+0x9ae>
   85c84:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   85c88:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   85c8c:	f7ff bb8f 	b.w	853ae <_dtoa_r+0x1f6>
   85c90:	9804      	ldr	r0, [sp, #16]
   85c92:	f7ff bac0 	b.w	85216 <_dtoa_r+0x5e>
   85c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85c98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   85c9a:	1afb      	subs	r3, r7, r3
   85c9c:	441a      	add	r2, r3
   85c9e:	970c      	str	r7, [sp, #48]	; 0x30
   85ca0:	920d      	str	r2, [sp, #52]	; 0x34
   85ca2:	2700      	movs	r7, #0
   85ca4:	e468      	b.n	85578 <_dtoa_r+0x3c0>
   85ca6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   85caa:	f04f 0a02 	mov.w	sl, #2
   85cae:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   85cb2:	e656      	b.n	85962 <_dtoa_r+0x7aa>
   85cb4:	2100      	movs	r1, #0
   85cb6:	2301      	movs	r3, #1
   85cb8:	4620      	mov	r0, r4
   85cba:	6461      	str	r1, [r4, #68]	; 0x44
   85cbc:	9325      	str	r3, [sp, #148]	; 0x94
   85cbe:	f000 fd4d 	bl	8675c <_Balloc>
   85cc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85cc4:	9004      	str	r0, [sp, #16]
   85cc6:	9307      	str	r3, [sp, #28]
   85cc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85cca:	6420      	str	r0, [r4, #64]	; 0x40
   85ccc:	930f      	str	r3, [sp, #60]	; 0x3c
   85cce:	e627      	b.n	85920 <_dtoa_r+0x768>
   85cd0:	2a00      	cmp	r2, #0
   85cd2:	46d0      	mov	r8, sl
   85cd4:	f8cd b020 	str.w	fp, [sp, #32]
   85cd8:	469a      	mov	sl, r3
   85cda:	dd11      	ble.n	85d00 <_dtoa_r+0xb48>
   85cdc:	4649      	mov	r1, r9
   85cde:	2201      	movs	r2, #1
   85ce0:	4620      	mov	r0, r4
   85ce2:	f000 fee9 	bl	86ab8 <__lshift>
   85ce6:	4641      	mov	r1, r8
   85ce8:	4681      	mov	r9, r0
   85cea:	f000 ff35 	bl	86b58 <__mcmp>
   85cee:	2800      	cmp	r0, #0
   85cf0:	f340 8145 	ble.w	85f7e <_dtoa_r+0xdc6>
   85cf4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   85cf8:	f000 8105 	beq.w	85f06 <_dtoa_r+0xd4e>
   85cfc:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   85d00:	46b3      	mov	fp, r6
   85d02:	f887 a000 	strb.w	sl, [r7]
   85d06:	1c7d      	adds	r5, r7, #1
   85d08:	9e08      	ldr	r6, [sp, #32]
   85d0a:	e5d0      	b.n	858ae <_dtoa_r+0x6f6>
   85d0c:	d104      	bne.n	85d18 <_dtoa_r+0xb60>
   85d0e:	f01a 0f01 	tst.w	sl, #1
   85d12:	d001      	beq.n	85d18 <_dtoa_r+0xb60>
   85d14:	e5bb      	b.n	8588e <_dtoa_r+0x6d6>
   85d16:	4615      	mov	r5, r2
   85d18:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   85d1c:	1e6a      	subs	r2, r5, #1
   85d1e:	2b30      	cmp	r3, #48	; 0x30
   85d20:	d0f9      	beq.n	85d16 <_dtoa_r+0xb5e>
   85d22:	e5c4      	b.n	858ae <_dtoa_r+0x6f6>
   85d24:	2230      	movs	r2, #48	; 0x30
   85d26:	9904      	ldr	r1, [sp, #16]
   85d28:	700a      	strb	r2, [r1, #0]
   85d2a:	9a02      	ldr	r2, [sp, #8]
   85d2c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   85d30:	3201      	adds	r2, #1
   85d32:	9202      	str	r2, [sp, #8]
   85d34:	f7ff bbfb 	b.w	8552e <_dtoa_r+0x376>
   85d38:	f000 80bb 	beq.w	85eb2 <_dtoa_r+0xcfa>
   85d3c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   85d40:	9b02      	ldr	r3, [sp, #8]
   85d42:	f04f 0a02 	mov.w	sl, #2
   85d46:	425d      	negs	r5, r3
   85d48:	4b82      	ldr	r3, [pc, #520]	; (85f54 <_dtoa_r+0xd9c>)
   85d4a:	f005 020f 	and.w	r2, r5, #15
   85d4e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   85d52:	e9d3 2300 	ldrd	r2, r3, [r3]
   85d56:	f001 fe33 	bl	879c0 <__aeabi_dmul>
   85d5a:	112d      	asrs	r5, r5, #4
   85d5c:	4607      	mov	r7, r0
   85d5e:	4688      	mov	r8, r1
   85d60:	f43f ae1a 	beq.w	85998 <_dtoa_r+0x7e0>
   85d64:	4e7c      	ldr	r6, [pc, #496]	; (85f58 <_dtoa_r+0xda0>)
   85d66:	07eb      	lsls	r3, r5, #31
   85d68:	d509      	bpl.n	85d7e <_dtoa_r+0xbc6>
   85d6a:	e9d6 2300 	ldrd	r2, r3, [r6]
   85d6e:	4638      	mov	r0, r7
   85d70:	4641      	mov	r1, r8
   85d72:	f001 fe25 	bl	879c0 <__aeabi_dmul>
   85d76:	4607      	mov	r7, r0
   85d78:	4688      	mov	r8, r1
   85d7a:	f10a 0a01 	add.w	sl, sl, #1
   85d7e:	106d      	asrs	r5, r5, #1
   85d80:	f106 0608 	add.w	r6, r6, #8
   85d84:	d1ef      	bne.n	85d66 <_dtoa_r+0xbae>
   85d86:	e607      	b.n	85998 <_dtoa_r+0x7e0>
   85d88:	6871      	ldr	r1, [r6, #4]
   85d8a:	4620      	mov	r0, r4
   85d8c:	f000 fce6 	bl	8675c <_Balloc>
   85d90:	4605      	mov	r5, r0
   85d92:	6933      	ldr	r3, [r6, #16]
   85d94:	f106 010c 	add.w	r1, r6, #12
   85d98:	3302      	adds	r3, #2
   85d9a:	009a      	lsls	r2, r3, #2
   85d9c:	300c      	adds	r0, #12
   85d9e:	f000 fc5b 	bl	86658 <memcpy>
   85da2:	4629      	mov	r1, r5
   85da4:	2201      	movs	r2, #1
   85da6:	4620      	mov	r0, r4
   85da8:	f000 fe86 	bl	86ab8 <__lshift>
   85dac:	9008      	str	r0, [sp, #32]
   85dae:	e4b6      	b.n	8571e <_dtoa_r+0x566>
   85db0:	2b39      	cmp	r3, #57	; 0x39
   85db2:	f8cd b020 	str.w	fp, [sp, #32]
   85db6:	46d0      	mov	r8, sl
   85db8:	f000 80a5 	beq.w	85f06 <_dtoa_r+0xd4e>
   85dbc:	f103 0a01 	add.w	sl, r3, #1
   85dc0:	46b3      	mov	fp, r6
   85dc2:	f887 a000 	strb.w	sl, [r7]
   85dc6:	1c7d      	adds	r5, r7, #1
   85dc8:	9e08      	ldr	r6, [sp, #32]
   85dca:	e570      	b.n	858ae <_dtoa_r+0x6f6>
   85dcc:	465a      	mov	r2, fp
   85dce:	46d0      	mov	r8, sl
   85dd0:	46b3      	mov	fp, r6
   85dd2:	469a      	mov	sl, r3
   85dd4:	4616      	mov	r6, r2
   85dd6:	e54e      	b.n	85876 <_dtoa_r+0x6be>
   85dd8:	9812      	ldr	r0, [sp, #72]	; 0x48
   85dda:	495e      	ldr	r1, [pc, #376]	; (85f54 <_dtoa_r+0xd9c>)
   85ddc:	462a      	mov	r2, r5
   85dde:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   85de2:	4633      	mov	r3, r6
   85de4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   85de8:	f001 fdea 	bl	879c0 <__aeabi_dmul>
   85dec:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   85df0:	4638      	mov	r0, r7
   85df2:	4641      	mov	r1, r8
   85df4:	f002 f894 	bl	87f20 <__aeabi_d2iz>
   85df8:	4605      	mov	r5, r0
   85dfa:	f001 fd7b 	bl	878f4 <__aeabi_i2d>
   85dfe:	4602      	mov	r2, r0
   85e00:	460b      	mov	r3, r1
   85e02:	4638      	mov	r0, r7
   85e04:	4641      	mov	r1, r8
   85e06:	f001 fc27 	bl	87658 <__aeabi_dsub>
   85e0a:	4606      	mov	r6, r0
   85e0c:	9812      	ldr	r0, [sp, #72]	; 0x48
   85e0e:	9a04      	ldr	r2, [sp, #16]
   85e10:	3530      	adds	r5, #48	; 0x30
   85e12:	2801      	cmp	r0, #1
   85e14:	7015      	strb	r5, [r2, #0]
   85e16:	460f      	mov	r7, r1
   85e18:	f102 0501 	add.w	r5, r2, #1
   85e1c:	d026      	beq.n	85e6c <_dtoa_r+0xcb4>
   85e1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85e20:	9a04      	ldr	r2, [sp, #16]
   85e22:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   85e26:	4413      	add	r3, r2
   85e28:	f04f 0a00 	mov.w	sl, #0
   85e2c:	4699      	mov	r9, r3
   85e2e:	f8df b130 	ldr.w	fp, [pc, #304]	; 85f60 <_dtoa_r+0xda8>
   85e32:	4652      	mov	r2, sl
   85e34:	465b      	mov	r3, fp
   85e36:	4630      	mov	r0, r6
   85e38:	4639      	mov	r1, r7
   85e3a:	f001 fdc1 	bl	879c0 <__aeabi_dmul>
   85e3e:	460f      	mov	r7, r1
   85e40:	4606      	mov	r6, r0
   85e42:	f002 f86d 	bl	87f20 <__aeabi_d2iz>
   85e46:	4680      	mov	r8, r0
   85e48:	f001 fd54 	bl	878f4 <__aeabi_i2d>
   85e4c:	4602      	mov	r2, r0
   85e4e:	460b      	mov	r3, r1
   85e50:	4630      	mov	r0, r6
   85e52:	4639      	mov	r1, r7
   85e54:	f001 fc00 	bl	87658 <__aeabi_dsub>
   85e58:	f108 0830 	add.w	r8, r8, #48	; 0x30
   85e5c:	f805 8b01 	strb.w	r8, [r5], #1
   85e60:	454d      	cmp	r5, r9
   85e62:	4606      	mov	r6, r0
   85e64:	460f      	mov	r7, r1
   85e66:	d1e4      	bne.n	85e32 <_dtoa_r+0xc7a>
   85e68:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   85e6c:	2200      	movs	r2, #0
   85e6e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   85e72:	4b3a      	ldr	r3, [pc, #232]	; (85f5c <_dtoa_r+0xda4>)
   85e74:	f001 fbf2 	bl	8765c <__adddf3>
   85e78:	4632      	mov	r2, r6
   85e7a:	463b      	mov	r3, r7
   85e7c:	f002 f812 	bl	87ea4 <__aeabi_dcmplt>
   85e80:	2800      	cmp	r0, #0
   85e82:	d046      	beq.n	85f12 <_dtoa_r+0xd5a>
   85e84:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85e86:	9302      	str	r3, [sp, #8]
   85e88:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   85e8c:	f7ff bb42 	b.w	85514 <_dtoa_r+0x35c>
   85e90:	f04f 0800 	mov.w	r8, #0
   85e94:	4646      	mov	r6, r8
   85e96:	e6a8      	b.n	85bea <_dtoa_r+0xa32>
   85e98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85e9a:	9a07      	ldr	r2, [sp, #28]
   85e9c:	1a9d      	subs	r5, r3, r2
   85e9e:	2300      	movs	r3, #0
   85ea0:	f7ff bb70 	b.w	85584 <_dtoa_r+0x3cc>
   85ea4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   85ea6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   85ea8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   85eac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   85eae:	f7ff bb69 	b.w	85584 <_dtoa_r+0x3cc>
   85eb2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   85eb6:	f04f 0a02 	mov.w	sl, #2
   85eba:	e56d      	b.n	85998 <_dtoa_r+0x7e0>
   85ebc:	9b07      	ldr	r3, [sp, #28]
   85ebe:	2b00      	cmp	r3, #0
   85ec0:	f43f aeb8 	beq.w	85c34 <_dtoa_r+0xa7c>
   85ec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85ec6:	2b00      	cmp	r3, #0
   85ec8:	f77f aede 	ble.w	85c88 <_dtoa_r+0xad0>
   85ecc:	2200      	movs	r2, #0
   85ece:	4b24      	ldr	r3, [pc, #144]	; (85f60 <_dtoa_r+0xda8>)
   85ed0:	4638      	mov	r0, r7
   85ed2:	4641      	mov	r1, r8
   85ed4:	f001 fd74 	bl	879c0 <__aeabi_dmul>
   85ed8:	4607      	mov	r7, r0
   85eda:	4688      	mov	r8, r1
   85edc:	f10a 0001 	add.w	r0, sl, #1
   85ee0:	f001 fd08 	bl	878f4 <__aeabi_i2d>
   85ee4:	463a      	mov	r2, r7
   85ee6:	4643      	mov	r3, r8
   85ee8:	f001 fd6a 	bl	879c0 <__aeabi_dmul>
   85eec:	2200      	movs	r2, #0
   85eee:	4b17      	ldr	r3, [pc, #92]	; (85f4c <_dtoa_r+0xd94>)
   85ef0:	f001 fbb4 	bl	8765c <__adddf3>
   85ef4:	9a02      	ldr	r2, [sp, #8]
   85ef6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85ef8:	3a01      	subs	r2, #1
   85efa:	4605      	mov	r5, r0
   85efc:	9215      	str	r2, [sp, #84]	; 0x54
   85efe:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   85f02:	9312      	str	r3, [sp, #72]	; 0x48
   85f04:	e569      	b.n	859da <_dtoa_r+0x822>
   85f06:	2239      	movs	r2, #57	; 0x39
   85f08:	46b3      	mov	fp, r6
   85f0a:	703a      	strb	r2, [r7, #0]
   85f0c:	9e08      	ldr	r6, [sp, #32]
   85f0e:	1c7d      	adds	r5, r7, #1
   85f10:	e4bf      	b.n	85892 <_dtoa_r+0x6da>
   85f12:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   85f16:	2000      	movs	r0, #0
   85f18:	4910      	ldr	r1, [pc, #64]	; (85f5c <_dtoa_r+0xda4>)
   85f1a:	f001 fb9d 	bl	87658 <__aeabi_dsub>
   85f1e:	4632      	mov	r2, r6
   85f20:	463b      	mov	r3, r7
   85f22:	f001 ffdd 	bl	87ee0 <__aeabi_dcmpgt>
   85f26:	b908      	cbnz	r0, 85f2c <_dtoa_r+0xd74>
   85f28:	e6ae      	b.n	85c88 <_dtoa_r+0xad0>
   85f2a:	4615      	mov	r5, r2
   85f2c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   85f30:	1e6a      	subs	r2, r5, #1
   85f32:	2b30      	cmp	r3, #48	; 0x30
   85f34:	d0f9      	beq.n	85f2a <_dtoa_r+0xd72>
   85f36:	e5d7      	b.n	85ae8 <_dtoa_r+0x930>
   85f38:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   85f3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85f3e:	9302      	str	r3, [sp, #8]
   85f40:	f7ff bae8 	b.w	85514 <_dtoa_r+0x35c>
   85f44:	970c      	str	r7, [sp, #48]	; 0x30
   85f46:	f7ff bba7 	b.w	85698 <_dtoa_r+0x4e0>
   85f4a:	bf00      	nop
   85f4c:	401c0000 	.word	0x401c0000
   85f50:	40140000 	.word	0x40140000
   85f54:	00089158 	.word	0x00089158
   85f58:	00089130 	.word	0x00089130
   85f5c:	3fe00000 	.word	0x3fe00000
   85f60:	40240000 	.word	0x40240000
   85f64:	2b39      	cmp	r3, #57	; 0x39
   85f66:	f8cd b020 	str.w	fp, [sp, #32]
   85f6a:	46d0      	mov	r8, sl
   85f6c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   85f70:	469a      	mov	sl, r3
   85f72:	d0c8      	beq.n	85f06 <_dtoa_r+0xd4e>
   85f74:	f1bb 0f00 	cmp.w	fp, #0
   85f78:	f73f aec0 	bgt.w	85cfc <_dtoa_r+0xb44>
   85f7c:	e6c0      	b.n	85d00 <_dtoa_r+0xb48>
   85f7e:	f47f aebf 	bne.w	85d00 <_dtoa_r+0xb48>
   85f82:	f01a 0f01 	tst.w	sl, #1
   85f86:	f43f aebb 	beq.w	85d00 <_dtoa_r+0xb48>
   85f8a:	e6b3      	b.n	85cf4 <_dtoa_r+0xb3c>
   85f8c:	f04f 0800 	mov.w	r8, #0
   85f90:	4646      	mov	r6, r8
   85f92:	e5e8      	b.n	85b66 <_dtoa_r+0x9ae>
   85f94:	4631      	mov	r1, r6
   85f96:	2300      	movs	r3, #0
   85f98:	220a      	movs	r2, #10
   85f9a:	4620      	mov	r0, r4
   85f9c:	f000 fc0e 	bl	867bc <__multadd>
   85fa0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85fa2:	4606      	mov	r6, r0
   85fa4:	2b00      	cmp	r3, #0
   85fa6:	dd07      	ble.n	85fb8 <_dtoa_r+0xe00>
   85fa8:	9307      	str	r3, [sp, #28]
   85faa:	f7ff bbab 	b.w	85704 <_dtoa_r+0x54c>
   85fae:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85fb0:	2b02      	cmp	r3, #2
   85fb2:	dc1f      	bgt.n	85ff4 <_dtoa_r+0xe3c>
   85fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85fb6:	e43c      	b.n	85832 <_dtoa_r+0x67a>
   85fb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85fba:	2b02      	cmp	r3, #2
   85fbc:	dc1a      	bgt.n	85ff4 <_dtoa_r+0xe3c>
   85fbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85fc0:	e7f2      	b.n	85fa8 <_dtoa_r+0xdf0>
   85fc2:	f43f ab81 	beq.w	856c8 <_dtoa_r+0x510>
   85fc6:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   85fca:	e411      	b.n	857f0 <_dtoa_r+0x638>
   85fcc:	2500      	movs	r5, #0
   85fce:	4620      	mov	r0, r4
   85fd0:	6465      	str	r5, [r4, #68]	; 0x44
   85fd2:	4629      	mov	r1, r5
   85fd4:	f000 fbc2 	bl	8675c <_Balloc>
   85fd8:	f04f 33ff 	mov.w	r3, #4294967295
   85fdc:	9307      	str	r3, [sp, #28]
   85fde:	930f      	str	r3, [sp, #60]	; 0x3c
   85fe0:	2301      	movs	r3, #1
   85fe2:	9004      	str	r0, [sp, #16]
   85fe4:	9525      	str	r5, [sp, #148]	; 0x94
   85fe6:	6420      	str	r0, [r4, #64]	; 0x40
   85fe8:	930b      	str	r3, [sp, #44]	; 0x2c
   85fea:	f7ff b9e0 	b.w	853ae <_dtoa_r+0x1f6>
   85fee:	2501      	movs	r5, #1
   85ff0:	f7ff b9a8 	b.w	85344 <_dtoa_r+0x18c>
   85ff4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85ff6:	9307      	str	r3, [sp, #28]
   85ff8:	e5e8      	b.n	85bcc <_dtoa_r+0xa14>
   85ffa:	bf00      	nop

00085ffc <__libc_fini_array>:
   85ffc:	b538      	push	{r3, r4, r5, lr}
   85ffe:	4c0a      	ldr	r4, [pc, #40]	; (86028 <__libc_fini_array+0x2c>)
   86000:	4d0a      	ldr	r5, [pc, #40]	; (8602c <__libc_fini_array+0x30>)
   86002:	1b64      	subs	r4, r4, r5
   86004:	10a4      	asrs	r4, r4, #2
   86006:	d00a      	beq.n	8601e <__libc_fini_array+0x22>
   86008:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8600c:	3b01      	subs	r3, #1
   8600e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   86012:	3c01      	subs	r4, #1
   86014:	f855 3904 	ldr.w	r3, [r5], #-4
   86018:	4798      	blx	r3
   8601a:	2c00      	cmp	r4, #0
   8601c:	d1f9      	bne.n	86012 <__libc_fini_array+0x16>
   8601e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   86022:	f003 b98f 	b.w	89344 <_fini>
   86026:	bf00      	nop
   86028:	00089354 	.word	0x00089354
   8602c:	00089350 	.word	0x00089350

00086030 <__locale_ctype_ptr_l>:
   86030:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   86034:	4770      	bx	lr
   86036:	bf00      	nop

00086038 <_localeconv_r>:
   86038:	4a04      	ldr	r2, [pc, #16]	; (8604c <_localeconv_r+0x14>)
   8603a:	4b05      	ldr	r3, [pc, #20]	; (86050 <_localeconv_r+0x18>)
   8603c:	6812      	ldr	r2, [r2, #0]
   8603e:	6b50      	ldr	r0, [r2, #52]	; 0x34
   86040:	2800      	cmp	r0, #0
   86042:	bf08      	it	eq
   86044:	4618      	moveq	r0, r3
   86046:	30f0      	adds	r0, #240	; 0xf0
   86048:	4770      	bx	lr
   8604a:	bf00      	nop
   8604c:	2000062c 	.word	0x2000062c
   86050:	20000a5c 	.word	0x20000a5c

00086054 <__retarget_lock_acquire_recursive>:
   86054:	4770      	bx	lr
   86056:	bf00      	nop

00086058 <__retarget_lock_release_recursive>:
   86058:	4770      	bx	lr
   8605a:	bf00      	nop

0008605c <_malloc_r>:
   8605c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86060:	f101 060b 	add.w	r6, r1, #11
   86064:	2e16      	cmp	r6, #22
   86066:	b083      	sub	sp, #12
   86068:	4605      	mov	r5, r0
   8606a:	f240 809e 	bls.w	861aa <_malloc_r+0x14e>
   8606e:	f036 0607 	bics.w	r6, r6, #7
   86072:	f100 80bd 	bmi.w	861f0 <_malloc_r+0x194>
   86076:	42b1      	cmp	r1, r6
   86078:	f200 80ba 	bhi.w	861f0 <_malloc_r+0x194>
   8607c:	f000 fb62 	bl	86744 <__malloc_lock>
   86080:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   86084:	f0c0 8285 	bcc.w	86592 <_malloc_r+0x536>
   86088:	0a73      	lsrs	r3, r6, #9
   8608a:	f000 80b8 	beq.w	861fe <_malloc_r+0x1a2>
   8608e:	2b04      	cmp	r3, #4
   86090:	f200 816c 	bhi.w	8636c <_malloc_r+0x310>
   86094:	09b3      	lsrs	r3, r6, #6
   86096:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8609a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8609e:	00c1      	lsls	r1, r0, #3
   860a0:	4fb8      	ldr	r7, [pc, #736]	; (86384 <_malloc_r+0x328>)
   860a2:	4439      	add	r1, r7
   860a4:	684c      	ldr	r4, [r1, #4]
   860a6:	3908      	subs	r1, #8
   860a8:	42a1      	cmp	r1, r4
   860aa:	d106      	bne.n	860ba <_malloc_r+0x5e>
   860ac:	e00c      	b.n	860c8 <_malloc_r+0x6c>
   860ae:	2a00      	cmp	r2, #0
   860b0:	f280 80ab 	bge.w	8620a <_malloc_r+0x1ae>
   860b4:	68e4      	ldr	r4, [r4, #12]
   860b6:	42a1      	cmp	r1, r4
   860b8:	d006      	beq.n	860c8 <_malloc_r+0x6c>
   860ba:	6863      	ldr	r3, [r4, #4]
   860bc:	f023 0303 	bic.w	r3, r3, #3
   860c0:	1b9a      	subs	r2, r3, r6
   860c2:	2a0f      	cmp	r2, #15
   860c4:	ddf3      	ble.n	860ae <_malloc_r+0x52>
   860c6:	4670      	mov	r0, lr
   860c8:	693c      	ldr	r4, [r7, #16]
   860ca:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 86398 <_malloc_r+0x33c>
   860ce:	4574      	cmp	r4, lr
   860d0:	f000 819e 	beq.w	86410 <_malloc_r+0x3b4>
   860d4:	6863      	ldr	r3, [r4, #4]
   860d6:	f023 0303 	bic.w	r3, r3, #3
   860da:	1b9a      	subs	r2, r3, r6
   860dc:	2a0f      	cmp	r2, #15
   860de:	f300 8183 	bgt.w	863e8 <_malloc_r+0x38c>
   860e2:	2a00      	cmp	r2, #0
   860e4:	f8c7 e014 	str.w	lr, [r7, #20]
   860e8:	f8c7 e010 	str.w	lr, [r7, #16]
   860ec:	f280 8091 	bge.w	86212 <_malloc_r+0x1b6>
   860f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   860f4:	f080 8154 	bcs.w	863a0 <_malloc_r+0x344>
   860f8:	2201      	movs	r2, #1
   860fa:	08db      	lsrs	r3, r3, #3
   860fc:	6879      	ldr	r1, [r7, #4]
   860fe:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   86102:	4413      	add	r3, r2
   86104:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   86108:	fa02 f20c 	lsl.w	r2, r2, ip
   8610c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   86110:	430a      	orrs	r2, r1
   86112:	f1ac 0108 	sub.w	r1, ip, #8
   86116:	60e1      	str	r1, [r4, #12]
   86118:	f8c4 8008 	str.w	r8, [r4, #8]
   8611c:	607a      	str	r2, [r7, #4]
   8611e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   86122:	f8c8 400c 	str.w	r4, [r8, #12]
   86126:	2401      	movs	r4, #1
   86128:	1083      	asrs	r3, r0, #2
   8612a:	409c      	lsls	r4, r3
   8612c:	4294      	cmp	r4, r2
   8612e:	d87d      	bhi.n	8622c <_malloc_r+0x1d0>
   86130:	4214      	tst	r4, r2
   86132:	d106      	bne.n	86142 <_malloc_r+0xe6>
   86134:	f020 0003 	bic.w	r0, r0, #3
   86138:	0064      	lsls	r4, r4, #1
   8613a:	4214      	tst	r4, r2
   8613c:	f100 0004 	add.w	r0, r0, #4
   86140:	d0fa      	beq.n	86138 <_malloc_r+0xdc>
   86142:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   86146:	46cc      	mov	ip, r9
   86148:	4680      	mov	r8, r0
   8614a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8614e:	459c      	cmp	ip, r3
   86150:	d107      	bne.n	86162 <_malloc_r+0x106>
   86152:	e15f      	b.n	86414 <_malloc_r+0x3b8>
   86154:	2a00      	cmp	r2, #0
   86156:	f280 816d 	bge.w	86434 <_malloc_r+0x3d8>
   8615a:	68db      	ldr	r3, [r3, #12]
   8615c:	459c      	cmp	ip, r3
   8615e:	f000 8159 	beq.w	86414 <_malloc_r+0x3b8>
   86162:	6859      	ldr	r1, [r3, #4]
   86164:	f021 0103 	bic.w	r1, r1, #3
   86168:	1b8a      	subs	r2, r1, r6
   8616a:	2a0f      	cmp	r2, #15
   8616c:	ddf2      	ble.n	86154 <_malloc_r+0xf8>
   8616e:	68dc      	ldr	r4, [r3, #12]
   86170:	f8d3 c008 	ldr.w	ip, [r3, #8]
   86174:	f046 0801 	orr.w	r8, r6, #1
   86178:	4628      	mov	r0, r5
   8617a:	441e      	add	r6, r3
   8617c:	f042 0501 	orr.w	r5, r2, #1
   86180:	f8c3 8004 	str.w	r8, [r3, #4]
   86184:	f8cc 400c 	str.w	r4, [ip, #12]
   86188:	f8c4 c008 	str.w	ip, [r4, #8]
   8618c:	617e      	str	r6, [r7, #20]
   8618e:	613e      	str	r6, [r7, #16]
   86190:	f8c6 e00c 	str.w	lr, [r6, #12]
   86194:	f8c6 e008 	str.w	lr, [r6, #8]
   86198:	6075      	str	r5, [r6, #4]
   8619a:	505a      	str	r2, [r3, r1]
   8619c:	9300      	str	r3, [sp, #0]
   8619e:	f000 fad7 	bl	86750 <__malloc_unlock>
   861a2:	9b00      	ldr	r3, [sp, #0]
   861a4:	f103 0408 	add.w	r4, r3, #8
   861a8:	e01e      	b.n	861e8 <_malloc_r+0x18c>
   861aa:	2910      	cmp	r1, #16
   861ac:	d820      	bhi.n	861f0 <_malloc_r+0x194>
   861ae:	f000 fac9 	bl	86744 <__malloc_lock>
   861b2:	2610      	movs	r6, #16
   861b4:	2318      	movs	r3, #24
   861b6:	2002      	movs	r0, #2
   861b8:	4f72      	ldr	r7, [pc, #456]	; (86384 <_malloc_r+0x328>)
   861ba:	443b      	add	r3, r7
   861bc:	685c      	ldr	r4, [r3, #4]
   861be:	f1a3 0208 	sub.w	r2, r3, #8
   861c2:	4294      	cmp	r4, r2
   861c4:	f000 812f 	beq.w	86426 <_malloc_r+0x3ca>
   861c8:	6863      	ldr	r3, [r4, #4]
   861ca:	68e1      	ldr	r1, [r4, #12]
   861cc:	f023 0303 	bic.w	r3, r3, #3
   861d0:	4423      	add	r3, r4
   861d2:	685a      	ldr	r2, [r3, #4]
   861d4:	68a6      	ldr	r6, [r4, #8]
   861d6:	f042 0201 	orr.w	r2, r2, #1
   861da:	60f1      	str	r1, [r6, #12]
   861dc:	4628      	mov	r0, r5
   861de:	608e      	str	r6, [r1, #8]
   861e0:	605a      	str	r2, [r3, #4]
   861e2:	f000 fab5 	bl	86750 <__malloc_unlock>
   861e6:	3408      	adds	r4, #8
   861e8:	4620      	mov	r0, r4
   861ea:	b003      	add	sp, #12
   861ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   861f0:	2400      	movs	r4, #0
   861f2:	230c      	movs	r3, #12
   861f4:	4620      	mov	r0, r4
   861f6:	602b      	str	r3, [r5, #0]
   861f8:	b003      	add	sp, #12
   861fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   861fe:	2040      	movs	r0, #64	; 0x40
   86200:	f44f 7100 	mov.w	r1, #512	; 0x200
   86204:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   86208:	e74a      	b.n	860a0 <_malloc_r+0x44>
   8620a:	4423      	add	r3, r4
   8620c:	685a      	ldr	r2, [r3, #4]
   8620e:	68e1      	ldr	r1, [r4, #12]
   86210:	e7e0      	b.n	861d4 <_malloc_r+0x178>
   86212:	4423      	add	r3, r4
   86214:	685a      	ldr	r2, [r3, #4]
   86216:	4628      	mov	r0, r5
   86218:	f042 0201 	orr.w	r2, r2, #1
   8621c:	605a      	str	r2, [r3, #4]
   8621e:	3408      	adds	r4, #8
   86220:	f000 fa96 	bl	86750 <__malloc_unlock>
   86224:	4620      	mov	r0, r4
   86226:	b003      	add	sp, #12
   86228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8622c:	68bc      	ldr	r4, [r7, #8]
   8622e:	6863      	ldr	r3, [r4, #4]
   86230:	f023 0803 	bic.w	r8, r3, #3
   86234:	45b0      	cmp	r8, r6
   86236:	d304      	bcc.n	86242 <_malloc_r+0x1e6>
   86238:	eba8 0306 	sub.w	r3, r8, r6
   8623c:	2b0f      	cmp	r3, #15
   8623e:	f300 8085 	bgt.w	8634c <_malloc_r+0x2f0>
   86242:	f8df 9158 	ldr.w	r9, [pc, #344]	; 8639c <_malloc_r+0x340>
   86246:	4b50      	ldr	r3, [pc, #320]	; (86388 <_malloc_r+0x32c>)
   86248:	f8d9 2000 	ldr.w	r2, [r9]
   8624c:	681b      	ldr	r3, [r3, #0]
   8624e:	3201      	adds	r2, #1
   86250:	4433      	add	r3, r6
   86252:	eb04 0a08 	add.w	sl, r4, r8
   86256:	f000 8154 	beq.w	86502 <_malloc_r+0x4a6>
   8625a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8625e:	330f      	adds	r3, #15
   86260:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   86264:	f02b 0b0f 	bic.w	fp, fp, #15
   86268:	4659      	mov	r1, fp
   8626a:	4628      	mov	r0, r5
   8626c:	f000 fd72 	bl	86d54 <_sbrk_r>
   86270:	1c41      	adds	r1, r0, #1
   86272:	4602      	mov	r2, r0
   86274:	f000 80fb 	beq.w	8646e <_malloc_r+0x412>
   86278:	4582      	cmp	sl, r0
   8627a:	f200 80f6 	bhi.w	8646a <_malloc_r+0x40e>
   8627e:	4b43      	ldr	r3, [pc, #268]	; (8638c <_malloc_r+0x330>)
   86280:	6819      	ldr	r1, [r3, #0]
   86282:	4459      	add	r1, fp
   86284:	6019      	str	r1, [r3, #0]
   86286:	f000 814c 	beq.w	86522 <_malloc_r+0x4c6>
   8628a:	f8d9 0000 	ldr.w	r0, [r9]
   8628e:	3001      	adds	r0, #1
   86290:	bf1b      	ittet	ne
   86292:	eba2 0a0a 	subne.w	sl, r2, sl
   86296:	4451      	addne	r1, sl
   86298:	f8c9 2000 	streq.w	r2, [r9]
   8629c:	6019      	strne	r1, [r3, #0]
   8629e:	f012 0107 	ands.w	r1, r2, #7
   862a2:	f000 8114 	beq.w	864ce <_malloc_r+0x472>
   862a6:	f1c1 0008 	rsb	r0, r1, #8
   862aa:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   862ae:	4402      	add	r2, r0
   862b0:	3108      	adds	r1, #8
   862b2:	eb02 090b 	add.w	r9, r2, fp
   862b6:	f3c9 090b 	ubfx	r9, r9, #0, #12
   862ba:	eba1 0909 	sub.w	r9, r1, r9
   862be:	4649      	mov	r1, r9
   862c0:	4628      	mov	r0, r5
   862c2:	9301      	str	r3, [sp, #4]
   862c4:	9200      	str	r2, [sp, #0]
   862c6:	f000 fd45 	bl	86d54 <_sbrk_r>
   862ca:	1c43      	adds	r3, r0, #1
   862cc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   862d0:	f000 8142 	beq.w	86558 <_malloc_r+0x4fc>
   862d4:	1a80      	subs	r0, r0, r2
   862d6:	4448      	add	r0, r9
   862d8:	f040 0001 	orr.w	r0, r0, #1
   862dc:	6819      	ldr	r1, [r3, #0]
   862de:	42bc      	cmp	r4, r7
   862e0:	4449      	add	r1, r9
   862e2:	60ba      	str	r2, [r7, #8]
   862e4:	6019      	str	r1, [r3, #0]
   862e6:	6050      	str	r0, [r2, #4]
   862e8:	d017      	beq.n	8631a <_malloc_r+0x2be>
   862ea:	f1b8 0f0f 	cmp.w	r8, #15
   862ee:	f240 80fa 	bls.w	864e6 <_malloc_r+0x48a>
   862f2:	f04f 0c05 	mov.w	ip, #5
   862f6:	6862      	ldr	r2, [r4, #4]
   862f8:	f1a8 000c 	sub.w	r0, r8, #12
   862fc:	f020 0007 	bic.w	r0, r0, #7
   86300:	f002 0201 	and.w	r2, r2, #1
   86304:	eb04 0e00 	add.w	lr, r4, r0
   86308:	4302      	orrs	r2, r0
   8630a:	280f      	cmp	r0, #15
   8630c:	6062      	str	r2, [r4, #4]
   8630e:	f8ce c004 	str.w	ip, [lr, #4]
   86312:	f8ce c008 	str.w	ip, [lr, #8]
   86316:	f200 8116 	bhi.w	86546 <_malloc_r+0x4ea>
   8631a:	4b1d      	ldr	r3, [pc, #116]	; (86390 <_malloc_r+0x334>)
   8631c:	68bc      	ldr	r4, [r7, #8]
   8631e:	681a      	ldr	r2, [r3, #0]
   86320:	4291      	cmp	r1, r2
   86322:	bf88      	it	hi
   86324:	6019      	strhi	r1, [r3, #0]
   86326:	4b1b      	ldr	r3, [pc, #108]	; (86394 <_malloc_r+0x338>)
   86328:	681a      	ldr	r2, [r3, #0]
   8632a:	4291      	cmp	r1, r2
   8632c:	6862      	ldr	r2, [r4, #4]
   8632e:	bf88      	it	hi
   86330:	6019      	strhi	r1, [r3, #0]
   86332:	f022 0203 	bic.w	r2, r2, #3
   86336:	4296      	cmp	r6, r2
   86338:	eba2 0306 	sub.w	r3, r2, r6
   8633c:	d801      	bhi.n	86342 <_malloc_r+0x2e6>
   8633e:	2b0f      	cmp	r3, #15
   86340:	dc04      	bgt.n	8634c <_malloc_r+0x2f0>
   86342:	4628      	mov	r0, r5
   86344:	f000 fa04 	bl	86750 <__malloc_unlock>
   86348:	2400      	movs	r4, #0
   8634a:	e74d      	b.n	861e8 <_malloc_r+0x18c>
   8634c:	f046 0201 	orr.w	r2, r6, #1
   86350:	f043 0301 	orr.w	r3, r3, #1
   86354:	4426      	add	r6, r4
   86356:	6062      	str	r2, [r4, #4]
   86358:	4628      	mov	r0, r5
   8635a:	60be      	str	r6, [r7, #8]
   8635c:	3408      	adds	r4, #8
   8635e:	6073      	str	r3, [r6, #4]
   86360:	f000 f9f6 	bl	86750 <__malloc_unlock>
   86364:	4620      	mov	r0, r4
   86366:	b003      	add	sp, #12
   86368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8636c:	2b14      	cmp	r3, #20
   8636e:	d970      	bls.n	86452 <_malloc_r+0x3f6>
   86370:	2b54      	cmp	r3, #84	; 0x54
   86372:	f200 80a2 	bhi.w	864ba <_malloc_r+0x45e>
   86376:	0b33      	lsrs	r3, r6, #12
   86378:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   8637c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   86380:	00c1      	lsls	r1, r0, #3
   86382:	e68d      	b.n	860a0 <_malloc_r+0x44>
   86384:	20000bc8 	.word	0x20000bc8
   86388:	200010b0 	.word	0x200010b0
   8638c:	20001080 	.word	0x20001080
   86390:	200010a8 	.word	0x200010a8
   86394:	200010ac 	.word	0x200010ac
   86398:	20000bd0 	.word	0x20000bd0
   8639c:	20000fd0 	.word	0x20000fd0
   863a0:	0a5a      	lsrs	r2, r3, #9
   863a2:	2a04      	cmp	r2, #4
   863a4:	d95b      	bls.n	8645e <_malloc_r+0x402>
   863a6:	2a14      	cmp	r2, #20
   863a8:	f200 80ae 	bhi.w	86508 <_malloc_r+0x4ac>
   863ac:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   863b0:	00c9      	lsls	r1, r1, #3
   863b2:	325b      	adds	r2, #91	; 0x5b
   863b4:	eb07 0c01 	add.w	ip, r7, r1
   863b8:	5879      	ldr	r1, [r7, r1]
   863ba:	f1ac 0c08 	sub.w	ip, ip, #8
   863be:	458c      	cmp	ip, r1
   863c0:	f000 8088 	beq.w	864d4 <_malloc_r+0x478>
   863c4:	684a      	ldr	r2, [r1, #4]
   863c6:	f022 0203 	bic.w	r2, r2, #3
   863ca:	4293      	cmp	r3, r2
   863cc:	d273      	bcs.n	864b6 <_malloc_r+0x45a>
   863ce:	6889      	ldr	r1, [r1, #8]
   863d0:	458c      	cmp	ip, r1
   863d2:	d1f7      	bne.n	863c4 <_malloc_r+0x368>
   863d4:	f8dc 300c 	ldr.w	r3, [ip, #12]
   863d8:	687a      	ldr	r2, [r7, #4]
   863da:	60e3      	str	r3, [r4, #12]
   863dc:	f8c4 c008 	str.w	ip, [r4, #8]
   863e0:	609c      	str	r4, [r3, #8]
   863e2:	f8cc 400c 	str.w	r4, [ip, #12]
   863e6:	e69e      	b.n	86126 <_malloc_r+0xca>
   863e8:	f046 0c01 	orr.w	ip, r6, #1
   863ec:	f042 0101 	orr.w	r1, r2, #1
   863f0:	4426      	add	r6, r4
   863f2:	f8c4 c004 	str.w	ip, [r4, #4]
   863f6:	4628      	mov	r0, r5
   863f8:	617e      	str	r6, [r7, #20]
   863fa:	613e      	str	r6, [r7, #16]
   863fc:	f8c6 e00c 	str.w	lr, [r6, #12]
   86400:	f8c6 e008 	str.w	lr, [r6, #8]
   86404:	6071      	str	r1, [r6, #4]
   86406:	50e2      	str	r2, [r4, r3]
   86408:	f000 f9a2 	bl	86750 <__malloc_unlock>
   8640c:	3408      	adds	r4, #8
   8640e:	e6eb      	b.n	861e8 <_malloc_r+0x18c>
   86410:	687a      	ldr	r2, [r7, #4]
   86412:	e688      	b.n	86126 <_malloc_r+0xca>
   86414:	f108 0801 	add.w	r8, r8, #1
   86418:	f018 0f03 	tst.w	r8, #3
   8641c:	f10c 0c08 	add.w	ip, ip, #8
   86420:	f47f ae93 	bne.w	8614a <_malloc_r+0xee>
   86424:	e02d      	b.n	86482 <_malloc_r+0x426>
   86426:	68dc      	ldr	r4, [r3, #12]
   86428:	42a3      	cmp	r3, r4
   8642a:	bf08      	it	eq
   8642c:	3002      	addeq	r0, #2
   8642e:	f43f ae4b 	beq.w	860c8 <_malloc_r+0x6c>
   86432:	e6c9      	b.n	861c8 <_malloc_r+0x16c>
   86434:	461c      	mov	r4, r3
   86436:	4419      	add	r1, r3
   86438:	684a      	ldr	r2, [r1, #4]
   8643a:	68db      	ldr	r3, [r3, #12]
   8643c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   86440:	f042 0201 	orr.w	r2, r2, #1
   86444:	604a      	str	r2, [r1, #4]
   86446:	4628      	mov	r0, r5
   86448:	60f3      	str	r3, [r6, #12]
   8644a:	609e      	str	r6, [r3, #8]
   8644c:	f000 f980 	bl	86750 <__malloc_unlock>
   86450:	e6ca      	b.n	861e8 <_malloc_r+0x18c>
   86452:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   86456:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8645a:	00c1      	lsls	r1, r0, #3
   8645c:	e620      	b.n	860a0 <_malloc_r+0x44>
   8645e:	099a      	lsrs	r2, r3, #6
   86460:	f102 0139 	add.w	r1, r2, #57	; 0x39
   86464:	00c9      	lsls	r1, r1, #3
   86466:	3238      	adds	r2, #56	; 0x38
   86468:	e7a4      	b.n	863b4 <_malloc_r+0x358>
   8646a:	42bc      	cmp	r4, r7
   8646c:	d054      	beq.n	86518 <_malloc_r+0x4bc>
   8646e:	68bc      	ldr	r4, [r7, #8]
   86470:	6862      	ldr	r2, [r4, #4]
   86472:	f022 0203 	bic.w	r2, r2, #3
   86476:	e75e      	b.n	86336 <_malloc_r+0x2da>
   86478:	f859 3908 	ldr.w	r3, [r9], #-8
   8647c:	4599      	cmp	r9, r3
   8647e:	f040 8086 	bne.w	8658e <_malloc_r+0x532>
   86482:	f010 0f03 	tst.w	r0, #3
   86486:	f100 30ff 	add.w	r0, r0, #4294967295
   8648a:	d1f5      	bne.n	86478 <_malloc_r+0x41c>
   8648c:	687b      	ldr	r3, [r7, #4]
   8648e:	ea23 0304 	bic.w	r3, r3, r4
   86492:	607b      	str	r3, [r7, #4]
   86494:	0064      	lsls	r4, r4, #1
   86496:	429c      	cmp	r4, r3
   86498:	f63f aec8 	bhi.w	8622c <_malloc_r+0x1d0>
   8649c:	2c00      	cmp	r4, #0
   8649e:	f43f aec5 	beq.w	8622c <_malloc_r+0x1d0>
   864a2:	421c      	tst	r4, r3
   864a4:	4640      	mov	r0, r8
   864a6:	f47f ae4c 	bne.w	86142 <_malloc_r+0xe6>
   864aa:	0064      	lsls	r4, r4, #1
   864ac:	421c      	tst	r4, r3
   864ae:	f100 0004 	add.w	r0, r0, #4
   864b2:	d0fa      	beq.n	864aa <_malloc_r+0x44e>
   864b4:	e645      	b.n	86142 <_malloc_r+0xe6>
   864b6:	468c      	mov	ip, r1
   864b8:	e78c      	b.n	863d4 <_malloc_r+0x378>
   864ba:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   864be:	d815      	bhi.n	864ec <_malloc_r+0x490>
   864c0:	0bf3      	lsrs	r3, r6, #15
   864c2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   864c6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   864ca:	00c1      	lsls	r1, r0, #3
   864cc:	e5e8      	b.n	860a0 <_malloc_r+0x44>
   864ce:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   864d2:	e6ee      	b.n	862b2 <_malloc_r+0x256>
   864d4:	2101      	movs	r1, #1
   864d6:	687b      	ldr	r3, [r7, #4]
   864d8:	1092      	asrs	r2, r2, #2
   864da:	fa01 f202 	lsl.w	r2, r1, r2
   864de:	431a      	orrs	r2, r3
   864e0:	607a      	str	r2, [r7, #4]
   864e2:	4663      	mov	r3, ip
   864e4:	e779      	b.n	863da <_malloc_r+0x37e>
   864e6:	2301      	movs	r3, #1
   864e8:	6053      	str	r3, [r2, #4]
   864ea:	e72a      	b.n	86342 <_malloc_r+0x2e6>
   864ec:	f240 5254 	movw	r2, #1364	; 0x554
   864f0:	4293      	cmp	r3, r2
   864f2:	d822      	bhi.n	8653a <_malloc_r+0x4de>
   864f4:	0cb3      	lsrs	r3, r6, #18
   864f6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   864fa:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   864fe:	00c1      	lsls	r1, r0, #3
   86500:	e5ce      	b.n	860a0 <_malloc_r+0x44>
   86502:	f103 0b10 	add.w	fp, r3, #16
   86506:	e6af      	b.n	86268 <_malloc_r+0x20c>
   86508:	2a54      	cmp	r2, #84	; 0x54
   8650a:	d829      	bhi.n	86560 <_malloc_r+0x504>
   8650c:	0b1a      	lsrs	r2, r3, #12
   8650e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   86512:	00c9      	lsls	r1, r1, #3
   86514:	326e      	adds	r2, #110	; 0x6e
   86516:	e74d      	b.n	863b4 <_malloc_r+0x358>
   86518:	4b20      	ldr	r3, [pc, #128]	; (8659c <_malloc_r+0x540>)
   8651a:	6819      	ldr	r1, [r3, #0]
   8651c:	4459      	add	r1, fp
   8651e:	6019      	str	r1, [r3, #0]
   86520:	e6b3      	b.n	8628a <_malloc_r+0x22e>
   86522:	f3ca 000b 	ubfx	r0, sl, #0, #12
   86526:	2800      	cmp	r0, #0
   86528:	f47f aeaf 	bne.w	8628a <_malloc_r+0x22e>
   8652c:	eb08 030b 	add.w	r3, r8, fp
   86530:	68ba      	ldr	r2, [r7, #8]
   86532:	f043 0301 	orr.w	r3, r3, #1
   86536:	6053      	str	r3, [r2, #4]
   86538:	e6ef      	b.n	8631a <_malloc_r+0x2be>
   8653a:	207f      	movs	r0, #127	; 0x7f
   8653c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   86540:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   86544:	e5ac      	b.n	860a0 <_malloc_r+0x44>
   86546:	f104 0108 	add.w	r1, r4, #8
   8654a:	4628      	mov	r0, r5
   8654c:	9300      	str	r3, [sp, #0]
   8654e:	f000 fd7f 	bl	87050 <_free_r>
   86552:	9b00      	ldr	r3, [sp, #0]
   86554:	6819      	ldr	r1, [r3, #0]
   86556:	e6e0      	b.n	8631a <_malloc_r+0x2be>
   86558:	2001      	movs	r0, #1
   8655a:	f04f 0900 	mov.w	r9, #0
   8655e:	e6bd      	b.n	862dc <_malloc_r+0x280>
   86560:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   86564:	d805      	bhi.n	86572 <_malloc_r+0x516>
   86566:	0bda      	lsrs	r2, r3, #15
   86568:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8656c:	00c9      	lsls	r1, r1, #3
   8656e:	3277      	adds	r2, #119	; 0x77
   86570:	e720      	b.n	863b4 <_malloc_r+0x358>
   86572:	f240 5154 	movw	r1, #1364	; 0x554
   86576:	428a      	cmp	r2, r1
   86578:	d805      	bhi.n	86586 <_malloc_r+0x52a>
   8657a:	0c9a      	lsrs	r2, r3, #18
   8657c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   86580:	00c9      	lsls	r1, r1, #3
   86582:	327c      	adds	r2, #124	; 0x7c
   86584:	e716      	b.n	863b4 <_malloc_r+0x358>
   86586:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8658a:	227e      	movs	r2, #126	; 0x7e
   8658c:	e712      	b.n	863b4 <_malloc_r+0x358>
   8658e:	687b      	ldr	r3, [r7, #4]
   86590:	e780      	b.n	86494 <_malloc_r+0x438>
   86592:	08f0      	lsrs	r0, r6, #3
   86594:	f106 0308 	add.w	r3, r6, #8
   86598:	e60e      	b.n	861b8 <_malloc_r+0x15c>
   8659a:	bf00      	nop
   8659c:	20001080 	.word	0x20001080

000865a0 <__ascii_mbtowc>:
   865a0:	b082      	sub	sp, #8
   865a2:	b149      	cbz	r1, 865b8 <__ascii_mbtowc+0x18>
   865a4:	b15a      	cbz	r2, 865be <__ascii_mbtowc+0x1e>
   865a6:	b16b      	cbz	r3, 865c4 <__ascii_mbtowc+0x24>
   865a8:	7813      	ldrb	r3, [r2, #0]
   865aa:	600b      	str	r3, [r1, #0]
   865ac:	7812      	ldrb	r2, [r2, #0]
   865ae:	1c10      	adds	r0, r2, #0
   865b0:	bf18      	it	ne
   865b2:	2001      	movne	r0, #1
   865b4:	b002      	add	sp, #8
   865b6:	4770      	bx	lr
   865b8:	a901      	add	r1, sp, #4
   865ba:	2a00      	cmp	r2, #0
   865bc:	d1f3      	bne.n	865a6 <__ascii_mbtowc+0x6>
   865be:	4610      	mov	r0, r2
   865c0:	b002      	add	sp, #8
   865c2:	4770      	bx	lr
   865c4:	f06f 0001 	mvn.w	r0, #1
   865c8:	e7f4      	b.n	865b4 <__ascii_mbtowc+0x14>
   865ca:	bf00      	nop

000865cc <memchr>:
   865cc:	0783      	lsls	r3, r0, #30
   865ce:	b470      	push	{r4, r5, r6}
   865d0:	b2cd      	uxtb	r5, r1
   865d2:	d03d      	beq.n	86650 <memchr+0x84>
   865d4:	1e54      	subs	r4, r2, #1
   865d6:	b30a      	cbz	r2, 8661c <memchr+0x50>
   865d8:	7803      	ldrb	r3, [r0, #0]
   865da:	42ab      	cmp	r3, r5
   865dc:	d01f      	beq.n	8661e <memchr+0x52>
   865de:	1c43      	adds	r3, r0, #1
   865e0:	e005      	b.n	865ee <memchr+0x22>
   865e2:	f114 34ff 	adds.w	r4, r4, #4294967295
   865e6:	d319      	bcc.n	8661c <memchr+0x50>
   865e8:	7802      	ldrb	r2, [r0, #0]
   865ea:	42aa      	cmp	r2, r5
   865ec:	d017      	beq.n	8661e <memchr+0x52>
   865ee:	f013 0f03 	tst.w	r3, #3
   865f2:	4618      	mov	r0, r3
   865f4:	f103 0301 	add.w	r3, r3, #1
   865f8:	d1f3      	bne.n	865e2 <memchr+0x16>
   865fa:	2c03      	cmp	r4, #3
   865fc:	d811      	bhi.n	86622 <memchr+0x56>
   865fe:	b34c      	cbz	r4, 86654 <memchr+0x88>
   86600:	7803      	ldrb	r3, [r0, #0]
   86602:	42ab      	cmp	r3, r5
   86604:	d00b      	beq.n	8661e <memchr+0x52>
   86606:	4404      	add	r4, r0
   86608:	1c43      	adds	r3, r0, #1
   8660a:	e002      	b.n	86612 <memchr+0x46>
   8660c:	7802      	ldrb	r2, [r0, #0]
   8660e:	42aa      	cmp	r2, r5
   86610:	d005      	beq.n	8661e <memchr+0x52>
   86612:	429c      	cmp	r4, r3
   86614:	4618      	mov	r0, r3
   86616:	f103 0301 	add.w	r3, r3, #1
   8661a:	d1f7      	bne.n	8660c <memchr+0x40>
   8661c:	2000      	movs	r0, #0
   8661e:	bc70      	pop	{r4, r5, r6}
   86620:	4770      	bx	lr
   86622:	0209      	lsls	r1, r1, #8
   86624:	b289      	uxth	r1, r1
   86626:	4329      	orrs	r1, r5
   86628:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   8662c:	6803      	ldr	r3, [r0, #0]
   8662e:	4606      	mov	r6, r0
   86630:	404b      	eors	r3, r1
   86632:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   86636:	ea22 0303 	bic.w	r3, r2, r3
   8663a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8663e:	f100 0004 	add.w	r0, r0, #4
   86642:	d103      	bne.n	8664c <memchr+0x80>
   86644:	3c04      	subs	r4, #4
   86646:	2c03      	cmp	r4, #3
   86648:	d8f0      	bhi.n	8662c <memchr+0x60>
   8664a:	e7d8      	b.n	865fe <memchr+0x32>
   8664c:	4630      	mov	r0, r6
   8664e:	e7d7      	b.n	86600 <memchr+0x34>
   86650:	4614      	mov	r4, r2
   86652:	e7d2      	b.n	865fa <memchr+0x2e>
   86654:	4620      	mov	r0, r4
   86656:	e7e2      	b.n	8661e <memchr+0x52>

00086658 <memcpy>:
   86658:	4684      	mov	ip, r0
   8665a:	ea41 0300 	orr.w	r3, r1, r0
   8665e:	f013 0303 	ands.w	r3, r3, #3
   86662:	d149      	bne.n	866f8 <memcpy+0xa0>
   86664:	3a40      	subs	r2, #64	; 0x40
   86666:	d323      	bcc.n	866b0 <memcpy+0x58>
   86668:	680b      	ldr	r3, [r1, #0]
   8666a:	6003      	str	r3, [r0, #0]
   8666c:	684b      	ldr	r3, [r1, #4]
   8666e:	6043      	str	r3, [r0, #4]
   86670:	688b      	ldr	r3, [r1, #8]
   86672:	6083      	str	r3, [r0, #8]
   86674:	68cb      	ldr	r3, [r1, #12]
   86676:	60c3      	str	r3, [r0, #12]
   86678:	690b      	ldr	r3, [r1, #16]
   8667a:	6103      	str	r3, [r0, #16]
   8667c:	694b      	ldr	r3, [r1, #20]
   8667e:	6143      	str	r3, [r0, #20]
   86680:	698b      	ldr	r3, [r1, #24]
   86682:	6183      	str	r3, [r0, #24]
   86684:	69cb      	ldr	r3, [r1, #28]
   86686:	61c3      	str	r3, [r0, #28]
   86688:	6a0b      	ldr	r3, [r1, #32]
   8668a:	6203      	str	r3, [r0, #32]
   8668c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8668e:	6243      	str	r3, [r0, #36]	; 0x24
   86690:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   86692:	6283      	str	r3, [r0, #40]	; 0x28
   86694:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   86696:	62c3      	str	r3, [r0, #44]	; 0x2c
   86698:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8669a:	6303      	str	r3, [r0, #48]	; 0x30
   8669c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8669e:	6343      	str	r3, [r0, #52]	; 0x34
   866a0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   866a2:	6383      	str	r3, [r0, #56]	; 0x38
   866a4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   866a6:	63c3      	str	r3, [r0, #60]	; 0x3c
   866a8:	3040      	adds	r0, #64	; 0x40
   866aa:	3140      	adds	r1, #64	; 0x40
   866ac:	3a40      	subs	r2, #64	; 0x40
   866ae:	d2db      	bcs.n	86668 <memcpy+0x10>
   866b0:	3230      	adds	r2, #48	; 0x30
   866b2:	d30b      	bcc.n	866cc <memcpy+0x74>
   866b4:	680b      	ldr	r3, [r1, #0]
   866b6:	6003      	str	r3, [r0, #0]
   866b8:	684b      	ldr	r3, [r1, #4]
   866ba:	6043      	str	r3, [r0, #4]
   866bc:	688b      	ldr	r3, [r1, #8]
   866be:	6083      	str	r3, [r0, #8]
   866c0:	68cb      	ldr	r3, [r1, #12]
   866c2:	60c3      	str	r3, [r0, #12]
   866c4:	3010      	adds	r0, #16
   866c6:	3110      	adds	r1, #16
   866c8:	3a10      	subs	r2, #16
   866ca:	d2f3      	bcs.n	866b4 <memcpy+0x5c>
   866cc:	320c      	adds	r2, #12
   866ce:	d305      	bcc.n	866dc <memcpy+0x84>
   866d0:	f851 3b04 	ldr.w	r3, [r1], #4
   866d4:	f840 3b04 	str.w	r3, [r0], #4
   866d8:	3a04      	subs	r2, #4
   866da:	d2f9      	bcs.n	866d0 <memcpy+0x78>
   866dc:	3204      	adds	r2, #4
   866de:	d008      	beq.n	866f2 <memcpy+0x9a>
   866e0:	07d2      	lsls	r2, r2, #31
   866e2:	bf1c      	itt	ne
   866e4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   866e8:	f800 3b01 	strbne.w	r3, [r0], #1
   866ec:	d301      	bcc.n	866f2 <memcpy+0x9a>
   866ee:	880b      	ldrh	r3, [r1, #0]
   866f0:	8003      	strh	r3, [r0, #0]
   866f2:	4660      	mov	r0, ip
   866f4:	4770      	bx	lr
   866f6:	bf00      	nop
   866f8:	2a08      	cmp	r2, #8
   866fa:	d313      	bcc.n	86724 <memcpy+0xcc>
   866fc:	078b      	lsls	r3, r1, #30
   866fe:	d0b1      	beq.n	86664 <memcpy+0xc>
   86700:	f010 0303 	ands.w	r3, r0, #3
   86704:	d0ae      	beq.n	86664 <memcpy+0xc>
   86706:	f1c3 0304 	rsb	r3, r3, #4
   8670a:	1ad2      	subs	r2, r2, r3
   8670c:	07db      	lsls	r3, r3, #31
   8670e:	bf1c      	itt	ne
   86710:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86714:	f800 3b01 	strbne.w	r3, [r0], #1
   86718:	d3a4      	bcc.n	86664 <memcpy+0xc>
   8671a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8671e:	f820 3b02 	strh.w	r3, [r0], #2
   86722:	e79f      	b.n	86664 <memcpy+0xc>
   86724:	3a04      	subs	r2, #4
   86726:	d3d9      	bcc.n	866dc <memcpy+0x84>
   86728:	3a01      	subs	r2, #1
   8672a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8672e:	f800 3b01 	strb.w	r3, [r0], #1
   86732:	d2f9      	bcs.n	86728 <memcpy+0xd0>
   86734:	780b      	ldrb	r3, [r1, #0]
   86736:	7003      	strb	r3, [r0, #0]
   86738:	784b      	ldrb	r3, [r1, #1]
   8673a:	7043      	strb	r3, [r0, #1]
   8673c:	788b      	ldrb	r3, [r1, #2]
   8673e:	7083      	strb	r3, [r0, #2]
   86740:	4660      	mov	r0, ip
   86742:	4770      	bx	lr

00086744 <__malloc_lock>:
   86744:	4801      	ldr	r0, [pc, #4]	; (8674c <__malloc_lock+0x8>)
   86746:	f7ff bc85 	b.w	86054 <__retarget_lock_acquire_recursive>
   8674a:	bf00      	nop
   8674c:	20001848 	.word	0x20001848

00086750 <__malloc_unlock>:
   86750:	4801      	ldr	r0, [pc, #4]	; (86758 <__malloc_unlock+0x8>)
   86752:	f7ff bc81 	b.w	86058 <__retarget_lock_release_recursive>
   86756:	bf00      	nop
   86758:	20001848 	.word	0x20001848

0008675c <_Balloc>:
   8675c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8675e:	b570      	push	{r4, r5, r6, lr}
   86760:	4605      	mov	r5, r0
   86762:	460c      	mov	r4, r1
   86764:	b14b      	cbz	r3, 8677a <_Balloc+0x1e>
   86766:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8676a:	b180      	cbz	r0, 8678e <_Balloc+0x32>
   8676c:	6802      	ldr	r2, [r0, #0]
   8676e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   86772:	2300      	movs	r3, #0
   86774:	6103      	str	r3, [r0, #16]
   86776:	60c3      	str	r3, [r0, #12]
   86778:	bd70      	pop	{r4, r5, r6, pc}
   8677a:	2221      	movs	r2, #33	; 0x21
   8677c:	2104      	movs	r1, #4
   8677e:	f000 fbe7 	bl	86f50 <_calloc_r>
   86782:	64e8      	str	r0, [r5, #76]	; 0x4c
   86784:	4603      	mov	r3, r0
   86786:	2800      	cmp	r0, #0
   86788:	d1ed      	bne.n	86766 <_Balloc+0xa>
   8678a:	2000      	movs	r0, #0
   8678c:	bd70      	pop	{r4, r5, r6, pc}
   8678e:	2101      	movs	r1, #1
   86790:	fa01 f604 	lsl.w	r6, r1, r4
   86794:	1d72      	adds	r2, r6, #5
   86796:	4628      	mov	r0, r5
   86798:	0092      	lsls	r2, r2, #2
   8679a:	f000 fbd9 	bl	86f50 <_calloc_r>
   8679e:	2800      	cmp	r0, #0
   867a0:	d0f3      	beq.n	8678a <_Balloc+0x2e>
   867a2:	6044      	str	r4, [r0, #4]
   867a4:	6086      	str	r6, [r0, #8]
   867a6:	e7e4      	b.n	86772 <_Balloc+0x16>

000867a8 <_Bfree>:
   867a8:	b131      	cbz	r1, 867b8 <_Bfree+0x10>
   867aa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   867ac:	684a      	ldr	r2, [r1, #4]
   867ae:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   867b2:	6008      	str	r0, [r1, #0]
   867b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   867b8:	4770      	bx	lr
   867ba:	bf00      	nop

000867bc <__multadd>:
   867bc:	b5f0      	push	{r4, r5, r6, r7, lr}
   867be:	460c      	mov	r4, r1
   867c0:	4605      	mov	r5, r0
   867c2:	f04f 0e00 	mov.w	lr, #0
   867c6:	690e      	ldr	r6, [r1, #16]
   867c8:	b083      	sub	sp, #12
   867ca:	f101 0714 	add.w	r7, r1, #20
   867ce:	6838      	ldr	r0, [r7, #0]
   867d0:	f10e 0e01 	add.w	lr, lr, #1
   867d4:	b281      	uxth	r1, r0
   867d6:	fb02 3301 	mla	r3, r2, r1, r3
   867da:	0c01      	lsrs	r1, r0, #16
   867dc:	0c18      	lsrs	r0, r3, #16
   867de:	fb02 0101 	mla	r1, r2, r1, r0
   867e2:	b29b      	uxth	r3, r3
   867e4:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   867e8:	4576      	cmp	r6, lr
   867ea:	f847 3b04 	str.w	r3, [r7], #4
   867ee:	ea4f 4311 	mov.w	r3, r1, lsr #16
   867f2:	dcec      	bgt.n	867ce <__multadd+0x12>
   867f4:	b13b      	cbz	r3, 86806 <__multadd+0x4a>
   867f6:	68a2      	ldr	r2, [r4, #8]
   867f8:	4296      	cmp	r6, r2
   867fa:	da07      	bge.n	8680c <__multadd+0x50>
   867fc:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   86800:	3601      	adds	r6, #1
   86802:	6153      	str	r3, [r2, #20]
   86804:	6126      	str	r6, [r4, #16]
   86806:	4620      	mov	r0, r4
   86808:	b003      	add	sp, #12
   8680a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8680c:	6861      	ldr	r1, [r4, #4]
   8680e:	4628      	mov	r0, r5
   86810:	3101      	adds	r1, #1
   86812:	9301      	str	r3, [sp, #4]
   86814:	f7ff ffa2 	bl	8675c <_Balloc>
   86818:	4607      	mov	r7, r0
   8681a:	6922      	ldr	r2, [r4, #16]
   8681c:	f104 010c 	add.w	r1, r4, #12
   86820:	3202      	adds	r2, #2
   86822:	0092      	lsls	r2, r2, #2
   86824:	300c      	adds	r0, #12
   86826:	f7ff ff17 	bl	86658 <memcpy>
   8682a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   8682c:	6861      	ldr	r1, [r4, #4]
   8682e:	9b01      	ldr	r3, [sp, #4]
   86830:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   86834:	6020      	str	r0, [r4, #0]
   86836:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8683a:	463c      	mov	r4, r7
   8683c:	e7de      	b.n	867fc <__multadd+0x40>
   8683e:	bf00      	nop

00086840 <__hi0bits>:
   86840:	0c02      	lsrs	r2, r0, #16
   86842:	0412      	lsls	r2, r2, #16
   86844:	4603      	mov	r3, r0
   86846:	b9b2      	cbnz	r2, 86876 <__hi0bits+0x36>
   86848:	0403      	lsls	r3, r0, #16
   8684a:	2010      	movs	r0, #16
   8684c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   86850:	bf04      	itt	eq
   86852:	021b      	lsleq	r3, r3, #8
   86854:	3008      	addeq	r0, #8
   86856:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8685a:	bf04      	itt	eq
   8685c:	011b      	lsleq	r3, r3, #4
   8685e:	3004      	addeq	r0, #4
   86860:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   86864:	bf04      	itt	eq
   86866:	009b      	lsleq	r3, r3, #2
   86868:	3002      	addeq	r0, #2
   8686a:	2b00      	cmp	r3, #0
   8686c:	db02      	blt.n	86874 <__hi0bits+0x34>
   8686e:	005b      	lsls	r3, r3, #1
   86870:	d403      	bmi.n	8687a <__hi0bits+0x3a>
   86872:	2020      	movs	r0, #32
   86874:	4770      	bx	lr
   86876:	2000      	movs	r0, #0
   86878:	e7e8      	b.n	8684c <__hi0bits+0xc>
   8687a:	3001      	adds	r0, #1
   8687c:	4770      	bx	lr
   8687e:	bf00      	nop

00086880 <__lo0bits>:
   86880:	6803      	ldr	r3, [r0, #0]
   86882:	4601      	mov	r1, r0
   86884:	f013 0207 	ands.w	r2, r3, #7
   86888:	d007      	beq.n	8689a <__lo0bits+0x1a>
   8688a:	07da      	lsls	r2, r3, #31
   8688c:	d421      	bmi.n	868d2 <__lo0bits+0x52>
   8688e:	0798      	lsls	r0, r3, #30
   86890:	d421      	bmi.n	868d6 <__lo0bits+0x56>
   86892:	089b      	lsrs	r3, r3, #2
   86894:	600b      	str	r3, [r1, #0]
   86896:	2002      	movs	r0, #2
   86898:	4770      	bx	lr
   8689a:	b298      	uxth	r0, r3
   8689c:	b198      	cbz	r0, 868c6 <__lo0bits+0x46>
   8689e:	4610      	mov	r0, r2
   868a0:	f013 0fff 	tst.w	r3, #255	; 0xff
   868a4:	bf04      	itt	eq
   868a6:	0a1b      	lsreq	r3, r3, #8
   868a8:	3008      	addeq	r0, #8
   868aa:	071a      	lsls	r2, r3, #28
   868ac:	bf04      	itt	eq
   868ae:	091b      	lsreq	r3, r3, #4
   868b0:	3004      	addeq	r0, #4
   868b2:	079a      	lsls	r2, r3, #30
   868b4:	bf04      	itt	eq
   868b6:	089b      	lsreq	r3, r3, #2
   868b8:	3002      	addeq	r0, #2
   868ba:	07da      	lsls	r2, r3, #31
   868bc:	d407      	bmi.n	868ce <__lo0bits+0x4e>
   868be:	085b      	lsrs	r3, r3, #1
   868c0:	d104      	bne.n	868cc <__lo0bits+0x4c>
   868c2:	2020      	movs	r0, #32
   868c4:	4770      	bx	lr
   868c6:	0c1b      	lsrs	r3, r3, #16
   868c8:	2010      	movs	r0, #16
   868ca:	e7e9      	b.n	868a0 <__lo0bits+0x20>
   868cc:	3001      	adds	r0, #1
   868ce:	600b      	str	r3, [r1, #0]
   868d0:	4770      	bx	lr
   868d2:	2000      	movs	r0, #0
   868d4:	4770      	bx	lr
   868d6:	085b      	lsrs	r3, r3, #1
   868d8:	600b      	str	r3, [r1, #0]
   868da:	2001      	movs	r0, #1
   868dc:	4770      	bx	lr
   868de:	bf00      	nop

000868e0 <__i2b>:
   868e0:	b510      	push	{r4, lr}
   868e2:	460c      	mov	r4, r1
   868e4:	2101      	movs	r1, #1
   868e6:	f7ff ff39 	bl	8675c <_Balloc>
   868ea:	2201      	movs	r2, #1
   868ec:	6144      	str	r4, [r0, #20]
   868ee:	6102      	str	r2, [r0, #16]
   868f0:	bd10      	pop	{r4, pc}
   868f2:	bf00      	nop

000868f4 <__multiply>:
   868f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   868f8:	690c      	ldr	r4, [r1, #16]
   868fa:	6915      	ldr	r5, [r2, #16]
   868fc:	b083      	sub	sp, #12
   868fe:	42ac      	cmp	r4, r5
   86900:	468b      	mov	fp, r1
   86902:	4616      	mov	r6, r2
   86904:	da04      	bge.n	86910 <__multiply+0x1c>
   86906:	4622      	mov	r2, r4
   86908:	46b3      	mov	fp, r6
   8690a:	462c      	mov	r4, r5
   8690c:	460e      	mov	r6, r1
   8690e:	4615      	mov	r5, r2
   86910:	f8db 3008 	ldr.w	r3, [fp, #8]
   86914:	eb04 0805 	add.w	r8, r4, r5
   86918:	f8db 1004 	ldr.w	r1, [fp, #4]
   8691c:	4598      	cmp	r8, r3
   8691e:	bfc8      	it	gt
   86920:	3101      	addgt	r1, #1
   86922:	f7ff ff1b 	bl	8675c <_Balloc>
   86926:	f100 0914 	add.w	r9, r0, #20
   8692a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   8692e:	45d1      	cmp	r9, sl
   86930:	9000      	str	r0, [sp, #0]
   86932:	d205      	bcs.n	86940 <__multiply+0x4c>
   86934:	464b      	mov	r3, r9
   86936:	2100      	movs	r1, #0
   86938:	f843 1b04 	str.w	r1, [r3], #4
   8693c:	459a      	cmp	sl, r3
   8693e:	d8fb      	bhi.n	86938 <__multiply+0x44>
   86940:	f106 0c14 	add.w	ip, r6, #20
   86944:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   86948:	f10b 0b14 	add.w	fp, fp, #20
   8694c:	459c      	cmp	ip, r3
   8694e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   86952:	d24b      	bcs.n	869ec <__multiply+0xf8>
   86954:	f8cd a004 	str.w	sl, [sp, #4]
   86958:	469a      	mov	sl, r3
   8695a:	f8dc 5000 	ldr.w	r5, [ip]
   8695e:	b2af      	uxth	r7, r5
   86960:	b1e7      	cbz	r7, 8699c <__multiply+0xa8>
   86962:	464d      	mov	r5, r9
   86964:	465e      	mov	r6, fp
   86966:	2100      	movs	r1, #0
   86968:	f856 2b04 	ldr.w	r2, [r6], #4
   8696c:	6828      	ldr	r0, [r5, #0]
   8696e:	b293      	uxth	r3, r2
   86970:	b284      	uxth	r4, r0
   86972:	0c12      	lsrs	r2, r2, #16
   86974:	fb07 4303 	mla	r3, r7, r3, r4
   86978:	0c00      	lsrs	r0, r0, #16
   8697a:	fb07 0202 	mla	r2, r7, r2, r0
   8697e:	440b      	add	r3, r1
   86980:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   86984:	b29b      	uxth	r3, r3
   86986:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   8698a:	45b6      	cmp	lr, r6
   8698c:	f845 3b04 	str.w	r3, [r5], #4
   86990:	ea4f 4111 	mov.w	r1, r1, lsr #16
   86994:	d8e8      	bhi.n	86968 <__multiply+0x74>
   86996:	6029      	str	r1, [r5, #0]
   86998:	f8dc 5000 	ldr.w	r5, [ip]
   8699c:	0c2d      	lsrs	r5, r5, #16
   8699e:	d01d      	beq.n	869dc <__multiply+0xe8>
   869a0:	f8d9 3000 	ldr.w	r3, [r9]
   869a4:	4648      	mov	r0, r9
   869a6:	461c      	mov	r4, r3
   869a8:	4659      	mov	r1, fp
   869aa:	2200      	movs	r2, #0
   869ac:	880e      	ldrh	r6, [r1, #0]
   869ae:	0c24      	lsrs	r4, r4, #16
   869b0:	fb05 4406 	mla	r4, r5, r6, r4
   869b4:	b29b      	uxth	r3, r3
   869b6:	4422      	add	r2, r4
   869b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   869bc:	f840 3b04 	str.w	r3, [r0], #4
   869c0:	f851 3b04 	ldr.w	r3, [r1], #4
   869c4:	6804      	ldr	r4, [r0, #0]
   869c6:	0c1b      	lsrs	r3, r3, #16
   869c8:	b2a6      	uxth	r6, r4
   869ca:	fb05 6303 	mla	r3, r5, r3, r6
   869ce:	458e      	cmp	lr, r1
   869d0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   869d4:	ea4f 4213 	mov.w	r2, r3, lsr #16
   869d8:	d8e8      	bhi.n	869ac <__multiply+0xb8>
   869da:	6003      	str	r3, [r0, #0]
   869dc:	f10c 0c04 	add.w	ip, ip, #4
   869e0:	45e2      	cmp	sl, ip
   869e2:	f109 0904 	add.w	r9, r9, #4
   869e6:	d8b8      	bhi.n	8695a <__multiply+0x66>
   869e8:	f8dd a004 	ldr.w	sl, [sp, #4]
   869ec:	f1b8 0f00 	cmp.w	r8, #0
   869f0:	dd0b      	ble.n	86a0a <__multiply+0x116>
   869f2:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   869f6:	f1aa 0a04 	sub.w	sl, sl, #4
   869fa:	b11b      	cbz	r3, 86a04 <__multiply+0x110>
   869fc:	e005      	b.n	86a0a <__multiply+0x116>
   869fe:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   86a02:	b913      	cbnz	r3, 86a0a <__multiply+0x116>
   86a04:	f1b8 0801 	subs.w	r8, r8, #1
   86a08:	d1f9      	bne.n	869fe <__multiply+0x10a>
   86a0a:	9800      	ldr	r0, [sp, #0]
   86a0c:	f8c0 8010 	str.w	r8, [r0, #16]
   86a10:	b003      	add	sp, #12
   86a12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86a16:	bf00      	nop

00086a18 <__pow5mult>:
   86a18:	f012 0303 	ands.w	r3, r2, #3
   86a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86a20:	4614      	mov	r4, r2
   86a22:	4607      	mov	r7, r0
   86a24:	d12e      	bne.n	86a84 <__pow5mult+0x6c>
   86a26:	460d      	mov	r5, r1
   86a28:	10a4      	asrs	r4, r4, #2
   86a2a:	d01c      	beq.n	86a66 <__pow5mult+0x4e>
   86a2c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   86a2e:	b396      	cbz	r6, 86a96 <__pow5mult+0x7e>
   86a30:	07e3      	lsls	r3, r4, #31
   86a32:	f04f 0800 	mov.w	r8, #0
   86a36:	d406      	bmi.n	86a46 <__pow5mult+0x2e>
   86a38:	1064      	asrs	r4, r4, #1
   86a3a:	d014      	beq.n	86a66 <__pow5mult+0x4e>
   86a3c:	6830      	ldr	r0, [r6, #0]
   86a3e:	b1a8      	cbz	r0, 86a6c <__pow5mult+0x54>
   86a40:	4606      	mov	r6, r0
   86a42:	07e3      	lsls	r3, r4, #31
   86a44:	d5f8      	bpl.n	86a38 <__pow5mult+0x20>
   86a46:	4632      	mov	r2, r6
   86a48:	4629      	mov	r1, r5
   86a4a:	4638      	mov	r0, r7
   86a4c:	f7ff ff52 	bl	868f4 <__multiply>
   86a50:	b1b5      	cbz	r5, 86a80 <__pow5mult+0x68>
   86a52:	686a      	ldr	r2, [r5, #4]
   86a54:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   86a56:	1064      	asrs	r4, r4, #1
   86a58:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   86a5c:	6029      	str	r1, [r5, #0]
   86a5e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   86a62:	4605      	mov	r5, r0
   86a64:	d1ea      	bne.n	86a3c <__pow5mult+0x24>
   86a66:	4628      	mov	r0, r5
   86a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   86a6c:	4632      	mov	r2, r6
   86a6e:	4631      	mov	r1, r6
   86a70:	4638      	mov	r0, r7
   86a72:	f7ff ff3f 	bl	868f4 <__multiply>
   86a76:	6030      	str	r0, [r6, #0]
   86a78:	f8c0 8000 	str.w	r8, [r0]
   86a7c:	4606      	mov	r6, r0
   86a7e:	e7e0      	b.n	86a42 <__pow5mult+0x2a>
   86a80:	4605      	mov	r5, r0
   86a82:	e7d9      	b.n	86a38 <__pow5mult+0x20>
   86a84:	4a0b      	ldr	r2, [pc, #44]	; (86ab4 <__pow5mult+0x9c>)
   86a86:	3b01      	subs	r3, #1
   86a88:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   86a8c:	2300      	movs	r3, #0
   86a8e:	f7ff fe95 	bl	867bc <__multadd>
   86a92:	4605      	mov	r5, r0
   86a94:	e7c8      	b.n	86a28 <__pow5mult+0x10>
   86a96:	2101      	movs	r1, #1
   86a98:	4638      	mov	r0, r7
   86a9a:	f7ff fe5f 	bl	8675c <_Balloc>
   86a9e:	f240 2171 	movw	r1, #625	; 0x271
   86aa2:	2201      	movs	r2, #1
   86aa4:	2300      	movs	r3, #0
   86aa6:	6141      	str	r1, [r0, #20]
   86aa8:	6102      	str	r2, [r0, #16]
   86aaa:	4606      	mov	r6, r0
   86aac:	64b8      	str	r0, [r7, #72]	; 0x48
   86aae:	6003      	str	r3, [r0, #0]
   86ab0:	e7be      	b.n	86a30 <__pow5mult+0x18>
   86ab2:	bf00      	nop
   86ab4:	00089220 	.word	0x00089220

00086ab8 <__lshift>:
   86ab8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   86abc:	690b      	ldr	r3, [r1, #16]
   86abe:	1154      	asrs	r4, r2, #5
   86ac0:	eb04 0803 	add.w	r8, r4, r3
   86ac4:	688b      	ldr	r3, [r1, #8]
   86ac6:	f108 0501 	add.w	r5, r8, #1
   86aca:	429d      	cmp	r5, r3
   86acc:	460e      	mov	r6, r1
   86ace:	4691      	mov	r9, r2
   86ad0:	4607      	mov	r7, r0
   86ad2:	6849      	ldr	r1, [r1, #4]
   86ad4:	dd04      	ble.n	86ae0 <__lshift+0x28>
   86ad6:	005b      	lsls	r3, r3, #1
   86ad8:	429d      	cmp	r5, r3
   86ada:	f101 0101 	add.w	r1, r1, #1
   86ade:	dcfa      	bgt.n	86ad6 <__lshift+0x1e>
   86ae0:	4638      	mov	r0, r7
   86ae2:	f7ff fe3b 	bl	8675c <_Balloc>
   86ae6:	2c00      	cmp	r4, #0
   86ae8:	f100 0314 	add.w	r3, r0, #20
   86aec:	dd06      	ble.n	86afc <__lshift+0x44>
   86aee:	2100      	movs	r1, #0
   86af0:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   86af4:	f843 1b04 	str.w	r1, [r3], #4
   86af8:	429a      	cmp	r2, r3
   86afa:	d1fb      	bne.n	86af4 <__lshift+0x3c>
   86afc:	6934      	ldr	r4, [r6, #16]
   86afe:	f106 0114 	add.w	r1, r6, #20
   86b02:	f019 091f 	ands.w	r9, r9, #31
   86b06:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   86b0a:	d01d      	beq.n	86b48 <__lshift+0x90>
   86b0c:	2200      	movs	r2, #0
   86b0e:	f1c9 0c20 	rsb	ip, r9, #32
   86b12:	680c      	ldr	r4, [r1, #0]
   86b14:	fa04 f409 	lsl.w	r4, r4, r9
   86b18:	4314      	orrs	r4, r2
   86b1a:	f843 4b04 	str.w	r4, [r3], #4
   86b1e:	f851 2b04 	ldr.w	r2, [r1], #4
   86b22:	458e      	cmp	lr, r1
   86b24:	fa22 f20c 	lsr.w	r2, r2, ip
   86b28:	d8f3      	bhi.n	86b12 <__lshift+0x5a>
   86b2a:	601a      	str	r2, [r3, #0]
   86b2c:	b10a      	cbz	r2, 86b32 <__lshift+0x7a>
   86b2e:	f108 0502 	add.w	r5, r8, #2
   86b32:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   86b34:	6872      	ldr	r2, [r6, #4]
   86b36:	3d01      	subs	r5, #1
   86b38:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   86b3c:	6105      	str	r5, [r0, #16]
   86b3e:	6031      	str	r1, [r6, #0]
   86b40:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   86b44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   86b48:	3b04      	subs	r3, #4
   86b4a:	f851 2b04 	ldr.w	r2, [r1], #4
   86b4e:	458e      	cmp	lr, r1
   86b50:	f843 2f04 	str.w	r2, [r3, #4]!
   86b54:	d8f9      	bhi.n	86b4a <__lshift+0x92>
   86b56:	e7ec      	b.n	86b32 <__lshift+0x7a>

00086b58 <__mcmp>:
   86b58:	b430      	push	{r4, r5}
   86b5a:	690b      	ldr	r3, [r1, #16]
   86b5c:	4605      	mov	r5, r0
   86b5e:	6900      	ldr	r0, [r0, #16]
   86b60:	1ac0      	subs	r0, r0, r3
   86b62:	d10f      	bne.n	86b84 <__mcmp+0x2c>
   86b64:	009b      	lsls	r3, r3, #2
   86b66:	3514      	adds	r5, #20
   86b68:	3114      	adds	r1, #20
   86b6a:	4419      	add	r1, r3
   86b6c:	442b      	add	r3, r5
   86b6e:	e001      	b.n	86b74 <__mcmp+0x1c>
   86b70:	429d      	cmp	r5, r3
   86b72:	d207      	bcs.n	86b84 <__mcmp+0x2c>
   86b74:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   86b78:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   86b7c:	4294      	cmp	r4, r2
   86b7e:	d0f7      	beq.n	86b70 <__mcmp+0x18>
   86b80:	d302      	bcc.n	86b88 <__mcmp+0x30>
   86b82:	2001      	movs	r0, #1
   86b84:	bc30      	pop	{r4, r5}
   86b86:	4770      	bx	lr
   86b88:	f04f 30ff 	mov.w	r0, #4294967295
   86b8c:	e7fa      	b.n	86b84 <__mcmp+0x2c>
   86b8e:	bf00      	nop

00086b90 <__mdiff>:
   86b90:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86b94:	690c      	ldr	r4, [r1, #16]
   86b96:	4689      	mov	r9, r1
   86b98:	6911      	ldr	r1, [r2, #16]
   86b9a:	4692      	mov	sl, r2
   86b9c:	1a64      	subs	r4, r4, r1
   86b9e:	2c00      	cmp	r4, #0
   86ba0:	d117      	bne.n	86bd2 <__mdiff+0x42>
   86ba2:	0089      	lsls	r1, r1, #2
   86ba4:	f109 0714 	add.w	r7, r9, #20
   86ba8:	f102 0614 	add.w	r6, r2, #20
   86bac:	187b      	adds	r3, r7, r1
   86bae:	4431      	add	r1, r6
   86bb0:	e001      	b.n	86bb6 <__mdiff+0x26>
   86bb2:	429f      	cmp	r7, r3
   86bb4:	d265      	bcs.n	86c82 <__mdiff+0xf2>
   86bb6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   86bba:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   86bbe:	4295      	cmp	r5, r2
   86bc0:	d0f7      	beq.n	86bb2 <__mdiff+0x22>
   86bc2:	d267      	bcs.n	86c94 <__mdiff+0x104>
   86bc4:	464b      	mov	r3, r9
   86bc6:	46bb      	mov	fp, r7
   86bc8:	46d1      	mov	r9, sl
   86bca:	4637      	mov	r7, r6
   86bcc:	469a      	mov	sl, r3
   86bce:	2401      	movs	r4, #1
   86bd0:	e005      	b.n	86bde <__mdiff+0x4e>
   86bd2:	db61      	blt.n	86c98 <__mdiff+0x108>
   86bd4:	2400      	movs	r4, #0
   86bd6:	f109 0714 	add.w	r7, r9, #20
   86bda:	f10a 0b14 	add.w	fp, sl, #20
   86bde:	f8d9 1004 	ldr.w	r1, [r9, #4]
   86be2:	f7ff fdbb 	bl	8675c <_Balloc>
   86be6:	465d      	mov	r5, fp
   86be8:	f04f 0800 	mov.w	r8, #0
   86bec:	f8d9 e010 	ldr.w	lr, [r9, #16]
   86bf0:	f8da 3010 	ldr.w	r3, [sl, #16]
   86bf4:	463e      	mov	r6, r7
   86bf6:	60c4      	str	r4, [r0, #12]
   86bf8:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   86bfc:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   86c00:	f100 0414 	add.w	r4, r0, #20
   86c04:	f856 9b04 	ldr.w	r9, [r6], #4
   86c08:	f855 2b04 	ldr.w	r2, [r5], #4
   86c0c:	fa1f f389 	uxth.w	r3, r9
   86c10:	4443      	add	r3, r8
   86c12:	fa1f f882 	uxth.w	r8, r2
   86c16:	0c12      	lsrs	r2, r2, #16
   86c18:	eba3 0308 	sub.w	r3, r3, r8
   86c1c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   86c20:	eb02 4223 	add.w	r2, r2, r3, asr #16
   86c24:	b29b      	uxth	r3, r3
   86c26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   86c2a:	45ac      	cmp	ip, r5
   86c2c:	f844 3b04 	str.w	r3, [r4], #4
   86c30:	ea4f 4822 	mov.w	r8, r2, asr #16
   86c34:	d8e6      	bhi.n	86c04 <__mdiff+0x74>
   86c36:	42b7      	cmp	r7, r6
   86c38:	d917      	bls.n	86c6a <__mdiff+0xda>
   86c3a:	46a4      	mov	ip, r4
   86c3c:	4635      	mov	r5, r6
   86c3e:	f855 3b04 	ldr.w	r3, [r5], #4
   86c42:	b299      	uxth	r1, r3
   86c44:	4441      	add	r1, r8
   86c46:	140a      	asrs	r2, r1, #16
   86c48:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   86c4c:	b289      	uxth	r1, r1
   86c4e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   86c52:	42af      	cmp	r7, r5
   86c54:	f84c 3b04 	str.w	r3, [ip], #4
   86c58:	ea4f 4822 	mov.w	r8, r2, asr #16
   86c5c:	d8ef      	bhi.n	86c3e <__mdiff+0xae>
   86c5e:	43f6      	mvns	r6, r6
   86c60:	4437      	add	r7, r6
   86c62:	f027 0703 	bic.w	r7, r7, #3
   86c66:	3704      	adds	r7, #4
   86c68:	443c      	add	r4, r7
   86c6a:	3c04      	subs	r4, #4
   86c6c:	b92b      	cbnz	r3, 86c7a <__mdiff+0xea>
   86c6e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   86c72:	f10e 3eff 	add.w	lr, lr, #4294967295
   86c76:	2b00      	cmp	r3, #0
   86c78:	d0f9      	beq.n	86c6e <__mdiff+0xde>
   86c7a:	f8c0 e010 	str.w	lr, [r0, #16]
   86c7e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86c82:	2100      	movs	r1, #0
   86c84:	f7ff fd6a 	bl	8675c <_Balloc>
   86c88:	2201      	movs	r2, #1
   86c8a:	2300      	movs	r3, #0
   86c8c:	6102      	str	r2, [r0, #16]
   86c8e:	6143      	str	r3, [r0, #20]
   86c90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86c94:	46b3      	mov	fp, r6
   86c96:	e7a2      	b.n	86bde <__mdiff+0x4e>
   86c98:	464b      	mov	r3, r9
   86c9a:	f109 0b14 	add.w	fp, r9, #20
   86c9e:	f102 0714 	add.w	r7, r2, #20
   86ca2:	4691      	mov	r9, r2
   86ca4:	2401      	movs	r4, #1
   86ca6:	469a      	mov	sl, r3
   86ca8:	e799      	b.n	86bde <__mdiff+0x4e>
   86caa:	bf00      	nop

00086cac <__d2b>:
   86cac:	b5f0      	push	{r4, r5, r6, r7, lr}
   86cae:	2101      	movs	r1, #1
   86cb0:	b083      	sub	sp, #12
   86cb2:	461c      	mov	r4, r3
   86cb4:	f3c3 550a 	ubfx	r5, r3, #20, #11
   86cb8:	4616      	mov	r6, r2
   86cba:	f7ff fd4f 	bl	8675c <_Balloc>
   86cbe:	f3c4 0413 	ubfx	r4, r4, #0, #20
   86cc2:	4607      	mov	r7, r0
   86cc4:	b10d      	cbz	r5, 86cca <__d2b+0x1e>
   86cc6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   86cca:	9401      	str	r4, [sp, #4]
   86ccc:	b306      	cbz	r6, 86d10 <__d2b+0x64>
   86cce:	a802      	add	r0, sp, #8
   86cd0:	f840 6d08 	str.w	r6, [r0, #-8]!
   86cd4:	f7ff fdd4 	bl	86880 <__lo0bits>
   86cd8:	2800      	cmp	r0, #0
   86cda:	d130      	bne.n	86d3e <__d2b+0x92>
   86cdc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   86ce0:	617a      	str	r2, [r7, #20]
   86ce2:	2b00      	cmp	r3, #0
   86ce4:	bf0c      	ite	eq
   86ce6:	2101      	moveq	r1, #1
   86ce8:	2102      	movne	r1, #2
   86cea:	61bb      	str	r3, [r7, #24]
   86cec:	6139      	str	r1, [r7, #16]
   86cee:	b9d5      	cbnz	r5, 86d26 <__d2b+0x7a>
   86cf0:	9a08      	ldr	r2, [sp, #32]
   86cf2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   86cf6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   86cfa:	6010      	str	r0, [r2, #0]
   86cfc:	6918      	ldr	r0, [r3, #16]
   86cfe:	f7ff fd9f 	bl	86840 <__hi0bits>
   86d02:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86d04:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   86d08:	6018      	str	r0, [r3, #0]
   86d0a:	4638      	mov	r0, r7
   86d0c:	b003      	add	sp, #12
   86d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86d10:	a801      	add	r0, sp, #4
   86d12:	f7ff fdb5 	bl	86880 <__lo0bits>
   86d16:	2201      	movs	r2, #1
   86d18:	9b01      	ldr	r3, [sp, #4]
   86d1a:	4611      	mov	r1, r2
   86d1c:	3020      	adds	r0, #32
   86d1e:	613a      	str	r2, [r7, #16]
   86d20:	617b      	str	r3, [r7, #20]
   86d22:	2d00      	cmp	r5, #0
   86d24:	d0e4      	beq.n	86cf0 <__d2b+0x44>
   86d26:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   86d2a:	9a08      	ldr	r2, [sp, #32]
   86d2c:	4403      	add	r3, r0
   86d2e:	6013      	str	r3, [r2, #0]
   86d30:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86d32:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   86d36:	6018      	str	r0, [r3, #0]
   86d38:	4638      	mov	r0, r7
   86d3a:	b003      	add	sp, #12
   86d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86d3e:	9b01      	ldr	r3, [sp, #4]
   86d40:	f1c0 0220 	rsb	r2, r0, #32
   86d44:	9900      	ldr	r1, [sp, #0]
   86d46:	fa03 f202 	lsl.w	r2, r3, r2
   86d4a:	430a      	orrs	r2, r1
   86d4c:	40c3      	lsrs	r3, r0
   86d4e:	9301      	str	r3, [sp, #4]
   86d50:	617a      	str	r2, [r7, #20]
   86d52:	e7c6      	b.n	86ce2 <__d2b+0x36>

00086d54 <_sbrk_r>:
   86d54:	b538      	push	{r3, r4, r5, lr}
   86d56:	2300      	movs	r3, #0
   86d58:	4c06      	ldr	r4, [pc, #24]	; (86d74 <_sbrk_r+0x20>)
   86d5a:	4605      	mov	r5, r0
   86d5c:	4608      	mov	r0, r1
   86d5e:	6023      	str	r3, [r4, #0]
   86d60:	f7fa f978 	bl	81054 <_sbrk>
   86d64:	1c43      	adds	r3, r0, #1
   86d66:	d000      	beq.n	86d6a <_sbrk_r+0x16>
   86d68:	bd38      	pop	{r3, r4, r5, pc}
   86d6a:	6823      	ldr	r3, [r4, #0]
   86d6c:	2b00      	cmp	r3, #0
   86d6e:	d0fb      	beq.n	86d68 <_sbrk_r+0x14>
   86d70:	602b      	str	r3, [r5, #0]
   86d72:	bd38      	pop	{r3, r4, r5, pc}
   86d74:	2000185c 	.word	0x2000185c

00086d78 <__ssprint_r>:
   86d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86d7c:	6893      	ldr	r3, [r2, #8]
   86d7e:	b083      	sub	sp, #12
   86d80:	4690      	mov	r8, r2
   86d82:	2b00      	cmp	r3, #0
   86d84:	d070      	beq.n	86e68 <__ssprint_r+0xf0>
   86d86:	4682      	mov	sl, r0
   86d88:	460c      	mov	r4, r1
   86d8a:	6817      	ldr	r7, [r2, #0]
   86d8c:	688d      	ldr	r5, [r1, #8]
   86d8e:	6808      	ldr	r0, [r1, #0]
   86d90:	e042      	b.n	86e18 <__ssprint_r+0xa0>
   86d92:	89a3      	ldrh	r3, [r4, #12]
   86d94:	f413 6f90 	tst.w	r3, #1152	; 0x480
   86d98:	d02e      	beq.n	86df8 <__ssprint_r+0x80>
   86d9a:	6965      	ldr	r5, [r4, #20]
   86d9c:	6921      	ldr	r1, [r4, #16]
   86d9e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   86da2:	eba0 0b01 	sub.w	fp, r0, r1
   86da6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   86daa:	f10b 0001 	add.w	r0, fp, #1
   86dae:	106d      	asrs	r5, r5, #1
   86db0:	4430      	add	r0, r6
   86db2:	42a8      	cmp	r0, r5
   86db4:	462a      	mov	r2, r5
   86db6:	bf84      	itt	hi
   86db8:	4605      	movhi	r5, r0
   86dba:	462a      	movhi	r2, r5
   86dbc:	055b      	lsls	r3, r3, #21
   86dbe:	d538      	bpl.n	86e32 <__ssprint_r+0xba>
   86dc0:	4611      	mov	r1, r2
   86dc2:	4650      	mov	r0, sl
   86dc4:	f7ff f94a 	bl	8605c <_malloc_r>
   86dc8:	2800      	cmp	r0, #0
   86dca:	d03c      	beq.n	86e46 <__ssprint_r+0xce>
   86dcc:	465a      	mov	r2, fp
   86dce:	6921      	ldr	r1, [r4, #16]
   86dd0:	9001      	str	r0, [sp, #4]
   86dd2:	f7ff fc41 	bl	86658 <memcpy>
   86dd6:	89a2      	ldrh	r2, [r4, #12]
   86dd8:	9b01      	ldr	r3, [sp, #4]
   86dda:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   86dde:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   86de2:	81a2      	strh	r2, [r4, #12]
   86de4:	eba5 020b 	sub.w	r2, r5, fp
   86de8:	eb03 000b 	add.w	r0, r3, fp
   86dec:	6165      	str	r5, [r4, #20]
   86dee:	46b3      	mov	fp, r6
   86df0:	4635      	mov	r5, r6
   86df2:	6123      	str	r3, [r4, #16]
   86df4:	6020      	str	r0, [r4, #0]
   86df6:	60a2      	str	r2, [r4, #8]
   86df8:	465a      	mov	r2, fp
   86dfa:	4649      	mov	r1, r9
   86dfc:	f000 fa0e 	bl	8721c <memmove>
   86e00:	f8d8 3008 	ldr.w	r3, [r8, #8]
   86e04:	68a2      	ldr	r2, [r4, #8]
   86e06:	6820      	ldr	r0, [r4, #0]
   86e08:	1b55      	subs	r5, r2, r5
   86e0a:	4458      	add	r0, fp
   86e0c:	1b9e      	subs	r6, r3, r6
   86e0e:	60a5      	str	r5, [r4, #8]
   86e10:	6020      	str	r0, [r4, #0]
   86e12:	f8c8 6008 	str.w	r6, [r8, #8]
   86e16:	b33e      	cbz	r6, 86e68 <__ssprint_r+0xf0>
   86e18:	687e      	ldr	r6, [r7, #4]
   86e1a:	463b      	mov	r3, r7
   86e1c:	3708      	adds	r7, #8
   86e1e:	2e00      	cmp	r6, #0
   86e20:	d0fa      	beq.n	86e18 <__ssprint_r+0xa0>
   86e22:	42ae      	cmp	r6, r5
   86e24:	f8d3 9000 	ldr.w	r9, [r3]
   86e28:	46ab      	mov	fp, r5
   86e2a:	d2b2      	bcs.n	86d92 <__ssprint_r+0x1a>
   86e2c:	4635      	mov	r5, r6
   86e2e:	46b3      	mov	fp, r6
   86e30:	e7e2      	b.n	86df8 <__ssprint_r+0x80>
   86e32:	4650      	mov	r0, sl
   86e34:	f000 fa56 	bl	872e4 <_realloc_r>
   86e38:	4603      	mov	r3, r0
   86e3a:	2800      	cmp	r0, #0
   86e3c:	d1d2      	bne.n	86de4 <__ssprint_r+0x6c>
   86e3e:	6921      	ldr	r1, [r4, #16]
   86e40:	4650      	mov	r0, sl
   86e42:	f000 f905 	bl	87050 <_free_r>
   86e46:	230c      	movs	r3, #12
   86e48:	2200      	movs	r2, #0
   86e4a:	f04f 30ff 	mov.w	r0, #4294967295
   86e4e:	f8ca 3000 	str.w	r3, [sl]
   86e52:	89a3      	ldrh	r3, [r4, #12]
   86e54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86e58:	81a3      	strh	r3, [r4, #12]
   86e5a:	f8c8 2008 	str.w	r2, [r8, #8]
   86e5e:	f8c8 2004 	str.w	r2, [r8, #4]
   86e62:	b003      	add	sp, #12
   86e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86e68:	2000      	movs	r0, #0
   86e6a:	f8c8 0004 	str.w	r0, [r8, #4]
   86e6e:	b003      	add	sp, #12
   86e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086e74 <__ascii_wctomb>:
   86e74:	b119      	cbz	r1, 86e7e <__ascii_wctomb+0xa>
   86e76:	2aff      	cmp	r2, #255	; 0xff
   86e78:	d803      	bhi.n	86e82 <__ascii_wctomb+0xe>
   86e7a:	700a      	strb	r2, [r1, #0]
   86e7c:	2101      	movs	r1, #1
   86e7e:	4608      	mov	r0, r1
   86e80:	4770      	bx	lr
   86e82:	238a      	movs	r3, #138	; 0x8a
   86e84:	f04f 31ff 	mov.w	r1, #4294967295
   86e88:	6003      	str	r3, [r0, #0]
   86e8a:	e7f8      	b.n	86e7e <__ascii_wctomb+0xa>

00086e8c <__register_exitproc>:
   86e8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   86e90:	4d2c      	ldr	r5, [pc, #176]	; (86f44 <__register_exitproc+0xb8>)
   86e92:	4606      	mov	r6, r0
   86e94:	6828      	ldr	r0, [r5, #0]
   86e96:	4698      	mov	r8, r3
   86e98:	460f      	mov	r7, r1
   86e9a:	4691      	mov	r9, r2
   86e9c:	f7ff f8da 	bl	86054 <__retarget_lock_acquire_recursive>
   86ea0:	4b29      	ldr	r3, [pc, #164]	; (86f48 <__register_exitproc+0xbc>)
   86ea2:	681c      	ldr	r4, [r3, #0]
   86ea4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   86ea8:	2b00      	cmp	r3, #0
   86eaa:	d03e      	beq.n	86f2a <__register_exitproc+0x9e>
   86eac:	685a      	ldr	r2, [r3, #4]
   86eae:	2a1f      	cmp	r2, #31
   86eb0:	dc1c      	bgt.n	86eec <__register_exitproc+0x60>
   86eb2:	f102 0e01 	add.w	lr, r2, #1
   86eb6:	b176      	cbz	r6, 86ed6 <__register_exitproc+0x4a>
   86eb8:	2101      	movs	r1, #1
   86eba:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   86ebe:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   86ec2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   86ec6:	4091      	lsls	r1, r2
   86ec8:	4308      	orrs	r0, r1
   86eca:	2e02      	cmp	r6, #2
   86ecc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   86ed0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   86ed4:	d023      	beq.n	86f1e <__register_exitproc+0x92>
   86ed6:	3202      	adds	r2, #2
   86ed8:	f8c3 e004 	str.w	lr, [r3, #4]
   86edc:	6828      	ldr	r0, [r5, #0]
   86ede:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   86ee2:	f7ff f8b9 	bl	86058 <__retarget_lock_release_recursive>
   86ee6:	2000      	movs	r0, #0
   86ee8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   86eec:	4b17      	ldr	r3, [pc, #92]	; (86f4c <__register_exitproc+0xc0>)
   86eee:	b30b      	cbz	r3, 86f34 <__register_exitproc+0xa8>
   86ef0:	f44f 70c8 	mov.w	r0, #400	; 0x190
   86ef4:	f3af 8000 	nop.w
   86ef8:	4603      	mov	r3, r0
   86efa:	b1d8      	cbz	r0, 86f34 <__register_exitproc+0xa8>
   86efc:	2000      	movs	r0, #0
   86efe:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   86f02:	f04f 0e01 	mov.w	lr, #1
   86f06:	6058      	str	r0, [r3, #4]
   86f08:	6019      	str	r1, [r3, #0]
   86f0a:	4602      	mov	r2, r0
   86f0c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   86f10:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   86f14:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   86f18:	2e00      	cmp	r6, #0
   86f1a:	d0dc      	beq.n	86ed6 <__register_exitproc+0x4a>
   86f1c:	e7cc      	b.n	86eb8 <__register_exitproc+0x2c>
   86f1e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   86f22:	4301      	orrs	r1, r0
   86f24:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   86f28:	e7d5      	b.n	86ed6 <__register_exitproc+0x4a>
   86f2a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   86f2e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   86f32:	e7bb      	b.n	86eac <__register_exitproc+0x20>
   86f34:	6828      	ldr	r0, [r5, #0]
   86f36:	f7ff f88f 	bl	86058 <__retarget_lock_release_recursive>
   86f3a:	f04f 30ff 	mov.w	r0, #4294967295
   86f3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   86f42:	bf00      	nop
   86f44:	20000a58 	.word	0x20000a58
   86f48:	000890a4 	.word	0x000890a4
   86f4c:	00000000 	.word	0x00000000

00086f50 <_calloc_r>:
   86f50:	b510      	push	{r4, lr}
   86f52:	fb02 f101 	mul.w	r1, r2, r1
   86f56:	f7ff f881 	bl	8605c <_malloc_r>
   86f5a:	4604      	mov	r4, r0
   86f5c:	b1d8      	cbz	r0, 86f96 <_calloc_r+0x46>
   86f5e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   86f62:	f022 0203 	bic.w	r2, r2, #3
   86f66:	3a04      	subs	r2, #4
   86f68:	2a24      	cmp	r2, #36	; 0x24
   86f6a:	d818      	bhi.n	86f9e <_calloc_r+0x4e>
   86f6c:	2a13      	cmp	r2, #19
   86f6e:	d914      	bls.n	86f9a <_calloc_r+0x4a>
   86f70:	2300      	movs	r3, #0
   86f72:	2a1b      	cmp	r2, #27
   86f74:	6003      	str	r3, [r0, #0]
   86f76:	6043      	str	r3, [r0, #4]
   86f78:	d916      	bls.n	86fa8 <_calloc_r+0x58>
   86f7a:	2a24      	cmp	r2, #36	; 0x24
   86f7c:	6083      	str	r3, [r0, #8]
   86f7e:	60c3      	str	r3, [r0, #12]
   86f80:	bf11      	iteee	ne
   86f82:	f100 0210 	addne.w	r2, r0, #16
   86f86:	6103      	streq	r3, [r0, #16]
   86f88:	6143      	streq	r3, [r0, #20]
   86f8a:	f100 0218 	addeq.w	r2, r0, #24
   86f8e:	2300      	movs	r3, #0
   86f90:	6013      	str	r3, [r2, #0]
   86f92:	6053      	str	r3, [r2, #4]
   86f94:	6093      	str	r3, [r2, #8]
   86f96:	4620      	mov	r0, r4
   86f98:	bd10      	pop	{r4, pc}
   86f9a:	4602      	mov	r2, r0
   86f9c:	e7f7      	b.n	86f8e <_calloc_r+0x3e>
   86f9e:	2100      	movs	r1, #0
   86fa0:	f7fc fc60 	bl	83864 <memset>
   86fa4:	4620      	mov	r0, r4
   86fa6:	bd10      	pop	{r4, pc}
   86fa8:	f100 0208 	add.w	r2, r0, #8
   86fac:	e7ef      	b.n	86f8e <_calloc_r+0x3e>
   86fae:	bf00      	nop

00086fb0 <_malloc_trim_r>:
   86fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   86fb2:	460c      	mov	r4, r1
   86fb4:	4f23      	ldr	r7, [pc, #140]	; (87044 <_malloc_trim_r+0x94>)
   86fb6:	4606      	mov	r6, r0
   86fb8:	f7ff fbc4 	bl	86744 <__malloc_lock>
   86fbc:	68bb      	ldr	r3, [r7, #8]
   86fbe:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   86fc2:	685d      	ldr	r5, [r3, #4]
   86fc4:	310f      	adds	r1, #15
   86fc6:	f025 0503 	bic.w	r5, r5, #3
   86fca:	4429      	add	r1, r5
   86fcc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   86fd0:	f021 010f 	bic.w	r1, r1, #15
   86fd4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   86fd8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   86fdc:	db07      	blt.n	86fee <_malloc_trim_r+0x3e>
   86fde:	2100      	movs	r1, #0
   86fe0:	4630      	mov	r0, r6
   86fe2:	f7ff feb7 	bl	86d54 <_sbrk_r>
   86fe6:	68bb      	ldr	r3, [r7, #8]
   86fe8:	442b      	add	r3, r5
   86fea:	4298      	cmp	r0, r3
   86fec:	d004      	beq.n	86ff8 <_malloc_trim_r+0x48>
   86fee:	4630      	mov	r0, r6
   86ff0:	f7ff fbae 	bl	86750 <__malloc_unlock>
   86ff4:	2000      	movs	r0, #0
   86ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   86ff8:	4261      	negs	r1, r4
   86ffa:	4630      	mov	r0, r6
   86ffc:	f7ff feaa 	bl	86d54 <_sbrk_r>
   87000:	3001      	adds	r0, #1
   87002:	d00d      	beq.n	87020 <_malloc_trim_r+0x70>
   87004:	4b10      	ldr	r3, [pc, #64]	; (87048 <_malloc_trim_r+0x98>)
   87006:	68ba      	ldr	r2, [r7, #8]
   87008:	6819      	ldr	r1, [r3, #0]
   8700a:	1b2d      	subs	r5, r5, r4
   8700c:	f045 0501 	orr.w	r5, r5, #1
   87010:	4630      	mov	r0, r6
   87012:	1b09      	subs	r1, r1, r4
   87014:	6055      	str	r5, [r2, #4]
   87016:	6019      	str	r1, [r3, #0]
   87018:	f7ff fb9a 	bl	86750 <__malloc_unlock>
   8701c:	2001      	movs	r0, #1
   8701e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87020:	2100      	movs	r1, #0
   87022:	4630      	mov	r0, r6
   87024:	f7ff fe96 	bl	86d54 <_sbrk_r>
   87028:	68ba      	ldr	r2, [r7, #8]
   8702a:	1a83      	subs	r3, r0, r2
   8702c:	2b0f      	cmp	r3, #15
   8702e:	ddde      	ble.n	86fee <_malloc_trim_r+0x3e>
   87030:	4c06      	ldr	r4, [pc, #24]	; (8704c <_malloc_trim_r+0x9c>)
   87032:	4905      	ldr	r1, [pc, #20]	; (87048 <_malloc_trim_r+0x98>)
   87034:	6824      	ldr	r4, [r4, #0]
   87036:	f043 0301 	orr.w	r3, r3, #1
   8703a:	1b00      	subs	r0, r0, r4
   8703c:	6053      	str	r3, [r2, #4]
   8703e:	6008      	str	r0, [r1, #0]
   87040:	e7d5      	b.n	86fee <_malloc_trim_r+0x3e>
   87042:	bf00      	nop
   87044:	20000bc8 	.word	0x20000bc8
   87048:	20001080 	.word	0x20001080
   8704c:	20000fd0 	.word	0x20000fd0

00087050 <_free_r>:
   87050:	2900      	cmp	r1, #0
   87052:	d044      	beq.n	870de <_free_r+0x8e>
   87054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   87058:	460d      	mov	r5, r1
   8705a:	4680      	mov	r8, r0
   8705c:	f7ff fb72 	bl	86744 <__malloc_lock>
   87060:	f855 7c04 	ldr.w	r7, [r5, #-4]
   87064:	4969      	ldr	r1, [pc, #420]	; (8720c <_free_r+0x1bc>)
   87066:	f1a5 0408 	sub.w	r4, r5, #8
   8706a:	f027 0301 	bic.w	r3, r7, #1
   8706e:	18e2      	adds	r2, r4, r3
   87070:	688e      	ldr	r6, [r1, #8]
   87072:	6850      	ldr	r0, [r2, #4]
   87074:	42b2      	cmp	r2, r6
   87076:	f020 0003 	bic.w	r0, r0, #3
   8707a:	d05e      	beq.n	8713a <_free_r+0xea>
   8707c:	07fe      	lsls	r6, r7, #31
   8707e:	6050      	str	r0, [r2, #4]
   87080:	d40b      	bmi.n	8709a <_free_r+0x4a>
   87082:	f855 7c08 	ldr.w	r7, [r5, #-8]
   87086:	f101 0e08 	add.w	lr, r1, #8
   8708a:	1be4      	subs	r4, r4, r7
   8708c:	68a5      	ldr	r5, [r4, #8]
   8708e:	443b      	add	r3, r7
   87090:	4575      	cmp	r5, lr
   87092:	d06d      	beq.n	87170 <_free_r+0x120>
   87094:	68e7      	ldr	r7, [r4, #12]
   87096:	60ef      	str	r7, [r5, #12]
   87098:	60bd      	str	r5, [r7, #8]
   8709a:	1815      	adds	r5, r2, r0
   8709c:	686d      	ldr	r5, [r5, #4]
   8709e:	07ed      	lsls	r5, r5, #31
   870a0:	d53e      	bpl.n	87120 <_free_r+0xd0>
   870a2:	f043 0201 	orr.w	r2, r3, #1
   870a6:	6062      	str	r2, [r4, #4]
   870a8:	50e3      	str	r3, [r4, r3]
   870aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   870ae:	d217      	bcs.n	870e0 <_free_r+0x90>
   870b0:	2201      	movs	r2, #1
   870b2:	08db      	lsrs	r3, r3, #3
   870b4:	1098      	asrs	r0, r3, #2
   870b6:	684d      	ldr	r5, [r1, #4]
   870b8:	4413      	add	r3, r2
   870ba:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   870be:	4082      	lsls	r2, r0
   870c0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   870c4:	432a      	orrs	r2, r5
   870c6:	3808      	subs	r0, #8
   870c8:	60e0      	str	r0, [r4, #12]
   870ca:	60a7      	str	r7, [r4, #8]
   870cc:	604a      	str	r2, [r1, #4]
   870ce:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   870d2:	60fc      	str	r4, [r7, #12]
   870d4:	4640      	mov	r0, r8
   870d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   870da:	f7ff bb39 	b.w	86750 <__malloc_unlock>
   870de:	4770      	bx	lr
   870e0:	0a5a      	lsrs	r2, r3, #9
   870e2:	2a04      	cmp	r2, #4
   870e4:	d852      	bhi.n	8718c <_free_r+0x13c>
   870e6:	099a      	lsrs	r2, r3, #6
   870e8:	f102 0739 	add.w	r7, r2, #57	; 0x39
   870ec:	00ff      	lsls	r7, r7, #3
   870ee:	f102 0538 	add.w	r5, r2, #56	; 0x38
   870f2:	19c8      	adds	r0, r1, r7
   870f4:	59ca      	ldr	r2, [r1, r7]
   870f6:	3808      	subs	r0, #8
   870f8:	4290      	cmp	r0, r2
   870fa:	d04f      	beq.n	8719c <_free_r+0x14c>
   870fc:	6851      	ldr	r1, [r2, #4]
   870fe:	f021 0103 	bic.w	r1, r1, #3
   87102:	428b      	cmp	r3, r1
   87104:	d232      	bcs.n	8716c <_free_r+0x11c>
   87106:	6892      	ldr	r2, [r2, #8]
   87108:	4290      	cmp	r0, r2
   8710a:	d1f7      	bne.n	870fc <_free_r+0xac>
   8710c:	68c3      	ldr	r3, [r0, #12]
   8710e:	60a0      	str	r0, [r4, #8]
   87110:	60e3      	str	r3, [r4, #12]
   87112:	609c      	str	r4, [r3, #8]
   87114:	60c4      	str	r4, [r0, #12]
   87116:	4640      	mov	r0, r8
   87118:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8711c:	f7ff bb18 	b.w	86750 <__malloc_unlock>
   87120:	6895      	ldr	r5, [r2, #8]
   87122:	4f3b      	ldr	r7, [pc, #236]	; (87210 <_free_r+0x1c0>)
   87124:	4403      	add	r3, r0
   87126:	42bd      	cmp	r5, r7
   87128:	d040      	beq.n	871ac <_free_r+0x15c>
   8712a:	68d0      	ldr	r0, [r2, #12]
   8712c:	f043 0201 	orr.w	r2, r3, #1
   87130:	60e8      	str	r0, [r5, #12]
   87132:	6085      	str	r5, [r0, #8]
   87134:	6062      	str	r2, [r4, #4]
   87136:	50e3      	str	r3, [r4, r3]
   87138:	e7b7      	b.n	870aa <_free_r+0x5a>
   8713a:	07ff      	lsls	r7, r7, #31
   8713c:	4403      	add	r3, r0
   8713e:	d407      	bmi.n	87150 <_free_r+0x100>
   87140:	f855 5c08 	ldr.w	r5, [r5, #-8]
   87144:	1b64      	subs	r4, r4, r5
   87146:	68e2      	ldr	r2, [r4, #12]
   87148:	68a0      	ldr	r0, [r4, #8]
   8714a:	442b      	add	r3, r5
   8714c:	60c2      	str	r2, [r0, #12]
   8714e:	6090      	str	r0, [r2, #8]
   87150:	4a30      	ldr	r2, [pc, #192]	; (87214 <_free_r+0x1c4>)
   87152:	f043 0001 	orr.w	r0, r3, #1
   87156:	6812      	ldr	r2, [r2, #0]
   87158:	6060      	str	r0, [r4, #4]
   8715a:	4293      	cmp	r3, r2
   8715c:	608c      	str	r4, [r1, #8]
   8715e:	d3b9      	bcc.n	870d4 <_free_r+0x84>
   87160:	4b2d      	ldr	r3, [pc, #180]	; (87218 <_free_r+0x1c8>)
   87162:	4640      	mov	r0, r8
   87164:	6819      	ldr	r1, [r3, #0]
   87166:	f7ff ff23 	bl	86fb0 <_malloc_trim_r>
   8716a:	e7b3      	b.n	870d4 <_free_r+0x84>
   8716c:	4610      	mov	r0, r2
   8716e:	e7cd      	b.n	8710c <_free_r+0xbc>
   87170:	1811      	adds	r1, r2, r0
   87172:	6849      	ldr	r1, [r1, #4]
   87174:	07c9      	lsls	r1, r1, #31
   87176:	d444      	bmi.n	87202 <_free_r+0x1b2>
   87178:	6891      	ldr	r1, [r2, #8]
   8717a:	4403      	add	r3, r0
   8717c:	68d2      	ldr	r2, [r2, #12]
   8717e:	f043 0001 	orr.w	r0, r3, #1
   87182:	60ca      	str	r2, [r1, #12]
   87184:	6091      	str	r1, [r2, #8]
   87186:	6060      	str	r0, [r4, #4]
   87188:	50e3      	str	r3, [r4, r3]
   8718a:	e7a3      	b.n	870d4 <_free_r+0x84>
   8718c:	2a14      	cmp	r2, #20
   8718e:	d816      	bhi.n	871be <_free_r+0x16e>
   87190:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   87194:	00ff      	lsls	r7, r7, #3
   87196:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8719a:	e7aa      	b.n	870f2 <_free_r+0xa2>
   8719c:	2301      	movs	r3, #1
   8719e:	10aa      	asrs	r2, r5, #2
   871a0:	684d      	ldr	r5, [r1, #4]
   871a2:	4093      	lsls	r3, r2
   871a4:	432b      	orrs	r3, r5
   871a6:	604b      	str	r3, [r1, #4]
   871a8:	4603      	mov	r3, r0
   871aa:	e7b0      	b.n	8710e <_free_r+0xbe>
   871ac:	f043 0201 	orr.w	r2, r3, #1
   871b0:	614c      	str	r4, [r1, #20]
   871b2:	610c      	str	r4, [r1, #16]
   871b4:	60e5      	str	r5, [r4, #12]
   871b6:	60a5      	str	r5, [r4, #8]
   871b8:	6062      	str	r2, [r4, #4]
   871ba:	50e3      	str	r3, [r4, r3]
   871bc:	e78a      	b.n	870d4 <_free_r+0x84>
   871be:	2a54      	cmp	r2, #84	; 0x54
   871c0:	d806      	bhi.n	871d0 <_free_r+0x180>
   871c2:	0b1a      	lsrs	r2, r3, #12
   871c4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   871c8:	00ff      	lsls	r7, r7, #3
   871ca:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   871ce:	e790      	b.n	870f2 <_free_r+0xa2>
   871d0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   871d4:	d806      	bhi.n	871e4 <_free_r+0x194>
   871d6:	0bda      	lsrs	r2, r3, #15
   871d8:	f102 0778 	add.w	r7, r2, #120	; 0x78
   871dc:	00ff      	lsls	r7, r7, #3
   871de:	f102 0577 	add.w	r5, r2, #119	; 0x77
   871e2:	e786      	b.n	870f2 <_free_r+0xa2>
   871e4:	f240 5054 	movw	r0, #1364	; 0x554
   871e8:	4282      	cmp	r2, r0
   871ea:	d806      	bhi.n	871fa <_free_r+0x1aa>
   871ec:	0c9a      	lsrs	r2, r3, #18
   871ee:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   871f2:	00ff      	lsls	r7, r7, #3
   871f4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   871f8:	e77b      	b.n	870f2 <_free_r+0xa2>
   871fa:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   871fe:	257e      	movs	r5, #126	; 0x7e
   87200:	e777      	b.n	870f2 <_free_r+0xa2>
   87202:	f043 0101 	orr.w	r1, r3, #1
   87206:	6061      	str	r1, [r4, #4]
   87208:	6013      	str	r3, [r2, #0]
   8720a:	e763      	b.n	870d4 <_free_r+0x84>
   8720c:	20000bc8 	.word	0x20000bc8
   87210:	20000bd0 	.word	0x20000bd0
   87214:	20000fd4 	.word	0x20000fd4
   87218:	200010b0 	.word	0x200010b0

0008721c <memmove>:
   8721c:	4288      	cmp	r0, r1
   8721e:	b5f0      	push	{r4, r5, r6, r7, lr}
   87220:	d90d      	bls.n	8723e <memmove+0x22>
   87222:	188b      	adds	r3, r1, r2
   87224:	4298      	cmp	r0, r3
   87226:	d20a      	bcs.n	8723e <memmove+0x22>
   87228:	1884      	adds	r4, r0, r2
   8722a:	2a00      	cmp	r2, #0
   8722c:	d051      	beq.n	872d2 <memmove+0xb6>
   8722e:	4622      	mov	r2, r4
   87230:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   87234:	4299      	cmp	r1, r3
   87236:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8723a:	d1f9      	bne.n	87230 <memmove+0x14>
   8723c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8723e:	2a0f      	cmp	r2, #15
   87240:	d948      	bls.n	872d4 <memmove+0xb8>
   87242:	ea41 0300 	orr.w	r3, r1, r0
   87246:	079b      	lsls	r3, r3, #30
   87248:	d146      	bne.n	872d8 <memmove+0xbc>
   8724a:	4615      	mov	r5, r2
   8724c:	f100 0410 	add.w	r4, r0, #16
   87250:	f101 0310 	add.w	r3, r1, #16
   87254:	f853 6c10 	ldr.w	r6, [r3, #-16]
   87258:	3d10      	subs	r5, #16
   8725a:	f844 6c10 	str.w	r6, [r4, #-16]
   8725e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   87262:	2d0f      	cmp	r5, #15
   87264:	f844 6c0c 	str.w	r6, [r4, #-12]
   87268:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8726c:	f104 0410 	add.w	r4, r4, #16
   87270:	f844 6c18 	str.w	r6, [r4, #-24]
   87274:	f853 6c04 	ldr.w	r6, [r3, #-4]
   87278:	f103 0310 	add.w	r3, r3, #16
   8727c:	f844 6c14 	str.w	r6, [r4, #-20]
   87280:	d8e8      	bhi.n	87254 <memmove+0x38>
   87282:	f1a2 0310 	sub.w	r3, r2, #16
   87286:	f023 030f 	bic.w	r3, r3, #15
   8728a:	f002 0e0f 	and.w	lr, r2, #15
   8728e:	3310      	adds	r3, #16
   87290:	f1be 0f03 	cmp.w	lr, #3
   87294:	4419      	add	r1, r3
   87296:	4403      	add	r3, r0
   87298:	d921      	bls.n	872de <memmove+0xc2>
   8729a:	460e      	mov	r6, r1
   8729c:	4674      	mov	r4, lr
   8729e:	1f1d      	subs	r5, r3, #4
   872a0:	f856 7b04 	ldr.w	r7, [r6], #4
   872a4:	3c04      	subs	r4, #4
   872a6:	2c03      	cmp	r4, #3
   872a8:	f845 7f04 	str.w	r7, [r5, #4]!
   872ac:	d8f8      	bhi.n	872a0 <memmove+0x84>
   872ae:	f1ae 0404 	sub.w	r4, lr, #4
   872b2:	f024 0403 	bic.w	r4, r4, #3
   872b6:	3404      	adds	r4, #4
   872b8:	4421      	add	r1, r4
   872ba:	4423      	add	r3, r4
   872bc:	f002 0203 	and.w	r2, r2, #3
   872c0:	b162      	cbz	r2, 872dc <memmove+0xc0>
   872c2:	3b01      	subs	r3, #1
   872c4:	440a      	add	r2, r1
   872c6:	f811 4b01 	ldrb.w	r4, [r1], #1
   872ca:	428a      	cmp	r2, r1
   872cc:	f803 4f01 	strb.w	r4, [r3, #1]!
   872d0:	d1f9      	bne.n	872c6 <memmove+0xaa>
   872d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   872d4:	4603      	mov	r3, r0
   872d6:	e7f3      	b.n	872c0 <memmove+0xa4>
   872d8:	4603      	mov	r3, r0
   872da:	e7f2      	b.n	872c2 <memmove+0xa6>
   872dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   872de:	4672      	mov	r2, lr
   872e0:	e7ee      	b.n	872c0 <memmove+0xa4>
   872e2:	bf00      	nop

000872e4 <_realloc_r>:
   872e4:	2900      	cmp	r1, #0
   872e6:	f000 8094 	beq.w	87412 <_realloc_r+0x12e>
   872ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   872ee:	460c      	mov	r4, r1
   872f0:	4615      	mov	r5, r2
   872f2:	b083      	sub	sp, #12
   872f4:	4680      	mov	r8, r0
   872f6:	f105 060b 	add.w	r6, r5, #11
   872fa:	f7ff fa23 	bl	86744 <__malloc_lock>
   872fe:	f854 ec04 	ldr.w	lr, [r4, #-4]
   87302:	2e16      	cmp	r6, #22
   87304:	f02e 0703 	bic.w	r7, lr, #3
   87308:	f1a4 0908 	sub.w	r9, r4, #8
   8730c:	d83c      	bhi.n	87388 <_realloc_r+0xa4>
   8730e:	2210      	movs	r2, #16
   87310:	4616      	mov	r6, r2
   87312:	42b5      	cmp	r5, r6
   87314:	d83d      	bhi.n	87392 <_realloc_r+0xae>
   87316:	4297      	cmp	r7, r2
   87318:	da43      	bge.n	873a2 <_realloc_r+0xbe>
   8731a:	4bc6      	ldr	r3, [pc, #792]	; (87634 <_realloc_r+0x350>)
   8731c:	eb09 0007 	add.w	r0, r9, r7
   87320:	6899      	ldr	r1, [r3, #8]
   87322:	4288      	cmp	r0, r1
   87324:	f000 80c3 	beq.w	874ae <_realloc_r+0x1ca>
   87328:	6843      	ldr	r3, [r0, #4]
   8732a:	f023 0101 	bic.w	r1, r3, #1
   8732e:	4401      	add	r1, r0
   87330:	6849      	ldr	r1, [r1, #4]
   87332:	07c9      	lsls	r1, r1, #31
   87334:	d54d      	bpl.n	873d2 <_realloc_r+0xee>
   87336:	f01e 0f01 	tst.w	lr, #1
   8733a:	f000 809b 	beq.w	87474 <_realloc_r+0x190>
   8733e:	4629      	mov	r1, r5
   87340:	4640      	mov	r0, r8
   87342:	f7fe fe8b 	bl	8605c <_malloc_r>
   87346:	4605      	mov	r5, r0
   87348:	2800      	cmp	r0, #0
   8734a:	d03b      	beq.n	873c4 <_realloc_r+0xe0>
   8734c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87350:	f1a0 0208 	sub.w	r2, r0, #8
   87354:	f023 0301 	bic.w	r3, r3, #1
   87358:	444b      	add	r3, r9
   8735a:	429a      	cmp	r2, r3
   8735c:	f000 812b 	beq.w	875b6 <_realloc_r+0x2d2>
   87360:	1f3a      	subs	r2, r7, #4
   87362:	2a24      	cmp	r2, #36	; 0x24
   87364:	f200 8118 	bhi.w	87598 <_realloc_r+0x2b4>
   87368:	2a13      	cmp	r2, #19
   8736a:	f200 80eb 	bhi.w	87544 <_realloc_r+0x260>
   8736e:	4603      	mov	r3, r0
   87370:	4622      	mov	r2, r4
   87372:	6811      	ldr	r1, [r2, #0]
   87374:	6019      	str	r1, [r3, #0]
   87376:	6851      	ldr	r1, [r2, #4]
   87378:	6059      	str	r1, [r3, #4]
   8737a:	6892      	ldr	r2, [r2, #8]
   8737c:	609a      	str	r2, [r3, #8]
   8737e:	4621      	mov	r1, r4
   87380:	4640      	mov	r0, r8
   87382:	f7ff fe65 	bl	87050 <_free_r>
   87386:	e01d      	b.n	873c4 <_realloc_r+0xe0>
   87388:	f026 0607 	bic.w	r6, r6, #7
   8738c:	2e00      	cmp	r6, #0
   8738e:	4632      	mov	r2, r6
   87390:	dabf      	bge.n	87312 <_realloc_r+0x2e>
   87392:	2500      	movs	r5, #0
   87394:	230c      	movs	r3, #12
   87396:	4628      	mov	r0, r5
   87398:	f8c8 3000 	str.w	r3, [r8]
   8739c:	b003      	add	sp, #12
   8739e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   873a2:	4625      	mov	r5, r4
   873a4:	1bbb      	subs	r3, r7, r6
   873a6:	2b0f      	cmp	r3, #15
   873a8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   873ac:	d81d      	bhi.n	873ea <_realloc_r+0x106>
   873ae:	f002 0201 	and.w	r2, r2, #1
   873b2:	433a      	orrs	r2, r7
   873b4:	eb09 0107 	add.w	r1, r9, r7
   873b8:	f8c9 2004 	str.w	r2, [r9, #4]
   873bc:	684b      	ldr	r3, [r1, #4]
   873be:	f043 0301 	orr.w	r3, r3, #1
   873c2:	604b      	str	r3, [r1, #4]
   873c4:	4640      	mov	r0, r8
   873c6:	f7ff f9c3 	bl	86750 <__malloc_unlock>
   873ca:	4628      	mov	r0, r5
   873cc:	b003      	add	sp, #12
   873ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   873d2:	f023 0303 	bic.w	r3, r3, #3
   873d6:	18f9      	adds	r1, r7, r3
   873d8:	4291      	cmp	r1, r2
   873da:	db1d      	blt.n	87418 <_realloc_r+0x134>
   873dc:	68c3      	ldr	r3, [r0, #12]
   873de:	6882      	ldr	r2, [r0, #8]
   873e0:	4625      	mov	r5, r4
   873e2:	60d3      	str	r3, [r2, #12]
   873e4:	460f      	mov	r7, r1
   873e6:	609a      	str	r2, [r3, #8]
   873e8:	e7dc      	b.n	873a4 <_realloc_r+0xc0>
   873ea:	f002 0201 	and.w	r2, r2, #1
   873ee:	eb09 0106 	add.w	r1, r9, r6
   873f2:	f043 0301 	orr.w	r3, r3, #1
   873f6:	4332      	orrs	r2, r6
   873f8:	f8c9 2004 	str.w	r2, [r9, #4]
   873fc:	444f      	add	r7, r9
   873fe:	604b      	str	r3, [r1, #4]
   87400:	687b      	ldr	r3, [r7, #4]
   87402:	3108      	adds	r1, #8
   87404:	f043 0301 	orr.w	r3, r3, #1
   87408:	607b      	str	r3, [r7, #4]
   8740a:	4640      	mov	r0, r8
   8740c:	f7ff fe20 	bl	87050 <_free_r>
   87410:	e7d8      	b.n	873c4 <_realloc_r+0xe0>
   87412:	4611      	mov	r1, r2
   87414:	f7fe be22 	b.w	8605c <_malloc_r>
   87418:	f01e 0f01 	tst.w	lr, #1
   8741c:	d18f      	bne.n	8733e <_realloc_r+0x5a>
   8741e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   87422:	eba9 0a01 	sub.w	sl, r9, r1
   87426:	f8da 1004 	ldr.w	r1, [sl, #4]
   8742a:	f021 0103 	bic.w	r1, r1, #3
   8742e:	440b      	add	r3, r1
   87430:	443b      	add	r3, r7
   87432:	4293      	cmp	r3, r2
   87434:	db26      	blt.n	87484 <_realloc_r+0x1a0>
   87436:	4655      	mov	r5, sl
   87438:	68c1      	ldr	r1, [r0, #12]
   8743a:	6880      	ldr	r0, [r0, #8]
   8743c:	1f3a      	subs	r2, r7, #4
   8743e:	60c1      	str	r1, [r0, #12]
   87440:	6088      	str	r0, [r1, #8]
   87442:	f855 0f08 	ldr.w	r0, [r5, #8]!
   87446:	f8da 100c 	ldr.w	r1, [sl, #12]
   8744a:	2a24      	cmp	r2, #36	; 0x24
   8744c:	60c1      	str	r1, [r0, #12]
   8744e:	6088      	str	r0, [r1, #8]
   87450:	d826      	bhi.n	874a0 <_realloc_r+0x1bc>
   87452:	2a13      	cmp	r2, #19
   87454:	f240 8081 	bls.w	8755a <_realloc_r+0x276>
   87458:	6821      	ldr	r1, [r4, #0]
   8745a:	2a1b      	cmp	r2, #27
   8745c:	f8ca 1008 	str.w	r1, [sl, #8]
   87460:	6861      	ldr	r1, [r4, #4]
   87462:	f8ca 100c 	str.w	r1, [sl, #12]
   87466:	f200 80ad 	bhi.w	875c4 <_realloc_r+0x2e0>
   8746a:	f104 0008 	add.w	r0, r4, #8
   8746e:	f10a 0210 	add.w	r2, sl, #16
   87472:	e074      	b.n	8755e <_realloc_r+0x27a>
   87474:	f854 3c08 	ldr.w	r3, [r4, #-8]
   87478:	eba9 0a03 	sub.w	sl, r9, r3
   8747c:	f8da 1004 	ldr.w	r1, [sl, #4]
   87480:	f021 0103 	bic.w	r1, r1, #3
   87484:	187b      	adds	r3, r7, r1
   87486:	4293      	cmp	r3, r2
   87488:	f6ff af59 	blt.w	8733e <_realloc_r+0x5a>
   8748c:	4655      	mov	r5, sl
   8748e:	f8da 100c 	ldr.w	r1, [sl, #12]
   87492:	f855 0f08 	ldr.w	r0, [r5, #8]!
   87496:	1f3a      	subs	r2, r7, #4
   87498:	2a24      	cmp	r2, #36	; 0x24
   8749a:	60c1      	str	r1, [r0, #12]
   8749c:	6088      	str	r0, [r1, #8]
   8749e:	d9d8      	bls.n	87452 <_realloc_r+0x16e>
   874a0:	4621      	mov	r1, r4
   874a2:	4628      	mov	r0, r5
   874a4:	461f      	mov	r7, r3
   874a6:	46d1      	mov	r9, sl
   874a8:	f7ff feb8 	bl	8721c <memmove>
   874ac:	e77a      	b.n	873a4 <_realloc_r+0xc0>
   874ae:	6841      	ldr	r1, [r0, #4]
   874b0:	f106 0010 	add.w	r0, r6, #16
   874b4:	f021 0b03 	bic.w	fp, r1, #3
   874b8:	44bb      	add	fp, r7
   874ba:	4583      	cmp	fp, r0
   874bc:	da58      	bge.n	87570 <_realloc_r+0x28c>
   874be:	f01e 0f01 	tst.w	lr, #1
   874c2:	f47f af3c 	bne.w	8733e <_realloc_r+0x5a>
   874c6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   874ca:	eba9 0a01 	sub.w	sl, r9, r1
   874ce:	f8da 1004 	ldr.w	r1, [sl, #4]
   874d2:	f021 0103 	bic.w	r1, r1, #3
   874d6:	448b      	add	fp, r1
   874d8:	4558      	cmp	r0, fp
   874da:	dcd3      	bgt.n	87484 <_realloc_r+0x1a0>
   874dc:	4655      	mov	r5, sl
   874de:	f8da 100c 	ldr.w	r1, [sl, #12]
   874e2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   874e6:	1f3a      	subs	r2, r7, #4
   874e8:	2a24      	cmp	r2, #36	; 0x24
   874ea:	60c1      	str	r1, [r0, #12]
   874ec:	6088      	str	r0, [r1, #8]
   874ee:	f200 808d 	bhi.w	8760c <_realloc_r+0x328>
   874f2:	2a13      	cmp	r2, #19
   874f4:	f240 8087 	bls.w	87606 <_realloc_r+0x322>
   874f8:	6821      	ldr	r1, [r4, #0]
   874fa:	2a1b      	cmp	r2, #27
   874fc:	f8ca 1008 	str.w	r1, [sl, #8]
   87500:	6861      	ldr	r1, [r4, #4]
   87502:	f8ca 100c 	str.w	r1, [sl, #12]
   87506:	f200 8088 	bhi.w	8761a <_realloc_r+0x336>
   8750a:	f104 0108 	add.w	r1, r4, #8
   8750e:	f10a 0210 	add.w	r2, sl, #16
   87512:	6808      	ldr	r0, [r1, #0]
   87514:	6010      	str	r0, [r2, #0]
   87516:	6848      	ldr	r0, [r1, #4]
   87518:	6050      	str	r0, [r2, #4]
   8751a:	6889      	ldr	r1, [r1, #8]
   8751c:	6091      	str	r1, [r2, #8]
   8751e:	ebab 0206 	sub.w	r2, fp, r6
   87522:	eb0a 0106 	add.w	r1, sl, r6
   87526:	f042 0201 	orr.w	r2, r2, #1
   8752a:	6099      	str	r1, [r3, #8]
   8752c:	604a      	str	r2, [r1, #4]
   8752e:	f8da 3004 	ldr.w	r3, [sl, #4]
   87532:	4640      	mov	r0, r8
   87534:	f003 0301 	and.w	r3, r3, #1
   87538:	431e      	orrs	r6, r3
   8753a:	f8ca 6004 	str.w	r6, [sl, #4]
   8753e:	f7ff f907 	bl	86750 <__malloc_unlock>
   87542:	e742      	b.n	873ca <_realloc_r+0xe6>
   87544:	6823      	ldr	r3, [r4, #0]
   87546:	2a1b      	cmp	r2, #27
   87548:	6003      	str	r3, [r0, #0]
   8754a:	6863      	ldr	r3, [r4, #4]
   8754c:	6043      	str	r3, [r0, #4]
   8754e:	d827      	bhi.n	875a0 <_realloc_r+0x2bc>
   87550:	f100 0308 	add.w	r3, r0, #8
   87554:	f104 0208 	add.w	r2, r4, #8
   87558:	e70b      	b.n	87372 <_realloc_r+0x8e>
   8755a:	4620      	mov	r0, r4
   8755c:	462a      	mov	r2, r5
   8755e:	6801      	ldr	r1, [r0, #0]
   87560:	461f      	mov	r7, r3
   87562:	6011      	str	r1, [r2, #0]
   87564:	6841      	ldr	r1, [r0, #4]
   87566:	46d1      	mov	r9, sl
   87568:	6051      	str	r1, [r2, #4]
   8756a:	6883      	ldr	r3, [r0, #8]
   8756c:	6093      	str	r3, [r2, #8]
   8756e:	e719      	b.n	873a4 <_realloc_r+0xc0>
   87570:	ebab 0b06 	sub.w	fp, fp, r6
   87574:	eb09 0106 	add.w	r1, r9, r6
   87578:	f04b 0201 	orr.w	r2, fp, #1
   8757c:	6099      	str	r1, [r3, #8]
   8757e:	604a      	str	r2, [r1, #4]
   87580:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87584:	4640      	mov	r0, r8
   87586:	f003 0301 	and.w	r3, r3, #1
   8758a:	431e      	orrs	r6, r3
   8758c:	f844 6c04 	str.w	r6, [r4, #-4]
   87590:	f7ff f8de 	bl	86750 <__malloc_unlock>
   87594:	4625      	mov	r5, r4
   87596:	e718      	b.n	873ca <_realloc_r+0xe6>
   87598:	4621      	mov	r1, r4
   8759a:	f7ff fe3f 	bl	8721c <memmove>
   8759e:	e6ee      	b.n	8737e <_realloc_r+0x9a>
   875a0:	68a3      	ldr	r3, [r4, #8]
   875a2:	2a24      	cmp	r2, #36	; 0x24
   875a4:	6083      	str	r3, [r0, #8]
   875a6:	68e3      	ldr	r3, [r4, #12]
   875a8:	60c3      	str	r3, [r0, #12]
   875aa:	d018      	beq.n	875de <_realloc_r+0x2fa>
   875ac:	f100 0310 	add.w	r3, r0, #16
   875b0:	f104 0210 	add.w	r2, r4, #16
   875b4:	e6dd      	b.n	87372 <_realloc_r+0x8e>
   875b6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   875ba:	4625      	mov	r5, r4
   875bc:	f023 0303 	bic.w	r3, r3, #3
   875c0:	441f      	add	r7, r3
   875c2:	e6ef      	b.n	873a4 <_realloc_r+0xc0>
   875c4:	68a1      	ldr	r1, [r4, #8]
   875c6:	2a24      	cmp	r2, #36	; 0x24
   875c8:	f8ca 1010 	str.w	r1, [sl, #16]
   875cc:	68e1      	ldr	r1, [r4, #12]
   875ce:	f8ca 1014 	str.w	r1, [sl, #20]
   875d2:	d00d      	beq.n	875f0 <_realloc_r+0x30c>
   875d4:	f104 0010 	add.w	r0, r4, #16
   875d8:	f10a 0218 	add.w	r2, sl, #24
   875dc:	e7bf      	b.n	8755e <_realloc_r+0x27a>
   875de:	6922      	ldr	r2, [r4, #16]
   875e0:	f100 0318 	add.w	r3, r0, #24
   875e4:	6102      	str	r2, [r0, #16]
   875e6:	6961      	ldr	r1, [r4, #20]
   875e8:	f104 0218 	add.w	r2, r4, #24
   875ec:	6141      	str	r1, [r0, #20]
   875ee:	e6c0      	b.n	87372 <_realloc_r+0x8e>
   875f0:	6922      	ldr	r2, [r4, #16]
   875f2:	f104 0018 	add.w	r0, r4, #24
   875f6:	f8ca 2018 	str.w	r2, [sl, #24]
   875fa:	6961      	ldr	r1, [r4, #20]
   875fc:	f10a 0220 	add.w	r2, sl, #32
   87600:	f8ca 101c 	str.w	r1, [sl, #28]
   87604:	e7ab      	b.n	8755e <_realloc_r+0x27a>
   87606:	4621      	mov	r1, r4
   87608:	462a      	mov	r2, r5
   8760a:	e782      	b.n	87512 <_realloc_r+0x22e>
   8760c:	4621      	mov	r1, r4
   8760e:	4628      	mov	r0, r5
   87610:	9301      	str	r3, [sp, #4]
   87612:	f7ff fe03 	bl	8721c <memmove>
   87616:	9b01      	ldr	r3, [sp, #4]
   87618:	e781      	b.n	8751e <_realloc_r+0x23a>
   8761a:	68a1      	ldr	r1, [r4, #8]
   8761c:	2a24      	cmp	r2, #36	; 0x24
   8761e:	f8ca 1010 	str.w	r1, [sl, #16]
   87622:	68e1      	ldr	r1, [r4, #12]
   87624:	f8ca 1014 	str.w	r1, [sl, #20]
   87628:	d006      	beq.n	87638 <_realloc_r+0x354>
   8762a:	f104 0110 	add.w	r1, r4, #16
   8762e:	f10a 0218 	add.w	r2, sl, #24
   87632:	e76e      	b.n	87512 <_realloc_r+0x22e>
   87634:	20000bc8 	.word	0x20000bc8
   87638:	6922      	ldr	r2, [r4, #16]
   8763a:	f104 0118 	add.w	r1, r4, #24
   8763e:	f8ca 2018 	str.w	r2, [sl, #24]
   87642:	6960      	ldr	r0, [r4, #20]
   87644:	f10a 0220 	add.w	r2, sl, #32
   87648:	f8ca 001c 	str.w	r0, [sl, #28]
   8764c:	e761      	b.n	87512 <_realloc_r+0x22e>
   8764e:	bf00      	nop

00087650 <__aeabi_drsub>:
   87650:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   87654:	e002      	b.n	8765c <__adddf3>
   87656:	bf00      	nop

00087658 <__aeabi_dsub>:
   87658:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0008765c <__adddf3>:
   8765c:	b530      	push	{r4, r5, lr}
   8765e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   87662:	ea4f 0543 	mov.w	r5, r3, lsl #1
   87666:	ea94 0f05 	teq	r4, r5
   8766a:	bf08      	it	eq
   8766c:	ea90 0f02 	teqeq	r0, r2
   87670:	bf1f      	itttt	ne
   87672:	ea54 0c00 	orrsne.w	ip, r4, r0
   87676:	ea55 0c02 	orrsne.w	ip, r5, r2
   8767a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8767e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87682:	f000 80e2 	beq.w	8784a <__adddf3+0x1ee>
   87686:	ea4f 5454 	mov.w	r4, r4, lsr #21
   8768a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8768e:	bfb8      	it	lt
   87690:	426d      	neglt	r5, r5
   87692:	dd0c      	ble.n	876ae <__adddf3+0x52>
   87694:	442c      	add	r4, r5
   87696:	ea80 0202 	eor.w	r2, r0, r2
   8769a:	ea81 0303 	eor.w	r3, r1, r3
   8769e:	ea82 0000 	eor.w	r0, r2, r0
   876a2:	ea83 0101 	eor.w	r1, r3, r1
   876a6:	ea80 0202 	eor.w	r2, r0, r2
   876aa:	ea81 0303 	eor.w	r3, r1, r3
   876ae:	2d36      	cmp	r5, #54	; 0x36
   876b0:	bf88      	it	hi
   876b2:	bd30      	pophi	{r4, r5, pc}
   876b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   876b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   876bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   876c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   876c4:	d002      	beq.n	876cc <__adddf3+0x70>
   876c6:	4240      	negs	r0, r0
   876c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   876cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   876d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   876d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   876d8:	d002      	beq.n	876e0 <__adddf3+0x84>
   876da:	4252      	negs	r2, r2
   876dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   876e0:	ea94 0f05 	teq	r4, r5
   876e4:	f000 80a7 	beq.w	87836 <__adddf3+0x1da>
   876e8:	f1a4 0401 	sub.w	r4, r4, #1
   876ec:	f1d5 0e20 	rsbs	lr, r5, #32
   876f0:	db0d      	blt.n	8770e <__adddf3+0xb2>
   876f2:	fa02 fc0e 	lsl.w	ip, r2, lr
   876f6:	fa22 f205 	lsr.w	r2, r2, r5
   876fa:	1880      	adds	r0, r0, r2
   876fc:	f141 0100 	adc.w	r1, r1, #0
   87700:	fa03 f20e 	lsl.w	r2, r3, lr
   87704:	1880      	adds	r0, r0, r2
   87706:	fa43 f305 	asr.w	r3, r3, r5
   8770a:	4159      	adcs	r1, r3
   8770c:	e00e      	b.n	8772c <__adddf3+0xd0>
   8770e:	f1a5 0520 	sub.w	r5, r5, #32
   87712:	f10e 0e20 	add.w	lr, lr, #32
   87716:	2a01      	cmp	r2, #1
   87718:	fa03 fc0e 	lsl.w	ip, r3, lr
   8771c:	bf28      	it	cs
   8771e:	f04c 0c02 	orrcs.w	ip, ip, #2
   87722:	fa43 f305 	asr.w	r3, r3, r5
   87726:	18c0      	adds	r0, r0, r3
   87728:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   8772c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87730:	d507      	bpl.n	87742 <__adddf3+0xe6>
   87732:	f04f 0e00 	mov.w	lr, #0
   87736:	f1dc 0c00 	rsbs	ip, ip, #0
   8773a:	eb7e 0000 	sbcs.w	r0, lr, r0
   8773e:	eb6e 0101 	sbc.w	r1, lr, r1
   87742:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   87746:	d31b      	bcc.n	87780 <__adddf3+0x124>
   87748:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   8774c:	d30c      	bcc.n	87768 <__adddf3+0x10c>
   8774e:	0849      	lsrs	r1, r1, #1
   87750:	ea5f 0030 	movs.w	r0, r0, rrx
   87754:	ea4f 0c3c 	mov.w	ip, ip, rrx
   87758:	f104 0401 	add.w	r4, r4, #1
   8775c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   87760:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   87764:	f080 809a 	bcs.w	8789c <__adddf3+0x240>
   87768:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   8776c:	bf08      	it	eq
   8776e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   87772:	f150 0000 	adcs.w	r0, r0, #0
   87776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8777a:	ea41 0105 	orr.w	r1, r1, r5
   8777e:	bd30      	pop	{r4, r5, pc}
   87780:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   87784:	4140      	adcs	r0, r0
   87786:	eb41 0101 	adc.w	r1, r1, r1
   8778a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8778e:	f1a4 0401 	sub.w	r4, r4, #1
   87792:	d1e9      	bne.n	87768 <__adddf3+0x10c>
   87794:	f091 0f00 	teq	r1, #0
   87798:	bf04      	itt	eq
   8779a:	4601      	moveq	r1, r0
   8779c:	2000      	moveq	r0, #0
   8779e:	fab1 f381 	clz	r3, r1
   877a2:	bf08      	it	eq
   877a4:	3320      	addeq	r3, #32
   877a6:	f1a3 030b 	sub.w	r3, r3, #11
   877aa:	f1b3 0220 	subs.w	r2, r3, #32
   877ae:	da0c      	bge.n	877ca <__adddf3+0x16e>
   877b0:	320c      	adds	r2, #12
   877b2:	dd08      	ble.n	877c6 <__adddf3+0x16a>
   877b4:	f102 0c14 	add.w	ip, r2, #20
   877b8:	f1c2 020c 	rsb	r2, r2, #12
   877bc:	fa01 f00c 	lsl.w	r0, r1, ip
   877c0:	fa21 f102 	lsr.w	r1, r1, r2
   877c4:	e00c      	b.n	877e0 <__adddf3+0x184>
   877c6:	f102 0214 	add.w	r2, r2, #20
   877ca:	bfd8      	it	le
   877cc:	f1c2 0c20 	rsble	ip, r2, #32
   877d0:	fa01 f102 	lsl.w	r1, r1, r2
   877d4:	fa20 fc0c 	lsr.w	ip, r0, ip
   877d8:	bfdc      	itt	le
   877da:	ea41 010c 	orrle.w	r1, r1, ip
   877de:	4090      	lslle	r0, r2
   877e0:	1ae4      	subs	r4, r4, r3
   877e2:	bfa2      	ittt	ge
   877e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   877e8:	4329      	orrge	r1, r5
   877ea:	bd30      	popge	{r4, r5, pc}
   877ec:	ea6f 0404 	mvn.w	r4, r4
   877f0:	3c1f      	subs	r4, #31
   877f2:	da1c      	bge.n	8782e <__adddf3+0x1d2>
   877f4:	340c      	adds	r4, #12
   877f6:	dc0e      	bgt.n	87816 <__adddf3+0x1ba>
   877f8:	f104 0414 	add.w	r4, r4, #20
   877fc:	f1c4 0220 	rsb	r2, r4, #32
   87800:	fa20 f004 	lsr.w	r0, r0, r4
   87804:	fa01 f302 	lsl.w	r3, r1, r2
   87808:	ea40 0003 	orr.w	r0, r0, r3
   8780c:	fa21 f304 	lsr.w	r3, r1, r4
   87810:	ea45 0103 	orr.w	r1, r5, r3
   87814:	bd30      	pop	{r4, r5, pc}
   87816:	f1c4 040c 	rsb	r4, r4, #12
   8781a:	f1c4 0220 	rsb	r2, r4, #32
   8781e:	fa20 f002 	lsr.w	r0, r0, r2
   87822:	fa01 f304 	lsl.w	r3, r1, r4
   87826:	ea40 0003 	orr.w	r0, r0, r3
   8782a:	4629      	mov	r1, r5
   8782c:	bd30      	pop	{r4, r5, pc}
   8782e:	fa21 f004 	lsr.w	r0, r1, r4
   87832:	4629      	mov	r1, r5
   87834:	bd30      	pop	{r4, r5, pc}
   87836:	f094 0f00 	teq	r4, #0
   8783a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   8783e:	bf06      	itte	eq
   87840:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   87844:	3401      	addeq	r4, #1
   87846:	3d01      	subne	r5, #1
   87848:	e74e      	b.n	876e8 <__adddf3+0x8c>
   8784a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8784e:	bf18      	it	ne
   87850:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87854:	d029      	beq.n	878aa <__adddf3+0x24e>
   87856:	ea94 0f05 	teq	r4, r5
   8785a:	bf08      	it	eq
   8785c:	ea90 0f02 	teqeq	r0, r2
   87860:	d005      	beq.n	8786e <__adddf3+0x212>
   87862:	ea54 0c00 	orrs.w	ip, r4, r0
   87866:	bf04      	itt	eq
   87868:	4619      	moveq	r1, r3
   8786a:	4610      	moveq	r0, r2
   8786c:	bd30      	pop	{r4, r5, pc}
   8786e:	ea91 0f03 	teq	r1, r3
   87872:	bf1e      	ittt	ne
   87874:	2100      	movne	r1, #0
   87876:	2000      	movne	r0, #0
   87878:	bd30      	popne	{r4, r5, pc}
   8787a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8787e:	d105      	bne.n	8788c <__adddf3+0x230>
   87880:	0040      	lsls	r0, r0, #1
   87882:	4149      	adcs	r1, r1
   87884:	bf28      	it	cs
   87886:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   8788a:	bd30      	pop	{r4, r5, pc}
   8788c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   87890:	bf3c      	itt	cc
   87892:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   87896:	bd30      	popcc	{r4, r5, pc}
   87898:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8789c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   878a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   878a4:	f04f 0000 	mov.w	r0, #0
   878a8:	bd30      	pop	{r4, r5, pc}
   878aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   878ae:	bf1a      	itte	ne
   878b0:	4619      	movne	r1, r3
   878b2:	4610      	movne	r0, r2
   878b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   878b8:	bf1c      	itt	ne
   878ba:	460b      	movne	r3, r1
   878bc:	4602      	movne	r2, r0
   878be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   878c2:	bf06      	itte	eq
   878c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   878c8:	ea91 0f03 	teqeq	r1, r3
   878cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   878d0:	bd30      	pop	{r4, r5, pc}
   878d2:	bf00      	nop

000878d4 <__aeabi_ui2d>:
   878d4:	f090 0f00 	teq	r0, #0
   878d8:	bf04      	itt	eq
   878da:	2100      	moveq	r1, #0
   878dc:	4770      	bxeq	lr
   878de:	b530      	push	{r4, r5, lr}
   878e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   878e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   878e8:	f04f 0500 	mov.w	r5, #0
   878ec:	f04f 0100 	mov.w	r1, #0
   878f0:	e750      	b.n	87794 <__adddf3+0x138>
   878f2:	bf00      	nop

000878f4 <__aeabi_i2d>:
   878f4:	f090 0f00 	teq	r0, #0
   878f8:	bf04      	itt	eq
   878fa:	2100      	moveq	r1, #0
   878fc:	4770      	bxeq	lr
   878fe:	b530      	push	{r4, r5, lr}
   87900:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87904:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87908:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   8790c:	bf48      	it	mi
   8790e:	4240      	negmi	r0, r0
   87910:	f04f 0100 	mov.w	r1, #0
   87914:	e73e      	b.n	87794 <__adddf3+0x138>
   87916:	bf00      	nop

00087918 <__aeabi_f2d>:
   87918:	0042      	lsls	r2, r0, #1
   8791a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8791e:	ea4f 0131 	mov.w	r1, r1, rrx
   87922:	ea4f 7002 	mov.w	r0, r2, lsl #28
   87926:	bf1f      	itttt	ne
   87928:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   8792c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   87930:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   87934:	4770      	bxne	lr
   87936:	f092 0f00 	teq	r2, #0
   8793a:	bf14      	ite	ne
   8793c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   87940:	4770      	bxeq	lr
   87942:	b530      	push	{r4, r5, lr}
   87944:	f44f 7460 	mov.w	r4, #896	; 0x380
   87948:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8794c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   87950:	e720      	b.n	87794 <__adddf3+0x138>
   87952:	bf00      	nop

00087954 <__aeabi_ul2d>:
   87954:	ea50 0201 	orrs.w	r2, r0, r1
   87958:	bf08      	it	eq
   8795a:	4770      	bxeq	lr
   8795c:	b530      	push	{r4, r5, lr}
   8795e:	f04f 0500 	mov.w	r5, #0
   87962:	e00a      	b.n	8797a <__aeabi_l2d+0x16>

00087964 <__aeabi_l2d>:
   87964:	ea50 0201 	orrs.w	r2, r0, r1
   87968:	bf08      	it	eq
   8796a:	4770      	bxeq	lr
   8796c:	b530      	push	{r4, r5, lr}
   8796e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   87972:	d502      	bpl.n	8797a <__aeabi_l2d+0x16>
   87974:	4240      	negs	r0, r0
   87976:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8797a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8797e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87982:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   87986:	f43f aedc 	beq.w	87742 <__adddf3+0xe6>
   8798a:	f04f 0203 	mov.w	r2, #3
   8798e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   87992:	bf18      	it	ne
   87994:	3203      	addne	r2, #3
   87996:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8799a:	bf18      	it	ne
   8799c:	3203      	addne	r2, #3
   8799e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   879a2:	f1c2 0320 	rsb	r3, r2, #32
   879a6:	fa00 fc03 	lsl.w	ip, r0, r3
   879aa:	fa20 f002 	lsr.w	r0, r0, r2
   879ae:	fa01 fe03 	lsl.w	lr, r1, r3
   879b2:	ea40 000e 	orr.w	r0, r0, lr
   879b6:	fa21 f102 	lsr.w	r1, r1, r2
   879ba:	4414      	add	r4, r2
   879bc:	e6c1      	b.n	87742 <__adddf3+0xe6>
   879be:	bf00      	nop

000879c0 <__aeabi_dmul>:
   879c0:	b570      	push	{r4, r5, r6, lr}
   879c2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   879c6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   879ca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   879ce:	bf1d      	ittte	ne
   879d0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   879d4:	ea94 0f0c 	teqne	r4, ip
   879d8:	ea95 0f0c 	teqne	r5, ip
   879dc:	f000 f8de 	bleq	87b9c <__aeabi_dmul+0x1dc>
   879e0:	442c      	add	r4, r5
   879e2:	ea81 0603 	eor.w	r6, r1, r3
   879e6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   879ea:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   879ee:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   879f2:	bf18      	it	ne
   879f4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   879f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   879fc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   87a00:	d038      	beq.n	87a74 <__aeabi_dmul+0xb4>
   87a02:	fba0 ce02 	umull	ip, lr, r0, r2
   87a06:	f04f 0500 	mov.w	r5, #0
   87a0a:	fbe1 e502 	umlal	lr, r5, r1, r2
   87a0e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   87a12:	fbe0 e503 	umlal	lr, r5, r0, r3
   87a16:	f04f 0600 	mov.w	r6, #0
   87a1a:	fbe1 5603 	umlal	r5, r6, r1, r3
   87a1e:	f09c 0f00 	teq	ip, #0
   87a22:	bf18      	it	ne
   87a24:	f04e 0e01 	orrne.w	lr, lr, #1
   87a28:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   87a2c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   87a30:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   87a34:	d204      	bcs.n	87a40 <__aeabi_dmul+0x80>
   87a36:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   87a3a:	416d      	adcs	r5, r5
   87a3c:	eb46 0606 	adc.w	r6, r6, r6
   87a40:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   87a44:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   87a48:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   87a4c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   87a50:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   87a54:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   87a58:	bf88      	it	hi
   87a5a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87a5e:	d81e      	bhi.n	87a9e <__aeabi_dmul+0xde>
   87a60:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   87a64:	bf08      	it	eq
   87a66:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   87a6a:	f150 0000 	adcs.w	r0, r0, #0
   87a6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87a72:	bd70      	pop	{r4, r5, r6, pc}
   87a74:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   87a78:	ea46 0101 	orr.w	r1, r6, r1
   87a7c:	ea40 0002 	orr.w	r0, r0, r2
   87a80:	ea81 0103 	eor.w	r1, r1, r3
   87a84:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   87a88:	bfc2      	ittt	gt
   87a8a:	ebd4 050c 	rsbsgt	r5, r4, ip
   87a8e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   87a92:	bd70      	popgt	{r4, r5, r6, pc}
   87a94:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87a98:	f04f 0e00 	mov.w	lr, #0
   87a9c:	3c01      	subs	r4, #1
   87a9e:	f300 80ab 	bgt.w	87bf8 <__aeabi_dmul+0x238>
   87aa2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   87aa6:	bfde      	ittt	le
   87aa8:	2000      	movle	r0, #0
   87aaa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   87aae:	bd70      	pople	{r4, r5, r6, pc}
   87ab0:	f1c4 0400 	rsb	r4, r4, #0
   87ab4:	3c20      	subs	r4, #32
   87ab6:	da35      	bge.n	87b24 <__aeabi_dmul+0x164>
   87ab8:	340c      	adds	r4, #12
   87aba:	dc1b      	bgt.n	87af4 <__aeabi_dmul+0x134>
   87abc:	f104 0414 	add.w	r4, r4, #20
   87ac0:	f1c4 0520 	rsb	r5, r4, #32
   87ac4:	fa00 f305 	lsl.w	r3, r0, r5
   87ac8:	fa20 f004 	lsr.w	r0, r0, r4
   87acc:	fa01 f205 	lsl.w	r2, r1, r5
   87ad0:	ea40 0002 	orr.w	r0, r0, r2
   87ad4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   87ad8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   87adc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   87ae0:	fa21 f604 	lsr.w	r6, r1, r4
   87ae4:	eb42 0106 	adc.w	r1, r2, r6
   87ae8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87aec:	bf08      	it	eq
   87aee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   87af2:	bd70      	pop	{r4, r5, r6, pc}
   87af4:	f1c4 040c 	rsb	r4, r4, #12
   87af8:	f1c4 0520 	rsb	r5, r4, #32
   87afc:	fa00 f304 	lsl.w	r3, r0, r4
   87b00:	fa20 f005 	lsr.w	r0, r0, r5
   87b04:	fa01 f204 	lsl.w	r2, r1, r4
   87b08:	ea40 0002 	orr.w	r0, r0, r2
   87b0c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87b10:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   87b14:	f141 0100 	adc.w	r1, r1, #0
   87b18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87b1c:	bf08      	it	eq
   87b1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   87b22:	bd70      	pop	{r4, r5, r6, pc}
   87b24:	f1c4 0520 	rsb	r5, r4, #32
   87b28:	fa00 f205 	lsl.w	r2, r0, r5
   87b2c:	ea4e 0e02 	orr.w	lr, lr, r2
   87b30:	fa20 f304 	lsr.w	r3, r0, r4
   87b34:	fa01 f205 	lsl.w	r2, r1, r5
   87b38:	ea43 0302 	orr.w	r3, r3, r2
   87b3c:	fa21 f004 	lsr.w	r0, r1, r4
   87b40:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87b44:	fa21 f204 	lsr.w	r2, r1, r4
   87b48:	ea20 0002 	bic.w	r0, r0, r2
   87b4c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   87b50:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87b54:	bf08      	it	eq
   87b56:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   87b5a:	bd70      	pop	{r4, r5, r6, pc}
   87b5c:	f094 0f00 	teq	r4, #0
   87b60:	d10f      	bne.n	87b82 <__aeabi_dmul+0x1c2>
   87b62:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   87b66:	0040      	lsls	r0, r0, #1
   87b68:	eb41 0101 	adc.w	r1, r1, r1
   87b6c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87b70:	bf08      	it	eq
   87b72:	3c01      	subeq	r4, #1
   87b74:	d0f7      	beq.n	87b66 <__aeabi_dmul+0x1a6>
   87b76:	ea41 0106 	orr.w	r1, r1, r6
   87b7a:	f095 0f00 	teq	r5, #0
   87b7e:	bf18      	it	ne
   87b80:	4770      	bxne	lr
   87b82:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   87b86:	0052      	lsls	r2, r2, #1
   87b88:	eb43 0303 	adc.w	r3, r3, r3
   87b8c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   87b90:	bf08      	it	eq
   87b92:	3d01      	subeq	r5, #1
   87b94:	d0f7      	beq.n	87b86 <__aeabi_dmul+0x1c6>
   87b96:	ea43 0306 	orr.w	r3, r3, r6
   87b9a:	4770      	bx	lr
   87b9c:	ea94 0f0c 	teq	r4, ip
   87ba0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   87ba4:	bf18      	it	ne
   87ba6:	ea95 0f0c 	teqne	r5, ip
   87baa:	d00c      	beq.n	87bc6 <__aeabi_dmul+0x206>
   87bac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   87bb0:	bf18      	it	ne
   87bb2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   87bb6:	d1d1      	bne.n	87b5c <__aeabi_dmul+0x19c>
   87bb8:	ea81 0103 	eor.w	r1, r1, r3
   87bbc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87bc0:	f04f 0000 	mov.w	r0, #0
   87bc4:	bd70      	pop	{r4, r5, r6, pc}
   87bc6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   87bca:	bf06      	itte	eq
   87bcc:	4610      	moveq	r0, r2
   87bce:	4619      	moveq	r1, r3
   87bd0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   87bd4:	d019      	beq.n	87c0a <__aeabi_dmul+0x24a>
   87bd6:	ea94 0f0c 	teq	r4, ip
   87bda:	d102      	bne.n	87be2 <__aeabi_dmul+0x222>
   87bdc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   87be0:	d113      	bne.n	87c0a <__aeabi_dmul+0x24a>
   87be2:	ea95 0f0c 	teq	r5, ip
   87be6:	d105      	bne.n	87bf4 <__aeabi_dmul+0x234>
   87be8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   87bec:	bf1c      	itt	ne
   87bee:	4610      	movne	r0, r2
   87bf0:	4619      	movne	r1, r3
   87bf2:	d10a      	bne.n	87c0a <__aeabi_dmul+0x24a>
   87bf4:	ea81 0103 	eor.w	r1, r1, r3
   87bf8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87bfc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   87c00:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   87c04:	f04f 0000 	mov.w	r0, #0
   87c08:	bd70      	pop	{r4, r5, r6, pc}
   87c0a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   87c0e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   87c12:	bd70      	pop	{r4, r5, r6, pc}

00087c14 <__aeabi_ddiv>:
   87c14:	b570      	push	{r4, r5, r6, lr}
   87c16:	f04f 0cff 	mov.w	ip, #255	; 0xff
   87c1a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   87c1e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   87c22:	bf1d      	ittte	ne
   87c24:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   87c28:	ea94 0f0c 	teqne	r4, ip
   87c2c:	ea95 0f0c 	teqne	r5, ip
   87c30:	f000 f8a7 	bleq	87d82 <__aeabi_ddiv+0x16e>
   87c34:	eba4 0405 	sub.w	r4, r4, r5
   87c38:	ea81 0e03 	eor.w	lr, r1, r3
   87c3c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   87c40:	ea4f 3101 	mov.w	r1, r1, lsl #12
   87c44:	f000 8088 	beq.w	87d58 <__aeabi_ddiv+0x144>
   87c48:	ea4f 3303 	mov.w	r3, r3, lsl #12
   87c4c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   87c50:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   87c54:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   87c58:	ea4f 2202 	mov.w	r2, r2, lsl #8
   87c5c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   87c60:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   87c64:	ea4f 2600 	mov.w	r6, r0, lsl #8
   87c68:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   87c6c:	429d      	cmp	r5, r3
   87c6e:	bf08      	it	eq
   87c70:	4296      	cmpeq	r6, r2
   87c72:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   87c76:	f504 7440 	add.w	r4, r4, #768	; 0x300
   87c7a:	d202      	bcs.n	87c82 <__aeabi_ddiv+0x6e>
   87c7c:	085b      	lsrs	r3, r3, #1
   87c7e:	ea4f 0232 	mov.w	r2, r2, rrx
   87c82:	1ab6      	subs	r6, r6, r2
   87c84:	eb65 0503 	sbc.w	r5, r5, r3
   87c88:	085b      	lsrs	r3, r3, #1
   87c8a:	ea4f 0232 	mov.w	r2, r2, rrx
   87c8e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   87c92:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   87c96:	ebb6 0e02 	subs.w	lr, r6, r2
   87c9a:	eb75 0e03 	sbcs.w	lr, r5, r3
   87c9e:	bf22      	ittt	cs
   87ca0:	1ab6      	subcs	r6, r6, r2
   87ca2:	4675      	movcs	r5, lr
   87ca4:	ea40 000c 	orrcs.w	r0, r0, ip
   87ca8:	085b      	lsrs	r3, r3, #1
   87caa:	ea4f 0232 	mov.w	r2, r2, rrx
   87cae:	ebb6 0e02 	subs.w	lr, r6, r2
   87cb2:	eb75 0e03 	sbcs.w	lr, r5, r3
   87cb6:	bf22      	ittt	cs
   87cb8:	1ab6      	subcs	r6, r6, r2
   87cba:	4675      	movcs	r5, lr
   87cbc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   87cc0:	085b      	lsrs	r3, r3, #1
   87cc2:	ea4f 0232 	mov.w	r2, r2, rrx
   87cc6:	ebb6 0e02 	subs.w	lr, r6, r2
   87cca:	eb75 0e03 	sbcs.w	lr, r5, r3
   87cce:	bf22      	ittt	cs
   87cd0:	1ab6      	subcs	r6, r6, r2
   87cd2:	4675      	movcs	r5, lr
   87cd4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   87cd8:	085b      	lsrs	r3, r3, #1
   87cda:	ea4f 0232 	mov.w	r2, r2, rrx
   87cde:	ebb6 0e02 	subs.w	lr, r6, r2
   87ce2:	eb75 0e03 	sbcs.w	lr, r5, r3
   87ce6:	bf22      	ittt	cs
   87ce8:	1ab6      	subcs	r6, r6, r2
   87cea:	4675      	movcs	r5, lr
   87cec:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   87cf0:	ea55 0e06 	orrs.w	lr, r5, r6
   87cf4:	d018      	beq.n	87d28 <__aeabi_ddiv+0x114>
   87cf6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   87cfa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   87cfe:	ea4f 1606 	mov.w	r6, r6, lsl #4
   87d02:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   87d06:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   87d0a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   87d0e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   87d12:	d1c0      	bne.n	87c96 <__aeabi_ddiv+0x82>
   87d14:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87d18:	d10b      	bne.n	87d32 <__aeabi_ddiv+0x11e>
   87d1a:	ea41 0100 	orr.w	r1, r1, r0
   87d1e:	f04f 0000 	mov.w	r0, #0
   87d22:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   87d26:	e7b6      	b.n	87c96 <__aeabi_ddiv+0x82>
   87d28:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87d2c:	bf04      	itt	eq
   87d2e:	4301      	orreq	r1, r0
   87d30:	2000      	moveq	r0, #0
   87d32:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   87d36:	bf88      	it	hi
   87d38:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87d3c:	f63f aeaf 	bhi.w	87a9e <__aeabi_dmul+0xde>
   87d40:	ebb5 0c03 	subs.w	ip, r5, r3
   87d44:	bf04      	itt	eq
   87d46:	ebb6 0c02 	subseq.w	ip, r6, r2
   87d4a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   87d4e:	f150 0000 	adcs.w	r0, r0, #0
   87d52:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87d56:	bd70      	pop	{r4, r5, r6, pc}
   87d58:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   87d5c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   87d60:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   87d64:	bfc2      	ittt	gt
   87d66:	ebd4 050c 	rsbsgt	r5, r4, ip
   87d6a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   87d6e:	bd70      	popgt	{r4, r5, r6, pc}
   87d70:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87d74:	f04f 0e00 	mov.w	lr, #0
   87d78:	3c01      	subs	r4, #1
   87d7a:	e690      	b.n	87a9e <__aeabi_dmul+0xde>
   87d7c:	ea45 0e06 	orr.w	lr, r5, r6
   87d80:	e68d      	b.n	87a9e <__aeabi_dmul+0xde>
   87d82:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   87d86:	ea94 0f0c 	teq	r4, ip
   87d8a:	bf08      	it	eq
   87d8c:	ea95 0f0c 	teqeq	r5, ip
   87d90:	f43f af3b 	beq.w	87c0a <__aeabi_dmul+0x24a>
   87d94:	ea94 0f0c 	teq	r4, ip
   87d98:	d10a      	bne.n	87db0 <__aeabi_ddiv+0x19c>
   87d9a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   87d9e:	f47f af34 	bne.w	87c0a <__aeabi_dmul+0x24a>
   87da2:	ea95 0f0c 	teq	r5, ip
   87da6:	f47f af25 	bne.w	87bf4 <__aeabi_dmul+0x234>
   87daa:	4610      	mov	r0, r2
   87dac:	4619      	mov	r1, r3
   87dae:	e72c      	b.n	87c0a <__aeabi_dmul+0x24a>
   87db0:	ea95 0f0c 	teq	r5, ip
   87db4:	d106      	bne.n	87dc4 <__aeabi_ddiv+0x1b0>
   87db6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   87dba:	f43f aefd 	beq.w	87bb8 <__aeabi_dmul+0x1f8>
   87dbe:	4610      	mov	r0, r2
   87dc0:	4619      	mov	r1, r3
   87dc2:	e722      	b.n	87c0a <__aeabi_dmul+0x24a>
   87dc4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   87dc8:	bf18      	it	ne
   87dca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   87dce:	f47f aec5 	bne.w	87b5c <__aeabi_dmul+0x19c>
   87dd2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   87dd6:	f47f af0d 	bne.w	87bf4 <__aeabi_dmul+0x234>
   87dda:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   87dde:	f47f aeeb 	bne.w	87bb8 <__aeabi_dmul+0x1f8>
   87de2:	e712      	b.n	87c0a <__aeabi_dmul+0x24a>

00087de4 <__gedf2>:
   87de4:	f04f 3cff 	mov.w	ip, #4294967295
   87de8:	e006      	b.n	87df8 <__cmpdf2+0x4>
   87dea:	bf00      	nop

00087dec <__ledf2>:
   87dec:	f04f 0c01 	mov.w	ip, #1
   87df0:	e002      	b.n	87df8 <__cmpdf2+0x4>
   87df2:	bf00      	nop

00087df4 <__cmpdf2>:
   87df4:	f04f 0c01 	mov.w	ip, #1
   87df8:	f84d cd04 	str.w	ip, [sp, #-4]!
   87dfc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87e00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87e04:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87e08:	bf18      	it	ne
   87e0a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   87e0e:	d01b      	beq.n	87e48 <__cmpdf2+0x54>
   87e10:	b001      	add	sp, #4
   87e12:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   87e16:	bf0c      	ite	eq
   87e18:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   87e1c:	ea91 0f03 	teqne	r1, r3
   87e20:	bf02      	ittt	eq
   87e22:	ea90 0f02 	teqeq	r0, r2
   87e26:	2000      	moveq	r0, #0
   87e28:	4770      	bxeq	lr
   87e2a:	f110 0f00 	cmn.w	r0, #0
   87e2e:	ea91 0f03 	teq	r1, r3
   87e32:	bf58      	it	pl
   87e34:	4299      	cmppl	r1, r3
   87e36:	bf08      	it	eq
   87e38:	4290      	cmpeq	r0, r2
   87e3a:	bf2c      	ite	cs
   87e3c:	17d8      	asrcs	r0, r3, #31
   87e3e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   87e42:	f040 0001 	orr.w	r0, r0, #1
   87e46:	4770      	bx	lr
   87e48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87e4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87e50:	d102      	bne.n	87e58 <__cmpdf2+0x64>
   87e52:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   87e56:	d107      	bne.n	87e68 <__cmpdf2+0x74>
   87e58:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87e5c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87e60:	d1d6      	bne.n	87e10 <__cmpdf2+0x1c>
   87e62:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   87e66:	d0d3      	beq.n	87e10 <__cmpdf2+0x1c>
   87e68:	f85d 0b04 	ldr.w	r0, [sp], #4
   87e6c:	4770      	bx	lr
   87e6e:	bf00      	nop

00087e70 <__aeabi_cdrcmple>:
   87e70:	4684      	mov	ip, r0
   87e72:	4610      	mov	r0, r2
   87e74:	4662      	mov	r2, ip
   87e76:	468c      	mov	ip, r1
   87e78:	4619      	mov	r1, r3
   87e7a:	4663      	mov	r3, ip
   87e7c:	e000      	b.n	87e80 <__aeabi_cdcmpeq>
   87e7e:	bf00      	nop

00087e80 <__aeabi_cdcmpeq>:
   87e80:	b501      	push	{r0, lr}
   87e82:	f7ff ffb7 	bl	87df4 <__cmpdf2>
   87e86:	2800      	cmp	r0, #0
   87e88:	bf48      	it	mi
   87e8a:	f110 0f00 	cmnmi.w	r0, #0
   87e8e:	bd01      	pop	{r0, pc}

00087e90 <__aeabi_dcmpeq>:
   87e90:	f84d ed08 	str.w	lr, [sp, #-8]!
   87e94:	f7ff fff4 	bl	87e80 <__aeabi_cdcmpeq>
   87e98:	bf0c      	ite	eq
   87e9a:	2001      	moveq	r0, #1
   87e9c:	2000      	movne	r0, #0
   87e9e:	f85d fb08 	ldr.w	pc, [sp], #8
   87ea2:	bf00      	nop

00087ea4 <__aeabi_dcmplt>:
   87ea4:	f84d ed08 	str.w	lr, [sp, #-8]!
   87ea8:	f7ff ffea 	bl	87e80 <__aeabi_cdcmpeq>
   87eac:	bf34      	ite	cc
   87eae:	2001      	movcc	r0, #1
   87eb0:	2000      	movcs	r0, #0
   87eb2:	f85d fb08 	ldr.w	pc, [sp], #8
   87eb6:	bf00      	nop

00087eb8 <__aeabi_dcmple>:
   87eb8:	f84d ed08 	str.w	lr, [sp, #-8]!
   87ebc:	f7ff ffe0 	bl	87e80 <__aeabi_cdcmpeq>
   87ec0:	bf94      	ite	ls
   87ec2:	2001      	movls	r0, #1
   87ec4:	2000      	movhi	r0, #0
   87ec6:	f85d fb08 	ldr.w	pc, [sp], #8
   87eca:	bf00      	nop

00087ecc <__aeabi_dcmpge>:
   87ecc:	f84d ed08 	str.w	lr, [sp, #-8]!
   87ed0:	f7ff ffce 	bl	87e70 <__aeabi_cdrcmple>
   87ed4:	bf94      	ite	ls
   87ed6:	2001      	movls	r0, #1
   87ed8:	2000      	movhi	r0, #0
   87eda:	f85d fb08 	ldr.w	pc, [sp], #8
   87ede:	bf00      	nop

00087ee0 <__aeabi_dcmpgt>:
   87ee0:	f84d ed08 	str.w	lr, [sp, #-8]!
   87ee4:	f7ff ffc4 	bl	87e70 <__aeabi_cdrcmple>
   87ee8:	bf34      	ite	cc
   87eea:	2001      	movcc	r0, #1
   87eec:	2000      	movcs	r0, #0
   87eee:	f85d fb08 	ldr.w	pc, [sp], #8
   87ef2:	bf00      	nop

00087ef4 <__aeabi_dcmpun>:
   87ef4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87ef8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87efc:	d102      	bne.n	87f04 <__aeabi_dcmpun+0x10>
   87efe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   87f02:	d10a      	bne.n	87f1a <__aeabi_dcmpun+0x26>
   87f04:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87f08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87f0c:	d102      	bne.n	87f14 <__aeabi_dcmpun+0x20>
   87f0e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   87f12:	d102      	bne.n	87f1a <__aeabi_dcmpun+0x26>
   87f14:	f04f 0000 	mov.w	r0, #0
   87f18:	4770      	bx	lr
   87f1a:	f04f 0001 	mov.w	r0, #1
   87f1e:	4770      	bx	lr

00087f20 <__aeabi_d2iz>:
   87f20:	ea4f 0241 	mov.w	r2, r1, lsl #1
   87f24:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   87f28:	d215      	bcs.n	87f56 <__aeabi_d2iz+0x36>
   87f2a:	d511      	bpl.n	87f50 <__aeabi_d2iz+0x30>
   87f2c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   87f30:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   87f34:	d912      	bls.n	87f5c <__aeabi_d2iz+0x3c>
   87f36:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   87f3a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   87f3e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   87f42:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   87f46:	fa23 f002 	lsr.w	r0, r3, r2
   87f4a:	bf18      	it	ne
   87f4c:	4240      	negne	r0, r0
   87f4e:	4770      	bx	lr
   87f50:	f04f 0000 	mov.w	r0, #0
   87f54:	4770      	bx	lr
   87f56:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   87f5a:	d105      	bne.n	87f68 <__aeabi_d2iz+0x48>
   87f5c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   87f60:	bf08      	it	eq
   87f62:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   87f66:	4770      	bx	lr
   87f68:	f04f 0000 	mov.w	r0, #0
   87f6c:	4770      	bx	lr
   87f6e:	bf00      	nop

00087f70 <__aeabi_uldivmod>:
   87f70:	b953      	cbnz	r3, 87f88 <__aeabi_uldivmod+0x18>
   87f72:	b94a      	cbnz	r2, 87f88 <__aeabi_uldivmod+0x18>
   87f74:	2900      	cmp	r1, #0
   87f76:	bf08      	it	eq
   87f78:	2800      	cmpeq	r0, #0
   87f7a:	bf1c      	itt	ne
   87f7c:	f04f 31ff 	movne.w	r1, #4294967295
   87f80:	f04f 30ff 	movne.w	r0, #4294967295
   87f84:	f000 b97a 	b.w	8827c <__aeabi_idiv0>
   87f88:	f1ad 0c08 	sub.w	ip, sp, #8
   87f8c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   87f90:	f000 f806 	bl	87fa0 <__udivmoddi4>
   87f94:	f8dd e004 	ldr.w	lr, [sp, #4]
   87f98:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87f9c:	b004      	add	sp, #16
   87f9e:	4770      	bx	lr

00087fa0 <__udivmoddi4>:
   87fa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   87fa4:	468c      	mov	ip, r1
   87fa6:	460e      	mov	r6, r1
   87fa8:	4604      	mov	r4, r0
   87faa:	9d08      	ldr	r5, [sp, #32]
   87fac:	2b00      	cmp	r3, #0
   87fae:	d150      	bne.n	88052 <__udivmoddi4+0xb2>
   87fb0:	428a      	cmp	r2, r1
   87fb2:	4617      	mov	r7, r2
   87fb4:	d96c      	bls.n	88090 <__udivmoddi4+0xf0>
   87fb6:	fab2 fe82 	clz	lr, r2
   87fba:	f1be 0f00 	cmp.w	lr, #0
   87fbe:	d00b      	beq.n	87fd8 <__udivmoddi4+0x38>
   87fc0:	f1ce 0c20 	rsb	ip, lr, #32
   87fc4:	fa01 f60e 	lsl.w	r6, r1, lr
   87fc8:	fa20 fc0c 	lsr.w	ip, r0, ip
   87fcc:	fa02 f70e 	lsl.w	r7, r2, lr
   87fd0:	ea4c 0c06 	orr.w	ip, ip, r6
   87fd4:	fa00 f40e 	lsl.w	r4, r0, lr
   87fd8:	0c3a      	lsrs	r2, r7, #16
   87fda:	fbbc f9f2 	udiv	r9, ip, r2
   87fde:	b2bb      	uxth	r3, r7
   87fe0:	fb02 cc19 	mls	ip, r2, r9, ip
   87fe4:	fb09 fa03 	mul.w	sl, r9, r3
   87fe8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   87fec:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   87ff0:	45b2      	cmp	sl, r6
   87ff2:	d90a      	bls.n	8800a <__udivmoddi4+0x6a>
   87ff4:	19f6      	adds	r6, r6, r7
   87ff6:	f109 31ff 	add.w	r1, r9, #4294967295
   87ffa:	f080 8125 	bcs.w	88248 <__udivmoddi4+0x2a8>
   87ffe:	45b2      	cmp	sl, r6
   88000:	f240 8122 	bls.w	88248 <__udivmoddi4+0x2a8>
   88004:	f1a9 0902 	sub.w	r9, r9, #2
   88008:	443e      	add	r6, r7
   8800a:	eba6 060a 	sub.w	r6, r6, sl
   8800e:	fbb6 f0f2 	udiv	r0, r6, r2
   88012:	fb02 6610 	mls	r6, r2, r0, r6
   88016:	fb00 f303 	mul.w	r3, r0, r3
   8801a:	b2a4      	uxth	r4, r4
   8801c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   88020:	42a3      	cmp	r3, r4
   88022:	d909      	bls.n	88038 <__udivmoddi4+0x98>
   88024:	19e4      	adds	r4, r4, r7
   88026:	f100 32ff 	add.w	r2, r0, #4294967295
   8802a:	f080 810b 	bcs.w	88244 <__udivmoddi4+0x2a4>
   8802e:	42a3      	cmp	r3, r4
   88030:	f240 8108 	bls.w	88244 <__udivmoddi4+0x2a4>
   88034:	3802      	subs	r0, #2
   88036:	443c      	add	r4, r7
   88038:	2100      	movs	r1, #0
   8803a:	1ae4      	subs	r4, r4, r3
   8803c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   88040:	2d00      	cmp	r5, #0
   88042:	d062      	beq.n	8810a <__udivmoddi4+0x16a>
   88044:	2300      	movs	r3, #0
   88046:	fa24 f40e 	lsr.w	r4, r4, lr
   8804a:	602c      	str	r4, [r5, #0]
   8804c:	606b      	str	r3, [r5, #4]
   8804e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88052:	428b      	cmp	r3, r1
   88054:	d907      	bls.n	88066 <__udivmoddi4+0xc6>
   88056:	2d00      	cmp	r5, #0
   88058:	d055      	beq.n	88106 <__udivmoddi4+0x166>
   8805a:	2100      	movs	r1, #0
   8805c:	e885 0041 	stmia.w	r5, {r0, r6}
   88060:	4608      	mov	r0, r1
   88062:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88066:	fab3 f183 	clz	r1, r3
   8806a:	2900      	cmp	r1, #0
   8806c:	f040 808f 	bne.w	8818e <__udivmoddi4+0x1ee>
   88070:	42b3      	cmp	r3, r6
   88072:	d302      	bcc.n	8807a <__udivmoddi4+0xda>
   88074:	4282      	cmp	r2, r0
   88076:	f200 80fc 	bhi.w	88272 <__udivmoddi4+0x2d2>
   8807a:	1a84      	subs	r4, r0, r2
   8807c:	eb66 0603 	sbc.w	r6, r6, r3
   88080:	2001      	movs	r0, #1
   88082:	46b4      	mov	ip, r6
   88084:	2d00      	cmp	r5, #0
   88086:	d040      	beq.n	8810a <__udivmoddi4+0x16a>
   88088:	e885 1010 	stmia.w	r5, {r4, ip}
   8808c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88090:	b912      	cbnz	r2, 88098 <__udivmoddi4+0xf8>
   88092:	2701      	movs	r7, #1
   88094:	fbb7 f7f2 	udiv	r7, r7, r2
   88098:	fab7 fe87 	clz	lr, r7
   8809c:	f1be 0f00 	cmp.w	lr, #0
   880a0:	d135      	bne.n	8810e <__udivmoddi4+0x16e>
   880a2:	2101      	movs	r1, #1
   880a4:	1bf6      	subs	r6, r6, r7
   880a6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   880aa:	fa1f f887 	uxth.w	r8, r7
   880ae:	fbb6 f2fc 	udiv	r2, r6, ip
   880b2:	fb0c 6612 	mls	r6, ip, r2, r6
   880b6:	fb08 f002 	mul.w	r0, r8, r2
   880ba:	0c23      	lsrs	r3, r4, #16
   880bc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   880c0:	42b0      	cmp	r0, r6
   880c2:	d907      	bls.n	880d4 <__udivmoddi4+0x134>
   880c4:	19f6      	adds	r6, r6, r7
   880c6:	f102 33ff 	add.w	r3, r2, #4294967295
   880ca:	d202      	bcs.n	880d2 <__udivmoddi4+0x132>
   880cc:	42b0      	cmp	r0, r6
   880ce:	f200 80d2 	bhi.w	88276 <__udivmoddi4+0x2d6>
   880d2:	461a      	mov	r2, r3
   880d4:	1a36      	subs	r6, r6, r0
   880d6:	fbb6 f0fc 	udiv	r0, r6, ip
   880da:	fb0c 6610 	mls	r6, ip, r0, r6
   880de:	fb08 f800 	mul.w	r8, r8, r0
   880e2:	b2a3      	uxth	r3, r4
   880e4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   880e8:	45a0      	cmp	r8, r4
   880ea:	d907      	bls.n	880fc <__udivmoddi4+0x15c>
   880ec:	19e4      	adds	r4, r4, r7
   880ee:	f100 33ff 	add.w	r3, r0, #4294967295
   880f2:	d202      	bcs.n	880fa <__udivmoddi4+0x15a>
   880f4:	45a0      	cmp	r8, r4
   880f6:	f200 80b9 	bhi.w	8826c <__udivmoddi4+0x2cc>
   880fa:	4618      	mov	r0, r3
   880fc:	eba4 0408 	sub.w	r4, r4, r8
   88100:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   88104:	e79c      	b.n	88040 <__udivmoddi4+0xa0>
   88106:	4629      	mov	r1, r5
   88108:	4628      	mov	r0, r5
   8810a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8810e:	fa07 f70e 	lsl.w	r7, r7, lr
   88112:	f1ce 0320 	rsb	r3, lr, #32
   88116:	fa26 f203 	lsr.w	r2, r6, r3
   8811a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8811e:	fbb2 f1fc 	udiv	r1, r2, ip
   88122:	fa1f f887 	uxth.w	r8, r7
   88126:	fb0c 2211 	mls	r2, ip, r1, r2
   8812a:	fa06 f60e 	lsl.w	r6, r6, lr
   8812e:	fa20 f303 	lsr.w	r3, r0, r3
   88132:	fb01 f908 	mul.w	r9, r1, r8
   88136:	4333      	orrs	r3, r6
   88138:	0c1e      	lsrs	r6, r3, #16
   8813a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8813e:	45b1      	cmp	r9, r6
   88140:	fa00 f40e 	lsl.w	r4, r0, lr
   88144:	d909      	bls.n	8815a <__udivmoddi4+0x1ba>
   88146:	19f6      	adds	r6, r6, r7
   88148:	f101 32ff 	add.w	r2, r1, #4294967295
   8814c:	f080 808c 	bcs.w	88268 <__udivmoddi4+0x2c8>
   88150:	45b1      	cmp	r9, r6
   88152:	f240 8089 	bls.w	88268 <__udivmoddi4+0x2c8>
   88156:	3902      	subs	r1, #2
   88158:	443e      	add	r6, r7
   8815a:	eba6 0609 	sub.w	r6, r6, r9
   8815e:	fbb6 f0fc 	udiv	r0, r6, ip
   88162:	fb0c 6210 	mls	r2, ip, r0, r6
   88166:	fb00 f908 	mul.w	r9, r0, r8
   8816a:	b29e      	uxth	r6, r3
   8816c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   88170:	45b1      	cmp	r9, r6
   88172:	d907      	bls.n	88184 <__udivmoddi4+0x1e4>
   88174:	19f6      	adds	r6, r6, r7
   88176:	f100 33ff 	add.w	r3, r0, #4294967295
   8817a:	d271      	bcs.n	88260 <__udivmoddi4+0x2c0>
   8817c:	45b1      	cmp	r9, r6
   8817e:	d96f      	bls.n	88260 <__udivmoddi4+0x2c0>
   88180:	3802      	subs	r0, #2
   88182:	443e      	add	r6, r7
   88184:	eba6 0609 	sub.w	r6, r6, r9
   88188:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   8818c:	e78f      	b.n	880ae <__udivmoddi4+0x10e>
   8818e:	f1c1 0720 	rsb	r7, r1, #32
   88192:	fa22 f807 	lsr.w	r8, r2, r7
   88196:	408b      	lsls	r3, r1
   88198:	ea48 0303 	orr.w	r3, r8, r3
   8819c:	fa26 f407 	lsr.w	r4, r6, r7
   881a0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   881a4:	fbb4 f9fe 	udiv	r9, r4, lr
   881a8:	fa1f fc83 	uxth.w	ip, r3
   881ac:	fb0e 4419 	mls	r4, lr, r9, r4
   881b0:	408e      	lsls	r6, r1
   881b2:	fa20 f807 	lsr.w	r8, r0, r7
   881b6:	fb09 fa0c 	mul.w	sl, r9, ip
   881ba:	ea48 0806 	orr.w	r8, r8, r6
   881be:	ea4f 4618 	mov.w	r6, r8, lsr #16
   881c2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   881c6:	45a2      	cmp	sl, r4
   881c8:	fa02 f201 	lsl.w	r2, r2, r1
   881cc:	fa00 f601 	lsl.w	r6, r0, r1
   881d0:	d908      	bls.n	881e4 <__udivmoddi4+0x244>
   881d2:	18e4      	adds	r4, r4, r3
   881d4:	f109 30ff 	add.w	r0, r9, #4294967295
   881d8:	d244      	bcs.n	88264 <__udivmoddi4+0x2c4>
   881da:	45a2      	cmp	sl, r4
   881dc:	d942      	bls.n	88264 <__udivmoddi4+0x2c4>
   881de:	f1a9 0902 	sub.w	r9, r9, #2
   881e2:	441c      	add	r4, r3
   881e4:	eba4 040a 	sub.w	r4, r4, sl
   881e8:	fbb4 f0fe 	udiv	r0, r4, lr
   881ec:	fb0e 4410 	mls	r4, lr, r0, r4
   881f0:	fb00 fc0c 	mul.w	ip, r0, ip
   881f4:	fa1f f888 	uxth.w	r8, r8
   881f8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   881fc:	45a4      	cmp	ip, r4
   881fe:	d907      	bls.n	88210 <__udivmoddi4+0x270>
   88200:	18e4      	adds	r4, r4, r3
   88202:	f100 3eff 	add.w	lr, r0, #4294967295
   88206:	d229      	bcs.n	8825c <__udivmoddi4+0x2bc>
   88208:	45a4      	cmp	ip, r4
   8820a:	d927      	bls.n	8825c <__udivmoddi4+0x2bc>
   8820c:	3802      	subs	r0, #2
   8820e:	441c      	add	r4, r3
   88210:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   88214:	fba0 8902 	umull	r8, r9, r0, r2
   88218:	eba4 0c0c 	sub.w	ip, r4, ip
   8821c:	45cc      	cmp	ip, r9
   8821e:	46c2      	mov	sl, r8
   88220:	46ce      	mov	lr, r9
   88222:	d315      	bcc.n	88250 <__udivmoddi4+0x2b0>
   88224:	d012      	beq.n	8824c <__udivmoddi4+0x2ac>
   88226:	b155      	cbz	r5, 8823e <__udivmoddi4+0x29e>
   88228:	ebb6 030a 	subs.w	r3, r6, sl
   8822c:	eb6c 060e 	sbc.w	r6, ip, lr
   88230:	fa06 f707 	lsl.w	r7, r6, r7
   88234:	40cb      	lsrs	r3, r1
   88236:	431f      	orrs	r7, r3
   88238:	40ce      	lsrs	r6, r1
   8823a:	602f      	str	r7, [r5, #0]
   8823c:	606e      	str	r6, [r5, #4]
   8823e:	2100      	movs	r1, #0
   88240:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88244:	4610      	mov	r0, r2
   88246:	e6f7      	b.n	88038 <__udivmoddi4+0x98>
   88248:	4689      	mov	r9, r1
   8824a:	e6de      	b.n	8800a <__udivmoddi4+0x6a>
   8824c:	4546      	cmp	r6, r8
   8824e:	d2ea      	bcs.n	88226 <__udivmoddi4+0x286>
   88250:	ebb8 0a02 	subs.w	sl, r8, r2
   88254:	eb69 0e03 	sbc.w	lr, r9, r3
   88258:	3801      	subs	r0, #1
   8825a:	e7e4      	b.n	88226 <__udivmoddi4+0x286>
   8825c:	4670      	mov	r0, lr
   8825e:	e7d7      	b.n	88210 <__udivmoddi4+0x270>
   88260:	4618      	mov	r0, r3
   88262:	e78f      	b.n	88184 <__udivmoddi4+0x1e4>
   88264:	4681      	mov	r9, r0
   88266:	e7bd      	b.n	881e4 <__udivmoddi4+0x244>
   88268:	4611      	mov	r1, r2
   8826a:	e776      	b.n	8815a <__udivmoddi4+0x1ba>
   8826c:	3802      	subs	r0, #2
   8826e:	443c      	add	r4, r7
   88270:	e744      	b.n	880fc <__udivmoddi4+0x15c>
   88272:	4608      	mov	r0, r1
   88274:	e706      	b.n	88084 <__udivmoddi4+0xe4>
   88276:	3a02      	subs	r2, #2
   88278:	443e      	add	r6, r7
   8827a:	e72b      	b.n	880d4 <__udivmoddi4+0x134>

0008827c <__aeabi_idiv0>:
   8827c:	4770      	bx	lr
   8827e:	bf00      	nop
   88280:	090a0a0d 	.word	0x090a0a0d
   88284:	5f5f5f2a 	.word	0x5f5f5f2a
   88288:	5f5f5f5f 	.word	0x5f5f5f5f
   8828c:	5f5f5f5f 	.word	0x5f5f5f5f
   88290:	205f5f5f 	.word	0x205f5f5f
   88294:	2e555043 	.word	0x2e555043
   88298:	2d584341 	.word	0x2d584341
   8829c:	41535441 	.word	0x41535441
   882a0:	3455334d 	.word	0x3455334d
   882a4:	412d4143 	.word	0x412d4143
   882a8:	5f5f2055 	.word	0x5f5f2055
   882ac:	5f5f5f5f 	.word	0x5f5f5f5f
   882b0:	5f5f5f5f 	.word	0x5f5f5f5f
   882b4:	5f5f5f5f 	.word	0x5f5f5f5f
   882b8:	0a0a0d2a 	.word	0x0a0a0d2a
   882bc:	00000000 	.word	0x00000000
   882c0:	2e555043 	.word	0x2e555043
   882c4:	20584341 	.word	0x20584341
   882c8:	53544120 	.word	0x53544120
   882cc:	55334d41 	.word	0x55334d41
   882d0:	00004334 	.word	0x00004334
   882d4:	2e777777 	.word	0x2e777777
   882d8:	2d322d61 	.word	0x2d322d61
   882dc:	72662e73 	.word	0x72662e73
   882e0:	00000000 	.word	0x00000000
   882e4:	554e454d 	.word	0x554e454d
   882e8:	57454e5f 	.word	0x57454e5f
   882ec:	0000000d 	.word	0x0000000d
   882f0:	6d726546 	.word	0x6d726546
   882f4:	72757465 	.word	0x72757465
   882f8:	41532065 	.word	0x41532065
   882fc:	00000053 	.word	0x00000053
   88300:	6d726546 	.word	0x6d726546
   88304:	72757465 	.word	0x72757465
   88308:	6f502065 	.word	0x6f502065
   8830c:	20657472 	.word	0x20657472
   88310:	00000031 	.word	0x00000031
   88314:	6d726546 	.word	0x6d726546
   88318:	72757465 	.word	0x72757465
   8831c:	6f502065 	.word	0x6f502065
   88320:	20657472 	.word	0x20657472
   88324:	00000032 	.word	0x00000032
   88328:	00000001 	.word	0x00000001
   8832c:	00000002 	.word	0x00000002
   88330:	00000004 	.word	0x00000004
   88334:	00000008 	.word	0x00000008
   88338:	00000010 	.word	0x00000010
   8833c:	00000020 	.word	0x00000020
   88340:	00000040 	.word	0x00000040
   88344:	00000080 	.word	0x00000080
   88348:	00000100 	.word	0x00000100
   8834c:	00000200 	.word	0x00000200
   88350:	00000400 	.word	0x00000400
   88354:	000186a0 	.word	0x000186a0
   88358:	000186a0 	.word	0x000186a0
   8835c:	00b71b00 	.word	0x00b71b00
   88360:	65540a0d 	.word	0x65540a0d
   88364:	73207473 	.word	0x73207473
   88368:	74726174 	.word	0x74726174
   8836c:	2e2e6465 	.word	0x2e2e6465
   88370:	000a0d2e 	.word	0x000a0d2e
   88374:	48500a0d 	.word	0x48500a0d
   88378:	2d64253a 	.word	0x2d64253a
   8837c:	0d64252d 	.word	0x0d64252d
   88380:	0000000a 	.word	0x0000000a
   88384:	454e4550 	.word	0x454e4550
   88388:	56554f20 	.word	0x56554f20
   8838c:	00545245 	.word	0x00545245
   88390:	00203a09 	.word	0x00203a09
   88394:	00004e4f 	.word	0x00004e4f
   88398:	0046464f 	.word	0x0046464f
   8839c:	454e4550 	.word	0x454e4550
   883a0:	52454620 	.word	0x52454620
   883a4:	0000454d 	.word	0x0000454d
   883a8:	00534c49 	.word	0x00534c49
   883ac:	203a0909 	.word	0x203a0909
   883b0:	00000000 	.word	0x00000000
   883b4:	00005653 	.word	0x00005653
   883b8:	41444152 	.word	0x41444152
   883bc:	00000052 	.word	0x00000052
   883c0:	00555644 	.word	0x00555644
   883c4:	4d455250 	.word	0x4d455250
   883c8:	45524549 	.word	0x45524549
   883cc:	544e4520 	.word	0x544e4520
   883d0:	00454552 	.word	0x00454552
   883d4:	20555644 	.word	0x20555644
   883d8:	454e4547 	.word	0x454e4547
   883dc:	004c4152 	.word	0x004c4152
   883e0:	52544e45 	.word	0x52544e45
   883e4:	4c204545 	.word	0x4c204545
   883e8:	45524249 	.word	0x45524249
   883ec:	00000000 	.word	0x00000000
   883f0:	52544e45 	.word	0x52544e45
   883f4:	4f204545 	.word	0x4f204545
   883f8:	4f495450 	.word	0x4f495450
   883fc:	0000004e 	.word	0x0000004e
   88400:	65540a0d 	.word	0x65540a0d
   88404:	74207473 	.word	0x74207473
   88408:	696d7265 	.word	0x696d7265
   8840c:	6574616e 	.word	0x6574616e
   88410:	2e2e2e64 	.word	0x2e2e2e64
   88414:	00000a0d 	.word	0x00000a0d

00088418 <commands>:
   88418:	0000624f 00081489 0000ae76 000813e5     Ob......v.......
	...
   88430:	624e0a0d 74736554 6425203a 00000a0d     ..NbTest: %d....
   88440:	75420a0d 72657a7a 206e6f20 20726f66     ..Buzzer on for 
   88450:	00000000 6d206425 2e2e2e73 00000a0d     ....%d ms.......
   88460:	75420a0d 72657a7a 66666f20 0d2e2e2e     ..Buzzer off....
   88470:	0000000a 000a0d20 25207325 73252064     .... ...%s %d %s
   88480:	64342520 00000000                        %4d....

00088488 <nbDaysInMonth>:
   88488:	1e1f1c1f 1f1f1e1f 1f1e1f1e 756e614a     ............Janu
   88498:	00797261 72626546 79726175 00000000     ary.February....
   884a8:	6372614d 00000068 69727041 0000006c     March...April...
   884b8:	0079614d 656e754a 00000000 796c754a     May.June....July
   884c8:	00000000 75677541 00007473 74706553     ....August..Sept
   884d8:	65626d65 00000072 6f74634f 00726562     ember...October.
   884e8:	65766f4e 7265626d 00000000 65636544     November....Dece
   884f8:	7265626d 00000000 646e7553 00007961     mber....Sunday..
   88508:	646e6f4d 00007961 73657554 00796164     Monday..Tuesday.
   88518:	6e646557 61647365 00000079 72756854     Wednesday...Thur
   88528:	79616473 00000000 64697246 00007961     sday....Friday..
   88538:	75746153 79616472 00000000              Saturday....

00088544 <line2addr>:
   88544:	54144000 3230250d 30253a64 253a6432     .@.T.%02d:%02d:%
   88554:	00643230 64323025 3230253a 30253a64     02d.%02d:%02d:%0
   88564:	00006432 64323025 3230252f 30252f64     2d..%02d/%02d/%0
   88574:	00006434 003e0a0d 00445b1b 00435b1b     4d....>..[D..[C.
   88584:	3e2f0a0d 00000000 6b6e7509 6e776f6e     ../>.....unknown
   88594:	646d6320 3025203a 0a0d5834 00000000      cmd: %04X......
   885a4:	2a090a0d 2a2a2a2a 73616320 535f2065     ...***** case _S
   885b4:	4c4c4548 48424b5f 203a5449 20444142     HELL_KBHIT: BAD 
   885c4:	65736163 2a2a2021 2a2a2a2a 00000a0d     case! ******....
   885d4:	20200a0d 43534520 5145535f 0000203a     ..   ESC_SEQ: ..
   885e4:	30253c20 0d3e5834 0000000a 4b325b1b      <%04X>......[2K
   885f4:	0000000d 3b315b1b 00004335              .....[1;5C..

00088600 <heartBeatRhythm>:
   88600:	00000028 000000fe 00000028 00000548     (.......(...H...
   88610:	00000000                                ....

00088614 <hexDigits>:
   88614:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   88624:	00000000                                ....

00088628 <separators>:
   88628:	3a3b2e20 0d095c2f 0000000a 4a325b1b      .;:/\.......[2J
   88638:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   88648:	3d3d3d3d 43203d3d 20504948 4e454449     ====== CHIP IDEN
   88658:	49464954 49205245 534f464e 3d3d3d20     TIFIER INFOS ===
   88668:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88678:	52455609 4e4f4953 6325203a 00000a0d     .VERSION: %c....
   88688:	45202009 434f5250 0000203a 564e2009     .  EPROC: ... NV
   88698:	5a495350 0000203a 50564e09 325a4953     PSIZ: ...NVPSIZ2
   886a8:	0000203a 41525309 5a49534d 0000203a     : ...SRAMSIZ: ..
   886b8:	20202009 48435241 0000203a 2d2d2d20     .   ARCH: .. ---
   886c8:	00000020 564e2009 50595450 0000203a      .... NVPTYP: ..
   886d8:	20202009 44495845 3025203a 0a0d5838     .   EXID: %08X..
   886e8:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   886f8:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88708:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88718:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88728:	7379530d 206d6574 6c6c6977 73657220     .System will res
   88738:	74726174 206e6920 73206925 6e6f6365     tart in %i secon
   88748:	2e2e2e64 00000000 2f2e3a20 00000a0d     d....... :./....
   88758:	4b325b1b 00000000 646d6320 61747320     .[2K.... cmd sta
   88768:	3a207472 00000020                       rt : ...

00088770 <arch>:
   88770:	00000019 00088a3c 00088a48 00000029     ....<...H...)...
   88780:	00088a5c 00088a6c 00000034 00088a80     \...l...4.......
   88790:	00088a88 00000037 00088a98 00088aa0     ....7...........
   887a0:	00000039 00088aac 00088ab4 0000003b     9...........;...
   887b0:	00088ac0 00088ac8 00000040 00088ad8     ........@.......
   887c0:	00088ae0 00000042 00088af0 00088af8     ....B...........
   887d0:	00000055 00088b08 00088b10 00000060     U...........`...
   887e0:	00088b20 00088b2c 00000061 00088b40      ...,...a...@...
   887f0:	00088b50 00000063 00088b64 00088b6c     P...c...d...l...
   88800:	00000070 00088b7c 00088b88 00000071     p...|.......q...
   88810:	00088b9c 00088bac 00000072 00088bc0     ........r.......
   88820:	00088bd0 00000073 00088be4 00088bf0     ....s...........
   88830:	00000075 00088c04 00088c10 00000076     u...........v...
   88840:	00088c24 00088c34 00000080 00088c48     $...4.......H...
   88850:	00088c50 00000081 00088c74 00088c7c     P.......t...|...
   88860:	00000083 00088ca0 00088cb0 00000084     ................
   88870:	00088cdc 00088cec 00000085 00088d18     ................
   88880:	00088d28 00000086 00088d54 00088d64     (.......T...d...
   88890:	00000088 00088d94 00088da4 00000089     ................
   888a0:	00088dcc 00088ddc 0000008a 00088e04     ................
   888b0:	00088e14 00000092 00088e40 00088e48     ........@...H...
   888c0:	00000093 00088e58 00088e60 00000094     ....X...`.......
   888d0:	00088e80 00088e88 00000095 00088ea8     ................
   888e0:	00088eb0 00000099 00088ed4 00088ee0     ................
   888f0:	0000009a 00088f04 00088f10 000000a5     ................
   88900:	00088f34 00088f34 000000f0 00088f3c     4...4.......<...
   88910:	00088f44 00000000 00088f54 00000000     D.......T.......

00088920 <cmdEntries>:
   88920:	0000624f 00082e95 00006cab 00082ec5     Ob.......l......
   88930:	00003bed 00082eb1 0000aaf6 00082e15     .;..............
   88940:	0000b326 00082e55 0000902b 000830c1     &...U...+....0..
   88950:	0000b344 000830c1 0000ebe8 000830f5     D....0.......0..
   88960:	000010e1 00082fdd 00000000 00000000     ...../..........
   88970:	204d4f52 202d2d2d 004d4f52 4c4d4f52     ROM --- ROM.ROML
   88980:	20535345 202d2d2d 6c4d4f52 20737365     ESS --- ROMless 
   88990:	6f20726f 68632d6e 46207069 6873616c     or on-chip Flash
   889a0:	00000000 53414c46 2d2d2048 6d45202d     ....FLASH --- Em
   889b0:	64646562 46206465 6873616c 6d654d20     bedded Flash Mem
   889c0:	0079726f 5f4d4f52 53414c46 2d2d2048     ory.ROM_FLASH --
   889d0:	4f52202d 6e61204d 6d452064 64646562     - ROM and Embedd
   889e0:	46206465 6873616c 6d654d20 2079726f     ed Flash Memory 
   889f0:	50564e5b 205a4953 52207369 73204d4f     [NVPSIZ is ROM s
   88a00:	20657a69 564e202f 5a495350 73692032     ize / NVPSIZ2 is
   88a10:	616c4620 73206873 5d657a69 00000000      Flash size]....
   88a20:	4d415253 2d2d2d20 41525320 6d65204d     SRAM --- SRAM em
   88a30:	74616c75 20676e69 004d4f52 31395441     ulating ROM.AT91
   88a40:	394d4153 00007878 31395441 394d4153     SAM9xx..AT91SAM9
   88a50:	53207878 65697265 00000073 31395441     xx Series...AT91
   88a60:	394d4153 78784558 00000000 31395441     SAM9XExx....AT91
   88a70:	394d4153 78784558 72655320 00736569     SAM9XExx Series.
   88a80:	31395441 00343378 31395441 20343378     AT91x34.AT91x34 
   88a90:	69726553 00007365 37504143 00000000     Series..CAP7....
   88aa0:	37504143 72655320 00736569 39504143     CAP7 Series.CAP9
   88ab0:	00000000 39504143 72655320 00736569     ....CAP9 Series.
   88ac0:	31504143 00000031 31504143 65532031     CAP11...CAP11 Se
   88ad0:	73656972 00000000 31395441 00303478     ries....AT91x40.
   88ae0:	31395441 20303478 69726553 00007365     AT91x40 Series..
   88af0:	31395441 00323478 31395441 20323478     AT91x42.AT91x42 
   88b00:	69726553 00007365 31395441 00353578     Series..AT91x55.
   88b10:	31395441 20353578 69726553 00007365     AT91x55 Series..
   88b20:	31395441 374d4153 00787841 31395441     AT91SAM7Axx.AT91
   88b30:	374d4153 20787841 69726553 00007365     SAM7Axx Series..
   88b40:	31395441 374d4153 78785141 00000000     AT91SAM7AQxx....
   88b50:	31395441 374d4153 78785141 72655320     AT91SAM7AQxx Ser
   88b60:	00736569 31395441 00333678 31395441     ies.AT91x63.AT91
   88b70:	20333678 69726553 00007365 31395441     x63 Series..AT91
   88b80:	374d4153 00787853 31395441 374d4153     SAM7Sxx.AT91SAM7
   88b90:	20787853 69726553 00007365 31395441     Sxx Series..AT91
   88ba0:	374d4153 78784358 00000000 31395441     SAM7XCxx....AT91
   88bb0:	374d4153 78784358 72655320 00736569     SAM7XCxx Series.
   88bc0:	31395441 374d4153 78784553 00000000     AT91SAM7SExx....
   88bd0:	31395441 374d4153 78784553 72655320     AT91SAM7SExx Ser
   88be0:	00736569 31395441 374d4153 0078784c     ies.AT91SAM7Lxx.
   88bf0:	31395441 374d4153 2078784c 69726553     AT91SAM7Lxx Seri
   88c00:	00007365 31395441 374d4153 00787858     es..AT91SAM7Xxx.
   88c10:	31395441 374d4153 20787858 69726553     AT91SAM7Xxx Seri
   88c20:	00007365 31395441 374d4153 78784c53     es..AT91SAM7SLxx
   88c30:	00000000 31395441 374d4153 78784c53     ....AT91SAM7SLxx
   88c40:	72655320 00736569 334d4153 00437855      Series.SAM3UxC.
   88c50:	334d4153 20437855 69726553 28207365     SAM3UxC Series (
   88c60:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   88c70:	00000000 334d4153 00457855 334d4153     ....SAM3UxE.SAM3
   88c80:	20457855 69726553 28207365 2d343431     UxE Series (144-
   88c90:	206e6970 73726576 296e6f69 00000000     pin version)....
   88ca0:	334d4153 2f437841 334d4153 00437841     SAM3AxC/SAM3AxC.
   88cb0:	334d4153 2f437841 344d4153 20437841     SAM3AxC/SAM4AxC 
   88cc0:	69726553 28207365 2d303031 206e6970     Series (100-pin 
   88cd0:	73726576 296e6f69 00000000 334d4153     version)....SAM3
   88ce0:	2f437858 344d4153 00437858 334d4153     XxC/SAM4XxC.SAM3
   88cf0:	2f437858 344d4153 20437858 69726553     XxC/SAM4XxC Seri
   88d00:	28207365 2d303031 206e6970 73726576     es (100-pin vers
   88d10:	296e6f69 00000000 334d4153 2f457858     ion)....SAM3XxE/
   88d20:	344d4153 00457858 334d4153 2f457858     SAM4XxE.SAM3XxE/
   88d30:	344d4153 20457858 69726553 28207365     SAM4XxE Series (
   88d40:	2d343431 206e6970 73726576 296e6f69     144-pin version)
   88d50:	00000000 334d4153 2f477858 344d4153     ....SAM3XxG/SAM4
   88d60:	00477858 334d4153 2f477858 344d4153     XxG.SAM3XxG/SAM4
   88d70:	20477858 69726553 28207365 2f383032     XxG Series (208/
   88d80:	2d373132 206e6970 73726576 296e6f69     217-pin version)
   88d90:	00000000 334d4153 2f417853 344d4153     ....SAM3SxA/SAM4
   88da0:	00417853 334d4153 2f417853 344d4153     SxA.SAM3SxA/SAM4
   88db0:	20417853 69726553 28207365 702d3834     SxA Series (48-p
   88dc0:	76206e69 69737265 00296e6f 334d4153     in version).SAM3
   88dd0:	2f427853 344d4153 00427853 334d4153     SxB/SAM4SxB.SAM3
   88de0:	2f427853 344d4153 20427853 69726553     SxB/SAM4SxB Seri
   88df0:	28207365 702d3436 76206e69 69737265     es (64-pin versi
   88e00:	00296e6f 334d4153 2f437853 344d4153     on).SAM3SxC/SAM4
   88e10:	00437853 334d4153 2f437853 344d4153     SxC.SAM3SxC/SAM4
   88e20:	20437853 69726553 28207365 2d303031     SxC Series (100-
   88e30:	206e6970 73726576 296e6f69 00000000     pin version)....
   88e40:	31395441 00323978 31395441 20323978     AT91x92.AT91x92 
   88e50:	69726553 00007365 334d4153 0041784e     Series..SAM3NxA.
   88e60:	334d4153 2041784e 69726553 28207365     SAM3NxA Series (
   88e70:	702d3834 76206e69 69737265 00296e6f     48-pin version).
   88e80:	334d4153 0042784e 334d4153 2042784e     SAM3NxB.SAM3NxB 
   88e90:	69726553 28207365 702d3436 76206e69     Series (64-pin v
   88ea0:	69737265 00296e6f 334d4153 0043784e     ersion).SAM3NxC.
   88eb0:	334d4153 2043784e 69726553 28207365     SAM3NxC Series (
   88ec0:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   88ed0:	00000000 334d4153 42784453 00000000     ....SAM3SDxB....
   88ee0:	334d4153 42784453 72655320 20736569     SAM3SDxB Series 
   88ef0:	2d343628 206e6970 73726576 296e6f69     (64-pin version)
   88f00:	00000000 334d4153 43784453 00000000     ....SAM3SDxC....
   88f10:	334d4153 43784453 72655320 20736569     SAM3SDxC Series 
   88f20:	30303128 6e69702d 72657620 6e6f6973     (100-pin version
   88f30:	00000029 354d4153 00000041 35375441     )...SAM5A...AT75
   88f40:	00787843 35375441 20787843 69726553     Cxx.AT75Cxx Seri
   88f50:	00007365 41204f4e 21484352 00000000     es..NO ARCH!....
   88f60:	204b3834 65747962 00000073 62204b31     48K bytes...1K b
   88f70:	73657479 00000000 62204b32 73657479     ytes....2K bytes
   88f80:	00000000 62204b36 73657479 00000000     ....6K bytes....
   88f90:	204b3432 65747962 00000073 62204b34     24K bytes...4K b
   88fa0:	73657479 00000000 204b3038 65747962     ytes....80K byte
   88fb0:	00000073 4b303631 74796220 00007365     s...160K bytes..
   88fc0:	62204b38 73657479 00000000 204b3631     8K bytes....16K 
   88fd0:	65747962 00000073 204b3233 65747962     bytes...32K byte
   88fe0:	00000073 204b3436 65747962 00000073     s...64K bytes...
   88ff0:	4b383231 74796220 00007365 4b363532     128K bytes..256K
   89000:	74796220 00007365 204b3639 65747962      bytes..96K byte
   89010:	00000073 4b323135 74796220 00007365     s...512K bytes..
   89020:	454e4f4e 00000000 34323031 7962204b     NONE....1024K by
   89030:	00736574 38343032 7962204b 00736574     tes.2048K bytes.
   89040:	45444e55 454e4946 00002144 394d5241     UNDEFINED!..ARM9
   89050:	00533634 374d5241 494d4454 00000000     46S.ARM7TDMI....
   89060:	74726f43 4d2d7865 00000033 394d5241     Cortex-M3...ARM9
   89070:	00543032 394d5241 4a453632 00000053     20T.ARM926EJS...
   89080:	74726f43 412d7865 00000035 74726f43     Cortex-A5...Cort
   89090:	4d2d7865 00000034                       ex-M4...

00089098 <uart_opt>:
   89098:	05b8d800 0001c200 00000800              ............

000890a4 <_global_impure_ptr>:
   890a4:	20000630 00464e49 00666e69 004e414e     0.. INF.inf.NAN.
   890b4:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   890c4:	46454443 00000000 33323130 37363534     CDEF....01234567
   890d4:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   890e4:	0000296c 00000030                       l)..0...

000890ec <blanks.7223>:
   890ec:	20202020 20202020 20202020 20202020                     

000890fc <zeroes.7224>:
   890fc:	30303030 30303030 30303030 30303030     0000000000000000
   8910c:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   8911c:	00000043 49534f50 00000058 0000002e     C...POSIX.......
   8912c:	00000000                                ....

00089130 <__mprec_bigtens>:
   89130:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   89140:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   89150:	7f73bf3c 75154fdd                       <.s..O.u

00089158 <__mprec_tens>:
   89158:	00000000 3ff00000 00000000 40240000     .......?......$@
   89168:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   89178:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   89188:	00000000 412e8480 00000000 416312d0     .......A......cA
   89198:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   891a8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   891b8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   891c8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   891d8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   891e8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   891f8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   89208:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   89218:	79d99db4 44ea7843                       ...yCx.D

00089220 <p05.6055>:
   89220:	00000005 00000019 0000007d              ........}...

0008922c <_ctype_>:
   8922c:	20202000 20202020 28282020 20282828     .         ((((( 
   8923c:	20202020 20202020 20202020 20202020                     
   8924c:	10108820 10101010 10101010 10101010      ...............
   8925c:	04040410 04040404 10040404 10101010     ................
   8926c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8927c:	01010101 01010101 01010101 10101010     ................
   8928c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8929c:	02020202 02020202 02020202 10101010     ................
   892ac:	00000020 00000000 00000000 00000000      ...............
	...

00089330 <_init>:
   89330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89332:	bf00      	nop
   89334:	bcf8      	pop	{r3, r4, r5, r6, r7}
   89336:	bc08      	pop	{r3}
   89338:	469e      	mov	lr, r3
   8933a:	4770      	bx	lr

0008933c <__init_array_start>:
   8933c:	00085071 	.word	0x00085071

00089340 <__frame_dummy_init_array_entry>:
   89340:	000800e1                                ....

00089344 <_fini>:
   89344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89346:	bf00      	nop
   89348:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8934a:	bc08      	pop	{r3}
   8934c:	469e      	mov	lr, r3
   8934e:	4770      	bx	lr

00089350 <__fini_array_start>:
   89350:	000800bd 	.word	0x000800bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
2000000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20000010:	4a21      	ldr	r2, [pc, #132]	; (20000098 <SystemInit+0x8c>)
20000012:	6013      	str	r3, [r2, #0]
20000014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20000018:	6013      	str	r3, [r2, #0]
2000001a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
2000001e:	f503 2360 	add.w	r3, r3, #917504	; 0xe0000
20000022:	6a1b      	ldr	r3, [r3, #32]
20000024:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000028:	d107      	bne.n	2000003a <SystemInit+0x2e>
2000002a:	4a1c      	ldr	r2, [pc, #112]	; (2000009c <SystemInit+0x90>)
2000002c:	4b1c      	ldr	r3, [pc, #112]	; (200000a0 <SystemInit+0x94>)
2000002e:	621a      	str	r2, [r3, #32]
20000030:	461a      	mov	r2, r3
20000032:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000034:	f013 0f01 	tst.w	r3, #1
20000038:	d0fb      	beq.n	20000032 <SystemInit+0x26>
2000003a:	4a1a      	ldr	r2, [pc, #104]	; (200000a4 <SystemInit+0x98>)
2000003c:	4b18      	ldr	r3, [pc, #96]	; (200000a0 <SystemInit+0x94>)
2000003e:	621a      	str	r2, [r3, #32]
20000040:	461a      	mov	r2, r3
20000042:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000044:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000048:	d0fb      	beq.n	20000042 <SystemInit+0x36>
2000004a:	4a15      	ldr	r2, [pc, #84]	; (200000a0 <SystemInit+0x94>)
2000004c:	6b13      	ldr	r3, [r2, #48]	; 0x30
2000004e:	f023 0303 	bic.w	r3, r3, #3
20000052:	f043 0301 	orr.w	r3, r3, #1
20000056:	6313      	str	r3, [r2, #48]	; 0x30
20000058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000005a:	f013 0f08 	tst.w	r3, #8
2000005e:	d0fb      	beq.n	20000058 <SystemInit+0x4c>
20000060:	4a11      	ldr	r2, [pc, #68]	; (200000a8 <SystemInit+0x9c>)
20000062:	4b0f      	ldr	r3, [pc, #60]	; (200000a0 <SystemInit+0x94>)
20000064:	629a      	str	r2, [r3, #40]	; 0x28
20000066:	461a      	mov	r2, r3
20000068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000006a:	f013 0f02 	tst.w	r3, #2
2000006e:	d0fb      	beq.n	20000068 <SystemInit+0x5c>
20000070:	2211      	movs	r2, #17
20000072:	4b0b      	ldr	r3, [pc, #44]	; (200000a0 <SystemInit+0x94>)
20000074:	631a      	str	r2, [r3, #48]	; 0x30
20000076:	461a      	mov	r2, r3
20000078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000007a:	f013 0f08 	tst.w	r3, #8
2000007e:	d0fb      	beq.n	20000078 <SystemInit+0x6c>
20000080:	2212      	movs	r2, #18
20000082:	4b07      	ldr	r3, [pc, #28]	; (200000a0 <SystemInit+0x94>)
20000084:	631a      	str	r2, [r3, #48]	; 0x30
20000086:	461a      	mov	r2, r3
20000088:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000008a:	f013 0f08 	tst.w	r3, #8
2000008e:	d0fb      	beq.n	20000088 <SystemInit+0x7c>
20000090:	4a06      	ldr	r2, [pc, #24]	; (200000ac <SystemInit+0xa0>)
20000092:	4b07      	ldr	r3, [pc, #28]	; (200000b0 <SystemInit+0xa4>)
20000094:	601a      	str	r2, [r3, #0]
20000096:	4770      	bx	lr
20000098:	400e0800 	.word	0x400e0800
2000009c:	00370809 	.word	0x00370809
200000a0:	400e0400 	.word	0x400e0400
200000a4:	01370809 	.word	0x01370809
200000a8:	200f3f01 	.word	0x200f3f01
200000ac:	05b8d800 	.word	0x05b8d800
200000b0:	20000128 	.word	0x20000128

200000b4 <system_init_flash>:
200000b4:	4b16      	ldr	r3, [pc, #88]	; (20000110 <system_init_flash+0x5c>)
200000b6:	4298      	cmp	r0, r3
200000b8:	d912      	bls.n	200000e0 <system_init_flash+0x2c>
200000ba:	4b16      	ldr	r3, [pc, #88]	; (20000114 <system_init_flash+0x60>)
200000bc:	4298      	cmp	r0, r3
200000be:	d916      	bls.n	200000ee <system_init_flash+0x3a>
200000c0:	4b15      	ldr	r3, [pc, #84]	; (20000118 <system_init_flash+0x64>)
200000c2:	4298      	cmp	r0, r3
200000c4:	d91b      	bls.n	200000fe <system_init_flash+0x4a>
200000c6:	4b15      	ldr	r3, [pc, #84]	; (2000011c <system_init_flash+0x68>)
200000c8:	4298      	cmp	r0, r3
200000ca:	bf94      	ite	ls
200000cc:	f44f 7340 	movls.w	r3, #768	; 0x300
200000d0:	f44f 6380 	movhi.w	r3, #1024	; 0x400
200000d4:	4a12      	ldr	r2, [pc, #72]	; (20000120 <system_init_flash+0x6c>)
200000d6:	6013      	str	r3, [r2, #0]
200000d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000dc:	6013      	str	r3, [r2, #0]
200000de:	4770      	bx	lr
200000e0:	2300      	movs	r3, #0
200000e2:	4a0f      	ldr	r2, [pc, #60]	; (20000120 <system_init_flash+0x6c>)
200000e4:	6013      	str	r3, [r2, #0]
200000e6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000ea:	6013      	str	r3, [r2, #0]
200000ec:	4770      	bx	lr
200000ee:	f44f 7380 	mov.w	r3, #256	; 0x100
200000f2:	4a0b      	ldr	r2, [pc, #44]	; (20000120 <system_init_flash+0x6c>)
200000f4:	6013      	str	r3, [r2, #0]
200000f6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000fa:	6013      	str	r3, [r2, #0]
200000fc:	4770      	bx	lr
200000fe:	f44f 7300 	mov.w	r3, #512	; 0x200
20000102:	4a07      	ldr	r2, [pc, #28]	; (20000120 <system_init_flash+0x6c>)
20000104:	6013      	str	r3, [r2, #0]
20000106:	f502 7200 	add.w	r2, r2, #512	; 0x200
2000010a:	6013      	str	r3, [r2, #0]
2000010c:	4770      	bx	lr
2000010e:	bf00      	nop
20000110:	016e35ff 	.word	0x016e35ff
20000114:	026259ff 	.word	0x026259ff
20000118:	044aa1ff 	.word	0x044aa1ff
2000011c:	0501bcff 	.word	0x0501bcff
20000120:	400e0800 	.word	0x400e0800

20000124 <g_interrupt_enabled>:
20000124:	00000001                                ....

20000128 <SystemCoreClock>:
20000128:	003d0900                                ..=.

2000012c <wCRCTable>:
2000012c:	00000000 0000c0c1 0000c181 00000140     ............@...
2000013c:	0000c301 000003c0 00000280 0000c241     ............A...
2000014c:	0000c601 000006c0 00000780 0000c741     ............A...
2000015c:	00000500 0000c5c1 0000c481 00000440     ............@...
2000016c:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
2000017c:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
2000018c:	00000a00 0000cac1 0000cb81 00000b40     ............@...
2000019c:	0000c901 000009c0 00000880 0000c841     ............A...
200001ac:	0000d801 000018c0 00001980 0000d941     ............A...
200001bc:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200001cc:	00001e00 0000dec1 0000df81 00001f40     ............@...
200001dc:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200001ec:	00001400 0000d4c1 0000d581 00001540     ............@...
200001fc:	0000d701 000017c0 00001680 0000d641     ............A...
2000020c:	0000d201 000012c0 00001380 0000d341     ............A...
2000021c:	00001100 0000d1c1 0000d081 00001040     ............@...
2000022c:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
2000023c:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
2000024c:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
2000025c:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
2000026c:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
2000027c:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
2000028c:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
2000029c:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200002ac:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200002bc:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200002cc:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200002dc:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200002ec:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
200002fc:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
2000030c:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
2000031c:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
2000032c:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
2000033c:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
2000034c:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
2000035c:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
2000036c:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
2000037c:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
2000038c:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
2000039c:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200003ac:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200003bc:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200003cc:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200003dc:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200003ec:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
200003fc:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
2000040c:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
2000041c:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
2000042c:	00005000 000090c1 00009181 00005140     .P..........@Q..
2000043c:	00009301 000053c0 00005280 00009241     .....S...R..A...
2000044c:	00009601 000056c0 00005780 00009741     .....V...W..A...
2000045c:	00005500 000095c1 00009481 00005440     .U..........@T..
2000046c:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
2000047c:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
2000048c:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
2000049c:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200004ac:	00008801 000048c0 00004980 00008941     .....H...I..A...
200004bc:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200004cc:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200004dc:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200004ec:	00004400 000084c1 00008581 00004540     .D..........@E..
200004fc:	00008701 000047c0 00004680 00008641     .....G...F..A...
2000050c:	00008201 000042c0 00004380 00008341     .....B...C..A...
2000051c:	00004100 000081c1 00008081 00004040     .A..........@@..

2000052c <daysOfWeek>:
2000052c:	00088500 00088508 00088510 00088518     ................
2000053c:	00088524 00088530 00088538              $...0...8...

20000548 <months>:
20000548:	00088494 0008849c 000884a8 000884b0     ................
20000558:	000884b8 000884bc 000884c4 000884cc     ................
20000568:	000884d4 000884e0 000884e8 000884f4     ................

20000578 <eprocs>:
20000578:	00089040 0008904c 00089054 00089060     @...L...T...`...
20000588:	0008906c 00089074 00089080 0008908c     l...t...........

20000598 <nvpsiz>:
20000598:	00089020 00088fc0 00088fcc 00088fd8      ...............
200005a8:	00000000 00088fe4 00000000 00088ff0     ................
200005b8:	00000000 00088ffc 00089014 00000000     ................
200005c8:	00089028 00000000 00089034 00000000     (.......4.......

200005d8 <nvptyp>:
200005d8:	00088970 0008897c 000889a4 000889c4     p...|...........
200005e8:	00088a20                                 ...

200005ec <sramsiz>:
200005ec:	00088f60 00088f6c 00088f78 00088f84     `...l...x.......
200005fc:	00088f90 00088f9c 00088fa8 00088fb4     ................
2000060c:	00088fc0 00088fcc 00088fd8 00088fe4     ................
2000061c:	00088ff0 00088ffc 00089008 00089014     ................

2000062c <_impure_ptr>:
2000062c:	20000630                                0.. 

20000630 <impure_data>:
20000630:	00000000 2000091c 20000984 200009ec     ....... ... ... 
	...
200006d8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200006e8:	0005deec 0000000b 00000000 00000000     ................
	...

20000a58 <__atexit_recursive_mutex>:
20000a58:	20001838                                8.. 

20000a5c <__global_locale>:
20000a5c:	00000043 00000000 00000000 00000000     C...............
	...
20000a7c:	00000043 00000000 00000000 00000000     C...............
	...
20000a9c:	00000043 00000000 00000000 00000000     C...............
	...
20000abc:	00000043 00000000 00000000 00000000     C...............
	...
20000adc:	00000043 00000000 00000000 00000000     C...............
	...
20000afc:	00000043 00000000 00000000 00000000     C...............
	...
20000b1c:	00000043 00000000 00000000 00000000     C...............
	...
20000b3c:	00086e75 000865a1 00000000 0008922c     un...e......,...
20000b4c:	00089128 000882bc 000882bc 000882bc     (...............
20000b5c:	000882bc 000882bc 000882bc 000882bc     ................
20000b6c:	000882bc 000882bc ffffffff ffffffff     ................
20000b7c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000ba4:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000bc8 <__malloc_av_>:
	...
20000bd0:	20000bc8 20000bc8 20000bd0 20000bd0     ... ... ... ... 
20000be0:	20000bd8 20000bd8 20000be0 20000be0     ... ... ... ... 
20000bf0:	20000be8 20000be8 20000bf0 20000bf0     ... ... ... ... 
20000c00:	20000bf8 20000bf8 20000c00 20000c00     ... ... ... ... 
20000c10:	20000c08 20000c08 20000c10 20000c10     ... ... ... ... 
20000c20:	20000c18 20000c18 20000c20 20000c20     ... ...  ..  .. 
20000c30:	20000c28 20000c28 20000c30 20000c30     (.. (.. 0.. 0.. 
20000c40:	20000c38 20000c38 20000c40 20000c40     8.. 8.. @.. @.. 
20000c50:	20000c48 20000c48 20000c50 20000c50     H.. H.. P.. P.. 
20000c60:	20000c58 20000c58 20000c60 20000c60     X.. X.. `.. `.. 
20000c70:	20000c68 20000c68 20000c70 20000c70     h.. h.. p.. p.. 
20000c80:	20000c78 20000c78 20000c80 20000c80     x.. x.. ... ... 
20000c90:	20000c88 20000c88 20000c90 20000c90     ... ... ... ... 
20000ca0:	20000c98 20000c98 20000ca0 20000ca0     ... ... ... ... 
20000cb0:	20000ca8 20000ca8 20000cb0 20000cb0     ... ... ... ... 
20000cc0:	20000cb8 20000cb8 20000cc0 20000cc0     ... ... ... ... 
20000cd0:	20000cc8 20000cc8 20000cd0 20000cd0     ... ... ... ... 
20000ce0:	20000cd8 20000cd8 20000ce0 20000ce0     ... ... ... ... 
20000cf0:	20000ce8 20000ce8 20000cf0 20000cf0     ... ... ... ... 
20000d00:	20000cf8 20000cf8 20000d00 20000d00     ... ... ... ... 
20000d10:	20000d08 20000d08 20000d10 20000d10     ... ... ... ... 
20000d20:	20000d18 20000d18 20000d20 20000d20     ... ...  ..  .. 
20000d30:	20000d28 20000d28 20000d30 20000d30     (.. (.. 0.. 0.. 
20000d40:	20000d38 20000d38 20000d40 20000d40     8.. 8.. @.. @.. 
20000d50:	20000d48 20000d48 20000d50 20000d50     H.. H.. P.. P.. 
20000d60:	20000d58 20000d58 20000d60 20000d60     X.. X.. `.. `.. 
20000d70:	20000d68 20000d68 20000d70 20000d70     h.. h.. p.. p.. 
20000d80:	20000d78 20000d78 20000d80 20000d80     x.. x.. ... ... 
20000d90:	20000d88 20000d88 20000d90 20000d90     ... ... ... ... 
20000da0:	20000d98 20000d98 20000da0 20000da0     ... ... ... ... 
20000db0:	20000da8 20000da8 20000db0 20000db0     ... ... ... ... 
20000dc0:	20000db8 20000db8 20000dc0 20000dc0     ... ... ... ... 
20000dd0:	20000dc8 20000dc8 20000dd0 20000dd0     ... ... ... ... 
20000de0:	20000dd8 20000dd8 20000de0 20000de0     ... ... ... ... 
20000df0:	20000de8 20000de8 20000df0 20000df0     ... ... ... ... 
20000e00:	20000df8 20000df8 20000e00 20000e00     ... ... ... ... 
20000e10:	20000e08 20000e08 20000e10 20000e10     ... ... ... ... 
20000e20:	20000e18 20000e18 20000e20 20000e20     ... ...  ..  .. 
20000e30:	20000e28 20000e28 20000e30 20000e30     (.. (.. 0.. 0.. 
20000e40:	20000e38 20000e38 20000e40 20000e40     8.. 8.. @.. @.. 
20000e50:	20000e48 20000e48 20000e50 20000e50     H.. H.. P.. P.. 
20000e60:	20000e58 20000e58 20000e60 20000e60     X.. X.. `.. `.. 
20000e70:	20000e68 20000e68 20000e70 20000e70     h.. h.. p.. p.. 
20000e80:	20000e78 20000e78 20000e80 20000e80     x.. x.. ... ... 
20000e90:	20000e88 20000e88 20000e90 20000e90     ... ... ... ... 
20000ea0:	20000e98 20000e98 20000ea0 20000ea0     ... ... ... ... 
20000eb0:	20000ea8 20000ea8 20000eb0 20000eb0     ... ... ... ... 
20000ec0:	20000eb8 20000eb8 20000ec0 20000ec0     ... ... ... ... 
20000ed0:	20000ec8 20000ec8 20000ed0 20000ed0     ... ... ... ... 
20000ee0:	20000ed8 20000ed8 20000ee0 20000ee0     ... ... ... ... 
20000ef0:	20000ee8 20000ee8 20000ef0 20000ef0     ... ... ... ... 
20000f00:	20000ef8 20000ef8 20000f00 20000f00     ... ... ... ... 
20000f10:	20000f08 20000f08 20000f10 20000f10     ... ... ... ... 
20000f20:	20000f18 20000f18 20000f20 20000f20     ... ...  ..  .. 
20000f30:	20000f28 20000f28 20000f30 20000f30     (.. (.. 0.. 0.. 
20000f40:	20000f38 20000f38 20000f40 20000f40     8.. 8.. @.. @.. 
20000f50:	20000f48 20000f48 20000f50 20000f50     H.. H.. P.. P.. 
20000f60:	20000f58 20000f58 20000f60 20000f60     X.. X.. `.. `.. 
20000f70:	20000f68 20000f68 20000f70 20000f70     h.. h.. p.. p.. 
20000f80:	20000f78 20000f78 20000f80 20000f80     x.. x.. ... ... 
20000f90:	20000f88 20000f88 20000f90 20000f90     ... ... ... ... 
20000fa0:	20000f98 20000f98 20000fa0 20000fa0     ... ... ... ... 
20000fb0:	20000fa8 20000fa8 20000fb0 20000fb0     ... ... ... ... 
20000fc0:	20000fb8 20000fb8 20000fc0 20000fc0     ... ... ... ... 

20000fd0 <__malloc_sbrk_base>:
20000fd0:	ffffffff                                ....

20000fd4 <__malloc_trim_threshold>:
20000fd4:	00020000                                ....
