
StartUp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009b24  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00089b24  00089b24  00019b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000fd8  20000000  00089b2c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000008f4  20000fd8  0008ab04  00020fd8  2**2
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020fd8  2**0
                  CONTENTS, READONLY
  6 .comment      000000b2  00000000  00000000  00021001  2**0
                  CONTENTS, READONLY
  7 .debug_info   00023172  00000000  00000000  000210b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005007  00000000  00000000  00044225  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005628  00000000  00000000  0004922c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c10  00000000  00000000  0004e854  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a58  00000000  00000000  0004f464  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001a919  00000000  00000000  0004febc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00018a9b  00000000  00000000  0006a7d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051af4  00000000  00000000  00083270  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002770  00000000  00000000  000d4d64  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 15 10 08 00 11 10 08 00 11 10 08 00     .@. ............
   80010:	11 10 08 00 11 10 08 00 11 10 08 00 00 00 00 00     ................
	...
   8002c:	11 10 08 00 11 10 08 00 00 00 00 00 11 10 08 00     ................
   8003c:	11 10 08 00 11 10 08 00 11 10 08 00 01 1d 08 00     ................
   8004c:	11 10 08 00 11 10 08 00 11 10 08 00 11 10 08 00     ................
   8005c:	11 10 08 00 c1 35 08 00 11 10 08 00 25 07 08 00     .....5......%...
   8006c:	39 07 08 00 11 10 08 00 11 10 08 00 11 10 08 00     9...............
   8007c:	11 10 08 00 11 10 08 00 11 10 08 00 11 10 08 00     ................
   8008c:	11 10 08 00 11 10 08 00 11 10 08 00 3d 38 08 00     ............=8..
   8009c:	11 10 08 00 11 10 08 00 11 10 08 00 11 10 08 00     ................
   800ac:	11 10 08 00 11 10 08 00 11 10 08 00 11 10 08 00     ................

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000fd8 	.word	0x20000fd8
   800d8:	00000000 	.word	0x00000000
   800dc:	00089b2c 	.word	0x00089b2c

000800e0 <frame_dummy>:
   800e0:	4b0c      	ldr	r3, [pc, #48]	; (80114 <frame_dummy+0x34>)
   800e2:	b143      	cbz	r3, 800f6 <frame_dummy+0x16>
   800e4:	480c      	ldr	r0, [pc, #48]	; (80118 <frame_dummy+0x38>)
   800e6:	b510      	push	{r4, lr}
   800e8:	490c      	ldr	r1, [pc, #48]	; (8011c <frame_dummy+0x3c>)
   800ea:	f3af 8000 	nop.w
   800ee:	480c      	ldr	r0, [pc, #48]	; (80120 <frame_dummy+0x40>)
   800f0:	6803      	ldr	r3, [r0, #0]
   800f2:	b923      	cbnz	r3, 800fe <frame_dummy+0x1e>
   800f4:	bd10      	pop	{r4, pc}
   800f6:	480a      	ldr	r0, [pc, #40]	; (80120 <frame_dummy+0x40>)
   800f8:	6803      	ldr	r3, [r0, #0]
   800fa:	b933      	cbnz	r3, 8010a <frame_dummy+0x2a>
   800fc:	4770      	bx	lr
   800fe:	4b09      	ldr	r3, [pc, #36]	; (80124 <frame_dummy+0x44>)
   80100:	2b00      	cmp	r3, #0
   80102:	d0f7      	beq.n	800f4 <frame_dummy+0x14>
   80104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80108:	4718      	bx	r3
   8010a:	4b06      	ldr	r3, [pc, #24]	; (80124 <frame_dummy+0x44>)
   8010c:	2b00      	cmp	r3, #0
   8010e:	d0f5      	beq.n	800fc <frame_dummy+0x1c>
   80110:	4718      	bx	r3
   80112:	bf00      	nop
   80114:	00000000 	.word	0x00000000
   80118:	00089b2c 	.word	0x00089b2c
   8011c:	20000fdc 	.word	0x20000fdc
   80120:	00089b2c 	.word	0x00089b2c
   80124:	00000000 	.word	0x00000000

00080128 <Appli>:

#include "appli.h"


uint32_t Appli(uint32_t sc, ...)
{
   80128:	b40f      	push	{r0, r1, r2, r3}
   8012a:	b538      	push	{r3, r4, r5, lr}
   8012c:	9904      	ldr	r1, [sp, #16]
	switch(sc)
   8012e:	2964      	cmp	r1, #100	; 0x64
   80130:	d007      	beq.n	80142 <Appli+0x1a>
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
		LcdPutstr("www.a-2-s.net",3,4);
		
		break;
	default:
		Error(ERROR_APPLI_SWITCH_BAD_SC,sc);
   80132:	2010      	movs	r0, #16
   80134:	4b27      	ldr	r3, [pc, #156]	; (801d4 <Appli+0xac>)
   80136:	4798      	blx	r3
	}
	return 0;
}
   80138:	2000      	movs	r0, #0
   8013a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8013e:	b004      	add	sp, #16
   80140:	4770      	bx	lr
		gpio_configure_pin(CMD_MOSFET,			CMD_MOSFET_FLAGS);
   80142:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80146:	2020      	movs	r0, #32
   80148:	4c23      	ldr	r4, [pc, #140]	; (801d8 <Appli+0xb0>)
   8014a:	47a0      	blx	r4
		gpio_configure_pin(CMD_MOT_SERRURE,		CMD_MOT_SERRURE_FLAGS);
   8014c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80150:	2021      	movs	r0, #33	; 0x21
   80152:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS,			CMD_RELAIS_FLAGS);
   80154:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80158:	2022      	movs	r0, #34	; 0x22
   8015a:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_1,		CMD_RELAIS_1_FLAGS);
   8015c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80160:	2023      	movs	r0, #35	; 0x23
   80162:	47a0      	blx	r4
		gpio_configure_pin(CMD_RELAIS_2,		CMD_RELAIS_2_FLAGS);
   80164:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80168:	2024      	movs	r0, #36	; 0x24
   8016a:	47a0      	blx	r4
		pmc_enable_periph_clk(ID_PIOA);
   8016c:	200a      	movs	r0, #10
   8016e:	4d1b      	ldr	r5, [pc, #108]	; (801dc <Appli+0xb4>)
   80170:	47a8      	blx	r5
		pmc_enable_periph_clk(ID_PIOB);
   80172:	200b      	movs	r0, #11
   80174:	47a8      	blx	r5
		gpio_configure_pin(PENE_OUVERT,			PENE_OUVERT_FLAGS);
   80176:	4d1a      	ldr	r5, [pc, #104]	; (801e0 <Appli+0xb8>)
   80178:	4629      	mov	r1, r5
   8017a:	200e      	movs	r0, #14
   8017c:	47a0      	blx	r4
		gpio_configure_pin(PENE_FERME,			PENE_FERME_FLAGS);
   8017e:	4629      	mov	r1, r5
   80180:	200f      	movs	r0, #15
   80182:	47a0      	blx	r4
		gpio_configure_pin(IN_ILS,				IN_ILS_FLAGS);
   80184:	4629      	mov	r1, r5
   80186:	2010      	movs	r0, #16
   80188:	47a0      	blx	r4
		gpio_configure_pin(IN_SV,				IN_SV_FLAGS);
   8018a:	4629      	mov	r1, r5
   8018c:	2011      	movs	r0, #17
   8018e:	47a0      	blx	r4
		gpio_configure_pin(IN_RADAR,			IN_RADAR_FLAGS);
   80190:	4629      	mov	r1, r5
   80192:	2018      	movs	r0, #24
   80194:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU,				IN_DVU_FLAGS);
   80196:	4629      	mov	r1, r5
   80198:	2019      	movs	r0, #25
   8019a:	47a0      	blx	r4
		gpio_configure_pin(IN_PREMIERE_ENTREE,	IN_PREMIERE_ENTREE_FLAGS);
   8019c:	4629      	mov	r1, r5
   8019e:	201a      	movs	r0, #26
   801a0:	47a0      	blx	r4
		gpio_configure_pin(IN_DVU_GENERAL,		IN_DVU_GENERAL_FLAGS);
   801a2:	4629      	mov	r1, r5
   801a4:	201b      	movs	r0, #27
   801a6:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_LIBRE,		IN_ENTREE_OPTION_FLAGS);
   801a8:	4629      	mov	r1, r5
   801aa:	201c      	movs	r0, #28
   801ac:	47a0      	blx	r4
		gpio_configure_pin(IN_ENTREE_OPTION,	IN_ENTREE_OPTION_FLAGS);
   801ae:	4629      	mov	r1, r5
   801b0:	201d      	movs	r0, #29
   801b2:	47a0      	blx	r4
		Putstr("\r\n\n\t*______________ CPU.ACX-ATSAM3U4CA-AU ______________*\r\n\n");
   801b4:	490b      	ldr	r1, [pc, #44]	; (801e4 <Appli+0xbc>)
   801b6:	2067      	movs	r0, #103	; 0x67
   801b8:	4b0b      	ldr	r3, [pc, #44]	; (801e8 <Appli+0xc0>)
   801ba:	4798      	blx	r3
		LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   801bc:	2301      	movs	r3, #1
   801be:	2202      	movs	r2, #2
   801c0:	490a      	ldr	r1, [pc, #40]	; (801ec <Appli+0xc4>)
   801c2:	2067      	movs	r0, #103	; 0x67
   801c4:	4c0a      	ldr	r4, [pc, #40]	; (801f0 <Appli+0xc8>)
   801c6:	47a0      	blx	r4
		LcdPutstr("www.a-2-s.net",3,4);
   801c8:	2304      	movs	r3, #4
   801ca:	2203      	movs	r2, #3
   801cc:	4909      	ldr	r1, [pc, #36]	; (801f4 <Appli+0xcc>)
   801ce:	2067      	movs	r0, #103	; 0x67
   801d0:	47a0      	blx	r4
		break;
   801d2:	e7b1      	b.n	80138 <Appli+0x10>
   801d4:	00081811 	.word	0x00081811
   801d8:	00080909 	.word	0x00080909
   801dc:	00080b09 	.word	0x00080b09
   801e0:	28000001 	.word	0x28000001
   801e4:	000889d0 	.word	0x000889d0
   801e8:	00083401 	.word	0x00083401
   801ec:	00088a10 	.word	0x00088a10
   801f0:	00081d31 	.word	0x00081d31
   801f4:	00088a24 	.word	0x00088a24

000801f8 <chipid_read>:
   801f8:	b311      	cbz	r1, 80240 <chipid_read+0x48>
   801fa:	6802      	ldr	r2, [r0, #0]
   801fc:	f002 021f 	and.w	r2, r2, #31
   80200:	600a      	str	r2, [r1, #0]
   80202:	6802      	ldr	r2, [r0, #0]
   80204:	f3c2 1242 	ubfx	r2, r2, #5, #3
   80208:	604a      	str	r2, [r1, #4]
   8020a:	6802      	ldr	r2, [r0, #0]
   8020c:	f3c2 2203 	ubfx	r2, r2, #8, #4
   80210:	608a      	str	r2, [r1, #8]
   80212:	6802      	ldr	r2, [r0, #0]
   80214:	2200      	movs	r2, #0
   80216:	60ca      	str	r2, [r1, #12]
   80218:	6802      	ldr	r2, [r0, #0]
   8021a:	f3c2 4203 	ubfx	r2, r2, #16, #4
   8021e:	610a      	str	r2, [r1, #16]
   80220:	6802      	ldr	r2, [r0, #0]
   80222:	f3c2 5207 	ubfx	r2, r2, #20, #8
   80226:	614a      	str	r2, [r1, #20]
   80228:	6802      	ldr	r2, [r0, #0]
   8022a:	f3c2 7202 	ubfx	r2, r2, #28, #3
   8022e:	618a      	str	r2, [r1, #24]
   80230:	6802      	ldr	r2, [r0, #0]
   80232:	0fd2      	lsrs	r2, r2, #31
   80234:	61ca      	str	r2, [r1, #28]
   80236:	b132      	cbz	r2, 80246 <chipid_read+0x4e>
   80238:	6842      	ldr	r2, [r0, #4]
   8023a:	620a      	str	r2, [r1, #32]
   8023c:	2000      	movs	r0, #0
   8023e:	4770      	bx	lr
   80240:	f04f 30ff 	mov.w	r0, #4294967295
   80244:	4770      	bx	lr
   80246:	2000      	movs	r0, #0
   80248:	4770      	bx	lr
	...

0008024c <ButtonSwitch_ISR_Handler>:
	}
	return 0;
}

void ButtonSwitch_ISR_Handler()
{
   8024c:	b510      	push	{r4, lr}
   8024e:	b082      	sub	sp, #8
	PushTask(Menu, MENU_SWITCH_BUTTON,0,0);
   80250:	2300      	movs	r3, #0
   80252:	9300      	str	r3, [sp, #0]
   80254:	2265      	movs	r2, #101	; 0x65
   80256:	4903      	ldr	r1, [pc, #12]	; (80264 <ButtonSwitch_ISR_Handler+0x18>)
   80258:	2066      	movs	r0, #102	; 0x66
   8025a:	4c03      	ldr	r4, [pc, #12]	; (80268 <ButtonSwitch_ISR_Handler+0x1c>)
   8025c:	47a0      	blx	r4
	

	// if(ShellGetState() == IDLE) ShellSetState(SWITCH);
}
   8025e:	b002      	add	sp, #8
   80260:	bd10      	pop	{r4, pc}
   80262:	bf00      	nop
   80264:	000802ad 	.word	0x000802ad
   80268:	0008363d 	.word	0x0008363d

0008026c <ButtonSelect_ISR_Handler>:

void ButtonSelect_ISR_Handler()
{
   8026c:	b510      	push	{r4, lr}
   8026e:	b082      	sub	sp, #8

	PushTask(Menu, MENU_SELECT_BUTTON,0,0);
   80270:	2300      	movs	r3, #0
   80272:	9300      	str	r3, [sp, #0]
   80274:	2266      	movs	r2, #102	; 0x66
   80276:	4903      	ldr	r1, [pc, #12]	; (80284 <ButtonSelect_ISR_Handler+0x18>)
   80278:	4610      	mov	r0, r2
   8027a:	4c03      	ldr	r4, [pc, #12]	; (80288 <ButtonSelect_ISR_Handler+0x1c>)
   8027c:	47a0      	blx	r4

	//f(ShellGetState() == SWITCH) ShellSetState(IDLE);
}
   8027e:	b002      	add	sp, #8
   80280:	bd10      	pop	{r4, pc}
   80282:	bf00      	nop
   80284:	000802ad 	.word	0x000802ad
   80288:	0008363d 	.word	0x0008363d

0008028c <ButtonClear_ISR_Handler>:

void ButtonClear_ISR_Handler()
{
   8028c:	b510      	push	{r4, lr}
   8028e:	b082      	sub	sp, #8
	PushTask(Menu, MENU_CLEAR_BUTTON,0,0);
   80290:	2300      	movs	r3, #0
   80292:	9300      	str	r3, [sp, #0]
   80294:	2267      	movs	r2, #103	; 0x67
   80296:	4903      	ldr	r1, [pc, #12]	; (802a4 <ButtonClear_ISR_Handler+0x18>)
   80298:	2066      	movs	r0, #102	; 0x66
   8029a:	4c03      	ldr	r4, [pc, #12]	; (802a8 <ButtonClear_ISR_Handler+0x1c>)
   8029c:	47a0      	blx	r4
}
   8029e:	b002      	add	sp, #8
   802a0:	bd10      	pop	{r4, pc}
   802a2:	bf00      	nop
   802a4:	000802ad 	.word	0x000802ad
   802a8:	0008363d 	.word	0x0008363d

000802ac <Menu>:
{
   802ac:	b40f      	push	{r0, r1, r2, r3}
   802ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   802b2:	b082      	sub	sp, #8
   802b4:	9908      	ldr	r1, [sp, #32]
	switch(sc)
   802b6:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   802ba:	2b07      	cmp	r3, #7
   802bc:	f200 812b 	bhi.w	80516 <Menu+0x26a>
   802c0:	e8df f013 	tbh	[pc, r3, lsl #1]
   802c4:	00890008 	.word	0x00890008
   802c8:	00bf00a0 	.word	0x00bf00a0
   802cc:	00cc0129 	.word	0x00cc0129
   802d0:	01040129 	.word	0x01040129
			Putstr("MENU_NEW\r");
   802d4:	4992      	ldr	r1, [pc, #584]	; (80520 <Menu+0x274>)
   802d6:	2067      	movs	r0, #103	; 0x67
   802d8:	4f92      	ldr	r7, [pc, #584]	; (80524 <Menu+0x278>)
   802da:	47b8      	blx	r7
			pio_set_input(PIOA, PIN_BUTTON_SWITCH, PIO_PULLUP); //A0 (Bouton Gauche)
   802dc:	4c92      	ldr	r4, [pc, #584]	; (80528 <Menu+0x27c>)
   802de:	2201      	movs	r2, #1
   802e0:	f44f 6180 	mov.w	r1, #1024	; 0x400
   802e4:	4620      	mov	r0, r4
   802e6:	f8df 82ac 	ldr.w	r8, [pc, #684]	; 80594 <Menu+0x2e8>
   802ea:	47c0      	blx	r8
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SWITCH, PIO_IT_FALL_EDGE, ButtonSwitch_ISR_Handler);
   802ec:	4b8f      	ldr	r3, [pc, #572]	; (8052c <Menu+0x280>)
   802ee:	9300      	str	r3, [sp, #0]
   802f0:	2350      	movs	r3, #80	; 0x50
   802f2:	f44f 6280 	mov.w	r2, #1024	; 0x400
   802f6:	210a      	movs	r1, #10
   802f8:	4620      	mov	r0, r4
   802fa:	4e8d      	ldr	r6, [pc, #564]	; (80530 <Menu+0x284>)
   802fc:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SWITCH);
   802fe:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80302:	4620      	mov	r0, r4
   80304:	4d8b      	ldr	r5, [pc, #556]	; (80534 <Menu+0x288>)
   80306:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_SELECT, PIO_PULLUP); //A1 (Bouton Milieu)
   80308:	2201      	movs	r2, #1
   8030a:	f44f 7100 	mov.w	r1, #512	; 0x200
   8030e:	4620      	mov	r0, r4
   80310:	47c0      	blx	r8
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_SELECT, PIO_IT_FALL_EDGE, ButtonSelect_ISR_Handler);
   80312:	4b89      	ldr	r3, [pc, #548]	; (80538 <Menu+0x28c>)
   80314:	9300      	str	r3, [sp, #0]
   80316:	2350      	movs	r3, #80	; 0x50
   80318:	f44f 7200 	mov.w	r2, #512	; 0x200
   8031c:	210a      	movs	r1, #10
   8031e:	4620      	mov	r0, r4
   80320:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_SELECT);
   80322:	f44f 7100 	mov.w	r1, #512	; 0x200
   80326:	4620      	mov	r0, r4
   80328:	47a8      	blx	r5
			pio_set_input(PIOA, PIN_BUTTON_CLEAR, PIO_PULLUP); //A1 (Bouton Droite)
   8032a:	2201      	movs	r2, #1
   8032c:	f44f 7180 	mov.w	r1, #256	; 0x100
   80330:	4620      	mov	r0, r4
   80332:	47c0      	blx	r8
			pio_handler_set(PIOA, ID_PIOA, PIN_BUTTON_CLEAR, PIO_IT_FALL_EDGE, ButtonClear_ISR_Handler);
   80334:	4b81      	ldr	r3, [pc, #516]	; (8053c <Menu+0x290>)
   80336:	9300      	str	r3, [sp, #0]
   80338:	2350      	movs	r3, #80	; 0x50
   8033a:	f44f 7280 	mov.w	r2, #256	; 0x100
   8033e:	210a      	movs	r1, #10
   80340:	4620      	mov	r0, r4
   80342:	47b0      	blx	r6
			pio_enable_interrupt(PIOA, PIN_BUTTON_CLEAR);
   80344:	f44f 7180 	mov.w	r1, #256	; 0x100
   80348:	4620      	mov	r0, r4
   8034a:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8034c:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80350:	4b7b      	ldr	r3, [pc, #492]	; (80540 <Menu+0x294>)
   80352:	601a      	str	r2, [r3, #0]
			_listMenu[0][0].pMenuStr = "Option portes";
   80354:	4c7b      	ldr	r4, [pc, #492]	; (80544 <Menu+0x298>)
   80356:	4b7c      	ldr	r3, [pc, #496]	; (80548 <Menu+0x29c>)
   80358:	6023      	str	r3, [r4, #0]
			_listMenu[0][0].pSubMenu = 1;
   8035a:	2301      	movs	r3, #1
   8035c:	6063      	str	r3, [r4, #4]
			_listMenu[0][0].pMenuFunc = NULL;
   8035e:	2500      	movs	r5, #0
   80360:	60a5      	str	r5, [r4, #8]
			_listMenu[0][1].pMenuStr = "Option sas";
   80362:	4b7a      	ldr	r3, [pc, #488]	; (8054c <Menu+0x2a0>)
   80364:	60e3      	str	r3, [r4, #12]
			_listMenu[0][1].pSubMenu = 0;
   80366:	6125      	str	r5, [r4, #16]
			_listMenu[0][1].pMenuFunc = PushTask(Sas,SAS_FERMER_PORTE1,0,0);
   80368:	4e79      	ldr	r6, [pc, #484]	; (80550 <Menu+0x2a4>)
   8036a:	9500      	str	r5, [sp, #0]
   8036c:	462b      	mov	r3, r5
   8036e:	2215      	movs	r2, #21
   80370:	4631      	mov	r1, r6
   80372:	2066      	movs	r0, #102	; 0x66
   80374:	f8df 8220 	ldr.w	r8, [pc, #544]	; 80598 <Menu+0x2ec>
   80378:	47c0      	blx	r8
   8037a:	6160      	str	r0, [r4, #20]
			_listMenu[0][2].pMenuStr = NULL;
   8037c:	61a5      	str	r5, [r4, #24]
			_listMenu[0][2].pSubMenu = NULL;
   8037e:	61e5      	str	r5, [r4, #28]
			_listMenu[0][2].pMenuFunc = NULL;
   80380:	6225      	str	r5, [r4, #32]
			_listMenu[1][0].pMenuStr = "Fermer portes 1";
   80382:	4b74      	ldr	r3, [pc, #464]	; (80554 <Menu+0x2a8>)
   80384:	6263      	str	r3, [r4, #36]	; 0x24
			_listMenu[1][0].pSubMenu = NULL;
   80386:	62a5      	str	r5, [r4, #40]	; 0x28
			_listMenu[1][0].pMenuFunc = PushTask(Sas,SAS_FERMER_PORTE1,0,0);
   80388:	9500      	str	r5, [sp, #0]
   8038a:	462b      	mov	r3, r5
   8038c:	2215      	movs	r2, #21
   8038e:	4631      	mov	r1, r6
   80390:	2066      	movs	r0, #102	; 0x66
   80392:	47c0      	blx	r8
   80394:	62e0      	str	r0, [r4, #44]	; 0x2c
			_listMenu[1][1].pMenuStr = "Fermer portes 2";
   80396:	4b70      	ldr	r3, [pc, #448]	; (80558 <Menu+0x2ac>)
   80398:	6323      	str	r3, [r4, #48]	; 0x30
			_listMenu[1][1].pSubMenu = NULL;
   8039a:	6365      	str	r5, [r4, #52]	; 0x34
			_listMenu[1][1].pMenuFunc = Sas(SAS_FERMER_PORTE2);
   8039c:	2016      	movs	r0, #22
   8039e:	47b0      	blx	r6
   803a0:	63a0      	str	r0, [r4, #56]	; 0x38
			_listMenu[1][2].pMenuStr = NULL;
   803a2:	63e5      	str	r5, [r4, #60]	; 0x3c
			_listMenu[1][2].pSubMenu = NULL;
   803a4:	6425      	str	r5, [r4, #64]	; 0x40
			_listMenu[1][2].pMenuFunc = NULL;
   803a6:	6465      	str	r5, [r4, #68]	; 0x44
			sprintf(buf, "MENU NEW FINISHED \r\n");
   803a8:	4e6c      	ldr	r6, [pc, #432]	; (8055c <Menu+0x2b0>)
   803aa:	4c6d      	ldr	r4, [pc, #436]	; (80560 <Menu+0x2b4>)
   803ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   803ae:	6030      	str	r0, [r6, #0]
   803b0:	6071      	str	r1, [r6, #4]
   803b2:	60b2      	str	r2, [r6, #8]
   803b4:	60f3      	str	r3, [r6, #12]
   803b6:	6820      	ldr	r0, [r4, #0]
   803b8:	6130      	str	r0, [r6, #16]
   803ba:	7923      	ldrb	r3, [r4, #4]
   803bc:	7533      	strb	r3, [r6, #20]
			Putstr(buf);
   803be:	4631      	mov	r1, r6
   803c0:	2067      	movs	r0, #103	; 0x67
   803c2:	47b8      	blx	r7
			menuParam.iIndexX = 0;
   803c4:	4b67      	ldr	r3, [pc, #412]	; (80564 <Menu+0x2b8>)
   803c6:	601d      	str	r5, [r3, #0]
			menuParam.iIndexMenu = 0;
   803c8:	605d      	str	r5, [r3, #4]
}
   803ca:	2000      	movs	r0, #0
   803cc:	b002      	add	sp, #8
   803ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   803d2:	b004      	add	sp, #16
   803d4:	4770      	bx	lr
			menuParam.iIndexX++;
   803d6:	4b63      	ldr	r3, [pc, #396]	; (80564 <Menu+0x2b8>)
   803d8:	681a      	ldr	r2, [r3, #0]
   803da:	3201      	adds	r2, #1
   803dc:	601a      	str	r2, [r3, #0]
			if(_listMenu[menuParam.iIndexMenu][menuParam.iIndexX].pMenuStr == NULL) menuParam.iIndexX = 0;
   803de:	685b      	ldr	r3, [r3, #4]
   803e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   803e4:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
   803e8:	009b      	lsls	r3, r3, #2
   803ea:	eb03 0382 	add.w	r3, r3, r2, lsl #2
   803ee:	4a55      	ldr	r2, [pc, #340]	; (80544 <Menu+0x298>)
   803f0:	58d3      	ldr	r3, [r2, r3]
   803f2:	b11b      	cbz	r3, 803fc <Menu+0x150>
			Menu(MENU_PROMPT);
   803f4:	2069      	movs	r0, #105	; 0x69
   803f6:	f7ff ff59 	bl	802ac <Menu>
			break;
   803fa:	e7e6      	b.n	803ca <Menu+0x11e>
			if(_listMenu[menuParam.iIndexMenu][menuParam.iIndexX].pMenuStr == NULL) menuParam.iIndexX = 0;
   803fc:	2200      	movs	r2, #0
   803fe:	4b59      	ldr	r3, [pc, #356]	; (80564 <Menu+0x2b8>)
   80400:	601a      	str	r2, [r3, #0]
   80402:	e7f7      	b.n	803f4 <Menu+0x148>
			if(_listMenu[menuParam.iIndexMenu][menuParam.iIndexX].pSubMenu != 0)
   80404:	4b57      	ldr	r3, [pc, #348]	; (80564 <Menu+0x2b8>)
   80406:	6859      	ldr	r1, [r3, #4]
   80408:	681a      	ldr	r2, [r3, #0]
   8040a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   8040e:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
   80412:	009b      	lsls	r3, r3, #2
   80414:	eb03 0382 	add.w	r3, r3, r2, lsl #2
   80418:	4a4a      	ldr	r2, [pc, #296]	; (80544 <Menu+0x298>)
   8041a:	4413      	add	r3, r2
   8041c:	685b      	ldr	r3, [r3, #4]
   8041e:	b143      	cbz	r3, 80432 <Menu+0x186>
				menuParam.iIndexMenu++;
   80420:	4b50      	ldr	r3, [pc, #320]	; (80564 <Menu+0x2b8>)
   80422:	3101      	adds	r1, #1
   80424:	6059      	str	r1, [r3, #4]
				menuParam.iIndexX = 0;
   80426:	2200      	movs	r2, #0
   80428:	601a      	str	r2, [r3, #0]
				Menu(MENU_PROMPT);
   8042a:	2069      	movs	r0, #105	; 0x69
   8042c:	f7ff ff3e 	bl	802ac <Menu>
   80430:	e7cb      	b.n	803ca <Menu+0x11e>
				menuParam.iIndexX = 0;
   80432:	4b4c      	ldr	r3, [pc, #304]	; (80564 <Menu+0x2b8>)
   80434:	2200      	movs	r2, #0
   80436:	601a      	str	r2, [r3, #0]
				menuParam.iIndexMenu = 0;
   80438:	605a      	str	r2, [r3, #4]
				Menu(MENU_PROMPT);
   8043a:	2069      	movs	r0, #105	; 0x69
   8043c:	f7ff ff36 	bl	802ac <Menu>
   80440:	e7c3      	b.n	803ca <Menu+0x11e>
			if(menuParam.iIndexMenu != 0)
   80442:	4b48      	ldr	r3, [pc, #288]	; (80564 <Menu+0x2b8>)
   80444:	685b      	ldr	r3, [r3, #4]
   80446:	2b00      	cmp	r3, #0
   80448:	d0bf      	beq.n	803ca <Menu+0x11e>
				menuParam.iIndexMenu--;
   8044a:	4a46      	ldr	r2, [pc, #280]	; (80564 <Menu+0x2b8>)
   8044c:	3b01      	subs	r3, #1
   8044e:	6053      	str	r3, [r2, #4]
				menuParam.iIndexX = 0;
   80450:	2300      	movs	r3, #0
   80452:	6013      	str	r3, [r2, #0]
				Menu(MENU_PROMPT);
   80454:	2069      	movs	r0, #105	; 0x69
   80456:	f7ff ff29 	bl	802ac <Menu>
   8045a:	e7b6      	b.n	803ca <Menu+0x11e>
			LcdPutstr("                   ", 2, 0);
   8045c:	2300      	movs	r3, #0
   8045e:	2202      	movs	r2, #2
   80460:	4941      	ldr	r1, [pc, #260]	; (80568 <Menu+0x2bc>)
   80462:	2067      	movs	r0, #103	; 0x67
   80464:	f8df 8134 	ldr.w	r8, [pc, #308]	; 8059c <Menu+0x2f0>
   80468:	47c0      	blx	r8
			sprintf(buf, "%s", _listMenu[menuParam.iIndexMenu][menuParam.iIndexX].pMenuStr);
   8046a:	4c36      	ldr	r4, [pc, #216]	; (80544 <Menu+0x298>)
   8046c:	4e3d      	ldr	r6, [pc, #244]	; (80564 <Menu+0x2b8>)
   8046e:	6832      	ldr	r2, [r6, #0]
   80470:	6873      	ldr	r3, [r6, #4]
   80472:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   80476:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
   8047a:	009b      	lsls	r3, r3, #2
   8047c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
   80480:	4d36      	ldr	r5, [pc, #216]	; (8055c <Menu+0x2b0>)
   80482:	58e1      	ldr	r1, [r4, r3]
   80484:	4628      	mov	r0, r5
   80486:	4b39      	ldr	r3, [pc, #228]	; (8056c <Menu+0x2c0>)
   80488:	4798      	blx	r3
			Putstr(buf);
   8048a:	4629      	mov	r1, r5
   8048c:	2067      	movs	r0, #103	; 0x67
   8048e:	4f25      	ldr	r7, [pc, #148]	; (80524 <Menu+0x278>)
   80490:	47b8      	blx	r7
			LcdPutstr(buf, 2, LcdFindHalf(strlen(buf)));
   80492:	4628      	mov	r0, r5
   80494:	4b36      	ldr	r3, [pc, #216]	; (80570 <Menu+0x2c4>)
   80496:	4798      	blx	r3
   80498:	4b36      	ldr	r3, [pc, #216]	; (80574 <Menu+0x2c8>)
   8049a:	4798      	blx	r3
   8049c:	4603      	mov	r3, r0
   8049e:	2202      	movs	r2, #2
   804a0:	4629      	mov	r1, r5
   804a2:	2067      	movs	r0, #103	; 0x67
   804a4:	47c0      	blx	r8
			sprintf(buf, "%d\r\n", _listMenu[menuParam.iIndexMenu][menuParam.iIndexX].pSubMenu);
   804a6:	6832      	ldr	r2, [r6, #0]
   804a8:	6873      	ldr	r3, [r6, #4]
   804aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   804ae:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
   804b2:	009b      	lsls	r3, r3, #2
   804b4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
   804b8:	4423      	add	r3, r4
   804ba:	685a      	ldr	r2, [r3, #4]
   804bc:	492e      	ldr	r1, [pc, #184]	; (80578 <Menu+0x2cc>)
   804be:	4628      	mov	r0, r5
   804c0:	4b2e      	ldr	r3, [pc, #184]	; (8057c <Menu+0x2d0>)
   804c2:	4798      	blx	r3
			Putstr(buf);
   804c4:	4629      	mov	r1, r5
   804c6:	2067      	movs	r0, #103	; 0x67
   804c8:	47b8      	blx	r7
			break;
   804ca:	e77e      	b.n	803ca <Menu+0x11e>
			menuParam.iIndexX = 0;
   804cc:	4e25      	ldr	r6, [pc, #148]	; (80564 <Menu+0x2b8>)
   804ce:	2300      	movs	r3, #0
   804d0:	6033      	str	r3, [r6, #0]
			sprintf(buf, "\r\n");
   804d2:	4c22      	ldr	r4, [pc, #136]	; (8055c <Menu+0x2b0>)
   804d4:	4b2a      	ldr	r3, [pc, #168]	; (80580 <Menu+0x2d4>)
   804d6:	881a      	ldrh	r2, [r3, #0]
   804d8:	789b      	ldrb	r3, [r3, #2]
   804da:	8022      	strh	r2, [r4, #0]
   804dc:	70a3      	strb	r3, [r4, #2]
			Putstr(buf);
   804de:	4621      	mov	r1, r4
   804e0:	2067      	movs	r0, #103	; 0x67
   804e2:	4d10      	ldr	r5, [pc, #64]	; (80524 <Menu+0x278>)
   804e4:	47a8      	blx	r5
			sprintf(buf,"Index: %d\r\n", menuParam.iIndexX);
   804e6:	6832      	ldr	r2, [r6, #0]
   804e8:	4926      	ldr	r1, [pc, #152]	; (80584 <Menu+0x2d8>)
   804ea:	4620      	mov	r0, r4
   804ec:	4f23      	ldr	r7, [pc, #140]	; (8057c <Menu+0x2d0>)
   804ee:	47b8      	blx	r7
			Putstr(buf);
   804f0:	4621      	mov	r1, r4
   804f2:	2067      	movs	r0, #103	; 0x67
   804f4:	47a8      	blx	r5
			sprintf(buf, "%s \r\n", _listMenu[menuParam.iIndexX]);
   804f6:	6832      	ldr	r2, [r6, #0]
   804f8:	eb02 02c2 	add.w	r2, r2, r2, lsl #3
   804fc:	4b11      	ldr	r3, [pc, #68]	; (80544 <Menu+0x298>)
   804fe:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   80502:	4921      	ldr	r1, [pc, #132]	; (80588 <Menu+0x2dc>)
   80504:	4620      	mov	r0, r4
   80506:	47b8      	blx	r7
			Putstr(buf);
   80508:	4621      	mov	r1, r4
   8050a:	2067      	movs	r0, #103	; 0x67
   8050c:	47a8      	blx	r5
			gpio_toggle_pin(POWER_LED);
   8050e:	2033      	movs	r0, #51	; 0x33
   80510:	4b1e      	ldr	r3, [pc, #120]	; (8058c <Menu+0x2e0>)
   80512:	4798      	blx	r3
			break;
   80514:	e759      	b.n	803ca <Menu+0x11e>
			Error(ERROR_MENU_SWITCH_BAD_SC, sc);
   80516:	2011      	movs	r0, #17
   80518:	4b1d      	ldr	r3, [pc, #116]	; (80590 <Menu+0x2e4>)
   8051a:	4798      	blx	r3
   8051c:	e755      	b.n	803ca <Menu+0x11e>
   8051e:	bf00      	nop
   80520:	00088a34 	.word	0x00088a34
   80524:	00083401 	.word	0x00083401
   80528:	400e0c00 	.word	0x400e0c00
   8052c:	0008024d 	.word	0x0008024d
   80530:	000806b5 	.word	0x000806b5
   80534:	0008088d 	.word	0x0008088d
   80538:	0008026d 	.word	0x0008026d
   8053c:	0008028d 	.word	0x0008028d
   80540:	e000e100 	.word	0xe000e100
   80544:	200010b4 	.word	0x200010b4
   80548:	00088a40 	.word	0x00088a40
   8054c:	00088a50 	.word	0x00088a50
   80550:	000805a1 	.word	0x000805a1
   80554:	00088a5c 	.word	0x00088a5c
   80558:	00088a6c 	.word	0x00088a6c
   8055c:	20001314 	.word	0x20001314
   80560:	00088a7c 	.word	0x00088a7c
   80564:	20001120 	.word	0x20001120
   80568:	00088a94 	.word	0x00088a94
   8056c:	00083fe1 	.word	0x00083fe1
   80570:	0008409d 	.word	0x0008409d
   80574:	00082245 	.word	0x00082245
   80578:	00088aa8 	.word	0x00088aa8
   8057c:	00083f95 	.word	0x00083f95
   80580:	00088da4 	.word	0x00088da4
   80584:	00088ab0 	.word	0x00088ab0
   80588:	00088abc 	.word	0x00088abc
   8058c:	000808e9 	.word	0x000808e9
   80590:	00081811 	.word	0x00081811
   80594:	00080807 	.word	0x00080807
   80598:	0008363d 	.word	0x0008363d
   8059c:	00081d31 	.word	0x00081d31

000805a0 <Sas>:

#include "./kernel/kernel.h"
#include <string.h>

int Sas(int sc, ...)
{
   805a0:	b40f      	push	{r0, r1, r2, r3}
   805a2:	b538      	push	{r3, r4, r5, lr}
   805a4:	9904      	ldr	r1, [sp, #16]
	switch(sc)
   805a6:	2915      	cmp	r1, #21
   805a8:	d02a      	beq.n	80600 <Sas+0x60>
   805aa:	2916      	cmp	r1, #22
   805ac:	d036      	beq.n	8061c <Sas+0x7c>
   805ae:	290a      	cmp	r1, #10
   805b0:	d003      	beq.n	805ba <Sas+0x1a>
	case SAS_FERMER_PORTE2:
		sprintf(buf, "Fermeture Porte 2");
		Putstr(buf);
		break;
	default:
		Error(ERROR_SAS_SWITCH_BAD_SC, sc);
   805b2:	2012      	movs	r0, #18
   805b4:	4b20      	ldr	r3, [pc, #128]	; (80638 <Sas+0x98>)
   805b6:	4798      	blx	r3
		break;
   805b8:	e01e      	b.n	805f8 <Sas+0x58>
		gpio_toggle_pin(POWER_LED);
   805ba:	2033      	movs	r0, #51	; 0x33
   805bc:	4b1f      	ldr	r3, [pc, #124]	; (8063c <Sas+0x9c>)
   805be:	4798      	blx	r3
		sprintf(buf, "Fermeture SAS");
   805c0:	4c1f      	ldr	r4, [pc, #124]	; (80640 <Sas+0xa0>)
   805c2:	4b20      	ldr	r3, [pc, #128]	; (80644 <Sas+0xa4>)
   805c4:	cb07      	ldmia	r3!, {r0, r1, r2}
   805c6:	6020      	str	r0, [r4, #0]
   805c8:	6061      	str	r1, [r4, #4]
   805ca:	60a2      	str	r2, [r4, #8]
   805cc:	881b      	ldrh	r3, [r3, #0]
   805ce:	81a3      	strh	r3, [r4, #12]
		LcdPutstr("                   ", 3, 0);
   805d0:	2300      	movs	r3, #0
   805d2:	2203      	movs	r2, #3
   805d4:	491c      	ldr	r1, [pc, #112]	; (80648 <Sas+0xa8>)
   805d6:	2067      	movs	r0, #103	; 0x67
   805d8:	4d1c      	ldr	r5, [pc, #112]	; (8064c <Sas+0xac>)
   805da:	47a8      	blx	r5
		Putstr(buf);
   805dc:	4621      	mov	r1, r4
   805de:	2067      	movs	r0, #103	; 0x67
   805e0:	4b1b      	ldr	r3, [pc, #108]	; (80650 <Sas+0xb0>)
   805e2:	4798      	blx	r3
		LcdPutstr(buf, 3, LcdFindHalf(strlen(buf)));
   805e4:	4620      	mov	r0, r4
   805e6:	4b1b      	ldr	r3, [pc, #108]	; (80654 <Sas+0xb4>)
   805e8:	4798      	blx	r3
   805ea:	4b1b      	ldr	r3, [pc, #108]	; (80658 <Sas+0xb8>)
   805ec:	4798      	blx	r3
   805ee:	4603      	mov	r3, r0
   805f0:	2203      	movs	r2, #3
   805f2:	4621      	mov	r1, r4
   805f4:	2067      	movs	r0, #103	; 0x67
   805f6:	47a8      	blx	r5
	}

}
   805f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   805fc:	b004      	add	sp, #16
   805fe:	4770      	bx	lr
		sprintf(buf, "Fermeture Porte 1");
   80600:	4d0f      	ldr	r5, [pc, #60]	; (80640 <Sas+0xa0>)
   80602:	4c16      	ldr	r4, [pc, #88]	; (8065c <Sas+0xbc>)
   80604:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   80606:	6028      	str	r0, [r5, #0]
   80608:	6069      	str	r1, [r5, #4]
   8060a:	60aa      	str	r2, [r5, #8]
   8060c:	60eb      	str	r3, [r5, #12]
   8060e:	8823      	ldrh	r3, [r4, #0]
   80610:	822b      	strh	r3, [r5, #16]
		Putstr(buf);
   80612:	4629      	mov	r1, r5
   80614:	2067      	movs	r0, #103	; 0x67
   80616:	4b0e      	ldr	r3, [pc, #56]	; (80650 <Sas+0xb0>)
   80618:	4798      	blx	r3
		break;
   8061a:	e7ed      	b.n	805f8 <Sas+0x58>
		sprintf(buf, "Fermeture Porte 2");
   8061c:	4d08      	ldr	r5, [pc, #32]	; (80640 <Sas+0xa0>)
   8061e:	4c10      	ldr	r4, [pc, #64]	; (80660 <Sas+0xc0>)
   80620:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   80622:	6028      	str	r0, [r5, #0]
   80624:	6069      	str	r1, [r5, #4]
   80626:	60aa      	str	r2, [r5, #8]
   80628:	60eb      	str	r3, [r5, #12]
   8062a:	8823      	ldrh	r3, [r4, #0]
   8062c:	822b      	strh	r3, [r5, #16]
		Putstr(buf);
   8062e:	4629      	mov	r1, r5
   80630:	2067      	movs	r0, #103	; 0x67
   80632:	4b07      	ldr	r3, [pc, #28]	; (80650 <Sas+0xb0>)
   80634:	4798      	blx	r3
		break;
   80636:	e7df      	b.n	805f8 <Sas+0x58>
   80638:	00081811 	.word	0x00081811
   8063c:	000808e9 	.word	0x000808e9
   80640:	20001314 	.word	0x20001314
   80644:	00088ac4 	.word	0x00088ac4
   80648:	00088a94 	.word	0x00088a94
   8064c:	00081d31 	.word	0x00081d31
   80650:	00083401 	.word	0x00083401
   80654:	0008409d 	.word	0x0008409d
   80658:	00082245 	.word	0x00082245
   8065c:	00088ad4 	.word	0x00088ad4
   80660:	00088ae8 	.word	0x00088ae8

00080664 <pio_handler_process>:
   80664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80668:	4604      	mov	r4, r0
   8066a:	4688      	mov	r8, r1
   8066c:	4b0e      	ldr	r3, [pc, #56]	; (806a8 <pio_handler_process+0x44>)
   8066e:	4798      	blx	r3
   80670:	4605      	mov	r5, r0
   80672:	4620      	mov	r0, r4
   80674:	4b0d      	ldr	r3, [pc, #52]	; (806ac <pio_handler_process+0x48>)
   80676:	4798      	blx	r3
   80678:	4005      	ands	r5, r0
   8067a:	d013      	beq.n	806a4 <pio_handler_process+0x40>
   8067c:	4c0c      	ldr	r4, [pc, #48]	; (806b0 <pio_handler_process+0x4c>)
   8067e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80682:	e003      	b.n	8068c <pio_handler_process+0x28>
   80684:	42b4      	cmp	r4, r6
   80686:	d00d      	beq.n	806a4 <pio_handler_process+0x40>
   80688:	3410      	adds	r4, #16
   8068a:	b15d      	cbz	r5, 806a4 <pio_handler_process+0x40>
   8068c:	6820      	ldr	r0, [r4, #0]
   8068e:	4540      	cmp	r0, r8
   80690:	d1f8      	bne.n	80684 <pio_handler_process+0x20>
   80692:	6861      	ldr	r1, [r4, #4]
   80694:	4229      	tst	r1, r5
   80696:	d0f5      	beq.n	80684 <pio_handler_process+0x20>
   80698:	68e3      	ldr	r3, [r4, #12]
   8069a:	4798      	blx	r3
   8069c:	6863      	ldr	r3, [r4, #4]
   8069e:	ea25 0503 	bic.w	r5, r5, r3
   806a2:	e7ef      	b.n	80684 <pio_handler_process+0x20>
   806a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   806a8:	00080891 	.word	0x00080891
   806ac:	00080895 	.word	0x00080895
   806b0:	20000ff4 	.word	0x20000ff4

000806b4 <pio_handler_set>:
   806b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   806b6:	4c18      	ldr	r4, [pc, #96]	; (80718 <pio_handler_set+0x64>)
   806b8:	6826      	ldr	r6, [r4, #0]
   806ba:	2e06      	cmp	r6, #6
   806bc:	d829      	bhi.n	80712 <pio_handler_set+0x5e>
   806be:	f04f 0c00 	mov.w	ip, #0
   806c2:	4664      	mov	r4, ip
   806c4:	4f15      	ldr	r7, [pc, #84]	; (8071c <pio_handler_set+0x68>)
   806c6:	e004      	b.n	806d2 <pio_handler_set+0x1e>
   806c8:	3401      	adds	r4, #1
   806ca:	b2e4      	uxtb	r4, r4
   806cc:	46a4      	mov	ip, r4
   806ce:	42a6      	cmp	r6, r4
   806d0:	d309      	bcc.n	806e6 <pio_handler_set+0x32>
   806d2:	46a6      	mov	lr, r4
   806d4:	0125      	lsls	r5, r4, #4
   806d6:	597d      	ldr	r5, [r7, r5]
   806d8:	428d      	cmp	r5, r1
   806da:	d1f5      	bne.n	806c8 <pio_handler_set+0x14>
   806dc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   806e0:	686d      	ldr	r5, [r5, #4]
   806e2:	4295      	cmp	r5, r2
   806e4:	d1f0      	bne.n	806c8 <pio_handler_set+0x14>
   806e6:	4d0d      	ldr	r5, [pc, #52]	; (8071c <pio_handler_set+0x68>)
   806e8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   806ec:	eb05 040e 	add.w	r4, r5, lr
   806f0:	f845 100e 	str.w	r1, [r5, lr]
   806f4:	6062      	str	r2, [r4, #4]
   806f6:	60a3      	str	r3, [r4, #8]
   806f8:	9906      	ldr	r1, [sp, #24]
   806fa:	60e1      	str	r1, [r4, #12]
   806fc:	3601      	adds	r6, #1
   806fe:	4566      	cmp	r6, ip
   80700:	bf04      	itt	eq
   80702:	4905      	ldreq	r1, [pc, #20]	; (80718 <pio_handler_set+0x64>)
   80704:	600e      	streq	r6, [r1, #0]
   80706:	4611      	mov	r1, r2
   80708:	461a      	mov	r2, r3
   8070a:	4b05      	ldr	r3, [pc, #20]	; (80720 <pio_handler_set+0x6c>)
   8070c:	4798      	blx	r3
   8070e:	2000      	movs	r0, #0
   80710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80712:	2001      	movs	r0, #1
   80714:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80716:	bf00      	nop
   80718:	20001064 	.word	0x20001064
   8071c:	20000ff4 	.word	0x20000ff4
   80720:	0008085f 	.word	0x0008085f

00080724 <PIOA_Handler>:
   80724:	b508      	push	{r3, lr}
   80726:	210a      	movs	r1, #10
   80728:	4801      	ldr	r0, [pc, #4]	; (80730 <PIOA_Handler+0xc>)
   8072a:	4b02      	ldr	r3, [pc, #8]	; (80734 <PIOA_Handler+0x10>)
   8072c:	4798      	blx	r3
   8072e:	bd08      	pop	{r3, pc}
   80730:	400e0c00 	.word	0x400e0c00
   80734:	00080665 	.word	0x00080665

00080738 <PIOB_Handler>:
   80738:	b508      	push	{r3, lr}
   8073a:	210b      	movs	r1, #11
   8073c:	4801      	ldr	r0, [pc, #4]	; (80744 <PIOB_Handler+0xc>)
   8073e:	4b02      	ldr	r3, [pc, #8]	; (80748 <PIOB_Handler+0x10>)
   80740:	4798      	blx	r3
   80742:	bd08      	pop	{r3, pc}
   80744:	400e0e00 	.word	0x400e0e00
   80748:	00080665 	.word	0x00080665

0008074c <sysclk_init>:
   8074c:	b510      	push	{r4, lr}
   8074e:	4812      	ldr	r0, [pc, #72]	; (80798 <sysclk_init+0x4c>)
   80750:	4b12      	ldr	r3, [pc, #72]	; (8079c <sysclk_init+0x50>)
   80752:	4798      	blx	r3
   80754:	203e      	movs	r0, #62	; 0x3e
   80756:	4b12      	ldr	r3, [pc, #72]	; (807a0 <sysclk_init+0x54>)
   80758:	4798      	blx	r3
   8075a:	4c12      	ldr	r4, [pc, #72]	; (807a4 <sysclk_init+0x58>)
   8075c:	47a0      	blx	r4
   8075e:	2800      	cmp	r0, #0
   80760:	d0fc      	beq.n	8075c <sysclk_init+0x10>
   80762:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80766:	4b10      	ldr	r3, [pc, #64]	; (807a8 <sysclk_init+0x5c>)
   80768:	4798      	blx	r3
   8076a:	4c10      	ldr	r4, [pc, #64]	; (807ac <sysclk_init+0x60>)
   8076c:	47a0      	blx	r4
   8076e:	2800      	cmp	r0, #0
   80770:	d0fc      	beq.n	8076c <sysclk_init+0x20>
   80772:	4b0f      	ldr	r3, [pc, #60]	; (807b0 <sysclk_init+0x64>)
   80774:	4798      	blx	r3
   80776:	4a0f      	ldr	r2, [pc, #60]	; (807b4 <sysclk_init+0x68>)
   80778:	4b0f      	ldr	r3, [pc, #60]	; (807b8 <sysclk_init+0x6c>)
   8077a:	629a      	str	r2, [r3, #40]	; 0x28
   8077c:	4c0f      	ldr	r4, [pc, #60]	; (807bc <sysclk_init+0x70>)
   8077e:	47a0      	blx	r4
   80780:	2800      	cmp	r0, #0
   80782:	d0fc      	beq.n	8077e <sysclk_init+0x32>
   80784:	2010      	movs	r0, #16
   80786:	4b0e      	ldr	r3, [pc, #56]	; (807c0 <sysclk_init+0x74>)
   80788:	4798      	blx	r3
   8078a:	4b0e      	ldr	r3, [pc, #56]	; (807c4 <sysclk_init+0x78>)
   8078c:	4798      	blx	r3
   8078e:	4802      	ldr	r0, [pc, #8]	; (80798 <sysclk_init+0x4c>)
   80790:	4b02      	ldr	r3, [pc, #8]	; (8079c <sysclk_init+0x50>)
   80792:	4798      	blx	r3
   80794:	bd10      	pop	{r4, pc}
   80796:	bf00      	nop
   80798:	05b8d800 	.word	0x05b8d800
   8079c:	200000b5 	.word	0x200000b5
   807a0:	00080a81 	.word	0x00080a81
   807a4:	00080aa9 	.word	0x00080aa9
   807a8:	00080ac9 	.word	0x00080ac9
   807ac:	00080ab9 	.word	0x00080ab9
   807b0:	00080ae9 	.word	0x00080ae9
   807b4:	200f3f01 	.word	0x200f3f01
   807b8:	400e0400 	.word	0x400e0400
   807bc:	00080af9 	.word	0x00080af9
   807c0:	000809d9 	.word	0x000809d9
   807c4:	000810ad 	.word	0x000810ad

000807c8 <pio_set_peripheral>:
   807c8:	6442      	str	r2, [r0, #68]	; 0x44
   807ca:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   807ce:	d016      	beq.n	807fe <pio_set_peripheral+0x36>
   807d0:	d80b      	bhi.n	807ea <pio_set_peripheral+0x22>
   807d2:	b149      	cbz	r1, 807e8 <pio_set_peripheral+0x20>
   807d4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   807d8:	d105      	bne.n	807e6 <pio_set_peripheral+0x1e>
   807da:	6f03      	ldr	r3, [r0, #112]	; 0x70
   807dc:	6f01      	ldr	r1, [r0, #112]	; 0x70
   807de:	400b      	ands	r3, r1
   807e0:	ea23 0302 	bic.w	r3, r3, r2
   807e4:	6703      	str	r3, [r0, #112]	; 0x70
   807e6:	6042      	str	r2, [r0, #4]
   807e8:	4770      	bx	lr
   807ea:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   807ee:	d0fb      	beq.n	807e8 <pio_set_peripheral+0x20>
   807f0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   807f4:	d0f8      	beq.n	807e8 <pio_set_peripheral+0x20>
   807f6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   807fa:	d1f4      	bne.n	807e6 <pio_set_peripheral+0x1e>
   807fc:	4770      	bx	lr
   807fe:	6f03      	ldr	r3, [r0, #112]	; 0x70
   80800:	4313      	orrs	r3, r2
   80802:	6703      	str	r3, [r0, #112]	; 0x70
   80804:	e7ef      	b.n	807e6 <pio_set_peripheral+0x1e>

00080806 <pio_set_input>:
   80806:	6441      	str	r1, [r0, #68]	; 0x44
   80808:	f012 0f01 	tst.w	r2, #1
   8080c:	bf14      	ite	ne
   8080e:	6641      	strne	r1, [r0, #100]	; 0x64
   80810:	6601      	streq	r1, [r0, #96]	; 0x60
   80812:	f012 0f0a 	tst.w	r2, #10
   80816:	bf14      	ite	ne
   80818:	6201      	strne	r1, [r0, #32]
   8081a:	6241      	streq	r1, [r0, #36]	; 0x24
   8081c:	f012 0f02 	tst.w	r2, #2
   80820:	d107      	bne.n	80832 <pio_set_input+0x2c>
   80822:	f012 0f08 	tst.w	r2, #8
   80826:	bf18      	it	ne
   80828:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   8082c:	6141      	str	r1, [r0, #20]
   8082e:	6001      	str	r1, [r0, #0]
   80830:	4770      	bx	lr
   80832:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80836:	e7f9      	b.n	8082c <pio_set_input+0x26>

00080838 <pio_set_output>:
   80838:	b410      	push	{r4}
   8083a:	9c01      	ldr	r4, [sp, #4]
   8083c:	6441      	str	r1, [r0, #68]	; 0x44
   8083e:	b944      	cbnz	r4, 80852 <pio_set_output+0x1a>
   80840:	6601      	str	r1, [r0, #96]	; 0x60
   80842:	b143      	cbz	r3, 80856 <pio_set_output+0x1e>
   80844:	6501      	str	r1, [r0, #80]	; 0x50
   80846:	b942      	cbnz	r2, 8085a <pio_set_output+0x22>
   80848:	6341      	str	r1, [r0, #52]	; 0x34
   8084a:	6101      	str	r1, [r0, #16]
   8084c:	6001      	str	r1, [r0, #0]
   8084e:	bc10      	pop	{r4}
   80850:	4770      	bx	lr
   80852:	6641      	str	r1, [r0, #100]	; 0x64
   80854:	e7f5      	b.n	80842 <pio_set_output+0xa>
   80856:	6541      	str	r1, [r0, #84]	; 0x54
   80858:	e7f5      	b.n	80846 <pio_set_output+0xe>
   8085a:	6301      	str	r1, [r0, #48]	; 0x30
   8085c:	e7f5      	b.n	8084a <pio_set_output+0x12>

0008085e <pio_configure_interrupt>:
   8085e:	f012 0f10 	tst.w	r2, #16
   80862:	d010      	beq.n	80886 <pio_configure_interrupt+0x28>
   80864:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
   80868:	f012 0f20 	tst.w	r2, #32
   8086c:	bf14      	ite	ne
   8086e:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
   80872:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
   80876:	f012 0f40 	tst.w	r2, #64	; 0x40
   8087a:	bf14      	ite	ne
   8087c:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
   80880:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   80884:	4770      	bx	lr
   80886:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   8088a:	4770      	bx	lr

0008088c <pio_enable_interrupt>:
   8088c:	6401      	str	r1, [r0, #64]	; 0x40
   8088e:	4770      	bx	lr

00080890 <pio_get_interrupt_status>:
   80890:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   80892:	4770      	bx	lr

00080894 <pio_get_interrupt_mask>:
   80894:	6c80      	ldr	r0, [r0, #72]	; 0x48
   80896:	4770      	bx	lr

00080898 <pio_get_pin_value>:
   80898:	0943      	lsrs	r3, r0, #5
   8089a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8089e:	f203 7306 	addw	r3, r3, #1798	; 0x706
   808a2:	025b      	lsls	r3, r3, #9
   808a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   808a6:	f000 001f 	and.w	r0, r0, #31
   808aa:	fa23 f000 	lsr.w	r0, r3, r0
   808ae:	f000 0001 	and.w	r0, r0, #1
   808b2:	4770      	bx	lr

000808b4 <pio_set_pin_high>:
   808b4:	0943      	lsrs	r3, r0, #5
   808b6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   808ba:	f203 7306 	addw	r3, r3, #1798	; 0x706
   808be:	025b      	lsls	r3, r3, #9
   808c0:	f000 001f 	and.w	r0, r0, #31
   808c4:	2201      	movs	r2, #1
   808c6:	fa02 f000 	lsl.w	r0, r2, r0
   808ca:	6318      	str	r0, [r3, #48]	; 0x30
   808cc:	4770      	bx	lr

000808ce <pio_set_pin_low>:
   808ce:	0943      	lsrs	r3, r0, #5
   808d0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   808d4:	f203 7306 	addw	r3, r3, #1798	; 0x706
   808d8:	025b      	lsls	r3, r3, #9
   808da:	f000 001f 	and.w	r0, r0, #31
   808de:	2201      	movs	r2, #1
   808e0:	fa02 f000 	lsl.w	r0, r2, r0
   808e4:	6358      	str	r0, [r3, #52]	; 0x34
   808e6:	4770      	bx	lr

000808e8 <pio_toggle_pin>:
   808e8:	0943      	lsrs	r3, r0, #5
   808ea:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   808ee:	f203 7306 	addw	r3, r3, #1798	; 0x706
   808f2:	025b      	lsls	r3, r3, #9
   808f4:	6b99      	ldr	r1, [r3, #56]	; 0x38
   808f6:	f000 021f 	and.w	r2, r0, #31
   808fa:	2001      	movs	r0, #1
   808fc:	4090      	lsls	r0, r2
   808fe:	4201      	tst	r1, r0
   80900:	bf14      	ite	ne
   80902:	6358      	strne	r0, [r3, #52]	; 0x34
   80904:	6318      	streq	r0, [r3, #48]	; 0x30
   80906:	4770      	bx	lr

00080908 <pio_configure_pin>:
   80908:	b570      	push	{r4, r5, r6, lr}
   8090a:	b082      	sub	sp, #8
   8090c:	460d      	mov	r5, r1
   8090e:	0943      	lsrs	r3, r0, #5
   80910:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80914:	f203 7306 	addw	r3, r3, #1798	; 0x706
   80918:	025c      	lsls	r4, r3, #9
   8091a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   8091e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80922:	d031      	beq.n	80988 <pio_configure_pin+0x80>
   80924:	d816      	bhi.n	80954 <pio_configure_pin+0x4c>
   80926:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8092a:	d01b      	beq.n	80964 <pio_configure_pin+0x5c>
   8092c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80930:	d116      	bne.n	80960 <pio_configure_pin+0x58>
   80932:	f000 001f 	and.w	r0, r0, #31
   80936:	2601      	movs	r6, #1
   80938:	4086      	lsls	r6, r0
   8093a:	4632      	mov	r2, r6
   8093c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80940:	4620      	mov	r0, r4
   80942:	4b22      	ldr	r3, [pc, #136]	; (809cc <pio_configure_pin+0xc4>)
   80944:	4798      	blx	r3
   80946:	f015 0f01 	tst.w	r5, #1
   8094a:	bf14      	ite	ne
   8094c:	6666      	strne	r6, [r4, #100]	; 0x64
   8094e:	6626      	streq	r6, [r4, #96]	; 0x60
   80950:	2001      	movs	r0, #1
   80952:	e017      	b.n	80984 <pio_configure_pin+0x7c>
   80954:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80958:	d021      	beq.n	8099e <pio_configure_pin+0x96>
   8095a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   8095e:	d01e      	beq.n	8099e <pio_configure_pin+0x96>
   80960:	2000      	movs	r0, #0
   80962:	e00f      	b.n	80984 <pio_configure_pin+0x7c>
   80964:	f000 001f 	and.w	r0, r0, #31
   80968:	2601      	movs	r6, #1
   8096a:	4086      	lsls	r6, r0
   8096c:	4632      	mov	r2, r6
   8096e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80972:	4620      	mov	r0, r4
   80974:	4b15      	ldr	r3, [pc, #84]	; (809cc <pio_configure_pin+0xc4>)
   80976:	4798      	blx	r3
   80978:	f015 0f01 	tst.w	r5, #1
   8097c:	bf14      	ite	ne
   8097e:	6666      	strne	r6, [r4, #100]	; 0x64
   80980:	6626      	streq	r6, [r4, #96]	; 0x60
   80982:	2001      	movs	r0, #1
   80984:	b002      	add	sp, #8
   80986:	bd70      	pop	{r4, r5, r6, pc}
   80988:	f000 011f 	and.w	r1, r0, #31
   8098c:	2601      	movs	r6, #1
   8098e:	462a      	mov	r2, r5
   80990:	fa06 f101 	lsl.w	r1, r6, r1
   80994:	4620      	mov	r0, r4
   80996:	4b0e      	ldr	r3, [pc, #56]	; (809d0 <pio_configure_pin+0xc8>)
   80998:	4798      	blx	r3
   8099a:	4630      	mov	r0, r6
   8099c:	e7f2      	b.n	80984 <pio_configure_pin+0x7c>
   8099e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   809a2:	f000 011f 	and.w	r1, r0, #31
   809a6:	2601      	movs	r6, #1
   809a8:	ea05 0306 	and.w	r3, r5, r6
   809ac:	9300      	str	r3, [sp, #0]
   809ae:	f3c5 0380 	ubfx	r3, r5, #2, #1
   809b2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   809b6:	bf14      	ite	ne
   809b8:	2200      	movne	r2, #0
   809ba:	2201      	moveq	r2, #1
   809bc:	fa06 f101 	lsl.w	r1, r6, r1
   809c0:	4620      	mov	r0, r4
   809c2:	4c04      	ldr	r4, [pc, #16]	; (809d4 <pio_configure_pin+0xcc>)
   809c4:	47a0      	blx	r4
   809c6:	4630      	mov	r0, r6
   809c8:	e7dc      	b.n	80984 <pio_configure_pin+0x7c>
   809ca:	bf00      	nop
   809cc:	000807c9 	.word	0x000807c9
   809d0:	00080807 	.word	0x00080807
   809d4:	00080839 	.word	0x00080839

000809d8 <pmc_switch_mck_to_pllack>:
   809d8:	4a17      	ldr	r2, [pc, #92]	; (80a38 <pmc_switch_mck_to_pllack+0x60>)
   809da:	6b13      	ldr	r3, [r2, #48]	; 0x30
   809dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   809e0:	4318      	orrs	r0, r3
   809e2:	6310      	str	r0, [r2, #48]	; 0x30
   809e4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809e6:	f013 0f08 	tst.w	r3, #8
   809ea:	d10a      	bne.n	80a02 <pmc_switch_mck_to_pllack+0x2a>
   809ec:	f44f 6300 	mov.w	r3, #2048	; 0x800
   809f0:	4911      	ldr	r1, [pc, #68]	; (80a38 <pmc_switch_mck_to_pllack+0x60>)
   809f2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   809f4:	f012 0f08 	tst.w	r2, #8
   809f8:	d103      	bne.n	80a02 <pmc_switch_mck_to_pllack+0x2a>
   809fa:	3b01      	subs	r3, #1
   809fc:	d1f9      	bne.n	809f2 <pmc_switch_mck_to_pllack+0x1a>
   809fe:	2001      	movs	r0, #1
   80a00:	4770      	bx	lr
   80a02:	4a0d      	ldr	r2, [pc, #52]	; (80a38 <pmc_switch_mck_to_pllack+0x60>)
   80a04:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80a06:	f023 0303 	bic.w	r3, r3, #3
   80a0a:	f043 0302 	orr.w	r3, r3, #2
   80a0e:	6313      	str	r3, [r2, #48]	; 0x30
   80a10:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80a12:	f013 0f08 	tst.w	r3, #8
   80a16:	d10a      	bne.n	80a2e <pmc_switch_mck_to_pllack+0x56>
   80a18:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80a1c:	4906      	ldr	r1, [pc, #24]	; (80a38 <pmc_switch_mck_to_pllack+0x60>)
   80a1e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80a20:	f012 0f08 	tst.w	r2, #8
   80a24:	d105      	bne.n	80a32 <pmc_switch_mck_to_pllack+0x5a>
   80a26:	3b01      	subs	r3, #1
   80a28:	d1f9      	bne.n	80a1e <pmc_switch_mck_to_pllack+0x46>
   80a2a:	2001      	movs	r0, #1
   80a2c:	4770      	bx	lr
   80a2e:	2000      	movs	r0, #0
   80a30:	4770      	bx	lr
   80a32:	2000      	movs	r0, #0
   80a34:	4770      	bx	lr
   80a36:	bf00      	nop
   80a38:	400e0400 	.word	0x400e0400

00080a3c <pmc_switch_sclk_to_32kxtal>:
   80a3c:	2801      	cmp	r0, #1
   80a3e:	d003      	beq.n	80a48 <pmc_switch_sclk_to_32kxtal+0xc>
   80a40:	4a05      	ldr	r2, [pc, #20]	; (80a58 <pmc_switch_sclk_to_32kxtal+0x1c>)
   80a42:	4b06      	ldr	r3, [pc, #24]	; (80a5c <pmc_switch_sclk_to_32kxtal+0x20>)
   80a44:	601a      	str	r2, [r3, #0]
   80a46:	4770      	bx	lr
   80a48:	4a04      	ldr	r2, [pc, #16]	; (80a5c <pmc_switch_sclk_to_32kxtal+0x20>)
   80a4a:	6893      	ldr	r3, [r2, #8]
   80a4c:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80a50:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   80a54:	6093      	str	r3, [r2, #8]
   80a56:	e7f3      	b.n	80a40 <pmc_switch_sclk_to_32kxtal+0x4>
   80a58:	a5000008 	.word	0xa5000008
   80a5c:	400e1210 	.word	0x400e1210

00080a60 <pmc_osc_is_ready_32kxtal>:
   80a60:	4b05      	ldr	r3, [pc, #20]	; (80a78 <pmc_osc_is_ready_32kxtal+0x18>)
   80a62:	695b      	ldr	r3, [r3, #20]
   80a64:	f013 0f80 	tst.w	r3, #128	; 0x80
   80a68:	bf1d      	ittte	ne
   80a6a:	4b04      	ldrne	r3, [pc, #16]	; (80a7c <pmc_osc_is_ready_32kxtal+0x1c>)
   80a6c:	6e98      	ldrne	r0, [r3, #104]	; 0x68
   80a6e:	f3c0 10c0 	ubfxne	r0, r0, #7, #1
   80a72:	2000      	moveq	r0, #0
   80a74:	4770      	bx	lr
   80a76:	bf00      	nop
   80a78:	400e1210 	.word	0x400e1210
   80a7c:	400e0400 	.word	0x400e0400

00080a80 <pmc_osc_enable_main_xtal>:
   80a80:	4a08      	ldr	r2, [pc, #32]	; (80aa4 <pmc_osc_enable_main_xtal+0x24>)
   80a82:	6a13      	ldr	r3, [r2, #32]
   80a84:	f023 0303 	bic.w	r3, r3, #3
   80a88:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80a8c:	f043 0301 	orr.w	r3, r3, #1
   80a90:	0200      	lsls	r0, r0, #8
   80a92:	b280      	uxth	r0, r0
   80a94:	4303      	orrs	r3, r0
   80a96:	6213      	str	r3, [r2, #32]
   80a98:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80a9a:	f013 0f01 	tst.w	r3, #1
   80a9e:	d0fb      	beq.n	80a98 <pmc_osc_enable_main_xtal+0x18>
   80aa0:	4770      	bx	lr
   80aa2:	bf00      	nop
   80aa4:	400e0400 	.word	0x400e0400

00080aa8 <pmc_osc_is_ready_main_xtal>:
   80aa8:	4b02      	ldr	r3, [pc, #8]	; (80ab4 <pmc_osc_is_ready_main_xtal+0xc>)
   80aaa:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80aac:	f000 0001 	and.w	r0, r0, #1
   80ab0:	4770      	bx	lr
   80ab2:	bf00      	nop
   80ab4:	400e0400 	.word	0x400e0400

00080ab8 <pmc_osc_is_ready_mainck>:
   80ab8:	4b02      	ldr	r3, [pc, #8]	; (80ac4 <pmc_osc_is_ready_mainck+0xc>)
   80aba:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80abc:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80ac0:	4770      	bx	lr
   80ac2:	bf00      	nop
   80ac4:	400e0400 	.word	0x400e0400

00080ac8 <pmc_mainck_osc_select>:
   80ac8:	4b06      	ldr	r3, [pc, #24]	; (80ae4 <pmc_mainck_osc_select+0x1c>)
   80aca:	6a1b      	ldr	r3, [r3, #32]
   80acc:	b930      	cbnz	r0, 80adc <pmc_mainck_osc_select+0x14>
   80ace:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
   80ad2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80ad6:	4a03      	ldr	r2, [pc, #12]	; (80ae4 <pmc_mainck_osc_select+0x1c>)
   80ad8:	6213      	str	r3, [r2, #32]
   80ada:	4770      	bx	lr
   80adc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   80ae0:	e7f7      	b.n	80ad2 <pmc_mainck_osc_select+0xa>
   80ae2:	bf00      	nop
   80ae4:	400e0400 	.word	0x400e0400

00080ae8 <pmc_disable_pllack>:
   80ae8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80aec:	4b01      	ldr	r3, [pc, #4]	; (80af4 <pmc_disable_pllack+0xc>)
   80aee:	629a      	str	r2, [r3, #40]	; 0x28
   80af0:	4770      	bx	lr
   80af2:	bf00      	nop
   80af4:	400e0400 	.word	0x400e0400

00080af8 <pmc_is_locked_pllack>:
   80af8:	4b02      	ldr	r3, [pc, #8]	; (80b04 <pmc_is_locked_pllack+0xc>)
   80afa:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80afc:	f000 0002 	and.w	r0, r0, #2
   80b00:	4770      	bx	lr
   80b02:	bf00      	nop
   80b04:	400e0400 	.word	0x400e0400

00080b08 <pmc_enable_periph_clk>:
   80b08:	281d      	cmp	r0, #29
   80b0a:	d80e      	bhi.n	80b2a <pmc_enable_periph_clk+0x22>
   80b0c:	281f      	cmp	r0, #31
   80b0e:	d80e      	bhi.n	80b2e <pmc_enable_periph_clk+0x26>
   80b10:	4b09      	ldr	r3, [pc, #36]	; (80b38 <pmc_enable_periph_clk+0x30>)
   80b12:	699a      	ldr	r2, [r3, #24]
   80b14:	2301      	movs	r3, #1
   80b16:	4083      	lsls	r3, r0
   80b18:	4393      	bics	r3, r2
   80b1a:	d00a      	beq.n	80b32 <pmc_enable_periph_clk+0x2a>
   80b1c:	2301      	movs	r3, #1
   80b1e:	fa03 f000 	lsl.w	r0, r3, r0
   80b22:	4b05      	ldr	r3, [pc, #20]	; (80b38 <pmc_enable_periph_clk+0x30>)
   80b24:	6118      	str	r0, [r3, #16]
   80b26:	2000      	movs	r0, #0
   80b28:	4770      	bx	lr
   80b2a:	2001      	movs	r0, #1
   80b2c:	4770      	bx	lr
   80b2e:	2000      	movs	r0, #0
   80b30:	4770      	bx	lr
   80b32:	2000      	movs	r0, #0
   80b34:	4770      	bx	lr
   80b36:	bf00      	nop
   80b38:	400e0400 	.word	0x400e0400

00080b3c <board_init>:
   80b3c:	4770      	bx	lr
	...

00080b40 <cpu_irq_enter_critical>:
   80b40:	4b0b      	ldr	r3, [pc, #44]	; (80b70 <cpu_irq_enter_critical+0x30>)
   80b42:	681b      	ldr	r3, [r3, #0]
   80b44:	b92b      	cbnz	r3, 80b52 <cpu_irq_enter_critical+0x12>
   80b46:	f3ef 8310 	mrs	r3, PRIMASK
   80b4a:	b13b      	cbz	r3, 80b5c <cpu_irq_enter_critical+0x1c>
   80b4c:	2200      	movs	r2, #0
   80b4e:	4b09      	ldr	r3, [pc, #36]	; (80b74 <cpu_irq_enter_critical+0x34>)
   80b50:	701a      	strb	r2, [r3, #0]
   80b52:	4a07      	ldr	r2, [pc, #28]	; (80b70 <cpu_irq_enter_critical+0x30>)
   80b54:	6813      	ldr	r3, [r2, #0]
   80b56:	3301      	adds	r3, #1
   80b58:	6013      	str	r3, [r2, #0]
   80b5a:	4770      	bx	lr
   80b5c:	b672      	cpsid	i
   80b5e:	f3bf 8f5f 	dmb	sy
   80b62:	2200      	movs	r2, #0
   80b64:	4b04      	ldr	r3, [pc, #16]	; (80b78 <cpu_irq_enter_critical+0x38>)
   80b66:	701a      	strb	r2, [r3, #0]
   80b68:	2201      	movs	r2, #1
   80b6a:	4b02      	ldr	r3, [pc, #8]	; (80b74 <cpu_irq_enter_critical+0x34>)
   80b6c:	701a      	strb	r2, [r3, #0]
   80b6e:	e7f0      	b.n	80b52 <cpu_irq_enter_critical+0x12>
   80b70:	20001068 	.word	0x20001068
   80b74:	2000106c 	.word	0x2000106c
   80b78:	20000124 	.word	0x20000124

00080b7c <cpu_irq_leave_critical>:
   80b7c:	4b07      	ldr	r3, [pc, #28]	; (80b9c <cpu_irq_leave_critical+0x20>)
   80b7e:	681a      	ldr	r2, [r3, #0]
   80b80:	3a01      	subs	r2, #1
   80b82:	601a      	str	r2, [r3, #0]
   80b84:	681b      	ldr	r3, [r3, #0]
   80b86:	b943      	cbnz	r3, 80b9a <cpu_irq_leave_critical+0x1e>
   80b88:	4b05      	ldr	r3, [pc, #20]	; (80ba0 <cpu_irq_leave_critical+0x24>)
   80b8a:	781b      	ldrb	r3, [r3, #0]
   80b8c:	b12b      	cbz	r3, 80b9a <cpu_irq_leave_critical+0x1e>
   80b8e:	2201      	movs	r2, #1
   80b90:	4b04      	ldr	r3, [pc, #16]	; (80ba4 <cpu_irq_leave_critical+0x28>)
   80b92:	701a      	strb	r2, [r3, #0]
   80b94:	f3bf 8f5f 	dmb	sy
   80b98:	b662      	cpsie	i
   80b9a:	4770      	bx	lr
   80b9c:	20001068 	.word	0x20001068
   80ba0:	2000106c 	.word	0x2000106c
   80ba4:	20000124 	.word	0x20000124

00080ba8 <pwm_clocks_generate>:
   80ba8:	b4f0      	push	{r4, r5, r6, r7}
   80baa:	b08c      	sub	sp, #48	; 0x30
   80bac:	4607      	mov	r7, r0
   80bae:	460e      	mov	r6, r1
   80bb0:	ac01      	add	r4, sp, #4
   80bb2:	4d11      	ldr	r5, [pc, #68]	; (80bf8 <pwm_clocks_generate+0x50>)
   80bb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80bb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80bb8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80bba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80bbc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80bc0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80bc4:	aa01      	add	r2, sp, #4
   80bc6:	2300      	movs	r3, #0
   80bc8:	f852 0b04 	ldr.w	r0, [r2], #4
   80bcc:	fbb6 f0f0 	udiv	r0, r6, r0
   80bd0:	fbb0 f0f7 	udiv	r0, r0, r7
   80bd4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   80bd8:	d907      	bls.n	80bea <pwm_clocks_generate+0x42>
   80bda:	3301      	adds	r3, #1
   80bdc:	2b0b      	cmp	r3, #11
   80bde:	d1f3      	bne.n	80bc8 <pwm_clocks_generate+0x20>
   80be0:	f64f 70ff 	movw	r0, #65535	; 0xffff
   80be4:	b00c      	add	sp, #48	; 0x30
   80be6:	bcf0      	pop	{r4, r5, r6, r7}
   80be8:	4770      	bx	lr
   80bea:	2b0a      	cmp	r3, #10
   80bec:	bf94      	ite	ls
   80bee:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
   80bf2:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
   80bf6:	e7f5      	b.n	80be4 <pwm_clocks_generate+0x3c>
   80bf8:	00088afc 	.word	0x00088afc

00080bfc <pwm_init>:
   80bfc:	b570      	push	{r4, r5, r6, lr}
   80bfe:	4606      	mov	r6, r0
   80c00:	460d      	mov	r5, r1
   80c02:	680c      	ldr	r4, [r1, #0]
   80c04:	b144      	cbz	r4, 80c18 <pwm_init+0x1c>
   80c06:	6889      	ldr	r1, [r1, #8]
   80c08:	4620      	mov	r0, r4
   80c0a:	4b0c      	ldr	r3, [pc, #48]	; (80c3c <pwm_init+0x40>)
   80c0c:	4798      	blx	r3
   80c0e:	4604      	mov	r4, r0
   80c10:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80c14:	4298      	cmp	r0, r3
   80c16:	d00c      	beq.n	80c32 <pwm_init+0x36>
   80c18:	6868      	ldr	r0, [r5, #4]
   80c1a:	b140      	cbz	r0, 80c2e <pwm_init+0x32>
   80c1c:	68a9      	ldr	r1, [r5, #8]
   80c1e:	4b07      	ldr	r3, [pc, #28]	; (80c3c <pwm_init+0x40>)
   80c20:	4798      	blx	r3
   80c22:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80c26:	4298      	cmp	r0, r3
   80c28:	d005      	beq.n	80c36 <pwm_init+0x3a>
   80c2a:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
   80c2e:	6034      	str	r4, [r6, #0]
   80c30:	2400      	movs	r4, #0
   80c32:	4620      	mov	r0, r4
   80c34:	bd70      	pop	{r4, r5, r6, pc}
   80c36:	4604      	mov	r4, r0
   80c38:	e7fb      	b.n	80c32 <pwm_init+0x36>
   80c3a:	bf00      	nop
   80c3c:	00080ba9 	.word	0x00080ba9

00080c40 <pwm_channel_init>:
   80c40:	b470      	push	{r4, r5, r6}
   80c42:	680a      	ldr	r2, [r1, #0]
   80c44:	684b      	ldr	r3, [r1, #4]
   80c46:	f003 030f 	and.w	r3, r3, #15
   80c4a:	8a8c      	ldrh	r4, [r1, #20]
   80c4c:	4323      	orrs	r3, r4
   80c4e:	890c      	ldrh	r4, [r1, #8]
   80c50:	4323      	orrs	r3, r4
   80c52:	7a8c      	ldrb	r4, [r1, #10]
   80c54:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
   80c58:	7d8c      	ldrb	r4, [r1, #22]
   80c5a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80c5e:	7dcc      	ldrb	r4, [r1, #23]
   80c60:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
   80c64:	7e0c      	ldrb	r4, [r1, #24]
   80c66:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
   80c6a:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80c6e:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
   80c72:	68cb      	ldr	r3, [r1, #12]
   80c74:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
   80c78:	690b      	ldr	r3, [r1, #16]
   80c7a:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
   80c7e:	7d8b      	ldrb	r3, [r1, #22]
   80c80:	b13b      	cbz	r3, 80c92 <pwm_channel_init+0x52>
   80c82:	8b8c      	ldrh	r4, [r1, #28]
   80c84:	8b4b      	ldrh	r3, [r1, #26]
   80c86:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   80c8a:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   80c8e:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   80c92:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80c94:	f04f 1301 	mov.w	r3, #65537	; 0x10001
   80c98:	4093      	lsls	r3, r2
   80c9a:	43db      	mvns	r3, r3
   80c9c:	401d      	ands	r5, r3
   80c9e:	7fcc      	ldrb	r4, [r1, #31]
   80ca0:	fa04 f602 	lsl.w	r6, r4, r2
   80ca4:	7f8c      	ldrb	r4, [r1, #30]
   80ca6:	4094      	lsls	r4, r2
   80ca8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80cac:	432c      	orrs	r4, r5
   80cae:	6484      	str	r4, [r0, #72]	; 0x48
   80cb0:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80cb2:	4023      	ands	r3, r4
   80cb4:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
   80cb8:	fa04 f502 	lsl.w	r5, r4, r2
   80cbc:	f891 4020 	ldrb.w	r4, [r1, #32]
   80cc0:	4094      	lsls	r4, r2
   80cc2:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   80cc6:	4323      	orrs	r3, r4
   80cc8:	6443      	str	r3, [r0, #68]	; 0x44
   80cca:	2301      	movs	r3, #1
   80ccc:	4093      	lsls	r3, r2
   80cce:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   80cd2:	b31c      	cbz	r4, 80d1c <pwm_channel_init+0xdc>
   80cd4:	6a04      	ldr	r4, [r0, #32]
   80cd6:	431c      	orrs	r4, r3
   80cd8:	6204      	str	r4, [r0, #32]
   80cda:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80cde:	2c01      	cmp	r4, #1
   80ce0:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80ce2:	bf0c      	ite	eq
   80ce4:	431c      	orreq	r4, r3
   80ce6:	439c      	bicne	r4, r3
   80ce8:	6684      	str	r4, [r0, #104]	; 0x68
   80cea:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   80cee:	2c01      	cmp	r4, #1
   80cf0:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80cf2:	bf0c      	ite	eq
   80cf4:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
   80cf8:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
   80cfc:	6683      	str	r3, [r0, #104]	; 0x68
   80cfe:	00d2      	lsls	r2, r2, #3
   80d00:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
   80d02:	23ff      	movs	r3, #255	; 0xff
   80d04:	4093      	lsls	r3, r2
   80d06:	ea24 0403 	bic.w	r4, r4, r3
   80d0a:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   80d0e:	fa03 f202 	lsl.w	r2, r3, r2
   80d12:	4322      	orrs	r2, r4
   80d14:	66c2      	str	r2, [r0, #108]	; 0x6c
   80d16:	2000      	movs	r0, #0
   80d18:	bc70      	pop	{r4, r5, r6}
   80d1a:	4770      	bx	lr
   80d1c:	6a04      	ldr	r4, [r0, #32]
   80d1e:	ea24 0403 	bic.w	r4, r4, r3
   80d22:	6204      	str	r4, [r0, #32]
   80d24:	e7d9      	b.n	80cda <pwm_channel_init+0x9a>

00080d26 <pwm_channel_enable>:
   80d26:	2301      	movs	r3, #1
   80d28:	fa03 f101 	lsl.w	r1, r3, r1
   80d2c:	6041      	str	r1, [r0, #4]
   80d2e:	4770      	bx	lr

00080d30 <pwm_channel_disable>:
   80d30:	2301      	movs	r3, #1
   80d32:	fa03 f101 	lsl.w	r1, r3, r1
   80d36:	6081      	str	r1, [r0, #8]
   80d38:	4770      	bx	lr
	...

00080d3c <rstc_start_software_reset>:
   80d3c:	4b01      	ldr	r3, [pc, #4]	; (80d44 <rstc_start_software_reset+0x8>)
   80d3e:	6003      	str	r3, [r0, #0]
   80d40:	4770      	bx	lr
   80d42:	bf00      	nop
   80d44:	a5000005 	.word	0xa5000005

00080d48 <rtc_enable_interrupt>:
   80d48:	6201      	str	r1, [r0, #32]
   80d4a:	4770      	bx	lr

00080d4c <rtc_get_time>:
   80d4c:	b430      	push	{r4, r5}
   80d4e:	6885      	ldr	r5, [r0, #8]
   80d50:	6884      	ldr	r4, [r0, #8]
   80d52:	42a5      	cmp	r5, r4
   80d54:	d003      	beq.n	80d5e <rtc_get_time+0x12>
   80d56:	6885      	ldr	r5, [r0, #8]
   80d58:	6884      	ldr	r4, [r0, #8]
   80d5a:	42ac      	cmp	r4, r5
   80d5c:	d1fb      	bne.n	80d56 <rtc_get_time+0xa>
   80d5e:	b161      	cbz	r1, 80d7a <rtc_get_time+0x2e>
   80d60:	f3c4 5001 	ubfx	r0, r4, #20, #2
   80d64:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80d68:	f3c4 4003 	ubfx	r0, r4, #16, #4
   80d6c:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80d70:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
   80d74:	bf18      	it	ne
   80d76:	300c      	addne	r0, #12
   80d78:	6008      	str	r0, [r1, #0]
   80d7a:	b142      	cbz	r2, 80d8e <rtc_get_time+0x42>
   80d7c:	f3c4 3102 	ubfx	r1, r4, #12, #3
   80d80:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80d84:	f3c4 2003 	ubfx	r0, r4, #8, #4
   80d88:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   80d8c:	6011      	str	r1, [r2, #0]
   80d8e:	b143      	cbz	r3, 80da2 <rtc_get_time+0x56>
   80d90:	f3c4 1202 	ubfx	r2, r4, #4, #3
   80d94:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80d98:	f004 040f 	and.w	r4, r4, #15
   80d9c:	eb04 0442 	add.w	r4, r4, r2, lsl #1
   80da0:	601c      	str	r4, [r3, #0]
   80da2:	bc30      	pop	{r4, r5}
   80da4:	4770      	bx	lr
	...

00080da8 <rtc_set_time>:
   80da8:	b4f0      	push	{r4, r5, r6, r7}
   80daa:	6844      	ldr	r4, [r0, #4]
   80dac:	f014 0f01 	tst.w	r4, #1
   80db0:	d005      	beq.n	80dbe <rtc_set_time+0x16>
   80db2:	290c      	cmp	r1, #12
   80db4:	d93d      	bls.n	80e32 <rtc_set_time+0x8a>
   80db6:	390c      	subs	r1, #12
   80db8:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   80dbc:	e000      	b.n	80dc0 <rtc_set_time+0x18>
   80dbe:	2700      	movs	r7, #0
   80dc0:	4c1d      	ldr	r4, [pc, #116]	; (80e38 <rtc_set_time+0x90>)
   80dc2:	fba4 5603 	umull	r5, r6, r4, r3
   80dc6:	08f6      	lsrs	r6, r6, #3
   80dc8:	eb06 0586 	add.w	r5, r6, r6, lsl #2
   80dcc:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
   80dd0:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
   80dd4:	fba4 6502 	umull	r6, r5, r4, r2
   80dd8:	08ed      	lsrs	r5, r5, #3
   80dda:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
   80dde:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80de2:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
   80de6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
   80dea:	433b      	orrs	r3, r7
   80dec:	fba4 4201 	umull	r4, r2, r4, r1
   80df0:	08d2      	lsrs	r2, r2, #3
   80df2:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
   80df6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80dfa:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
   80dfe:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   80e02:	6983      	ldr	r3, [r0, #24]
   80e04:	f013 0f04 	tst.w	r3, #4
   80e08:	d0fb      	beq.n	80e02 <rtc_set_time+0x5a>
   80e0a:	6803      	ldr	r3, [r0, #0]
   80e0c:	f043 0301 	orr.w	r3, r3, #1
   80e10:	6003      	str	r3, [r0, #0]
   80e12:	6983      	ldr	r3, [r0, #24]
   80e14:	f013 0f01 	tst.w	r3, #1
   80e18:	d0fb      	beq.n	80e12 <rtc_set_time+0x6a>
   80e1a:	2301      	movs	r3, #1
   80e1c:	61c3      	str	r3, [r0, #28]
   80e1e:	6081      	str	r1, [r0, #8]
   80e20:	6803      	ldr	r3, [r0, #0]
   80e22:	f023 0301 	bic.w	r3, r3, #1
   80e26:	6003      	str	r3, [r0, #0]
   80e28:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80e2a:	f000 0001 	and.w	r0, r0, #1
   80e2e:	bcf0      	pop	{r4, r5, r6, r7}
   80e30:	4770      	bx	lr
   80e32:	2700      	movs	r7, #0
   80e34:	e7c4      	b.n	80dc0 <rtc_set_time+0x18>
   80e36:	bf00      	nop
   80e38:	cccccccd 	.word	0xcccccccd

00080e3c <rtc_get_date>:
   80e3c:	b4f0      	push	{r4, r5, r6, r7}
   80e3e:	9e04      	ldr	r6, [sp, #16]
   80e40:	68c5      	ldr	r5, [r0, #12]
   80e42:	68c4      	ldr	r4, [r0, #12]
   80e44:	42a5      	cmp	r5, r4
   80e46:	d003      	beq.n	80e50 <rtc_get_date+0x14>
   80e48:	68c5      	ldr	r5, [r0, #12]
   80e4a:	68c4      	ldr	r4, [r0, #12]
   80e4c:	42ac      	cmp	r4, r5
   80e4e:	d1fb      	bne.n	80e48 <rtc_get_date+0xc>
   80e50:	b199      	cbz	r1, 80e7a <rtc_get_date+0x3e>
   80e52:	f3c4 3003 	ubfx	r0, r4, #12, #4
   80e56:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   80e5a:	f3c4 2703 	ubfx	r7, r4, #8, #4
   80e5e:	eb07 0740 	add.w	r7, r7, r0, lsl #1
   80e62:	f3c4 1002 	ubfx	r0, r4, #4, #3
   80e66:	eb00 0580 	add.w	r5, r0, r0, lsl #2
   80e6a:	f004 000f 	and.w	r0, r4, #15
   80e6e:	eb00 0045 	add.w	r0, r0, r5, lsl #1
   80e72:	2564      	movs	r5, #100	; 0x64
   80e74:	fb05 7000 	mla	r0, r5, r0, r7
   80e78:	6008      	str	r0, [r1, #0]
   80e7a:	b142      	cbz	r2, 80e8e <rtc_get_date+0x52>
   80e7c:	f3c4 5000 	ubfx	r0, r4, #20, #1
   80e80:	0081      	lsls	r1, r0, #2
   80e82:	4408      	add	r0, r1
   80e84:	f3c4 4103 	ubfx	r1, r4, #16, #4
   80e88:	eb01 0140 	add.w	r1, r1, r0, lsl #1
   80e8c:	6011      	str	r1, [r2, #0]
   80e8e:	b143      	cbz	r3, 80ea2 <rtc_get_date+0x66>
   80e90:	f3c4 7201 	ubfx	r2, r4, #28, #2
   80e94:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80e98:	f3c4 6103 	ubfx	r1, r4, #24, #4
   80e9c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   80ea0:	601a      	str	r2, [r3, #0]
   80ea2:	b116      	cbz	r6, 80eaa <rtc_get_date+0x6e>
   80ea4:	f3c4 5442 	ubfx	r4, r4, #21, #3
   80ea8:	6034      	str	r4, [r6, #0]
   80eaa:	bcf0      	pop	{r4, r5, r6, r7}
   80eac:	4770      	bx	lr
	...

00080eb0 <rtc_set_date>:
   80eb0:	b470      	push	{r4, r5, r6}
   80eb2:	4d2a      	ldr	r5, [pc, #168]	; (80f5c <rtc_set_date+0xac>)
   80eb4:	fba5 4603 	umull	r4, r6, r5, r3
   80eb8:	08f6      	lsrs	r6, r6, #3
   80eba:	9c03      	ldr	r4, [sp, #12]
   80ebc:	0564      	lsls	r4, r4, #21
   80ebe:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
   80ec2:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   80ec6:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
   80eca:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
   80ece:	fba5 6402 	umull	r6, r4, r5, r2
   80ed2:	08e4      	lsrs	r4, r4, #3
   80ed4:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
   80ed8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80edc:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
   80ee0:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   80ee4:	4b1e      	ldr	r3, [pc, #120]	; (80f60 <rtc_set_date+0xb0>)
   80ee6:	fba3 4301 	umull	r4, r3, r3, r1
   80eea:	099b      	lsrs	r3, r3, #6
   80eec:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
   80ef0:	4b1c      	ldr	r3, [pc, #112]	; (80f64 <rtc_set_date+0xb4>)
   80ef2:	fba3 4301 	umull	r4, r3, r3, r1
   80ef6:	095b      	lsrs	r3, r3, #5
   80ef8:	fba5 6403 	umull	r6, r4, r5, r3
   80efc:	08e4      	lsrs	r4, r4, #3
   80efe:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   80f02:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
   80f06:	431a      	orrs	r2, r3
   80f08:	fba5 4301 	umull	r4, r3, r5, r1
   80f0c:	08db      	lsrs	r3, r3, #3
   80f0e:	eb03 0483 	add.w	r4, r3, r3, lsl #2
   80f12:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
   80f16:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   80f1a:	fba5 1503 	umull	r1, r5, r5, r3
   80f1e:	08ed      	lsrs	r5, r5, #3
   80f20:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   80f24:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
   80f28:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
   80f2c:	6983      	ldr	r3, [r0, #24]
   80f2e:	f013 0f04 	tst.w	r3, #4
   80f32:	d0fb      	beq.n	80f2c <rtc_set_date+0x7c>
   80f34:	6803      	ldr	r3, [r0, #0]
   80f36:	f043 0302 	orr.w	r3, r3, #2
   80f3a:	6003      	str	r3, [r0, #0]
   80f3c:	6983      	ldr	r3, [r0, #24]
   80f3e:	f013 0f01 	tst.w	r3, #1
   80f42:	d0fb      	beq.n	80f3c <rtc_set_date+0x8c>
   80f44:	2301      	movs	r3, #1
   80f46:	61c3      	str	r3, [r0, #28]
   80f48:	60c2      	str	r2, [r0, #12]
   80f4a:	6803      	ldr	r3, [r0, #0]
   80f4c:	f023 0302 	bic.w	r3, r3, #2
   80f50:	6003      	str	r3, [r0, #0]
   80f52:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   80f54:	f000 0002 	and.w	r0, r0, #2
   80f58:	bc70      	pop	{r4, r5, r6}
   80f5a:	4770      	bx	lr
   80f5c:	cccccccd 	.word	0xcccccccd
   80f60:	10624dd3 	.word	0x10624dd3
   80f64:	51eb851f 	.word	0x51eb851f

00080f68 <rtc_clear_status>:
   80f68:	61c1      	str	r1, [r0, #28]
   80f6a:	4770      	bx	lr

00080f6c <tc_init>:
   80f6c:	b410      	push	{r4}
   80f6e:	0189      	lsls	r1, r1, #6
   80f70:	1843      	adds	r3, r0, r1
   80f72:	2402      	movs	r4, #2
   80f74:	5044      	str	r4, [r0, r1]
   80f76:	f04f 31ff 	mov.w	r1, #4294967295
   80f7a:	6299      	str	r1, [r3, #40]	; 0x28
   80f7c:	6a19      	ldr	r1, [r3, #32]
   80f7e:	605a      	str	r2, [r3, #4]
   80f80:	bc10      	pop	{r4}
   80f82:	4770      	bx	lr

00080f84 <tc_start>:
   80f84:	0189      	lsls	r1, r1, #6
   80f86:	2305      	movs	r3, #5
   80f88:	5043      	str	r3, [r0, r1]
   80f8a:	4770      	bx	lr

00080f8c <tc_write_ra>:
   80f8c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80f90:	614a      	str	r2, [r1, #20]
   80f92:	4770      	bx	lr

00080f94 <tc_write_rc>:
   80f94:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80f98:	61ca      	str	r2, [r1, #28]
   80f9a:	4770      	bx	lr

00080f9c <tc_enable_interrupt>:
   80f9c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80fa0:	624a      	str	r2, [r1, #36]	; 0x24
   80fa2:	4770      	bx	lr

00080fa4 <tc_get_status>:
   80fa4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80fa8:	6a08      	ldr	r0, [r1, #32]
   80faa:	4770      	bx	lr

00080fac <uart_init>:
   80fac:	b410      	push	{r4}
   80fae:	23ac      	movs	r3, #172	; 0xac
   80fb0:	6003      	str	r3, [r0, #0]
   80fb2:	680b      	ldr	r3, [r1, #0]
   80fb4:	684a      	ldr	r2, [r1, #4]
   80fb6:	fbb3 f3f2 	udiv	r3, r3, r2
   80fba:	091b      	lsrs	r3, r3, #4
   80fbc:	1e5c      	subs	r4, r3, #1
   80fbe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80fc2:	4294      	cmp	r4, r2
   80fc4:	d80b      	bhi.n	80fde <uart_init+0x32>
   80fc6:	6203      	str	r3, [r0, #32]
   80fc8:	688b      	ldr	r3, [r1, #8]
   80fca:	6043      	str	r3, [r0, #4]
   80fcc:	f240 2302 	movw	r3, #514	; 0x202
   80fd0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   80fd4:	2350      	movs	r3, #80	; 0x50
   80fd6:	6003      	str	r3, [r0, #0]
   80fd8:	2000      	movs	r0, #0
   80fda:	bc10      	pop	{r4}
   80fdc:	4770      	bx	lr
   80fde:	2001      	movs	r0, #1
   80fe0:	e7fb      	b.n	80fda <uart_init+0x2e>

00080fe2 <uart_enable_interrupt>:
   80fe2:	6081      	str	r1, [r0, #8]
   80fe4:	4770      	bx	lr

00080fe6 <uart_disable_interrupt>:
   80fe6:	60c1      	str	r1, [r0, #12]
   80fe8:	4770      	bx	lr

00080fea <uart_get_status>:
   80fea:	6940      	ldr	r0, [r0, #20]
   80fec:	4770      	bx	lr

00080fee <uart_is_rx_ready>:
   80fee:	6940      	ldr	r0, [r0, #20]
   80ff0:	f000 0001 	and.w	r0, r0, #1
   80ff4:	4770      	bx	lr

00080ff6 <uart_read>:
   80ff6:	6943      	ldr	r3, [r0, #20]
   80ff8:	f013 0f01 	tst.w	r3, #1
   80ffc:	bf1d      	ittte	ne
   80ffe:	6983      	ldrne	r3, [r0, #24]
   81000:	700b      	strbne	r3, [r1, #0]
   81002:	2000      	movne	r0, #0
   81004:	2001      	moveq	r0, #1
   81006:	4770      	bx	lr

00081008 <wdt_disable>:
   81008:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   8100c:	6043      	str	r3, [r0, #4]
   8100e:	4770      	bx	lr

00081010 <Dummy_Handler>:
   81010:	e7fe      	b.n	81010 <Dummy_Handler>
	...

00081014 <Reset_Handler>:
   81014:	b508      	push	{r3, lr}
   81016:	4b1c      	ldr	r3, [pc, #112]	; (81088 <Reset_Handler+0x74>)
   81018:	4a1c      	ldr	r2, [pc, #112]	; (8108c <Reset_Handler+0x78>)
   8101a:	429a      	cmp	r2, r3
   8101c:	d010      	beq.n	81040 <Reset_Handler+0x2c>
   8101e:	4b1c      	ldr	r3, [pc, #112]	; (81090 <Reset_Handler+0x7c>)
   81020:	4a19      	ldr	r2, [pc, #100]	; (81088 <Reset_Handler+0x74>)
   81022:	429a      	cmp	r2, r3
   81024:	d20c      	bcs.n	81040 <Reset_Handler+0x2c>
   81026:	3b01      	subs	r3, #1
   81028:	1a9b      	subs	r3, r3, r2
   8102a:	f023 0303 	bic.w	r3, r3, #3
   8102e:	3304      	adds	r3, #4
   81030:	4413      	add	r3, r2
   81032:	4916      	ldr	r1, [pc, #88]	; (8108c <Reset_Handler+0x78>)
   81034:	f851 0b04 	ldr.w	r0, [r1], #4
   81038:	f842 0b04 	str.w	r0, [r2], #4
   8103c:	429a      	cmp	r2, r3
   8103e:	d1f9      	bne.n	81034 <Reset_Handler+0x20>
   81040:	4b14      	ldr	r3, [pc, #80]	; (81094 <Reset_Handler+0x80>)
   81042:	4a15      	ldr	r2, [pc, #84]	; (81098 <Reset_Handler+0x84>)
   81044:	429a      	cmp	r2, r3
   81046:	d20a      	bcs.n	8105e <Reset_Handler+0x4a>
   81048:	3b01      	subs	r3, #1
   8104a:	1a9b      	subs	r3, r3, r2
   8104c:	f023 0303 	bic.w	r3, r3, #3
   81050:	3304      	adds	r3, #4
   81052:	4413      	add	r3, r2
   81054:	2100      	movs	r1, #0
   81056:	f842 1b04 	str.w	r1, [r2], #4
   8105a:	4293      	cmp	r3, r2
   8105c:	d1fb      	bne.n	81056 <Reset_Handler+0x42>
   8105e:	4b0f      	ldr	r3, [pc, #60]	; (8109c <Reset_Handler+0x88>)
   81060:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   81064:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81068:	490d      	ldr	r1, [pc, #52]	; (810a0 <Reset_Handler+0x8c>)
   8106a:	608a      	str	r2, [r1, #8]
   8106c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   81070:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
   81074:	d203      	bcs.n	8107e <Reset_Handler+0x6a>
   81076:	688b      	ldr	r3, [r1, #8]
   81078:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   8107c:	608b      	str	r3, [r1, #8]
   8107e:	4b09      	ldr	r3, [pc, #36]	; (810a4 <Reset_Handler+0x90>)
   81080:	4798      	blx	r3
   81082:	4b09      	ldr	r3, [pc, #36]	; (810a8 <Reset_Handler+0x94>)
   81084:	4798      	blx	r3
   81086:	e7fe      	b.n	81086 <Reset_Handler+0x72>
   81088:	20000000 	.word	0x20000000
   8108c:	00089b2c 	.word	0x00089b2c
   81090:	20000fd8 	.word	0x20000fd8
   81094:	200018cc 	.word	0x200018cc
   81098:	20000fd8 	.word	0x20000fd8
   8109c:	00080000 	.word	0x00080000
   810a0:	e000ed00 	.word	0xe000ed00
   810a4:	00083ea9 	.word	0x00083ea9
   810a8:	00083939 	.word	0x00083939

000810ac <SystemCoreClockUpdate>:
   810ac:	4b3d      	ldr	r3, [pc, #244]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   810ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   810b0:	f003 0303 	and.w	r3, r3, #3
   810b4:	2b03      	cmp	r3, #3
   810b6:	d80e      	bhi.n	810d6 <SystemCoreClockUpdate+0x2a>
   810b8:	e8df f003 	tbb	[pc, r3]
   810bc:	38381c02 	.word	0x38381c02
   810c0:	4b39      	ldr	r3, [pc, #228]	; (811a8 <SystemCoreClockUpdate+0xfc>)
   810c2:	695b      	ldr	r3, [r3, #20]
   810c4:	f013 0f80 	tst.w	r3, #128	; 0x80
   810c8:	bf14      	ite	ne
   810ca:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   810ce:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   810d2:	4b36      	ldr	r3, [pc, #216]	; (811ac <SystemCoreClockUpdate+0x100>)
   810d4:	601a      	str	r2, [r3, #0]
   810d6:	4b33      	ldr	r3, [pc, #204]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   810d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   810da:	f003 0370 	and.w	r3, r3, #112	; 0x70
   810de:	2b70      	cmp	r3, #112	; 0x70
   810e0:	d057      	beq.n	81192 <SystemCoreClockUpdate+0xe6>
   810e2:	4b30      	ldr	r3, [pc, #192]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   810e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   810e6:	4931      	ldr	r1, [pc, #196]	; (811ac <SystemCoreClockUpdate+0x100>)
   810e8:	f3c2 1202 	ubfx	r2, r2, #4, #3
   810ec:	680b      	ldr	r3, [r1, #0]
   810ee:	40d3      	lsrs	r3, r2
   810f0:	600b      	str	r3, [r1, #0]
   810f2:	4770      	bx	lr
   810f4:	4b2b      	ldr	r3, [pc, #172]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   810f6:	6a1b      	ldr	r3, [r3, #32]
   810f8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   810fc:	d003      	beq.n	81106 <SystemCoreClockUpdate+0x5a>
   810fe:	4a2c      	ldr	r2, [pc, #176]	; (811b0 <SystemCoreClockUpdate+0x104>)
   81100:	4b2a      	ldr	r3, [pc, #168]	; (811ac <SystemCoreClockUpdate+0x100>)
   81102:	601a      	str	r2, [r3, #0]
   81104:	e7e7      	b.n	810d6 <SystemCoreClockUpdate+0x2a>
   81106:	4a2b      	ldr	r2, [pc, #172]	; (811b4 <SystemCoreClockUpdate+0x108>)
   81108:	4b28      	ldr	r3, [pc, #160]	; (811ac <SystemCoreClockUpdate+0x100>)
   8110a:	601a      	str	r2, [r3, #0]
   8110c:	4b25      	ldr	r3, [pc, #148]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   8110e:	6a1b      	ldr	r3, [r3, #32]
   81110:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81114:	2b10      	cmp	r3, #16
   81116:	d005      	beq.n	81124 <SystemCoreClockUpdate+0x78>
   81118:	2b20      	cmp	r3, #32
   8111a:	d1dc      	bne.n	810d6 <SystemCoreClockUpdate+0x2a>
   8111c:	4a24      	ldr	r2, [pc, #144]	; (811b0 <SystemCoreClockUpdate+0x104>)
   8111e:	4b23      	ldr	r3, [pc, #140]	; (811ac <SystemCoreClockUpdate+0x100>)
   81120:	601a      	str	r2, [r3, #0]
   81122:	e7d8      	b.n	810d6 <SystemCoreClockUpdate+0x2a>
   81124:	4a24      	ldr	r2, [pc, #144]	; (811b8 <SystemCoreClockUpdate+0x10c>)
   81126:	4b21      	ldr	r3, [pc, #132]	; (811ac <SystemCoreClockUpdate+0x100>)
   81128:	601a      	str	r2, [r3, #0]
   8112a:	e7d4      	b.n	810d6 <SystemCoreClockUpdate+0x2a>
   8112c:	4b1d      	ldr	r3, [pc, #116]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   8112e:	6a1b      	ldr	r3, [r3, #32]
   81130:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81134:	d00c      	beq.n	81150 <SystemCoreClockUpdate+0xa4>
   81136:	4a1e      	ldr	r2, [pc, #120]	; (811b0 <SystemCoreClockUpdate+0x104>)
   81138:	4b1c      	ldr	r3, [pc, #112]	; (811ac <SystemCoreClockUpdate+0x100>)
   8113a:	601a      	str	r2, [r3, #0]
   8113c:	4b19      	ldr	r3, [pc, #100]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   8113e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81140:	f003 0303 	and.w	r3, r3, #3
   81144:	2b02      	cmp	r3, #2
   81146:	d016      	beq.n	81176 <SystemCoreClockUpdate+0xca>
   81148:	4a1c      	ldr	r2, [pc, #112]	; (811bc <SystemCoreClockUpdate+0x110>)
   8114a:	4b18      	ldr	r3, [pc, #96]	; (811ac <SystemCoreClockUpdate+0x100>)
   8114c:	601a      	str	r2, [r3, #0]
   8114e:	e7c2      	b.n	810d6 <SystemCoreClockUpdate+0x2a>
   81150:	4a18      	ldr	r2, [pc, #96]	; (811b4 <SystemCoreClockUpdate+0x108>)
   81152:	4b16      	ldr	r3, [pc, #88]	; (811ac <SystemCoreClockUpdate+0x100>)
   81154:	601a      	str	r2, [r3, #0]
   81156:	4b13      	ldr	r3, [pc, #76]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   81158:	6a1b      	ldr	r3, [r3, #32]
   8115a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8115e:	2b10      	cmp	r3, #16
   81160:	d005      	beq.n	8116e <SystemCoreClockUpdate+0xc2>
   81162:	2b20      	cmp	r3, #32
   81164:	d1ea      	bne.n	8113c <SystemCoreClockUpdate+0x90>
   81166:	4a12      	ldr	r2, [pc, #72]	; (811b0 <SystemCoreClockUpdate+0x104>)
   81168:	4b10      	ldr	r3, [pc, #64]	; (811ac <SystemCoreClockUpdate+0x100>)
   8116a:	601a      	str	r2, [r3, #0]
   8116c:	e7e6      	b.n	8113c <SystemCoreClockUpdate+0x90>
   8116e:	4a12      	ldr	r2, [pc, #72]	; (811b8 <SystemCoreClockUpdate+0x10c>)
   81170:	4b0e      	ldr	r3, [pc, #56]	; (811ac <SystemCoreClockUpdate+0x100>)
   81172:	601a      	str	r2, [r3, #0]
   81174:	e7e2      	b.n	8113c <SystemCoreClockUpdate+0x90>
   81176:	4a0b      	ldr	r2, [pc, #44]	; (811a4 <SystemCoreClockUpdate+0xf8>)
   81178:	6a91      	ldr	r1, [r2, #40]	; 0x28
   8117a:	6a92      	ldr	r2, [r2, #40]	; 0x28
   8117c:	480b      	ldr	r0, [pc, #44]	; (811ac <SystemCoreClockUpdate+0x100>)
   8117e:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81182:	6803      	ldr	r3, [r0, #0]
   81184:	fb01 3303 	mla	r3, r1, r3, r3
   81188:	b2d2      	uxtb	r2, r2
   8118a:	fbb3 f3f2 	udiv	r3, r3, r2
   8118e:	6003      	str	r3, [r0, #0]
   81190:	e7a1      	b.n	810d6 <SystemCoreClockUpdate+0x2a>
   81192:	4a06      	ldr	r2, [pc, #24]	; (811ac <SystemCoreClockUpdate+0x100>)
   81194:	6813      	ldr	r3, [r2, #0]
   81196:	490a      	ldr	r1, [pc, #40]	; (811c0 <SystemCoreClockUpdate+0x114>)
   81198:	fba1 1303 	umull	r1, r3, r1, r3
   8119c:	085b      	lsrs	r3, r3, #1
   8119e:	6013      	str	r3, [r2, #0]
   811a0:	4770      	bx	lr
   811a2:	bf00      	nop
   811a4:	400e0400 	.word	0x400e0400
   811a8:	400e1210 	.word	0x400e1210
   811ac:	20000128 	.word	0x20000128
   811b0:	00b71b00 	.word	0x00b71b00
   811b4:	003d0900 	.word	0x003d0900
   811b8:	007a1200 	.word	0x007a1200
   811bc:	0e4e1c00 	.word	0x0e4e1c00
   811c0:	aaaaaaab 	.word	0xaaaaaaab

000811c4 <_sbrk>:
   811c4:	4b0a      	ldr	r3, [pc, #40]	; (811f0 <_sbrk+0x2c>)
   811c6:	681b      	ldr	r3, [r3, #0]
   811c8:	b153      	cbz	r3, 811e0 <_sbrk+0x1c>
   811ca:	4b09      	ldr	r3, [pc, #36]	; (811f0 <_sbrk+0x2c>)
   811cc:	681b      	ldr	r3, [r3, #0]
   811ce:	181a      	adds	r2, r3, r0
   811d0:	4908      	ldr	r1, [pc, #32]	; (811f4 <_sbrk+0x30>)
   811d2:	4291      	cmp	r1, r2
   811d4:	db08      	blt.n	811e8 <_sbrk+0x24>
   811d6:	4610      	mov	r0, r2
   811d8:	4a05      	ldr	r2, [pc, #20]	; (811f0 <_sbrk+0x2c>)
   811da:	6010      	str	r0, [r2, #0]
   811dc:	4618      	mov	r0, r3
   811de:	4770      	bx	lr
   811e0:	4a05      	ldr	r2, [pc, #20]	; (811f8 <_sbrk+0x34>)
   811e2:	4b03      	ldr	r3, [pc, #12]	; (811f0 <_sbrk+0x2c>)
   811e4:	601a      	str	r2, [r3, #0]
   811e6:	e7f0      	b.n	811ca <_sbrk+0x6>
   811e8:	f04f 30ff 	mov.w	r0, #4294967295
   811ec:	4770      	bx	lr
   811ee:	bf00      	nop
   811f0:	20001070 	.word	0x20001070
   811f4:	20083ffc 	.word	0x20083ffc
   811f8:	20084000 	.word	0x20084000

000811fc <Test>:
	PH_CMD_RELAIS_1,
	PH_CMD_RELAIS_2
};

void Test(uint32_t sc, uint32_t phase)
{
   811fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81200:	b084      	sub	sp, #16
   81202:	9103      	str	r1, [sp, #12]
	switch(sc)
   81204:	2864      	cmp	r0, #100	; 0x64
   81206:	f000 80dc 	beq.w	813c2 <Test+0x1c6>
   8120a:	2866      	cmp	r0, #102	; 0x66
   8120c:	f040 8123 	bne.w	81456 <Test+0x25a>
		phase<<=8;
		phase&=0xFF00;
		phase|=PH_CMD_MOSFET;
		//no break;
	case TEST_RUN:
		sprintf(buf,"\r\nPH:%d--%d\r\n",*((char*)&phase+1),*((char*)&phase+0));
   81210:	f89d 700d 	ldrb.w	r7, [sp, #13]
   81214:	4c9c      	ldr	r4, [pc, #624]	; (81488 <Test+0x28c>)
   81216:	f89d 300c 	ldrb.w	r3, [sp, #12]
   8121a:	463a      	mov	r2, r7
   8121c:	499b      	ldr	r1, [pc, #620]	; (8148c <Test+0x290>)
   8121e:	4620      	mov	r0, r4
   81220:	4d9b      	ldr	r5, [pc, #620]	; (81490 <Test+0x294>)
   81222:	47a8      	blx	r5
		Putstr(buf);
   81224:	4621      	mov	r1, r4
   81226:	2067      	movs	r0, #103	; 0x67
   81228:	4c9a      	ldr	r4, [pc, #616]	; (81494 <Test+0x298>)
   8122a:	47a0      	blx	r4

		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   8122c:	499a      	ldr	r1, [pc, #616]	; (81498 <Test+0x29c>)
   8122e:	2067      	movs	r0, #103	; 0x67
   81230:	47a0      	blx	r4
   81232:	4d9a      	ldr	r5, [pc, #616]	; (8149c <Test+0x2a0>)
   81234:	4629      	mov	r1, r5
   81236:	2067      	movs	r0, #103	; 0x67
   81238:	47a0      	blx	r4
   8123a:	200e      	movs	r0, #14
   8123c:	4b98      	ldr	r3, [pc, #608]	; (814a0 <Test+0x2a4>)
   8123e:	4798      	blx	r3
   81240:	2800      	cmp	r0, #0
   81242:	f040 80c9 	bne.w	813d8 <Test+0x1dc>
   81246:	4997      	ldr	r1, [pc, #604]	; (814a4 <Test+0x2a8>)
   81248:	2067      	movs	r0, #103	; 0x67
   8124a:	47a0      	blx	r4
   8124c:	4c96      	ldr	r4, [pc, #600]	; (814a8 <Test+0x2ac>)
   8124e:	4621      	mov	r1, r4
   81250:	2067      	movs	r0, #103	; 0x67
   81252:	4e90      	ldr	r6, [pc, #576]	; (81494 <Test+0x298>)
   81254:	47b0      	blx	r6
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81256:	4995      	ldr	r1, [pc, #596]	; (814ac <Test+0x2b0>)
   81258:	2067      	movs	r0, #103	; 0x67
   8125a:	47b0      	blx	r6
   8125c:	4629      	mov	r1, r5
   8125e:	2067      	movs	r0, #103	; 0x67
   81260:	47b0      	blx	r6
   81262:	200f      	movs	r0, #15
   81264:	4b8e      	ldr	r3, [pc, #568]	; (814a0 <Test+0x2a4>)
   81266:	4798      	blx	r3
   81268:	2800      	cmp	r0, #0
   8126a:	f040 80ba 	bne.w	813e2 <Test+0x1e6>
   8126e:	498d      	ldr	r1, [pc, #564]	; (814a4 <Test+0x2a8>)
   81270:	2067      	movs	r0, #103	; 0x67
   81272:	47b0      	blx	r6
   81274:	4621      	mov	r1, r4
   81276:	2067      	movs	r0, #103	; 0x67
   81278:	f8df 8218 	ldr.w	r8, [pc, #536]	; 81494 <Test+0x298>
   8127c:	47c0      	blx	r8
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8127e:	498c      	ldr	r1, [pc, #560]	; (814b0 <Test+0x2b4>)
   81280:	2067      	movs	r0, #103	; 0x67
   81282:	47c0      	blx	r8
   81284:	4e8b      	ldr	r6, [pc, #556]	; (814b4 <Test+0x2b8>)
   81286:	4631      	mov	r1, r6
   81288:	2067      	movs	r0, #103	; 0x67
   8128a:	47c0      	blx	r8
   8128c:	2010      	movs	r0, #16
   8128e:	4b84      	ldr	r3, [pc, #528]	; (814a0 <Test+0x2a4>)
   81290:	4798      	blx	r3
   81292:	2800      	cmp	r0, #0
   81294:	f040 80aa 	bne.w	813ec <Test+0x1f0>
   81298:	4982      	ldr	r1, [pc, #520]	; (814a4 <Test+0x2a8>)
   8129a:	2067      	movs	r0, #103	; 0x67
   8129c:	47c0      	blx	r8
   8129e:	4621      	mov	r1, r4
   812a0:	2067      	movs	r0, #103	; 0x67
   812a2:	f8df 81f0 	ldr.w	r8, [pc, #496]	; 81494 <Test+0x298>
   812a6:	47c0      	blx	r8
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   812a8:	4983      	ldr	r1, [pc, #524]	; (814b8 <Test+0x2bc>)
   812aa:	2067      	movs	r0, #103	; 0x67
   812ac:	47c0      	blx	r8
   812ae:	4631      	mov	r1, r6
   812b0:	2067      	movs	r0, #103	; 0x67
   812b2:	47c0      	blx	r8
   812b4:	2011      	movs	r0, #17
   812b6:	4b7a      	ldr	r3, [pc, #488]	; (814a0 <Test+0x2a4>)
   812b8:	4798      	blx	r3
   812ba:	2800      	cmp	r0, #0
   812bc:	f040 809b 	bne.w	813f6 <Test+0x1fa>
   812c0:	4978      	ldr	r1, [pc, #480]	; (814a4 <Test+0x2a8>)
   812c2:	2067      	movs	r0, #103	; 0x67
   812c4:	47c0      	blx	r8
   812c6:	4621      	mov	r1, r4
   812c8:	2067      	movs	r0, #103	; 0x67
   812ca:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 81494 <Test+0x298>
   812ce:	47c0      	blx	r8
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   812d0:	497a      	ldr	r1, [pc, #488]	; (814bc <Test+0x2c0>)
   812d2:	2067      	movs	r0, #103	; 0x67
   812d4:	47c0      	blx	r8
   812d6:	4631      	mov	r1, r6
   812d8:	2067      	movs	r0, #103	; 0x67
   812da:	47c0      	blx	r8
   812dc:	2018      	movs	r0, #24
   812de:	4b70      	ldr	r3, [pc, #448]	; (814a0 <Test+0x2a4>)
   812e0:	4798      	blx	r3
   812e2:	2800      	cmp	r0, #0
   812e4:	f040 808c 	bne.w	81400 <Test+0x204>
   812e8:	496e      	ldr	r1, [pc, #440]	; (814a4 <Test+0x2a8>)
   812ea:	2067      	movs	r0, #103	; 0x67
   812ec:	47c0      	blx	r8
   812ee:	4621      	mov	r1, r4
   812f0:	2067      	movs	r0, #103	; 0x67
   812f2:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 81494 <Test+0x298>
   812f6:	47c0      	blx	r8
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   812f8:	4971      	ldr	r1, [pc, #452]	; (814c0 <Test+0x2c4>)
   812fa:	2067      	movs	r0, #103	; 0x67
   812fc:	47c0      	blx	r8
   812fe:	4631      	mov	r1, r6
   81300:	2067      	movs	r0, #103	; 0x67
   81302:	47c0      	blx	r8
   81304:	2019      	movs	r0, #25
   81306:	4b66      	ldr	r3, [pc, #408]	; (814a0 <Test+0x2a4>)
   81308:	4798      	blx	r3
   8130a:	2800      	cmp	r0, #0
   8130c:	d17d      	bne.n	8140a <Test+0x20e>
   8130e:	4965      	ldr	r1, [pc, #404]	; (814a4 <Test+0x2a8>)
   81310:	2067      	movs	r0, #103	; 0x67
   81312:	47c0      	blx	r8
   81314:	4621      	mov	r1, r4
   81316:	2067      	movs	r0, #103	; 0x67
   81318:	4e5e      	ldr	r6, [pc, #376]	; (81494 <Test+0x298>)
   8131a:	47b0      	blx	r6
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   8131c:	4969      	ldr	r1, [pc, #420]	; (814c4 <Test+0x2c8>)
   8131e:	2067      	movs	r0, #103	; 0x67
   81320:	47b0      	blx	r6
   81322:	4629      	mov	r1, r5
   81324:	2067      	movs	r0, #103	; 0x67
   81326:	47b0      	blx	r6
   81328:	201a      	movs	r0, #26
   8132a:	4b5d      	ldr	r3, [pc, #372]	; (814a0 <Test+0x2a4>)
   8132c:	4798      	blx	r3
   8132e:	2800      	cmp	r0, #0
   81330:	d170      	bne.n	81414 <Test+0x218>
   81332:	495c      	ldr	r1, [pc, #368]	; (814a4 <Test+0x2a8>)
   81334:	2067      	movs	r0, #103	; 0x67
   81336:	47b0      	blx	r6
   81338:	4621      	mov	r1, r4
   8133a:	2067      	movs	r0, #103	; 0x67
   8133c:	4e55      	ldr	r6, [pc, #340]	; (81494 <Test+0x298>)
   8133e:	47b0      	blx	r6
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   81340:	4961      	ldr	r1, [pc, #388]	; (814c8 <Test+0x2cc>)
   81342:	2067      	movs	r0, #103	; 0x67
   81344:	47b0      	blx	r6
   81346:	4629      	mov	r1, r5
   81348:	2067      	movs	r0, #103	; 0x67
   8134a:	47b0      	blx	r6
   8134c:	201b      	movs	r0, #27
   8134e:	4b54      	ldr	r3, [pc, #336]	; (814a0 <Test+0x2a4>)
   81350:	4798      	blx	r3
   81352:	2800      	cmp	r0, #0
   81354:	d163      	bne.n	8141e <Test+0x222>
   81356:	4953      	ldr	r1, [pc, #332]	; (814a4 <Test+0x2a8>)
   81358:	2067      	movs	r0, #103	; 0x67
   8135a:	47b0      	blx	r6
   8135c:	4621      	mov	r1, r4
   8135e:	2067      	movs	r0, #103	; 0x67
   81360:	4e4c      	ldr	r6, [pc, #304]	; (81494 <Test+0x298>)
   81362:	47b0      	blx	r6
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81364:	4959      	ldr	r1, [pc, #356]	; (814cc <Test+0x2d0>)
   81366:	2067      	movs	r0, #103	; 0x67
   81368:	47b0      	blx	r6
   8136a:	4629      	mov	r1, r5
   8136c:	2067      	movs	r0, #103	; 0x67
   8136e:	47b0      	blx	r6
   81370:	201c      	movs	r0, #28
   81372:	4b4b      	ldr	r3, [pc, #300]	; (814a0 <Test+0x2a4>)
   81374:	4798      	blx	r3
   81376:	2800      	cmp	r0, #0
   81378:	d156      	bne.n	81428 <Test+0x22c>
   8137a:	494a      	ldr	r1, [pc, #296]	; (814a4 <Test+0x2a8>)
   8137c:	2067      	movs	r0, #103	; 0x67
   8137e:	47b0      	blx	r6
   81380:	4621      	mov	r1, r4
   81382:	2067      	movs	r0, #103	; 0x67
   81384:	4e43      	ldr	r6, [pc, #268]	; (81494 <Test+0x298>)
   81386:	47b0      	blx	r6
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81388:	4951      	ldr	r1, [pc, #324]	; (814d0 <Test+0x2d4>)
   8138a:	2067      	movs	r0, #103	; 0x67
   8138c:	47b0      	blx	r6
   8138e:	4629      	mov	r1, r5
   81390:	2067      	movs	r0, #103	; 0x67
   81392:	47b0      	blx	r6
   81394:	201d      	movs	r0, #29
   81396:	4b42      	ldr	r3, [pc, #264]	; (814a0 <Test+0x2a4>)
   81398:	4798      	blx	r3
   8139a:	2800      	cmp	r0, #0
   8139c:	d149      	bne.n	81432 <Test+0x236>
   8139e:	4941      	ldr	r1, [pc, #260]	; (814a4 <Test+0x2a8>)
   813a0:	2067      	movs	r0, #103	; 0x67
   813a2:	47b0      	blx	r6
   813a4:	4621      	mov	r1, r4
   813a6:	2067      	movs	r0, #103	; 0x67
   813a8:	4b3a      	ldr	r3, [pc, #232]	; (81494 <Test+0x298>)
   813aa:	4798      	blx	r3

		switch(mBitsMsk(phase,0xFF))
   813ac:	f89d 300c 	ldrb.w	r3, [sp, #12]
   813b0:	3b01      	subs	r3, #1
   813b2:	2b04      	cmp	r3, #4
   813b4:	f200 80a1 	bhi.w	814fa <Test+0x2fe>
   813b8:	e8df f003 	tbb	[pc, r3]
   813bc:	5e575040 	.word	0x5e575040
   813c0:	98          	.byte	0x98
   813c1:	00          	.byte	0x00
		Putstr("\r\nTest started...\r\n");
   813c2:	4944      	ldr	r1, [pc, #272]	; (814d4 <Test+0x2d8>)
   813c4:	2067      	movs	r0, #103	; 0x67
   813c6:	4b33      	ldr	r3, [pc, #204]	; (81494 <Test+0x298>)
   813c8:	4798      	blx	r3
		phase<<=8;
   813ca:	9b03      	ldr	r3, [sp, #12]
   813cc:	021b      	lsls	r3, r3, #8
		phase&=0xFF00;
   813ce:	b29b      	uxth	r3, r3
		phase|=PH_CMD_MOSFET;
   813d0:	f043 0301 	orr.w	r3, r3, #1
   813d4:	9303      	str	r3, [sp, #12]
   813d6:	e71b      	b.n	81210 <Test+0x14>
		Putstr(PENE_OUVERT_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_OUVERT)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   813d8:	493f      	ldr	r1, [pc, #252]	; (814d8 <Test+0x2dc>)
   813da:	2067      	movs	r0, #103	; 0x67
   813dc:	4b2d      	ldr	r3, [pc, #180]	; (81494 <Test+0x298>)
   813de:	4798      	blx	r3
   813e0:	e734      	b.n	8124c <Test+0x50>
		Putstr(PENE_FERME_NAME);			Putstr("\t: ");		gpio_pin_is_low(PENE_FERME)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   813e2:	493d      	ldr	r1, [pc, #244]	; (814d8 <Test+0x2dc>)
   813e4:	2067      	movs	r0, #103	; 0x67
   813e6:	4b2b      	ldr	r3, [pc, #172]	; (81494 <Test+0x298>)
   813e8:	4798      	blx	r3
   813ea:	e743      	b.n	81274 <Test+0x78>
		Putstr(IN_ILS_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_ILS)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   813ec:	493a      	ldr	r1, [pc, #232]	; (814d8 <Test+0x2dc>)
   813ee:	2067      	movs	r0, #103	; 0x67
   813f0:	4b28      	ldr	r3, [pc, #160]	; (81494 <Test+0x298>)
   813f2:	4798      	blx	r3
   813f4:	e753      	b.n	8129e <Test+0xa2>
		Putstr(IN_SV_NAME);					Putstr("\t\t: ");	gpio_pin_is_low(IN_SV)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   813f6:	4938      	ldr	r1, [pc, #224]	; (814d8 <Test+0x2dc>)
   813f8:	2067      	movs	r0, #103	; 0x67
   813fa:	4b26      	ldr	r3, [pc, #152]	; (81494 <Test+0x298>)
   813fc:	4798      	blx	r3
   813fe:	e762      	b.n	812c6 <Test+0xca>
		Putstr(IN_RADAR_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_RADAR)?Putstr("ON"):Putstr("OFF");			Putstr("\r\n");
   81400:	4935      	ldr	r1, [pc, #212]	; (814d8 <Test+0x2dc>)
   81402:	2067      	movs	r0, #103	; 0x67
   81404:	4b23      	ldr	r3, [pc, #140]	; (81494 <Test+0x298>)
   81406:	4798      	blx	r3
   81408:	e771      	b.n	812ee <Test+0xf2>
		Putstr(IN_DVU_NAME);				Putstr("\t\t: ");	gpio_pin_is_low(IN_DVU)?Putstr("ON"):Putstr("OFF");				Putstr("\r\n");
   8140a:	4933      	ldr	r1, [pc, #204]	; (814d8 <Test+0x2dc>)
   8140c:	2067      	movs	r0, #103	; 0x67
   8140e:	4b21      	ldr	r3, [pc, #132]	; (81494 <Test+0x298>)
   81410:	4798      	blx	r3
   81412:	e77f      	b.n	81314 <Test+0x118>
		Putstr(IN_PREMIERE_ENTREE_NAME);	Putstr("\t: ");		gpio_pin_is_low(IN_PREMIERE_ENTREE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81414:	4930      	ldr	r1, [pc, #192]	; (814d8 <Test+0x2dc>)
   81416:	2067      	movs	r0, #103	; 0x67
   81418:	4b1e      	ldr	r3, [pc, #120]	; (81494 <Test+0x298>)
   8141a:	4798      	blx	r3
   8141c:	e78c      	b.n	81338 <Test+0x13c>
		Putstr(IN_DVU_GENERAL_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_DVU_GENERAL)?Putstr("ON"):Putstr("OFF");		Putstr("\r\n");
   8141e:	492e      	ldr	r1, [pc, #184]	; (814d8 <Test+0x2dc>)
   81420:	2067      	movs	r0, #103	; 0x67
   81422:	4b1c      	ldr	r3, [pc, #112]	; (81494 <Test+0x298>)
   81424:	4798      	blx	r3
   81426:	e799      	b.n	8135c <Test+0x160>
		Putstr(IN_ENTREE_LIBRE_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_LIBRE)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81428:	492b      	ldr	r1, [pc, #172]	; (814d8 <Test+0x2dc>)
   8142a:	2067      	movs	r0, #103	; 0x67
   8142c:	4b19      	ldr	r3, [pc, #100]	; (81494 <Test+0x298>)
   8142e:	4798      	blx	r3
   81430:	e7a6      	b.n	81380 <Test+0x184>
		Putstr(IN_ENTREE_OPTION_NAME);		Putstr("\t: ");		gpio_pin_is_low(IN_ENTREE_OPTION)?Putstr("ON"):Putstr("OFF");	Putstr("\r\n");
   81432:	4929      	ldr	r1, [pc, #164]	; (814d8 <Test+0x2dc>)
   81434:	2067      	movs	r0, #103	; 0x67
   81436:	4b17      	ldr	r3, [pc, #92]	; (81494 <Test+0x298>)
   81438:	4798      	blx	r3
   8143a:	e7b3      	b.n	813a4 <Test+0x1a8>
		{
		case PH_CMD_MOSFET:
			gpio_set_pin_high(CMD_MOSFET);
   8143c:	2020      	movs	r0, #32
   8143e:	4b27      	ldr	r3, [pc, #156]	; (814dc <Test+0x2e0>)
   81440:	4798      	blx	r3
		}
		break;
	default:
		return;
	}
	PushTask(Test,TEST_RUN,++phase,1000);
   81442:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   81446:	9300      	str	r3, [sp, #0]
   81448:	9b03      	ldr	r3, [sp, #12]
   8144a:	3301      	adds	r3, #1
   8144c:	2266      	movs	r2, #102	; 0x66
   8144e:	4924      	ldr	r1, [pc, #144]	; (814e0 <Test+0x2e4>)
   81450:	4610      	mov	r0, r2
   81452:	4c24      	ldr	r4, [pc, #144]	; (814e4 <Test+0x2e8>)
   81454:	47a0      	blx	r4
}
   81456:	b004      	add	sp, #16
   81458:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			gpio_set_pin_low(CMD_MOSFET);
   8145c:	2020      	movs	r0, #32
   8145e:	4b22      	ldr	r3, [pc, #136]	; (814e8 <Test+0x2ec>)
   81460:	4798      	blx	r3
			gpio_set_pin_high(CMD_MOT_SERRURE);
   81462:	2021      	movs	r0, #33	; 0x21
   81464:	4b1d      	ldr	r3, [pc, #116]	; (814dc <Test+0x2e0>)
   81466:	4798      	blx	r3
			break;
   81468:	e7eb      	b.n	81442 <Test+0x246>
			gpio_set_pin_low(CMD_MOT_SERRURE);
   8146a:	2021      	movs	r0, #33	; 0x21
   8146c:	4b1e      	ldr	r3, [pc, #120]	; (814e8 <Test+0x2ec>)
   8146e:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS);
   81470:	2022      	movs	r0, #34	; 0x22
   81472:	4b1a      	ldr	r3, [pc, #104]	; (814dc <Test+0x2e0>)
   81474:	4798      	blx	r3
			break;
   81476:	e7e4      	b.n	81442 <Test+0x246>
			gpio_set_pin_low(CMD_RELAIS);
   81478:	2022      	movs	r0, #34	; 0x22
   8147a:	4b1b      	ldr	r3, [pc, #108]	; (814e8 <Test+0x2ec>)
   8147c:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_1);
   8147e:	2023      	movs	r0, #35	; 0x23
   81480:	4b16      	ldr	r3, [pc, #88]	; (814dc <Test+0x2e0>)
   81482:	4798      	blx	r3
			break;
   81484:	e7dd      	b.n	81442 <Test+0x246>
   81486:	bf00      	nop
   81488:	20001314 	.word	0x20001314
   8148c:	00088b48 	.word	0x00088b48
   81490:	00083f95 	.word	0x00083f95
   81494:	00083401 	.word	0x00083401
   81498:	00088b58 	.word	0x00088b58
   8149c:	00088b64 	.word	0x00088b64
   814a0:	00080899 	.word	0x00080899
   814a4:	00088b68 	.word	0x00088b68
   814a8:	00088da4 	.word	0x00088da4
   814ac:	00088b70 	.word	0x00088b70
   814b0:	00088b7c 	.word	0x00088b7c
   814b4:	00088b80 	.word	0x00088b80
   814b8:	00088b88 	.word	0x00088b88
   814bc:	00088b8c 	.word	0x00088b8c
   814c0:	00088b94 	.word	0x00088b94
   814c4:	00088b98 	.word	0x00088b98
   814c8:	00088ba8 	.word	0x00088ba8
   814cc:	00088bb4 	.word	0x00088bb4
   814d0:	00088bc4 	.word	0x00088bc4
   814d4:	00088b34 	.word	0x00088b34
   814d8:	00088b6c 	.word	0x00088b6c
   814dc:	000808b5 	.word	0x000808b5
   814e0:	000811fd 	.word	0x000811fd
   814e4:	0008363d 	.word	0x0008363d
   814e8:	000808cf 	.word	0x000808cf
			gpio_set_pin_low(CMD_RELAIS_1);
   814ec:	2023      	movs	r0, #35	; 0x23
   814ee:	4b13      	ldr	r3, [pc, #76]	; (8153c <Test+0x340>)
   814f0:	4798      	blx	r3
			gpio_set_pin_high(CMD_RELAIS_2);
   814f2:	2024      	movs	r0, #36	; 0x24
   814f4:	4b12      	ldr	r3, [pc, #72]	; (81540 <Test+0x344>)
   814f6:	4798      	blx	r3
			break;
   814f8:	e7a3      	b.n	81442 <Test+0x246>
			gpio_set_pin_low(CMD_MOSFET);
   814fa:	2020      	movs	r0, #32
   814fc:	4c0f      	ldr	r4, [pc, #60]	; (8153c <Test+0x340>)
   814fe:	47a0      	blx	r4
			gpio_set_pin_low(CMD_MOT_SERRURE);
   81500:	2021      	movs	r0, #33	; 0x21
   81502:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS);
   81504:	2022      	movs	r0, #34	; 0x22
   81506:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_1);
   81508:	2023      	movs	r0, #35	; 0x23
   8150a:	47a0      	blx	r4
			gpio_set_pin_low(CMD_RELAIS_2);
   8150c:	2024      	movs	r0, #36	; 0x24
   8150e:	47a0      	blx	r4
			if(*((char*)&phase+1))
   81510:	b127      	cbz	r7, 8151c <Test+0x320>
				if(--(*((char*)&phase+1)))
   81512:	3f01      	subs	r7, #1
   81514:	b2ff      	uxtb	r7, r7
   81516:	f88d 700d 	strb.w	r7, [sp, #13]
   8151a:	b927      	cbnz	r7, 81526 <Test+0x32a>
			Putstr("\r\nTest terminated...\r\n");
   8151c:	4909      	ldr	r1, [pc, #36]	; (81544 <Test+0x348>)
   8151e:	2067      	movs	r0, #103	; 0x67
   81520:	4b09      	ldr	r3, [pc, #36]	; (81548 <Test+0x34c>)
   81522:	4798      	blx	r3
			return;
   81524:	e797      	b.n	81456 <Test+0x25a>
					PushTask(Test,TEST_NEW,phase>>8,0);
   81526:	2300      	movs	r3, #0
   81528:	9300      	str	r3, [sp, #0]
   8152a:	9b03      	ldr	r3, [sp, #12]
   8152c:	0a1b      	lsrs	r3, r3, #8
   8152e:	2264      	movs	r2, #100	; 0x64
   81530:	4906      	ldr	r1, [pc, #24]	; (8154c <Test+0x350>)
   81532:	2066      	movs	r0, #102	; 0x66
   81534:	4c06      	ldr	r4, [pc, #24]	; (81550 <Test+0x354>)
   81536:	47a0      	blx	r4
   81538:	e7f0      	b.n	8151c <Test+0x320>
   8153a:	bf00      	nop
   8153c:	000808cf 	.word	0x000808cf
   81540:	000808b5 	.word	0x000808b5
   81544:	00088bd4 	.word	0x00088bd4
   81548:	00083401 	.word	0x00083401
   8154c:	000811fd 	.word	0x000811fd
   81550:	0008363d 	.word	0x0008363d

00081554 <stop>:
	}
	mstrtokRestore();
}

void stop(uint32_t sc, void*pParam)
{
   81554:	b510      	push	{r4, lr}
	char *pToken;
	switch(sc)
   81556:	f242 6316 	movw	r3, #9750	; 0x2616
   8155a:	4298      	cmp	r0, r3
   8155c:	d01e      	beq.n	8159c <stop+0x48>
//#else
		//gpio_set_pin_high(BUZZER_PWR);
//#endif
		break;
	default:
		pToken = mstrtok(NULL," \r\n");
   8155e:	491c      	ldr	r1, [pc, #112]	; (815d0 <stop+0x7c>)
   81560:	2000      	movs	r0, #0
   81562:	4b1c      	ldr	r3, [pc, #112]	; (815d4 <stop+0x80>)
   81564:	4798      	blx	r3
		if(pToken)
   81566:	4604      	mov	r4, r0
   81568:	b1a8      	cbz	r0, 81596 <stop+0x42>
		{
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   8156a:	4b1b      	ldr	r3, [pc, #108]	; (815d8 <stop+0x84>)
   8156c:	4798      	blx	r3
   8156e:	4601      	mov	r1, r0
   81570:	4620      	mov	r0, r4
   81572:	4b1a      	ldr	r3, [pc, #104]	; (815dc <stop+0x88>)
   81574:	4798      	blx	r3
   81576:	f242 6316 	movw	r3, #9750	; 0x2616
   8157a:	4298      	cmp	r0, r3
   8157c:	d020      	beq.n	815c0 <stop+0x6c>
   8157e:	d912      	bls.n	815a6 <stop+0x52>
   81580:	f243 132b 	movw	r3, #12587	; 0x312b
   81584:	4298      	cmp	r0, r3
   81586:	d017      	beq.n	815b8 <stop+0x64>
   81588:	f24c 6398 	movw	r3, #50840	; 0xc698
   8158c:	4298      	cmp	r0, r3
   8158e:	d102      	bne.n	81596 <stop+0x42>
			{
			case 0xC698:	//lcd
				Lcd(LCD_DEL);
   81590:	2065      	movs	r0, #101	; 0x65
   81592:	4b13      	ldr	r3, [pc, #76]	; (815e0 <stop+0x8c>)
   81594:	4798      	blx	r3
				break;
			default:
				break;
			}
		}
		mstrtokRestore();
   81596:	4b13      	ldr	r3, [pc, #76]	; (815e4 <stop+0x90>)
   81598:	4798      	blx	r3
   8159a:	bd10      	pop	{r4, pc}
		Putstr("\r\nBuzzer off...\r\n");
   8159c:	4912      	ldr	r1, [pc, #72]	; (815e8 <stop+0x94>)
   8159e:	2067      	movs	r0, #103	; 0x67
   815a0:	4b12      	ldr	r3, [pc, #72]	; (815ec <stop+0x98>)
   815a2:	4798      	blx	r3
		break;
   815a4:	bd10      	pop	{r4, pc}
			switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   815a6:	f240 6334 	movw	r3, #1588	; 0x634
   815aa:	4298      	cmp	r0, r3
   815ac:	d1f3      	bne.n	81596 <stop+0x42>
				LcdBacklight(false);
   815ae:	2100      	movs	r1, #0
   815b0:	2066      	movs	r0, #102	; 0x66
   815b2:	4b0b      	ldr	r3, [pc, #44]	; (815e0 <stop+0x8c>)
   815b4:	4798      	blx	r3
				break;
   815b6:	e7ee      	b.n	81596 <stop+0x42>
				gpio_set_pin_high(BLUETOOTH_PWR);
   815b8:	2035      	movs	r0, #53	; 0x35
   815ba:	4b0d      	ldr	r3, [pc, #52]	; (815f0 <stop+0x9c>)
   815bc:	4798      	blx	r3
				break;
   815be:	e7ea      	b.n	81596 <stop+0x42>
				Putstr("\r\nBuzzer off...\r\n");
   815c0:	4909      	ldr	r1, [pc, #36]	; (815e8 <stop+0x94>)
   815c2:	2067      	movs	r0, #103	; 0x67
   815c4:	4b09      	ldr	r3, [pc, #36]	; (815ec <stop+0x98>)
   815c6:	4798      	blx	r3
				gpio_set_pin_low(BUZZER_PWR);
   815c8:	2030      	movs	r0, #48	; 0x30
   815ca:	4b0a      	ldr	r3, [pc, #40]	; (815f4 <stop+0xa0>)
   815cc:	4798      	blx	r3
				break;
   815ce:	e7e2      	b.n	81596 <stop+0x42>
   815d0:	00088c48 	.word	0x00088c48
   815d4:	000838a9 	.word	0x000838a9
   815d8:	0008409d 	.word	0x0008409d
   815dc:	000817c9 	.word	0x000817c9
   815e0:	00081d31 	.word	0x00081d31
   815e4:	00083865 	.word	0x00083865
   815e8:	00088c34 	.word	0x00088c34
   815ec:	00083401 	.word	0x00083401
   815f0:	000808b5 	.word	0x000808b5
   815f4:	000808cf 	.word	0x000808cf

000815f8 <start>:
{
   815f8:	b570      	push	{r4, r5, r6, lr}
   815fa:	b090      	sub	sp, #64	; 0x40
	pToken = mstrtok(NULL," \r\n");
   815fc:	4957      	ldr	r1, [pc, #348]	; (8175c <start+0x164>)
   815fe:	2000      	movs	r0, #0
   81600:	4b57      	ldr	r3, [pc, #348]	; (81760 <start+0x168>)
   81602:	4798      	blx	r3
	if(pToken)
   81604:	2800      	cmp	r0, #0
   81606:	f000 8094 	beq.w	81732 <start+0x13a>
   8160a:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   8160c:	4b55      	ldr	r3, [pc, #340]	; (81764 <start+0x16c>)
   8160e:	4798      	blx	r3
   81610:	4601      	mov	r1, r0
   81612:	4620      	mov	r0, r4
   81614:	4b54      	ldr	r3, [pc, #336]	; (81768 <start+0x170>)
   81616:	4798      	blx	r3
   81618:	f243 132b 	movw	r3, #12587	; 0x312b
   8161c:	4298      	cmp	r0, r3
   8161e:	f000 8093 	beq.w	81748 <start+0x150>
   81622:	d851      	bhi.n	816c8 <start+0xd0>
   81624:	f240 6334 	movw	r3, #1588	; 0x634
   81628:	4298      	cmp	r0, r3
   8162a:	f000 8086 	beq.w	8173a <start+0x142>
   8162e:	f242 6316 	movw	r3, #9750	; 0x2616
   81632:	4298      	cmp	r0, r3
   81634:	d17d      	bne.n	81732 <start+0x13a>
			mstrtokRestore();
   81636:	4b4d      	ldr	r3, [pc, #308]	; (8176c <start+0x174>)
   81638:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   8163a:	4948      	ldr	r1, [pc, #288]	; (8175c <start+0x164>)
   8163c:	2000      	movs	r0, #0
   8163e:	4b48      	ldr	r3, [pc, #288]	; (81760 <start+0x168>)
   81640:	4798      	blx	r3
			pParam=atoi((char*)pToken);
   81642:	4b4b      	ldr	r3, [pc, #300]	; (81770 <start+0x178>)
   81644:	4798      	blx	r3
			if(pParam)
   81646:	4606      	mov	r6, r0
   81648:	2800      	cmp	r0, #0
   8164a:	d072      	beq.n	81732 <start+0x13a>
				Putstr("\r\nBuzzer on for ");
   8164c:	4949      	ldr	r1, [pc, #292]	; (81774 <start+0x17c>)
   8164e:	2067      	movs	r0, #103	; 0x67
   81650:	4c49      	ldr	r4, [pc, #292]	; (81778 <start+0x180>)
   81652:	47a0      	blx	r4
				sprintf(buf,"%d ms...\r\n",(int)pParam);
   81654:	4d49      	ldr	r5, [pc, #292]	; (8177c <start+0x184>)
   81656:	4632      	mov	r2, r6
   81658:	4949      	ldr	r1, [pc, #292]	; (81780 <start+0x188>)
   8165a:	4628      	mov	r0, r5
   8165c:	4b49      	ldr	r3, [pc, #292]	; (81784 <start+0x18c>)
   8165e:	4798      	blx	r3
				Putstr(buf);
   81660:	4629      	mov	r1, r5
   81662:	2067      	movs	r0, #103	; 0x67
   81664:	47a0      	blx	r4
				gpio_configure_pin(BUZZER_PWR,BUZZER_FLAGS);
   81666:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8166a:	2030      	movs	r0, #48	; 0x30
   8166c:	4b46      	ldr	r3, [pc, #280]	; (81788 <start+0x190>)
   8166e:	4798      	blx	r3
					const pwm_clock_t clockSetting ={
   81670:	4b46      	ldr	r3, [pc, #280]	; (8178c <start+0x194>)
   81672:	ad03      	add	r5, sp, #12
   81674:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   81678:	e885 0007 	stmia.w	r5, {r0, r1, r2}
					pmc_enable_periph_clk(ID_PWM);
   8167c:	2019      	movs	r0, #25
   8167e:	4b44      	ldr	r3, [pc, #272]	; (81790 <start+0x198>)
   81680:	4798      	blx	r3
					pwm_channel_disable(PWM,PWM_CHANNEL_3);
   81682:	4c44      	ldr	r4, [pc, #272]	; (81794 <start+0x19c>)
   81684:	2103      	movs	r1, #3
   81686:	4620      	mov	r0, r4
   81688:	4b43      	ldr	r3, [pc, #268]	; (81798 <start+0x1a0>)
   8168a:	4798      	blx	r3
					pwm_init(PWM,(pwm_clock_t*)&clockSetting);
   8168c:	4629      	mov	r1, r5
   8168e:	4620      	mov	r0, r4
   81690:	4b42      	ldr	r3, [pc, #264]	; (8179c <start+0x1a4>)
   81692:	4798      	blx	r3
					pwmChannelInstance.ul_prescaler=PWM_CMR_CPRE_CLKB;
   81694:	230c      	movs	r3, #12
   81696:	9307      	str	r3, [sp, #28]
					pwmChannelInstance.ul_period=100;
   81698:	2364      	movs	r3, #100	; 0x64
   8169a:	930a      	str	r3, [sp, #40]	; 0x28
					pwmChannelInstance.ul_duty=50;
   8169c:	2332      	movs	r3, #50	; 0x32
   8169e:	9309      	str	r3, [sp, #36]	; 0x24
					pwmChannelInstance.channel=PWM_CHANNEL_3;
   816a0:	2503      	movs	r5, #3
   816a2:	a910      	add	r1, sp, #64	; 0x40
   816a4:	f841 5d28 	str.w	r5, [r1, #-40]!
					pwm_channel_init(PWM,&pwmChannelInstance);
   816a8:	4620      	mov	r0, r4
   816aa:	4b3d      	ldr	r3, [pc, #244]	; (817a0 <start+0x1a8>)
   816ac:	4798      	blx	r3
					pwm_channel_enable(PWM,PWM_CHANNEL_3);
   816ae:	4629      	mov	r1, r5
   816b0:	4620      	mov	r0, r4
   816b2:	4b3c      	ldr	r3, [pc, #240]	; (817a4 <start+0x1ac>)
   816b4:	4798      	blx	r3
				PushTask(stop,0x2616,0,(uint32_t)pParam);
   816b6:	9600      	str	r6, [sp, #0]
   816b8:	2300      	movs	r3, #0
   816ba:	f242 6216 	movw	r2, #9750	; 0x2616
   816be:	493a      	ldr	r1, [pc, #232]	; (817a8 <start+0x1b0>)
   816c0:	2066      	movs	r0, #102	; 0x66
   816c2:	4c3a      	ldr	r4, [pc, #232]	; (817ac <start+0x1b4>)
   816c4:	47a0      	blx	r4
   816c6:	e034      	b.n	81732 <start+0x13a>
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   816c8:	f24c 6398 	movw	r3, #50840	; 0xc698
   816cc:	4298      	cmp	r0, r3
   816ce:	d021      	beq.n	81714 <start+0x11c>
   816d0:	f64d 432e 	movw	r3, #56366	; 0xdc2e
   816d4:	4298      	cmp	r0, r3
   816d6:	d12c      	bne.n	81732 <start+0x13a>
			mstrtokRestore();
   816d8:	4b24      	ldr	r3, [pc, #144]	; (8176c <start+0x174>)
   816da:	4798      	blx	r3
			pToken = mstrtok(NULL," \r\n");
   816dc:	491f      	ldr	r1, [pc, #124]	; (8175c <start+0x164>)
   816de:	2000      	movs	r0, #0
   816e0:	4b1f      	ldr	r3, [pc, #124]	; (81760 <start+0x168>)
   816e2:	4798      	blx	r3
			if(pToken)
   816e4:	2800      	cmp	r0, #0
   816e6:	d02d      	beq.n	81744 <start+0x14c>
				 sc=atoi((char*)pToken);
   816e8:	4b21      	ldr	r3, [pc, #132]	; (81770 <start+0x178>)
   816ea:	4798      	blx	r3
   816ec:	4604      	mov	r4, r0
				 sprintf(buf,"\r\nNbTest: %d\r\n",(int)sc);
   816ee:	4d23      	ldr	r5, [pc, #140]	; (8177c <start+0x184>)
   816f0:	4602      	mov	r2, r0
   816f2:	492f      	ldr	r1, [pc, #188]	; (817b0 <start+0x1b8>)
   816f4:	4628      	mov	r0, r5
   816f6:	4b23      	ldr	r3, [pc, #140]	; (81784 <start+0x18c>)
   816f8:	4798      	blx	r3
				 Putstr(buf);
   816fa:	4629      	mov	r1, r5
   816fc:	2067      	movs	r0, #103	; 0x67
   816fe:	4b1e      	ldr	r3, [pc, #120]	; (81778 <start+0x180>)
   81700:	4798      	blx	r3
			PushTask(Test,TEST_NEW,sc,0);
   81702:	2300      	movs	r3, #0
   81704:	9300      	str	r3, [sp, #0]
   81706:	4623      	mov	r3, r4
   81708:	2264      	movs	r2, #100	; 0x64
   8170a:	492a      	ldr	r1, [pc, #168]	; (817b4 <start+0x1bc>)
   8170c:	2066      	movs	r0, #102	; 0x66
   8170e:	4c27      	ldr	r4, [pc, #156]	; (817ac <start+0x1b4>)
   81710:	47a0      	blx	r4
			break;
   81712:	e00e      	b.n	81732 <start+0x13a>
			Lcd(LCD_DEL);
   81714:	2065      	movs	r0, #101	; 0x65
   81716:	4c28      	ldr	r4, [pc, #160]	; (817b8 <start+0x1c0>)
   81718:	47a0      	blx	r4
			Lcd(LCD_NEW);
   8171a:	2064      	movs	r0, #100	; 0x64
   8171c:	47a0      	blx	r4
			LcdPutstr("CPU.ACX  ATSAM3U4C",2,1);
   8171e:	2301      	movs	r3, #1
   81720:	2202      	movs	r2, #2
   81722:	4926      	ldr	r1, [pc, #152]	; (817bc <start+0x1c4>)
   81724:	2067      	movs	r0, #103	; 0x67
   81726:	47a0      	blx	r4
			LcdPutstr("www.a-2-s.net",3,4);
   81728:	2304      	movs	r3, #4
   8172a:	2203      	movs	r2, #3
   8172c:	4924      	ldr	r1, [pc, #144]	; (817c0 <start+0x1c8>)
   8172e:	2067      	movs	r0, #103	; 0x67
   81730:	47a0      	blx	r4
	mstrtokRestore();
   81732:	4b0e      	ldr	r3, [pc, #56]	; (8176c <start+0x174>)
   81734:	4798      	blx	r3
}
   81736:	b010      	add	sp, #64	; 0x40
   81738:	bd70      	pop	{r4, r5, r6, pc}
			LcdBacklight(true);
   8173a:	2101      	movs	r1, #1
   8173c:	2066      	movs	r0, #102	; 0x66
   8173e:	4b1e      	ldr	r3, [pc, #120]	; (817b8 <start+0x1c0>)
   81740:	4798      	blx	r3
			break;
   81742:	e7f6      	b.n	81732 <start+0x13a>
				sc=1;
   81744:	2401      	movs	r4, #1
   81746:	e7dc      	b.n	81702 <start+0x10a>
			gpio_configure_pin(BLUETOOTH_PWR,BLUETOOTH_FLAGS);
   81748:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8174c:	2035      	movs	r0, #53	; 0x35
   8174e:	4b0e      	ldr	r3, [pc, #56]	; (81788 <start+0x190>)
   81750:	4798      	blx	r3
			gpio_set_pin_low(BLUETOOTH_PWR);
   81752:	2035      	movs	r0, #53	; 0x35
   81754:	4b1b      	ldr	r3, [pc, #108]	; (817c4 <start+0x1cc>)
   81756:	4798      	blx	r3
			break;
   81758:	e7eb      	b.n	81732 <start+0x13a>
   8175a:	bf00      	nop
   8175c:	00088c48 	.word	0x00088c48
   81760:	000838a9 	.word	0x000838a9
   81764:	0008409d 	.word	0x0008409d
   81768:	000817c9 	.word	0x000817c9
   8176c:	00083865 	.word	0x00083865
   81770:	00083ea1 	.word	0x00083ea1
   81774:	00088c14 	.word	0x00088c14
   81778:	00083401 	.word	0x00083401
   8177c:	20001314 	.word	0x20001314
   81780:	00088c28 	.word	0x00088c28
   81784:	00083f95 	.word	0x00083f95
   81788:	00080909 	.word	0x00080909
   8178c:	00088b28 	.word	0x00088b28
   81790:	00080b09 	.word	0x00080b09
   81794:	4008c000 	.word	0x4008c000
   81798:	00080d31 	.word	0x00080d31
   8179c:	00080bfd 	.word	0x00080bfd
   817a0:	00080c41 	.word	0x00080c41
   817a4:	00080d27 	.word	0x00080d27
   817a8:	00081555 	.word	0x00081555
   817ac:	0008363d 	.word	0x0008363d
   817b0:	00088c04 	.word	0x00088c04
   817b4:	000811fd 	.word	0x000811fd
   817b8:	00081d31 	.word	0x00081d31
   817bc:	00088a10 	.word	0x00088a10
   817c0:	00088a24 	.word	0x00088a24
   817c4:	000808cf 	.word	0x000808cf

000817c8 <CRC16MODBUSFRAME>:
   817c8:	b189      	cbz	r1, 817ee <CRC16MODBUSFRAME+0x26>
   817ca:	b410      	push	{r4}
   817cc:	1841      	adds	r1, r0, r1
   817ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
   817d2:	4c09      	ldr	r4, [pc, #36]	; (817f8 <CRC16MODBUSFRAME+0x30>)
   817d4:	f810 3b01 	ldrb.w	r3, [r0], #1
   817d8:	4053      	eors	r3, r2
   817da:	b2db      	uxtb	r3, r3
   817dc:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
   817e0:	ea83 2212 	eor.w	r2, r3, r2, lsr #8
   817e4:	4281      	cmp	r1, r0
   817e6:	d1f5      	bne.n	817d4 <CRC16MODBUSFRAME+0xc>
   817e8:	4610      	mov	r0, r2
   817ea:	bc10      	pop	{r4}
   817ec:	4770      	bx	lr
   817ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
   817f2:	4610      	mov	r0, r2
   817f4:	4770      	bx	lr
   817f6:	bf00      	nop
   817f8:	2000012c 	.word	0x2000012c

000817fc <CRC16MODBUS>:
   817fc:	4048      	eors	r0, r1
   817fe:	b2c0      	uxtb	r0, r0
   81800:	4b02      	ldr	r3, [pc, #8]	; (8180c <CRC16MODBUS+0x10>)
   81802:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   81806:	ea80 2011 	eor.w	r0, r0, r1, lsr #8
   8180a:	4770      	bx	lr
   8180c:	2000012c 	.word	0x2000012c

00081810 <Error>:




void Error(uint32_t sc, ...)
{
   81810:	b40f      	push	{r0, r1, r2, r3}
   81812:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   81816:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   81818:	f3bf 8f5f 	dmb	sy
	uint32_t i,k;
#define er sc
	cpu_irq_disable();
   8181c:	2200      	movs	r2, #0
   8181e:	4b65      	ldr	r3, [pc, #404]	; (819b4 <Error+0x1a4>)
   81820:	701a      	strb	r2, [r3, #0]
	gpio_configure_pin(ERROR_LED, ERROR_LED_FLAGS);
   81822:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81826:	2033      	movs	r0, #51	; 0x33
   81828:	4b63      	ldr	r3, [pc, #396]	; (819b8 <Error+0x1a8>)
   8182a:	4798      	blx	r3
   8182c:	f04f 0805 	mov.w	r8, #5
//#if HEART_LED_ACTIVE_LEVEL==1	
	
	for(k=0;k<5;k++)
	{
		gpio_set_pin_high(ERROR_LED);
		delay_ms(3000);
   81830:	4c62      	ldr	r4, [pc, #392]	; (819bc <Error+0x1ac>)
			delay_ms(1500);
			gpio_set_pin_low(ERROR_LED);
		}
		else
		{
			for(i=0;i<(er/10)*2;i++)
   81832:	4f63      	ldr	r7, [pc, #396]	; (819c0 <Error+0x1b0>)
   81834:	e031      	b.n	8189a <Error+0x8a>
			gpio_set_pin_high(ERROR_LED);
   81836:	2033      	movs	r0, #51	; 0x33
   81838:	4b62      	ldr	r3, [pc, #392]	; (819c4 <Error+0x1b4>)
   8183a:	4798      	blx	r3
			delay_ms(1500);
   8183c:	4862      	ldr	r0, [pc, #392]	; (819c8 <Error+0x1b8>)
   8183e:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81840:	2033      	movs	r0, #51	; 0x33
   81842:	4b62      	ldr	r3, [pc, #392]	; (819cc <Error+0x1bc>)
   81844:	4798      	blx	r3
   81846:	e048      	b.n	818da <Error+0xca>
		}
		delay_ms(800);

		if((er%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   81848:	2033      	movs	r0, #51	; 0x33
   8184a:	4b5e      	ldr	r3, [pc, #376]	; (819c4 <Error+0x1b4>)
   8184c:	4798      	blx	r3
			delay_ms(1500);
   8184e:	485e      	ldr	r0, [pc, #376]	; (819c8 <Error+0x1b8>)
   81850:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81852:	2033      	movs	r0, #51	; 0x33
   81854:	4b5d      	ldr	r3, [pc, #372]	; (819cc <Error+0x1bc>)
   81856:	4798      	blx	r3
   81858:	e057      	b.n	8190a <Error+0xfa>
		delay_ms(1000);
#undef er
#define _param	pa1
		if((_param/100)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   8185a:	2033      	movs	r0, #51	; 0x33
   8185c:	4b59      	ldr	r3, [pc, #356]	; (819c4 <Error+0x1b4>)
   8185e:	4798      	blx	r3
			delay_ms(1500);
   81860:	4859      	ldr	r0, [pc, #356]	; (819c8 <Error+0x1b8>)
   81862:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81864:	2033      	movs	r0, #51	; 0x33
   81866:	4b59      	ldr	r3, [pc, #356]	; (819cc <Error+0x1bc>)
   81868:	4798      	blx	r3
   8186a:	e067      	b.n	8193c <Error+0x12c>
		}
		delay_ms(800);

		if(((_param/10)%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   8186c:	2033      	movs	r0, #51	; 0x33
   8186e:	4b55      	ldr	r3, [pc, #340]	; (819c4 <Error+0x1b4>)
   81870:	4798      	blx	r3
			delay_ms(1500);
   81872:	4855      	ldr	r0, [pc, #340]	; (819c8 <Error+0x1b8>)
   81874:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81876:	2033      	movs	r0, #51	; 0x33
   81878:	4b54      	ldr	r3, [pc, #336]	; (819cc <Error+0x1bc>)
   8187a:	4798      	blx	r3
   8187c:	e079      	b.n	81972 <Error+0x162>
		delay_ms(800);


		if((_param%10)==0)
		{
			gpio_set_pin_high(ERROR_LED);
   8187e:	2033      	movs	r0, #51	; 0x33
   81880:	4b50      	ldr	r3, [pc, #320]	; (819c4 <Error+0x1b4>)
   81882:	4798      	blx	r3
			delay_ms(1500);
   81884:	4850      	ldr	r0, [pc, #320]	; (819c8 <Error+0x1b8>)
   81886:	47a0      	blx	r4
			gpio_set_pin_low(ERROR_LED);
   81888:	2033      	movs	r0, #51	; 0x33
   8188a:	4b50      	ldr	r3, [pc, #320]	; (819cc <Error+0x1bc>)
   8188c:	4798      	blx	r3
				gpio_toggle_pin(ERROR_LED);
				delay_ms(200);
			}
		}
		
		delay_ms(1000);
   8188e:	4850      	ldr	r0, [pc, #320]	; (819d0 <Error+0x1c0>)
   81890:	47a0      	blx	r4
	for(k=0;k<5;k++)
   81892:	f1b8 0801 	subs.w	r8, r8, #1
   81896:	f000 8086 	beq.w	819a6 <Error+0x196>
		gpio_set_pin_high(ERROR_LED);
   8189a:	2033      	movs	r0, #51	; 0x33
   8189c:	4b49      	ldr	r3, [pc, #292]	; (819c4 <Error+0x1b4>)
   8189e:	4798      	blx	r3
		delay_ms(3000);
   818a0:	484c      	ldr	r0, [pc, #304]	; (819d4 <Error+0x1c4>)
   818a2:	47a0      	blx	r4
		gpio_set_pin_low(ERROR_LED);
   818a4:	2033      	movs	r0, #51	; 0x33
   818a6:	4b49      	ldr	r3, [pc, #292]	; (819cc <Error+0x1bc>)
   818a8:	4798      	blx	r3
		delay_ms(800);
   818aa:	484b      	ldr	r0, [pc, #300]	; (819d8 <Error+0x1c8>)
   818ac:	47a0      	blx	r4
		if((er/10)==0)
   818ae:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   818b2:	f1b9 0f09 	cmp.w	r9, #9
   818b6:	d9be      	bls.n	81836 <Error+0x26>
			for(i=0;i<(er/10)*2;i++)
   818b8:	fba7 2309 	umull	r2, r3, r7, r9
   818bc:	08db      	lsrs	r3, r3, #3
   818be:	005e      	lsls	r6, r3, #1
   818c0:	b15b      	cbz	r3, 818da <Error+0xca>
   818c2:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   818c4:	f8df b120 	ldr.w	fp, [pc, #288]	; 819e8 <Error+0x1d8>
				delay_ms(200);
   818c8:	f8df a120 	ldr.w	sl, [pc, #288]	; 819ec <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   818cc:	2033      	movs	r0, #51	; 0x33
   818ce:	47d8      	blx	fp
				delay_ms(200);
   818d0:	4650      	mov	r0, sl
   818d2:	47a0      	blx	r4
			for(i=0;i<(er/10)*2;i++)
   818d4:	3501      	adds	r5, #1
   818d6:	42b5      	cmp	r5, r6
   818d8:	d1f8      	bne.n	818cc <Error+0xbc>
		delay_ms(800);
   818da:	483f      	ldr	r0, [pc, #252]	; (819d8 <Error+0x1c8>)
   818dc:	47a0      	blx	r4
		if((er%10)==0)
   818de:	fba7 3609 	umull	r3, r6, r7, r9
   818e2:	08f6      	lsrs	r6, r6, #3
   818e4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   818e8:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   818ec:	d0ac      	beq.n	81848 <Error+0x38>
			for(i=0;i<(er%10)*2;i++)
   818ee:	0076      	lsls	r6, r6, #1
   818f0:	d00b      	beq.n	8190a <Error+0xfa>
   818f2:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   818f4:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 819e8 <Error+0x1d8>
				delay_ms(200);
   818f8:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 819ec <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   818fc:	2033      	movs	r0, #51	; 0x33
   818fe:	47d0      	blx	sl
				delay_ms(200);
   81900:	4648      	mov	r0, r9
   81902:	47a0      	blx	r4
			for(i=0;i<(er%10)*2;i++)
   81904:	3501      	adds	r5, #1
   81906:	42b5      	cmp	r5, r6
   81908:	d1f8      	bne.n	818fc <Error+0xec>
		delay_ms(1000);
   8190a:	4831      	ldr	r0, [pc, #196]	; (819d0 <Error+0x1c0>)
   8190c:	47a0      	blx	r4
		if((_param/100)==0)
   8190e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   81912:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
   81916:	d9a0      	bls.n	8185a <Error+0x4a>
			for(i=0;i<(_param/100)*2;i++)
   81918:	4b30      	ldr	r3, [pc, #192]	; (819dc <Error+0x1cc>)
   8191a:	fba3 2309 	umull	r2, r3, r3, r9
   8191e:	095b      	lsrs	r3, r3, #5
   81920:	005e      	lsls	r6, r3, #1
   81922:	b15b      	cbz	r3, 8193c <Error+0x12c>
   81924:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   81926:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 819e8 <Error+0x1d8>
				delay_ms(200);
   8192a:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 819ec <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   8192e:	2033      	movs	r0, #51	; 0x33
   81930:	47d8      	blx	fp
				delay_ms(200);
   81932:	4650      	mov	r0, sl
   81934:	47a0      	blx	r4
			for(i=0;i<(_param/100)*2;i++)
   81936:	3501      	adds	r5, #1
   81938:	42b5      	cmp	r5, r6
   8193a:	d1f8      	bne.n	8192e <Error+0x11e>
		delay_ms(800);
   8193c:	4826      	ldr	r0, [pc, #152]	; (819d8 <Error+0x1c8>)
   8193e:	47a0      	blx	r4
		if(((_param/10)%10)==0)
   81940:	fba7 2309 	umull	r2, r3, r7, r9
   81944:	08db      	lsrs	r3, r3, #3
   81946:	fba7 2603 	umull	r2, r6, r7, r3
   8194a:	08f6      	lsrs	r6, r6, #3
   8194c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   81950:	ebb3 0646 	subs.w	r6, r3, r6, lsl #1
   81954:	d08a      	beq.n	8186c <Error+0x5c>
			for(i=0;i<((_param/10)%10)*2;i++)
   81956:	0076      	lsls	r6, r6, #1
   81958:	d00b      	beq.n	81972 <Error+0x162>
   8195a:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   8195c:	f8df b088 	ldr.w	fp, [pc, #136]	; 819e8 <Error+0x1d8>
				delay_ms(200);
   81960:	f8df a088 	ldr.w	sl, [pc, #136]	; 819ec <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   81964:	2033      	movs	r0, #51	; 0x33
   81966:	47d8      	blx	fp
				delay_ms(200);
   81968:	4650      	mov	r0, sl
   8196a:	47a0      	blx	r4
			for(i=0;i<((_param/10)%10)*2;i++)
   8196c:	3501      	adds	r5, #1
   8196e:	42b5      	cmp	r5, r6
   81970:	d1f8      	bne.n	81964 <Error+0x154>
		delay_ms(800);
   81972:	4819      	ldr	r0, [pc, #100]	; (819d8 <Error+0x1c8>)
   81974:	47a0      	blx	r4
		if((_param%10)==0)
   81976:	fba7 3609 	umull	r3, r6, r7, r9
   8197a:	08f6      	lsrs	r6, r6, #3
   8197c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   81980:	ebb9 0646 	subs.w	r6, r9, r6, lsl #1
   81984:	f43f af7b 	beq.w	8187e <Error+0x6e>
			for(i=0;i<(_param%10)*2;i++)
   81988:	0076      	lsls	r6, r6, #1
   8198a:	d080      	beq.n	8188e <Error+0x7e>
   8198c:	2500      	movs	r5, #0
				gpio_toggle_pin(ERROR_LED);
   8198e:	f8df a058 	ldr.w	sl, [pc, #88]	; 819e8 <Error+0x1d8>
				delay_ms(200);
   81992:	f8df 9058 	ldr.w	r9, [pc, #88]	; 819ec <Error+0x1dc>
				gpio_toggle_pin(ERROR_LED);
   81996:	2033      	movs	r0, #51	; 0x33
   81998:	47d0      	blx	sl
				delay_ms(200);
   8199a:	4648      	mov	r0, r9
   8199c:	47a0      	blx	r4
			for(i=0;i<(_param%10)*2;i++)
   8199e:	3501      	adds	r5, #1
   819a0:	42b5      	cmp	r5, r6
   819a2:	d1f8      	bne.n	81996 <Error+0x186>
   819a4:	e773      	b.n	8188e <Error+0x7e>

#undef _param
	}
	rstc_start_software_reset(RSTC);
   819a6:	480e      	ldr	r0, [pc, #56]	; (819e0 <Error+0x1d0>)
   819a8:	4b0e      	ldr	r3, [pc, #56]	; (819e4 <Error+0x1d4>)
   819aa:	4798      	blx	r3
   819ac:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   819b0:	b004      	add	sp, #16
   819b2:	4770      	bx	lr
   819b4:	20000124 	.word	0x20000124
   819b8:	00080909 	.word	0x00080909
   819bc:	20000001 	.word	0x20000001
   819c0:	cccccccd 	.word	0xcccccccd
   819c4:	000808b5 	.word	0x000808b5
   819c8:	009cf293 	.word	0x009cf293
   819cc:	000808cf 	.word	0x000808cf
   819d0:	0068a1b7 	.word	0x0068a1b7
   819d4:	0139e525 	.word	0x0139e525
   819d8:	0053b493 	.word	0x0053b493
   819dc:	51eb851f 	.word	0x51eb851f
   819e0:	400e1200 	.word	0x400e1200
   819e4:	00080d3d 	.word	0x00080d3d
   819e8:	000808e9 	.word	0x000808e9
   819ec:	0014ed25 	.word	0x0014ed25

000819f0 <kRtc>:
#define _rtcCalr	((t_RTC_CALR*)&RTC->RTC_CALR)
#define _rtcTimr	((t_RTC_TIMR*)&RTC->RTC_TIMR)


uint32_t kRtc(uint32_t sc,...)
{
   819f0:	b40f      	push	{r0, r1, r2, r3}
   819f2:	b5f0      	push	{r4, r5, r6, r7, lr}
   819f4:	b087      	sub	sp, #28
	uint32_t u1,u2,u3,u4;
	
	switch(sc)
   819f6:	990c      	ldr	r1, [sp, #48]	; 0x30
   819f8:	2964      	cmp	r1, #100	; 0x64
   819fa:	d021      	beq.n	81a40 <kRtc+0x50>
   819fc:	d814      	bhi.n	81a28 <kRtc+0x38>
   819fe:	2901      	cmp	r1, #1
   81a00:	f000 810e 	beq.w	81c20 <kRtc+0x230>
   81a04:	2900      	cmp	r1, #0
   81a06:	f000 80bb 	beq.w	81b80 <kRtc+0x190>
   81a0a:	2902      	cmp	r1, #2
   81a0c:	d113      	bne.n	81a36 <kRtc+0x46>
	case _KRTC_IS_SUMMER_TIME:
#define _day	pa1
#define _date	pa2
#define _month	pa3
#define _hour	pa4
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   81a0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   81a10:	1f1a      	subs	r2, r3, #4
   81a12:	2a05      	cmp	r2, #5
   81a14:	f240 8148 	bls.w	81ca8 <kRtc+0x2b8>
		else
		{
			if(_month==MARCH)
   81a18:	2b03      	cmp	r3, #3
   81a1a:	f000 811b 	beq.w	81c54 <kRtc+0x264>
					{
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
					}
				}
			}
			else if(_month==OCTOBER)
   81a1e:	2b0a      	cmp	r3, #10
   81a20:	f000 812d 	beq.w	81c7e <kRtc+0x28e>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
					}
				}
			}
		}
		return 0;
   81a24:	2400      	movs	r4, #0
   81a26:	e0d1      	b.n	81bcc <kRtc+0x1dc>
	switch(sc)
   81a28:	2967      	cmp	r1, #103	; 0x67
   81a2a:	d040      	beq.n	81aae <kRtc+0xbe>
   81a2c:	2968      	cmp	r1, #104	; 0x68
   81a2e:	f000 808d 	beq.w	81b4c <kRtc+0x15c>
   81a32:	2966      	cmp	r1, #102	; 0x66
   81a34:	d01a      	beq.n	81a6c <kRtc+0x7c>
		//no break;


	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_KRTC_SWITCH_BAD_SC,sc);
   81a36:	200e      	movs	r0, #14
   81a38:	4b9e      	ldr	r3, [pc, #632]	; (81cb4 <kRtc+0x2c4>)
   81a3a:	4798      	blx	r3
}
	return 0;
   81a3c:	2400      	movs	r4, #0
   81a3e:	e0c5      	b.n	81bcc <kRtc+0x1dc>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   81a40:	2000      	movs	r0, #0
   81a42:	4b9d      	ldr	r3, [pc, #628]	; (81cb8 <kRtc+0x2c8>)
   81a44:	4798      	blx	r3
		while (!pmc_osc_is_ready_32kxtal());
   81a46:	4c9d      	ldr	r4, [pc, #628]	; (81cbc <kRtc+0x2cc>)
   81a48:	47a0      	blx	r4
   81a4a:	2800      	cmp	r0, #0
   81a4c:	d0fc      	beq.n	81a48 <kRtc+0x58>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   81a4e:	4b9c      	ldr	r3, [pc, #624]	; (81cc0 <kRtc+0x2d0>)
   81a50:	2104      	movs	r1, #4
   81a52:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   81a56:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81a5a:	2210      	movs	r2, #16
   81a5c:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81a60:	6019      	str	r1, [r3, #0]
		rtc_enable_interrupt(RTC,RTC_IER_SECEN);	//Second IRQ enabled
   81a62:	4898      	ldr	r0, [pc, #608]	; (81cc4 <kRtc+0x2d4>)
   81a64:	4b98      	ldr	r3, [pc, #608]	; (81cc8 <kRtc+0x2d8>)
   81a66:	4798      	blx	r3
	return 0;
   81a68:	2400      	movs	r4, #0
		break;
   81a6a:	e0af      	b.n	81bcc <kRtc+0x1dc>
		_res = rtc_set_time(RTC,_hour,_minute,_second);
   81a6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   81a6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81a70:	990d      	ldr	r1, [sp, #52]	; 0x34
   81a72:	4894      	ldr	r0, [pc, #592]	; (81cc4 <kRtc+0x2d4>)
   81a74:	4c95      	ldr	r4, [pc, #596]	; (81ccc <kRtc+0x2dc>)
   81a76:	47a0      	blx	r4
   81a78:	4604      	mov	r4, r0
   81a7a:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res	== 0)
   81a7c:	2800      	cmp	r0, #0
   81a7e:	f040 80a5 	bne.w	81bcc <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   81a82:	4b93      	ldr	r3, [pc, #588]	; (81cd0 <kRtc+0x2e0>)
   81a84:	7899      	ldrb	r1, [r3, #2]
   81a86:	78da      	ldrb	r2, [r3, #3]
   81a88:	3b04      	subs	r3, #4
   81a8a:	789b      	ldrb	r3, [r3, #2]
   81a8c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   81a90:	9300      	str	r3, [sp, #0]
   81a92:	f001 031f 	and.w	r3, r1, #31
   81a96:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   81a9a:	0949      	lsrs	r1, r1, #5
   81a9c:	2002      	movs	r0, #2
   81a9e:	f7ff ffa7 	bl	819f0 <kRtc>
   81aa2:	4b8c      	ldr	r3, [pc, #560]	; (81cd4 <kRtc+0x2e4>)
   81aa4:	781a      	ldrb	r2, [r3, #0]
   81aa6:	f360 0282 	bfi	r2, r0, #2, #1
   81aaa:	701a      	strb	r2, [r3, #0]
   81aac:	e08e      	b.n	81bcc <kRtc+0x1dc>
		if((_month==0)||(_month)>12) return -1;
   81aae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81ab0:	1e63      	subs	r3, r4, #1
   81ab2:	2b0b      	cmp	r3, #11
   81ab4:	d902      	bls.n	81abc <kRtc+0xcc>
   81ab6:	f04f 34ff 	mov.w	r4, #4294967295
   81aba:	e087      	b.n	81bcc <kRtc+0x1dc>
		if(_date>nbDaysInMonth[_month-1]+_kRtcIsLeapYear(_centyear)?1:0) return -1;
   81abc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   81abe:	4a86      	ldr	r2, [pc, #536]	; (81cd8 <kRtc+0x2e8>)
   81ac0:	5cd5      	ldrb	r5, [r2, r3]
   81ac2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   81ac4:	4631      	mov	r1, r6
   81ac6:	2001      	movs	r0, #1
   81ac8:	f7ff ff92 	bl	819f0 <kRtc>
   81acc:	4428      	add	r0, r5
   81ace:	4287      	cmp	r7, r0
   81ad0:	d902      	bls.n	81ad8 <kRtc+0xe8>
   81ad2:	f04f 34ff 	mov.w	r4, #4294967295
   81ad6:	e079      	b.n	81bcc <kRtc+0x1dc>
		if((_centyear/100>20)||(_centyear/100<19)||(_centyear%100>99)) return -1;
   81ad8:	f2a6 736c 	subw	r3, r6, #1900	; 0x76c
   81adc:	2bc7      	cmp	r3, #199	; 0xc7
   81ade:	d902      	bls.n	81ae6 <kRtc+0xf6>
   81ae0:	f04f 34ff 	mov.w	r4, #4294967295
   81ae4:	e072      	b.n	81bcc <kRtc+0x1dc>
   81ae6:	4d7d      	ldr	r5, [pc, #500]	; (81cdc <kRtc+0x2ec>)
   81ae8:	fba5 3506 	umull	r3, r5, r5, r6
   81aec:	096d      	lsrs	r5, r5, #5
   81aee:	2364      	movs	r3, #100	; 0x64
   81af0:	fb03 6515 	mls	r5, r3, r5, r6
   81af4:	2d63      	cmp	r5, #99	; 0x63
   81af6:	d902      	bls.n	81afe <kRtc+0x10e>
   81af8:	f04f 34ff 	mov.w	r4, #4294967295
   81afc:	e066      	b.n	81bcc <kRtc+0x1dc>
		_day = _kRtcDayByDate(_date,_month,_centyear);
   81afe:	4633      	mov	r3, r6
   81b00:	4622      	mov	r2, r4
   81b02:	4639      	mov	r1, r7
   81b04:	2000      	movs	r0, #0
   81b06:	f7ff ff73 	bl	819f0 <kRtc>
		_res = rtc_set_date(RTC,_centyear%100,_month,_date,_day);
   81b0a:	9000      	str	r0, [sp, #0]
   81b0c:	463b      	mov	r3, r7
   81b0e:	4622      	mov	r2, r4
   81b10:	4629      	mov	r1, r5
   81b12:	486c      	ldr	r0, [pc, #432]	; (81cc4 <kRtc+0x2d4>)
   81b14:	4c72      	ldr	r4, [pc, #456]	; (81ce0 <kRtc+0x2f0>)
   81b16:	47a0      	blx	r4
   81b18:	4604      	mov	r4, r0
   81b1a:	900c      	str	r0, [sp, #48]	; 0x30
		if(_res == 0)
   81b1c:	2800      	cmp	r0, #0
   81b1e:	d155      	bne.n	81bcc <kRtc+0x1dc>
			rtc.summerTime = _kRtcIsSummerTime(_rtcCalr->DAY,_rtcCalr->DATE,_rtcCalr->MONTH,_rtcTimr->HOUR);
   81b20:	4b6b      	ldr	r3, [pc, #428]	; (81cd0 <kRtc+0x2e0>)
   81b22:	7899      	ldrb	r1, [r3, #2]
   81b24:	78da      	ldrb	r2, [r3, #3]
   81b26:	3b04      	subs	r3, #4
   81b28:	789b      	ldrb	r3, [r3, #2]
   81b2a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   81b2e:	9300      	str	r3, [sp, #0]
   81b30:	f001 031f 	and.w	r3, r1, #31
   81b34:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   81b38:	0949      	lsrs	r1, r1, #5
   81b3a:	2002      	movs	r0, #2
   81b3c:	f7ff ff58 	bl	819f0 <kRtc>
   81b40:	4b64      	ldr	r3, [pc, #400]	; (81cd4 <kRtc+0x2e4>)
   81b42:	781a      	ldrb	r2, [r3, #0]
   81b44:	f360 0282 	bfi	r2, r0, #2, #1
   81b48:	701a      	strb	r2, [r3, #0]
   81b4a:	e03f      	b.n	81bcc <kRtc+0x1dc>
		rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   81b4c:	ab02      	add	r3, sp, #8
   81b4e:	9300      	str	r3, [sp, #0]
   81b50:	ab03      	add	r3, sp, #12
   81b52:	aa04      	add	r2, sp, #16
   81b54:	a905      	add	r1, sp, #20
   81b56:	485b      	ldr	r0, [pc, #364]	; (81cc4 <kRtc+0x2d4>)
   81b58:	4c62      	ldr	r4, [pc, #392]	; (81ce4 <kRtc+0x2f4>)
   81b5a:	47a0      	blx	r4
		sprintf((char*)_pStr,"%s %d %s %4d",daysOfWeek[_day-1],(int)_date,months[_month-1],(int)_year);
   81b5c:	9b02      	ldr	r3, [sp, #8]
   81b5e:	3b01      	subs	r3, #1
   81b60:	4a61      	ldr	r2, [pc, #388]	; (81ce8 <kRtc+0x2f8>)
   81b62:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81b66:	9b05      	ldr	r3, [sp, #20]
   81b68:	9301      	str	r3, [sp, #4]
   81b6a:	9b04      	ldr	r3, [sp, #16]
   81b6c:	3b01      	subs	r3, #1
   81b6e:	495f      	ldr	r1, [pc, #380]	; (81cec <kRtc+0x2fc>)
   81b70:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
   81b74:	9300      	str	r3, [sp, #0]
   81b76:	9b03      	ldr	r3, [sp, #12]
   81b78:	495d      	ldr	r1, [pc, #372]	; (81cf0 <kRtc+0x300>)
   81b7a:	980d      	ldr	r0, [sp, #52]	; 0x34
   81b7c:	4c5d      	ldr	r4, [pc, #372]	; (81cf4 <kRtc+0x304>)
   81b7e:	47a0      	blx	r4
		if(_month>=3)
   81b80:	990e      	ldr	r1, [sp, #56]	; 0x38
   81b82:	2902      	cmp	r1, #2
   81b84:	d928      	bls.n	81bd8 <kRtc+0x1e8>
			_day = ((_month*23)/9 + _date + 4 + _centyear + _centyear/4 - _centyear/100 + _centyear/400 - 2 ) % 7 + 1;
   81b86:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81b88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81b8a:	1883      	adds	r3, r0, r2
   81b8c:	3302      	adds	r3, #2
   81b8e:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81b92:	4a52      	ldr	r2, [pc, #328]	; (81cdc <kRtc+0x2ec>)
   81b94:	fba2 2000 	umull	r2, r0, r2, r0
   81b98:	eb03 13d0 	add.w	r3, r3, r0, lsr #7
   81b9c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81ba0:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81ba4:	4954      	ldr	r1, [pc, #336]	; (81cf8 <kRtc+0x308>)
   81ba6:	fba1 1202 	umull	r1, r2, r1, r2
   81baa:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81bae:	eba3 1350 	sub.w	r3, r3, r0, lsr #5
   81bb2:	4a52      	ldr	r2, [pc, #328]	; (81cfc <kRtc+0x30c>)
   81bb4:	fba2 1203 	umull	r1, r2, r2, r3
   81bb8:	1a99      	subs	r1, r3, r2
   81bba:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81bbe:	0892      	lsrs	r2, r2, #2
   81bc0:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81bc4:	1a9b      	subs	r3, r3, r2
   81bc6:	3301      	adds	r3, #1
   81bc8:	930c      	str	r3, [sp, #48]	; 0x30
		return _day; //Normally 1 to 7 !!!!
   81bca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
}
   81bcc:	4620      	mov	r0, r4
   81bce:	b007      	add	sp, #28
   81bd0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81bd4:	b004      	add	sp, #16
   81bd6:	4770      	bx	lr
			_day = ((_month*23)/9 + _date + 4 + _centyear + (_centyear-1)/4 - (_centyear-1)/100 + (_centyear-1)/400 ) % 7 + 1;
   81bd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81bda:	1e50      	subs	r0, r2, #1
   81bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81bde:	4413      	add	r3, r2
   81be0:	3304      	adds	r3, #4
   81be2:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   81be6:	ebc1 02c2 	rsb	r2, r1, r2, lsl #3
   81bea:	4943      	ldr	r1, [pc, #268]	; (81cf8 <kRtc+0x308>)
   81bec:	fba1 1202 	umull	r1, r2, r1, r2
   81bf0:	eb03 0352 	add.w	r3, r3, r2, lsr #1
   81bf4:	eb03 0390 	add.w	r3, r3, r0, lsr #2
   81bf8:	4a38      	ldr	r2, [pc, #224]	; (81cdc <kRtc+0x2ec>)
   81bfa:	fba2 1200 	umull	r1, r2, r2, r0
   81bfe:	eb03 13d2 	add.w	r3, r3, r2, lsr #7
   81c02:	eba3 1352 	sub.w	r3, r3, r2, lsr #5
   81c06:	4a3d      	ldr	r2, [pc, #244]	; (81cfc <kRtc+0x30c>)
   81c08:	fba2 1203 	umull	r1, r2, r2, r3
   81c0c:	1a99      	subs	r1, r3, r2
   81c0e:	eb02 0251 	add.w	r2, r2, r1, lsr #1
   81c12:	0892      	lsrs	r2, r2, #2
   81c14:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   81c18:	1a9b      	subs	r3, r3, r2
   81c1a:	3301      	adds	r3, #1
   81c1c:	930c      	str	r3, [sp, #48]	; 0x30
   81c1e:	e7d4      	b.n	81bca <kRtc+0x1da>
		return (((_centyear%4==0)&&(_centyear%100!=0)) || (_centyear%400==0));
   81c20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81c22:	f013 0f03 	tst.w	r3, #3
   81c26:	d107      	bne.n	81c38 <kRtc+0x248>
   81c28:	4a2c      	ldr	r2, [pc, #176]	; (81cdc <kRtc+0x2ec>)
   81c2a:	fba2 1203 	umull	r1, r2, r2, r3
   81c2e:	0952      	lsrs	r2, r2, #5
   81c30:	2164      	movs	r1, #100	; 0x64
   81c32:	fb01 3212 	mls	r2, r1, r2, r3
   81c36:	b95a      	cbnz	r2, 81c50 <kRtc+0x260>
   81c38:	4c28      	ldr	r4, [pc, #160]	; (81cdc <kRtc+0x2ec>)
   81c3a:	fba4 2403 	umull	r2, r4, r4, r3
   81c3e:	09e4      	lsrs	r4, r4, #7
   81c40:	f44f 72c8 	mov.w	r2, #400	; 0x190
   81c44:	fb02 3414 	mls	r4, r2, r4, r3
   81c48:	fab4 f484 	clz	r4, r4
   81c4c:	0964      	lsrs	r4, r4, #5
   81c4e:	e7bd      	b.n	81bcc <kRtc+0x1dc>
   81c50:	2401      	movs	r4, #1
   81c52:	e7bb      	b.n	81bcc <kRtc+0x1dc>
				if(_date>=25)
   81c54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81c56:	2c18      	cmp	r4, #24
   81c58:	d928      	bls.n	81cac <kRtc+0x2bc>
					if(_day==SUNDAY)
   81c5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81c5c:	2a01      	cmp	r2, #1
   81c5e:	d008      	beq.n	81c72 <kRtc+0x282>
						return (((int8_t)(_date-24)-(int8_t)_day)>0);
   81c60:	3c18      	subs	r4, #24
   81c62:	b264      	sxtb	r4, r4
   81c64:	b252      	sxtb	r2, r2
   81c66:	1aa4      	subs	r4, r4, r2
   81c68:	2c00      	cmp	r4, #0
   81c6a:	bfd4      	ite	le
   81c6c:	2400      	movle	r4, #0
   81c6e:	2401      	movgt	r4, #1
   81c70:	e7ac      	b.n	81bcc <kRtc+0x1dc>
						if(_hour>=2) return 1;
   81c72:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81c74:	2c01      	cmp	r4, #1
   81c76:	bf94      	ite	ls
   81c78:	2400      	movls	r4, #0
   81c7a:	2401      	movhi	r4, #1
   81c7c:	e7a6      	b.n	81bcc <kRtc+0x1dc>
				if(_date>=25)
   81c7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81c80:	2c18      	cmp	r4, #24
   81c82:	d915      	bls.n	81cb0 <kRtc+0x2c0>
					if(_day==SUNDAY)
   81c84:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81c86:	2a01      	cmp	r2, #1
   81c88:	d008      	beq.n	81c9c <kRtc+0x2ac>
						return (((int8_t)(_date-24)-(int8_t)_day)<=0);
   81c8a:	3c18      	subs	r4, #24
   81c8c:	b264      	sxtb	r4, r4
   81c8e:	b252      	sxtb	r2, r2
   81c90:	1aa4      	subs	r4, r4, r2
   81c92:	2c00      	cmp	r4, #0
   81c94:	bfcc      	ite	gt
   81c96:	2400      	movgt	r4, #0
   81c98:	2401      	movle	r4, #1
   81c9a:	e797      	b.n	81bcc <kRtc+0x1dc>
						if(_hour<2) return 1;
   81c9c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81c9e:	2c01      	cmp	r4, #1
   81ca0:	bf8c      	ite	hi
   81ca2:	2400      	movhi	r4, #0
   81ca4:	2401      	movls	r4, #1
   81ca6:	e791      	b.n	81bcc <kRtc+0x1dc>
		if((_month>MARCH)&&(_month<OCTOBER)) return 1;
   81ca8:	2401      	movs	r4, #1
   81caa:	e78f      	b.n	81bcc <kRtc+0x1dc>
		return 0;
   81cac:	2400      	movs	r4, #0
   81cae:	e78d      	b.n	81bcc <kRtc+0x1dc>
   81cb0:	2400      	movs	r4, #0
   81cb2:	e78b      	b.n	81bcc <kRtc+0x1dc>
   81cb4:	00081811 	.word	0x00081811
   81cb8:	00080a3d 	.word	0x00080a3d
   81cbc:	00080a61 	.word	0x00080a61
   81cc0:	e000e100 	.word	0xe000e100
   81cc4:	400e1260 	.word	0x400e1260
   81cc8:	00080d49 	.word	0x00080d49
   81ccc:	00080da9 	.word	0x00080da9
   81cd0:	400e126c 	.word	0x400e126c
   81cd4:	20001128 	.word	0x20001128
   81cd8:	00088c5c 	.word	0x00088c5c
   81cdc:	51eb851f 	.word	0x51eb851f
   81ce0:	00080eb1 	.word	0x00080eb1
   81ce4:	00080e3d 	.word	0x00080e3d
   81ce8:	2000052c 	.word	0x2000052c
   81cec:	20000548 	.word	0x20000548
   81cf0:	00088c4c 	.word	0x00088c4c
   81cf4:	00083f95 	.word	0x00083f95
   81cf8:	38e38e39 	.word	0x38e38e39
   81cfc:	24924925 	.word	0x24924925

00081d00 <RTC_Handler>:
enum{
	_SHELL_PROMPT = 4
};

void RTC_Handler(void)
{
   81d00:	b510      	push	{r4, lr}
   81d02:	b082      	sub	sp, #8
	rtc_clear_status(RTC,RTC_SCCR_SECCLR);
   81d04:	2104      	movs	r1, #4
   81d06:	4806      	ldr	r0, [pc, #24]	; (81d20 <RTC_Handler+0x20>)
   81d08:	4b06      	ldr	r3, [pc, #24]	; (81d24 <RTC_Handler+0x24>)
   81d0a:	4798      	blx	r3
	PushTask(Shell,_SHELL_PROMPT,0,0);
   81d0c:	2300      	movs	r3, #0
   81d0e:	9300      	str	r3, [sp, #0]
   81d10:	2204      	movs	r2, #4
   81d12:	4905      	ldr	r1, [pc, #20]	; (81d28 <RTC_Handler+0x28>)
   81d14:	2066      	movs	r0, #102	; 0x66
   81d16:	4c05      	ldr	r4, [pc, #20]	; (81d2c <RTC_Handler+0x2c>)
   81d18:	47a0      	blx	r4
}
   81d1a:	b002      	add	sp, #8
   81d1c:	bd10      	pop	{r4, pc}
   81d1e:	bf00      	nop
   81d20:	400e1260 	.word	0x400e1260
   81d24:	00080f69 	.word	0x00080f69
   81d28:	0008226d 	.word	0x0008226d
   81d2c:	0008363d 	.word	0x0008363d

00081d30 <Lcd>:

#define ST_LCD_ON		0x0000001


uint32_t Lcd(uint32_t sc, ...)
{
   81d30:	b40f      	push	{r0, r1, r2, r3}
   81d32:	b570      	push	{r4, r5, r6, lr}
	switch(sc)
   81d34:	9904      	ldr	r1, [sp, #16]
   81d36:	1e4b      	subs	r3, r1, #1
   81d38:	2b67      	cmp	r3, #103	; 0x67
   81d3a:	f200 826a 	bhi.w	82212 <Lcd+0x4e2>
   81d3e:	e8df f013 	tbh	[pc, r3, lsl #1]
   81d42:	010e      	.short	0x010e
   81d44:	01680142 	.word	0x01680142
   81d48:	01a0018e 	.word	0x01a0018e
   81d4c:	01b201a9 	.word	0x01b201a9
   81d50:	024201d3 	.word	0x024201d3
   81d54:	02680255 	.word	0x02680255
   81d58:	02680268 	.word	0x02680268
   81d5c:	02680268 	.word	0x02680268
   81d60:	02680268 	.word	0x02680268
   81d64:	02680268 	.word	0x02680268
   81d68:	02680268 	.word	0x02680268
   81d6c:	02680268 	.word	0x02680268
   81d70:	02680268 	.word	0x02680268
   81d74:	02680268 	.word	0x02680268
   81d78:	02680268 	.word	0x02680268
   81d7c:	02680268 	.word	0x02680268
   81d80:	02680268 	.word	0x02680268
   81d84:	02680268 	.word	0x02680268
   81d88:	02680268 	.word	0x02680268
   81d8c:	02680268 	.word	0x02680268
   81d90:	02680268 	.word	0x02680268
   81d94:	02680268 	.word	0x02680268
   81d98:	02680268 	.word	0x02680268
   81d9c:	02680268 	.word	0x02680268
   81da0:	02680268 	.word	0x02680268
   81da4:	02680268 	.word	0x02680268
   81da8:	02680268 	.word	0x02680268
   81dac:	02680268 	.word	0x02680268
   81db0:	02680268 	.word	0x02680268
   81db4:	02680268 	.word	0x02680268
   81db8:	02680268 	.word	0x02680268
   81dbc:	02680268 	.word	0x02680268
   81dc0:	02680268 	.word	0x02680268
   81dc4:	02680268 	.word	0x02680268
   81dc8:	02680268 	.word	0x02680268
   81dcc:	02680268 	.word	0x02680268
   81dd0:	02680268 	.word	0x02680268
   81dd4:	02680268 	.word	0x02680268
   81dd8:	02680268 	.word	0x02680268
   81ddc:	02680268 	.word	0x02680268
   81de0:	02680268 	.word	0x02680268
   81de4:	02680268 	.word	0x02680268
   81de8:	02680268 	.word	0x02680268
   81dec:	02680268 	.word	0x02680268
   81df0:	02680268 	.word	0x02680268
   81df4:	02680268 	.word	0x02680268
   81df8:	02680268 	.word	0x02680268
   81dfc:	02680268 	.word	0x02680268
   81e00:	02680268 	.word	0x02680268
   81e04:	02680268 	.word	0x02680268
   81e08:	00c40068 	.word	0x00c40068
   81e0c:	00ee0103 	.word	0x00ee0103
   81e10:	00e9      	.short	0x00e9
	{
	case LCD_NEW:
		Lcd(LCD_DEL);
   81e12:	2065      	movs	r0, #101	; 0x65
   81e14:	f7ff ff8c 	bl	81d30 <Lcd>
		delay_ms(200);
   81e18:	48aa      	ldr	r0, [pc, #680]	; (820c4 <Lcd+0x394>)
   81e1a:	4cab      	ldr	r4, [pc, #684]	; (820c8 <Lcd+0x398>)
   81e1c:	47a0      	blx	r4
		_LcdSetDataLineOut();
   81e1e:	2009      	movs	r0, #9
   81e20:	f7ff ff86 	bl	81d30 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81e24:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e28:	2004      	movs	r0, #4
   81e2a:	4da8      	ldr	r5, [pc, #672]	; (820cc <Lcd+0x39c>)
   81e2c:	47a8      	blx	r5
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81e2e:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e32:	2005      	movs	r0, #5
   81e34:	47a8      	blx	r5
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81e36:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e3a:	2006      	movs	r0, #6
   81e3c:	47a8      	blx	r5
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81e3e:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81e42:	2007      	movs	r0, #7
   81e44:	47a8      	blx	r5

		gpio_set_pin_low(LCD_E);
   81e46:	2004      	movs	r0, #4
   81e48:	4da1      	ldr	r5, [pc, #644]	; (820d0 <Lcd+0x3a0>)
   81e4a:	47a8      	blx	r5
		gpio_set_pin_low(LCD_RS);
   81e4c:	2006      	movs	r0, #6
   81e4e:	47a8      	blx	r5
		gpio_set_pin_low(LCD_RWB);
   81e50:	2005      	movs	r0, #5
   81e52:	47a8      	blx	r5
		gpio_set_pin_high(LCD_BACKLIGHT);
   81e54:	2007      	movs	r0, #7
   81e56:	4b9f      	ldr	r3, [pc, #636]	; (820d4 <Lcd+0x3a4>)
   81e58:	4798      	blx	r3

		delay_ms(300);
   81e5a:	489f      	ldr	r0, [pc, #636]	; (820d8 <Lcd+0x3a8>)
   81e5c:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81e5e:	2130      	movs	r1, #48	; 0x30
   81e60:	2001      	movs	r0, #1
   81e62:	f7ff ff65 	bl	81d30 <Lcd>
		delay_ms(10);
   81e66:	4d9d      	ldr	r5, [pc, #628]	; (820dc <Lcd+0x3ac>)
   81e68:	4628      	mov	r0, r5
   81e6a:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81e6c:	2130      	movs	r1, #48	; 0x30
   81e6e:	2001      	movs	r0, #1
   81e70:	f7ff ff5e 	bl	81d30 <Lcd>
		delay_ms(10);
   81e74:	4628      	mov	r0, r5
   81e76:	47a0      	blx	r4
		_LcdWriteHalf(0x30);
   81e78:	2130      	movs	r1, #48	; 0x30
   81e7a:	2001      	movs	r0, #1
   81e7c:	f7ff ff58 	bl	81d30 <Lcd>
		delay_ms(10);
   81e80:	4628      	mov	r0, r5
   81e82:	47a0      	blx	r4
		_LcdWriteHalf(0x20);
   81e84:	2120      	movs	r1, #32
   81e86:	2001      	movs	r0, #1
   81e88:	f7ff ff52 	bl	81d30 <Lcd>
		delay_ms(10);
   81e8c:	4628      	mov	r0, r5
   81e8e:	47a0      	blx	r4
		_LcdWriteInst(0x28);	//SET FUNCTION : 4 bits interface/2 line display/5x7 dots
   81e90:	2128      	movs	r1, #40	; 0x28
   81e92:	2002      	movs	r0, #2
   81e94:	f7ff ff4c 	bl	81d30 <Lcd>
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81e98:	2108      	movs	r1, #8
   81e9a:	2002      	movs	r0, #2
   81e9c:	f7ff ff48 	bl	81d30 <Lcd>
		_LcdWriteInst(0x01);	//DISPLAY CLEAR
   81ea0:	2101      	movs	r1, #1
   81ea2:	2002      	movs	r0, #2
   81ea4:	f7ff ff44 	bl	81d30 <Lcd>
		_LcdWriteInst(0x06);	//ENTRY MODE SET : Cursor Increase/Display is not shift
   81ea8:	2106      	movs	r1, #6
   81eaa:	2002      	movs	r0, #2
   81eac:	f7ff ff40 	bl	81d30 <Lcd>
		_LcdWriteInst(0x0C);	//DISPLAY ON/CURSOR OFF
   81eb0:	210c      	movs	r1, #12
   81eb2:	2002      	movs	r0, #2
   81eb4:	f7ff ff3c 	bl	81d30 <Lcd>
		
		//_LcdWriteInst(0x01);	//DISPLAY CLEAR
		//_LcdWriteInst(0x02);	//RETURN HOME
		
		lcd.status = ST_LCD_ON;
   81eb8:	2201      	movs	r2, #1
   81eba:	4b89      	ldr	r3, [pc, #548]	; (820e0 <Lcd+0x3b0>)
   81ebc:	601a      	str	r2, [r3, #0]

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
	}
	return 0;
   81ebe:	2400      	movs	r4, #0
}
   81ec0:	4620      	mov	r0, r4
   81ec2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   81ec6:	b004      	add	sp, #16
   81ec8:	4770      	bx	lr
		_LcdWriteInst(0x08);	//DISPLAY OFF
   81eca:	2108      	movs	r1, #8
   81ecc:	2002      	movs	r0, #2
   81ece:	f7ff ff2f 	bl	81d30 <Lcd>
		_LcdSetDataLineIn();
   81ed2:	200a      	movs	r0, #10
   81ed4:	f7ff ff2c 	bl	81d30 <Lcd>
		gpio_configure_pin(LCD_E,			LCD_PIN_OUT_FLAGS);
   81ed8:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81edc:	2004      	movs	r0, #4
   81ede:	4c7b      	ldr	r4, [pc, #492]	; (820cc <Lcd+0x39c>)
   81ee0:	47a0      	blx	r4
		gpio_configure_pin(LCD_RWB,			LCD_PIN_OUT_FLAGS);
   81ee2:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81ee6:	2005      	movs	r0, #5
   81ee8:	47a0      	blx	r4
		gpio_configure_pin(LCD_RS,			LCD_PIN_OUT_FLAGS);
   81eea:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81eee:	2006      	movs	r0, #6
   81ef0:	47a0      	blx	r4
		gpio_configure_pin(LCD_BACKLIGHT,	LCD_PIN_OUT_FLAGS);
   81ef2:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81ef6:	2007      	movs	r0, #7
   81ef8:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   81efa:	2004      	movs	r0, #4
   81efc:	4c74      	ldr	r4, [pc, #464]	; (820d0 <Lcd+0x3a0>)
   81efe:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RS);
   81f00:	2006      	movs	r0, #6
   81f02:	47a0      	blx	r4
		gpio_set_pin_low(LCD_RWB);
   81f04:	2005      	movs	r0, #5
   81f06:	47a0      	blx	r4
		gpio_set_pin_low(LCD_BACKLIGHT);
   81f08:	2007      	movs	r0, #7
   81f0a:	47a0      	blx	r4
		lcd.status=0;
   81f0c:	2400      	movs	r4, #0
   81f0e:	4b74      	ldr	r3, [pc, #464]	; (820e0 <Lcd+0x3b0>)
   81f10:	601c      	str	r4, [r3, #0]
		break;
   81f12:	e7d5      	b.n	81ec0 <Lcd+0x190>
		return (uint32_t)(mIsBitsSet(lcd.status,ST_LCD_ON));
   81f14:	4b72      	ldr	r3, [pc, #456]	; (820e0 <Lcd+0x3b0>)
   81f16:	681c      	ldr	r4, [r3, #0]
   81f18:	f004 0401 	and.w	r4, r4, #1
   81f1c:	e7d0      	b.n	81ec0 <Lcd+0x190>
		_LcdSetCursor(_line,_col);
   81f1e:	9a07      	ldr	r2, [sp, #28]
   81f20:	9906      	ldr	r1, [sp, #24]
   81f22:	2007      	movs	r0, #7
   81f24:	f7ff ff04 	bl	81d30 <Lcd>
		while(*(char*)_str)
   81f28:	9c05      	ldr	r4, [sp, #20]
   81f2a:	7821      	ldrb	r1, [r4, #0]
   81f2c:	2900      	cmp	r1, #0
   81f2e:	f000 8175 	beq.w	8221c <Lcd+0x4ec>
			_LcdWriteData(*(char*)_str++);
   81f32:	2503      	movs	r5, #3
   81f34:	3401      	adds	r4, #1
   81f36:	9405      	str	r4, [sp, #20]
   81f38:	4628      	mov	r0, r5
   81f3a:	f7ff fef9 	bl	81d30 <Lcd>
		while(*(char*)_str)
   81f3e:	7821      	ldrb	r1, [r4, #0]
   81f40:	2900      	cmp	r1, #0
   81f42:	d1f7      	bne.n	81f34 <Lcd+0x204>
	return 0;
   81f44:	2400      	movs	r4, #0
   81f46:	e7bb      	b.n	81ec0 <Lcd+0x190>
		if(_onOff)
   81f48:	9c05      	ldr	r4, [sp, #20]
   81f4a:	b124      	cbz	r4, 81f56 <Lcd+0x226>
			gpio_set_pin_high(LCD_BACKLIGHT);
   81f4c:	2007      	movs	r0, #7
   81f4e:	4b61      	ldr	r3, [pc, #388]	; (820d4 <Lcd+0x3a4>)
   81f50:	4798      	blx	r3
	return 0;
   81f52:	2400      	movs	r4, #0
   81f54:	e7b4      	b.n	81ec0 <Lcd+0x190>
			gpio_set_pin_low(LCD_BACKLIGHT);
   81f56:	2007      	movs	r0, #7
   81f58:	4b5d      	ldr	r3, [pc, #372]	; (820d0 <Lcd+0x3a0>)
   81f5a:	4798      	blx	r3
   81f5c:	e7b0      	b.n	81ec0 <Lcd+0x190>
		_LcdSetDataLineOut();
   81f5e:	2009      	movs	r0, #9
   81f60:	f7ff fee6 	bl	81d30 <Lcd>
		gpio_set_pin_low(LCD_RWB);
   81f64:	2005      	movs	r0, #5
   81f66:	4b5a      	ldr	r3, [pc, #360]	; (820d0 <Lcd+0x3a0>)
   81f68:	4798      	blx	r3
		_LcdEup();
   81f6a:	2005      	movs	r0, #5
   81f6c:	f7ff fee0 	bl	81d30 <Lcd>
		(_half&0x80)?gpio_set_pin_high(LCD_DB7):gpio_set_pin_low(LCD_DB7);
   81f70:	9c05      	ldr	r4, [sp, #20]
   81f72:	f014 0f80 	tst.w	r4, #128	; 0x80
   81f76:	f04f 0003 	mov.w	r0, #3
   81f7a:	bf14      	ite	ne
   81f7c:	4b55      	ldrne	r3, [pc, #340]	; (820d4 <Lcd+0x3a4>)
   81f7e:	4b54      	ldreq	r3, [pc, #336]	; (820d0 <Lcd+0x3a0>)
   81f80:	4798      	blx	r3
		(_half&0x40)?gpio_set_pin_high(LCD_DB6):gpio_set_pin_low(LCD_DB6);
   81f82:	b2e4      	uxtb	r4, r4
   81f84:	f014 0f40 	tst.w	r4, #64	; 0x40
   81f88:	f04f 0002 	mov.w	r0, #2
   81f8c:	bf14      	ite	ne
   81f8e:	4b51      	ldrne	r3, [pc, #324]	; (820d4 <Lcd+0x3a4>)
   81f90:	4b4f      	ldreq	r3, [pc, #316]	; (820d0 <Lcd+0x3a0>)
   81f92:	4798      	blx	r3
		(_half&0x20)?gpio_set_pin_high(LCD_DB5):gpio_set_pin_low(LCD_DB5);
   81f94:	f014 0f20 	tst.w	r4, #32
   81f98:	f04f 0001 	mov.w	r0, #1
   81f9c:	bf14      	ite	ne
   81f9e:	4b4d      	ldrne	r3, [pc, #308]	; (820d4 <Lcd+0x3a4>)
   81fa0:	4b4b      	ldreq	r3, [pc, #300]	; (820d0 <Lcd+0x3a0>)
   81fa2:	4798      	blx	r3
		(_half&0x10)?gpio_set_pin_high(LCD_DB4):gpio_set_pin_low(LCD_DB4);
   81fa4:	f014 0f10 	tst.w	r4, #16
   81fa8:	f04f 0000 	mov.w	r0, #0
   81fac:	bf14      	ite	ne
   81fae:	4b49      	ldrne	r3, [pc, #292]	; (820d4 <Lcd+0x3a4>)
   81fb0:	4b47      	ldreq	r3, [pc, #284]	; (820d0 <Lcd+0x3a0>)
   81fb2:	4798      	blx	r3
		delay_us(500);
   81fb4:	f640 5065 	movw	r0, #3429	; 0xd65
   81fb8:	4b43      	ldr	r3, [pc, #268]	; (820c8 <Lcd+0x398>)
   81fba:	4798      	blx	r3
		_LcdEdown();
   81fbc:	2006      	movs	r0, #6
   81fbe:	f7ff feb7 	bl	81d30 <Lcd>
	return 0;
   81fc2:	2400      	movs	r4, #0
		break;
   81fc4:	e77c      	b.n	81ec0 <Lcd+0x190>
		_try=5;
   81fc6:	2305      	movs	r3, #5
   81fc8:	9304      	str	r3, [sp, #16]
		while(_LcdIsBusy()&&_try)
   81fca:	2408      	movs	r4, #8
			delay_us(500);
   81fcc:	f640 5665 	movw	r6, #3429	; 0xd65
   81fd0:	4d3d      	ldr	r5, [pc, #244]	; (820c8 <Lcd+0x398>)
		while(_LcdIsBusy()&&_try)
   81fd2:	4620      	mov	r0, r4
   81fd4:	f7ff feac 	bl	81d30 <Lcd>
   81fd8:	b148      	cbz	r0, 81fee <Lcd+0x2be>
   81fda:	9b04      	ldr	r3, [sp, #16]
   81fdc:	b13b      	cbz	r3, 81fee <Lcd+0x2be>
			if(!--_try)
   81fde:	3b01      	subs	r3, #1
   81fe0:	9304      	str	r3, [sp, #16]
   81fe2:	2b00      	cmp	r3, #0
   81fe4:	f000 811c 	beq.w	82220 <Lcd+0x4f0>
			delay_us(500);
   81fe8:	4630      	mov	r0, r6
   81fea:	47a8      	blx	r5
   81fec:	e7f1      	b.n	81fd2 <Lcd+0x2a2>
		gpio_set_pin_low(LCD_RS);
   81fee:	2006      	movs	r0, #6
   81ff0:	4d37      	ldr	r5, [pc, #220]	; (820d0 <Lcd+0x3a0>)
   81ff2:	47a8      	blx	r5
		_LcdWriteHalf(_inst);
   81ff4:	9c05      	ldr	r4, [sp, #20]
   81ff6:	b2e1      	uxtb	r1, r4
   81ff8:	2001      	movs	r0, #1
   81ffa:	f7ff fe99 	bl	81d30 <Lcd>
		gpio_set_pin_low(LCD_RS);
   81ffe:	2006      	movs	r0, #6
   82000:	47a8      	blx	r5
		_LcdWriteHalf(_inst<<4);
   82002:	0121      	lsls	r1, r4, #4
   82004:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   82008:	2001      	movs	r0, #1
   8200a:	f7ff fe91 	bl	81d30 <Lcd>
	return 0;
   8200e:	2400      	movs	r4, #0
		break;
   82010:	e756      	b.n	81ec0 <Lcd+0x190>
		_try=5;
   82012:	2305      	movs	r3, #5
   82014:	9304      	str	r3, [sp, #16]
		while(_LcdIsBusy()&&_try)
   82016:	2408      	movs	r4, #8
			delay_us(500);
   82018:	f640 5665 	movw	r6, #3429	; 0xd65
   8201c:	4d2a      	ldr	r5, [pc, #168]	; (820c8 <Lcd+0x398>)
		while(_LcdIsBusy()&&_try)
   8201e:	4620      	mov	r0, r4
   82020:	f7ff fe86 	bl	81d30 <Lcd>
   82024:	b148      	cbz	r0, 8203a <Lcd+0x30a>
   82026:	9b04      	ldr	r3, [sp, #16]
   82028:	b13b      	cbz	r3, 8203a <Lcd+0x30a>
			if(!--_try)
   8202a:	3b01      	subs	r3, #1
   8202c:	9304      	str	r3, [sp, #16]
   8202e:	2b00      	cmp	r3, #0
   82030:	f000 80f9 	beq.w	82226 <Lcd+0x4f6>
			delay_us(500);
   82034:	4630      	mov	r0, r6
   82036:	47a8      	blx	r5
   82038:	e7f1      	b.n	8201e <Lcd+0x2ee>
		gpio_set_pin_high(LCD_RS);
   8203a:	2006      	movs	r0, #6
   8203c:	4d25      	ldr	r5, [pc, #148]	; (820d4 <Lcd+0x3a4>)
   8203e:	47a8      	blx	r5
		_LcdWriteHalf(_data);
   82040:	9c05      	ldr	r4, [sp, #20]
   82042:	b2e1      	uxtb	r1, r4
   82044:	2001      	movs	r0, #1
   82046:	f7ff fe73 	bl	81d30 <Lcd>
		gpio_set_pin_high(LCD_RS);
   8204a:	2006      	movs	r0, #6
   8204c:	47a8      	blx	r5
		_LcdWriteHalf(_data<<4);
   8204e:	0121      	lsls	r1, r4, #4
   82050:	f401 617f 	and.w	r1, r1, #4080	; 0xff0
   82054:	2001      	movs	r0, #1
   82056:	f7ff fe6b 	bl	81d30 <Lcd>
	return 0;
   8205a:	2400      	movs	r4, #0
		break;
   8205c:	e730      	b.n	81ec0 <Lcd+0x190>
		delay_us(500);
   8205e:	f640 5065 	movw	r0, #3429	; 0xd65
   82062:	4c19      	ldr	r4, [pc, #100]	; (820c8 <Lcd+0x398>)
   82064:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   82066:	2004      	movs	r0, #4
   82068:	4b1a      	ldr	r3, [pc, #104]	; (820d4 <Lcd+0x3a4>)
   8206a:	4798      	blx	r3
		delay_us(500);
   8206c:	f640 5065 	movw	r0, #3429	; 0xd65
   82070:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   82072:	2004      	movs	r0, #4
   82074:	4b16      	ldr	r3, [pc, #88]	; (820d0 <Lcd+0x3a0>)
   82076:	4798      	blx	r3
		delay_us(500);
   82078:	f640 5065 	movw	r0, #3429	; 0xd65
   8207c:	47a0      	blx	r4
	return 0;
   8207e:	2400      	movs	r4, #0
		break;
   82080:	e71e      	b.n	81ec0 <Lcd+0x190>
		delay_us(1500);
   82082:	f642 002e 	movw	r0, #10286	; 0x282e
   82086:	4b10      	ldr	r3, [pc, #64]	; (820c8 <Lcd+0x398>)
   82088:	4798      	blx	r3
		gpio_set_pin_high(LCD_E);
   8208a:	2004      	movs	r0, #4
   8208c:	4b11      	ldr	r3, [pc, #68]	; (820d4 <Lcd+0x3a4>)
   8208e:	4798      	blx	r3
	return 0;
   82090:	2400      	movs	r4, #0
		break;
   82092:	e715      	b.n	81ec0 <Lcd+0x190>
		gpio_set_pin_low(LCD_E);
   82094:	2004      	movs	r0, #4
   82096:	4b0e      	ldr	r3, [pc, #56]	; (820d0 <Lcd+0x3a0>)
   82098:	4798      	blx	r3
		delay_us(1500);
   8209a:	f642 002e 	movw	r0, #10286	; 0x282e
   8209e:	4b0a      	ldr	r3, [pc, #40]	; (820c8 <Lcd+0x398>)
   820a0:	4798      	blx	r3
	return 0;
   820a2:	2400      	movs	r4, #0
		break;
   820a4:	e70c      	b.n	81ec0 <Lcd+0x190>
		_LcdWriteInst((line2addr[_nLine&0x03]+_nCol)|0x80);
   820a6:	9b05      	ldr	r3, [sp, #20]
   820a8:	f003 0303 	and.w	r3, r3, #3
   820ac:	4a0d      	ldr	r2, [pc, #52]	; (820e4 <Lcd+0x3b4>)
   820ae:	5cd1      	ldrb	r1, [r2, r3]
   820b0:	9b06      	ldr	r3, [sp, #24]
   820b2:	4419      	add	r1, r3
   820b4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   820b8:	2002      	movs	r0, #2
   820ba:	f7ff fe39 	bl	81d30 <Lcd>
	return 0;
   820be:	2400      	movs	r4, #0
		break;
   820c0:	e6fe      	b.n	81ec0 <Lcd+0x190>
   820c2:	bf00      	nop
   820c4:	0014ed25 	.word	0x0014ed25
   820c8:	20000001 	.word	0x20000001
   820cc:	00080909 	.word	0x00080909
   820d0:	000808cf 	.word	0x000808cf
   820d4:	000808b5 	.word	0x000808b5
   820d8:	001f63b7 	.word	0x001f63b7
   820dc:	00010bdc 	.word	0x00010bdc
   820e0:	2000112c 	.word	0x2000112c
   820e4:	00088d18 	.word	0x00088d18
		_LcdSetDataLineIn();
   820e8:	200a      	movs	r0, #10
   820ea:	f7ff fe21 	bl	81d30 <Lcd>
		gpio_set_pin_low(LCD_RS);
   820ee:	2006      	movs	r0, #6
   820f0:	4b4e      	ldr	r3, [pc, #312]	; (8222c <Lcd+0x4fc>)
   820f2:	4798      	blx	r3
		gpio_set_pin_high(LCD_RWB);
   820f4:	2005      	movs	r0, #5
   820f6:	4d4e      	ldr	r5, [pc, #312]	; (82230 <Lcd+0x500>)
   820f8:	47a8      	blx	r5
		delay_us(50);
   820fa:	f240 1057 	movw	r0, #343	; 0x157
   820fe:	4c4d      	ldr	r4, [pc, #308]	; (82234 <Lcd+0x504>)
   82100:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   82102:	2004      	movs	r0, #4
   82104:	47a8      	blx	r5
		delay_us(50);
   82106:	f240 1057 	movw	r0, #343	; 0x157
   8210a:	47a0      	blx	r4
		_lcdStatus = (gpio_pin_is_high(LCD_DB7)<<7)|(gpio_pin_is_high(LCD_DB6)<<6)|(gpio_pin_is_high(LCD_DB5)<<5)|(gpio_pin_is_high(LCD_DB4)<<4);
   8210c:	2003      	movs	r0, #3
   8210e:	4b4a      	ldr	r3, [pc, #296]	; (82238 <Lcd+0x508>)
   82110:	4798      	blx	r3
   82112:	2800      	cmp	r0, #0
   82114:	bf14      	ite	ne
   82116:	2580      	movne	r5, #128	; 0x80
   82118:	2500      	moveq	r5, #0
   8211a:	2002      	movs	r0, #2
   8211c:	4b46      	ldr	r3, [pc, #280]	; (82238 <Lcd+0x508>)
   8211e:	4798      	blx	r3
   82120:	2800      	cmp	r0, #0
   82122:	bf14      	ite	ne
   82124:	2440      	movne	r4, #64	; 0x40
   82126:	2400      	moveq	r4, #0
   82128:	4325      	orrs	r5, r4
   8212a:	2001      	movs	r0, #1
   8212c:	4b42      	ldr	r3, [pc, #264]	; (82238 <Lcd+0x508>)
   8212e:	4798      	blx	r3
   82130:	2800      	cmp	r0, #0
   82132:	bf14      	ite	ne
   82134:	2420      	movne	r4, #32
   82136:	2400      	moveq	r4, #0
   82138:	432c      	orrs	r4, r5
   8213a:	2000      	movs	r0, #0
   8213c:	4b3e      	ldr	r3, [pc, #248]	; (82238 <Lcd+0x508>)
   8213e:	4798      	blx	r3
   82140:	2800      	cmp	r0, #0
   82142:	bf14      	ite	ne
   82144:	2510      	movne	r5, #16
   82146:	2500      	moveq	r5, #0
   82148:	4325      	orrs	r5, r4
		delay_us(50);
   8214a:	f240 1057 	movw	r0, #343	; 0x157
   8214e:	4c39      	ldr	r4, [pc, #228]	; (82234 <Lcd+0x504>)
   82150:	47a0      	blx	r4
		gpio_set_pin_low(LCD_E);
   82152:	2004      	movs	r0, #4
   82154:	4b35      	ldr	r3, [pc, #212]	; (8222c <Lcd+0x4fc>)
   82156:	4798      	blx	r3
		delay_us(50);
   82158:	f240 1057 	movw	r0, #343	; 0x157
   8215c:	47a0      	blx	r4
		gpio_set_pin_high(LCD_E);
   8215e:	2004      	movs	r0, #4
   82160:	4b33      	ldr	r3, [pc, #204]	; (82230 <Lcd+0x500>)
   82162:	4798      	blx	r3
		delay_us(50);
   82164:	f240 1057 	movw	r0, #343	; 0x157
   82168:	47a0      	blx	r4
		_lcdStatus |= (gpio_pin_is_high(LCD_DB7)<<3)|(gpio_pin_is_high(LCD_DB6)<<2)|(gpio_pin_is_high(LCD_DB5)<<1)|(gpio_pin_is_high(LCD_DB4)<<0);
   8216a:	2003      	movs	r0, #3
   8216c:	4b32      	ldr	r3, [pc, #200]	; (82238 <Lcd+0x508>)
   8216e:	4798      	blx	r3
   82170:	2800      	cmp	r0, #0
   82172:	bf14      	ite	ne
   82174:	2408      	movne	r4, #8
   82176:	2400      	moveq	r4, #0
   82178:	2002      	movs	r0, #2
   8217a:	4b2f      	ldr	r3, [pc, #188]	; (82238 <Lcd+0x508>)
   8217c:	4798      	blx	r3
   8217e:	2800      	cmp	r0, #0
   82180:	bf14      	ite	ne
   82182:	2604      	movne	r6, #4
   82184:	2600      	moveq	r6, #0
   82186:	4326      	orrs	r6, r4
   82188:	2001      	movs	r0, #1
   8218a:	4b2b      	ldr	r3, [pc, #172]	; (82238 <Lcd+0x508>)
   8218c:	4798      	blx	r3
   8218e:	2800      	cmp	r0, #0
   82190:	bf14      	ite	ne
   82192:	2402      	movne	r4, #2
   82194:	2400      	moveq	r4, #0
   82196:	4334      	orrs	r4, r6
   82198:	2000      	movs	r0, #0
   8219a:	4b27      	ldr	r3, [pc, #156]	; (82238 <Lcd+0x508>)
   8219c:	4798      	blx	r3
   8219e:	2800      	cmp	r0, #0
   821a0:	bf18      	it	ne
   821a2:	f044 0401 	orrne.w	r4, r4, #1
   821a6:	432c      	orrs	r4, r5
		delay_us(50);
   821a8:	f240 1057 	movw	r0, #343	; 0x157
   821ac:	4d21      	ldr	r5, [pc, #132]	; (82234 <Lcd+0x504>)
   821ae:	47a8      	blx	r5
		gpio_set_pin_low(LCD_E);
   821b0:	2004      	movs	r0, #4
   821b2:	4b1e      	ldr	r3, [pc, #120]	; (8222c <Lcd+0x4fc>)
   821b4:	4798      	blx	r3
		delay_us(50);
   821b6:	f240 1057 	movw	r0, #343	; 0x157
   821ba:	47a8      	blx	r5
		_LcdSetDataLineOut();
   821bc:	2009      	movs	r0, #9
   821be:	f7ff fdb7 	bl	81d30 <Lcd>
		return (uint32_t)((_lcdStatus&0x80)==0x80);
   821c2:	09e4      	lsrs	r4, r4, #7
   821c4:	e67c      	b.n	81ec0 <Lcd+0x190>
		gpio_configure_pin(LCD_DB4,			LCD_PIN_OUT_FLAGS);
   821c6:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   821ca:	2000      	movs	r0, #0
   821cc:	4c1b      	ldr	r4, [pc, #108]	; (8223c <Lcd+0x50c>)
   821ce:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_OUT_FLAGS);
   821d0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   821d4:	2001      	movs	r0, #1
   821d6:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_OUT_FLAGS);
   821d8:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   821dc:	2002      	movs	r0, #2
   821de:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_OUT_FLAGS);
   821e0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   821e4:	2003      	movs	r0, #3
   821e6:	47a0      	blx	r4
	return 0;
   821e8:	2400      	movs	r4, #0
		break;
   821ea:	e669      	b.n	81ec0 <Lcd+0x190>
		gpio_configure_pin(LCD_DB4,			LCD_PIN_IN_FLAGS);
   821ec:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   821f0:	2000      	movs	r0, #0
   821f2:	4c12      	ldr	r4, [pc, #72]	; (8223c <Lcd+0x50c>)
   821f4:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB5,			LCD_PIN_IN_FLAGS);
   821f6:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   821fa:	2001      	movs	r0, #1
   821fc:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB6,			LCD_PIN_IN_FLAGS);
   821fe:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   82202:	2002      	movs	r0, #2
   82204:	47a0      	blx	r4
		gpio_configure_pin(LCD_DB7,			LCD_PIN_IN_FLAGS);
   82206:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   8220a:	2003      	movs	r0, #3
   8220c:	47a0      	blx	r4
	return 0;
   8220e:	2400      	movs	r4, #0
		break;
   82210:	e656      	b.n	81ec0 <Lcd+0x190>
		Error(ERROR_LCD_SWITCH_BAD_SC,sc);
   82212:	200f      	movs	r0, #15
   82214:	4b0a      	ldr	r3, [pc, #40]	; (82240 <Lcd+0x510>)
   82216:	4798      	blx	r3
	return 0;
   82218:	2400      	movs	r4, #0
   8221a:	e651      	b.n	81ec0 <Lcd+0x190>
   8221c:	2400      	movs	r4, #0
   8221e:	e64f      	b.n	81ec0 <Lcd+0x190>
				return -1;
   82220:	f04f 34ff 	mov.w	r4, #4294967295
   82224:	e64c      	b.n	81ec0 <Lcd+0x190>
				return -1;
   82226:	f04f 34ff 	mov.w	r4, #4294967295
   8222a:	e649      	b.n	81ec0 <Lcd+0x190>
   8222c:	000808cf 	.word	0x000808cf
   82230:	000808b5 	.word	0x000808b5
   82234:	20000001 	.word	0x20000001
   82238:	00080899 	.word	0x00080899
   8223c:	00080909 	.word	0x00080909
   82240:	00081811 	.word	0x00081811

00082244 <LcdFindHalf>:

uint8_t LcdFindHalf(uint32_t len)
{
   82244:	b508      	push	{r3, lr}
	float col;
	col = 20 - len;
   82246:	f1c0 0014 	rsb	r0, r0, #20
   8224a:	4b05      	ldr	r3, [pc, #20]	; (82260 <LcdFindHalf+0x1c>)
   8224c:	4798      	blx	r3
	col = col/2;
   8224e:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
   82252:	4b04      	ldr	r3, [pc, #16]	; (82264 <LcdFindHalf+0x20>)
   82254:	4798      	blx	r3
	return col;
   82256:	4b04      	ldr	r3, [pc, #16]	; (82268 <LcdFindHalf+0x24>)
   82258:	4798      	blx	r3
   8225a:	b2c0      	uxtb	r0, r0
   8225c:	bd08      	pop	{r3, pc}
   8225e:	bf00      	nop
   82260:	00083b11 	.word	0x00083b11
   82264:	00083bc1 	.word	0x00083bc1
   82268:	00083e61 	.word	0x00083e61

0008226c <Shell>:

#define EnterEditMode()					mBitsSet(shell.status,ST_SHELL_PROMPT_DISABLED)
#define ExitEditMode()					mBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED)

uint32_t Shell(uint32_t sc, ...)
{
   8226c:	b40f      	push	{r0, r1, r2, r3}
   8226e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82272:	b087      	sub	sp, #28
	uint32_t u1,u2;
	char*pSt;

	switch(sc)
   82274:	990e      	ldr	r1, [sp, #56]	; 0x38
   82276:	2904      	cmp	r1, #4
   82278:	f000 80a1 	beq.w	823be <Shell+0x152>
   8227c:	d940      	bls.n	82300 <Shell+0x94>
   8227e:	2906      	cmp	r1, #6
   82280:	d054      	beq.n	8232c <Shell+0xc0>
   82282:	d362      	bcc.n	8234a <Shell+0xde>
   82284:	2907      	cmp	r1, #7
   82286:	f000 85eb 	beq.w	82e60 <Shell+0xbf4>
   8228a:	2964      	cmp	r1, #100	; 0x64
   8228c:	f040 8668 	bne.w	82f60 <Shell+0xcf4>
	{
	case SHELL_NEW:
		shell.editTimer=shell.escapeTimer=0;
   82290:	4b9d      	ldr	r3, [pc, #628]	; (82508 <Shell+0x29c>)
   82292:	2400      	movs	r4, #0
   82294:	619c      	str	r4, [r3, #24]
   82296:	615c      	str	r4, [r3, #20]
		shell.state=IDLE;
   82298:	771c      	strb	r4, [r3, #28]
		shell.status=ST_SHELL_SHOW_UNKNOW_CRC;
   8229a:	2202      	movs	r2, #2
   8229c:	801a      	strh	r2, [r3, #0]
		Lcd(LCD_NEW);
   8229e:	2064      	movs	r0, #100	; 0x64
   822a0:	4b9a      	ldr	r3, [pc, #616]	; (8250c <Shell+0x2a0>)
   822a2:	4798      	blx	r3
		gpio_configure_pin(HEART_LED, HEART_LED_FLAGS);
   822a4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   822a8:	2034      	movs	r0, #52	; 0x34
   822aa:	4d99      	ldr	r5, [pc, #612]	; (82510 <Shell+0x2a4>)
   822ac:	47a8      	blx	r5
		gpio_configure_pin(POWER_LED, POWER_LED_FLAGS);
   822ae:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   822b2:	2033      	movs	r0, #51	; 0x33
   822b4:	47a8      	blx	r5

#if POWER_LED_ACTIVE_LEVEL
		gpio_set_pin_low(POWER_LED);
   822b6:	2033      	movs	r0, #51	; 0x33
   822b8:	4b96      	ldr	r3, [pc, #600]	; (82514 <Shell+0x2a8>)
   822ba:	4798      	blx	r3
#else
		gpio_set_pin_high(POWER_LED);
#endif
		kRtc(KRTC_NEW);
   822bc:	2064      	movs	r0, #100	; 0x64
   822be:	4b96      	ldr	r3, [pc, #600]	; (82518 <Shell+0x2ac>)
   822c0:	4798      	blx	r3
		Shellcom(SHELLCOM_NEW);
   822c2:	2064      	movs	r0, #100	; 0x64
   822c4:	4b95      	ldr	r3, [pc, #596]	; (8251c <Shell+0x2b0>)
   822c6:	4798      	blx	r3
		//LcdPutstr("Hello World!",0,0);
		//LcdPutstr("Hello World!",1,1);
		//LcdPutstr("Hello World!",2,2);
		//LcdPutstr("Hello World!",3,3);
		PushTask(Shell,_SHELL_HEART_BEAT,-1,0);
   822c8:	4e95      	ldr	r6, [pc, #596]	; (82520 <Shell+0x2b4>)
   822ca:	9400      	str	r4, [sp, #0]
   822cc:	f04f 33ff 	mov.w	r3, #4294967295
   822d0:	2201      	movs	r2, #1
   822d2:	4631      	mov	r1, r6
   822d4:	2066      	movs	r0, #102	; 0x66
   822d6:	4d93      	ldr	r5, [pc, #588]	; (82524 <Shell+0x2b8>)
   822d8:	47a8      	blx	r5
		PushTask(Shell,_SHELL_PROMPT,0,0);
   822da:	9400      	str	r4, [sp, #0]
   822dc:	4623      	mov	r3, r4
   822de:	2204      	movs	r2, #4
   822e0:	4631      	mov	r1, r6
   822e2:	2066      	movs	r0, #102	; 0x66
   822e4:	47a8      	blx	r5
		PushTask(Menu,MENU_NEW,0,0);
   822e6:	9400      	str	r4, [sp, #0]
   822e8:	4623      	mov	r3, r4
   822ea:	2264      	movs	r2, #100	; 0x64
   822ec:	498e      	ldr	r1, [pc, #568]	; (82528 <Shell+0x2bc>)
   822ee:	2066      	movs	r0, #102	; 0x66
   822f0:	47a8      	blx	r5

	/////// INVALID SC CODE TRAP ERROR /////////////////////////////////////////////////////////////////
	default:
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
	}
	return 0;
   822f2:	46a0      	mov	r8, r4
}
   822f4:	4640      	mov	r0, r8
   822f6:	b007      	add	sp, #28
   822f8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   822fc:	b004      	add	sp, #16
   822fe:	4770      	bx	lr
	switch(sc)
   82300:	2902      	cmp	r1, #2
   82302:	f000 80a6 	beq.w	82452 <Shell+0x1e6>
   82306:	f200 833c 	bhi.w	82982 <Shell+0x716>
   8230a:	2901      	cmp	r1, #1
   8230c:	f040 8628 	bne.w	82f60 <Shell+0xcf4>
		if(heartBeatRhythm[++k]==0) k=0;
   82310:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82312:	3301      	adds	r3, #1
   82314:	930f      	str	r3, [sp, #60]	; 0x3c
   82316:	4a85      	ldr	r2, [pc, #532]	; (8252c <Shell+0x2c0>)
   82318:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   8231c:	2a00      	cmp	r2, #0
   8231e:	d13b      	bne.n	82398 <Shell+0x12c>
   82320:	2300      	movs	r3, #0
   82322:	930f      	str	r3, [sp, #60]	; 0x3c
		else gpio_set_pin_low(HEART_LED);
   82324:	2034      	movs	r0, #52	; 0x34
   82326:	4b7b      	ldr	r3, [pc, #492]	; (82514 <Shell+0x2a8>)
   82328:	4798      	blx	r3
   8232a:	e03b      	b.n	823a4 <Shell+0x138>
	    while((*(char*)_pSep)&&(*(char*)_pSep!=_ch)) _pSep++;
   8232c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8232e:	781a      	ldrb	r2, [r3, #0]
   82330:	b14a      	cbz	r2, 82346 <Shell+0xda>
   82332:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   82336:	428a      	cmp	r2, r1
   82338:	d005      	beq.n	82346 <Shell+0xda>
   8233a:	3301      	adds	r3, #1
   8233c:	9310      	str	r3, [sp, #64]	; 0x40
   8233e:	781a      	ldrb	r2, [r3, #0]
   82340:	b10a      	cbz	r2, 82346 <Shell+0xda>
   82342:	428a      	cmp	r2, r1
   82344:	d1f9      	bne.n	8233a <Shell+0xce>
	    return (uint32_t)*(char*)_pSep;
   82346:	4690      	mov	r8, r2
   82348:	e7d4      	b.n	822f4 <Shell+0x88>
		while(len--)
   8234a:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   8234e:	f108 33ff 	add.w	r3, r8, #4294967295
   82352:	9310      	str	r3, [sp, #64]	; 0x40
   82354:	f1b8 0f00 	cmp.w	r8, #0
   82358:	d0cc      	beq.n	822f4 <Shell+0x88>
			Putc(hexDigits[*(char*)str>>4]);
   8235a:	4e75      	ldr	r6, [pc, #468]	; (82530 <Shell+0x2c4>)
   8235c:	2566      	movs	r5, #102	; 0x66
   8235e:	4c6f      	ldr	r4, [pc, #444]	; (8251c <Shell+0x2b0>)
   82360:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82362:	781b      	ldrb	r3, [r3, #0]
   82364:	091b      	lsrs	r3, r3, #4
   82366:	5cf1      	ldrb	r1, [r6, r3]
   82368:	4628      	mov	r0, r5
   8236a:	47a0      	blx	r4
			Putc(hexDigits[*(char*)str&0x0F]);
   8236c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8236e:	781b      	ldrb	r3, [r3, #0]
   82370:	f003 030f 	and.w	r3, r3, #15
   82374:	5cf1      	ldrb	r1, [r6, r3]
   82376:	4628      	mov	r0, r5
   82378:	47a0      	blx	r4
			Putc(' ');
   8237a:	2120      	movs	r1, #32
   8237c:	4628      	mov	r0, r5
   8237e:	47a0      	blx	r4
			str++;
   82380:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82382:	3301      	adds	r3, #1
   82384:	930f      	str	r3, [sp, #60]	; 0x3c
		while(len--)
   82386:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   8238a:	f108 33ff 	add.w	r3, r8, #4294967295
   8238e:	9310      	str	r3, [sp, #64]	; 0x40
   82390:	f1b8 0f00 	cmp.w	r8, #0
   82394:	d1e4      	bne.n	82360 <Shell+0xf4>
   82396:	e7ad      	b.n	822f4 <Shell+0x88>
		if((k%2==0)^(!HEART_LED_ACTIVE_LEVEL)) gpio_set_pin_high(HEART_LED);
   82398:	f013 0f01 	tst.w	r3, #1
   8239c:	d0c2      	beq.n	82324 <Shell+0xb8>
   8239e:	2034      	movs	r0, #52	; 0x34
   823a0:	4b64      	ldr	r3, [pc, #400]	; (82534 <Shell+0x2c8>)
   823a2:	4798      	blx	r3
		PushTask(Shell,_SHELL_HEART_BEAT,k,heartBeatRhythm[k]);
   823a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   823a6:	4a61      	ldr	r2, [pc, #388]	; (8252c <Shell+0x2c0>)
   823a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   823ac:	9200      	str	r2, [sp, #0]
   823ae:	2201      	movs	r2, #1
   823b0:	495b      	ldr	r1, [pc, #364]	; (82520 <Shell+0x2b4>)
   823b2:	2066      	movs	r0, #102	; 0x66
   823b4:	4c5b      	ldr	r4, [pc, #364]	; (82524 <Shell+0x2b8>)
   823b6:	47a0      	blx	r4
	return 0;
   823b8:	f04f 0800 	mov.w	r8, #0
		break;
   823bc:	e79a      	b.n	822f4 <Shell+0x88>
		rtc_get_time(RTC,&_hour,&_minute,&_second);
   823be:	ab05      	add	r3, sp, #20
   823c0:	aa0f      	add	r2, sp, #60	; 0x3c
   823c2:	a90e      	add	r1, sp, #56	; 0x38
   823c4:	485c      	ldr	r0, [pc, #368]	; (82538 <Shell+0x2cc>)
   823c6:	4c5d      	ldr	r4, [pc, #372]	; (8253c <Shell+0x2d0>)
   823c8:	47a0      	blx	r4
		if(mIsBitsClr(shell.status,ST_SHELL_PROMPT_DISABLED))
   823ca:	4b4f      	ldr	r3, [pc, #316]	; (82508 <Shell+0x29c>)
   823cc:	881b      	ldrh	r3, [r3, #0]
   823ce:	f013 0f04 	tst.w	r3, #4
   823d2:	d030      	beq.n	82436 <Shell+0x1ca>
		if(IsLcdOn())
   823d4:	2068      	movs	r0, #104	; 0x68
   823d6:	4b4d      	ldr	r3, [pc, #308]	; (8250c <Shell+0x2a0>)
   823d8:	4798      	blx	r3
   823da:	4680      	mov	r8, r0
   823dc:	2800      	cmp	r0, #0
   823de:	d089      	beq.n	822f4 <Shell+0x88>
			sprintf(shellTmpBuf,"%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   823e0:	ad0e      	add	r5, sp, #56	; 0x38
   823e2:	f855 2b04 	ldr.w	r2, [r5], #4
   823e6:	4c56      	ldr	r4, [pc, #344]	; (82540 <Shell+0x2d4>)
   823e8:	ae06      	add	r6, sp, #24
   823ea:	f856 3d04 	ldr.w	r3, [r6, #-4]!
   823ee:	9300      	str	r3, [sp, #0]
   823f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   823f2:	4954      	ldr	r1, [pc, #336]	; (82544 <Shell+0x2d8>)
   823f4:	4620      	mov	r0, r4
   823f6:	f8df 815c 	ldr.w	r8, [pc, #348]	; 82554 <Shell+0x2e8>
   823fa:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,1,6);
   823fc:	2306      	movs	r3, #6
   823fe:	2201      	movs	r2, #1
   82400:	4621      	mov	r1, r4
   82402:	2067      	movs	r0, #103	; 0x67
   82404:	4f41      	ldr	r7, [pc, #260]	; (8250c <Shell+0x2a0>)
   82406:	47b8      	blx	r7
			rtc_get_date(RTC,&_year,&_month,&_date,&_day);
   82408:	ab04      	add	r3, sp, #16
   8240a:	9300      	str	r3, [sp, #0]
   8240c:	4633      	mov	r3, r6
   8240e:	462a      	mov	r2, r5
   82410:	a90e      	add	r1, sp, #56	; 0x38
   82412:	4849      	ldr	r0, [pc, #292]	; (82538 <Shell+0x2cc>)
   82414:	4d4c      	ldr	r5, [pc, #304]	; (82548 <Shell+0x2dc>)
   82416:	47a8      	blx	r5
			sprintf(shellTmpBuf,"%02d/%02d/%04d",(int)_date,(int)_month,(int)_year);
   82418:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8241a:	9300      	str	r3, [sp, #0]
   8241c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8241e:	9a05      	ldr	r2, [sp, #20]
   82420:	494a      	ldr	r1, [pc, #296]	; (8254c <Shell+0x2e0>)
   82422:	4620      	mov	r0, r4
   82424:	47c0      	blx	r8
			LcdPutstr(shellTmpBuf,0,5);
   82426:	2305      	movs	r3, #5
   82428:	2200      	movs	r2, #0
   8242a:	4621      	mov	r1, r4
   8242c:	2067      	movs	r0, #103	; 0x67
   8242e:	47b8      	blx	r7
	return 0;
   82430:	f04f 0800 	mov.w	r8, #0
   82434:	e75e      	b.n	822f4 <Shell+0x88>
			sprintf(shellTmpBuf,"\r%02d:%02d:%02d",(int)_hour,(int)_minute,(int)_second);
   82436:	4c42      	ldr	r4, [pc, #264]	; (82540 <Shell+0x2d4>)
   82438:	9b05      	ldr	r3, [sp, #20]
   8243a:	9300      	str	r3, [sp, #0]
   8243c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8243e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82440:	4943      	ldr	r1, [pc, #268]	; (82550 <Shell+0x2e4>)
   82442:	4620      	mov	r0, r4
   82444:	4d43      	ldr	r5, [pc, #268]	; (82554 <Shell+0x2e8>)
   82446:	47a8      	blx	r5
			Putstr(shellTmpBuf);
   82448:	4621      	mov	r1, r4
   8244a:	2067      	movs	r0, #103	; 0x67
   8244c:	4b33      	ldr	r3, [pc, #204]	; (8251c <Shell+0x2b0>)
   8244e:	4798      	blx	r3
   82450:	e7c0      	b.n	823d4 <Shell+0x168>
		switch(shell.state)
   82452:	4b2d      	ldr	r3, [pc, #180]	; (82508 <Shell+0x29c>)
   82454:	7f1b      	ldrb	r3, [r3, #28]
   82456:	2b06      	cmp	r3, #6
   82458:	f200 8285 	bhi.w	82966 <Shell+0x6fa>
   8245c:	e8df f013 	tbh	[pc, r3, lsl #1]
   82460:	00840007 	.word	0x00840007
   82464:	009b0087 	.word	0x009b0087
   82468:	026f026c 	.word	0x026f026c
   8246c:	01bc      	.short	0x01bc
			switch(_kbhitchar)
   8246e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82470:	b2d3      	uxtb	r3, r2
   82472:	3b08      	subs	r3, #8
   82474:	2b18      	cmp	r3, #24
   82476:	d82d      	bhi.n	824d4 <Shell+0x268>
   82478:	e8df f013 	tbh	[pc, r3, lsl #1]
   8247c:	05790579 	.word	0x05790579
   82480:	002c0579 	.word	0x002c0579
   82484:	0579002c 	.word	0x0579002c
   82488:	002c002c 	.word	0x002c002c
   8248c:	002c002c 	.word	0x002c002c
   82490:	002c002c 	.word	0x002c002c
   82494:	002c002c 	.word	0x002c002c
   82498:	002c002c 	.word	0x002c002c
   8249c:	002c002c 	.word	0x002c002c
   824a0:	0019002c 	.word	0x0019002c
   824a4:	002c002c 	.word	0x002c002c
   824a8:	002c002c 	.word	0x002c002c
   824ac:	0579      	.short	0x0579
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   824ae:	4c16      	ldr	r4, [pc, #88]	; (82508 <Shell+0x29c>)
   824b0:	2314      	movs	r3, #20
   824b2:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   824b4:	4b28      	ldr	r3, [pc, #160]	; (82558 <Shell+0x2ec>)
   824b6:	60a3      	str	r3, [r4, #8]
   824b8:	201b      	movs	r0, #27
   824ba:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   824be:	2501      	movs	r5, #1
   824c0:	81e5      	strh	r5, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   824c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
   824c6:	4b25      	ldr	r3, [pc, #148]	; (8255c <Shell+0x2f0>)
   824c8:	4798      	blx	r3
   824ca:	8220      	strh	r0, [r4, #16]
				shell.state=ESCAPE;
   824cc:	7725      	strb	r5, [r4, #28]
	return 0;
   824ce:	f04f 0800 	mov.w	r8, #0
				break;
   824d2:	e70f      	b.n	822f4 <Shell+0x88>
				EnterEditMode();
   824d4:	4c0c      	ldr	r4, [pc, #48]	; (82508 <Shell+0x29c>)
   824d6:	8823      	ldrh	r3, [r4, #0]
   824d8:	f043 0304 	orr.w	r3, r3, #4
   824dc:	8023      	strh	r3, [r4, #0]
				shell.editTimer=SHELL_EDIT_TIMEOUT;
   824de:	2500      	movs	r5, #0
   824e0:	6165      	str	r5, [r4, #20]
				*shell.pEdit++=_kbhitchar;
   824e2:	4b1f      	ldr	r3, [pc, #124]	; (82560 <Shell+0x2f4>)
   824e4:	6063      	str	r3, [r4, #4]
			switch(_kbhitchar)
   824e6:	f803 2c01 	strb.w	r2, [r3, #-1]
				shell.nChar=1;
   824ea:	2301      	movs	r3, #1
   824ec:	81a3      	strh	r3, [r4, #12]
				Putstr("\r\n>"); Putc(_kbhitchar);
   824ee:	491d      	ldr	r1, [pc, #116]	; (82564 <Shell+0x2f8>)
   824f0:	2067      	movs	r0, #103	; 0x67
   824f2:	4e0a      	ldr	r6, [pc, #40]	; (8251c <Shell+0x2b0>)
   824f4:	47b0      	blx	r6
   824f6:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   824fa:	2066      	movs	r0, #102	; 0x66
   824fc:	47b0      	blx	r6
				shell.state=EDITION;
   824fe:	2303      	movs	r3, #3
   82500:	7723      	strb	r3, [r4, #28]
	return 0;
   82502:	46a8      	mov	r8, r5
				break;
   82504:	e6f6      	b.n	822f4 <Shell+0x88>
   82506:	bf00      	nop
   82508:	20001234 	.word	0x20001234
   8250c:	00081d31 	.word	0x00081d31
   82510:	00080909 	.word	0x00080909
   82514:	000808cf 	.word	0x000808cf
   82518:	000819f1 	.word	0x000819f1
   8251c:	00083401 	.word	0x00083401
   82520:	0008226d 	.word	0x0008226d
   82524:	0008363d 	.word	0x0008363d
   82528:	000802ad 	.word	0x000802ad
   8252c:	00088dd4 	.word	0x00088dd4
   82530:	00088de8 	.word	0x00088de8
   82534:	000808b5 	.word	0x000808b5
   82538:	400e1260 	.word	0x400e1260
   8253c:	00080d4d 	.word	0x00080d4d
   82540:	200012d4 	.word	0x200012d4
   82544:	00088d2c 	.word	0x00088d2c
   82548:	00080e3d 	.word	0x00080e3d
   8254c:	00088d3c 	.word	0x00088d3c
   82550:	00088d1c 	.word	0x00088d1c
   82554:	00083f95 	.word	0x00083f95
   82558:	20001255 	.word	0x20001255
   8255c:	000817fd 	.word	0x000817fd
   82560:	20001131 	.word	0x20001131
   82564:	00088d4c 	.word	0x00088d4c
				shell.state=ESCAPE_SEQ;
   82568:	2202      	movs	r2, #2
   8256a:	4b91      	ldr	r3, [pc, #580]	; (827b0 <Shell+0x544>)
   8256c:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   8256e:	4c90      	ldr	r4, [pc, #576]	; (827b0 <Shell+0x544>)
   82570:	2314      	movs	r3, #20
   82572:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++=_kbhitchar;
   82574:	68a3      	ldr	r3, [r4, #8]
   82576:	1c5a      	adds	r2, r3, #1
   82578:	60a2      	str	r2, [r4, #8]
   8257a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8257c:	701a      	strb	r2, [r3, #0]
				shell.nEscChar++;
   8257e:	89e3      	ldrh	r3, [r4, #14]
   82580:	3301      	adds	r3, #1
   82582:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   82584:	8a21      	ldrh	r1, [r4, #16]
   82586:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   8258a:	4b8a      	ldr	r3, [pc, #552]	; (827b4 <Shell+0x548>)
   8258c:	4798      	blx	r3
   8258e:	8220      	strh	r0, [r4, #16]
	return 0;
   82590:	f04f 0800 	mov.w	r8, #0
			break;
   82594:	e6ae      	b.n	822f4 <Shell+0x88>
			shell.editTimer=SHELL_EDIT_TIMEOUT;
   82596:	2200      	movs	r2, #0
   82598:	4b85      	ldr	r3, [pc, #532]	; (827b0 <Shell+0x544>)
   8259a:	615a      	str	r2, [r3, #20]
			switch(_kbhitchar)
   8259c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8259e:	b2d1      	uxtb	r1, r2
   825a0:	f1a1 0308 	sub.w	r3, r1, #8
   825a4:	2b13      	cmp	r3, #19
   825a6:	f200 8094 	bhi.w	826d2 <Shell+0x466>
   825aa:	e8df f003 	tbb	[pc, r3]
   825ae:	1e36      	.short	0x1e36
   825b0:	74929274 	.word	0x74929274
   825b4:	92929292 	.word	0x92929292
   825b8:	92929292 	.word	0x92929292
   825bc:	92929292 	.word	0x92929292
   825c0:	0a92      	.short	0x0a92
				shell.escapeTimer=SHELL_ESC_TIMEOUT;
   825c2:	4c7b      	ldr	r4, [pc, #492]	; (827b0 <Shell+0x544>)
   825c4:	2314      	movs	r3, #20
   825c6:	61a3      	str	r3, [r4, #24]
				*shell.pEscbuf++='\e';
   825c8:	4b7b      	ldr	r3, [pc, #492]	; (827b8 <Shell+0x54c>)
   825ca:	60a3      	str	r3, [r4, #8]
   825cc:	201b      	movs	r0, #27
   825ce:	f803 0c01 	strb.w	r0, [r3, #-1]
				shell.nEscChar=1;
   825d2:	2301      	movs	r3, #1
   825d4:	81e3      	strh	r3, [r4, #14]
				shell.crc=CRC16MODBUS('\e',0xFFFF);
   825d6:	f64f 71ff 	movw	r1, #65535	; 0xffff
   825da:	4b76      	ldr	r3, [pc, #472]	; (827b4 <Shell+0x548>)
   825dc:	4798      	blx	r3
   825de:	8220      	strh	r0, [r4, #16]
				shell.state=ED_ESCAPE;
   825e0:	2304      	movs	r3, #4
   825e2:	7723      	strb	r3, [r4, #28]
	return 0;
   825e4:	f04f 0800 	mov.w	r8, #0
				break;
   825e8:	e684      	b.n	822f4 <Shell+0x88>
				const char ctrl_right_arrow[]="\e[1;5C";
   825ea:	4b74      	ldr	r3, [pc, #464]	; (827bc <Shell+0x550>)
   825ec:	e893 0003 	ldmia.w	r3, {r0, r1}
   825f0:	9002      	str	r0, [sp, #8]
   825f2:	f8ad 100c 	strh.w	r1, [sp, #12]
   825f6:	0c09      	lsrs	r1, r1, #16
   825f8:	f88d 100e 	strb.w	r1, [sp, #14]
				memcpy(shellEscapeBuf,ctrl_right_arrow,6);
   825fc:	4b70      	ldr	r3, [pc, #448]	; (827c0 <Shell+0x554>)
   825fe:	6018      	str	r0, [r3, #0]
   82600:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   82604:	809a      	strh	r2, [r3, #4]
				shell.nEscChar=6;
   82606:	4b6a      	ldr	r3, [pc, #424]	; (827b0 <Shell+0x544>)
   82608:	2206      	movs	r2, #6
   8260a:	81da      	strh	r2, [r3, #14]
				shell.state=ED_ESCAPE_SEQ;
   8260c:	2205      	movs	r2, #5
   8260e:	771a      	strb	r2, [r3, #28]
				shell.escapeTimer=1;	//Ask a ESC SEQUENCE timeout : treat as a "ctrl+right_arrow" key
   82610:	2201      	movs	r2, #1
   82612:	619a      	str	r2, [r3, #24]
	return 0;
   82614:	f04f 0800 	mov.w	r8, #0
				break;
   82618:	e66c      	b.n	822f4 <Shell+0x88>
                if(shell.nChar)
   8261a:	4b65      	ldr	r3, [pc, #404]	; (827b0 <Shell+0x544>)
   8261c:	899a      	ldrh	r2, [r3, #12]
   8261e:	2a00      	cmp	r2, #0
   82620:	f000 84a9 	beq.w	82f76 <Shell+0xd0a>
	                pEnd = (uint32_t)shellEditBuf+shell.nChar;
   82624:	4c67      	ldr	r4, [pc, #412]	; (827c4 <Shell+0x558>)
   82626:	4422      	add	r2, r4
   82628:	920e      	str	r2, [sp, #56]	; 0x38
	                pSrc = (uint32_t)shell.pEdit;
   8262a:	685b      	ldr	r3, [r3, #4]
   8262c:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   8262e:	429a      	cmp	r2, r3
   82630:	d908      	bls.n	82644 <Shell+0x3d8>
		                *(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   82632:	781a      	ldrb	r2, [r3, #0]
   82634:	f803 2c01 	strb.w	r2, [r3, #-1]
   82638:	9b05      	ldr	r3, [sp, #20]
   8263a:	3301      	adds	r3, #1
   8263c:	9305      	str	r3, [sp, #20]
	                while(pSrc<pEnd)
   8263e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82640:	429a      	cmp	r2, r3
   82642:	d8f6      	bhi.n	82632 <Shell+0x3c6>
	                *(char*)pSrc++=' ';
   82644:	2220      	movs	r2, #32
   82646:	f803 2c01 	strb.w	r2, [r3, #-1]
	                Putstr("\e[D");
   8264a:	4d5f      	ldr	r5, [pc, #380]	; (827c8 <Shell+0x55c>)
   8264c:	4629      	mov	r1, r5
   8264e:	2067      	movs	r0, #103	; 0x67
   82650:	4e5e      	ldr	r6, [pc, #376]	; (827cc <Shell+0x560>)
   82652:	47b0      	blx	r6
	                shell.pEdit--; shell.nChar--;
   82654:	4a56      	ldr	r2, [pc, #344]	; (827b0 <Shell+0x544>)
   82656:	6851      	ldr	r1, [r2, #4]
   82658:	3901      	subs	r1, #1
   8265a:	6051      	str	r1, [r2, #4]
   8265c:	8993      	ldrh	r3, [r2, #12]
   8265e:	3b01      	subs	r3, #1
   82660:	b29b      	uxth	r3, r3
   82662:	8193      	strh	r3, [r2, #12]
	                k=Putstrlen(shell.pEdit,shell.nChar-(shell.pEdit-shellEditBuf)+1);
   82664:	1c62      	adds	r2, r4, #1
   82666:	441a      	add	r2, r3
   82668:	1a52      	subs	r2, r2, r1
   8266a:	2068      	movs	r0, #104	; 0x68
   8266c:	47b0      	blx	r6
   8266e:	4680      	mov	r8, r0
	                while(k--) Putstr("\e[D");
   82670:	1e43      	subs	r3, r0, #1
   82672:	9305      	str	r3, [sp, #20]
   82674:	2800      	cmp	r0, #0
   82676:	f43f ae3d 	beq.w	822f4 <Shell+0x88>
   8267a:	2667      	movs	r6, #103	; 0x67
   8267c:	4c53      	ldr	r4, [pc, #332]	; (827cc <Shell+0x560>)
   8267e:	4629      	mov	r1, r5
   82680:	4630      	mov	r0, r6
   82682:	47a0      	blx	r4
   82684:	f8dd 8014 	ldr.w	r8, [sp, #20]
   82688:	f108 33ff 	add.w	r3, r8, #4294967295
   8268c:	9305      	str	r3, [sp, #20]
   8268e:	f1b8 0f00 	cmp.w	r8, #0
   82692:	d1f4      	bne.n	8267e <Shell+0x412>
   82694:	e62e      	b.n	822f4 <Shell+0x88>
				if(shell.nChar==0)
   82696:	4b46      	ldr	r3, [pc, #280]	; (827b0 <Shell+0x544>)
   82698:	899b      	ldrh	r3, [r3, #12]
   8269a:	b96b      	cbnz	r3, 826b8 <Shell+0x44c>
					ExitEditMode();
   8269c:	4b44      	ldr	r3, [pc, #272]	; (827b0 <Shell+0x544>)
   8269e:	881a      	ldrh	r2, [r3, #0]
   826a0:	f022 0204 	bic.w	r2, r2, #4
   826a4:	801a      	strh	r2, [r3, #0]
					shell.state=IDLE;
   826a6:	f04f 0800 	mov.w	r8, #0
   826aa:	f883 801c 	strb.w	r8, [r3, #28]
					Putc('\r');
   826ae:	210d      	movs	r1, #13
   826b0:	2066      	movs	r0, #102	; 0x66
   826b2:	4b46      	ldr	r3, [pc, #280]	; (827cc <Shell+0x560>)
   826b4:	4798      	blx	r3
   826b6:	e61d      	b.n	822f4 <Shell+0x88>
					shell.state=EXECUTION;
   826b8:	2206      	movs	r2, #6
   826ba:	4b3d      	ldr	r3, [pc, #244]	; (827b0 <Shell+0x544>)
   826bc:	771a      	strb	r2, [r3, #28]
					PushTask(Shell,_SHELL_KBHIT,'\r',0);
   826be:	2400      	movs	r4, #0
   826c0:	9400      	str	r4, [sp, #0]
   826c2:	230d      	movs	r3, #13
   826c4:	2202      	movs	r2, #2
   826c6:	4942      	ldr	r1, [pc, #264]	; (827d0 <Shell+0x564>)
   826c8:	2066      	movs	r0, #102	; 0x66
   826ca:	4d42      	ldr	r5, [pc, #264]	; (827d4 <Shell+0x568>)
   826cc:	47a8      	blx	r5
	return 0;
   826ce:	46a0      	mov	r8, r4
   826d0:	e610      	b.n	822f4 <Shell+0x88>
			switch(_kbhitchar)
   826d2:	b2d2      	uxtb	r2, r2
				if(shell.nChar==0)
   826d4:	4b36      	ldr	r3, [pc, #216]	; (827b0 <Shell+0x544>)
   826d6:	899b      	ldrh	r3, [r3, #12]
   826d8:	b983      	cbnz	r3, 826fc <Shell+0x490>
					if(_kbhitchar!=0x20) //Excluding space char
   826da:	2a20      	cmp	r2, #32
   826dc:	f000 844f 	beq.w	82f7e <Shell+0xd12>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   826e0:	4c33      	ldr	r4, [pc, #204]	; (827b0 <Shell+0x544>)
   826e2:	6863      	ldr	r3, [r4, #4]
   826e4:	1c58      	adds	r0, r3, #1
   826e6:	6060      	str	r0, [r4, #4]
   826e8:	701a      	strb	r2, [r3, #0]
   826ea:	2066      	movs	r0, #102	; 0x66
   826ec:	4b37      	ldr	r3, [pc, #220]	; (827cc <Shell+0x560>)
   826ee:	4798      	blx	r3
   826f0:	89a3      	ldrh	r3, [r4, #12]
   826f2:	3301      	adds	r3, #1
   826f4:	81a3      	strh	r3, [r4, #12]
	return 0;
   826f6:	f04f 0800 	mov.w	r8, #0
   826fa:	e5fb      	b.n	822f4 <Shell+0x88>
				else if(shell.nChar<(SHELL_EDITBUF_LEN))
   826fc:	2bff      	cmp	r3, #255	; 0xff
   826fe:	f200 8451 	bhi.w	82fa4 <Shell+0xd38>
					if(mIsBitsClr(shell.status,ST_SHELL_INSERT_MODE))
   82702:	482b      	ldr	r0, [pc, #172]	; (827b0 <Shell+0x544>)
   82704:	8800      	ldrh	r0, [r0, #0]
   82706:	f010 0f01 	tst.w	r0, #1
   8270a:	d112      	bne.n	82732 <Shell+0x4c6>
						if(shell.pEdit==shellEditBuf+shell.nChar)	shell.nChar++;
   8270c:	4828      	ldr	r0, [pc, #160]	; (827b0 <Shell+0x544>)
   8270e:	6840      	ldr	r0, [r0, #4]
   82710:	4c2c      	ldr	r4, [pc, #176]	; (827c4 <Shell+0x558>)
   82712:	441c      	add	r4, r3
   82714:	42a0      	cmp	r0, r4
   82716:	d102      	bne.n	8271e <Shell+0x4b2>
   82718:	3301      	adds	r3, #1
   8271a:	4c25      	ldr	r4, [pc, #148]	; (827b0 <Shell+0x544>)
   8271c:	81a3      	strh	r3, [r4, #12]
						Putc((*shell.pEdit++=_kbhitchar));
   8271e:	1c44      	adds	r4, r0, #1
   82720:	4b23      	ldr	r3, [pc, #140]	; (827b0 <Shell+0x544>)
   82722:	605c      	str	r4, [r3, #4]
   82724:	7002      	strb	r2, [r0, #0]
   82726:	2066      	movs	r0, #102	; 0x66
   82728:	4b28      	ldr	r3, [pc, #160]	; (827cc <Shell+0x560>)
   8272a:	4798      	blx	r3
	return 0;
   8272c:	f04f 0800 	mov.w	r8, #0
   82730:	e5e0      	b.n	822f4 <Shell+0x88>
						if(shell.pEdit!=shellEditBuf+shell.nChar)
   82732:	4a1f      	ldr	r2, [pc, #124]	; (827b0 <Shell+0x544>)
   82734:	6851      	ldr	r1, [r2, #4]
   82736:	4a23      	ldr	r2, [pc, #140]	; (827c4 <Shell+0x558>)
   82738:	441a      	add	r2, r3
   8273a:	4291      	cmp	r1, r2
   8273c:	d00f      	beq.n	8275e <Shell+0x4f2>
							pDst=(uint32_t)shellEditBuf+shell.nChar;
   8273e:	4a21      	ldr	r2, [pc, #132]	; (827c4 <Shell+0x558>)
   82740:	4413      	add	r3, r2
   82742:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   82744:	1e5a      	subs	r2, r3, #1
   82746:	4291      	cmp	r1, r2
   82748:	d809      	bhi.n	8275e <Shell+0x4f2>
   8274a:	4919      	ldr	r1, [pc, #100]	; (827b0 <Shell+0x544>)
								*(char*)pDst=*(char*)(pDst-1); pDst--;
   8274c:	7812      	ldrb	r2, [r2, #0]
   8274e:	701a      	strb	r2, [r3, #0]
   82750:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82752:	1e53      	subs	r3, r2, #1
   82754:	930e      	str	r3, [sp, #56]	; 0x38
							while(pDst-1>=(uint32_t)shell.pEdit)
   82756:	3a02      	subs	r2, #2
   82758:	6848      	ldr	r0, [r1, #4]
   8275a:	4290      	cmp	r0, r2
   8275c:	d9f6      	bls.n	8274c <Shell+0x4e0>
						Putc((*shell.pEdit++=_kbhitchar)); shell.nChar++;
   8275e:	4c14      	ldr	r4, [pc, #80]	; (827b0 <Shell+0x544>)
   82760:	6863      	ldr	r3, [r4, #4]
   82762:	1c5a      	adds	r2, r3, #1
   82764:	6062      	str	r2, [r4, #4]
   82766:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82768:	7019      	strb	r1, [r3, #0]
   8276a:	b2c9      	uxtb	r1, r1
   8276c:	2066      	movs	r0, #102	; 0x66
   8276e:	4d17      	ldr	r5, [pc, #92]	; (827cc <Shell+0x560>)
   82770:	47a8      	blx	r5
   82772:	89a3      	ldrh	r3, [r4, #12]
   82774:	3301      	adds	r3, #1
   82776:	b29b      	uxth	r3, r3
   82778:	81a3      	strh	r3, [r4, #12]
						k=Putstrlen(shell.pEdit,(shellEditBuf+shell.nChar-shell.pEdit));
   8277a:	6861      	ldr	r1, [r4, #4]
   8277c:	4a11      	ldr	r2, [pc, #68]	; (827c4 <Shell+0x558>)
   8277e:	441a      	add	r2, r3
   82780:	1a52      	subs	r2, r2, r1
   82782:	2068      	movs	r0, #104	; 0x68
   82784:	47a8      	blx	r5
   82786:	4680      	mov	r8, r0
						while(k--) Putstr("\e[D");
   82788:	1e43      	subs	r3, r0, #1
   8278a:	930e      	str	r3, [sp, #56]	; 0x38
   8278c:	2800      	cmp	r0, #0
   8278e:	f43f adb1 	beq.w	822f4 <Shell+0x88>
   82792:	4e0d      	ldr	r6, [pc, #52]	; (827c8 <Shell+0x55c>)
   82794:	2567      	movs	r5, #103	; 0x67
   82796:	4c0d      	ldr	r4, [pc, #52]	; (827cc <Shell+0x560>)
   82798:	4631      	mov	r1, r6
   8279a:	4628      	mov	r0, r5
   8279c:	47a0      	blx	r4
   8279e:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
   827a2:	f108 33ff 	add.w	r3, r8, #4294967295
   827a6:	930e      	str	r3, [sp, #56]	; 0x38
   827a8:	f1b8 0f00 	cmp.w	r8, #0
   827ac:	d1f4      	bne.n	82798 <Shell+0x52c>
   827ae:	e5a1      	b.n	822f4 <Shell+0x88>
   827b0:	20001234 	.word	0x20001234
   827b4:	000817fd 	.word	0x000817fd
   827b8:	20001255 	.word	0x20001255
   827bc:	00088dcc 	.word	0x00088dcc
   827c0:	20001254 	.word	0x20001254
   827c4:	20001130 	.word	0x20001130
   827c8:	00088d50 	.word	0x00088d50
   827cc:	00083401 	.word	0x00083401
   827d0:	0008226d 	.word	0x0008226d
   827d4:	0008363d 	.word	0x0008363d
			k=shell.nChar-(shell.pEdit-shellEditBuf);
   827d8:	4a8f      	ldr	r2, [pc, #572]	; (82a18 <Shell+0x7ac>)
   827da:	8993      	ldrh	r3, [r2, #12]
   827dc:	6852      	ldr	r2, [r2, #4]
   827de:	498f      	ldr	r1, [pc, #572]	; (82a1c <Shell+0x7b0>)
   827e0:	1a52      	subs	r2, r2, r1
   827e2:	1a9b      	subs	r3, r3, r2
			while(k--) Putstr("\e[C");
   827e4:	1e5a      	subs	r2, r3, #1
   827e6:	9205      	str	r2, [sp, #20]
   827e8:	b153      	cbz	r3, 82800 <Shell+0x594>
   827ea:	4e8d      	ldr	r6, [pc, #564]	; (82a20 <Shell+0x7b4>)
   827ec:	2567      	movs	r5, #103	; 0x67
   827ee:	4c8d      	ldr	r4, [pc, #564]	; (82a24 <Shell+0x7b8>)
   827f0:	4631      	mov	r1, r6
   827f2:	4628      	mov	r0, r5
   827f4:	47a0      	blx	r4
   827f6:	9b05      	ldr	r3, [sp, #20]
   827f8:	1e5a      	subs	r2, r3, #1
   827fa:	9205      	str	r2, [sp, #20]
   827fc:	2b00      	cmp	r3, #0
   827fe:	d1f7      	bne.n	827f0 <Shell+0x584>
			shell.pEdit=shellEditBuf+shell.nChar;
   82800:	4d85      	ldr	r5, [pc, #532]	; (82a18 <Shell+0x7ac>)
   82802:	89aa      	ldrh	r2, [r5, #12]
   82804:	4c85      	ldr	r4, [pc, #532]	; (82a1c <Shell+0x7b0>)
   82806:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   82808:	3301      	adds	r3, #1
   8280a:	606b      	str	r3, [r5, #4]
   8280c:	2600      	movs	r6, #0
   8280e:	5516      	strb	r6, [r2, r4]
			_CleanUp_cmd_Line();
   82810:	2007      	movs	r0, #7
   82812:	f7ff fd2b 	bl	8226c <Shell>
			shell.pEdit=shellEditBuf+shell.nChar;
   82816:	89aa      	ldrh	r2, [r5, #12]
   82818:	1913      	adds	r3, r2, r4
			*shell.pEdit++='\0';
   8281a:	3301      	adds	r3, #1
   8281c:	606b      	str	r3, [r5, #4]
   8281e:	5516      	strb	r6, [r2, r4]
			Putstr("\r\n/>");
   82820:	4981      	ldr	r1, [pc, #516]	; (82a28 <Shell+0x7bc>)
   82822:	2067      	movs	r0, #103	; 0x67
   82824:	4d7f      	ldr	r5, [pc, #508]	; (82a24 <Shell+0x7b8>)
   82826:	47a8      	blx	r5
			Putstr(shellEditBuf);
   82828:	4621      	mov	r1, r4
   8282a:	2067      	movs	r0, #103	; 0x67
   8282c:	47a8      	blx	r5
			mstrtokReset();
   8282e:	4b7f      	ldr	r3, [pc, #508]	; (82a2c <Shell+0x7c0>)
   82830:	4798      	blx	r3
			pToken=mstrtok(shellEditBuf,(char*)" \r\n");
   82832:	497f      	ldr	r1, [pc, #508]	; (82a30 <Shell+0x7c4>)
   82834:	4620      	mov	r0, r4
   82836:	4b7f      	ldr	r3, [pc, #508]	; (82a34 <Shell+0x7c8>)
   82838:	4798      	blx	r3
   8283a:	4604      	mov	r4, r0
   8283c:	900e      	str	r0, [sp, #56]	; 0x38
			if(pToken)
   8283e:	b968      	cbnz	r0, 8285c <Shell+0x5f0>
			Putstr("\r\n");
   82840:	497d      	ldr	r1, [pc, #500]	; (82a38 <Shell+0x7cc>)
   82842:	2067      	movs	r0, #103	; 0x67
   82844:	4b77      	ldr	r3, [pc, #476]	; (82a24 <Shell+0x7b8>)
   82846:	4798      	blx	r3
			shell.state=IDLE;
   82848:	4b73      	ldr	r3, [pc, #460]	; (82a18 <Shell+0x7ac>)
   8284a:	f04f 0800 	mov.w	r8, #0
   8284e:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   82852:	881a      	ldrh	r2, [r3, #0]
   82854:	f022 0204 	bic.w	r2, r2, #4
   82858:	801a      	strh	r2, [r3, #0]
			break;
   8285a:	e54b      	b.n	822f4 <Shell+0x88>
				shell.crc=CRC16MODBUSFRAME((unsigned char*)pToken,strlen((char*)pToken));
   8285c:	4b77      	ldr	r3, [pc, #476]	; (82a3c <Shell+0x7d0>)
   8285e:	4798      	blx	r3
   82860:	4601      	mov	r1, r0
   82862:	4620      	mov	r0, r4
   82864:	4b76      	ldr	r3, [pc, #472]	; (82a40 <Shell+0x7d4>)
   82866:	4798      	blx	r3
   82868:	b281      	uxth	r1, r0
   8286a:	4b6b      	ldr	r3, [pc, #428]	; (82a18 <Shell+0x7ac>)
   8286c:	8219      	strh	r1, [r3, #16]
				k=0;
   8286e:	9605      	str	r6, [sp, #20]
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   82870:	4b74      	ldr	r3, [pc, #464]	; (82a44 <Shell+0x7d8>)
   82872:	881b      	ldrh	r3, [r3, #0]
   82874:	b1f3      	cbz	r3, 828b4 <Shell+0x648>
   82876:	4299      	cmp	r1, r3
   82878:	d01e      	beq.n	828b8 <Shell+0x64c>
   8287a:	2301      	movs	r3, #1
   8287c:	4a71      	ldr	r2, [pc, #452]	; (82a44 <Shell+0x7d8>)
   8287e:	e000      	b.n	82882 <Shell+0x616>
   82880:	462b      	mov	r3, r5
   82882:	f832 4033 	ldrh.w	r4, [r2, r3, lsl #3]
   82886:	b124      	cbz	r4, 82892 <Shell+0x626>
   82888:	1c5d      	adds	r5, r3, #1
   8288a:	42a1      	cmp	r1, r4
   8288c:	d1f8      	bne.n	82880 <Shell+0x614>
   8288e:	9305      	str	r3, [sp, #20]
   82890:	e000      	b.n	82894 <Shell+0x628>
   82892:	9305      	str	r3, [sp, #20]
				if(commands[k].pCmdFunc)
   82894:	4c6b      	ldr	r4, [pc, #428]	; (82a44 <Shell+0x7d8>)
   82896:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   8289a:	685d      	ldr	r5, [r3, #4]
   8289c:	b175      	cbz	r5, 828bc <Shell+0x650>
					commands[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   8289e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   828a0:	4620      	mov	r0, r4
   828a2:	4b66      	ldr	r3, [pc, #408]	; (82a3c <Shell+0x7d0>)
   828a4:	4798      	blx	r3
   828a6:	1c61      	adds	r1, r4, #1
   828a8:	4401      	add	r1, r0
   828aa:	485b      	ldr	r0, [pc, #364]	; (82a18 <Shell+0x7ac>)
   828ac:	47a8      	blx	r5
					mstrtokRestore();
   828ae:	4b66      	ldr	r3, [pc, #408]	; (82a48 <Shell+0x7dc>)
   828b0:	4798      	blx	r3
   828b2:	e7c5      	b.n	82840 <Shell+0x5d4>
				while((commands[k].cmdCode)&&(commands[k].cmdCode!=shell.crc)) k++;
   828b4:	2300      	movs	r3, #0
   828b6:	e7ed      	b.n	82894 <Shell+0x628>
   828b8:	2300      	movs	r3, #0
   828ba:	e7eb      	b.n	82894 <Shell+0x628>
					k=0;
   828bc:	2300      	movs	r3, #0
   828be:	9305      	str	r3, [sp, #20]
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   828c0:	4b62      	ldr	r3, [pc, #392]	; (82a4c <Shell+0x7e0>)
   828c2:	881b      	ldrh	r3, [r3, #0]
   828c4:	b313      	cbz	r3, 8290c <Shell+0x6a0>
   828c6:	4299      	cmp	r1, r3
   828c8:	d022      	beq.n	82910 <Shell+0x6a4>
   828ca:	2301      	movs	r3, #1
   828cc:	4c5f      	ldr	r4, [pc, #380]	; (82a4c <Shell+0x7e0>)
   828ce:	e000      	b.n	828d2 <Shell+0x666>
   828d0:	462b      	mov	r3, r5
   828d2:	f834 2033 	ldrh.w	r2, [r4, r3, lsl #3]
   828d6:	b122      	cbz	r2, 828e2 <Shell+0x676>
   828d8:	1c5d      	adds	r5, r3, #1
   828da:	4291      	cmp	r1, r2
   828dc:	d1f8      	bne.n	828d0 <Shell+0x664>
   828de:	9305      	str	r3, [sp, #20]
   828e0:	e000      	b.n	828e4 <Shell+0x678>
   828e2:	9305      	str	r3, [sp, #20]
                    if(cmdEntries[k].pCmdFunc)
   828e4:	4959      	ldr	r1, [pc, #356]	; (82a4c <Shell+0x7e0>)
   828e6:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
   828ea:	685d      	ldr	r5, [r3, #4]
   828ec:	b195      	cbz	r5, 82914 <Shell+0x6a8>
	                    cmdEntries[k].pCmdFunc((uint32_t)&shell,(void*)(pToken+strlen((char*)pToken)+1));
   828ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   828f0:	4620      	mov	r0, r4
   828f2:	4b52      	ldr	r3, [pc, #328]	; (82a3c <Shell+0x7d0>)
   828f4:	4798      	blx	r3
   828f6:	1c61      	adds	r1, r4, #1
   828f8:	4401      	add	r1, r0
   828fa:	4847      	ldr	r0, [pc, #284]	; (82a18 <Shell+0x7ac>)
   828fc:	47a8      	blx	r5
						mstrtokRestore();
   828fe:	4b52      	ldr	r3, [pc, #328]	; (82a48 <Shell+0x7dc>)
   82900:	4798      	blx	r3
						Putstr("\r\n");
   82902:	494d      	ldr	r1, [pc, #308]	; (82a38 <Shell+0x7cc>)
   82904:	2067      	movs	r0, #103	; 0x67
   82906:	4b47      	ldr	r3, [pc, #284]	; (82a24 <Shell+0x7b8>)
   82908:	4798      	blx	r3
   8290a:	e799      	b.n	82840 <Shell+0x5d4>
                    while((cmdEntries[k].cmdCode)&&(cmdEntries[k].cmdCode!=shell.crc)) k++;
   8290c:	2300      	movs	r3, #0
   8290e:	e7e9      	b.n	828e4 <Shell+0x678>
   82910:	2300      	movs	r3, #0
   82912:	e7e7      	b.n	828e4 <Shell+0x678>
                    else if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   82914:	4b40      	ldr	r3, [pc, #256]	; (82a18 <Shell+0x7ac>)
   82916:	881b      	ldrh	r3, [r3, #0]
   82918:	f013 0f02 	tst.w	r3, #2
   8291c:	d090      	beq.n	82840 <Shell+0x5d4>
	                    sprintf(shellTmpBuf,"\tunknown cmd: %04X\r\n",shell.crc);
   8291e:	4c4c      	ldr	r4, [pc, #304]	; (82a50 <Shell+0x7e4>)
   82920:	b282      	uxth	r2, r0
   82922:	494c      	ldr	r1, [pc, #304]	; (82a54 <Shell+0x7e8>)
   82924:	4620      	mov	r0, r4
   82926:	4b4c      	ldr	r3, [pc, #304]	; (82a58 <Shell+0x7ec>)
   82928:	4798      	blx	r3
	                    Putstr(shellTmpBuf);
   8292a:	4621      	mov	r1, r4
   8292c:	2067      	movs	r0, #103	; 0x67
   8292e:	4b3d      	ldr	r3, [pc, #244]	; (82a24 <Shell+0x7b8>)
   82930:	4798      	blx	r3
						mstrtokRestore();
   82932:	4b45      	ldr	r3, [pc, #276]	; (82a48 <Shell+0x7dc>)
   82934:	4798      	blx	r3
   82936:	e783      	b.n	82840 <Shell+0x5d4>
			shell.state=ED_ESCAPE_SEQ;
   82938:	2205      	movs	r2, #5
   8293a:	4b37      	ldr	r3, [pc, #220]	; (82a18 <Shell+0x7ac>)
   8293c:	771a      	strb	r2, [r3, #28]
			shell.escapeTimer=SHELL_ESC_TIMEOUT;
   8293e:	4c36      	ldr	r4, [pc, #216]	; (82a18 <Shell+0x7ac>)
   82940:	2314      	movs	r3, #20
   82942:	61a3      	str	r3, [r4, #24]
			*shell.pEscbuf++=_kbhitchar;
   82944:	68a3      	ldr	r3, [r4, #8]
   82946:	1c5a      	adds	r2, r3, #1
   82948:	60a2      	str	r2, [r4, #8]
   8294a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8294c:	701a      	strb	r2, [r3, #0]
			shell.nEscChar++;
   8294e:	89e3      	ldrh	r3, [r4, #14]
   82950:	3301      	adds	r3, #1
   82952:	81e3      	strh	r3, [r4, #14]
			shell.crc=CRC16MODBUS(_kbhitchar,shell.crc);
   82954:	8a21      	ldrh	r1, [r4, #16]
   82956:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
   8295a:	4b40      	ldr	r3, [pc, #256]	; (82a5c <Shell+0x7f0>)
   8295c:	4798      	blx	r3
   8295e:	8220      	strh	r0, [r4, #16]
	return 0;
   82960:	f04f 0800 	mov.w	r8, #0
			break;
   82964:	e4c6      	b.n	822f4 <Shell+0x88>
			Putstr("\r\n\t***** case _SHELL_KBHIT: BAD case! ******\r\n");
   82966:	493e      	ldr	r1, [pc, #248]	; (82a60 <Shell+0x7f4>)
   82968:	2067      	movs	r0, #103	; 0x67
   8296a:	4b2e      	ldr	r3, [pc, #184]	; (82a24 <Shell+0x7b8>)
   8296c:	4798      	blx	r3
			shell.state=IDLE;
   8296e:	4b2a      	ldr	r3, [pc, #168]	; (82a18 <Shell+0x7ac>)
   82970:	f04f 0800 	mov.w	r8, #0
   82974:	f883 801c 	strb.w	r8, [r3, #28]
			ExitEditMode();
   82978:	881a      	ldrh	r2, [r3, #0]
   8297a:	f022 0204 	bic.w	r2, r2, #4
   8297e:	801a      	strh	r2, [r3, #0]
			break;
   82980:	e4b8      	b.n	822f4 <Shell+0x88>
		if(shell.escapeTimer)
   82982:	4b25      	ldr	r3, [pc, #148]	; (82a18 <Shell+0x7ac>)
   82984:	699b      	ldr	r3, [r3, #24]
   82986:	b1b3      	cbz	r3, 829b6 <Shell+0x74a>
			if(--shell.escapeTimer==0)
   82988:	f103 38ff 	add.w	r8, r3, #4294967295
   8298c:	4b22      	ldr	r3, [pc, #136]	; (82a18 <Shell+0x7ac>)
   8298e:	f8c3 8018 	str.w	r8, [r3, #24]
   82992:	f1b8 0f00 	cmp.w	r8, #0
   82996:	d10e      	bne.n	829b6 <Shell+0x74a>
				switch(shell.state)
   82998:	7f19      	ldrb	r1, [r3, #28]
   8299a:	2905      	cmp	r1, #5
   8299c:	f200 825c 	bhi.w	82e58 <Shell+0xbec>
   829a0:	e8df f011 	tbh	[pc, r1, lsl #1]
   829a4:	00060009 	.word	0x00060009
   829a8:	025a0016 	.word	0x025a0016
   829ac:	0097008b 	.word	0x0097008b
					shell.state=IDLE;
   829b0:	2200      	movs	r2, #0
   829b2:	4b19      	ldr	r3, [pc, #100]	; (82a18 <Shell+0x7ac>)
   829b4:	771a      	strb	r2, [r3, #28]
        if(shell.editTimer)
   829b6:	4b18      	ldr	r3, [pc, #96]	; (82a18 <Shell+0x7ac>)
   829b8:	f8d3 8014 	ldr.w	r8, [r3, #20]
   829bc:	f1b8 0f00 	cmp.w	r8, #0
   829c0:	f43f ac98 	beq.w	822f4 <Shell+0x88>
	        if(--shell.editTimer==0)
   829c4:	f108 32ff 	add.w	r2, r8, #4294967295
   829c8:	615a      	str	r2, [r3, #20]
	return 0;
   829ca:	f04f 0800 	mov.w	r8, #0
   829ce:	e491      	b.n	822f4 <Shell+0x88>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   829d0:	4c11      	ldr	r4, [pc, #68]	; (82a18 <Shell+0x7ac>)
   829d2:	89e1      	ldrh	r1, [r4, #14]
   829d4:	4823      	ldr	r0, [pc, #140]	; (82a64 <Shell+0x7f8>)
   829d6:	4b1a      	ldr	r3, [pc, #104]	; (82a40 <Shell+0x7d4>)
   829d8:	4798      	blx	r3
   829da:	b280      	uxth	r0, r0
   829dc:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   829de:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   829e2:	4298      	cmp	r0, r3
   829e4:	d00c      	beq.n	82a00 <Shell+0x794>
   829e6:	f24c 73fa 	movw	r3, #51194	; 0xc7fa
   829ea:	4298      	cmp	r0, r3
   829ec:	d00c      	beq.n	82a08 <Shell+0x79c>
						if(mIsBitsSet(shell.status,ST_SHELL_SHOW_UNKNOW_CRC))
   829ee:	4b0a      	ldr	r3, [pc, #40]	; (82a18 <Shell+0x7ac>)
   829f0:	881b      	ldrh	r3, [r3, #0]
   829f2:	f013 0f02 	tst.w	r3, #2
   829f6:	d14c      	bne.n	82a92 <Shell+0x826>
						shell.state=IDLE;
   829f8:	2200      	movs	r2, #0
   829fa:	4b07      	ldr	r3, [pc, #28]	; (82a18 <Shell+0x7ac>)
   829fc:	771a      	strb	r2, [r3, #28]
						break;
   829fe:	e7da      	b.n	829b6 <Shell+0x74a>
						shell.state=IDLE;
   82a00:	2200      	movs	r2, #0
   82a02:	4b05      	ldr	r3, [pc, #20]	; (82a18 <Shell+0x7ac>)
   82a04:	771a      	strb	r2, [r3, #28]
						break;
   82a06:	e7d6      	b.n	829b6 <Shell+0x74a>
						if(shell.nChar)
   82a08:	4b03      	ldr	r3, [pc, #12]	; (82a18 <Shell+0x7ac>)
   82a0a:	899b      	ldrh	r3, [r3, #12]
   82a0c:	bb63      	cbnz	r3, 82a68 <Shell+0x7fc>
							shell.state=IDLE;
   82a0e:	2200      	movs	r2, #0
   82a10:	4b01      	ldr	r3, [pc, #4]	; (82a18 <Shell+0x7ac>)
   82a12:	771a      	strb	r2, [r3, #28]
   82a14:	e7cf      	b.n	829b6 <Shell+0x74a>
   82a16:	bf00      	nop
   82a18:	20001234 	.word	0x20001234
   82a1c:	20001130 	.word	0x20001130
   82a20:	00088d54 	.word	0x00088d54
   82a24:	00083401 	.word	0x00083401
   82a28:	00088d58 	.word	0x00088d58
   82a2c:	0008387d 	.word	0x0008387d
   82a30:	00088c48 	.word	0x00088c48
   82a34:	000838a9 	.word	0x000838a9
   82a38:	00088da4 	.word	0x00088da4
   82a3c:	0008409d 	.word	0x0008409d
   82a40:	000817c9 	.word	0x000817c9
   82a44:	00088bec 	.word	0x00088bec
   82a48:	00083865 	.word	0x00083865
   82a4c:	000890f4 	.word	0x000890f4
   82a50:	200012d4 	.word	0x200012d4
   82a54:	00088d60 	.word	0x00088d60
   82a58:	00083f95 	.word	0x00083f95
   82a5c:	000817fd 	.word	0x000817fd
   82a60:	00088d78 	.word	0x00088d78
   82a64:	20001254 	.word	0x20001254
							EnterEditMode();
   82a68:	4c99      	ldr	r4, [pc, #612]	; (82cd0 <Shell+0xa64>)
   82a6a:	8822      	ldrh	r2, [r4, #0]
   82a6c:	f042 0204 	orr.w	r2, r2, #4
   82a70:	8022      	strh	r2, [r4, #0]
							shell.editTimer=SHELL_EDIT_TIMEOUT;
   82a72:	2200      	movs	r2, #0
   82a74:	6162      	str	r2, [r4, #20]
							shell.pEdit=shellEditBuf+shell.nChar;
   82a76:	4e97      	ldr	r6, [pc, #604]	; (82cd4 <Shell+0xa68>)
   82a78:	4433      	add	r3, r6
   82a7a:	6063      	str	r3, [r4, #4]
							Putstr("\r\n");
   82a7c:	4996      	ldr	r1, [pc, #600]	; (82cd8 <Shell+0xa6c>)
   82a7e:	2067      	movs	r0, #103	; 0x67
   82a80:	4d96      	ldr	r5, [pc, #600]	; (82cdc <Shell+0xa70>)
   82a82:	47a8      	blx	r5
							Putstrlen(shellEditBuf,shell.nChar);
   82a84:	89a2      	ldrh	r2, [r4, #12]
   82a86:	4631      	mov	r1, r6
   82a88:	2068      	movs	r0, #104	; 0x68
   82a8a:	47a8      	blx	r5
							shell.state=EDITION;
   82a8c:	2303      	movs	r3, #3
   82a8e:	7723      	strb	r3, [r4, #28]
   82a90:	e791      	b.n	829b6 <Shell+0x74a>
							Putstr("\r\n   ESC_SEQ: ");
   82a92:	4993      	ldr	r1, [pc, #588]	; (82ce0 <Shell+0xa74>)
   82a94:	2067      	movs	r0, #103	; 0x67
   82a96:	4c91      	ldr	r4, [pc, #580]	; (82cdc <Shell+0xa70>)
   82a98:	47a0      	blx	r4
							_PutAscii2Hex(shellEscapeBuf,shell.nEscChar);
   82a9a:	4e8d      	ldr	r6, [pc, #564]	; (82cd0 <Shell+0xa64>)
   82a9c:	89f2      	ldrh	r2, [r6, #14]
   82a9e:	4991      	ldr	r1, [pc, #580]	; (82ce4 <Shell+0xa78>)
   82aa0:	2005      	movs	r0, #5
   82aa2:	f7ff fbe3 	bl	8226c <Shell>
							sprintf(shellTmpBuf," <%04X>\r\n",shell.crc);
   82aa6:	4d90      	ldr	r5, [pc, #576]	; (82ce8 <Shell+0xa7c>)
   82aa8:	8a32      	ldrh	r2, [r6, #16]
   82aaa:	4990      	ldr	r1, [pc, #576]	; (82cec <Shell+0xa80>)
   82aac:	4628      	mov	r0, r5
   82aae:	4b90      	ldr	r3, [pc, #576]	; (82cf0 <Shell+0xa84>)
   82ab0:	4798      	blx	r3
							Putstr(shellTmpBuf);
   82ab2:	4629      	mov	r1, r5
   82ab4:	2067      	movs	r0, #103	; 0x67
   82ab6:	47a0      	blx	r4
   82ab8:	e79e      	b.n	829f8 <Shell+0x78c>
					Putstr("\e[2K\r");
   82aba:	498e      	ldr	r1, [pc, #568]	; (82cf4 <Shell+0xa88>)
   82abc:	2067      	movs	r0, #103	; 0x67
   82abe:	4b87      	ldr	r3, [pc, #540]	; (82cdc <Shell+0xa70>)
   82ac0:	4798      	blx	r3
					shell.state=IDLE;
   82ac2:	4b83      	ldr	r3, [pc, #524]	; (82cd0 <Shell+0xa64>)
   82ac4:	2200      	movs	r2, #0
   82ac6:	771a      	strb	r2, [r3, #28]
					ExitEditMode();
   82ac8:	881a      	ldrh	r2, [r3, #0]
   82aca:	f022 0204 	bic.w	r2, r2, #4
   82ace:	801a      	strh	r2, [r3, #0]
					break;
   82ad0:	e771      	b.n	829b6 <Shell+0x74a>
					shell.crc=CRC16MODBUSFRAME((unsigned char*)shellEscapeBuf,shell.nEscChar);
   82ad2:	4c7f      	ldr	r4, [pc, #508]	; (82cd0 <Shell+0xa64>)
   82ad4:	89e1      	ldrh	r1, [r4, #14]
   82ad6:	4883      	ldr	r0, [pc, #524]	; (82ce4 <Shell+0xa78>)
   82ad8:	4b87      	ldr	r3, [pc, #540]	; (82cf8 <Shell+0xa8c>)
   82ada:	4798      	blx	r3
   82adc:	b280      	uxth	r0, r0
   82ade:	8220      	strh	r0, [r4, #16]
					switch(shell.crc)
   82ae0:	f24c 133a 	movw	r3, #49466	; 0xc13a
   82ae4:	4298      	cmp	r0, r3
   82ae6:	f000 810f 	beq.w	82d08 <Shell+0xa9c>
   82aea:	d834      	bhi.n	82b56 <Shell+0x8ea>
   82aec:	f245 33e2 	movw	r3, #21474	; 0x53e2
   82af0:	4298      	cmp	r0, r3
   82af2:	f000 80e2 	beq.w	82cba <Shell+0xa4e>
   82af6:	d81e      	bhi.n	82b36 <Shell+0x8ca>
   82af8:	f240 53bb 	movw	r3, #1467	; 0x5bb
   82afc:	4298      	cmp	r0, r3
   82afe:	f000 811e 	beq.w	82d3e <Shell+0xad2>
   82b02:	f240 637b 	movw	r3, #1659	; 0x67b
   82b06:	4298      	cmp	r0, r3
   82b08:	d11e      	bne.n	82b48 <Shell+0x8dc>
						if(shell.pEdit<(shellEditBuf+shell.nChar))
   82b0a:	4a71      	ldr	r2, [pc, #452]	; (82cd0 <Shell+0xa64>)
   82b0c:	8993      	ldrh	r3, [r2, #12]
   82b0e:	4971      	ldr	r1, [pc, #452]	; (82cd4 <Shell+0xa68>)
   82b10:	440b      	add	r3, r1
   82b12:	6852      	ldr	r2, [r2, #4]
   82b14:	429a      	cmp	r2, r3
   82b16:	d207      	bcs.n	82b28 <Shell+0x8bc>
							Putstr("\e[C");
   82b18:	4978      	ldr	r1, [pc, #480]	; (82cfc <Shell+0xa90>)
   82b1a:	2067      	movs	r0, #103	; 0x67
   82b1c:	4b6f      	ldr	r3, [pc, #444]	; (82cdc <Shell+0xa70>)
   82b1e:	4798      	blx	r3
							shell.pEdit++;
   82b20:	4a6b      	ldr	r2, [pc, #428]	; (82cd0 <Shell+0xa64>)
   82b22:	6853      	ldr	r3, [r2, #4]
   82b24:	3301      	adds	r3, #1
   82b26:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b28:	4b69      	ldr	r3, [pc, #420]	; (82cd0 <Shell+0xa64>)
   82b2a:	2200      	movs	r2, #0
   82b2c:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b2e:	2203      	movs	r2, #3
   82b30:	771a      	strb	r2, [r3, #28]
						break;
   82b32:	f7ff bbdf 	b.w	822f4 <Shell+0x88>
					switch(shell.crc)
   82b36:	f646 730e 	movw	r3, #28430	; 0x6f0e
   82b3a:	4298      	cmp	r0, r3
   82b3c:	d034      	beq.n	82ba8 <Shell+0x93c>
   82b3e:	f64a 534f 	movw	r3, #44367	; 0xad4f
   82b42:	4298      	cmp	r0, r3
   82b44:	f000 814a 	beq.w	82ddc <Shell+0xb70>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b48:	4b61      	ldr	r3, [pc, #388]	; (82cd0 <Shell+0xa64>)
   82b4a:	2200      	movs	r2, #0
   82b4c:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b4e:	2203      	movs	r2, #3
   82b50:	771a      	strb	r2, [r3, #28]
						break;
   82b52:	f7ff bbcf 	b.w	822f4 <Shell+0x88>
					switch(shell.crc)
   82b56:	f24c 63ba 	movw	r3, #50874	; 0xc6ba
   82b5a:	4298      	cmp	r0, r3
   82b5c:	d064      	beq.n	82c28 <Shell+0x9bc>
   82b5e:	d81b      	bhi.n	82b98 <Shell+0x92c>
   82b60:	f24c 33e3 	movw	r3, #50147	; 0xc3e3
   82b64:	4298      	cmp	r0, r3
   82b66:	d072      	beq.n	82c4e <Shell+0x9e2>
   82b68:	f24c 433a 	movw	r3, #50234	; 0xc43a
   82b6c:	4298      	cmp	r0, r3
   82b6e:	d1eb      	bne.n	82b48 <Shell+0x8dc>
						if(shell.pEdit>shellEditBuf)
   82b70:	4b57      	ldr	r3, [pc, #348]	; (82cd0 <Shell+0xa64>)
   82b72:	685a      	ldr	r2, [r3, #4]
   82b74:	4b57      	ldr	r3, [pc, #348]	; (82cd4 <Shell+0xa68>)
   82b76:	429a      	cmp	r2, r3
   82b78:	d907      	bls.n	82b8a <Shell+0x91e>
							Putstr("\e[D");
   82b7a:	4961      	ldr	r1, [pc, #388]	; (82d00 <Shell+0xa94>)
   82b7c:	2067      	movs	r0, #103	; 0x67
   82b7e:	4b57      	ldr	r3, [pc, #348]	; (82cdc <Shell+0xa70>)
   82b80:	4798      	blx	r3
							shell.pEdit--;
   82b82:	4a53      	ldr	r2, [pc, #332]	; (82cd0 <Shell+0xa64>)
   82b84:	6853      	ldr	r3, [r2, #4]
   82b86:	3b01      	subs	r3, #1
   82b88:	6053      	str	r3, [r2, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82b8a:	4b51      	ldr	r3, [pc, #324]	; (82cd0 <Shell+0xa64>)
   82b8c:	2200      	movs	r2, #0
   82b8e:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82b90:	2203      	movs	r2, #3
   82b92:	771a      	strb	r2, [r3, #28]
						break;
   82b94:	f7ff bbae 	b.w	822f4 <Shell+0x88>
					switch(shell.crc)
   82b98:	f24c 73f5 	movw	r3, #51189	; 0xc7f5
   82b9c:	4298      	cmp	r0, r3
   82b9e:	d04f      	beq.n	82c40 <Shell+0x9d4>
   82ba0:	f64c 43ba 	movw	r3, #52410	; 0xccba
   82ba4:	4298      	cmp	r0, r3
   82ba6:	d1cf      	bne.n	82b48 <Shell+0x8dc>
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   82ba8:	4b49      	ldr	r3, [pc, #292]	; (82cd0 <Shell+0xa64>)
   82baa:	899b      	ldrh	r3, [r3, #12]
   82bac:	b12b      	cbz	r3, 82bba <Shell+0x94e>
   82bae:	4a49      	ldr	r2, [pc, #292]	; (82cd4 <Shell+0xa68>)
   82bb0:	4413      	add	r3, r2
   82bb2:	4a47      	ldr	r2, [pc, #284]	; (82cd0 <Shell+0xa64>)
   82bb4:	6852      	ldr	r2, [r2, #4]
   82bb6:	429a      	cmp	r2, r3
   82bb8:	d015      	beq.n	82be6 <Shell+0x97a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82bba:	4b45      	ldr	r3, [pc, #276]	; (82cd0 <Shell+0xa64>)
   82bbc:	685b      	ldr	r3, [r3, #4]
   82bbe:	1e59      	subs	r1, r3, #1
						if((shell.nChar&&(shell.pEdit==shellEditBuf+shell.nChar)) ||
   82bc0:	4a44      	ldr	r2, [pc, #272]	; (82cd4 <Shell+0xa68>)
   82bc2:	4291      	cmp	r1, r2
   82bc4:	d317      	bcc.n	82bf6 <Shell+0x98a>
						(((shell.pEdit-1)>=shellEditBuf)&&(_IsSeparator(*(shell.pEdit-1),separators))&&(!_IsSeparator(*shell.pEdit,separators))))
   82bc6:	4c4f      	ldr	r4, [pc, #316]	; (82d04 <Shell+0xa98>)
   82bc8:	4622      	mov	r2, r4
   82bca:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82bce:	2006      	movs	r0, #6
   82bd0:	f7ff fb4c 	bl	8226c <Shell>
   82bd4:	b178      	cbz	r0, 82bf6 <Shell+0x98a>
   82bd6:	4b3e      	ldr	r3, [pc, #248]	; (82cd0 <Shell+0xa64>)
   82bd8:	685b      	ldr	r3, [r3, #4]
   82bda:	4622      	mov	r2, r4
   82bdc:	7819      	ldrb	r1, [r3, #0]
   82bde:	2006      	movs	r0, #6
   82be0:	f7ff fb44 	bl	8226c <Shell>
   82be4:	b938      	cbnz	r0, 82bf6 <Shell+0x98a>
							shell.pEdit--; Putstr("\e[D");
   82be6:	4a3a      	ldr	r2, [pc, #232]	; (82cd0 <Shell+0xa64>)
   82be8:	6853      	ldr	r3, [r2, #4]
   82bea:	3b01      	subs	r3, #1
   82bec:	6053      	str	r3, [r2, #4]
   82bee:	4944      	ldr	r1, [pc, #272]	; (82d00 <Shell+0xa94>)
   82bf0:	2067      	movs	r0, #103	; 0x67
   82bf2:	4b3a      	ldr	r3, [pc, #232]	; (82cdc <Shell+0xa70>)
   82bf4:	4798      	blx	r3
						if(_IsSeparator(*shell.pEdit,separators))
   82bf6:	4d43      	ldr	r5, [pc, #268]	; (82d04 <Shell+0xa98>)
   82bf8:	4b35      	ldr	r3, [pc, #212]	; (82cd0 <Shell+0xa64>)
   82bfa:	685b      	ldr	r3, [r3, #4]
   82bfc:	462a      	mov	r2, r5
   82bfe:	7819      	ldrb	r1, [r3, #0]
   82c00:	2006      	movs	r0, #6
   82c02:	f7ff fb33 	bl	8226c <Shell>
   82c06:	2800      	cmp	r0, #0
   82c08:	f040 80cb 	bne.w	82da2 <Shell+0xb36>
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82c0c:	4b30      	ldr	r3, [pc, #192]	; (82cd0 <Shell+0xa64>)
   82c0e:	685b      	ldr	r3, [r3, #4]
   82c10:	1e59      	subs	r1, r3, #1
   82c12:	4a30      	ldr	r2, [pc, #192]	; (82cd4 <Shell+0xa68>)
   82c14:	4291      	cmp	r1, r2
   82c16:	f080 80dd 	bcs.w	82dd4 <Shell+0xb68>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82c1a:	4b2d      	ldr	r3, [pc, #180]	; (82cd0 <Shell+0xa64>)
   82c1c:	2200      	movs	r2, #0
   82c1e:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82c20:	2203      	movs	r2, #3
   82c22:	771a      	strb	r2, [r3, #28]
						break;
   82c24:	f7ff bb66 	b.w	822f4 <Shell+0x88>
						Putstr("\e[2K\r");
   82c28:	4932      	ldr	r1, [pc, #200]	; (82cf4 <Shell+0xa88>)
   82c2a:	2067      	movs	r0, #103	; 0x67
   82c2c:	4b2b      	ldr	r3, [pc, #172]	; (82cdc <Shell+0xa70>)
   82c2e:	4798      	blx	r3
						ExitEditMode();
   82c30:	4b27      	ldr	r3, [pc, #156]	; (82cd0 <Shell+0xa64>)
   82c32:	881a      	ldrh	r2, [r3, #0]
   82c34:	f022 0204 	bic.w	r2, r2, #4
   82c38:	801a      	strh	r2, [r3, #0]
						shell.state=IDLE;
   82c3a:	2200      	movs	r2, #0
   82c3c:	771a      	strb	r2, [r3, #28]
						break;
   82c3e:	e6ba      	b.n	829b6 <Shell+0x74a>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82c40:	4b23      	ldr	r3, [pc, #140]	; (82cd0 <Shell+0xa64>)
   82c42:	2200      	movs	r2, #0
   82c44:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82c46:	2203      	movs	r2, #3
   82c48:	771a      	strb	r2, [r3, #28]
						break;
   82c4a:	f7ff bb53 	b.w	822f4 <Shell+0x88>
						pSrc=(uint32_t)shell.pEdit+1;
   82c4e:	4a20      	ldr	r2, [pc, #128]	; (82cd0 <Shell+0xa64>)
   82c50:	6853      	ldr	r3, [r2, #4]
   82c52:	3301      	adds	r3, #1
   82c54:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82c56:	491f      	ldr	r1, [pc, #124]	; (82cd4 <Shell+0xa68>)
   82c58:	8992      	ldrh	r2, [r2, #12]
   82c5a:	440a      	add	r2, r1
   82c5c:	4293      	cmp	r3, r2
   82c5e:	d20a      	bcs.n	82c76 <Shell+0xa0a>
   82c60:	481b      	ldr	r0, [pc, #108]	; (82cd0 <Shell+0xa64>)
							*(char*)(pSrc-1)=*(char*)pSrc; pSrc++;
   82c62:	781a      	ldrb	r2, [r3, #0]
   82c64:	f803 2c01 	strb.w	r2, [r3, #-1]
   82c68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82c6a:	3301      	adds	r3, #1
   82c6c:	930e      	str	r3, [sp, #56]	; 0x38
						while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82c6e:	8982      	ldrh	r2, [r0, #12]
   82c70:	440a      	add	r2, r1
   82c72:	429a      	cmp	r2, r3
   82c74:	d8f5      	bhi.n	82c62 <Shell+0x9f6>
						*(char*)(pSrc-1)=' ';
   82c76:	2220      	movs	r2, #32
   82c78:	f803 2c01 	strb.w	r2, [r3, #-1]
	                    k=Putstrlen(shell.pEdit,pSrc-(uint32_t)shell.pEdit);
   82c7c:	4b14      	ldr	r3, [pc, #80]	; (82cd0 <Shell+0xa64>)
   82c7e:	6859      	ldr	r1, [r3, #4]
   82c80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82c82:	1a52      	subs	r2, r2, r1
   82c84:	2068      	movs	r0, #104	; 0x68
   82c86:	4b15      	ldr	r3, [pc, #84]	; (82cdc <Shell+0xa70>)
   82c88:	4798      	blx	r3
		                while(k--) Putstr("\e[D");
   82c8a:	1e43      	subs	r3, r0, #1
   82c8c:	930e      	str	r3, [sp, #56]	; 0x38
   82c8e:	b150      	cbz	r0, 82ca6 <Shell+0xa3a>
   82c90:	4e1b      	ldr	r6, [pc, #108]	; (82d00 <Shell+0xa94>)
   82c92:	2567      	movs	r5, #103	; 0x67
   82c94:	4c11      	ldr	r4, [pc, #68]	; (82cdc <Shell+0xa70>)
   82c96:	4631      	mov	r1, r6
   82c98:	4628      	mov	r0, r5
   82c9a:	47a0      	blx	r4
   82c9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82c9e:	1e5a      	subs	r2, r3, #1
   82ca0:	920e      	str	r2, [sp, #56]	; 0x38
   82ca2:	2b00      	cmp	r3, #0
   82ca4:	d1f7      	bne.n	82c96 <Shell+0xa2a>
			            shell.nChar--;
   82ca6:	4b0a      	ldr	r3, [pc, #40]	; (82cd0 <Shell+0xa64>)
   82ca8:	899a      	ldrh	r2, [r3, #12]
   82caa:	3a01      	subs	r2, #1
   82cac:	819a      	strh	r2, [r3, #12]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82cae:	2200      	movs	r2, #0
   82cb0:	615a      	str	r2, [r3, #20]
				        shell.state=EDITION;
   82cb2:	2203      	movs	r2, #3
   82cb4:	771a      	strb	r2, [r3, #28]
					    break;
   82cb6:	f7ff bb1d 	b.w	822f4 <Shell+0x88>
						mBitsTgl(shell.status,ST_SHELL_INSERT_MODE);
   82cba:	4b05      	ldr	r3, [pc, #20]	; (82cd0 <Shell+0xa64>)
   82cbc:	881a      	ldrh	r2, [r3, #0]
   82cbe:	f082 0201 	eor.w	r2, r2, #1
   82cc2:	801a      	strh	r2, [r3, #0]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82cc4:	2200      	movs	r2, #0
   82cc6:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82cc8:	2203      	movs	r2, #3
   82cca:	771a      	strb	r2, [r3, #28]
						break;
   82ccc:	f7ff bb12 	b.w	822f4 <Shell+0x88>
   82cd0:	20001234 	.word	0x20001234
   82cd4:	20001130 	.word	0x20001130
   82cd8:	00088da4 	.word	0x00088da4
   82cdc:	00083401 	.word	0x00083401
   82ce0:	00088da8 	.word	0x00088da8
   82ce4:	20001254 	.word	0x20001254
   82ce8:	200012d4 	.word	0x200012d4
   82cec:	00088db8 	.word	0x00088db8
   82cf0:	00083f95 	.word	0x00083f95
   82cf4:	00088dc4 	.word	0x00088dc4
   82cf8:	000817c9 	.word	0x000817c9
   82cfc:	00088d54 	.word	0x00088d54
   82d00:	00088d50 	.word	0x00088d50
   82d04:	00088dfc 	.word	0x00088dfc
						k=(shell.pEdit-shellEditBuf);
   82d08:	4b9f      	ldr	r3, [pc, #636]	; (82f88 <Shell+0xd1c>)
   82d0a:	685b      	ldr	r3, [r3, #4]
   82d0c:	4a9f      	ldr	r2, [pc, #636]	; (82f8c <Shell+0xd20>)
   82d0e:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[D");
   82d10:	1e5a      	subs	r2, r3, #1
   82d12:	920e      	str	r2, [sp, #56]	; 0x38
   82d14:	b153      	cbz	r3, 82d2c <Shell+0xac0>
   82d16:	4e9e      	ldr	r6, [pc, #632]	; (82f90 <Shell+0xd24>)
   82d18:	2567      	movs	r5, #103	; 0x67
   82d1a:	4c9e      	ldr	r4, [pc, #632]	; (82f94 <Shell+0xd28>)
   82d1c:	4631      	mov	r1, r6
   82d1e:	4628      	mov	r0, r5
   82d20:	47a0      	blx	r4
   82d22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d24:	1e5a      	subs	r2, r3, #1
   82d26:	920e      	str	r2, [sp, #56]	; 0x38
   82d28:	2b00      	cmp	r3, #0
   82d2a:	d1f7      	bne.n	82d1c <Shell+0xab0>
						shell.pEdit=shellEditBuf;
   82d2c:	4b96      	ldr	r3, [pc, #600]	; (82f88 <Shell+0xd1c>)
   82d2e:	4a97      	ldr	r2, [pc, #604]	; (82f8c <Shell+0xd20>)
   82d30:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82d32:	2200      	movs	r2, #0
   82d34:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82d36:	2203      	movs	r2, #3
   82d38:	771a      	strb	r2, [r3, #28]
						break;
   82d3a:	f7ff badb 	b.w	822f4 <Shell+0x88>
						k=((shellEditBuf+shell.nChar)-shell.pEdit);
   82d3e:	4a92      	ldr	r2, [pc, #584]	; (82f88 <Shell+0xd1c>)
   82d40:	8993      	ldrh	r3, [r2, #12]
   82d42:	4992      	ldr	r1, [pc, #584]	; (82f8c <Shell+0xd20>)
   82d44:	440b      	add	r3, r1
   82d46:	6852      	ldr	r2, [r2, #4]
   82d48:	1a9b      	subs	r3, r3, r2
						while(k--) Putstr("\e[C");
   82d4a:	1e5a      	subs	r2, r3, #1
   82d4c:	920e      	str	r2, [sp, #56]	; 0x38
   82d4e:	b153      	cbz	r3, 82d66 <Shell+0xafa>
   82d50:	4e91      	ldr	r6, [pc, #580]	; (82f98 <Shell+0xd2c>)
   82d52:	2567      	movs	r5, #103	; 0x67
   82d54:	4c8f      	ldr	r4, [pc, #572]	; (82f94 <Shell+0xd28>)
   82d56:	4631      	mov	r1, r6
   82d58:	4628      	mov	r0, r5
   82d5a:	47a0      	blx	r4
   82d5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d5e:	1e5a      	subs	r2, r3, #1
   82d60:	920e      	str	r2, [sp, #56]	; 0x38
   82d62:	2b00      	cmp	r3, #0
   82d64:	d1f7      	bne.n	82d56 <Shell+0xaea>
						shell.pEdit=shellEditBuf+shell.nChar;
   82d66:	4b88      	ldr	r3, [pc, #544]	; (82f88 <Shell+0xd1c>)
   82d68:	899a      	ldrh	r2, [r3, #12]
   82d6a:	4988      	ldr	r1, [pc, #544]	; (82f8c <Shell+0xd20>)
   82d6c:	440a      	add	r2, r1
   82d6e:	605a      	str	r2, [r3, #4]
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82d70:	2200      	movs	r2, #0
   82d72:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82d74:	2203      	movs	r2, #3
   82d76:	771a      	strb	r2, [r3, #28]
						break;
   82d78:	f7ff babc 	b.w	822f4 <Shell+0x88>
								shell.pEdit--;
   82d7c:	3b01      	subs	r3, #1
   82d7e:	6063      	str	r3, [r4, #4]
								Putstr("\e[D");
   82d80:	4631      	mov	r1, r6
   82d82:	2067      	movs	r0, #103	; 0x67
   82d84:	4b83      	ldr	r3, [pc, #524]	; (82f94 <Shell+0xd28>)
   82d86:	4798      	blx	r3
							while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit>shellEditBuf))
   82d88:	6863      	ldr	r3, [r4, #4]
   82d8a:	462a      	mov	r2, r5
   82d8c:	7819      	ldrb	r1, [r3, #0]
   82d8e:	2006      	movs	r0, #6
   82d90:	f7ff fa6c 	bl	8226c <Shell>
   82d94:	2800      	cmp	r0, #0
   82d96:	f43f af39 	beq.w	82c0c <Shell+0x9a0>
   82d9a:	6863      	ldr	r3, [r4, #4]
   82d9c:	42bb      	cmp	r3, r7
   82d9e:	d8ed      	bhi.n	82d7c <Shell+0xb10>
   82da0:	e734      	b.n	82c0c <Shell+0x9a0>
   82da2:	4c79      	ldr	r4, [pc, #484]	; (82f88 <Shell+0xd1c>)
   82da4:	4f79      	ldr	r7, [pc, #484]	; (82f8c <Shell+0xd20>)
								Putstr("\e[D");
   82da6:	4e7a      	ldr	r6, [pc, #488]	; (82f90 <Shell+0xd24>)
   82da8:	e7ee      	b.n	82d88 <Shell+0xb1c>
							shell.pEdit--;
   82daa:	6863      	ldr	r3, [r4, #4]
   82dac:	3b01      	subs	r3, #1
   82dae:	6063      	str	r3, [r4, #4]
							Putstr("\e[D");
   82db0:	4639      	mov	r1, r7
   82db2:	2067      	movs	r0, #103	; 0x67
   82db4:	47b0      	blx	r6
						while(((shell.pEdit-1)>=shellEditBuf)&&(!_IsSeparator(*(shell.pEdit-1),separators)))
   82db6:	6863      	ldr	r3, [r4, #4]
   82db8:	1e59      	subs	r1, r3, #1
   82dba:	4a74      	ldr	r2, [pc, #464]	; (82f8c <Shell+0xd20>)
   82dbc:	4291      	cmp	r1, r2
   82dbe:	f4ff af2c 	bcc.w	82c1a <Shell+0x9ae>
   82dc2:	462a      	mov	r2, r5
   82dc4:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   82dc8:	2006      	movs	r0, #6
   82dca:	f7ff fa4f 	bl	8226c <Shell>
   82dce:	2800      	cmp	r0, #0
   82dd0:	d0eb      	beq.n	82daa <Shell+0xb3e>
   82dd2:	e722      	b.n	82c1a <Shell+0x9ae>
							shell.pEdit--;
   82dd4:	4c6c      	ldr	r4, [pc, #432]	; (82f88 <Shell+0xd1c>)
							Putstr("\e[D");
   82dd6:	4f6e      	ldr	r7, [pc, #440]	; (82f90 <Shell+0xd24>)
   82dd8:	4e6e      	ldr	r6, [pc, #440]	; (82f94 <Shell+0xd28>)
   82dda:	e7f2      	b.n	82dc2 <Shell+0xb56>
						if(!_IsSeparator(*shell.pEdit,separators))
   82ddc:	4d6f      	ldr	r5, [pc, #444]	; (82f9c <Shell+0xd30>)
   82dde:	4b6a      	ldr	r3, [pc, #424]	; (82f88 <Shell+0xd1c>)
   82de0:	685b      	ldr	r3, [r3, #4]
   82de2:	462a      	mov	r2, r5
   82de4:	7819      	ldrb	r1, [r3, #0]
   82de6:	2006      	movs	r0, #6
   82de8:	f7ff fa40 	bl	8226c <Shell>
   82dec:	b1b8      	cbz	r0, 82e1e <Shell+0xbb2>
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82dee:	4c66      	ldr	r4, [pc, #408]	; (82f88 <Shell+0xd1c>)
   82df0:	4f66      	ldr	r7, [pc, #408]	; (82f8c <Shell+0xd20>)
							Putstr("\e[C");
   82df2:	4e69      	ldr	r6, [pc, #420]	; (82f98 <Shell+0xd2c>)
   82df4:	e01d      	b.n	82e32 <Shell+0xbc6>
								shell.pEdit++;
   82df6:	3301      	adds	r3, #1
   82df8:	6063      	str	r3, [r4, #4]
								Putstr("\e[C");
   82dfa:	4631      	mov	r1, r6
   82dfc:	2067      	movs	r0, #103	; 0x67
   82dfe:	4b65      	ldr	r3, [pc, #404]	; (82f94 <Shell+0xd28>)
   82e00:	4798      	blx	r3
							while((!_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82e02:	6863      	ldr	r3, [r4, #4]
   82e04:	462a      	mov	r2, r5
   82e06:	7819      	ldrb	r1, [r3, #0]
   82e08:	2006      	movs	r0, #6
   82e0a:	f7ff fa2f 	bl	8226c <Shell>
   82e0e:	2800      	cmp	r0, #0
   82e10:	d1ed      	bne.n	82dee <Shell+0xb82>
   82e12:	6863      	ldr	r3, [r4, #4]
   82e14:	89a2      	ldrh	r2, [r4, #12]
   82e16:	443a      	add	r2, r7
   82e18:	4293      	cmp	r3, r2
   82e1a:	d3ec      	bcc.n	82df6 <Shell+0xb8a>
   82e1c:	e7e7      	b.n	82dee <Shell+0xb82>
   82e1e:	4c5a      	ldr	r4, [pc, #360]	; (82f88 <Shell+0xd1c>)
   82e20:	4f5a      	ldr	r7, [pc, #360]	; (82f8c <Shell+0xd20>)
								Putstr("\e[C");
   82e22:	4e5d      	ldr	r6, [pc, #372]	; (82f98 <Shell+0xd2c>)
   82e24:	e7ed      	b.n	82e02 <Shell+0xb96>
							shell.pEdit++;
   82e26:	3301      	adds	r3, #1
   82e28:	6063      	str	r3, [r4, #4]
							Putstr("\e[C");
   82e2a:	4631      	mov	r1, r6
   82e2c:	2067      	movs	r0, #103	; 0x67
   82e2e:	4b59      	ldr	r3, [pc, #356]	; (82f94 <Shell+0xd28>)
   82e30:	4798      	blx	r3
						while((_IsSeparator(*shell.pEdit,separators))&&(shell.pEdit<shellEditBuf+shell.nChar))
   82e32:	6863      	ldr	r3, [r4, #4]
   82e34:	462a      	mov	r2, r5
   82e36:	7819      	ldrb	r1, [r3, #0]
   82e38:	2006      	movs	r0, #6
   82e3a:	f7ff fa17 	bl	8226c <Shell>
   82e3e:	b120      	cbz	r0, 82e4a <Shell+0xbde>
   82e40:	6863      	ldr	r3, [r4, #4]
   82e42:	89a2      	ldrh	r2, [r4, #12]
   82e44:	443a      	add	r2, r7
   82e46:	4293      	cmp	r3, r2
   82e48:	d3ed      	bcc.n	82e26 <Shell+0xbba>
						shell.editTimer=SHELL_EDIT_TIMEOUT;
   82e4a:	4b4f      	ldr	r3, [pc, #316]	; (82f88 <Shell+0xd1c>)
   82e4c:	2200      	movs	r2, #0
   82e4e:	615a      	str	r2, [r3, #20]
						shell.state=EDITION;
   82e50:	2203      	movs	r2, #3
   82e52:	771a      	strb	r2, [r3, #28]
						break;
   82e54:	f7ff ba4e 	b.w	822f4 <Shell+0x88>
					Error(ERROR_SHELL_TIMER_ESC_BAD_SATE,shell.state);
   82e58:	201f      	movs	r0, #31
   82e5a:	4b51      	ldr	r3, [pc, #324]	; (82fa0 <Shell+0xd34>)
   82e5c:	4798      	blx	r3
   82e5e:	e5aa      	b.n	829b6 <Shell+0x74a>
		pSrc=(uint32_t)shellEditBuf;
   82e60:	4d4a      	ldr	r5, [pc, #296]	; (82f8c <Shell+0xd20>)
   82e62:	950e      	str	r5, [sp, #56]	; 0x38
		while(_IsSeparator(*(char*)pSrc,separators)) pSrc++;
   82e64:	4e4d      	ldr	r6, [pc, #308]	; (82f9c <Shell+0xd30>)
   82e66:	2406      	movs	r4, #6
   82e68:	4632      	mov	r2, r6
   82e6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e6c:	7819      	ldrb	r1, [r3, #0]
   82e6e:	4620      	mov	r0, r4
   82e70:	f7ff f9fc 	bl	8226c <Shell>
   82e74:	4680      	mov	r8, r0
   82e76:	b118      	cbz	r0, 82e80 <Shell+0xc14>
   82e78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e7a:	3301      	adds	r3, #1
   82e7c:	930e      	str	r3, [sp, #56]	; 0x38
   82e7e:	e7f3      	b.n	82e68 <Shell+0xbfc>
		k=pSrc-(uint32_t)shellEditBuf;
   82e80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82e82:	1b5a      	subs	r2, r3, r5
   82e84:	9205      	str	r2, [sp, #20]
		if(k)
   82e86:	b19a      	cbz	r2, 82eb0 <Shell+0xc44>
			shell.pEdit=shellEditBuf;
   82e88:	4a3f      	ldr	r2, [pc, #252]	; (82f88 <Shell+0xd1c>)
   82e8a:	4940      	ldr	r1, [pc, #256]	; (82f8c <Shell+0xd20>)
   82e8c:	6051      	str	r1, [r2, #4]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82e8e:	8992      	ldrh	r2, [r2, #12]
   82e90:	442a      	add	r2, r5
   82e92:	4293      	cmp	r3, r2
   82e94:	d20c      	bcs.n	82eb0 <Shell+0xc44>
				*shell.pEdit++=*(char*)pSrc++;
   82e96:	493c      	ldr	r1, [pc, #240]	; (82f88 <Shell+0xd1c>)
   82e98:	684a      	ldr	r2, [r1, #4]
   82e9a:	1c50      	adds	r0, r2, #1
   82e9c:	6048      	str	r0, [r1, #4]
   82e9e:	1c58      	adds	r0, r3, #1
   82ea0:	900e      	str	r0, [sp, #56]	; 0x38
   82ea2:	781b      	ldrb	r3, [r3, #0]
   82ea4:	7013      	strb	r3, [r2, #0]
			while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ea6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82ea8:	898a      	ldrh	r2, [r1, #12]
   82eaa:	442a      	add	r2, r5
   82eac:	429a      	cmp	r2, r3
   82eae:	d8f3      	bhi.n	82e98 <Shell+0xc2c>
		pSrc=(uint32_t)shellEditBuf+k;
   82eb0:	9905      	ldr	r1, [sp, #20]
   82eb2:	186b      	adds	r3, r5, r1
   82eb4:	930e      	str	r3, [sp, #56]	; 0x38
		shell.nChar-=k;
   82eb6:	4a34      	ldr	r2, [pc, #208]	; (82f88 <Shell+0xd1c>)
   82eb8:	8993      	ldrh	r3, [r2, #12]
   82eba:	1a5b      	subs	r3, r3, r1
   82ebc:	8193      	strh	r3, [r2, #12]
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ebe:	4614      	mov	r4, r2
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82ec0:	2706      	movs	r7, #6
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ec2:	e004      	b.n	82ece <Shell+0xc62>
			if(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ec4:	89a3      	ldrh	r3, [r4, #12]
   82ec6:	442b      	add	r3, r5
   82ec8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82eca:	4293      	cmp	r3, r2
   82ecc:	d814      	bhi.n	82ef8 <Shell+0xc8c>
		while(pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82ece:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82ed0:	89a2      	ldrh	r2, [r4, #12]
   82ed2:	442a      	add	r2, r5
   82ed4:	429a      	cmp	r2, r3
   82ed6:	f67f aa0d 	bls.w	822f4 <Shell+0x88>
			while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(!_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82eda:	4632      	mov	r2, r6
   82edc:	7819      	ldrb	r1, [r3, #0]
   82ede:	4638      	mov	r0, r7
   82ee0:	f7ff f9c4 	bl	8226c <Shell>
   82ee4:	2800      	cmp	r0, #0
   82ee6:	d1ed      	bne.n	82ec4 <Shell+0xc58>
   82ee8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82eea:	3301      	adds	r3, #1
   82eec:	930e      	str	r3, [sp, #56]	; 0x38
   82eee:	89a2      	ldrh	r2, [r4, #12]
   82ef0:	442a      	add	r2, r5
   82ef2:	429a      	cmp	r2, r3
   82ef4:	d8f1      	bhi.n	82eda <Shell+0xc6e>
   82ef6:	e7ea      	b.n	82ece <Shell+0xc62>
				pSrc++; pSt=shell.pEdit=(char*)pSrc;
   82ef8:	f102 0901 	add.w	r9, r2, #1
   82efc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82f00:	f8c4 9004 	str.w	r9, [r4, #4]
				while((pSrc<(uint32_t)shellEditBuf+shell.nChar)&&(_IsSeparator(*(char*)pSrc,separators))) pSrc++;
   82f04:	454b      	cmp	r3, r9
   82f06:	bf88      	it	hi
   82f08:	464b      	movhi	r3, r9
   82f0a:	d90c      	bls.n	82f26 <Shell+0xcba>
   82f0c:	4632      	mov	r2, r6
   82f0e:	7819      	ldrb	r1, [r3, #0]
   82f10:	4638      	mov	r0, r7
   82f12:	f7ff f9ab 	bl	8226c <Shell>
   82f16:	b130      	cbz	r0, 82f26 <Shell+0xcba>
   82f18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82f1a:	3301      	adds	r3, #1
   82f1c:	930e      	str	r3, [sp, #56]	; 0x38
   82f1e:	89a2      	ldrh	r2, [r4, #12]
   82f20:	442a      	add	r2, r5
   82f22:	429a      	cmp	r2, r3
   82f24:	d8f2      	bhi.n	82f0c <Shell+0xca0>
				k=pSrc-(uint32_t)shell.pEdit;
   82f26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82f28:	6861      	ldr	r1, [r4, #4]
   82f2a:	1a59      	subs	r1, r3, r1
   82f2c:	9105      	str	r1, [sp, #20]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82f2e:	b189      	cbz	r1, 82f54 <Shell+0xce8>
   82f30:	89a2      	ldrh	r2, [r4, #12]
   82f32:	442a      	add	r2, r5
   82f34:	4293      	cmp	r3, r2
   82f36:	d20d      	bcs.n	82f54 <Shell+0xce8>
					*shell.pEdit++=*(char*)pSrc++;
   82f38:	6862      	ldr	r2, [r4, #4]
   82f3a:	1c51      	adds	r1, r2, #1
   82f3c:	6061      	str	r1, [r4, #4]
   82f3e:	1c59      	adds	r1, r3, #1
   82f40:	910e      	str	r1, [sp, #56]	; 0x38
   82f42:	781b      	ldrb	r3, [r3, #0]
   82f44:	7013      	strb	r3, [r2, #0]
				while(k && pSrc<(uint32_t)shellEditBuf+shell.nChar)
   82f46:	9905      	ldr	r1, [sp, #20]
   82f48:	b121      	cbz	r1, 82f54 <Shell+0xce8>
   82f4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82f4c:	89a2      	ldrh	r2, [r4, #12]
   82f4e:	442a      	add	r2, r5
   82f50:	429a      	cmp	r2, r3
   82f52:	d8f1      	bhi.n	82f38 <Shell+0xccc>
				shell.nChar-=k;
   82f54:	89a3      	ldrh	r3, [r4, #12]
   82f56:	1a59      	subs	r1, r3, r1
   82f58:	81a1      	strh	r1, [r4, #12]
				pSrc=(uint32_t)pSt;
   82f5a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82f5e:	e7b6      	b.n	82ece <Shell+0xc62>
		Error(ERROR_SHELL_SWITCH_BAD_SC,sc);
   82f60:	200d      	movs	r0, #13
   82f62:	4b0f      	ldr	r3, [pc, #60]	; (82fa0 <Shell+0xd34>)
   82f64:	4798      	blx	r3
	return 0;
   82f66:	f04f 0800 	mov.w	r8, #0
   82f6a:	f7ff b9c3 	b.w	822f4 <Shell+0x88>
   82f6e:	f04f 0800 	mov.w	r8, #0
   82f72:	f7ff b9bf 	b.w	822f4 <Shell+0x88>
   82f76:	f04f 0800 	mov.w	r8, #0
   82f7a:	f7ff b9bb 	b.w	822f4 <Shell+0x88>
   82f7e:	f04f 0800 	mov.w	r8, #0
   82f82:	f7ff b9b7 	b.w	822f4 <Shell+0x88>
   82f86:	bf00      	nop
   82f88:	20001234 	.word	0x20001234
   82f8c:	20001130 	.word	0x20001130
   82f90:	00088d50 	.word	0x00088d50
   82f94:	00083401 	.word	0x00083401
   82f98:	00088d54 	.word	0x00088d54
   82f9c:	00088dfc 	.word	0x00088dfc
   82fa0:	00081811 	.word	0x00081811
   82fa4:	f04f 0800 	mov.w	r8, #0
   82fa8:	f7ff b9a4 	b.w	822f4 <Shell+0x88>

00082fac <_cmd_show>:
#define ST_SHELL_PROMPT_DISABLED        0x000004

char buf[256];

void _cmd_show(uint32_t sc, void*pParam)
{
   82fac:	b538      	push	{r3, r4, r5, lr}
   82fae:	4605      	mov	r5, r0
   82fb0:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82fb2:	490a      	ldr	r1, [pc, #40]	; (82fdc <_cmd_show+0x30>)
   82fb4:	4b0a      	ldr	r3, [pc, #40]	; (82fe0 <_cmd_show+0x34>)
   82fb6:	4798      	blx	r3
	if(pToken)
   82fb8:	b170      	cbz	r0, 82fd8 <_cmd_show+0x2c>
   82fba:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82fbc:	4b09      	ldr	r3, [pc, #36]	; (82fe4 <_cmd_show+0x38>)
   82fbe:	4798      	blx	r3
   82fc0:	4601      	mov	r1, r0
   82fc2:	4620      	mov	r0, r4
   82fc4:	4b08      	ldr	r3, [pc, #32]	; (82fe8 <_cmd_show+0x3c>)
   82fc6:	4798      	blx	r3
   82fc8:	f245 73e5 	movw	r3, #22501	; 0x57e5
   82fcc:	4298      	cmp	r0, r3
   82fce:	d103      	bne.n	82fd8 <_cmd_show+0x2c>
		{
		case 0x57E5:    //crc
			mBitsSet(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   82fd0:	882b      	ldrh	r3, [r5, #0]
   82fd2:	f043 0302 	orr.w	r3, r3, #2
   82fd6:	802b      	strh	r3, [r5, #0]
   82fd8:	bd38      	pop	{r3, r4, r5, pc}
   82fda:	bf00      	nop
   82fdc:	00088c48 	.word	0x00088c48
   82fe0:	000840f9 	.word	0x000840f9
   82fe4:	0008409d 	.word	0x0008409d
   82fe8:	000817c9 	.word	0x000817c9

00082fec <_cmd_hide>:
		}
	}
}

void _cmd_hide(uint32_t sc, void*pParam)
{
   82fec:	b538      	push	{r3, r4, r5, lr}
   82fee:	4605      	mov	r5, r0
   82ff0:	4608      	mov	r0, r1
	char *pToken;
	pToken = strtok(pParam," \r\n");
   82ff2:	490a      	ldr	r1, [pc, #40]	; (8301c <_cmd_hide+0x30>)
   82ff4:	4b0a      	ldr	r3, [pc, #40]	; (83020 <_cmd_hide+0x34>)
   82ff6:	4798      	blx	r3
	if(pToken)
   82ff8:	b170      	cbz	r0, 83018 <_cmd_hide+0x2c>
   82ffa:	4604      	mov	r4, r0
	{
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   82ffc:	4b09      	ldr	r3, [pc, #36]	; (83024 <_cmd_hide+0x38>)
   82ffe:	4798      	blx	r3
   83000:	4601      	mov	r1, r0
   83002:	4620      	mov	r0, r4
   83004:	4b08      	ldr	r3, [pc, #32]	; (83028 <_cmd_hide+0x3c>)
   83006:	4798      	blx	r3
   83008:	f245 73e5 	movw	r3, #22501	; 0x57e5
   8300c:	4298      	cmp	r0, r3
   8300e:	d103      	bne.n	83018 <_cmd_hide+0x2c>
		{
		case 0x57E5:    //crc
			mBitsClr(*(uint16_t*)sc,ST_SHELL_SHOW_UNKNOW_CRC);
   83010:	882b      	ldrh	r3, [r5, #0]
   83012:	f023 0302 	bic.w	r3, r3, #2
   83016:	802b      	strh	r3, [r5, #0]
   83018:	bd38      	pop	{r3, r4, r5, pc}
   8301a:	bf00      	nop
   8301c:	00088c48 	.word	0x00088c48
   83020:	000840f9 	.word	0x000840f9
   83024:	0008409d 	.word	0x0008409d
   83028:	000817c9 	.word	0x000817c9

0008302c <_cmd_start>:
		}
	}
}

void _cmd_start(uint32_t sc, void*pParam)
{
   8302c:	b538      	push	{r3, r4, r5, lr}
   8302e:	460d      	mov	r5, r1
	Putstr(" cmd start : ");
   83030:	4903      	ldr	r1, [pc, #12]	; (83040 <_cmd_start+0x14>)
   83032:	2067      	movs	r0, #103	; 0x67
   83034:	4c03      	ldr	r4, [pc, #12]	; (83044 <_cmd_start+0x18>)
   83036:	47a0      	blx	r4
	Putstr(pParam);
   83038:	4629      	mov	r1, r5
   8303a:	2067      	movs	r0, #103	; 0x67
   8303c:	47a0      	blx	r4
   8303e:	bd38      	pop	{r3, r4, r5, pc}
   83040:	00088f34 	.word	0x00088f34
   83044:	00083401 	.word	0x00083401

00083048 <_cmd_cls>:
	pParam=atoi((char*)pParam);
	PushTask(_cmd_restart_proc,sc,pParam,0);
}

void _cmd_cls(uint32_t sc, void*pParam)
{
   83048:	b508      	push	{r3, lr}
	Putstr("\e[2J");
   8304a:	4902      	ldr	r1, [pc, #8]	; (83054 <_cmd_cls+0xc>)
   8304c:	2067      	movs	r0, #103	; 0x67
   8304e:	4b02      	ldr	r3, [pc, #8]	; (83058 <_cmd_cls+0x10>)
   83050:	4798      	blx	r3
   83052:	bd08      	pop	{r3, pc}
   83054:	00088e08 	.word	0x00088e08
   83058:	00083401 	.word	0x00083401

0008305c <_cmd_set>:
{
   8305c:	b570      	push	{r4, r5, r6, lr}
	pToken = mstrtok(NULL," \r\n");
   8305e:	493a      	ldr	r1, [pc, #232]	; (83148 <_cmd_set+0xec>)
   83060:	2000      	movs	r0, #0
   83062:	4b3a      	ldr	r3, [pc, #232]	; (8314c <_cmd_set+0xf0>)
   83064:	4798      	blx	r3
	if(pToken)
   83066:	2800      	cmp	r0, #0
   83068:	d056      	beq.n	83118 <_cmd_set+0xbc>
   8306a:	4604      	mov	r4, r0
		switch(CRC16MODBUSFRAME((unsigned char*)pToken,strlen(pToken)))
   8306c:	4b38      	ldr	r3, [pc, #224]	; (83150 <_cmd_set+0xf4>)
   8306e:	4798      	blx	r3
   83070:	4601      	mov	r1, r0
   83072:	4620      	mov	r0, r4
   83074:	4b37      	ldr	r3, [pc, #220]	; (83154 <_cmd_set+0xf8>)
   83076:	4798      	blx	r3
   83078:	f247 3327 	movw	r3, #29479	; 0x7327
   8307c:	4298      	cmp	r0, r3
   8307e:	d004      	beq.n	8308a <_cmd_set+0x2e>
   83080:	f24e 13a9 	movw	r3, #57769	; 0xe1a9
   83084:	4298      	cmp	r0, r3
   83086:	d024      	beq.n	830d2 <_cmd_set+0x76>
   83088:	bd70      	pop	{r4, r5, r6, pc}
			pToken=mstrtok(NULL," :./\r\n");
   8308a:	4933      	ldr	r1, [pc, #204]	; (83158 <_cmd_set+0xfc>)
   8308c:	2000      	movs	r0, #0
   8308e:	4b2f      	ldr	r3, [pc, #188]	; (8314c <_cmd_set+0xf0>)
   83090:	4798      	blx	r3
			if(pToken) hour=atoi((char*)pToken);
   83092:	b1c0      	cbz	r0, 830c6 <_cmd_set+0x6a>
   83094:	4b31      	ldr	r3, [pc, #196]	; (8315c <_cmd_set+0x100>)
   83096:	4798      	blx	r3
   83098:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   8309a:	492f      	ldr	r1, [pc, #188]	; (83158 <_cmd_set+0xfc>)
   8309c:	2000      	movs	r0, #0
   8309e:	4b2b      	ldr	r3, [pc, #172]	; (8314c <_cmd_set+0xf0>)
   830a0:	4798      	blx	r3
			if(pToken) minute=atoi((char*)pToken);
   830a2:	b190      	cbz	r0, 830ca <_cmd_set+0x6e>
   830a4:	4b2d      	ldr	r3, [pc, #180]	; (8315c <_cmd_set+0x100>)
   830a6:	4798      	blx	r3
   830a8:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   830aa:	492b      	ldr	r1, [pc, #172]	; (83158 <_cmd_set+0xfc>)
   830ac:	2000      	movs	r0, #0
   830ae:	4b27      	ldr	r3, [pc, #156]	; (8314c <_cmd_set+0xf0>)
   830b0:	4798      	blx	r3
			if(pToken) second=atoi((char*)pToken);
   830b2:	b160      	cbz	r0, 830ce <_cmd_set+0x72>
   830b4:	4b29      	ldr	r3, [pc, #164]	; (8315c <_cmd_set+0x100>)
   830b6:	4798      	blx	r3
   830b8:	b2c3      	uxtb	r3, r0
			kRtc(KRTC_SET_TIME,(uint32_t)hour,(uint32_t)minute,(uint32_t)second);
   830ba:	462a      	mov	r2, r5
   830bc:	4621      	mov	r1, r4
   830be:	2066      	movs	r0, #102	; 0x66
   830c0:	4c27      	ldr	r4, [pc, #156]	; (83160 <_cmd_set+0x104>)
   830c2:	47a0      	blx	r4
			break;
   830c4:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   830c6:	2400      	movs	r4, #0
   830c8:	e7e7      	b.n	8309a <_cmd_set+0x3e>
   830ca:	2500      	movs	r5, #0
   830cc:	e7ed      	b.n	830aa <_cmd_set+0x4e>
   830ce:	2300      	movs	r3, #0
   830d0:	e7f3      	b.n	830ba <_cmd_set+0x5e>
			pToken=mstrtok(NULL," :./\r\n");
   830d2:	4921      	ldr	r1, [pc, #132]	; (83158 <_cmd_set+0xfc>)
   830d4:	2000      	movs	r0, #0
   830d6:	4b1d      	ldr	r3, [pc, #116]	; (8314c <_cmd_set+0xf0>)
   830d8:	4798      	blx	r3
			if(pToken) date=atoi((char*)pToken);
   830da:	b1f0      	cbz	r0, 8311a <_cmd_set+0xbe>
   830dc:	4b1f      	ldr	r3, [pc, #124]	; (8315c <_cmd_set+0x100>)
   830de:	4798      	blx	r3
   830e0:	b2c4      	uxtb	r4, r0
			pToken=mstrtok(NULL," :./\r\n");
   830e2:	491d      	ldr	r1, [pc, #116]	; (83158 <_cmd_set+0xfc>)
   830e4:	2000      	movs	r0, #0
   830e6:	4b19      	ldr	r3, [pc, #100]	; (8314c <_cmd_set+0xf0>)
   830e8:	4798      	blx	r3
			if(pToken) month=atoi((char*)pToken);
   830ea:	b1c0      	cbz	r0, 8311e <_cmd_set+0xc2>
   830ec:	4b1b      	ldr	r3, [pc, #108]	; (8315c <_cmd_set+0x100>)
   830ee:	4798      	blx	r3
   830f0:	b2c5      	uxtb	r5, r0
			pToken=mstrtok(NULL," :./\r\n");
   830f2:	4919      	ldr	r1, [pc, #100]	; (83158 <_cmd_set+0xfc>)
   830f4:	2000      	movs	r0, #0
   830f6:	4b15      	ldr	r3, [pc, #84]	; (8314c <_cmd_set+0xf0>)
   830f8:	4798      	blx	r3
			if(pToken) centYear=atoi((char*)pToken);
   830fa:	b190      	cbz	r0, 83122 <_cmd_set+0xc6>
   830fc:	4b17      	ldr	r3, [pc, #92]	; (8315c <_cmd_set+0x100>)
   830fe:	4798      	blx	r3
   83100:	b286      	uxth	r6, r0
			Putstr("\e[2K"); //Erase current line on terminal screen
   83102:	4918      	ldr	r1, [pc, #96]	; (83164 <_cmd_set+0x108>)
   83104:	2067      	movs	r0, #103	; 0x67
   83106:	4b18      	ldr	r3, [pc, #96]	; (83168 <_cmd_set+0x10c>)
   83108:	4798      	blx	r3
			if(kRtc(KRTC_SET_DATE,(uint32_t)date,(uint32_t)month,(uint32_t)centYear)==0)
   8310a:	4633      	mov	r3, r6
   8310c:	462a      	mov	r2, r5
   8310e:	4621      	mov	r1, r4
   83110:	2067      	movs	r0, #103	; 0x67
   83112:	4c13      	ldr	r4, [pc, #76]	; (83160 <_cmd_set+0x104>)
   83114:	47a0      	blx	r4
   83116:	b130      	cbz	r0, 83126 <_cmd_set+0xca>
   83118:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t u1=0,u2=0,u3=0;
   8311a:	2400      	movs	r4, #0
   8311c:	e7e1      	b.n	830e2 <_cmd_set+0x86>
   8311e:	2500      	movs	r5, #0
   83120:	e7e7      	b.n	830f2 <_cmd_set+0x96>
	uint16_t u4=0;
   83122:	2600      	movs	r6, #0
   83124:	e7ed      	b.n	83102 <_cmd_set+0xa6>
				Putstr("\r\n");
   83126:	4d11      	ldr	r5, [pc, #68]	; (8316c <_cmd_set+0x110>)
   83128:	4629      	mov	r1, r5
   8312a:	2067      	movs	r0, #103	; 0x67
   8312c:	4c0e      	ldr	r4, [pc, #56]	; (83168 <_cmd_set+0x10c>)
   8312e:	47a0      	blx	r4
				kRtc(KRTC_GETF_DATE,(uint32_t)buf);
   83130:	4e0f      	ldr	r6, [pc, #60]	; (83170 <_cmd_set+0x114>)
   83132:	4631      	mov	r1, r6
   83134:	2068      	movs	r0, #104	; 0x68
   83136:	4b0a      	ldr	r3, [pc, #40]	; (83160 <_cmd_set+0x104>)
   83138:	4798      	blx	r3
				Putstr(buf);
   8313a:	4631      	mov	r1, r6
   8313c:	2067      	movs	r0, #103	; 0x67
   8313e:	47a0      	blx	r4
				Putstr("\r\n");
   83140:	4629      	mov	r1, r5
   83142:	2067      	movs	r0, #103	; 0x67
   83144:	47a0      	blx	r4
}
   83146:	e7e7      	b.n	83118 <_cmd_set+0xbc>
   83148:	00088c48 	.word	0x00088c48
   8314c:	000838a9 	.word	0x000838a9
   83150:	0008409d 	.word	0x0008409d
   83154:	000817c9 	.word	0x000817c9
   83158:	00088f24 	.word	0x00088f24
   8315c:	00083ea1 	.word	0x00083ea1
   83160:	000819f1 	.word	0x000819f1
   83164:	00088f2c 	.word	0x00088f2c
   83168:	00083401 	.word	0x00083401
   8316c:	00088da4 	.word	0x00088da4
   83170:	20001314 	.word	0x20001314

00083174 <_cmd_menu>:
{
   83174:	b510      	push	{r4, lr}
   83176:	4608      	mov	r0, r1
	pToken = (uint32_t)strtok(pParam, " \r\n");
   83178:	4915      	ldr	r1, [pc, #84]	; (831d0 <_cmd_menu+0x5c>)
   8317a:	4b16      	ldr	r3, [pc, #88]	; (831d4 <_cmd_menu+0x60>)
   8317c:	4798      	blx	r3
	if(pToken)
   8317e:	b900      	cbnz	r0, 83182 <_cmd_menu+0xe>
   83180:	bd10      	pop	{r4, pc}
   83182:	4604      	mov	r4, r0
		crc = CRC16MODBUSFRAME((unsigned char*)pToken, strlen((char*)pToken));
   83184:	4b14      	ldr	r3, [pc, #80]	; (831d8 <_cmd_menu+0x64>)
   83186:	4798      	blx	r3
   83188:	4601      	mov	r1, r0
   8318a:	4620      	mov	r0, r4
   8318c:	4b13      	ldr	r3, [pc, #76]	; (831dc <_cmd_menu+0x68>)
   8318e:	4798      	blx	r3
		switch(crc)
   83190:	b280      	uxth	r0, r0
   83192:	f648 0362 	movw	r3, #34914	; 0x8862
   83196:	4298      	cmp	r0, r3
   83198:	d012      	beq.n	831c0 <_cmd_menu+0x4c>
   8319a:	f648 338b 	movw	r3, #35723	; 0x8b8b
   8319e:	4298      	cmp	r0, r3
   831a0:	d008      	beq.n	831b4 <_cmd_menu+0x40>
   831a2:	f241 2352 	movw	r3, #4690	; 0x1252
   831a6:	4298      	cmp	r0, r3
   831a8:	d00e      	beq.n	831c8 <_cmd_menu+0x54>
			Error(ERROR_SHELL_CMD_MENU_SWITCH_BAD_SC, sc);
   831aa:	4621      	mov	r1, r4
   831ac:	2013      	movs	r0, #19
   831ae:	4b0c      	ldr	r3, [pc, #48]	; (831e0 <_cmd_menu+0x6c>)
   831b0:	4798      	blx	r3
}
   831b2:	e7e5      	b.n	83180 <_cmd_menu+0xc>
			Menu(MENU_SWITCH_BUTTON);
   831b4:	2065      	movs	r0, #101	; 0x65
   831b6:	4c0b      	ldr	r4, [pc, #44]	; (831e4 <_cmd_menu+0x70>)
   831b8:	47a0      	blx	r4
			Menu(MENU_PROMPT);
   831ba:	2069      	movs	r0, #105	; 0x69
   831bc:	47a0      	blx	r4
			break;
   831be:	bd10      	pop	{r4, pc}
			Menu(MENU_SELECT_BUTTON);
   831c0:	2066      	movs	r0, #102	; 0x66
   831c2:	4b08      	ldr	r3, [pc, #32]	; (831e4 <_cmd_menu+0x70>)
   831c4:	4798      	blx	r3
			break;
   831c6:	bd10      	pop	{r4, pc}
			Menu(MENU_INIT);
   831c8:	206b      	movs	r0, #107	; 0x6b
   831ca:	4b06      	ldr	r3, [pc, #24]	; (831e4 <_cmd_menu+0x70>)
   831cc:	4798      	blx	r3
			break;
   831ce:	bd10      	pop	{r4, pc}
   831d0:	00088c48 	.word	0x00088c48
   831d4:	000840f9 	.word	0x000840f9
   831d8:	0008409d 	.word	0x0008409d
   831dc:	000817c9 	.word	0x000817c9
   831e0:	00081811 	.word	0x00081811
   831e4:	000802ad 	.word	0x000802ad

000831e8 <_cmd_restart_proc>:
{
   831e8:	b570      	push	{r4, r5, r6, lr}
   831ea:	b082      	sub	sp, #8
   831ec:	4604      	mov	r4, r0
   831ee:	460d      	mov	r5, r1
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   831f0:	8803      	ldrh	r3, [r0, #0]
   831f2:	f043 0304 	orr.w	r3, r3, #4
   831f6:	8003      	strh	r3, [r0, #0]
	sprintf(buf,"\rSystem will restart in %i second...",(int)timeout); Putstr(buf);
   831f8:	4e0e      	ldr	r6, [pc, #56]	; (83234 <_cmd_restart_proc+0x4c>)
   831fa:	460a      	mov	r2, r1
   831fc:	490e      	ldr	r1, [pc, #56]	; (83238 <_cmd_restart_proc+0x50>)
   831fe:	4630      	mov	r0, r6
   83200:	4b0e      	ldr	r3, [pc, #56]	; (8323c <_cmd_restart_proc+0x54>)
   83202:	4798      	blx	r3
   83204:	4631      	mov	r1, r6
   83206:	2067      	movs	r0, #103	; 0x67
   83208:	4b0d      	ldr	r3, [pc, #52]	; (83240 <_cmd_restart_proc+0x58>)
   8320a:	4798      	blx	r3
	if(timeout==0)
   8320c:	b935      	cbnz	r5, 8321c <_cmd_restart_proc+0x34>
   8320e:	4b0d      	ldr	r3, [pc, #52]	; (83244 <_cmd_restart_proc+0x5c>)
		for(sc=100000;sc;sc--);
   83210:	3b01      	subs	r3, #1
   83212:	d1fd      	bne.n	83210 <_cmd_restart_proc+0x28>
		rstc_start_software_reset(RSTC);
   83214:	480c      	ldr	r0, [pc, #48]	; (83248 <_cmd_restart_proc+0x60>)
   83216:	4b0d      	ldr	r3, [pc, #52]	; (8324c <_cmd_restart_proc+0x64>)
   83218:	4798      	blx	r3
   8321a:	e7fe      	b.n	8321a <_cmd_restart_proc+0x32>
		PushTask(_cmd_restart_proc,sc,--timeout,1000);	
   8321c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   83220:	9300      	str	r3, [sp, #0]
   83222:	1e6b      	subs	r3, r5, #1
   83224:	4622      	mov	r2, r4
   83226:	490a      	ldr	r1, [pc, #40]	; (83250 <_cmd_restart_proc+0x68>)
   83228:	2066      	movs	r0, #102	; 0x66
   8322a:	4c0a      	ldr	r4, [pc, #40]	; (83254 <_cmd_restart_proc+0x6c>)
   8322c:	47a0      	blx	r4
}
   8322e:	b002      	add	sp, #8
   83230:	bd70      	pop	{r4, r5, r6, pc}
   83232:	bf00      	nop
   83234:	20001314 	.word	0x20001314
   83238:	00088efc 	.word	0x00088efc
   8323c:	00083f95 	.word	0x00083f95
   83240:	00083401 	.word	0x00083401
   83244:	000186a0 	.word	0x000186a0
   83248:	400e1200 	.word	0x400e1200
   8324c:	00080d3d 	.word	0x00080d3d
   83250:	000831e9 	.word	0x000831e9
   83254:	0008363d 	.word	0x0008363d

00083258 <_cmd_restart>:
{
   83258:	b510      	push	{r4, lr}
   8325a:	b082      	sub	sp, #8
   8325c:	4604      	mov	r4, r0
	mBitsSet(*(uint16_t*)sc,ST_SHELL_PROMPT_DISABLED);
   8325e:	8803      	ldrh	r3, [r0, #0]
   83260:	f043 0304 	orr.w	r3, r3, #4
   83264:	8003      	strh	r3, [r0, #0]
	pParam=atoi((char*)pParam);
   83266:	4608      	mov	r0, r1
   83268:	4b05      	ldr	r3, [pc, #20]	; (83280 <_cmd_restart+0x28>)
   8326a:	4798      	blx	r3
	PushTask(_cmd_restart_proc,sc,pParam,0);
   8326c:	2300      	movs	r3, #0
   8326e:	9300      	str	r3, [sp, #0]
   83270:	4603      	mov	r3, r0
   83272:	4622      	mov	r2, r4
   83274:	4903      	ldr	r1, [pc, #12]	; (83284 <_cmd_restart+0x2c>)
   83276:	2066      	movs	r0, #102	; 0x66
   83278:	4c03      	ldr	r4, [pc, #12]	; (83288 <_cmd_restart+0x30>)
   8327a:	47a0      	blx	r4
}
   8327c:	b002      	add	sp, #8
   8327e:	bd10      	pop	{r4, pc}
   83280:	00083ea1 	.word	0x00083ea1
   83284:	000831e9 	.word	0x000831e9
   83288:	0008363d 	.word	0x0008363d

0008328c <_cmd_infos>:
	"ROM_FLASH --- ROM and Embedded Flash Memory [NVPSIZ is ROM size / NVPSIZ2 is Flash size]",
	"SRAM --- SRAM emulating ROM"
};

void _cmd_infos(uint32_t sc, void*pParam)
{
   8328c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83290:	b08b      	sub	sp, #44	; 0x2c
	chipid_data_t chipData;

	chipid_read(CHIPID,&chipData);
   83292:	a901      	add	r1, sp, #4
   83294:	4844      	ldr	r0, [pc, #272]	; (833a8 <_cmd_infos+0x11c>)
   83296:	4b45      	ldr	r3, [pc, #276]	; (833ac <_cmd_infos+0x120>)
   83298:	4798      	blx	r3
	Putstr("\r\n\t=============== CHIP IDENTIFIER INFOS ===============\r\n\n");
   8329a:	4945      	ldr	r1, [pc, #276]	; (833b0 <_cmd_infos+0x124>)
   8329c:	2067      	movs	r0, #103	; 0x67
   8329e:	4c45      	ldr	r4, [pc, #276]	; (833b4 <_cmd_infos+0x128>)
   832a0:	47a0      	blx	r4
	sprintf(buf,"\tVERSION: %c\r\n",(char)(chipData.ul_version-1)+'A');	Putstr(buf);
   832a2:	9a01      	ldr	r2, [sp, #4]
   832a4:	3a01      	subs	r2, #1
   832a6:	b2d2      	uxtb	r2, r2
   832a8:	4f43      	ldr	r7, [pc, #268]	; (833b8 <_cmd_infos+0x12c>)
   832aa:	3241      	adds	r2, #65	; 0x41
   832ac:	4943      	ldr	r1, [pc, #268]	; (833bc <_cmd_infos+0x130>)
   832ae:	4638      	mov	r0, r7
   832b0:	4b43      	ldr	r3, [pc, #268]	; (833c0 <_cmd_infos+0x134>)
   832b2:	4798      	blx	r3
   832b4:	4639      	mov	r1, r7
   832b6:	2067      	movs	r0, #103	; 0x67
   832b8:	47a0      	blx	r4
		Putstr("\t  EPROC: "),Putstr(eprocs[chipData.ul_eproc]);	Putstr("\r\n");
   832ba:	4942      	ldr	r1, [pc, #264]	; (833c4 <_cmd_infos+0x138>)
   832bc:	2067      	movs	r0, #103	; 0x67
   832be:	47a0      	blx	r4
   832c0:	9a02      	ldr	r2, [sp, #8]
   832c2:	4b41      	ldr	r3, [pc, #260]	; (833c8 <_cmd_infos+0x13c>)
   832c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   832c8:	2067      	movs	r0, #103	; 0x67
   832ca:	47a0      	blx	r4
   832cc:	4e3f      	ldr	r6, [pc, #252]	; (833cc <_cmd_infos+0x140>)
   832ce:	4631      	mov	r1, r6
   832d0:	2067      	movs	r0, #103	; 0x67
   832d2:	47a0      	blx	r4
		Putstr("\t NVPSIZ: "),Putstr(nvpsiz[chipData.ul_nvpsiz]);	Putstr("\r\n");
   832d4:	493e      	ldr	r1, [pc, #248]	; (833d0 <_cmd_infos+0x144>)
   832d6:	2067      	movs	r0, #103	; 0x67
   832d8:	47a0      	blx	r4
   832da:	4d3e      	ldr	r5, [pc, #248]	; (833d4 <_cmd_infos+0x148>)
   832dc:	9b03      	ldr	r3, [sp, #12]
   832de:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   832e2:	2067      	movs	r0, #103	; 0x67
   832e4:	47a0      	blx	r4
   832e6:	4631      	mov	r1, r6
   832e8:	2067      	movs	r0, #103	; 0x67
   832ea:	47a0      	blx	r4
		Putstr("\tNVPSIZ2: "),Putstr(nvpsiz[chipData.ul_nvpsiz2]);	Putstr("\r\n");
   832ec:	493a      	ldr	r1, [pc, #232]	; (833d8 <_cmd_infos+0x14c>)
   832ee:	2067      	movs	r0, #103	; 0x67
   832f0:	47a0      	blx	r4
   832f2:	9b04      	ldr	r3, [sp, #16]
   832f4:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   832f8:	2067      	movs	r0, #103	; 0x67
   832fa:	47a0      	blx	r4
   832fc:	4631      	mov	r1, r6
   832fe:	2067      	movs	r0, #103	; 0x67
   83300:	47a0      	blx	r4
		Putstr("\tSRAMSIZ: "),Putstr(sramsiz[chipData.ul_sramsiz]);	Putstr("\r\n");
   83302:	4936      	ldr	r1, [pc, #216]	; (833dc <_cmd_infos+0x150>)
   83304:	2067      	movs	r0, #103	; 0x67
   83306:	47a0      	blx	r4
   83308:	9a05      	ldr	r2, [sp, #20]
   8330a:	4b35      	ldr	r3, [pc, #212]	; (833e0 <_cmd_infos+0x154>)
   8330c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   83310:	2067      	movs	r0, #103	; 0x67
   83312:	47a0      	blx	r4
   83314:	4631      	mov	r1, r6
   83316:	2067      	movs	r0, #103	; 0x67
   83318:	47a0      	blx	r4
#define k sc
		k=0;
		while(arch[k].value && (arch[k].value!=chipData.ul_arch)) k++;
   8331a:	9906      	ldr	r1, [sp, #24]
   8331c:	2919      	cmp	r1, #25
   8331e:	d038      	beq.n	83392 <_cmd_infos+0x106>
   83320:	4b30      	ldr	r3, [pc, #192]	; (833e4 <_cmd_infos+0x158>)
   83322:	2400      	movs	r4, #0
   83324:	3401      	adds	r4, #1
   83326:	7b1a      	ldrb	r2, [r3, #12]
   83328:	b112      	cbz	r2, 83330 <_cmd_infos+0xa4>
   8332a:	330c      	adds	r3, #12
   8332c:	428a      	cmp	r2, r1
   8332e:	d1f9      	bne.n	83324 <_cmd_infos+0x98>
		Putstr("\t   ARCH: "),Putstr(arch[k].name); Putstr(" --- "); Putstr(arch[k].description); Putstr("\r\n");
   83330:	492d      	ldr	r1, [pc, #180]	; (833e8 <_cmd_infos+0x15c>)
   83332:	2067      	movs	r0, #103	; 0x67
   83334:	4d1f      	ldr	r5, [pc, #124]	; (833b4 <_cmd_infos+0x128>)
   83336:	47a8      	blx	r5
   83338:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 833e4 <_cmd_infos+0x158>
   8333c:	ea4f 0944 	mov.w	r9, r4, lsl #1
   83340:	eb09 0304 	add.w	r3, r9, r4
   83344:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   83348:	6859      	ldr	r1, [r3, #4]
   8334a:	2067      	movs	r0, #103	; 0x67
   8334c:	47a8      	blx	r5
   8334e:	4927      	ldr	r1, [pc, #156]	; (833ec <_cmd_infos+0x160>)
   83350:	2067      	movs	r0, #103	; 0x67
   83352:	47a8      	blx	r5
   83354:	444c      	add	r4, r9
   83356:	eb08 0884 	add.w	r8, r8, r4, lsl #2
   8335a:	f8d8 1008 	ldr.w	r1, [r8, #8]
   8335e:	2067      	movs	r0, #103	; 0x67
   83360:	47a8      	blx	r5
   83362:	4631      	mov	r1, r6
   83364:	2067      	movs	r0, #103	; 0x67
   83366:	47a8      	blx	r5
#undef k
		Putstr("\t NVPTYP: "),Putstr(nvptyp[chipData.ul_nvptyp]);	Putstr("\r\n");
   83368:	4921      	ldr	r1, [pc, #132]	; (833f0 <_cmd_infos+0x164>)
   8336a:	2067      	movs	r0, #103	; 0x67
   8336c:	47a8      	blx	r5
   8336e:	9a07      	ldr	r2, [sp, #28]
   83370:	4b20      	ldr	r3, [pc, #128]	; (833f4 <_cmd_infos+0x168>)
   83372:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   83376:	2067      	movs	r0, #103	; 0x67
   83378:	47a8      	blx	r5
   8337a:	4631      	mov	r1, r6
   8337c:	2067      	movs	r0, #103	; 0x67
   8337e:	47a8      	blx	r5
	if(chipData.ul_extflag)
   83380:	9b08      	ldr	r3, [sp, #32]
   83382:	b943      	cbnz	r3, 83396 <_cmd_infos+0x10a>
	{
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
	}
	Putstr("\r\n\t=====================================================\r\n\n");
   83384:	491c      	ldr	r1, [pc, #112]	; (833f8 <_cmd_infos+0x16c>)
   83386:	2067      	movs	r0, #103	; 0x67
   83388:	4b0a      	ldr	r3, [pc, #40]	; (833b4 <_cmd_infos+0x128>)
   8338a:	4798      	blx	r3
}
   8338c:	b00b      	add	sp, #44	; 0x2c
   8338e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		k=0;
   83392:	2400      	movs	r4, #0
   83394:	e7cc      	b.n	83330 <_cmd_infos+0xa4>
		sprintf(buf,"\t   EXID: %08X\r\n",(unsigned int)chipData.ul_extid); Putstr(buf);
   83396:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83398:	4918      	ldr	r1, [pc, #96]	; (833fc <_cmd_infos+0x170>)
   8339a:	4807      	ldr	r0, [pc, #28]	; (833b8 <_cmd_infos+0x12c>)
   8339c:	4b08      	ldr	r3, [pc, #32]	; (833c0 <_cmd_infos+0x134>)
   8339e:	4798      	blx	r3
   833a0:	4639      	mov	r1, r7
   833a2:	2067      	movs	r0, #103	; 0x67
   833a4:	47a8      	blx	r5
   833a6:	e7ed      	b.n	83384 <_cmd_infos+0xf8>
   833a8:	400e0740 	.word	0x400e0740
   833ac:	000801f9 	.word	0x000801f9
   833b0:	00088e10 	.word	0x00088e10
   833b4:	00083401 	.word	0x00083401
   833b8:	20001314 	.word	0x20001314
   833bc:	00088e4c 	.word	0x00088e4c
   833c0:	00083f95 	.word	0x00083f95
   833c4:	00088e5c 	.word	0x00088e5c
   833c8:	20000578 	.word	0x20000578
   833cc:	00088da4 	.word	0x00088da4
   833d0:	00088e68 	.word	0x00088e68
   833d4:	20000598 	.word	0x20000598
   833d8:	00088e74 	.word	0x00088e74
   833dc:	00088e80 	.word	0x00088e80
   833e0:	200005ec 	.word	0x200005ec
   833e4:	00088f44 	.word	0x00088f44
   833e8:	00088e8c 	.word	0x00088e8c
   833ec:	00088e98 	.word	0x00088e98
   833f0:	00088ea0 	.word	0x00088ea0
   833f4:	200005d8 	.word	0x200005d8
   833f8:	00088ec0 	.word	0x00088ec0
   833fc:	00088eac 	.word	0x00088eac

00083400 <Shellcom>:
	char	*pTxRead;
}shellcom;


uint32_t Shellcom(uint32_t sc, ...)
{
   83400:	b40f      	push	{r0, r1, r2, r3}
   83402:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	switch(sc)
   83404:	9906      	ldr	r1, [sp, #24]
   83406:	f1a1 0364 	sub.w	r3, r1, #100	; 0x64
   8340a:	2b04      	cmp	r3, #4
   8340c:	f200 80b5 	bhi.w	8357a <Shellcom+0x17a>
   83410:	e8df f013 	tbh	[pc, r3, lsl #1]
   83414:	00b30005 	.word	0x00b30005
   83418:	0059003a 	.word	0x0059003a
   8341c:	0086      	.short	0x0086
	{
	case SHELLCOM_NEW:
		shellcom.pTxRead=shellcom.pTxWrite=shellcomTxBuf;
   8341e:	4b59      	ldr	r3, [pc, #356]	; (83584 <Shellcom+0x184>)
   83420:	4a59      	ldr	r2, [pc, #356]	; (83588 <Shellcom+0x188>)
   83422:	601a      	str	r2, [r3, #0]
   83424:	605a      	str	r2, [r3, #4]
		pmc_enable_periph_clk(ID_UART);
   83426:	2008      	movs	r0, #8
   83428:	4b58      	ldr	r3, [pc, #352]	; (8358c <Shellcom+0x18c>)
   8342a:	4798      	blx	r3
		pio_configure_pin(UART_TX_PIN,UART_TX_PIN_FLAGS);
   8342c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   83430:	200c      	movs	r0, #12
   83432:	4c57      	ldr	r4, [pc, #348]	; (83590 <Shellcom+0x190>)
   83434:	47a0      	blx	r4
		pio_configure_pin(UART_RX_PIN,UART_RX_PIN_FLAGS);
   83436:	4957      	ldr	r1, [pc, #348]	; (83594 <Shellcom+0x194>)
   83438:	200b      	movs	r0, #11
   8343a:	47a0      	blx	r4
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   8343c:	4956      	ldr	r1, [pc, #344]	; (83598 <Shellcom+0x198>)
   8343e:	4857      	ldr	r0, [pc, #348]	; (8359c <Shellcom+0x19c>)
   83440:	4b57      	ldr	r3, [pc, #348]	; (835a0 <Shellcom+0x1a0>)
   83442:	4798      	blx	r3
   83444:	b938      	cbnz	r0, 83456 <Shellcom+0x56>
   83446:	f44f 7280 	mov.w	r2, #256	; 0x100
   8344a:	4b56      	ldr	r3, [pc, #344]	; (835a4 <Shellcom+0x1a4>)
   8344c:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(ID_UART);
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   8344e:	4c53      	ldr	r4, [pc, #332]	; (8359c <Shellcom+0x19c>)
   83450:	4e55      	ldr	r6, [pc, #340]	; (835a8 <Shellcom+0x1a8>)
   83452:	4f56      	ldr	r7, [pc, #344]	; (835ac <Shellcom+0x1ac>)
   83454:	e006      	b.n	83464 <Shellcom+0x64>
		if(uart_init(UART,&uart_opt)) Error(ERROR_SHELLCOM_UART_INIT_FAILED);
   83456:	2018      	movs	r0, #24
   83458:	4b55      	ldr	r3, [pc, #340]	; (835b0 <Shellcom+0x1b0>)
   8345a:	4798      	blx	r3
   8345c:	e7f3      	b.n	83446 <Shellcom+0x46>
		while(uart_is_rx_ready(UART)) uart_read(UART,(uint8_t*)&sc);
   8345e:	a906      	add	r1, sp, #24
   83460:	4620      	mov	r0, r4
   83462:	47b8      	blx	r7
   83464:	4620      	mov	r0, r4
   83466:	47b0      	blx	r6
   83468:	4605      	mov	r5, r0
   8346a:	2800      	cmp	r0, #0
   8346c:	d1f7      	bne.n	8345e <Shellcom+0x5e>
		uart_get_status(UART);	
   8346e:	4c4b      	ldr	r4, [pc, #300]	; (8359c <Shellcom+0x19c>)
   83470:	4620      	mov	r0, r4
   83472:	4b50      	ldr	r3, [pc, #320]	; (835b4 <Shellcom+0x1b4>)
   83474:	4798      	blx	r3
		uart_enable_interrupt(UART,US_IER_RXRDY);
   83476:	2101      	movs	r1, #1
   83478:	4620      	mov	r0, r4
   8347a:	4b4f      	ldr	r3, [pc, #316]	; (835b8 <Shellcom+0x1b8>)
   8347c:	4798      	blx	r3
	default:
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
	}

	return 0;
}
   8347e:	4628      	mov	r0, r5
   83480:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   83484:	b004      	add	sp, #16
   83486:	4770      	bx	lr
		*shellcom.pTxWrite++=_charData;
   83488:	4b3e      	ldr	r3, [pc, #248]	; (83584 <Shellcom+0x184>)
   8348a:	681a      	ldr	r2, [r3, #0]
   8348c:	1c51      	adds	r1, r2, #1
   8348e:	6019      	str	r1, [r3, #0]
   83490:	9907      	ldr	r1, [sp, #28]
   83492:	7011      	strb	r1, [r2, #0]
		if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   83494:	681a      	ldr	r2, [r3, #0]
   83496:	4b49      	ldr	r3, [pc, #292]	; (835bc <Shellcom+0x1bc>)
   83498:	429a      	cmp	r2, r3
   8349a:	d303      	bcc.n	834a4 <Shellcom+0xa4>
   8349c:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   834a0:	4b38      	ldr	r3, [pc, #224]	; (83584 <Shellcom+0x184>)
   834a2:	601a      	str	r2, [r3, #0]
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   834a4:	4b37      	ldr	r3, [pc, #220]	; (83584 <Shellcom+0x184>)
   834a6:	681a      	ldr	r2, [r3, #0]
   834a8:	685b      	ldr	r3, [r3, #4]
   834aa:	429a      	cmp	r2, r3
   834ac:	d006      	beq.n	834bc <Shellcom+0xbc>
		uart_enable_interrupt(UART,US_IER_TXEMPTY);
   834ae:	f44f 7100 	mov.w	r1, #512	; 0x200
   834b2:	483a      	ldr	r0, [pc, #232]	; (8359c <Shellcom+0x19c>)
   834b4:	4b40      	ldr	r3, [pc, #256]	; (835b8 <Shellcom+0x1b8>)
   834b6:	4798      	blx	r3
		return 1;
   834b8:	2501      	movs	r5, #1
   834ba:	e7e0      	b.n	8347e <Shellcom+0x7e>
		if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   834bc:	2100      	movs	r1, #0
   834be:	2017      	movs	r0, #23
   834c0:	4b3b      	ldr	r3, [pc, #236]	; (835b0 <Shellcom+0x1b0>)
   834c2:	4798      	blx	r3
   834c4:	e7f3      	b.n	834ae <Shellcom+0xae>
		_nChar=0;
   834c6:	2300      	movs	r3, #0
   834c8:	9306      	str	r3, [sp, #24]
		while(*(char*)_pStr)
   834ca:	9b07      	ldr	r3, [sp, #28]
   834cc:	4619      	mov	r1, r3
   834ce:	781a      	ldrb	r2, [r3, #0]
   834d0:	b1fa      	cbz	r2, 83512 <Shellcom+0x112>
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   834d2:	4c2c      	ldr	r4, [pc, #176]	; (83584 <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   834d4:	4e39      	ldr	r6, [pc, #228]	; (835bc <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   834d6:	4d31      	ldr	r5, [pc, #196]	; (8359c <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _nChar++;
   834d8:	6822      	ldr	r2, [r4, #0]
   834da:	1c50      	adds	r0, r2, #1
   834dc:	6020      	str	r0, [r4, #0]
   834de:	3301      	adds	r3, #1
   834e0:	9307      	str	r3, [sp, #28]
   834e2:	780b      	ldrb	r3, [r1, #0]
   834e4:	7013      	strb	r3, [r2, #0]
   834e6:	9b06      	ldr	r3, [sp, #24]
   834e8:	3301      	adds	r3, #1
   834ea:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   834ec:	6823      	ldr	r3, [r4, #0]
   834ee:	42b3      	cmp	r3, r6
   834f0:	bf24      	itt	cs
   834f2:	4b25      	ldrcs	r3, [pc, #148]	; (83588 <Shellcom+0x188>)
   834f4:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   834f6:	6822      	ldr	r2, [r4, #0]
   834f8:	6863      	ldr	r3, [r4, #4]
   834fa:	429a      	cmp	r2, r3
   834fc:	d00b      	beq.n	83516 <Shellcom+0x116>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   834fe:	f44f 7100 	mov.w	r1, #512	; 0x200
   83502:	4628      	mov	r0, r5
   83504:	4b2c      	ldr	r3, [pc, #176]	; (835b8 <Shellcom+0x1b8>)
   83506:	4798      	blx	r3
		while(*(char*)_pStr)
   83508:	9b07      	ldr	r3, [sp, #28]
   8350a:	4619      	mov	r1, r3
   8350c:	781a      	ldrb	r2, [r3, #0]
   8350e:	2a00      	cmp	r2, #0
   83510:	d1e2      	bne.n	834d8 <Shellcom+0xd8>
		return _nChar;
   83512:	9d06      	ldr	r5, [sp, #24]
   83514:	e7b3      	b.n	8347e <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   83516:	2100      	movs	r1, #0
   83518:	2017      	movs	r0, #23
   8351a:	4b25      	ldr	r3, [pc, #148]	; (835b0 <Shellcom+0x1b0>)
   8351c:	4798      	blx	r3
   8351e:	e7ee      	b.n	834fe <Shellcom+0xfe>
		_nChar=0;
   83520:	2300      	movs	r3, #0
   83522:	9306      	str	r3, [sp, #24]
		while(_strLen)
   83524:	9b08      	ldr	r3, [sp, #32]
   83526:	b30b      	cbz	r3, 8356c <Shellcom+0x16c>
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   83528:	4c16      	ldr	r4, [pc, #88]	; (83584 <Shellcom+0x184>)
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   8352a:	4e24      	ldr	r6, [pc, #144]	; (835bc <Shellcom+0x1bc>)
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   8352c:	4d1b      	ldr	r5, [pc, #108]	; (8359c <Shellcom+0x19c>)
			*shellcom.pTxWrite++=*(char*)_pStr++; _strLen--; _nChar++;
   8352e:	6823      	ldr	r3, [r4, #0]
   83530:	1c5a      	adds	r2, r3, #1
   83532:	6022      	str	r2, [r4, #0]
   83534:	9a07      	ldr	r2, [sp, #28]
   83536:	1c51      	adds	r1, r2, #1
   83538:	9107      	str	r1, [sp, #28]
   8353a:	7812      	ldrb	r2, [r2, #0]
   8353c:	701a      	strb	r2, [r3, #0]
   8353e:	9b08      	ldr	r3, [sp, #32]
   83540:	3b01      	subs	r3, #1
   83542:	9308      	str	r3, [sp, #32]
   83544:	9b06      	ldr	r3, [sp, #24]
   83546:	3301      	adds	r3, #1
   83548:	9306      	str	r3, [sp, #24]
			if(shellcom.pTxWrite>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxWrite=shellcomTxBuf;
   8354a:	6823      	ldr	r3, [r4, #0]
   8354c:	42b3      	cmp	r3, r6
   8354e:	bf24      	itt	cs
   83550:	4b0d      	ldrcs	r3, [pc, #52]	; (83588 <Shellcom+0x188>)
   83552:	6023      	strcs	r3, [r4, #0]
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   83554:	6822      	ldr	r2, [r4, #0]
   83556:	6863      	ldr	r3, [r4, #4]
   83558:	429a      	cmp	r2, r3
   8355a:	d009      	beq.n	83570 <Shellcom+0x170>
			uart_enable_interrupt(UART,US_IER_TXEMPTY);
   8355c:	f44f 7100 	mov.w	r1, #512	; 0x200
   83560:	4628      	mov	r0, r5
   83562:	4b15      	ldr	r3, [pc, #84]	; (835b8 <Shellcom+0x1b8>)
   83564:	4798      	blx	r3
		while(_strLen)
   83566:	9b08      	ldr	r3, [sp, #32]
   83568:	2b00      	cmp	r3, #0
   8356a:	d1e0      	bne.n	8352e <Shellcom+0x12e>
		return _nChar;
   8356c:	9d06      	ldr	r5, [sp, #24]
   8356e:	e786      	b.n	8347e <Shellcom+0x7e>
			if(shellcom.pTxWrite==shellcom.pTxRead) Error(ERROR_SHELLCOM_TX_BUFFER_FULL, (uint32_t)0);
   83570:	2100      	movs	r1, #0
   83572:	2017      	movs	r0, #23
   83574:	4b0e      	ldr	r3, [pc, #56]	; (835b0 <Shellcom+0x1b0>)
   83576:	4798      	blx	r3
   83578:	e7f0      	b.n	8355c <Shellcom+0x15c>
		Error(ERROR_SHELLCOM_SWITCH_BAD_SC, (uint32_t)sc);
   8357a:	200c      	movs	r0, #12
   8357c:	4b0c      	ldr	r3, [pc, #48]	; (835b0 <Shellcom+0x1b0>)
   8357e:	4798      	blx	r3
	return 0;
   83580:	2500      	movs	r5, #0
   83582:	e77c      	b.n	8347e <Shellcom+0x7e>
   83584:	20001414 	.word	0x20001414
   83588:	2000141c 	.word	0x2000141c
   8358c:	00080b09 	.word	0x00080b09
   83590:	00080909 	.word	0x00080909
   83594:	08000001 	.word	0x08000001
   83598:	0008986c 	.word	0x0008986c
   8359c:	400e0600 	.word	0x400e0600
   835a0:	00080fad 	.word	0x00080fad
   835a4:	e000e100 	.word	0xe000e100
   835a8:	00080fef 	.word	0x00080fef
   835ac:	00080ff7 	.word	0x00080ff7
   835b0:	00081811 	.word	0x00081811
   835b4:	00080feb 	.word	0x00080feb
   835b8:	00080fe3 	.word	0x00080fe3
   835bc:	2000161c 	.word	0x2000161c

000835c0 <UART_Handler>:
enum{
	_SHELL_KBHIT = 2
};

void UART_Handler()
{
   835c0:	b510      	push	{r4, lr}
   835c2:	b082      	sub	sp, #8
	uint32_t dw_status = uart_get_status(UART);
   835c4:	4816      	ldr	r0, [pc, #88]	; (83620 <UART_Handler+0x60>)
   835c6:	4b17      	ldr	r3, [pc, #92]	; (83624 <UART_Handler+0x64>)
   835c8:	4798      	blx	r3
   835ca:	4604      	mov	r4, r0
	//TX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_TXEMPTY))
   835cc:	f410 7f00 	tst.w	r0, #512	; 0x200
   835d0:	d011      	beq.n	835f6 <UART_Handler+0x36>
	{
		if(shellcom.pTxRead!=shellcom.pTxWrite)
   835d2:	4a15      	ldr	r2, [pc, #84]	; (83628 <UART_Handler+0x68>)
   835d4:	6853      	ldr	r3, [r2, #4]
   835d6:	6812      	ldr	r2, [r2, #0]
   835d8:	4293      	cmp	r3, r2
   835da:	d011      	beq.n	83600 <UART_Handler+0x40>
		{
			UART->UART_THR = *shellcom.pTxRead++;
   835dc:	1c5a      	adds	r2, r3, #1
   835de:	4912      	ldr	r1, [pc, #72]	; (83628 <UART_Handler+0x68>)
   835e0:	604a      	str	r2, [r1, #4]
   835e2:	7819      	ldrb	r1, [r3, #0]
   835e4:	4b0e      	ldr	r3, [pc, #56]	; (83620 <UART_Handler+0x60>)
   835e6:	61d9      	str	r1, [r3, #28]
			if(shellcom.pTxRead>=shellcomTxBuf+SHELLCOM_TXBUF_LEN) shellcom.pTxRead=shellcomTxBuf;
   835e8:	4b10      	ldr	r3, [pc, #64]	; (8362c <UART_Handler+0x6c>)
   835ea:	429a      	cmp	r2, r3
   835ec:	d303      	bcc.n	835f6 <UART_Handler+0x36>
   835ee:	f5a3 7200 	sub.w	r2, r3, #512	; 0x200
   835f2:	4b0d      	ldr	r3, [pc, #52]	; (83628 <UART_Handler+0x68>)
   835f4:	605a      	str	r2, [r3, #4]
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
		}
	}

	//RX section //////////////////////////////////////////////////////////////////////////////////
	if(mIsBitsSet(dw_status,US_CSR_RXRDY))
   835f6:	f014 0f01 	tst.w	r4, #1
   835fa:	d107      	bne.n	8360c <UART_Handler+0x4c>
	{
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
	}
}
   835fc:	b002      	add	sp, #8
   835fe:	bd10      	pop	{r4, pc}
			uart_disable_interrupt(UART,US_IER_TXEMPTY);
   83600:	f44f 7100 	mov.w	r1, #512	; 0x200
   83604:	4806      	ldr	r0, [pc, #24]	; (83620 <UART_Handler+0x60>)
   83606:	4b0a      	ldr	r3, [pc, #40]	; (83630 <UART_Handler+0x70>)
   83608:	4798      	blx	r3
   8360a:	e7f4      	b.n	835f6 <UART_Handler+0x36>
		PushTask(Shell,_SHELL_KBHIT,UART->UART_RHR,0);
   8360c:	4b04      	ldr	r3, [pc, #16]	; (83620 <UART_Handler+0x60>)
   8360e:	699b      	ldr	r3, [r3, #24]
   83610:	2200      	movs	r2, #0
   83612:	9200      	str	r2, [sp, #0]
   83614:	2202      	movs	r2, #2
   83616:	4907      	ldr	r1, [pc, #28]	; (83634 <UART_Handler+0x74>)
   83618:	2066      	movs	r0, #102	; 0x66
   8361a:	4c07      	ldr	r4, [pc, #28]	; (83638 <UART_Handler+0x78>)
   8361c:	47a0      	blx	r4
}
   8361e:	e7ed      	b.n	835fc <UART_Handler+0x3c>
   83620:	400e0600 	.word	0x400e0600
   83624:	00080feb 	.word	0x00080feb
   83628:	20001414 	.word	0x20001414
   8362c:	2000161c 	.word	0x2000161c
   83630:	00080fe7 	.word	0x00080fe7
   83634:	0008226d 	.word	0x0008226d
   83638:	0008363d 	.word	0x0008363d

0008363c <Taskman>:
	_TASKMAN_DELAYED_TASK_PROC	= 1
};


uint32_t Taskman(uint32_t sc, ...)
{
   8363c:	b40f      	push	{r0, r1, r2, r3}
   8363e:	b5f0      	push	{r4, r5, r6, r7, lr}
   83640:	b083      	sub	sp, #12
	switch(sc)
   83642:	9908      	ldr	r1, [sp, #32]
   83644:	2964      	cmp	r1, #100	; 0x64
   83646:	d028      	beq.n	8369a <Taskman+0x5e>
   83648:	d91e      	bls.n	83688 <Taskman+0x4c>
   8364a:	2966      	cmp	r1, #102	; 0x66
   8364c:	d06b      	beq.n	83726 <Taskman+0xea>
   8364e:	2967      	cmp	r1, #103	; 0x67
   83650:	f040 80cd 	bne.w	837ee <Taskman+0x1b2>
#undef _delay
#undef k
		break;

	case TASKMAN_POP:
		cpu_irq_enter_critical();
   83654:	4b68      	ldr	r3, [pc, #416]	; (837f8 <Taskman+0x1bc>)
   83656:	4798      	blx	r3
		if(taskman.pPop!=taskman.pPush)
   83658:	4a68      	ldr	r2, [pc, #416]	; (837fc <Taskman+0x1c0>)
   8365a:	6853      	ldr	r3, [r2, #4]
   8365c:	6812      	ldr	r2, [r2, #0]
   8365e:	4293      	cmp	r3, r2
   83660:	f000 80ae 	beq.w	837c0 <Taskman+0x184>
		{
			t_pTaskFunc	 func;
			uint32_t pa;
			func = taskman.pPop->pFunc;
   83664:	681d      	ldr	r5, [r3, #0]
			sc = taskman.pPop->sc;
   83666:	685c      	ldr	r4, [r3, #4]
   83668:	9408      	str	r4, [sp, #32]
			pa = taskman.pPop->param;
   8366a:	689e      	ldr	r6, [r3, #8]
			taskman.pPop++;
   8366c:	3310      	adds	r3, #16
			if(taskman.pPop>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPop=tasks;
   8366e:	4a64      	ldr	r2, [pc, #400]	; (83800 <Taskman+0x1c4>)
   83670:	4293      	cmp	r3, r2
   83672:	f0c0 80a2 	bcc.w	837ba <Taskman+0x17e>
   83676:	4a63      	ldr	r2, [pc, #396]	; (83804 <Taskman+0x1c8>)
   83678:	4b60      	ldr	r3, [pc, #384]	; (837fc <Taskman+0x1c0>)
   8367a:	605a      	str	r2, [r3, #4]
			cpu_irq_leave_critical();
   8367c:	4b62      	ldr	r3, [pc, #392]	; (83808 <Taskman+0x1cc>)
   8367e:	4798      	blx	r3
			func(sc,pa);
   83680:	4631      	mov	r1, r6
   83682:	4620      	mov	r0, r4
   83684:	47a8      	blx	r5
			return 0; //Must return here because of "cpu_irq_leave_critical()"
   83686:	e048      	b.n	8371a <Taskman+0xde>
	switch(sc)
   83688:	2901      	cmp	r1, #1
   8368a:	f040 80b0 	bne.w	837ee <Taskman+0x1b2>


	////////// PRIVATE SERVICES IMPLEMENTATION ///////////////////////////////////////////
	case _TASKMAN_DELAYED_TASK_PROC:
#define k sc
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   8368e:	2500      	movs	r5, #0
   83690:	9508      	str	r5, [sp, #32]
   83692:	4c5e      	ldr	r4, [pc, #376]	; (8380c <Taskman+0x1d0>)
		{
			if(dTasks[k].delay)
			{
				if(--dTasks[k].delay==0)
				{
					PushTask(
   83694:	462f      	mov	r7, r5
   83696:	2666      	movs	r6, #102	; 0x66
   83698:	e09a      	b.n	837d0 <Taskman+0x194>
		taskman.pPop=taskman.pPush=tasks;
   8369a:	4b58      	ldr	r3, [pc, #352]	; (837fc <Taskman+0x1c0>)
   8369c:	4a59      	ldr	r2, [pc, #356]	; (83804 <Taskman+0x1c8>)
   8369e:	601a      	str	r2, [r3, #0]
   836a0:	605a      	str	r2, [r3, #4]
   836a2:	4b5a      	ldr	r3, [pc, #360]	; (8380c <Taskman+0x1d0>)
   836a4:	f503 71a0 	add.w	r1, r3, #320	; 0x140
			dTasks[k].delay=0;
   836a8:	2200      	movs	r2, #0
   836aa:	60da      	str	r2, [r3, #12]
   836ac:	3310      	adds	r3, #16
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   836ae:	428b      	cmp	r3, r1
   836b0:	d1fb      	bne.n	836aa <Taskman+0x6e>
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   836b2:	4b57      	ldr	r3, [pc, #348]	; (83810 <Taskman+0x1d4>)
   836b4:	2202      	movs	r2, #2
   836b6:	661a      	str	r2, [r3, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   836b8:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   836ba:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   836bc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   836c0:	6f19      	ldr	r1, [r3, #112]	; 0x70
   836c2:	f021 0102 	bic.w	r1, r1, #2
   836c6:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   836c8:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   836ca:	2016      	movs	r0, #22
   836cc:	4b51      	ldr	r3, [pc, #324]	; (83814 <Taskman+0x1d8>)
   836ce:	4798      	blx	r3

	//Configure the PMC to enable the TC module.
	sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);

	//Init TC to waveform mode.
	tc_init(
   836d0:	4c51      	ldr	r4, [pc, #324]	; (83818 <Taskman+0x1dc>)
   836d2:	4a52      	ldr	r2, [pc, #328]	; (8381c <Taskman+0x1e0>)
   836d4:	2100      	movs	r1, #0
   836d6:	4620      	mov	r0, r4
   836d8:	4b51      	ldr	r3, [pc, #324]	; (83820 <Taskman+0x1e4>)
   836da:	4798      	blx	r3

	//Configure waveform frequency and duty cycle.
	rc =	(sysclk_get_peripheral_bus_hz(TC) /
	TC_WAVEFORM_DIVISOR) /
	TC_WAVEFORM_FREQUENCY;
	tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
   836dc:	f240 22ee 	movw	r2, #750	; 0x2ee
   836e0:	2100      	movs	r1, #0
   836e2:	4620      	mov	r0, r4
   836e4:	4b4f      	ldr	r3, [pc, #316]	; (83824 <Taskman+0x1e8>)
   836e6:	4798      	blx	r3

	ra = (100 - TC_WAVEFORM_DUTY_CYCLE) * rc / 100;
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
   836e8:	f240 220d 	movw	r2, #525	; 0x20d
   836ec:	2100      	movs	r1, #0
   836ee:	4620      	mov	r0, r4
   836f0:	4b4d      	ldr	r3, [pc, #308]	; (83828 <Taskman+0x1ec>)
   836f2:	4798      	blx	r3

	//Enable TC TC_CHANNEL_WAVEFORM
	tc_start(TC, TC_CHANNEL_WAVEFORM);
   836f4:	2100      	movs	r1, #0
   836f6:	4620      	mov	r0, r4
   836f8:	4b4c      	ldr	r3, [pc, #304]	; (8382c <Taskman+0x1f0>)
   836fa:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   836fc:	4b4c      	ldr	r3, [pc, #304]	; (83830 <Taskman+0x1f4>)
   836fe:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   83702:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   83706:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   8370a:	2100      	movs	r1, #0
   8370c:	f883 1316 	strb.w	r1, [r3, #790]	; 0x316
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   83710:	601a      	str	r2, [r3, #0]
		tc_enable_interrupt(TC, TC_CHANNEL_WAVEFORM, TC_IER_CPAS);
   83712:	2204      	movs	r2, #4
   83714:	4620      	mov	r0, r4
   83716:	4b47      	ldr	r3, [pc, #284]	; (83834 <Taskman+0x1f8>)
   83718:	4798      	blx	r3
}
   8371a:	2000      	movs	r0, #0
   8371c:	b003      	add	sp, #12
   8371e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83722:	b004      	add	sp, #16
   83724:	4770      	bx	lr
		cpu_irq_enter_critical();
   83726:	4b34      	ldr	r3, [pc, #208]	; (837f8 <Taskman+0x1bc>)
   83728:	4798      	blx	r3
		if(_delay)
   8372a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8372c:	b345      	cbz	r5, 83780 <Taskman+0x144>
			for(k=0;(k<TASKMAN_DELAYED_TASK_LIST_LEN)&&(dTasks[k].delay);k++);
   8372e:	2300      	movs	r3, #0
   83730:	9308      	str	r3, [sp, #32]
   83732:	4b36      	ldr	r3, [pc, #216]	; (8380c <Taskman+0x1d0>)
   83734:	68db      	ldr	r3, [r3, #12]
   83736:	b1a3      	cbz	r3, 83762 <Taskman+0x126>
   83738:	2301      	movs	r3, #1
   8373a:	9308      	str	r3, [sp, #32]
   8373c:	4a33      	ldr	r2, [pc, #204]	; (8380c <Taskman+0x1d0>)
   8373e:	2000      	movs	r0, #0
   83740:	461c      	mov	r4, r3
   83742:	69d1      	ldr	r1, [r2, #28]
   83744:	b151      	cbz	r1, 8375c <Taskman+0x120>
   83746:	3301      	adds	r3, #1
   83748:	3210      	adds	r2, #16
   8374a:	4620      	mov	r0, r4
   8374c:	2b14      	cmp	r3, #20
   8374e:	d1f8      	bne.n	83742 <Taskman+0x106>
			if(k==TASKMAN_DELAYED_TASK_LIST_LEN) Error(ERROR_TASKMAN_DELAYED_TASKLIST_FULL, (uint32_t)0);
   83750:	2100      	movs	r1, #0
   83752:	2016      	movs	r0, #22
   83754:	4b38      	ldr	r3, [pc, #224]	; (83838 <Taskman+0x1fc>)
   83756:	4798      	blx	r3
   83758:	2314      	movs	r3, #20
   8375a:	e002      	b.n	83762 <Taskman+0x126>
   8375c:	b970      	cbnz	r0, 8377c <Taskman+0x140>
   8375e:	2b14      	cmp	r3, #20
   83760:	d0f6      	beq.n	83750 <Taskman+0x114>
			dTasks[k].pFunc=_func;
   83762:	492a      	ldr	r1, [pc, #168]	; (8380c <Taskman+0x1d0>)
   83764:	011b      	lsls	r3, r3, #4
   83766:	18ca      	adds	r2, r1, r3
   83768:	9809      	ldr	r0, [sp, #36]	; 0x24
   8376a:	50c8      	str	r0, [r1, r3]
			dTasks[k].sc=_sc;
   8376c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8376e:	6053      	str	r3, [r2, #4]
			dTasks[k].param=_param;
   83770:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83772:	6093      	str	r3, [r2, #8]
			dTasks[k].delay=_delay;
   83774:	60d5      	str	r5, [r2, #12]
		cpu_irq_leave_critical();
   83776:	4b24      	ldr	r3, [pc, #144]	; (83808 <Taskman+0x1cc>)
   83778:	4798      	blx	r3
		break;
   8377a:	e7ce      	b.n	8371a <Taskman+0xde>
   8377c:	9308      	str	r3, [sp, #32]
   8377e:	e7ee      	b.n	8375e <Taskman+0x122>
			taskman.pPush->pFunc=_func;
   83780:	4b1e      	ldr	r3, [pc, #120]	; (837fc <Taskman+0x1c0>)
   83782:	681a      	ldr	r2, [r3, #0]
   83784:	9909      	ldr	r1, [sp, #36]	; 0x24
   83786:	6011      	str	r1, [r2, #0]
			taskman.pPush->sc=_sc;
   83788:	681b      	ldr	r3, [r3, #0]
   8378a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8378c:	605a      	str	r2, [r3, #4]
			taskman.pPush->param=_param;
   8378e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83790:	609a      	str	r2, [r3, #8]
			taskman.pPush++;
   83792:	3310      	adds	r3, #16
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   83794:	4a1a      	ldr	r2, [pc, #104]	; (83800 <Taskman+0x1c4>)
   83796:	4293      	cmp	r3, r2
   83798:	d20b      	bcs.n	837b2 <Taskman+0x176>
			taskman.pPush++;
   8379a:	4a18      	ldr	r2, [pc, #96]	; (837fc <Taskman+0x1c0>)
   8379c:	6013      	str	r3, [r2, #0]
			if(taskman.pPush==taskman.pPop) Error(ERROR_TASKMAN_TASKLIST_FULL, (uint32_t)0);
   8379e:	4b17      	ldr	r3, [pc, #92]	; (837fc <Taskman+0x1c0>)
   837a0:	681a      	ldr	r2, [r3, #0]
   837a2:	685b      	ldr	r3, [r3, #4]
   837a4:	429a      	cmp	r2, r3
   837a6:	d1e6      	bne.n	83776 <Taskman+0x13a>
   837a8:	2100      	movs	r1, #0
   837aa:	2015      	movs	r0, #21
   837ac:	4b22      	ldr	r3, [pc, #136]	; (83838 <Taskman+0x1fc>)
   837ae:	4798      	blx	r3
   837b0:	e7e1      	b.n	83776 <Taskman+0x13a>
			if(taskman.pPush>=tasks+TASKMAN_TASK_LIST_LEN) taskman.pPush=tasks;
   837b2:	4a14      	ldr	r2, [pc, #80]	; (83804 <Taskman+0x1c8>)
   837b4:	4b11      	ldr	r3, [pc, #68]	; (837fc <Taskman+0x1c0>)
   837b6:	601a      	str	r2, [r3, #0]
   837b8:	e7f1      	b.n	8379e <Taskman+0x162>
			taskman.pPop++;
   837ba:	4a10      	ldr	r2, [pc, #64]	; (837fc <Taskman+0x1c0>)
   837bc:	6053      	str	r3, [r2, #4]
   837be:	e75d      	b.n	8367c <Taskman+0x40>
		cpu_irq_leave_critical();
   837c0:	4b11      	ldr	r3, [pc, #68]	; (83808 <Taskman+0x1cc>)
   837c2:	4798      	blx	r3
		break;
   837c4:	e7a9      	b.n	8371a <Taskman+0xde>
		for(k=0;k<TASKMAN_DELAYED_TASK_LIST_LEN;k++)
   837c6:	3501      	adds	r5, #1
   837c8:	9508      	str	r5, [sp, #32]
   837ca:	3410      	adds	r4, #16
   837cc:	2d14      	cmp	r5, #20
   837ce:	d0a4      	beq.n	8371a <Taskman+0xde>
			if(dTasks[k].delay)
   837d0:	68e3      	ldr	r3, [r4, #12]
   837d2:	2b00      	cmp	r3, #0
   837d4:	d0f7      	beq.n	837c6 <Taskman+0x18a>
				if(--dTasks[k].delay==0)
   837d6:	3b01      	subs	r3, #1
   837d8:	60e3      	str	r3, [r4, #12]
   837da:	2b00      	cmp	r3, #0
   837dc:	d1f3      	bne.n	837c6 <Taskman+0x18a>
					PushTask(
   837de:	68a3      	ldr	r3, [r4, #8]
   837e0:	6862      	ldr	r2, [r4, #4]
   837e2:	6821      	ldr	r1, [r4, #0]
   837e4:	9700      	str	r7, [sp, #0]
   837e6:	4630      	mov	r0, r6
   837e8:	f7ff ff28 	bl	8363c <Taskman>
   837ec:	e7eb      	b.n	837c6 <Taskman+0x18a>
		Error(ERROR_TASKMAN_SWITCH_BAD_SC,  (uint32_t)sc);
   837ee:	200b      	movs	r0, #11
   837f0:	4b11      	ldr	r3, [pc, #68]	; (83838 <Taskman+0x1fc>)
   837f2:	4798      	blx	r3
   837f4:	e791      	b.n	8371a <Taskman+0xde>
   837f6:	bf00      	nop
   837f8:	00080b41 	.word	0x00080b41
   837fc:	2000175c 	.word	0x2000175c
   83800:	2000175c 	.word	0x2000175c
   83804:	2000161c 	.word	0x2000161c
   83808:	00080b7d 	.word	0x00080b7d
   8380c:	20001764 	.word	0x20001764
   83810:	400e0c00 	.word	0x400e0c00
   83814:	00080b09 	.word	0x00080b09
   83818:	40080000 	.word	0x40080000
   8381c:	0009c003 	.word	0x0009c003
   83820:	00080f6d 	.word	0x00080f6d
   83824:	00080f95 	.word	0x00080f95
   83828:	00080f8d 	.word	0x00080f8d
   8382c:	00080f85 	.word	0x00080f85
   83830:	e000e100 	.word	0xe000e100
   83834:	00080f9d 	.word	0x00080f9d
   83838:	00081811 	.word	0x00081811

0008383c <TC0_Handler>:
{
   8383c:	b508      	push	{r3, lr}
	tc_get_status(TC, TC_CHANNEL_WAVEFORM);
   8383e:	2100      	movs	r1, #0
   83840:	4804      	ldr	r0, [pc, #16]	; (83854 <TC0_Handler+0x18>)
   83842:	4b05      	ldr	r3, [pc, #20]	; (83858 <TC0_Handler+0x1c>)
   83844:	4798      	blx	r3
	Taskman(_TASKMAN_DELAYED_TASK_PROC);
   83846:	2001      	movs	r0, #1
   83848:	4b04      	ldr	r3, [pc, #16]	; (8385c <TC0_Handler+0x20>)
   8384a:	4798      	blx	r3
	Shell(_SHELL_TIMER);
   8384c:	2003      	movs	r0, #3
   8384e:	4b04      	ldr	r3, [pc, #16]	; (83860 <TC0_Handler+0x24>)
   83850:	4798      	blx	r3
   83852:	bd08      	pop	{r3, pc}
   83854:	40080000 	.word	0x40080000
   83858:	00080fa5 	.word	0x00080fa5
   8385c:	0008363d 	.word	0x0008363d
   83860:	0008226d 	.word	0x0008226d

00083864 <mstrtokRestore>:
   83864:	4b03      	ldr	r3, [pc, #12]	; (83874 <mstrtokRestore+0x10>)
   83866:	681b      	ldr	r3, [r3, #0]
   83868:	b113      	cbz	r3, 83870 <mstrtokRestore+0xc>
   8386a:	4a03      	ldr	r2, [pc, #12]	; (83878 <mstrtokRestore+0x14>)
   8386c:	7812      	ldrb	r2, [r2, #0]
   8386e:	701a      	strb	r2, [r3, #0]
   83870:	4770      	bx	lr
   83872:	bf00      	nop
   83874:	20001078 	.word	0x20001078
   83878:	20001074 	.word	0x20001074

0008387c <mstrtokReset>:
   8387c:	2300      	movs	r3, #0
   8387e:	4a02      	ldr	r2, [pc, #8]	; (83888 <mstrtokReset+0xc>)
   83880:	7013      	strb	r3, [r2, #0]
   83882:	4a02      	ldr	r2, [pc, #8]	; (8388c <mstrtokReset+0x10>)
   83884:	6013      	str	r3, [r2, #0]
   83886:	4770      	bx	lr
   83888:	20001074 	.word	0x20001074
   8388c:	20001078 	.word	0x20001078

00083890 <_IsSeparator>:
   83890:	780b      	ldrb	r3, [r1, #0]
   83892:	b13b      	cbz	r3, 838a4 <_IsSeparator+0x14>
   83894:	4298      	cmp	r0, r3
   83896:	d005      	beq.n	838a4 <_IsSeparator+0x14>
   83898:	f811 3f01 	ldrb.w	r3, [r1, #1]!
   8389c:	b113      	cbz	r3, 838a4 <_IsSeparator+0x14>
   8389e:	4283      	cmp	r3, r0
   838a0:	d1fa      	bne.n	83898 <_IsSeparator+0x8>
   838a2:	4603      	mov	r3, r0
   838a4:	4618      	mov	r0, r3
   838a6:	4770      	bx	lr

000838a8 <mstrtok>:
   838a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   838ac:	2800      	cmp	r0, #0
   838ae:	d02b      	beq.n	83908 <mstrtok+0x60>
   838b0:	4a1d      	ldr	r2, [pc, #116]	; (83928 <mstrtok+0x80>)
   838b2:	6010      	str	r0, [r2, #0]
   838b4:	4b1c      	ldr	r3, [pc, #112]	; (83928 <mstrtok+0x80>)
   838b6:	681d      	ldr	r5, [r3, #0]
   838b8:	782c      	ldrb	r4, [r5, #0]
   838ba:	2c00      	cmp	r4, #0
   838bc:	d030      	beq.n	83920 <mstrtok+0x78>
   838be:	4688      	mov	r8, r1
   838c0:	4e1a      	ldr	r6, [pc, #104]	; (8392c <mstrtok+0x84>)
   838c2:	4f19      	ldr	r7, [pc, #100]	; (83928 <mstrtok+0x80>)
   838c4:	4641      	mov	r1, r8
   838c6:	4620      	mov	r0, r4
   838c8:	47b0      	blx	r6
   838ca:	b120      	cbz	r0, 838d6 <mstrtok+0x2e>
   838cc:	3501      	adds	r5, #1
   838ce:	603d      	str	r5, [r7, #0]
   838d0:	782c      	ldrb	r4, [r5, #0]
   838d2:	2c00      	cmp	r4, #0
   838d4:	d1f6      	bne.n	838c4 <mstrtok+0x1c>
   838d6:	4b16      	ldr	r3, [pc, #88]	; (83930 <mstrtok+0x88>)
   838d8:	601d      	str	r5, [r3, #0]
   838da:	782c      	ldrb	r4, [r5, #0]
   838dc:	b1f4      	cbz	r4, 8391c <mstrtok+0x74>
   838de:	462e      	mov	r6, r5
   838e0:	4f12      	ldr	r7, [pc, #72]	; (8392c <mstrtok+0x84>)
   838e2:	f8df 904c 	ldr.w	r9, [pc, #76]	; 83930 <mstrtok+0x88>
   838e6:	4641      	mov	r1, r8
   838e8:	4620      	mov	r0, r4
   838ea:	47b8      	blx	r7
   838ec:	b928      	cbnz	r0, 838fa <mstrtok+0x52>
   838ee:	3601      	adds	r6, #1
   838f0:	f8c9 6000 	str.w	r6, [r9]
   838f4:	7834      	ldrb	r4, [r6, #0]
   838f6:	2c00      	cmp	r4, #0
   838f8:	d1f5      	bne.n	838e6 <mstrtok+0x3e>
   838fa:	4b0e      	ldr	r3, [pc, #56]	; (83934 <mstrtok+0x8c>)
   838fc:	701c      	strb	r4, [r3, #0]
   838fe:	2300      	movs	r3, #0
   83900:	7033      	strb	r3, [r6, #0]
   83902:	4628      	mov	r0, r5
   83904:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83908:	4b09      	ldr	r3, [pc, #36]	; (83930 <mstrtok+0x88>)
   8390a:	681d      	ldr	r5, [r3, #0]
   8390c:	2d00      	cmp	r5, #0
   8390e:	d0f8      	beq.n	83902 <mstrtok+0x5a>
   83910:	4b08      	ldr	r3, [pc, #32]	; (83934 <mstrtok+0x8c>)
   83912:	781b      	ldrb	r3, [r3, #0]
   83914:	702b      	strb	r3, [r5, #0]
   83916:	4b04      	ldr	r3, [pc, #16]	; (83928 <mstrtok+0x80>)
   83918:	601d      	str	r5, [r3, #0]
   8391a:	e7cb      	b.n	838b4 <mstrtok+0xc>
   8391c:	462e      	mov	r6, r5
   8391e:	e7ec      	b.n	838fa <mstrtok+0x52>
   83920:	4b03      	ldr	r3, [pc, #12]	; (83930 <mstrtok+0x88>)
   83922:	601d      	str	r5, [r3, #0]
   83924:	462e      	mov	r6, r5
   83926:	e7e8      	b.n	838fa <mstrtok+0x52>
   83928:	2000107c 	.word	0x2000107c
   8392c:	00083891 	.word	0x00083891
   83930:	20001078 	.word	0x20001078
   83934:	20001074 	.word	0x20001074

00083938 <main>:
#define SABLIER_NEW			100



int main (void)
{
   83938:	b500      	push	{lr}
   8393a:	b083      	sub	sp, #12
   8393c:	b672      	cpsid	i
   8393e:	f3bf 8f5f 	dmb	sy
	//osc_enable(OSC_MAINCK_XTAL);
	/* Insert system clock initialization code here (sysclk_init()). */
	cpu_irq_disable();
   83942:	4e10      	ldr	r6, [pc, #64]	; (83984 <main+0x4c>)
   83944:	2400      	movs	r4, #0
   83946:	7034      	strb	r4, [r6, #0]
	wdt_disable(WDT);
   83948:	480f      	ldr	r0, [pc, #60]	; (83988 <main+0x50>)
   8394a:	4b10      	ldr	r3, [pc, #64]	; (8398c <main+0x54>)
   8394c:	4798      	blx	r3
	sysclk_init();
   8394e:	4b10      	ldr	r3, [pc, #64]	; (83990 <main+0x58>)
   83950:	4798      	blx	r3
	board_init();
   83952:	4b10      	ldr	r3, [pc, #64]	; (83994 <main+0x5c>)
   83954:	4798      	blx	r3
	delay_init(sysclk_get_cpu_hz());

	/* Insert application code here, after the board has been initialized. */
	KernelNew();
   83956:	2064      	movs	r0, #100	; 0x64
   83958:	4d0f      	ldr	r5, [pc, #60]	; (83998 <main+0x60>)
   8395a:	47a8      	blx	r5
   8395c:	2064      	movs	r0, #100	; 0x64
   8395e:	4b0f      	ldr	r3, [pc, #60]	; (8399c <main+0x64>)
   83960:	4798      	blx	r3
	cpu_irq_enable();
   83962:	2301      	movs	r3, #1
   83964:	7033      	strb	r3, [r6, #0]
   83966:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8396a:	b662      	cpsie	i
	PushTask(Appli,APPLI_NEW,0,0);
   8396c:	9400      	str	r4, [sp, #0]
   8396e:	4623      	mov	r3, r4
   83970:	2264      	movs	r2, #100	; 0x64
   83972:	490b      	ldr	r1, [pc, #44]	; (839a0 <main+0x68>)
   83974:	2066      	movs	r0, #102	; 0x66
   83976:	47a8      	blx	r5
	KernelRun();
   83978:	2567      	movs	r5, #103	; 0x67
   8397a:	4c07      	ldr	r4, [pc, #28]	; (83998 <main+0x60>)
   8397c:	4628      	mov	r0, r5
   8397e:	47a0      	blx	r4
   83980:	e7fc      	b.n	8397c <main+0x44>
   83982:	bf00      	nop
   83984:	20000124 	.word	0x20000124
   83988:	400e1250 	.word	0x400e1250
   8398c:	00081009 	.word	0x00081009
   83990:	0008074d 	.word	0x0008074d
   83994:	00080b3d 	.word	0x00080b3d
   83998:	0008363d 	.word	0x0008363d
   8399c:	0008226d 	.word	0x0008226d
   839a0:	00080129 	.word	0x00080129

000839a4 <__aeabi_frsub>:
   839a4:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   839a8:	e002      	b.n	839b0 <__addsf3>
   839aa:	bf00      	nop

000839ac <__aeabi_fsub>:
   839ac:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

000839b0 <__addsf3>:
   839b0:	0042      	lsls	r2, r0, #1
   839b2:	bf1f      	itttt	ne
   839b4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   839b8:	ea92 0f03 	teqne	r2, r3
   839bc:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   839c0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   839c4:	d06a      	beq.n	83a9c <__addsf3+0xec>
   839c6:	ea4f 6212 	mov.w	r2, r2, lsr #24
   839ca:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   839ce:	bfc1      	itttt	gt
   839d0:	18d2      	addgt	r2, r2, r3
   839d2:	4041      	eorgt	r1, r0
   839d4:	4048      	eorgt	r0, r1
   839d6:	4041      	eorgt	r1, r0
   839d8:	bfb8      	it	lt
   839da:	425b      	neglt	r3, r3
   839dc:	2b19      	cmp	r3, #25
   839de:	bf88      	it	hi
   839e0:	4770      	bxhi	lr
   839e2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   839e6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   839ea:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   839ee:	bf18      	it	ne
   839f0:	4240      	negne	r0, r0
   839f2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   839f6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   839fa:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   839fe:	bf18      	it	ne
   83a00:	4249      	negne	r1, r1
   83a02:	ea92 0f03 	teq	r2, r3
   83a06:	d03f      	beq.n	83a88 <__addsf3+0xd8>
   83a08:	f1a2 0201 	sub.w	r2, r2, #1
   83a0c:	fa41 fc03 	asr.w	ip, r1, r3
   83a10:	eb10 000c 	adds.w	r0, r0, ip
   83a14:	f1c3 0320 	rsb	r3, r3, #32
   83a18:	fa01 f103 	lsl.w	r1, r1, r3
   83a1c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   83a20:	d502      	bpl.n	83a28 <__addsf3+0x78>
   83a22:	4249      	negs	r1, r1
   83a24:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   83a28:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   83a2c:	d313      	bcc.n	83a56 <__addsf3+0xa6>
   83a2e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   83a32:	d306      	bcc.n	83a42 <__addsf3+0x92>
   83a34:	0840      	lsrs	r0, r0, #1
   83a36:	ea4f 0131 	mov.w	r1, r1, rrx
   83a3a:	f102 0201 	add.w	r2, r2, #1
   83a3e:	2afe      	cmp	r2, #254	; 0xfe
   83a40:	d251      	bcs.n	83ae6 <__addsf3+0x136>
   83a42:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   83a46:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   83a4a:	bf08      	it	eq
   83a4c:	f020 0001 	biceq.w	r0, r0, #1
   83a50:	ea40 0003 	orr.w	r0, r0, r3
   83a54:	4770      	bx	lr
   83a56:	0049      	lsls	r1, r1, #1
   83a58:	eb40 0000 	adc.w	r0, r0, r0
   83a5c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   83a60:	f1a2 0201 	sub.w	r2, r2, #1
   83a64:	d1ed      	bne.n	83a42 <__addsf3+0x92>
   83a66:	fab0 fc80 	clz	ip, r0
   83a6a:	f1ac 0c08 	sub.w	ip, ip, #8
   83a6e:	ebb2 020c 	subs.w	r2, r2, ip
   83a72:	fa00 f00c 	lsl.w	r0, r0, ip
   83a76:	bfaa      	itet	ge
   83a78:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   83a7c:	4252      	neglt	r2, r2
   83a7e:	4318      	orrge	r0, r3
   83a80:	bfbc      	itt	lt
   83a82:	40d0      	lsrlt	r0, r2
   83a84:	4318      	orrlt	r0, r3
   83a86:	4770      	bx	lr
   83a88:	f092 0f00 	teq	r2, #0
   83a8c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   83a90:	bf06      	itte	eq
   83a92:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   83a96:	3201      	addeq	r2, #1
   83a98:	3b01      	subne	r3, #1
   83a9a:	e7b5      	b.n	83a08 <__addsf3+0x58>
   83a9c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   83aa0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   83aa4:	bf18      	it	ne
   83aa6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   83aaa:	d021      	beq.n	83af0 <__addsf3+0x140>
   83aac:	ea92 0f03 	teq	r2, r3
   83ab0:	d004      	beq.n	83abc <__addsf3+0x10c>
   83ab2:	f092 0f00 	teq	r2, #0
   83ab6:	bf08      	it	eq
   83ab8:	4608      	moveq	r0, r1
   83aba:	4770      	bx	lr
   83abc:	ea90 0f01 	teq	r0, r1
   83ac0:	bf1c      	itt	ne
   83ac2:	2000      	movne	r0, #0
   83ac4:	4770      	bxne	lr
   83ac6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   83aca:	d104      	bne.n	83ad6 <__addsf3+0x126>
   83acc:	0040      	lsls	r0, r0, #1
   83ace:	bf28      	it	cs
   83ad0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   83ad4:	4770      	bx	lr
   83ad6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   83ada:	bf3c      	itt	cc
   83adc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   83ae0:	4770      	bxcc	lr
   83ae2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   83ae6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   83aea:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83aee:	4770      	bx	lr
   83af0:	ea7f 6222 	mvns.w	r2, r2, asr #24
   83af4:	bf16      	itet	ne
   83af6:	4608      	movne	r0, r1
   83af8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   83afc:	4601      	movne	r1, r0
   83afe:	0242      	lsls	r2, r0, #9
   83b00:	bf06      	itte	eq
   83b02:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   83b06:	ea90 0f01 	teqeq	r0, r1
   83b0a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   83b0e:	4770      	bx	lr

00083b10 <__aeabi_ui2f>:
   83b10:	f04f 0300 	mov.w	r3, #0
   83b14:	e004      	b.n	83b20 <__aeabi_i2f+0x8>
   83b16:	bf00      	nop

00083b18 <__aeabi_i2f>:
   83b18:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   83b1c:	bf48      	it	mi
   83b1e:	4240      	negmi	r0, r0
   83b20:	ea5f 0c00 	movs.w	ip, r0
   83b24:	bf08      	it	eq
   83b26:	4770      	bxeq	lr
   83b28:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   83b2c:	4601      	mov	r1, r0
   83b2e:	f04f 0000 	mov.w	r0, #0
   83b32:	e01c      	b.n	83b6e <__aeabi_l2f+0x2a>

00083b34 <__aeabi_ul2f>:
   83b34:	ea50 0201 	orrs.w	r2, r0, r1
   83b38:	bf08      	it	eq
   83b3a:	4770      	bxeq	lr
   83b3c:	f04f 0300 	mov.w	r3, #0
   83b40:	e00a      	b.n	83b58 <__aeabi_l2f+0x14>
   83b42:	bf00      	nop

00083b44 <__aeabi_l2f>:
   83b44:	ea50 0201 	orrs.w	r2, r0, r1
   83b48:	bf08      	it	eq
   83b4a:	4770      	bxeq	lr
   83b4c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   83b50:	d502      	bpl.n	83b58 <__aeabi_l2f+0x14>
   83b52:	4240      	negs	r0, r0
   83b54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   83b58:	ea5f 0c01 	movs.w	ip, r1
   83b5c:	bf02      	ittt	eq
   83b5e:	4684      	moveq	ip, r0
   83b60:	4601      	moveq	r1, r0
   83b62:	2000      	moveq	r0, #0
   83b64:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   83b68:	bf08      	it	eq
   83b6a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   83b6e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   83b72:	fabc f28c 	clz	r2, ip
   83b76:	3a08      	subs	r2, #8
   83b78:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   83b7c:	db10      	blt.n	83ba0 <__aeabi_l2f+0x5c>
   83b7e:	fa01 fc02 	lsl.w	ip, r1, r2
   83b82:	4463      	add	r3, ip
   83b84:	fa00 fc02 	lsl.w	ip, r0, r2
   83b88:	f1c2 0220 	rsb	r2, r2, #32
   83b8c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   83b90:	fa20 f202 	lsr.w	r2, r0, r2
   83b94:	eb43 0002 	adc.w	r0, r3, r2
   83b98:	bf08      	it	eq
   83b9a:	f020 0001 	biceq.w	r0, r0, #1
   83b9e:	4770      	bx	lr
   83ba0:	f102 0220 	add.w	r2, r2, #32
   83ba4:	fa01 fc02 	lsl.w	ip, r1, r2
   83ba8:	f1c2 0220 	rsb	r2, r2, #32
   83bac:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   83bb0:	fa21 f202 	lsr.w	r2, r1, r2
   83bb4:	eb43 0002 	adc.w	r0, r3, r2
   83bb8:	bf08      	it	eq
   83bba:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   83bbe:	4770      	bx	lr

00083bc0 <__aeabi_fmul>:
   83bc0:	f04f 0cff 	mov.w	ip, #255	; 0xff
   83bc4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   83bc8:	bf1e      	ittt	ne
   83bca:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   83bce:	ea92 0f0c 	teqne	r2, ip
   83bd2:	ea93 0f0c 	teqne	r3, ip
   83bd6:	d06f      	beq.n	83cb8 <__aeabi_fmul+0xf8>
   83bd8:	441a      	add	r2, r3
   83bda:	ea80 0c01 	eor.w	ip, r0, r1
   83bde:	0240      	lsls	r0, r0, #9
   83be0:	bf18      	it	ne
   83be2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   83be6:	d01e      	beq.n	83c26 <__aeabi_fmul+0x66>
   83be8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   83bec:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   83bf0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   83bf4:	fba0 3101 	umull	r3, r1, r0, r1
   83bf8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   83bfc:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   83c00:	bf3e      	ittt	cc
   83c02:	0049      	lslcc	r1, r1, #1
   83c04:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   83c08:	005b      	lslcc	r3, r3, #1
   83c0a:	ea40 0001 	orr.w	r0, r0, r1
   83c0e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   83c12:	2afd      	cmp	r2, #253	; 0xfd
   83c14:	d81d      	bhi.n	83c52 <__aeabi_fmul+0x92>
   83c16:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   83c1a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   83c1e:	bf08      	it	eq
   83c20:	f020 0001 	biceq.w	r0, r0, #1
   83c24:	4770      	bx	lr
   83c26:	f090 0f00 	teq	r0, #0
   83c2a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   83c2e:	bf08      	it	eq
   83c30:	0249      	lsleq	r1, r1, #9
   83c32:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   83c36:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   83c3a:	3a7f      	subs	r2, #127	; 0x7f
   83c3c:	bfc2      	ittt	gt
   83c3e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   83c42:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   83c46:	4770      	bxgt	lr
   83c48:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83c4c:	f04f 0300 	mov.w	r3, #0
   83c50:	3a01      	subs	r2, #1
   83c52:	dc5d      	bgt.n	83d10 <__aeabi_fmul+0x150>
   83c54:	f112 0f19 	cmn.w	r2, #25
   83c58:	bfdc      	itt	le
   83c5a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   83c5e:	4770      	bxle	lr
   83c60:	f1c2 0200 	rsb	r2, r2, #0
   83c64:	0041      	lsls	r1, r0, #1
   83c66:	fa21 f102 	lsr.w	r1, r1, r2
   83c6a:	f1c2 0220 	rsb	r2, r2, #32
   83c6e:	fa00 fc02 	lsl.w	ip, r0, r2
   83c72:	ea5f 0031 	movs.w	r0, r1, rrx
   83c76:	f140 0000 	adc.w	r0, r0, #0
   83c7a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   83c7e:	bf08      	it	eq
   83c80:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   83c84:	4770      	bx	lr
   83c86:	f092 0f00 	teq	r2, #0
   83c8a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   83c8e:	bf02      	ittt	eq
   83c90:	0040      	lsleq	r0, r0, #1
   83c92:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   83c96:	3a01      	subeq	r2, #1
   83c98:	d0f9      	beq.n	83c8e <__aeabi_fmul+0xce>
   83c9a:	ea40 000c 	orr.w	r0, r0, ip
   83c9e:	f093 0f00 	teq	r3, #0
   83ca2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   83ca6:	bf02      	ittt	eq
   83ca8:	0049      	lsleq	r1, r1, #1
   83caa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   83cae:	3b01      	subeq	r3, #1
   83cb0:	d0f9      	beq.n	83ca6 <__aeabi_fmul+0xe6>
   83cb2:	ea41 010c 	orr.w	r1, r1, ip
   83cb6:	e78f      	b.n	83bd8 <__aeabi_fmul+0x18>
   83cb8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   83cbc:	ea92 0f0c 	teq	r2, ip
   83cc0:	bf18      	it	ne
   83cc2:	ea93 0f0c 	teqne	r3, ip
   83cc6:	d00a      	beq.n	83cde <__aeabi_fmul+0x11e>
   83cc8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   83ccc:	bf18      	it	ne
   83cce:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   83cd2:	d1d8      	bne.n	83c86 <__aeabi_fmul+0xc6>
   83cd4:	ea80 0001 	eor.w	r0, r0, r1
   83cd8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   83cdc:	4770      	bx	lr
   83cde:	f090 0f00 	teq	r0, #0
   83ce2:	bf17      	itett	ne
   83ce4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   83ce8:	4608      	moveq	r0, r1
   83cea:	f091 0f00 	teqne	r1, #0
   83cee:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   83cf2:	d014      	beq.n	83d1e <__aeabi_fmul+0x15e>
   83cf4:	ea92 0f0c 	teq	r2, ip
   83cf8:	d101      	bne.n	83cfe <__aeabi_fmul+0x13e>
   83cfa:	0242      	lsls	r2, r0, #9
   83cfc:	d10f      	bne.n	83d1e <__aeabi_fmul+0x15e>
   83cfe:	ea93 0f0c 	teq	r3, ip
   83d02:	d103      	bne.n	83d0c <__aeabi_fmul+0x14c>
   83d04:	024b      	lsls	r3, r1, #9
   83d06:	bf18      	it	ne
   83d08:	4608      	movne	r0, r1
   83d0a:	d108      	bne.n	83d1e <__aeabi_fmul+0x15e>
   83d0c:	ea80 0001 	eor.w	r0, r0, r1
   83d10:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   83d14:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   83d18:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83d1c:	4770      	bx	lr
   83d1e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   83d22:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   83d26:	4770      	bx	lr

00083d28 <__aeabi_fdiv>:
   83d28:	f04f 0cff 	mov.w	ip, #255	; 0xff
   83d2c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   83d30:	bf1e      	ittt	ne
   83d32:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   83d36:	ea92 0f0c 	teqne	r2, ip
   83d3a:	ea93 0f0c 	teqne	r3, ip
   83d3e:	d069      	beq.n	83e14 <__aeabi_fdiv+0xec>
   83d40:	eba2 0203 	sub.w	r2, r2, r3
   83d44:	ea80 0c01 	eor.w	ip, r0, r1
   83d48:	0249      	lsls	r1, r1, #9
   83d4a:	ea4f 2040 	mov.w	r0, r0, lsl #9
   83d4e:	d037      	beq.n	83dc0 <__aeabi_fdiv+0x98>
   83d50:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   83d54:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   83d58:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   83d5c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   83d60:	428b      	cmp	r3, r1
   83d62:	bf38      	it	cc
   83d64:	005b      	lslcc	r3, r3, #1
   83d66:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   83d6a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   83d6e:	428b      	cmp	r3, r1
   83d70:	bf24      	itt	cs
   83d72:	1a5b      	subcs	r3, r3, r1
   83d74:	ea40 000c 	orrcs.w	r0, r0, ip
   83d78:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   83d7c:	bf24      	itt	cs
   83d7e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   83d82:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   83d86:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   83d8a:	bf24      	itt	cs
   83d8c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   83d90:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   83d94:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   83d98:	bf24      	itt	cs
   83d9a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   83d9e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   83da2:	011b      	lsls	r3, r3, #4
   83da4:	bf18      	it	ne
   83da6:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   83daa:	d1e0      	bne.n	83d6e <__aeabi_fdiv+0x46>
   83dac:	2afd      	cmp	r2, #253	; 0xfd
   83dae:	f63f af50 	bhi.w	83c52 <__aeabi_fmul+0x92>
   83db2:	428b      	cmp	r3, r1
   83db4:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   83db8:	bf08      	it	eq
   83dba:	f020 0001 	biceq.w	r0, r0, #1
   83dbe:	4770      	bx	lr
   83dc0:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   83dc4:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   83dc8:	327f      	adds	r2, #127	; 0x7f
   83dca:	bfc2      	ittt	gt
   83dcc:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   83dd0:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   83dd4:	4770      	bxgt	lr
   83dd6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   83dda:	f04f 0300 	mov.w	r3, #0
   83dde:	3a01      	subs	r2, #1
   83de0:	e737      	b.n	83c52 <__aeabi_fmul+0x92>
   83de2:	f092 0f00 	teq	r2, #0
   83de6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   83dea:	bf02      	ittt	eq
   83dec:	0040      	lsleq	r0, r0, #1
   83dee:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   83df2:	3a01      	subeq	r2, #1
   83df4:	d0f9      	beq.n	83dea <__aeabi_fdiv+0xc2>
   83df6:	ea40 000c 	orr.w	r0, r0, ip
   83dfa:	f093 0f00 	teq	r3, #0
   83dfe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   83e02:	bf02      	ittt	eq
   83e04:	0049      	lsleq	r1, r1, #1
   83e06:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   83e0a:	3b01      	subeq	r3, #1
   83e0c:	d0f9      	beq.n	83e02 <__aeabi_fdiv+0xda>
   83e0e:	ea41 010c 	orr.w	r1, r1, ip
   83e12:	e795      	b.n	83d40 <__aeabi_fdiv+0x18>
   83e14:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   83e18:	ea92 0f0c 	teq	r2, ip
   83e1c:	d108      	bne.n	83e30 <__aeabi_fdiv+0x108>
   83e1e:	0242      	lsls	r2, r0, #9
   83e20:	f47f af7d 	bne.w	83d1e <__aeabi_fmul+0x15e>
   83e24:	ea93 0f0c 	teq	r3, ip
   83e28:	f47f af70 	bne.w	83d0c <__aeabi_fmul+0x14c>
   83e2c:	4608      	mov	r0, r1
   83e2e:	e776      	b.n	83d1e <__aeabi_fmul+0x15e>
   83e30:	ea93 0f0c 	teq	r3, ip
   83e34:	d104      	bne.n	83e40 <__aeabi_fdiv+0x118>
   83e36:	024b      	lsls	r3, r1, #9
   83e38:	f43f af4c 	beq.w	83cd4 <__aeabi_fmul+0x114>
   83e3c:	4608      	mov	r0, r1
   83e3e:	e76e      	b.n	83d1e <__aeabi_fmul+0x15e>
   83e40:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   83e44:	bf18      	it	ne
   83e46:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   83e4a:	d1ca      	bne.n	83de2 <__aeabi_fdiv+0xba>
   83e4c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   83e50:	f47f af5c 	bne.w	83d0c <__aeabi_fmul+0x14c>
   83e54:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   83e58:	f47f af3c 	bne.w	83cd4 <__aeabi_fmul+0x114>
   83e5c:	e75f      	b.n	83d1e <__aeabi_fmul+0x15e>
   83e5e:	bf00      	nop

00083e60 <__aeabi_f2uiz>:
   83e60:	0042      	lsls	r2, r0, #1
   83e62:	d20e      	bcs.n	83e82 <__aeabi_f2uiz+0x22>
   83e64:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   83e68:	d30b      	bcc.n	83e82 <__aeabi_f2uiz+0x22>
   83e6a:	f04f 039e 	mov.w	r3, #158	; 0x9e
   83e6e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   83e72:	d409      	bmi.n	83e88 <__aeabi_f2uiz+0x28>
   83e74:	ea4f 2300 	mov.w	r3, r0, lsl #8
   83e78:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   83e7c:	fa23 f002 	lsr.w	r0, r3, r2
   83e80:	4770      	bx	lr
   83e82:	f04f 0000 	mov.w	r0, #0
   83e86:	4770      	bx	lr
   83e88:	f112 0f61 	cmn.w	r2, #97	; 0x61
   83e8c:	d101      	bne.n	83e92 <__aeabi_f2uiz+0x32>
   83e8e:	0242      	lsls	r2, r0, #9
   83e90:	d102      	bne.n	83e98 <__aeabi_f2uiz+0x38>
   83e92:	f04f 30ff 	mov.w	r0, #4294967295
   83e96:	4770      	bx	lr
   83e98:	f04f 0000 	mov.w	r0, #0
   83e9c:	4770      	bx	lr
   83e9e:	bf00      	nop

00083ea0 <atoi>:
   83ea0:	220a      	movs	r2, #10
   83ea2:	2100      	movs	r1, #0
   83ea4:	f000 b9f6 	b.w	84294 <strtol>

00083ea8 <__libc_init_array>:
   83ea8:	b570      	push	{r4, r5, r6, lr}
   83eaa:	4e0f      	ldr	r6, [pc, #60]	; (83ee8 <__libc_init_array+0x40>)
   83eac:	4d0f      	ldr	r5, [pc, #60]	; (83eec <__libc_init_array+0x44>)
   83eae:	1b76      	subs	r6, r6, r5
   83eb0:	10b6      	asrs	r6, r6, #2
   83eb2:	bf18      	it	ne
   83eb4:	2400      	movne	r4, #0
   83eb6:	d005      	beq.n	83ec4 <__libc_init_array+0x1c>
   83eb8:	3401      	adds	r4, #1
   83eba:	f855 3b04 	ldr.w	r3, [r5], #4
   83ebe:	4798      	blx	r3
   83ec0:	42a6      	cmp	r6, r4
   83ec2:	d1f9      	bne.n	83eb8 <__libc_init_array+0x10>
   83ec4:	4e0a      	ldr	r6, [pc, #40]	; (83ef0 <__libc_init_array+0x48>)
   83ec6:	4d0b      	ldr	r5, [pc, #44]	; (83ef4 <__libc_init_array+0x4c>)
   83ec8:	f005 fe1a 	bl	89b00 <_init>
   83ecc:	1b76      	subs	r6, r6, r5
   83ece:	10b6      	asrs	r6, r6, #2
   83ed0:	bf18      	it	ne
   83ed2:	2400      	movne	r4, #0
   83ed4:	d006      	beq.n	83ee4 <__libc_init_array+0x3c>
   83ed6:	3401      	adds	r4, #1
   83ed8:	f855 3b04 	ldr.w	r3, [r5], #4
   83edc:	4798      	blx	r3
   83ede:	42a6      	cmp	r6, r4
   83ee0:	d1f9      	bne.n	83ed6 <__libc_init_array+0x2e>
   83ee2:	bd70      	pop	{r4, r5, r6, pc}
   83ee4:	bd70      	pop	{r4, r5, r6, pc}
   83ee6:	bf00      	nop
   83ee8:	00089b0c 	.word	0x00089b0c
   83eec:	00089b0c 	.word	0x00089b0c
   83ef0:	00089b14 	.word	0x00089b14
   83ef4:	00089b0c 	.word	0x00089b0c

00083ef8 <memset>:
   83ef8:	b470      	push	{r4, r5, r6}
   83efa:	0786      	lsls	r6, r0, #30
   83efc:	d046      	beq.n	83f8c <memset+0x94>
   83efe:	1e54      	subs	r4, r2, #1
   83f00:	2a00      	cmp	r2, #0
   83f02:	d041      	beq.n	83f88 <memset+0x90>
   83f04:	b2ca      	uxtb	r2, r1
   83f06:	4603      	mov	r3, r0
   83f08:	e002      	b.n	83f10 <memset+0x18>
   83f0a:	f114 34ff 	adds.w	r4, r4, #4294967295
   83f0e:	d33b      	bcc.n	83f88 <memset+0x90>
   83f10:	f803 2b01 	strb.w	r2, [r3], #1
   83f14:	079d      	lsls	r5, r3, #30
   83f16:	d1f8      	bne.n	83f0a <memset+0x12>
   83f18:	2c03      	cmp	r4, #3
   83f1a:	d92e      	bls.n	83f7a <memset+0x82>
   83f1c:	b2cd      	uxtb	r5, r1
   83f1e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   83f22:	2c0f      	cmp	r4, #15
   83f24:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   83f28:	d919      	bls.n	83f5e <memset+0x66>
   83f2a:	4626      	mov	r6, r4
   83f2c:	f103 0210 	add.w	r2, r3, #16
   83f30:	3e10      	subs	r6, #16
   83f32:	2e0f      	cmp	r6, #15
   83f34:	f842 5c10 	str.w	r5, [r2, #-16]
   83f38:	f842 5c0c 	str.w	r5, [r2, #-12]
   83f3c:	f842 5c08 	str.w	r5, [r2, #-8]
   83f40:	f842 5c04 	str.w	r5, [r2, #-4]
   83f44:	f102 0210 	add.w	r2, r2, #16
   83f48:	d8f2      	bhi.n	83f30 <memset+0x38>
   83f4a:	f1a4 0210 	sub.w	r2, r4, #16
   83f4e:	f022 020f 	bic.w	r2, r2, #15
   83f52:	f004 040f 	and.w	r4, r4, #15
   83f56:	3210      	adds	r2, #16
   83f58:	2c03      	cmp	r4, #3
   83f5a:	4413      	add	r3, r2
   83f5c:	d90d      	bls.n	83f7a <memset+0x82>
   83f5e:	461e      	mov	r6, r3
   83f60:	4622      	mov	r2, r4
   83f62:	3a04      	subs	r2, #4
   83f64:	2a03      	cmp	r2, #3
   83f66:	f846 5b04 	str.w	r5, [r6], #4
   83f6a:	d8fa      	bhi.n	83f62 <memset+0x6a>
   83f6c:	1f22      	subs	r2, r4, #4
   83f6e:	f022 0203 	bic.w	r2, r2, #3
   83f72:	3204      	adds	r2, #4
   83f74:	4413      	add	r3, r2
   83f76:	f004 0403 	and.w	r4, r4, #3
   83f7a:	b12c      	cbz	r4, 83f88 <memset+0x90>
   83f7c:	b2c9      	uxtb	r1, r1
   83f7e:	441c      	add	r4, r3
   83f80:	f803 1b01 	strb.w	r1, [r3], #1
   83f84:	429c      	cmp	r4, r3
   83f86:	d1fb      	bne.n	83f80 <memset+0x88>
   83f88:	bc70      	pop	{r4, r5, r6}
   83f8a:	4770      	bx	lr
   83f8c:	4614      	mov	r4, r2
   83f8e:	4603      	mov	r3, r0
   83f90:	e7c2      	b.n	83f18 <memset+0x20>
   83f92:	bf00      	nop

00083f94 <sprintf>:
   83f94:	b40e      	push	{r1, r2, r3}
   83f96:	4601      	mov	r1, r0
   83f98:	b5f0      	push	{r4, r5, r6, r7, lr}
   83f9a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83f9e:	f44f 7702 	mov.w	r7, #520	; 0x208
   83fa2:	f64f 76ff 	movw	r6, #65535	; 0xffff
   83fa6:	b09c      	sub	sp, #112	; 0x70
   83fa8:	ac21      	add	r4, sp, #132	; 0x84
   83faa:	f854 2b04 	ldr.w	r2, [r4], #4
   83fae:	4b0b      	ldr	r3, [pc, #44]	; (83fdc <sprintf+0x48>)
   83fb0:	9102      	str	r1, [sp, #8]
   83fb2:	9106      	str	r1, [sp, #24]
   83fb4:	6818      	ldr	r0, [r3, #0]
   83fb6:	a902      	add	r1, sp, #8
   83fb8:	4623      	mov	r3, r4
   83fba:	9401      	str	r4, [sp, #4]
   83fbc:	f8ad 7014 	strh.w	r7, [sp, #20]
   83fc0:	9504      	str	r5, [sp, #16]
   83fc2:	9507      	str	r5, [sp, #28]
   83fc4:	f8ad 6016 	strh.w	r6, [sp, #22]
   83fc8:	f000 f97a 	bl	842c0 <_svfprintf_r>
   83fcc:	2200      	movs	r2, #0
   83fce:	9b02      	ldr	r3, [sp, #8]
   83fd0:	701a      	strb	r2, [r3, #0]
   83fd2:	b01c      	add	sp, #112	; 0x70
   83fd4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83fd8:	b003      	add	sp, #12
   83fda:	4770      	bx	lr
   83fdc:	2000062c 	.word	0x2000062c

00083fe0 <strcpy>:
   83fe0:	ea80 0201 	eor.w	r2, r0, r1
   83fe4:	4684      	mov	ip, r0
   83fe6:	f012 0f03 	tst.w	r2, #3
   83fea:	d14f      	bne.n	8408c <strcpy+0xac>
   83fec:	f011 0f03 	tst.w	r1, #3
   83ff0:	d132      	bne.n	84058 <strcpy+0x78>
   83ff2:	f84d 4d04 	str.w	r4, [sp, #-4]!
   83ff6:	f011 0f04 	tst.w	r1, #4
   83ffa:	f851 3b04 	ldr.w	r3, [r1], #4
   83ffe:	d00b      	beq.n	84018 <strcpy+0x38>
   84000:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   84004:	439a      	bics	r2, r3
   84006:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   8400a:	bf04      	itt	eq
   8400c:	f84c 3b04 	streq.w	r3, [ip], #4
   84010:	f851 3b04 	ldreq.w	r3, [r1], #4
   84014:	d116      	bne.n	84044 <strcpy+0x64>
   84016:	bf00      	nop
   84018:	f851 4b04 	ldr.w	r4, [r1], #4
   8401c:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   84020:	439a      	bics	r2, r3
   84022:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   84026:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
   8402a:	d10b      	bne.n	84044 <strcpy+0x64>
   8402c:	f84c 3b04 	str.w	r3, [ip], #4
   84030:	43a2      	bics	r2, r4
   84032:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   84036:	bf04      	itt	eq
   84038:	f851 3b04 	ldreq.w	r3, [r1], #4
   8403c:	f84c 4b04 	streq.w	r4, [ip], #4
   84040:	d0ea      	beq.n	84018 <strcpy+0x38>
   84042:	4623      	mov	r3, r4
   84044:	f80c 3b01 	strb.w	r3, [ip], #1
   84048:	f013 0fff 	tst.w	r3, #255	; 0xff
   8404c:	ea4f 2333 	mov.w	r3, r3, ror #8
   84050:	d1f8      	bne.n	84044 <strcpy+0x64>
   84052:	f85d 4b04 	ldr.w	r4, [sp], #4
   84056:	4770      	bx	lr
   84058:	f011 0f01 	tst.w	r1, #1
   8405c:	d006      	beq.n	8406c <strcpy+0x8c>
   8405e:	f811 2b01 	ldrb.w	r2, [r1], #1
   84062:	f80c 2b01 	strb.w	r2, [ip], #1
   84066:	2a00      	cmp	r2, #0
   84068:	bf08      	it	eq
   8406a:	4770      	bxeq	lr
   8406c:	f011 0f02 	tst.w	r1, #2
   84070:	d0bf      	beq.n	83ff2 <strcpy+0x12>
   84072:	f831 2b02 	ldrh.w	r2, [r1], #2
   84076:	f012 0fff 	tst.w	r2, #255	; 0xff
   8407a:	bf16      	itet	ne
   8407c:	f82c 2b02 	strhne.w	r2, [ip], #2
   84080:	f88c 2000 	strbeq.w	r2, [ip]
   84084:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
   84088:	d1b3      	bne.n	83ff2 <strcpy+0x12>
   8408a:	4770      	bx	lr
   8408c:	f811 2b01 	ldrb.w	r2, [r1], #1
   84090:	f80c 2b01 	strb.w	r2, [ip], #1
   84094:	2a00      	cmp	r2, #0
   84096:	d1f9      	bne.n	8408c <strcpy+0xac>
   84098:	4770      	bx	lr
   8409a:	bf00      	nop

0008409c <strlen>:
   8409c:	f020 0103 	bic.w	r1, r0, #3
   840a0:	f010 0003 	ands.w	r0, r0, #3
   840a4:	f1c0 0000 	rsb	r0, r0, #0
   840a8:	f851 3b04 	ldr.w	r3, [r1], #4
   840ac:	f100 0c04 	add.w	ip, r0, #4
   840b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   840b4:	f06f 0200 	mvn.w	r2, #0
   840b8:	bf1c      	itt	ne
   840ba:	fa22 f20c 	lsrne.w	r2, r2, ip
   840be:	4313      	orrne	r3, r2
   840c0:	f04f 0c01 	mov.w	ip, #1
   840c4:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   840c8:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   840cc:	eba3 020c 	sub.w	r2, r3, ip
   840d0:	ea22 0203 	bic.w	r2, r2, r3
   840d4:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   840d8:	bf04      	itt	eq
   840da:	f851 3b04 	ldreq.w	r3, [r1], #4
   840de:	3004      	addeq	r0, #4
   840e0:	d0f4      	beq.n	840cc <strlen+0x30>
   840e2:	f1c2 0100 	rsb	r1, r2, #0
   840e6:	ea02 0201 	and.w	r2, r2, r1
   840ea:	fab2 f282 	clz	r2, r2
   840ee:	f1c2 021f 	rsb	r2, r2, #31
   840f2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   840f6:	4770      	bx	lr

000840f8 <strtok>:
   840f8:	4a02      	ldr	r2, [pc, #8]	; (84104 <strtok+0xc>)
   840fa:	2301      	movs	r3, #1
   840fc:	6812      	ldr	r2, [r2, #0]
   840fe:	325c      	adds	r2, #92	; 0x5c
   84100:	f000 b802 	b.w	84108 <__strtok_r>
   84104:	2000062c 	.word	0x2000062c

00084108 <__strtok_r>:
   84108:	b4f0      	push	{r4, r5, r6, r7}
   8410a:	b318      	cbz	r0, 84154 <__strtok_r+0x4c>
   8410c:	4607      	mov	r7, r0
   8410e:	460d      	mov	r5, r1
   84110:	f817 6b01 	ldrb.w	r6, [r7], #1
   84114:	e001      	b.n	8411a <__strtok_r+0x12>
   84116:	42a6      	cmp	r6, r4
   84118:	d017      	beq.n	8414a <__strtok_r+0x42>
   8411a:	f815 4b01 	ldrb.w	r4, [r5], #1
   8411e:	2c00      	cmp	r4, #0
   84120:	d1f9      	bne.n	84116 <__strtok_r+0xe>
   84122:	b1e6      	cbz	r6, 8415e <__strtok_r+0x56>
   84124:	460c      	mov	r4, r1
   84126:	f817 5b01 	ldrb.w	r5, [r7], #1
   8412a:	e001      	b.n	84130 <__strtok_r+0x28>
   8412c:	2b00      	cmp	r3, #0
   8412e:	d0f9      	beq.n	84124 <__strtok_r+0x1c>
   84130:	f814 3b01 	ldrb.w	r3, [r4], #1
   84134:	429d      	cmp	r5, r3
   84136:	d1f9      	bne.n	8412c <__strtok_r+0x24>
   84138:	b155      	cbz	r5, 84150 <__strtok_r+0x48>
   8413a:	2300      	movs	r3, #0
   8413c:	f807 3c01 	strb.w	r3, [r7, #-1]
   84140:	4606      	mov	r6, r0
   84142:	6017      	str	r7, [r2, #0]
   84144:	4630      	mov	r0, r6
   84146:	bcf0      	pop	{r4, r5, r6, r7}
   84148:	4770      	bx	lr
   8414a:	b153      	cbz	r3, 84162 <__strtok_r+0x5a>
   8414c:	4638      	mov	r0, r7
   8414e:	e7dd      	b.n	8410c <__strtok_r+0x4>
   84150:	462f      	mov	r7, r5
   84152:	e7f5      	b.n	84140 <__strtok_r+0x38>
   84154:	6810      	ldr	r0, [r2, #0]
   84156:	2800      	cmp	r0, #0
   84158:	d1d8      	bne.n	8410c <__strtok_r+0x4>
   8415a:	4606      	mov	r6, r0
   8415c:	e7f2      	b.n	84144 <__strtok_r+0x3c>
   8415e:	6016      	str	r6, [r2, #0]
   84160:	e7f0      	b.n	84144 <__strtok_r+0x3c>
   84162:	6017      	str	r7, [r2, #0]
   84164:	4606      	mov	r6, r0
   84166:	7003      	strb	r3, [r0, #0]
   84168:	e7ec      	b.n	84144 <__strtok_r+0x3c>
   8416a:	bf00      	nop

0008416c <_strtol_l.isra.0>:
   8416c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84170:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84174:	460f      	mov	r7, r1
   84176:	4680      	mov	r8, r0
   84178:	4616      	mov	r6, r2
   8417a:	461d      	mov	r5, r3
   8417c:	468a      	mov	sl, r1
   8417e:	e000      	b.n	84182 <_strtol_l.isra.0+0x16>
   84180:	46a2      	mov	sl, r4
   84182:	4654      	mov	r4, sl
   84184:	4648      	mov	r0, r9
   84186:	f814 bb01 	ldrb.w	fp, [r4], #1
   8418a:	f002 faf9 	bl	86780 <__locale_ctype_ptr_l>
   8418e:	4458      	add	r0, fp
   84190:	7842      	ldrb	r2, [r0, #1]
   84192:	f012 0208 	ands.w	r2, r2, #8
   84196:	d1f3      	bne.n	84180 <_strtol_l.isra.0+0x14>
   84198:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
   8419c:	d04f      	beq.n	8423e <_strtol_l.isra.0+0xd2>
   8419e:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
   841a2:	bf04      	itt	eq
   841a4:	f894 b000 	ldrbeq.w	fp, [r4]
   841a8:	f10a 0402 	addeq.w	r4, sl, #2
   841ac:	b11d      	cbz	r5, 841b6 <_strtol_l.isra.0+0x4a>
   841ae:	2d10      	cmp	r5, #16
   841b0:	d056      	beq.n	84260 <_strtol_l.isra.0+0xf4>
   841b2:	46ac      	mov	ip, r5
   841b4:	e004      	b.n	841c0 <_strtol_l.isra.0+0x54>
   841b6:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   841ba:	d060      	beq.n	8427e <_strtol_l.isra.0+0x112>
   841bc:	250a      	movs	r5, #10
   841be:	46ac      	mov	ip, r5
   841c0:	2a00      	cmp	r2, #0
   841c2:	bf0c      	ite	eq
   841c4:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
   841c8:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
   841cc:	2100      	movs	r1, #0
   841ce:	fbb9 fefc 	udiv	lr, r9, ip
   841d2:	4608      	mov	r0, r1
   841d4:	fb0c 9a1e 	mls	sl, ip, lr, r9
   841d8:	e005      	b.n	841e6 <_strtol_l.isra.0+0x7a>
   841da:	d029      	beq.n	84230 <_strtol_l.isra.0+0xc4>
   841dc:	2101      	movs	r1, #1
   841de:	fb0c 3000 	mla	r0, ip, r0, r3
   841e2:	f814 bb01 	ldrb.w	fp, [r4], #1
   841e6:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
   841ea:	2b09      	cmp	r3, #9
   841ec:	d905      	bls.n	841fa <_strtol_l.isra.0+0x8e>
   841ee:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
   841f2:	2b19      	cmp	r3, #25
   841f4:	d80b      	bhi.n	8420e <_strtol_l.isra.0+0xa2>
   841f6:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
   841fa:	429d      	cmp	r5, r3
   841fc:	dd0f      	ble.n	8421e <_strtol_l.isra.0+0xb2>
   841fe:	f1b1 3fff 	cmp.w	r1, #4294967295
   84202:	d0ee      	beq.n	841e2 <_strtol_l.isra.0+0x76>
   84204:	4586      	cmp	lr, r0
   84206:	d2e8      	bcs.n	841da <_strtol_l.isra.0+0x6e>
   84208:	f04f 31ff 	mov.w	r1, #4294967295
   8420c:	e7e9      	b.n	841e2 <_strtol_l.isra.0+0x76>
   8420e:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
   84212:	2b19      	cmp	r3, #25
   84214:	d803      	bhi.n	8421e <_strtol_l.isra.0+0xb2>
   84216:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
   8421a:	429d      	cmp	r5, r3
   8421c:	dcef      	bgt.n	841fe <_strtol_l.isra.0+0x92>
   8421e:	1c4b      	adds	r3, r1, #1
   84220:	d013      	beq.n	8424a <_strtol_l.isra.0+0xde>
   84222:	b102      	cbz	r2, 84226 <_strtol_l.isra.0+0xba>
   84224:	4240      	negs	r0, r0
   84226:	b146      	cbz	r6, 8423a <_strtol_l.isra.0+0xce>
   84228:	b9c1      	cbnz	r1, 8425c <_strtol_l.isra.0+0xf0>
   8422a:	6037      	str	r7, [r6, #0]
   8422c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84230:	459a      	cmp	sl, r3
   84232:	dad3      	bge.n	841dc <_strtol_l.isra.0+0x70>
   84234:	f04f 31ff 	mov.w	r1, #4294967295
   84238:	e7d3      	b.n	841e2 <_strtol_l.isra.0+0x76>
   8423a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8423e:	f894 b000 	ldrb.w	fp, [r4]
   84242:	2201      	movs	r2, #1
   84244:	f10a 0402 	add.w	r4, sl, #2
   84248:	e7b0      	b.n	841ac <_strtol_l.isra.0+0x40>
   8424a:	2322      	movs	r3, #34	; 0x22
   8424c:	f8c8 3000 	str.w	r3, [r8]
   84250:	b1ee      	cbz	r6, 8428e <_strtol_l.isra.0+0x122>
   84252:	1e67      	subs	r7, r4, #1
   84254:	4648      	mov	r0, r9
   84256:	6037      	str	r7, [r6, #0]
   84258:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8425c:	4681      	mov	r9, r0
   8425e:	e7f8      	b.n	84252 <_strtol_l.isra.0+0xe6>
   84260:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
   84264:	d1a5      	bne.n	841b2 <_strtol_l.isra.0+0x46>
   84266:	7823      	ldrb	r3, [r4, #0]
   84268:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   8426c:	2b58      	cmp	r3, #88	; 0x58
   8426e:	d1a0      	bne.n	841b2 <_strtol_l.isra.0+0x46>
   84270:	f04f 0c10 	mov.w	ip, #16
   84274:	f894 b001 	ldrb.w	fp, [r4, #1]
   84278:	4665      	mov	r5, ip
   8427a:	3402      	adds	r4, #2
   8427c:	e7a0      	b.n	841c0 <_strtol_l.isra.0+0x54>
   8427e:	7823      	ldrb	r3, [r4, #0]
   84280:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   84284:	2b58      	cmp	r3, #88	; 0x58
   84286:	d0f3      	beq.n	84270 <_strtol_l.isra.0+0x104>
   84288:	2508      	movs	r5, #8
   8428a:	46ac      	mov	ip, r5
   8428c:	e798      	b.n	841c0 <_strtol_l.isra.0+0x54>
   8428e:	4648      	mov	r0, r9
   84290:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084294 <strtol>:
   84294:	4b08      	ldr	r3, [pc, #32]	; (842b8 <strtol+0x24>)
   84296:	b570      	push	{r4, r5, r6, lr}
   84298:	681d      	ldr	r5, [r3, #0]
   8429a:	4e08      	ldr	r6, [pc, #32]	; (842bc <strtol+0x28>)
   8429c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
   8429e:	b082      	sub	sp, #8
   842a0:	2c00      	cmp	r4, #0
   842a2:	bf08      	it	eq
   842a4:	4634      	moveq	r4, r6
   842a6:	4613      	mov	r3, r2
   842a8:	9400      	str	r4, [sp, #0]
   842aa:	460a      	mov	r2, r1
   842ac:	4601      	mov	r1, r0
   842ae:	4628      	mov	r0, r5
   842b0:	f7ff ff5c 	bl	8416c <_strtol_l.isra.0>
   842b4:	b002      	add	sp, #8
   842b6:	bd70      	pop	{r4, r5, r6, pc}
   842b8:	2000062c 	.word	0x2000062c
   842bc:	20000a5c 	.word	0x20000a5c

000842c0 <_svfprintf_r>:
   842c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   842c4:	b0c3      	sub	sp, #268	; 0x10c
   842c6:	460c      	mov	r4, r1
   842c8:	910b      	str	r1, [sp, #44]	; 0x2c
   842ca:	4692      	mov	sl, r2
   842cc:	930f      	str	r3, [sp, #60]	; 0x3c
   842ce:	900c      	str	r0, [sp, #48]	; 0x30
   842d0:	f002 fa5a 	bl	86788 <_localeconv_r>
   842d4:	6803      	ldr	r3, [r0, #0]
   842d6:	4618      	mov	r0, r3
   842d8:	931a      	str	r3, [sp, #104]	; 0x68
   842da:	f7ff fedf 	bl	8409c <strlen>
   842de:	89a3      	ldrh	r3, [r4, #12]
   842e0:	9019      	str	r0, [sp, #100]	; 0x64
   842e2:	0619      	lsls	r1, r3, #24
   842e4:	d503      	bpl.n	842ee <_svfprintf_r+0x2e>
   842e6:	6923      	ldr	r3, [r4, #16]
   842e8:	2b00      	cmp	r3, #0
   842ea:	f001 8035 	beq.w	85358 <_svfprintf_r+0x1098>
   842ee:	2300      	movs	r3, #0
   842f0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   842f4:	46c8      	mov	r8, r9
   842f6:	9315      	str	r3, [sp, #84]	; 0x54
   842f8:	9313      	str	r3, [sp, #76]	; 0x4c
   842fa:	9314      	str	r3, [sp, #80]	; 0x50
   842fc:	9318      	str	r3, [sp, #96]	; 0x60
   842fe:	931b      	str	r3, [sp, #108]	; 0x6c
   84300:	9309      	str	r3, [sp, #36]	; 0x24
   84302:	9316      	str	r3, [sp, #88]	; 0x58
   84304:	9317      	str	r3, [sp, #92]	; 0x5c
   84306:	9327      	str	r3, [sp, #156]	; 0x9c
   84308:	9326      	str	r3, [sp, #152]	; 0x98
   8430a:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   8430e:	f89a 3000 	ldrb.w	r3, [sl]
   84312:	4654      	mov	r4, sl
   84314:	b1eb      	cbz	r3, 84352 <_svfprintf_r+0x92>
   84316:	2b25      	cmp	r3, #37	; 0x25
   84318:	d102      	bne.n	84320 <_svfprintf_r+0x60>
   8431a:	e01a      	b.n	84352 <_svfprintf_r+0x92>
   8431c:	2b25      	cmp	r3, #37	; 0x25
   8431e:	d003      	beq.n	84328 <_svfprintf_r+0x68>
   84320:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   84324:	2b00      	cmp	r3, #0
   84326:	d1f9      	bne.n	8431c <_svfprintf_r+0x5c>
   84328:	eba4 050a 	sub.w	r5, r4, sl
   8432c:	b18d      	cbz	r5, 84352 <_svfprintf_r+0x92>
   8432e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84330:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84332:	3301      	adds	r3, #1
   84334:	442a      	add	r2, r5
   84336:	2b07      	cmp	r3, #7
   84338:	f8c8 a000 	str.w	sl, [r8]
   8433c:	f8c8 5004 	str.w	r5, [r8, #4]
   84340:	9227      	str	r2, [sp, #156]	; 0x9c
   84342:	9326      	str	r3, [sp, #152]	; 0x98
   84344:	f300 808a 	bgt.w	8445c <_svfprintf_r+0x19c>
   84348:	f108 0808 	add.w	r8, r8, #8
   8434c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8434e:	442b      	add	r3, r5
   84350:	9309      	str	r3, [sp, #36]	; 0x24
   84352:	7823      	ldrb	r3, [r4, #0]
   84354:	2b00      	cmp	r3, #0
   84356:	f000 8089 	beq.w	8446c <_svfprintf_r+0x1ac>
   8435a:	2300      	movs	r3, #0
   8435c:	f04f 30ff 	mov.w	r0, #4294967295
   84360:	461a      	mov	r2, r3
   84362:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84366:	4619      	mov	r1, r3
   84368:	930d      	str	r3, [sp, #52]	; 0x34
   8436a:	469b      	mov	fp, r3
   8436c:	7863      	ldrb	r3, [r4, #1]
   8436e:	f104 0a01 	add.w	sl, r4, #1
   84372:	900a      	str	r0, [sp, #40]	; 0x28
   84374:	f10a 0a01 	add.w	sl, sl, #1
   84378:	f1a3 0020 	sub.w	r0, r3, #32
   8437c:	2858      	cmp	r0, #88	; 0x58
   8437e:	f200 83b7 	bhi.w	84af0 <_svfprintf_r+0x830>
   84382:	e8df f010 	tbh	[pc, r0, lsl #1]
   84386:	034c      	.short	0x034c
   84388:	03b503b5 	.word	0x03b503b5
   8438c:	03b50354 	.word	0x03b50354
   84390:	03b503b5 	.word	0x03b503b5
   84394:	03b503b5 	.word	0x03b503b5
   84398:	005903b5 	.word	0x005903b5
   8439c:	03b50359 	.word	0x03b50359
   843a0:	02140066 	.word	0x02140066
   843a4:	022f03b5 	.word	0x022f03b5
   843a8:	03a503a5 	.word	0x03a503a5
   843ac:	03a503a5 	.word	0x03a503a5
   843b0:	03a503a5 	.word	0x03a503a5
   843b4:	03a503a5 	.word	0x03a503a5
   843b8:	03b503a5 	.word	0x03b503a5
   843bc:	03b503b5 	.word	0x03b503b5
   843c0:	03b503b5 	.word	0x03b503b5
   843c4:	03b503b5 	.word	0x03b503b5
   843c8:	03b503b5 	.word	0x03b503b5
   843cc:	028b03b5 	.word	0x028b03b5
   843d0:	03b502d3 	.word	0x03b502d3
   843d4:	03b502d3 	.word	0x03b502d3
   843d8:	03b503b5 	.word	0x03b503b5
   843dc:	031b03b5 	.word	0x031b03b5
   843e0:	03b503b5 	.word	0x03b503b5
   843e4:	03b50320 	.word	0x03b50320
   843e8:	03b503b5 	.word	0x03b503b5
   843ec:	03b503b5 	.word	0x03b503b5
   843f0:	03b50234 	.word	0x03b50234
   843f4:	024b03b5 	.word	0x024b03b5
   843f8:	03b503b5 	.word	0x03b503b5
   843fc:	03b503b5 	.word	0x03b503b5
   84400:	03b503b5 	.word	0x03b503b5
   84404:	03b503b5 	.word	0x03b503b5
   84408:	03b503b5 	.word	0x03b503b5
   8440c:	039e0276 	.word	0x039e0276
   84410:	02d302d3 	.word	0x02d302d3
   84414:	036302d3 	.word	0x036302d3
   84418:	03b5039e 	.word	0x03b5039e
   8441c:	036803b5 	.word	0x036803b5
   84420:	037503b5 	.word	0x037503b5
   84424:	038c01dd 	.word	0x038c01dd
   84428:	03b5035e 	.word	0x03b5035e
   8442c:	03b501f2 	.word	0x03b501f2
   84430:	03b50087 	.word	0x03b50087
   84434:	033203b5 	.word	0x033203b5
   84438:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8443a:	6823      	ldr	r3, [r4, #0]
   8443c:	4618      	mov	r0, r3
   8443e:	930d      	str	r3, [sp, #52]	; 0x34
   84440:	4623      	mov	r3, r4
   84442:	2800      	cmp	r0, #0
   84444:	f103 0304 	add.w	r3, r3, #4
   84448:	930f      	str	r3, [sp, #60]	; 0x3c
   8444a:	da04      	bge.n	84456 <_svfprintf_r+0x196>
   8444c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8444e:	425b      	negs	r3, r3
   84450:	930d      	str	r3, [sp, #52]	; 0x34
   84452:	f04b 0b04 	orr.w	fp, fp, #4
   84456:	f89a 3000 	ldrb.w	r3, [sl]
   8445a:	e78b      	b.n	84374 <_svfprintf_r+0xb4>
   8445c:	aa25      	add	r2, sp, #148	; 0x94
   8445e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84460:	980c      	ldr	r0, [sp, #48]	; 0x30
   84462:	f003 f831 	bl	874c8 <__ssprint_r>
   84466:	b940      	cbnz	r0, 8447a <_svfprintf_r+0x1ba>
   84468:	46c8      	mov	r8, r9
   8446a:	e76f      	b.n	8434c <_svfprintf_r+0x8c>
   8446c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8446e:	b123      	cbz	r3, 8447a <_svfprintf_r+0x1ba>
   84470:	980c      	ldr	r0, [sp, #48]	; 0x30
   84472:	aa25      	add	r2, sp, #148	; 0x94
   84474:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84476:	f003 f827 	bl	874c8 <__ssprint_r>
   8447a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8447c:	899b      	ldrh	r3, [r3, #12]
   8447e:	f013 0f40 	tst.w	r3, #64	; 0x40
   84482:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84484:	bf18      	it	ne
   84486:	f04f 33ff 	movne.w	r3, #4294967295
   8448a:	9309      	str	r3, [sp, #36]	; 0x24
   8448c:	9809      	ldr	r0, [sp, #36]	; 0x24
   8448e:	b043      	add	sp, #268	; 0x10c
   84490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84494:	f01b 0f20 	tst.w	fp, #32
   84498:	9311      	str	r3, [sp, #68]	; 0x44
   8449a:	f040 81af 	bne.w	847fc <_svfprintf_r+0x53c>
   8449e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   844a0:	f01b 0f10 	tst.w	fp, #16
   844a4:	4613      	mov	r3, r2
   844a6:	f040 859a 	bne.w	84fde <_svfprintf_r+0xd1e>
   844aa:	f01b 0f40 	tst.w	fp, #64	; 0x40
   844ae:	f000 8596 	beq.w	84fde <_svfprintf_r+0xd1e>
   844b2:	2500      	movs	r5, #0
   844b4:	2301      	movs	r3, #1
   844b6:	8814      	ldrh	r4, [r2, #0]
   844b8:	3204      	adds	r2, #4
   844ba:	920f      	str	r2, [sp, #60]	; 0x3c
   844bc:	2200      	movs	r2, #0
   844be:	4617      	mov	r7, r2
   844c0:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   844c4:	990a      	ldr	r1, [sp, #40]	; 0x28
   844c6:	1c4a      	adds	r2, r1, #1
   844c8:	f000 8210 	beq.w	848ec <_svfprintf_r+0x62c>
   844cc:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   844d0:	9207      	str	r2, [sp, #28]
   844d2:	ea54 0205 	orrs.w	r2, r4, r5
   844d6:	f040 820f 	bne.w	848f8 <_svfprintf_r+0x638>
   844da:	2900      	cmp	r1, #0
   844dc:	f040 8431 	bne.w	84d42 <_svfprintf_r+0xa82>
   844e0:	2b00      	cmp	r3, #0
   844e2:	f040 8539 	bne.w	84f58 <_svfprintf_r+0xc98>
   844e6:	f01b 0301 	ands.w	r3, fp, #1
   844ea:	930e      	str	r3, [sp, #56]	; 0x38
   844ec:	f000 8662 	beq.w	851b4 <_svfprintf_r+0xef4>
   844f0:	2330      	movs	r3, #48	; 0x30
   844f2:	ae42      	add	r6, sp, #264	; 0x108
   844f4:	f806 3d41 	strb.w	r3, [r6, #-65]!
   844f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   844fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   844fc:	4293      	cmp	r3, r2
   844fe:	bfb8      	it	lt
   84500:	4613      	movlt	r3, r2
   84502:	9308      	str	r3, [sp, #32]
   84504:	2300      	movs	r3, #0
   84506:	9312      	str	r3, [sp, #72]	; 0x48
   84508:	b117      	cbz	r7, 84510 <_svfprintf_r+0x250>
   8450a:	9b08      	ldr	r3, [sp, #32]
   8450c:	3301      	adds	r3, #1
   8450e:	9308      	str	r3, [sp, #32]
   84510:	9b07      	ldr	r3, [sp, #28]
   84512:	f013 0302 	ands.w	r3, r3, #2
   84516:	9310      	str	r3, [sp, #64]	; 0x40
   84518:	d002      	beq.n	84520 <_svfprintf_r+0x260>
   8451a:	9b08      	ldr	r3, [sp, #32]
   8451c:	3302      	adds	r3, #2
   8451e:	9308      	str	r3, [sp, #32]
   84520:	9b07      	ldr	r3, [sp, #28]
   84522:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   84526:	f040 8310 	bne.w	84b4a <_svfprintf_r+0x88a>
   8452a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8452c:	9a08      	ldr	r2, [sp, #32]
   8452e:	eba3 0b02 	sub.w	fp, r3, r2
   84532:	f1bb 0f00 	cmp.w	fp, #0
   84536:	f340 8308 	ble.w	84b4a <_svfprintf_r+0x88a>
   8453a:	f1bb 0f10 	cmp.w	fp, #16
   8453e:	f340 87b2 	ble.w	854a6 <_svfprintf_r+0x11e6>
   84542:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84544:	4643      	mov	r3, r8
   84546:	4621      	mov	r1, r4
   84548:	46a8      	mov	r8, r5
   8454a:	2710      	movs	r7, #16
   8454c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8454e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84550:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84552:	e006      	b.n	84562 <_svfprintf_r+0x2a2>
   84554:	f1ab 0b10 	sub.w	fp, fp, #16
   84558:	f1bb 0f10 	cmp.w	fp, #16
   8455c:	f103 0308 	add.w	r3, r3, #8
   84560:	dd18      	ble.n	84594 <_svfprintf_r+0x2d4>
   84562:	3201      	adds	r2, #1
   84564:	48ab      	ldr	r0, [pc, #684]	; (84814 <_svfprintf_r+0x554>)
   84566:	3110      	adds	r1, #16
   84568:	2a07      	cmp	r2, #7
   8456a:	9127      	str	r1, [sp, #156]	; 0x9c
   8456c:	9226      	str	r2, [sp, #152]	; 0x98
   8456e:	e883 0081 	stmia.w	r3, {r0, r7}
   84572:	ddef      	ble.n	84554 <_svfprintf_r+0x294>
   84574:	aa25      	add	r2, sp, #148	; 0x94
   84576:	4629      	mov	r1, r5
   84578:	4620      	mov	r0, r4
   8457a:	f002 ffa5 	bl	874c8 <__ssprint_r>
   8457e:	2800      	cmp	r0, #0
   84580:	f47f af7b 	bne.w	8447a <_svfprintf_r+0x1ba>
   84584:	f1ab 0b10 	sub.w	fp, fp, #16
   84588:	f1bb 0f10 	cmp.w	fp, #16
   8458c:	464b      	mov	r3, r9
   8458e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84590:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84592:	dce6      	bgt.n	84562 <_svfprintf_r+0x2a2>
   84594:	4645      	mov	r5, r8
   84596:	460c      	mov	r4, r1
   84598:	4698      	mov	r8, r3
   8459a:	3201      	adds	r2, #1
   8459c:	4b9d      	ldr	r3, [pc, #628]	; (84814 <_svfprintf_r+0x554>)
   8459e:	445c      	add	r4, fp
   845a0:	2a07      	cmp	r2, #7
   845a2:	9427      	str	r4, [sp, #156]	; 0x9c
   845a4:	9226      	str	r2, [sp, #152]	; 0x98
   845a6:	e888 0808 	stmia.w	r8, {r3, fp}
   845aa:	f300 82c3 	bgt.w	84b34 <_svfprintf_r+0x874>
   845ae:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   845b2:	f108 0808 	add.w	r8, r8, #8
   845b6:	b187      	cbz	r7, 845da <_svfprintf_r+0x31a>
   845b8:	2101      	movs	r1, #1
   845ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
   845bc:	440c      	add	r4, r1
   845be:	440b      	add	r3, r1
   845c0:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   845c4:	2b07      	cmp	r3, #7
   845c6:	9427      	str	r4, [sp, #156]	; 0x9c
   845c8:	9326      	str	r3, [sp, #152]	; 0x98
   845ca:	f8c8 1004 	str.w	r1, [r8, #4]
   845ce:	f8c8 2000 	str.w	r2, [r8]
   845d2:	f300 83cd 	bgt.w	84d70 <_svfprintf_r+0xab0>
   845d6:	f108 0808 	add.w	r8, r8, #8
   845da:	9b10      	ldr	r3, [sp, #64]	; 0x40
   845dc:	b17b      	cbz	r3, 845fe <_svfprintf_r+0x33e>
   845de:	2102      	movs	r1, #2
   845e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   845e2:	440c      	add	r4, r1
   845e4:	3301      	adds	r3, #1
   845e6:	aa1e      	add	r2, sp, #120	; 0x78
   845e8:	2b07      	cmp	r3, #7
   845ea:	9427      	str	r4, [sp, #156]	; 0x9c
   845ec:	9326      	str	r3, [sp, #152]	; 0x98
   845ee:	f8c8 1004 	str.w	r1, [r8, #4]
   845f2:	f8c8 2000 	str.w	r2, [r8]
   845f6:	f300 8411 	bgt.w	84e1c <_svfprintf_r+0xb5c>
   845fa:	f108 0808 	add.w	r8, r8, #8
   845fe:	2d80      	cmp	r5, #128	; 0x80
   84600:	f000 8304 	beq.w	84c0c <_svfprintf_r+0x94c>
   84604:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84606:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84608:	1a9f      	subs	r7, r3, r2
   8460a:	2f00      	cmp	r7, #0
   8460c:	dd37      	ble.n	8467e <_svfprintf_r+0x3be>
   8460e:	2f10      	cmp	r7, #16
   84610:	f340 8679 	ble.w	85306 <_svfprintf_r+0x1046>
   84614:	4d80      	ldr	r5, [pc, #512]	; (84818 <_svfprintf_r+0x558>)
   84616:	4642      	mov	r2, r8
   84618:	4621      	mov	r1, r4
   8461a:	46b0      	mov	r8, r6
   8461c:	f04f 0b10 	mov.w	fp, #16
   84620:	462e      	mov	r6, r5
   84622:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84624:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84626:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84628:	e004      	b.n	84634 <_svfprintf_r+0x374>
   8462a:	3f10      	subs	r7, #16
   8462c:	2f10      	cmp	r7, #16
   8462e:	f102 0208 	add.w	r2, r2, #8
   84632:	dd15      	ble.n	84660 <_svfprintf_r+0x3a0>
   84634:	3301      	adds	r3, #1
   84636:	3110      	adds	r1, #16
   84638:	2b07      	cmp	r3, #7
   8463a:	9127      	str	r1, [sp, #156]	; 0x9c
   8463c:	9326      	str	r3, [sp, #152]	; 0x98
   8463e:	e882 0840 	stmia.w	r2, {r6, fp}
   84642:	ddf2      	ble.n	8462a <_svfprintf_r+0x36a>
   84644:	aa25      	add	r2, sp, #148	; 0x94
   84646:	4629      	mov	r1, r5
   84648:	4620      	mov	r0, r4
   8464a:	f002 ff3d 	bl	874c8 <__ssprint_r>
   8464e:	2800      	cmp	r0, #0
   84650:	f47f af13 	bne.w	8447a <_svfprintf_r+0x1ba>
   84654:	3f10      	subs	r7, #16
   84656:	2f10      	cmp	r7, #16
   84658:	464a      	mov	r2, r9
   8465a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   8465c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8465e:	dce9      	bgt.n	84634 <_svfprintf_r+0x374>
   84660:	4635      	mov	r5, r6
   84662:	460c      	mov	r4, r1
   84664:	4646      	mov	r6, r8
   84666:	4690      	mov	r8, r2
   84668:	3301      	adds	r3, #1
   8466a:	443c      	add	r4, r7
   8466c:	2b07      	cmp	r3, #7
   8466e:	9427      	str	r4, [sp, #156]	; 0x9c
   84670:	9326      	str	r3, [sp, #152]	; 0x98
   84672:	e888 00a0 	stmia.w	r8, {r5, r7}
   84676:	f300 8370 	bgt.w	84d5a <_svfprintf_r+0xa9a>
   8467a:	f108 0808 	add.w	r8, r8, #8
   8467e:	9b07      	ldr	r3, [sp, #28]
   84680:	05df      	lsls	r7, r3, #23
   84682:	f100 8264 	bmi.w	84b4e <_svfprintf_r+0x88e>
   84686:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84688:	990e      	ldr	r1, [sp, #56]	; 0x38
   8468a:	3301      	adds	r3, #1
   8468c:	440c      	add	r4, r1
   8468e:	2b07      	cmp	r3, #7
   84690:	9427      	str	r4, [sp, #156]	; 0x9c
   84692:	f8c8 6000 	str.w	r6, [r8]
   84696:	f8c8 1004 	str.w	r1, [r8, #4]
   8469a:	9326      	str	r3, [sp, #152]	; 0x98
   8469c:	f300 83b3 	bgt.w	84e06 <_svfprintf_r+0xb46>
   846a0:	f108 0808 	add.w	r8, r8, #8
   846a4:	9b07      	ldr	r3, [sp, #28]
   846a6:	075b      	lsls	r3, r3, #29
   846a8:	d53b      	bpl.n	84722 <_svfprintf_r+0x462>
   846aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   846ac:	9a08      	ldr	r2, [sp, #32]
   846ae:	1a9d      	subs	r5, r3, r2
   846b0:	2d00      	cmp	r5, #0
   846b2:	dd36      	ble.n	84722 <_svfprintf_r+0x462>
   846b4:	2d10      	cmp	r5, #16
   846b6:	f340 8721 	ble.w	854fc <_svfprintf_r+0x123c>
   846ba:	2610      	movs	r6, #16
   846bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   846be:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   846c0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   846c4:	e004      	b.n	846d0 <_svfprintf_r+0x410>
   846c6:	3d10      	subs	r5, #16
   846c8:	2d10      	cmp	r5, #16
   846ca:	f108 0808 	add.w	r8, r8, #8
   846ce:	dd16      	ble.n	846fe <_svfprintf_r+0x43e>
   846d0:	3301      	adds	r3, #1
   846d2:	4a50      	ldr	r2, [pc, #320]	; (84814 <_svfprintf_r+0x554>)
   846d4:	3410      	adds	r4, #16
   846d6:	2b07      	cmp	r3, #7
   846d8:	9427      	str	r4, [sp, #156]	; 0x9c
   846da:	9326      	str	r3, [sp, #152]	; 0x98
   846dc:	e888 0044 	stmia.w	r8, {r2, r6}
   846e0:	ddf1      	ble.n	846c6 <_svfprintf_r+0x406>
   846e2:	aa25      	add	r2, sp, #148	; 0x94
   846e4:	4659      	mov	r1, fp
   846e6:	4638      	mov	r0, r7
   846e8:	f002 feee 	bl	874c8 <__ssprint_r>
   846ec:	2800      	cmp	r0, #0
   846ee:	f47f aec4 	bne.w	8447a <_svfprintf_r+0x1ba>
   846f2:	3d10      	subs	r5, #16
   846f4:	2d10      	cmp	r5, #16
   846f6:	46c8      	mov	r8, r9
   846f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   846fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   846fc:	dce8      	bgt.n	846d0 <_svfprintf_r+0x410>
   846fe:	3301      	adds	r3, #1
   84700:	4a44      	ldr	r2, [pc, #272]	; (84814 <_svfprintf_r+0x554>)
   84702:	442c      	add	r4, r5
   84704:	2b07      	cmp	r3, #7
   84706:	9427      	str	r4, [sp, #156]	; 0x9c
   84708:	9326      	str	r3, [sp, #152]	; 0x98
   8470a:	e888 0024 	stmia.w	r8, {r2, r5}
   8470e:	dd08      	ble.n	84722 <_svfprintf_r+0x462>
   84710:	aa25      	add	r2, sp, #148	; 0x94
   84712:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84714:	980c      	ldr	r0, [sp, #48]	; 0x30
   84716:	f002 fed7 	bl	874c8 <__ssprint_r>
   8471a:	2800      	cmp	r0, #0
   8471c:	f47f aead 	bne.w	8447a <_svfprintf_r+0x1ba>
   84720:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84722:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84724:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84726:	9908      	ldr	r1, [sp, #32]
   84728:	428a      	cmp	r2, r1
   8472a:	bfac      	ite	ge
   8472c:	189b      	addge	r3, r3, r2
   8472e:	185b      	addlt	r3, r3, r1
   84730:	9309      	str	r3, [sp, #36]	; 0x24
   84732:	2c00      	cmp	r4, #0
   84734:	f040 82fb 	bne.w	84d2e <_svfprintf_r+0xa6e>
   84738:	2300      	movs	r3, #0
   8473a:	46c8      	mov	r8, r9
   8473c:	9326      	str	r3, [sp, #152]	; 0x98
   8473e:	e5e6      	b.n	8430e <_svfprintf_r+0x4e>
   84740:	9311      	str	r3, [sp, #68]	; 0x44
   84742:	f01b 0320 	ands.w	r3, fp, #32
   84746:	f040 8145 	bne.w	849d4 <_svfprintf_r+0x714>
   8474a:	f01b 0210 	ands.w	r2, fp, #16
   8474e:	f040 8466 	bne.w	8501e <_svfprintf_r+0xd5e>
   84752:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   84756:	f000 8462 	beq.w	8501e <_svfprintf_r+0xd5e>
   8475a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8475c:	4613      	mov	r3, r2
   8475e:	460a      	mov	r2, r1
   84760:	3204      	adds	r2, #4
   84762:	880c      	ldrh	r4, [r1, #0]
   84764:	2500      	movs	r5, #0
   84766:	920f      	str	r2, [sp, #60]	; 0x3c
   84768:	e6a8      	b.n	844bc <_svfprintf_r+0x1fc>
   8476a:	2500      	movs	r5, #0
   8476c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8476e:	9311      	str	r3, [sp, #68]	; 0x44
   84770:	6816      	ldr	r6, [r2, #0]
   84772:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   84776:	1d14      	adds	r4, r2, #4
   84778:	2e00      	cmp	r6, #0
   8477a:	f000 86cd 	beq.w	85518 <_svfprintf_r+0x1258>
   8477e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84780:	1c53      	adds	r3, r2, #1
   84782:	f000 861b 	beq.w	853bc <_svfprintf_r+0x10fc>
   84786:	4629      	mov	r1, r5
   84788:	4630      	mov	r0, r6
   8478a:	f002 fac7 	bl	86d1c <memchr>
   8478e:	2800      	cmp	r0, #0
   84790:	f000 870d 	beq.w	855ae <_svfprintf_r+0x12ee>
   84794:	1b83      	subs	r3, r0, r6
   84796:	950a      	str	r5, [sp, #40]	; 0x28
   84798:	930e      	str	r3, [sp, #56]	; 0x38
   8479a:	940f      	str	r4, [sp, #60]	; 0x3c
   8479c:	f8cd b01c 	str.w	fp, [sp, #28]
   847a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   847a4:	9308      	str	r3, [sp, #32]
   847a6:	9512      	str	r5, [sp, #72]	; 0x48
   847a8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   847ac:	e6ac      	b.n	84508 <_svfprintf_r+0x248>
   847ae:	f89a 3000 	ldrb.w	r3, [sl]
   847b2:	f10a 0401 	add.w	r4, sl, #1
   847b6:	2b2a      	cmp	r3, #42	; 0x2a
   847b8:	f000 87c2 	beq.w	85740 <_svfprintf_r+0x1480>
   847bc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   847c0:	2809      	cmp	r0, #9
   847c2:	46a2      	mov	sl, r4
   847c4:	f200 8718 	bhi.w	855f8 <_svfprintf_r+0x1338>
   847c8:	2300      	movs	r3, #0
   847ca:	461c      	mov	r4, r3
   847cc:	f81a 3b01 	ldrb.w	r3, [sl], #1
   847d0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   847d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   847d8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   847dc:	2809      	cmp	r0, #9
   847de:	d9f5      	bls.n	847cc <_svfprintf_r+0x50c>
   847e0:	940a      	str	r4, [sp, #40]	; 0x28
   847e2:	e5c9      	b.n	84378 <_svfprintf_r+0xb8>
   847e4:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   847e8:	f89a 3000 	ldrb.w	r3, [sl]
   847ec:	e5c2      	b.n	84374 <_svfprintf_r+0xb4>
   847ee:	f04b 0b10 	orr.w	fp, fp, #16
   847f2:	f01b 0f20 	tst.w	fp, #32
   847f6:	9311      	str	r3, [sp, #68]	; 0x44
   847f8:	f43f ae51 	beq.w	8449e <_svfprintf_r+0x1de>
   847fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   847fe:	3407      	adds	r4, #7
   84800:	f024 0307 	bic.w	r3, r4, #7
   84804:	f103 0208 	add.w	r2, r3, #8
   84808:	e9d3 4500 	ldrd	r4, r5, [r3]
   8480c:	920f      	str	r2, [sp, #60]	; 0x3c
   8480e:	2301      	movs	r3, #1
   84810:	e654      	b.n	844bc <_svfprintf_r+0x1fc>
   84812:	bf00      	nop
   84814:	000898c0 	.word	0x000898c0
   84818:	000898d0 	.word	0x000898d0
   8481c:	9311      	str	r3, [sp, #68]	; 0x44
   8481e:	2a00      	cmp	r2, #0
   84820:	f040 87ad 	bne.w	8577e <_svfprintf_r+0x14be>
   84824:	4bbe      	ldr	r3, [pc, #760]	; (84b20 <_svfprintf_r+0x860>)
   84826:	f01b 0f20 	tst.w	fp, #32
   8482a:	9318      	str	r3, [sp, #96]	; 0x60
   8482c:	f040 80e7 	bne.w	849fe <_svfprintf_r+0x73e>
   84830:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84832:	f01b 0f10 	tst.w	fp, #16
   84836:	4613      	mov	r3, r2
   84838:	f040 83d8 	bne.w	84fec <_svfprintf_r+0xd2c>
   8483c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84840:	f000 83d4 	beq.w	84fec <_svfprintf_r+0xd2c>
   84844:	2500      	movs	r5, #0
   84846:	3304      	adds	r3, #4
   84848:	8814      	ldrh	r4, [r2, #0]
   8484a:	930f      	str	r3, [sp, #60]	; 0x3c
   8484c:	f01b 0f01 	tst.w	fp, #1
   84850:	f000 80e3 	beq.w	84a1a <_svfprintf_r+0x75a>
   84854:	ea54 0305 	orrs.w	r3, r4, r5
   84858:	f000 80df 	beq.w	84a1a <_svfprintf_r+0x75a>
   8485c:	2330      	movs	r3, #48	; 0x30
   8485e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   84862:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   84866:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   8486a:	f04b 0b02 	orr.w	fp, fp, #2
   8486e:	2302      	movs	r3, #2
   84870:	e624      	b.n	844bc <_svfprintf_r+0x1fc>
   84872:	2201      	movs	r2, #1
   84874:	9311      	str	r3, [sp, #68]	; 0x44
   84876:	2300      	movs	r3, #0
   84878:	4611      	mov	r1, r2
   8487a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8487c:	9208      	str	r2, [sp, #32]
   8487e:	6802      	ldr	r2, [r0, #0]
   84880:	461f      	mov	r7, r3
   84882:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84886:	930a      	str	r3, [sp, #40]	; 0x28
   84888:	9312      	str	r3, [sp, #72]	; 0x48
   8488a:	1d03      	adds	r3, r0, #4
   8488c:	f8cd b01c 	str.w	fp, [sp, #28]
   84890:	910e      	str	r1, [sp, #56]	; 0x38
   84892:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   84896:	930f      	str	r3, [sp, #60]	; 0x3c
   84898:	ae28      	add	r6, sp, #160	; 0xa0
   8489a:	e639      	b.n	84510 <_svfprintf_r+0x250>
   8489c:	9311      	str	r3, [sp, #68]	; 0x44
   8489e:	2a00      	cmp	r2, #0
   848a0:	f040 8784 	bne.w	857ac <_svfprintf_r+0x14ec>
   848a4:	f04b 0b10 	orr.w	fp, fp, #16
   848a8:	f01b 0f20 	tst.w	fp, #32
   848ac:	f040 8475 	bne.w	8519a <_svfprintf_r+0xeda>
   848b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   848b2:	f01b 0f10 	tst.w	fp, #16
   848b6:	4613      	mov	r3, r2
   848b8:	f040 839d 	bne.w	84ff6 <_svfprintf_r+0xd36>
   848bc:	f01b 0f40 	tst.w	fp, #64	; 0x40
   848c0:	f000 8399 	beq.w	84ff6 <_svfprintf_r+0xd36>
   848c4:	f9b2 4000 	ldrsh.w	r4, [r2]
   848c8:	3304      	adds	r3, #4
   848ca:	17e5      	asrs	r5, r4, #31
   848cc:	930f      	str	r3, [sp, #60]	; 0x3c
   848ce:	4622      	mov	r2, r4
   848d0:	462b      	mov	r3, r5
   848d2:	2a00      	cmp	r2, #0
   848d4:	f173 0300 	sbcs.w	r3, r3, #0
   848d8:	f2c0 8398 	blt.w	8500c <_svfprintf_r+0xd4c>
   848dc:	990a      	ldr	r1, [sp, #40]	; 0x28
   848de:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   848e2:	1c4a      	adds	r2, r1, #1
   848e4:	f04f 0301 	mov.w	r3, #1
   848e8:	f47f adf0 	bne.w	844cc <_svfprintf_r+0x20c>
   848ec:	ea54 0205 	orrs.w	r2, r4, r5
   848f0:	f000 8229 	beq.w	84d46 <_svfprintf_r+0xa86>
   848f4:	f8cd b01c 	str.w	fp, [sp, #28]
   848f8:	2b01      	cmp	r3, #1
   848fa:	f000 830e 	beq.w	84f1a <_svfprintf_r+0xc5a>
   848fe:	2b02      	cmp	r3, #2
   84900:	f040 829c 	bne.w	84e3c <_svfprintf_r+0xb7c>
   84904:	464e      	mov	r6, r9
   84906:	9818      	ldr	r0, [sp, #96]	; 0x60
   84908:	0923      	lsrs	r3, r4, #4
   8490a:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   8490e:	0929      	lsrs	r1, r5, #4
   84910:	f004 020f 	and.w	r2, r4, #15
   84914:	460d      	mov	r5, r1
   84916:	461c      	mov	r4, r3
   84918:	5c83      	ldrb	r3, [r0, r2]
   8491a:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8491e:	ea54 0305 	orrs.w	r3, r4, r5
   84922:	d1f1      	bne.n	84908 <_svfprintf_r+0x648>
   84924:	eba9 0306 	sub.w	r3, r9, r6
   84928:	930e      	str	r3, [sp, #56]	; 0x38
   8492a:	e5e5      	b.n	844f8 <_svfprintf_r+0x238>
   8492c:	9311      	str	r3, [sp, #68]	; 0x44
   8492e:	2a00      	cmp	r2, #0
   84930:	f040 8738 	bne.w	857a4 <_svfprintf_r+0x14e4>
   84934:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84936:	f01b 0f08 	tst.w	fp, #8
   8493a:	f104 0407 	add.w	r4, r4, #7
   8493e:	f000 84cf 	beq.w	852e0 <_svfprintf_r+0x1020>
   84942:	f024 0307 	bic.w	r3, r4, #7
   84946:	f103 0208 	add.w	r2, r3, #8
   8494a:	920f      	str	r2, [sp, #60]	; 0x3c
   8494c:	681a      	ldr	r2, [r3, #0]
   8494e:	685b      	ldr	r3, [r3, #4]
   84950:	9215      	str	r2, [sp, #84]	; 0x54
   84952:	9314      	str	r3, [sp, #80]	; 0x50
   84954:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84956:	9d15      	ldr	r5, [sp, #84]	; 0x54
   84958:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   8495c:	4628      	mov	r0, r5
   8495e:	4621      	mov	r1, r4
   84960:	f04f 32ff 	mov.w	r2, #4294967295
   84964:	4b6f      	ldr	r3, [pc, #444]	; (84b24 <_svfprintf_r+0x864>)
   84966:	f003 fe6d 	bl	88644 <__aeabi_dcmpun>
   8496a:	2800      	cmp	r0, #0
   8496c:	f040 8434 	bne.w	851d8 <_svfprintf_r+0xf18>
   84970:	4628      	mov	r0, r5
   84972:	4621      	mov	r1, r4
   84974:	f04f 32ff 	mov.w	r2, #4294967295
   84978:	4b6a      	ldr	r3, [pc, #424]	; (84b24 <_svfprintf_r+0x864>)
   8497a:	f003 fe45 	bl	88608 <__aeabi_dcmple>
   8497e:	2800      	cmp	r0, #0
   84980:	f040 842a 	bne.w	851d8 <_svfprintf_r+0xf18>
   84984:	a815      	add	r0, sp, #84	; 0x54
   84986:	c80d      	ldmia	r0, {r0, r2, r3}
   84988:	9914      	ldr	r1, [sp, #80]	; 0x50
   8498a:	f003 fe33 	bl	885f4 <__aeabi_dcmplt>
   8498e:	2800      	cmp	r0, #0
   84990:	f040 85d4 	bne.w	8553c <_svfprintf_r+0x127c>
   84994:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84998:	2303      	movs	r3, #3
   8499a:	461a      	mov	r2, r3
   8499c:	9308      	str	r3, [sp, #32]
   8499e:	2300      	movs	r3, #0
   849a0:	4e61      	ldr	r6, [pc, #388]	; (84b28 <_svfprintf_r+0x868>)
   849a2:	4619      	mov	r1, r3
   849a4:	930a      	str	r3, [sp, #40]	; 0x28
   849a6:	4b61      	ldr	r3, [pc, #388]	; (84b2c <_svfprintf_r+0x86c>)
   849a8:	920e      	str	r2, [sp, #56]	; 0x38
   849aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
   849ac:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   849b0:	9007      	str	r0, [sp, #28]
   849b2:	9112      	str	r1, [sp, #72]	; 0x48
   849b4:	2a47      	cmp	r2, #71	; 0x47
   849b6:	bfd8      	it	le
   849b8:	461e      	movle	r6, r3
   849ba:	e5a5      	b.n	84508 <_svfprintf_r+0x248>
   849bc:	f04b 0b08 	orr.w	fp, fp, #8
   849c0:	f89a 3000 	ldrb.w	r3, [sl]
   849c4:	e4d6      	b.n	84374 <_svfprintf_r+0xb4>
   849c6:	f04b 0b10 	orr.w	fp, fp, #16
   849ca:	9311      	str	r3, [sp, #68]	; 0x44
   849cc:	f01b 0320 	ands.w	r3, fp, #32
   849d0:	f43f aebb 	beq.w	8474a <_svfprintf_r+0x48a>
   849d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   849d6:	3407      	adds	r4, #7
   849d8:	f024 0307 	bic.w	r3, r4, #7
   849dc:	f103 0208 	add.w	r2, r3, #8
   849e0:	e9d3 4500 	ldrd	r4, r5, [r3]
   849e4:	920f      	str	r2, [sp, #60]	; 0x3c
   849e6:	2300      	movs	r3, #0
   849e8:	e568      	b.n	844bc <_svfprintf_r+0x1fc>
   849ea:	9311      	str	r3, [sp, #68]	; 0x44
   849ec:	2a00      	cmp	r2, #0
   849ee:	f040 86c2 	bne.w	85776 <_svfprintf_r+0x14b6>
   849f2:	4b4f      	ldr	r3, [pc, #316]	; (84b30 <_svfprintf_r+0x870>)
   849f4:	f01b 0f20 	tst.w	fp, #32
   849f8:	9318      	str	r3, [sp, #96]	; 0x60
   849fa:	f43f af19 	beq.w	84830 <_svfprintf_r+0x570>
   849fe:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84a00:	f01b 0f01 	tst.w	fp, #1
   84a04:	f104 0407 	add.w	r4, r4, #7
   84a08:	f024 0307 	bic.w	r3, r4, #7
   84a0c:	f103 0208 	add.w	r2, r3, #8
   84a10:	920f      	str	r2, [sp, #60]	; 0x3c
   84a12:	e9d3 4500 	ldrd	r4, r5, [r3]
   84a16:	f47f af1d 	bne.w	84854 <_svfprintf_r+0x594>
   84a1a:	2302      	movs	r3, #2
   84a1c:	e54e      	b.n	844bc <_svfprintf_r+0x1fc>
   84a1e:	f89a 3000 	ldrb.w	r3, [sl]
   84a22:	2900      	cmp	r1, #0
   84a24:	f47f aca6 	bne.w	84374 <_svfprintf_r+0xb4>
   84a28:	2201      	movs	r2, #1
   84a2a:	2120      	movs	r1, #32
   84a2c:	e4a2      	b.n	84374 <_svfprintf_r+0xb4>
   84a2e:	f04b 0b01 	orr.w	fp, fp, #1
   84a32:	f89a 3000 	ldrb.w	r3, [sl]
   84a36:	e49d      	b.n	84374 <_svfprintf_r+0xb4>
   84a38:	f89a 3000 	ldrb.w	r3, [sl]
   84a3c:	2201      	movs	r2, #1
   84a3e:	212b      	movs	r1, #43	; 0x2b
   84a40:	e498      	b.n	84374 <_svfprintf_r+0xb4>
   84a42:	f04b 0b20 	orr.w	fp, fp, #32
   84a46:	f89a 3000 	ldrb.w	r3, [sl]
   84a4a:	e493      	b.n	84374 <_svfprintf_r+0xb4>
   84a4c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   84a50:	f89a 3000 	ldrb.w	r3, [sl]
   84a54:	e48e      	b.n	84374 <_svfprintf_r+0xb4>
   84a56:	f89a 3000 	ldrb.w	r3, [sl]
   84a5a:	2b6c      	cmp	r3, #108	; 0x6c
   84a5c:	bf03      	ittte	eq
   84a5e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   84a62:	f04b 0b20 	orreq.w	fp, fp, #32
   84a66:	f10a 0a01 	addeq.w	sl, sl, #1
   84a6a:	f04b 0b10 	orrne.w	fp, fp, #16
   84a6e:	e481      	b.n	84374 <_svfprintf_r+0xb4>
   84a70:	2a00      	cmp	r2, #0
   84a72:	f040 867c 	bne.w	8576e <_svfprintf_r+0x14ae>
   84a76:	f01b 0f20 	tst.w	fp, #32
   84a7a:	f040 8452 	bne.w	85322 <_svfprintf_r+0x1062>
   84a7e:	f01b 0f10 	tst.w	fp, #16
   84a82:	f040 8438 	bne.w	852f6 <_svfprintf_r+0x1036>
   84a86:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84a8a:	f000 8434 	beq.w	852f6 <_svfprintf_r+0x1036>
   84a8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84a90:	6813      	ldr	r3, [r2, #0]
   84a92:	3204      	adds	r2, #4
   84a94:	920f      	str	r2, [sp, #60]	; 0x3c
   84a96:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   84a9a:	801a      	strh	r2, [r3, #0]
   84a9c:	e437      	b.n	8430e <_svfprintf_r+0x4e>
   84a9e:	2378      	movs	r3, #120	; 0x78
   84aa0:	2230      	movs	r2, #48	; 0x30
   84aa2:	980f      	ldr	r0, [sp, #60]	; 0x3c
   84aa4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   84aa8:	9311      	str	r3, [sp, #68]	; 0x44
   84aaa:	1d03      	adds	r3, r0, #4
   84aac:	930f      	str	r3, [sp, #60]	; 0x3c
   84aae:	4b20      	ldr	r3, [pc, #128]	; (84b30 <_svfprintf_r+0x870>)
   84ab0:	6804      	ldr	r4, [r0, #0]
   84ab2:	9318      	str	r3, [sp, #96]	; 0x60
   84ab4:	f04b 0b02 	orr.w	fp, fp, #2
   84ab8:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   84abc:	2500      	movs	r5, #0
   84abe:	2302      	movs	r3, #2
   84ac0:	e4fc      	b.n	844bc <_svfprintf_r+0x1fc>
   84ac2:	9311      	str	r3, [sp, #68]	; 0x44
   84ac4:	2a00      	cmp	r2, #0
   84ac6:	f43f aeef 	beq.w	848a8 <_svfprintf_r+0x5e8>
   84aca:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   84ace:	e6eb      	b.n	848a8 <_svfprintf_r+0x5e8>
   84ad0:	2000      	movs	r0, #0
   84ad2:	4604      	mov	r4, r0
   84ad4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84ad8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   84adc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   84ae0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   84ae4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84ae8:	2809      	cmp	r0, #9
   84aea:	d9f5      	bls.n	84ad8 <_svfprintf_r+0x818>
   84aec:	940d      	str	r4, [sp, #52]	; 0x34
   84aee:	e443      	b.n	84378 <_svfprintf_r+0xb8>
   84af0:	9311      	str	r3, [sp, #68]	; 0x44
   84af2:	2a00      	cmp	r2, #0
   84af4:	f040 864a 	bne.w	8578c <_svfprintf_r+0x14cc>
   84af8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84afa:	2a00      	cmp	r2, #0
   84afc:	f43f acb6 	beq.w	8446c <_svfprintf_r+0x1ac>
   84b00:	2300      	movs	r3, #0
   84b02:	2101      	movs	r1, #1
   84b04:	461f      	mov	r7, r3
   84b06:	9108      	str	r1, [sp, #32]
   84b08:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   84b0c:	f8cd b01c 	str.w	fp, [sp, #28]
   84b10:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84b14:	930a      	str	r3, [sp, #40]	; 0x28
   84b16:	9312      	str	r3, [sp, #72]	; 0x48
   84b18:	910e      	str	r1, [sp, #56]	; 0x38
   84b1a:	ae28      	add	r6, sp, #160	; 0xa0
   84b1c:	e4f8      	b.n	84510 <_svfprintf_r+0x250>
   84b1e:	bf00      	nop
   84b20:	0008988c 	.word	0x0008988c
   84b24:	7fefffff 	.word	0x7fefffff
   84b28:	00089880 	.word	0x00089880
   84b2c:	0008987c 	.word	0x0008987c
   84b30:	000898a0 	.word	0x000898a0
   84b34:	aa25      	add	r2, sp, #148	; 0x94
   84b36:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b38:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b3a:	f002 fcc5 	bl	874c8 <__ssprint_r>
   84b3e:	2800      	cmp	r0, #0
   84b40:	f47f ac9b 	bne.w	8447a <_svfprintf_r+0x1ba>
   84b44:	46c8      	mov	r8, r9
   84b46:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84b4a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b4c:	e533      	b.n	845b6 <_svfprintf_r+0x2f6>
   84b4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84b50:	2b65      	cmp	r3, #101	; 0x65
   84b52:	f340 809a 	ble.w	84c8a <_svfprintf_r+0x9ca>
   84b56:	a815      	add	r0, sp, #84	; 0x54
   84b58:	c80d      	ldmia	r0, {r0, r2, r3}
   84b5a:	9914      	ldr	r1, [sp, #80]	; 0x50
   84b5c:	f003 fd40 	bl	885e0 <__aeabi_dcmpeq>
   84b60:	2800      	cmp	r0, #0
   84b62:	f000 8193 	beq.w	84e8c <_svfprintf_r+0xbcc>
   84b66:	2101      	movs	r1, #1
   84b68:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84b6a:	4ab5      	ldr	r2, [pc, #724]	; (84e40 <_svfprintf_r+0xb80>)
   84b6c:	440b      	add	r3, r1
   84b6e:	440c      	add	r4, r1
   84b70:	2b07      	cmp	r3, #7
   84b72:	9427      	str	r4, [sp, #156]	; 0x9c
   84b74:	9326      	str	r3, [sp, #152]	; 0x98
   84b76:	f8c8 1004 	str.w	r1, [r8, #4]
   84b7a:	f8c8 2000 	str.w	r2, [r8]
   84b7e:	f300 83c6 	bgt.w	8530e <_svfprintf_r+0x104e>
   84b82:	f108 0808 	add.w	r8, r8, #8
   84b86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84b88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84b8a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b8c:	4293      	cmp	r3, r2
   84b8e:	db03      	blt.n	84b98 <_svfprintf_r+0x8d8>
   84b90:	9b07      	ldr	r3, [sp, #28]
   84b92:	07dd      	lsls	r5, r3, #31
   84b94:	f57f ad86 	bpl.w	846a4 <_svfprintf_r+0x3e4>
   84b98:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84b9a:	9919      	ldr	r1, [sp, #100]	; 0x64
   84b9c:	3301      	adds	r3, #1
   84b9e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   84ba0:	440c      	add	r4, r1
   84ba2:	2b07      	cmp	r3, #7
   84ba4:	f8c8 2000 	str.w	r2, [r8]
   84ba8:	f8c8 1004 	str.w	r1, [r8, #4]
   84bac:	9427      	str	r4, [sp, #156]	; 0x9c
   84bae:	9326      	str	r3, [sp, #152]	; 0x98
   84bb0:	f300 83c4 	bgt.w	8533c <_svfprintf_r+0x107c>
   84bb4:	f108 0808 	add.w	r8, r8, #8
   84bb8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84bba:	1e5e      	subs	r6, r3, #1
   84bbc:	2e00      	cmp	r6, #0
   84bbe:	f77f ad71 	ble.w	846a4 <_svfprintf_r+0x3e4>
   84bc2:	2e10      	cmp	r6, #16
   84bc4:	f340 8575 	ble.w	856b2 <_svfprintf_r+0x13f2>
   84bc8:	4622      	mov	r2, r4
   84bca:	2710      	movs	r7, #16
   84bcc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84bce:	4d9d      	ldr	r5, [pc, #628]	; (84e44 <_svfprintf_r+0xb84>)
   84bd0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84bd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84bd6:	e005      	b.n	84be4 <_svfprintf_r+0x924>
   84bd8:	f108 0808 	add.w	r8, r8, #8
   84bdc:	3e10      	subs	r6, #16
   84bde:	2e10      	cmp	r6, #16
   84be0:	f340 8225 	ble.w	8502e <_svfprintf_r+0xd6e>
   84be4:	3301      	adds	r3, #1
   84be6:	3210      	adds	r2, #16
   84be8:	2b07      	cmp	r3, #7
   84bea:	9227      	str	r2, [sp, #156]	; 0x9c
   84bec:	9326      	str	r3, [sp, #152]	; 0x98
   84bee:	e888 00a0 	stmia.w	r8, {r5, r7}
   84bf2:	ddf1      	ble.n	84bd8 <_svfprintf_r+0x918>
   84bf4:	aa25      	add	r2, sp, #148	; 0x94
   84bf6:	4621      	mov	r1, r4
   84bf8:	4658      	mov	r0, fp
   84bfa:	f002 fc65 	bl	874c8 <__ssprint_r>
   84bfe:	2800      	cmp	r0, #0
   84c00:	f47f ac3b 	bne.w	8447a <_svfprintf_r+0x1ba>
   84c04:	46c8      	mov	r8, r9
   84c06:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84c08:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84c0a:	e7e7      	b.n	84bdc <_svfprintf_r+0x91c>
   84c0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84c0e:	9a08      	ldr	r2, [sp, #32]
   84c10:	1a9f      	subs	r7, r3, r2
   84c12:	2f00      	cmp	r7, #0
   84c14:	f77f acf6 	ble.w	84604 <_svfprintf_r+0x344>
   84c18:	2f10      	cmp	r7, #16
   84c1a:	f340 84a8 	ble.w	8556e <_svfprintf_r+0x12ae>
   84c1e:	4d89      	ldr	r5, [pc, #548]	; (84e44 <_svfprintf_r+0xb84>)
   84c20:	4642      	mov	r2, r8
   84c22:	4621      	mov	r1, r4
   84c24:	46b0      	mov	r8, r6
   84c26:	f04f 0b10 	mov.w	fp, #16
   84c2a:	462e      	mov	r6, r5
   84c2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84c2e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84c30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84c32:	e004      	b.n	84c3e <_svfprintf_r+0x97e>
   84c34:	3f10      	subs	r7, #16
   84c36:	2f10      	cmp	r7, #16
   84c38:	f102 0208 	add.w	r2, r2, #8
   84c3c:	dd15      	ble.n	84c6a <_svfprintf_r+0x9aa>
   84c3e:	3301      	adds	r3, #1
   84c40:	3110      	adds	r1, #16
   84c42:	2b07      	cmp	r3, #7
   84c44:	9127      	str	r1, [sp, #156]	; 0x9c
   84c46:	9326      	str	r3, [sp, #152]	; 0x98
   84c48:	e882 0840 	stmia.w	r2, {r6, fp}
   84c4c:	ddf2      	ble.n	84c34 <_svfprintf_r+0x974>
   84c4e:	aa25      	add	r2, sp, #148	; 0x94
   84c50:	4629      	mov	r1, r5
   84c52:	4620      	mov	r0, r4
   84c54:	f002 fc38 	bl	874c8 <__ssprint_r>
   84c58:	2800      	cmp	r0, #0
   84c5a:	f47f ac0e 	bne.w	8447a <_svfprintf_r+0x1ba>
   84c5e:	3f10      	subs	r7, #16
   84c60:	2f10      	cmp	r7, #16
   84c62:	464a      	mov	r2, r9
   84c64:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84c66:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84c68:	dce9      	bgt.n	84c3e <_svfprintf_r+0x97e>
   84c6a:	4635      	mov	r5, r6
   84c6c:	460c      	mov	r4, r1
   84c6e:	4646      	mov	r6, r8
   84c70:	4690      	mov	r8, r2
   84c72:	3301      	adds	r3, #1
   84c74:	443c      	add	r4, r7
   84c76:	2b07      	cmp	r3, #7
   84c78:	9427      	str	r4, [sp, #156]	; 0x9c
   84c7a:	9326      	str	r3, [sp, #152]	; 0x98
   84c7c:	e888 00a0 	stmia.w	r8, {r5, r7}
   84c80:	f300 829e 	bgt.w	851c0 <_svfprintf_r+0xf00>
   84c84:	f108 0808 	add.w	r8, r8, #8
   84c88:	e4bc      	b.n	84604 <_svfprintf_r+0x344>
   84c8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84c8c:	2b01      	cmp	r3, #1
   84c8e:	f340 824f 	ble.w	85130 <_svfprintf_r+0xe70>
   84c92:	2301      	movs	r3, #1
   84c94:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84c96:	441c      	add	r4, r3
   84c98:	441f      	add	r7, r3
   84c9a:	2f07      	cmp	r7, #7
   84c9c:	9427      	str	r4, [sp, #156]	; 0x9c
   84c9e:	f8c8 6000 	str.w	r6, [r8]
   84ca2:	9726      	str	r7, [sp, #152]	; 0x98
   84ca4:	f8c8 3004 	str.w	r3, [r8, #4]
   84ca8:	f300 825f 	bgt.w	8516a <_svfprintf_r+0xeaa>
   84cac:	f108 0808 	add.w	r8, r8, #8
   84cb0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84cb2:	3701      	adds	r7, #1
   84cb4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   84cb6:	4414      	add	r4, r2
   84cb8:	2f07      	cmp	r7, #7
   84cba:	9427      	str	r4, [sp, #156]	; 0x9c
   84cbc:	9726      	str	r7, [sp, #152]	; 0x98
   84cbe:	f8c8 3000 	str.w	r3, [r8]
   84cc2:	f8c8 2004 	str.w	r2, [r8, #4]
   84cc6:	f300 825c 	bgt.w	85182 <_svfprintf_r+0xec2>
   84cca:	f108 0808 	add.w	r8, r8, #8
   84cce:	a815      	add	r0, sp, #84	; 0x54
   84cd0:	c80d      	ldmia	r0, {r0, r2, r3}
   84cd2:	9914      	ldr	r1, [sp, #80]	; 0x50
   84cd4:	f003 fc84 	bl	885e0 <__aeabi_dcmpeq>
   84cd8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84cda:	2800      	cmp	r0, #0
   84cdc:	f040 8141 	bne.w	84f62 <_svfprintf_r+0xca2>
   84ce0:	3b01      	subs	r3, #1
   84ce2:	3701      	adds	r7, #1
   84ce4:	3601      	adds	r6, #1
   84ce6:	441c      	add	r4, r3
   84ce8:	2f07      	cmp	r7, #7
   84cea:	f8c8 6000 	str.w	r6, [r8]
   84cee:	9726      	str	r7, [sp, #152]	; 0x98
   84cf0:	9427      	str	r4, [sp, #156]	; 0x9c
   84cf2:	f8c8 3004 	str.w	r3, [r8, #4]
   84cf6:	f300 8166 	bgt.w	84fc6 <_svfprintf_r+0xd06>
   84cfa:	f108 0808 	add.w	r8, r8, #8
   84cfe:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   84d00:	3701      	adds	r7, #1
   84d02:	4414      	add	r4, r2
   84d04:	ab21      	add	r3, sp, #132	; 0x84
   84d06:	2f07      	cmp	r7, #7
   84d08:	9427      	str	r4, [sp, #156]	; 0x9c
   84d0a:	9726      	str	r7, [sp, #152]	; 0x98
   84d0c:	f8c8 2004 	str.w	r2, [r8, #4]
   84d10:	f8c8 3000 	str.w	r3, [r8]
   84d14:	f77f acc4 	ble.w	846a0 <_svfprintf_r+0x3e0>
   84d18:	aa25      	add	r2, sp, #148	; 0x94
   84d1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d1c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d1e:	f002 fbd3 	bl	874c8 <__ssprint_r>
   84d22:	2800      	cmp	r0, #0
   84d24:	f47f aba9 	bne.w	8447a <_svfprintf_r+0x1ba>
   84d28:	46c8      	mov	r8, r9
   84d2a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d2c:	e4ba      	b.n	846a4 <_svfprintf_r+0x3e4>
   84d2e:	aa25      	add	r2, sp, #148	; 0x94
   84d30:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d32:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d34:	f002 fbc8 	bl	874c8 <__ssprint_r>
   84d38:	2800      	cmp	r0, #0
   84d3a:	f43f acfd 	beq.w	84738 <_svfprintf_r+0x478>
   84d3e:	f7ff bb9c 	b.w	8447a <_svfprintf_r+0x1ba>
   84d42:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84d46:	2b01      	cmp	r3, #1
   84d48:	f000 817e 	beq.w	85048 <_svfprintf_r+0xd88>
   84d4c:	2b02      	cmp	r3, #2
   84d4e:	d171      	bne.n	84e34 <_svfprintf_r+0xb74>
   84d50:	f8cd b01c 	str.w	fp, [sp, #28]
   84d54:	2400      	movs	r4, #0
   84d56:	2500      	movs	r5, #0
   84d58:	e5d4      	b.n	84904 <_svfprintf_r+0x644>
   84d5a:	aa25      	add	r2, sp, #148	; 0x94
   84d5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d5e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d60:	f002 fbb2 	bl	874c8 <__ssprint_r>
   84d64:	2800      	cmp	r0, #0
   84d66:	f47f ab88 	bne.w	8447a <_svfprintf_r+0x1ba>
   84d6a:	46c8      	mov	r8, r9
   84d6c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d6e:	e486      	b.n	8467e <_svfprintf_r+0x3be>
   84d70:	aa25      	add	r2, sp, #148	; 0x94
   84d72:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d74:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d76:	f002 fba7 	bl	874c8 <__ssprint_r>
   84d7a:	2800      	cmp	r0, #0
   84d7c:	f47f ab7d 	bne.w	8447a <_svfprintf_r+0x1ba>
   84d80:	46c8      	mov	r8, r9
   84d82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d84:	e429      	b.n	845da <_svfprintf_r+0x31a>
   84d86:	2001      	movs	r0, #1
   84d88:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84d8a:	4a2d      	ldr	r2, [pc, #180]	; (84e40 <_svfprintf_r+0xb80>)
   84d8c:	4403      	add	r3, r0
   84d8e:	4404      	add	r4, r0
   84d90:	2b07      	cmp	r3, #7
   84d92:	9427      	str	r4, [sp, #156]	; 0x9c
   84d94:	9326      	str	r3, [sp, #152]	; 0x98
   84d96:	f8c8 0004 	str.w	r0, [r8, #4]
   84d9a:	f8c8 2000 	str.w	r2, [r8]
   84d9e:	f340 82d8 	ble.w	85352 <_svfprintf_r+0x1092>
   84da2:	aa25      	add	r2, sp, #148	; 0x94
   84da4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84da6:	980c      	ldr	r0, [sp, #48]	; 0x30
   84da8:	f002 fb8e 	bl	874c8 <__ssprint_r>
   84dac:	2800      	cmp	r0, #0
   84dae:	f47f ab64 	bne.w	8447a <_svfprintf_r+0x1ba>
   84db2:	46c8      	mov	r8, r9
   84db4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84db6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84db8:	b929      	cbnz	r1, 84dc6 <_svfprintf_r+0xb06>
   84dba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84dbc:	b91b      	cbnz	r3, 84dc6 <_svfprintf_r+0xb06>
   84dbe:	9b07      	ldr	r3, [sp, #28]
   84dc0:	07d8      	lsls	r0, r3, #31
   84dc2:	f57f ac6f 	bpl.w	846a4 <_svfprintf_r+0x3e4>
   84dc6:	9819      	ldr	r0, [sp, #100]	; 0x64
   84dc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84dca:	4602      	mov	r2, r0
   84dcc:	3301      	adds	r3, #1
   84dce:	4422      	add	r2, r4
   84dd0:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   84dd2:	2b07      	cmp	r3, #7
   84dd4:	9227      	str	r2, [sp, #156]	; 0x9c
   84dd6:	f8c8 4000 	str.w	r4, [r8]
   84dda:	f8c8 0004 	str.w	r0, [r8, #4]
   84dde:	9326      	str	r3, [sp, #152]	; 0x98
   84de0:	f300 8431 	bgt.w	85646 <_svfprintf_r+0x1386>
   84de4:	f108 0808 	add.w	r8, r8, #8
   84de8:	2900      	cmp	r1, #0
   84dea:	f2c0 8409 	blt.w	85600 <_svfprintf_r+0x1340>
   84dee:	9913      	ldr	r1, [sp, #76]	; 0x4c
   84df0:	3301      	adds	r3, #1
   84df2:	188c      	adds	r4, r1, r2
   84df4:	2b07      	cmp	r3, #7
   84df6:	9427      	str	r4, [sp, #156]	; 0x9c
   84df8:	9326      	str	r3, [sp, #152]	; 0x98
   84dfa:	f8c8 6000 	str.w	r6, [r8]
   84dfe:	f8c8 1004 	str.w	r1, [r8, #4]
   84e02:	f77f ac4d 	ble.w	846a0 <_svfprintf_r+0x3e0>
   84e06:	aa25      	add	r2, sp, #148	; 0x94
   84e08:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84e0a:	980c      	ldr	r0, [sp, #48]	; 0x30
   84e0c:	f002 fb5c 	bl	874c8 <__ssprint_r>
   84e10:	2800      	cmp	r0, #0
   84e12:	f47f ab32 	bne.w	8447a <_svfprintf_r+0x1ba>
   84e16:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84e18:	46c8      	mov	r8, r9
   84e1a:	e443      	b.n	846a4 <_svfprintf_r+0x3e4>
   84e1c:	aa25      	add	r2, sp, #148	; 0x94
   84e1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84e20:	980c      	ldr	r0, [sp, #48]	; 0x30
   84e22:	f002 fb51 	bl	874c8 <__ssprint_r>
   84e26:	2800      	cmp	r0, #0
   84e28:	f47f ab27 	bne.w	8447a <_svfprintf_r+0x1ba>
   84e2c:	46c8      	mov	r8, r9
   84e2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84e30:	f7ff bbe5 	b.w	845fe <_svfprintf_r+0x33e>
   84e34:	2400      	movs	r4, #0
   84e36:	2500      	movs	r5, #0
   84e38:	f8cd b01c 	str.w	fp, [sp, #28]
   84e3c:	4649      	mov	r1, r9
   84e3e:	e004      	b.n	84e4a <_svfprintf_r+0xb8a>
   84e40:	000898bc 	.word	0x000898bc
   84e44:	000898d0 	.word	0x000898d0
   84e48:	4631      	mov	r1, r6
   84e4a:	08e2      	lsrs	r2, r4, #3
   84e4c:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   84e50:	08e8      	lsrs	r0, r5, #3
   84e52:	f004 0307 	and.w	r3, r4, #7
   84e56:	4605      	mov	r5, r0
   84e58:	4614      	mov	r4, r2
   84e5a:	3330      	adds	r3, #48	; 0x30
   84e5c:	ea54 0205 	orrs.w	r2, r4, r5
   84e60:	f801 3c01 	strb.w	r3, [r1, #-1]
   84e64:	f101 36ff 	add.w	r6, r1, #4294967295
   84e68:	d1ee      	bne.n	84e48 <_svfprintf_r+0xb88>
   84e6a:	9a07      	ldr	r2, [sp, #28]
   84e6c:	07d2      	lsls	r2, r2, #31
   84e6e:	f57f ad59 	bpl.w	84924 <_svfprintf_r+0x664>
   84e72:	2b30      	cmp	r3, #48	; 0x30
   84e74:	f43f ad56 	beq.w	84924 <_svfprintf_r+0x664>
   84e78:	2330      	movs	r3, #48	; 0x30
   84e7a:	3902      	subs	r1, #2
   84e7c:	f806 3c01 	strb.w	r3, [r6, #-1]
   84e80:	eba9 0301 	sub.w	r3, r9, r1
   84e84:	930e      	str	r3, [sp, #56]	; 0x38
   84e86:	460e      	mov	r6, r1
   84e88:	f7ff bb36 	b.w	844f8 <_svfprintf_r+0x238>
   84e8c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   84e8e:	2900      	cmp	r1, #0
   84e90:	f77f af79 	ble.w	84d86 <_svfprintf_r+0xac6>
   84e94:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84e96:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84e98:	4293      	cmp	r3, r2
   84e9a:	bfa8      	it	ge
   84e9c:	4613      	movge	r3, r2
   84e9e:	2b00      	cmp	r3, #0
   84ea0:	461f      	mov	r7, r3
   84ea2:	dd0b      	ble.n	84ebc <_svfprintf_r+0xbfc>
   84ea4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84ea6:	443c      	add	r4, r7
   84ea8:	3301      	adds	r3, #1
   84eaa:	2b07      	cmp	r3, #7
   84eac:	9427      	str	r4, [sp, #156]	; 0x9c
   84eae:	e888 00c0 	stmia.w	r8, {r6, r7}
   84eb2:	9326      	str	r3, [sp, #152]	; 0x98
   84eb4:	f300 82fb 	bgt.w	854ae <_svfprintf_r+0x11ee>
   84eb8:	f108 0808 	add.w	r8, r8, #8
   84ebc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84ebe:	2f00      	cmp	r7, #0
   84ec0:	bfa8      	it	ge
   84ec2:	1bdb      	subge	r3, r3, r7
   84ec4:	2b00      	cmp	r3, #0
   84ec6:	461f      	mov	r7, r3
   84ec8:	f340 80d7 	ble.w	8507a <_svfprintf_r+0xdba>
   84ecc:	2b10      	cmp	r3, #16
   84ece:	f340 8434 	ble.w	8573a <_svfprintf_r+0x147a>
   84ed2:	4dba      	ldr	r5, [pc, #744]	; (851bc <_svfprintf_r+0xefc>)
   84ed4:	4642      	mov	r2, r8
   84ed6:	4621      	mov	r1, r4
   84ed8:	46b0      	mov	r8, r6
   84eda:	f04f 0b10 	mov.w	fp, #16
   84ede:	462e      	mov	r6, r5
   84ee0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84ee2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84ee4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84ee6:	e004      	b.n	84ef2 <_svfprintf_r+0xc32>
   84ee8:	3208      	adds	r2, #8
   84eea:	3f10      	subs	r7, #16
   84eec:	2f10      	cmp	r7, #16
   84eee:	f340 80b5 	ble.w	8505c <_svfprintf_r+0xd9c>
   84ef2:	3301      	adds	r3, #1
   84ef4:	3110      	adds	r1, #16
   84ef6:	2b07      	cmp	r3, #7
   84ef8:	9127      	str	r1, [sp, #156]	; 0x9c
   84efa:	9326      	str	r3, [sp, #152]	; 0x98
   84efc:	e882 0840 	stmia.w	r2, {r6, fp}
   84f00:	ddf2      	ble.n	84ee8 <_svfprintf_r+0xc28>
   84f02:	aa25      	add	r2, sp, #148	; 0x94
   84f04:	4629      	mov	r1, r5
   84f06:	4620      	mov	r0, r4
   84f08:	f002 fade 	bl	874c8 <__ssprint_r>
   84f0c:	2800      	cmp	r0, #0
   84f0e:	f47f aab4 	bne.w	8447a <_svfprintf_r+0x1ba>
   84f12:	464a      	mov	r2, r9
   84f14:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84f16:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84f18:	e7e7      	b.n	84eea <_svfprintf_r+0xc2a>
   84f1a:	2d00      	cmp	r5, #0
   84f1c:	bf08      	it	eq
   84f1e:	2c0a      	cmpeq	r4, #10
   84f20:	f0c0 8090 	bcc.w	85044 <_svfprintf_r+0xd84>
   84f24:	464e      	mov	r6, r9
   84f26:	4620      	mov	r0, r4
   84f28:	4629      	mov	r1, r5
   84f2a:	220a      	movs	r2, #10
   84f2c:	2300      	movs	r3, #0
   84f2e:	f003 fbc7 	bl	886c0 <__aeabi_uldivmod>
   84f32:	3230      	adds	r2, #48	; 0x30
   84f34:	f806 2d01 	strb.w	r2, [r6, #-1]!
   84f38:	4620      	mov	r0, r4
   84f3a:	4629      	mov	r1, r5
   84f3c:	2300      	movs	r3, #0
   84f3e:	220a      	movs	r2, #10
   84f40:	f003 fbbe 	bl	886c0 <__aeabi_uldivmod>
   84f44:	4604      	mov	r4, r0
   84f46:	460d      	mov	r5, r1
   84f48:	ea54 0305 	orrs.w	r3, r4, r5
   84f4c:	d1eb      	bne.n	84f26 <_svfprintf_r+0xc66>
   84f4e:	eba9 0306 	sub.w	r3, r9, r6
   84f52:	930e      	str	r3, [sp, #56]	; 0x38
   84f54:	f7ff bad0 	b.w	844f8 <_svfprintf_r+0x238>
   84f58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84f5a:	464e      	mov	r6, r9
   84f5c:	930e      	str	r3, [sp, #56]	; 0x38
   84f5e:	f7ff bacb 	b.w	844f8 <_svfprintf_r+0x238>
   84f62:	1e5e      	subs	r6, r3, #1
   84f64:	2e00      	cmp	r6, #0
   84f66:	f77f aeca 	ble.w	84cfe <_svfprintf_r+0xa3e>
   84f6a:	2e10      	cmp	r6, #16
   84f6c:	f340 83e3 	ble.w	85736 <_svfprintf_r+0x1476>
   84f70:	4622      	mov	r2, r4
   84f72:	f04f 0b10 	mov.w	fp, #16
   84f76:	4d91      	ldr	r5, [pc, #580]	; (851bc <_svfprintf_r+0xefc>)
   84f78:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84f7a:	e004      	b.n	84f86 <_svfprintf_r+0xcc6>
   84f7c:	3e10      	subs	r6, #16
   84f7e:	2e10      	cmp	r6, #16
   84f80:	f108 0808 	add.w	r8, r8, #8
   84f84:	dd15      	ble.n	84fb2 <_svfprintf_r+0xcf2>
   84f86:	3701      	adds	r7, #1
   84f88:	3210      	adds	r2, #16
   84f8a:	2f07      	cmp	r7, #7
   84f8c:	9227      	str	r2, [sp, #156]	; 0x9c
   84f8e:	9726      	str	r7, [sp, #152]	; 0x98
   84f90:	e888 0820 	stmia.w	r8, {r5, fp}
   84f94:	ddf2      	ble.n	84f7c <_svfprintf_r+0xcbc>
   84f96:	aa25      	add	r2, sp, #148	; 0x94
   84f98:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f9a:	4620      	mov	r0, r4
   84f9c:	f002 fa94 	bl	874c8 <__ssprint_r>
   84fa0:	2800      	cmp	r0, #0
   84fa2:	f47f aa6a 	bne.w	8447a <_svfprintf_r+0x1ba>
   84fa6:	3e10      	subs	r6, #16
   84fa8:	2e10      	cmp	r6, #16
   84faa:	46c8      	mov	r8, r9
   84fac:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84fae:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84fb0:	dce9      	bgt.n	84f86 <_svfprintf_r+0xcc6>
   84fb2:	4614      	mov	r4, r2
   84fb4:	3701      	adds	r7, #1
   84fb6:	4434      	add	r4, r6
   84fb8:	2f07      	cmp	r7, #7
   84fba:	9427      	str	r4, [sp, #156]	; 0x9c
   84fbc:	9726      	str	r7, [sp, #152]	; 0x98
   84fbe:	e888 0060 	stmia.w	r8, {r5, r6}
   84fc2:	f77f ae9a 	ble.w	84cfa <_svfprintf_r+0xa3a>
   84fc6:	aa25      	add	r2, sp, #148	; 0x94
   84fc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84fca:	980c      	ldr	r0, [sp, #48]	; 0x30
   84fcc:	f002 fa7c 	bl	874c8 <__ssprint_r>
   84fd0:	2800      	cmp	r0, #0
   84fd2:	f47f aa52 	bne.w	8447a <_svfprintf_r+0x1ba>
   84fd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84fd8:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84fda:	46c8      	mov	r8, r9
   84fdc:	e68f      	b.n	84cfe <_svfprintf_r+0xa3e>
   84fde:	3204      	adds	r2, #4
   84fe0:	681c      	ldr	r4, [r3, #0]
   84fe2:	2500      	movs	r5, #0
   84fe4:	2301      	movs	r3, #1
   84fe6:	920f      	str	r2, [sp, #60]	; 0x3c
   84fe8:	f7ff ba68 	b.w	844bc <_svfprintf_r+0x1fc>
   84fec:	681c      	ldr	r4, [r3, #0]
   84fee:	3304      	adds	r3, #4
   84ff0:	930f      	str	r3, [sp, #60]	; 0x3c
   84ff2:	2500      	movs	r5, #0
   84ff4:	e42a      	b.n	8484c <_svfprintf_r+0x58c>
   84ff6:	681c      	ldr	r4, [r3, #0]
   84ff8:	3304      	adds	r3, #4
   84ffa:	17e5      	asrs	r5, r4, #31
   84ffc:	4622      	mov	r2, r4
   84ffe:	930f      	str	r3, [sp, #60]	; 0x3c
   85000:	462b      	mov	r3, r5
   85002:	2a00      	cmp	r2, #0
   85004:	f173 0300 	sbcs.w	r3, r3, #0
   85008:	f6bf ac68 	bge.w	848dc <_svfprintf_r+0x61c>
   8500c:	272d      	movs	r7, #45	; 0x2d
   8500e:	4264      	negs	r4, r4
   85010:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   85014:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   85018:	2301      	movs	r3, #1
   8501a:	f7ff ba53 	b.w	844c4 <_svfprintf_r+0x204>
   8501e:	990f      	ldr	r1, [sp, #60]	; 0x3c
   85020:	2500      	movs	r5, #0
   85022:	460a      	mov	r2, r1
   85024:	3204      	adds	r2, #4
   85026:	680c      	ldr	r4, [r1, #0]
   85028:	920f      	str	r2, [sp, #60]	; 0x3c
   8502a:	f7ff ba47 	b.w	844bc <_svfprintf_r+0x1fc>
   8502e:	4614      	mov	r4, r2
   85030:	3301      	adds	r3, #1
   85032:	4434      	add	r4, r6
   85034:	2b07      	cmp	r3, #7
   85036:	9427      	str	r4, [sp, #156]	; 0x9c
   85038:	9326      	str	r3, [sp, #152]	; 0x98
   8503a:	e888 0060 	stmia.w	r8, {r5, r6}
   8503e:	f77f ab2f 	ble.w	846a0 <_svfprintf_r+0x3e0>
   85042:	e6e0      	b.n	84e06 <_svfprintf_r+0xb46>
   85044:	f8dd b01c 	ldr.w	fp, [sp, #28]
   85048:	2301      	movs	r3, #1
   8504a:	ae42      	add	r6, sp, #264	; 0x108
   8504c:	3430      	adds	r4, #48	; 0x30
   8504e:	f8cd b01c 	str.w	fp, [sp, #28]
   85052:	f806 4d41 	strb.w	r4, [r6, #-65]!
   85056:	930e      	str	r3, [sp, #56]	; 0x38
   85058:	f7ff ba4e 	b.w	844f8 <_svfprintf_r+0x238>
   8505c:	4635      	mov	r5, r6
   8505e:	460c      	mov	r4, r1
   85060:	4646      	mov	r6, r8
   85062:	4690      	mov	r8, r2
   85064:	3301      	adds	r3, #1
   85066:	443c      	add	r4, r7
   85068:	2b07      	cmp	r3, #7
   8506a:	9427      	str	r4, [sp, #156]	; 0x9c
   8506c:	9326      	str	r3, [sp, #152]	; 0x98
   8506e:	e888 00a0 	stmia.w	r8, {r5, r7}
   85072:	f300 8246 	bgt.w	85502 <_svfprintf_r+0x1242>
   85076:	f108 0808 	add.w	r8, r8, #8
   8507a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8507c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8507e:	429a      	cmp	r2, r3
   85080:	db45      	blt.n	8510e <_svfprintf_r+0xe4e>
   85082:	9b07      	ldr	r3, [sp, #28]
   85084:	07d9      	lsls	r1, r3, #31
   85086:	d442      	bmi.n	8510e <_svfprintf_r+0xe4e>
   85088:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8508a:	9812      	ldr	r0, [sp, #72]	; 0x48
   8508c:	1a9a      	subs	r2, r3, r2
   8508e:	1a1d      	subs	r5, r3, r0
   85090:	4295      	cmp	r5, r2
   85092:	bfa8      	it	ge
   85094:	4615      	movge	r5, r2
   85096:	2d00      	cmp	r5, #0
   85098:	dd0e      	ble.n	850b8 <_svfprintf_r+0xdf8>
   8509a:	9926      	ldr	r1, [sp, #152]	; 0x98
   8509c:	4406      	add	r6, r0
   8509e:	3101      	adds	r1, #1
   850a0:	442c      	add	r4, r5
   850a2:	2907      	cmp	r1, #7
   850a4:	f8c8 6000 	str.w	r6, [r8]
   850a8:	9427      	str	r4, [sp, #156]	; 0x9c
   850aa:	f8c8 5004 	str.w	r5, [r8, #4]
   850ae:	9126      	str	r1, [sp, #152]	; 0x98
   850b0:	f300 8216 	bgt.w	854e0 <_svfprintf_r+0x1220>
   850b4:	f108 0808 	add.w	r8, r8, #8
   850b8:	2d00      	cmp	r5, #0
   850ba:	bfb4      	ite	lt
   850bc:	4616      	movlt	r6, r2
   850be:	1b56      	subge	r6, r2, r5
   850c0:	2e00      	cmp	r6, #0
   850c2:	f77f aaef 	ble.w	846a4 <_svfprintf_r+0x3e4>
   850c6:	2e10      	cmp	r6, #16
   850c8:	f340 82f3 	ble.w	856b2 <_svfprintf_r+0x13f2>
   850cc:	4622      	mov	r2, r4
   850ce:	2710      	movs	r7, #16
   850d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   850d2:	4d3a      	ldr	r5, [pc, #232]	; (851bc <_svfprintf_r+0xefc>)
   850d4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   850d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   850da:	e004      	b.n	850e6 <_svfprintf_r+0xe26>
   850dc:	f108 0808 	add.w	r8, r8, #8
   850e0:	3e10      	subs	r6, #16
   850e2:	2e10      	cmp	r6, #16
   850e4:	dda3      	ble.n	8502e <_svfprintf_r+0xd6e>
   850e6:	3301      	adds	r3, #1
   850e8:	3210      	adds	r2, #16
   850ea:	2b07      	cmp	r3, #7
   850ec:	9227      	str	r2, [sp, #156]	; 0x9c
   850ee:	9326      	str	r3, [sp, #152]	; 0x98
   850f0:	e888 00a0 	stmia.w	r8, {r5, r7}
   850f4:	ddf2      	ble.n	850dc <_svfprintf_r+0xe1c>
   850f6:	aa25      	add	r2, sp, #148	; 0x94
   850f8:	4621      	mov	r1, r4
   850fa:	4658      	mov	r0, fp
   850fc:	f002 f9e4 	bl	874c8 <__ssprint_r>
   85100:	2800      	cmp	r0, #0
   85102:	f47f a9ba 	bne.w	8447a <_svfprintf_r+0x1ba>
   85106:	46c8      	mov	r8, r9
   85108:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8510a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8510c:	e7e8      	b.n	850e0 <_svfprintf_r+0xe20>
   8510e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85110:	9819      	ldr	r0, [sp, #100]	; 0x64
   85112:	3301      	adds	r3, #1
   85114:	991a      	ldr	r1, [sp, #104]	; 0x68
   85116:	4404      	add	r4, r0
   85118:	2b07      	cmp	r3, #7
   8511a:	9427      	str	r4, [sp, #156]	; 0x9c
   8511c:	f8c8 1000 	str.w	r1, [r8]
   85120:	f8c8 0004 	str.w	r0, [r8, #4]
   85124:	9326      	str	r3, [sp, #152]	; 0x98
   85126:	f300 81cf 	bgt.w	854c8 <_svfprintf_r+0x1208>
   8512a:	f108 0808 	add.w	r8, r8, #8
   8512e:	e7ab      	b.n	85088 <_svfprintf_r+0xdc8>
   85130:	9b07      	ldr	r3, [sp, #28]
   85132:	07da      	lsls	r2, r3, #31
   85134:	f53f adad 	bmi.w	84c92 <_svfprintf_r+0x9d2>
   85138:	2301      	movs	r3, #1
   8513a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8513c:	441c      	add	r4, r3
   8513e:	441f      	add	r7, r3
   85140:	2f07      	cmp	r7, #7
   85142:	9427      	str	r4, [sp, #156]	; 0x9c
   85144:	f8c8 6000 	str.w	r6, [r8]
   85148:	9726      	str	r7, [sp, #152]	; 0x98
   8514a:	f8c8 3004 	str.w	r3, [r8, #4]
   8514e:	f77f add4 	ble.w	84cfa <_svfprintf_r+0xa3a>
   85152:	aa25      	add	r2, sp, #148	; 0x94
   85154:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85156:	980c      	ldr	r0, [sp, #48]	; 0x30
   85158:	f002 f9b6 	bl	874c8 <__ssprint_r>
   8515c:	2800      	cmp	r0, #0
   8515e:	f47f a98c 	bne.w	8447a <_svfprintf_r+0x1ba>
   85162:	46c8      	mov	r8, r9
   85164:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85166:	9f26      	ldr	r7, [sp, #152]	; 0x98
   85168:	e5c9      	b.n	84cfe <_svfprintf_r+0xa3e>
   8516a:	aa25      	add	r2, sp, #148	; 0x94
   8516c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8516e:	980c      	ldr	r0, [sp, #48]	; 0x30
   85170:	f002 f9aa 	bl	874c8 <__ssprint_r>
   85174:	2800      	cmp	r0, #0
   85176:	f47f a980 	bne.w	8447a <_svfprintf_r+0x1ba>
   8517a:	46c8      	mov	r8, r9
   8517c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8517e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   85180:	e596      	b.n	84cb0 <_svfprintf_r+0x9f0>
   85182:	aa25      	add	r2, sp, #148	; 0x94
   85184:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85186:	980c      	ldr	r0, [sp, #48]	; 0x30
   85188:	f002 f99e 	bl	874c8 <__ssprint_r>
   8518c:	2800      	cmp	r0, #0
   8518e:	f47f a974 	bne.w	8447a <_svfprintf_r+0x1ba>
   85192:	46c8      	mov	r8, r9
   85194:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85196:	9f26      	ldr	r7, [sp, #152]	; 0x98
   85198:	e599      	b.n	84cce <_svfprintf_r+0xa0e>
   8519a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8519c:	3407      	adds	r4, #7
   8519e:	f024 0407 	bic.w	r4, r4, #7
   851a2:	f104 0108 	add.w	r1, r4, #8
   851a6:	e9d4 2300 	ldrd	r2, r3, [r4]
   851aa:	910f      	str	r1, [sp, #60]	; 0x3c
   851ac:	4614      	mov	r4, r2
   851ae:	461d      	mov	r5, r3
   851b0:	f7ff bb8f 	b.w	848d2 <_svfprintf_r+0x612>
   851b4:	464e      	mov	r6, r9
   851b6:	f7ff b99f 	b.w	844f8 <_svfprintf_r+0x238>
   851ba:	bf00      	nop
   851bc:	000898d0 	.word	0x000898d0
   851c0:	aa25      	add	r2, sp, #148	; 0x94
   851c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   851c4:	980c      	ldr	r0, [sp, #48]	; 0x30
   851c6:	f002 f97f 	bl	874c8 <__ssprint_r>
   851ca:	2800      	cmp	r0, #0
   851cc:	f47f a955 	bne.w	8447a <_svfprintf_r+0x1ba>
   851d0:	46c8      	mov	r8, r9
   851d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   851d4:	f7ff ba16 	b.w	84604 <_svfprintf_r+0x344>
   851d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
   851da:	4622      	mov	r2, r4
   851dc:	4620      	mov	r0, r4
   851de:	9c14      	ldr	r4, [sp, #80]	; 0x50
   851e0:	4623      	mov	r3, r4
   851e2:	4621      	mov	r1, r4
   851e4:	f003 fa2e 	bl	88644 <__aeabi_dcmpun>
   851e8:	2800      	cmp	r0, #0
   851ea:	f040 8273 	bne.w	856d4 <_svfprintf_r+0x1414>
   851ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   851f0:	3301      	adds	r3, #1
   851f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   851f4:	f023 0320 	bic.w	r3, r3, #32
   851f8:	930e      	str	r3, [sp, #56]	; 0x38
   851fa:	f000 819c 	beq.w	85536 <_svfprintf_r+0x1276>
   851fe:	2b47      	cmp	r3, #71	; 0x47
   85200:	f000 80d6 	beq.w	853b0 <_svfprintf_r+0x10f0>
   85204:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   85208:	9307      	str	r3, [sp, #28]
   8520a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8520c:	1e1f      	subs	r7, r3, #0
   8520e:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85210:	9308      	str	r3, [sp, #32]
   85212:	bfb7      	itett	lt
   85214:	463b      	movlt	r3, r7
   85216:	2300      	movge	r3, #0
   85218:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   8521c:	232d      	movlt	r3, #45	; 0x2d
   8521e:	9310      	str	r3, [sp, #64]	; 0x40
   85220:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85222:	2b66      	cmp	r3, #102	; 0x66
   85224:	f000 8190 	beq.w	85548 <_svfprintf_r+0x1288>
   85228:	2b46      	cmp	r3, #70	; 0x46
   8522a:	f000 80a4 	beq.w	85376 <_svfprintf_r+0x10b6>
   8522e:	2002      	movs	r0, #2
   85230:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85232:	a923      	add	r1, sp, #140	; 0x8c
   85234:	2b45      	cmp	r3, #69	; 0x45
   85236:	bf0a      	itet	eq
   85238:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   8523a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8523c:	1c5d      	addeq	r5, r3, #1
   8523e:	e88d 0021 	stmia.w	sp, {r0, r5}
   85242:	9104      	str	r1, [sp, #16]
   85244:	a820      	add	r0, sp, #128	; 0x80
   85246:	a91f      	add	r1, sp, #124	; 0x7c
   85248:	463b      	mov	r3, r7
   8524a:	9003      	str	r0, [sp, #12]
   8524c:	9a08      	ldr	r2, [sp, #32]
   8524e:	9102      	str	r1, [sp, #8]
   85250:	980c      	ldr	r0, [sp, #48]	; 0x30
   85252:	f000 fb59 	bl	85908 <_dtoa_r>
   85256:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85258:	4606      	mov	r6, r0
   8525a:	2b67      	cmp	r3, #103	; 0x67
   8525c:	f040 81ba 	bne.w	855d4 <_svfprintf_r+0x1314>
   85260:	f01b 0f01 	tst.w	fp, #1
   85264:	f000 8223 	beq.w	856ae <_svfprintf_r+0x13ee>
   85268:	1974      	adds	r4, r6, r5
   8526a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8526c:	9808      	ldr	r0, [sp, #32]
   8526e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   85270:	4639      	mov	r1, r7
   85272:	f003 f9b5 	bl	885e0 <__aeabi_dcmpeq>
   85276:	2800      	cmp	r0, #0
   85278:	f040 8124 	bne.w	854c4 <_svfprintf_r+0x1204>
   8527c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8527e:	42a3      	cmp	r3, r4
   85280:	d206      	bcs.n	85290 <_svfprintf_r+0xfd0>
   85282:	2130      	movs	r1, #48	; 0x30
   85284:	1c5a      	adds	r2, r3, #1
   85286:	9223      	str	r2, [sp, #140]	; 0x8c
   85288:	7019      	strb	r1, [r3, #0]
   8528a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8528c:	429c      	cmp	r4, r3
   8528e:	d8f9      	bhi.n	85284 <_svfprintf_r+0xfc4>
   85290:	1b9b      	subs	r3, r3, r6
   85292:	9313      	str	r3, [sp, #76]	; 0x4c
   85294:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85296:	2b47      	cmp	r3, #71	; 0x47
   85298:	f000 80a2 	beq.w	853e0 <_svfprintf_r+0x1120>
   8529c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8529e:	2b65      	cmp	r3, #101	; 0x65
   852a0:	f340 81a7 	ble.w	855f2 <_svfprintf_r+0x1332>
   852a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   852a6:	2b66      	cmp	r3, #102	; 0x66
   852a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   852aa:	9312      	str	r3, [sp, #72]	; 0x48
   852ac:	f000 8171 	beq.w	85592 <_svfprintf_r+0x12d2>
   852b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   852b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   852b4:	4619      	mov	r1, r3
   852b6:	4291      	cmp	r1, r2
   852b8:	f300 815d 	bgt.w	85576 <_svfprintf_r+0x12b6>
   852bc:	f01b 0f01 	tst.w	fp, #1
   852c0:	f040 81f0 	bne.w	856a4 <_svfprintf_r+0x13e4>
   852c4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   852c8:	9308      	str	r3, [sp, #32]
   852ca:	2367      	movs	r3, #103	; 0x67
   852cc:	920e      	str	r2, [sp, #56]	; 0x38
   852ce:	9311      	str	r3, [sp, #68]	; 0x44
   852d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   852d2:	2b00      	cmp	r3, #0
   852d4:	d17d      	bne.n	853d2 <_svfprintf_r+0x1112>
   852d6:	930a      	str	r3, [sp, #40]	; 0x28
   852d8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   852dc:	f7ff b914 	b.w	84508 <_svfprintf_r+0x248>
   852e0:	f024 0407 	bic.w	r4, r4, #7
   852e4:	6823      	ldr	r3, [r4, #0]
   852e6:	9315      	str	r3, [sp, #84]	; 0x54
   852e8:	6863      	ldr	r3, [r4, #4]
   852ea:	9314      	str	r3, [sp, #80]	; 0x50
   852ec:	f104 0308 	add.w	r3, r4, #8
   852f0:	930f      	str	r3, [sp, #60]	; 0x3c
   852f2:	f7ff bb2f 	b.w	84954 <_svfprintf_r+0x694>
   852f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   852f8:	6813      	ldr	r3, [r2, #0]
   852fa:	3204      	adds	r2, #4
   852fc:	920f      	str	r2, [sp, #60]	; 0x3c
   852fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
   85300:	601a      	str	r2, [r3, #0]
   85302:	f7ff b804 	b.w	8430e <_svfprintf_r+0x4e>
   85306:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85308:	4daf      	ldr	r5, [pc, #700]	; (855c8 <_svfprintf_r+0x1308>)
   8530a:	f7ff b9ad 	b.w	84668 <_svfprintf_r+0x3a8>
   8530e:	aa25      	add	r2, sp, #148	; 0x94
   85310:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85312:	980c      	ldr	r0, [sp, #48]	; 0x30
   85314:	f002 f8d8 	bl	874c8 <__ssprint_r>
   85318:	2800      	cmp	r0, #0
   8531a:	f47f a8ae 	bne.w	8447a <_svfprintf_r+0x1ba>
   8531e:	46c8      	mov	r8, r9
   85320:	e431      	b.n	84b86 <_svfprintf_r+0x8c6>
   85322:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85324:	4613      	mov	r3, r2
   85326:	3304      	adds	r3, #4
   85328:	930f      	str	r3, [sp, #60]	; 0x3c
   8532a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8532c:	6811      	ldr	r1, [r2, #0]
   8532e:	17dd      	asrs	r5, r3, #31
   85330:	461a      	mov	r2, r3
   85332:	462b      	mov	r3, r5
   85334:	e9c1 2300 	strd	r2, r3, [r1]
   85338:	f7fe bfe9 	b.w	8430e <_svfprintf_r+0x4e>
   8533c:	aa25      	add	r2, sp, #148	; 0x94
   8533e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85340:	980c      	ldr	r0, [sp, #48]	; 0x30
   85342:	f002 f8c1 	bl	874c8 <__ssprint_r>
   85346:	2800      	cmp	r0, #0
   85348:	f47f a897 	bne.w	8447a <_svfprintf_r+0x1ba>
   8534c:	46c8      	mov	r8, r9
   8534e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85350:	e432      	b.n	84bb8 <_svfprintf_r+0x8f8>
   85352:	f108 0808 	add.w	r8, r8, #8
   85356:	e52f      	b.n	84db8 <_svfprintf_r+0xaf8>
   85358:	2140      	movs	r1, #64	; 0x40
   8535a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8535c:	f001 fa26 	bl	867ac <_malloc_r>
   85360:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85362:	6010      	str	r0, [r2, #0]
   85364:	6110      	str	r0, [r2, #16]
   85366:	2800      	cmp	r0, #0
   85368:	f000 8214 	beq.w	85794 <_svfprintf_r+0x14d4>
   8536c:	2340      	movs	r3, #64	; 0x40
   8536e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85370:	6153      	str	r3, [r2, #20]
   85372:	f7fe bfbc 	b.w	842ee <_svfprintf_r+0x2e>
   85376:	2003      	movs	r0, #3
   85378:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8537a:	a923      	add	r1, sp, #140	; 0x8c
   8537c:	e88d 0011 	stmia.w	sp, {r0, r4}
   85380:	9104      	str	r1, [sp, #16]
   85382:	a820      	add	r0, sp, #128	; 0x80
   85384:	a91f      	add	r1, sp, #124	; 0x7c
   85386:	9003      	str	r0, [sp, #12]
   85388:	9a08      	ldr	r2, [sp, #32]
   8538a:	463b      	mov	r3, r7
   8538c:	9102      	str	r1, [sp, #8]
   8538e:	980c      	ldr	r0, [sp, #48]	; 0x30
   85390:	f000 faba 	bl	85908 <_dtoa_r>
   85394:	4625      	mov	r5, r4
   85396:	4606      	mov	r6, r0
   85398:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8539a:	1974      	adds	r4, r6, r5
   8539c:	2b46      	cmp	r3, #70	; 0x46
   8539e:	f47f af64 	bne.w	8526a <_svfprintf_r+0xfaa>
   853a2:	7833      	ldrb	r3, [r6, #0]
   853a4:	2b30      	cmp	r3, #48	; 0x30
   853a6:	f000 8187 	beq.w	856b8 <_svfprintf_r+0x13f8>
   853aa:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   853ac:	442c      	add	r4, r5
   853ae:	e75c      	b.n	8526a <_svfprintf_r+0xfaa>
   853b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   853b2:	2b00      	cmp	r3, #0
   853b4:	bf08      	it	eq
   853b6:	2301      	moveq	r3, #1
   853b8:	930a      	str	r3, [sp, #40]	; 0x28
   853ba:	e723      	b.n	85204 <_svfprintf_r+0xf44>
   853bc:	4630      	mov	r0, r6
   853be:	950a      	str	r5, [sp, #40]	; 0x28
   853c0:	f7fe fe6c 	bl	8409c <strlen>
   853c4:	940f      	str	r4, [sp, #60]	; 0x3c
   853c6:	900e      	str	r0, [sp, #56]	; 0x38
   853c8:	f8cd b01c 	str.w	fp, [sp, #28]
   853cc:	4603      	mov	r3, r0
   853ce:	f7ff b9e7 	b.w	847a0 <_svfprintf_r+0x4e0>
   853d2:	272d      	movs	r7, #45	; 0x2d
   853d4:	2300      	movs	r3, #0
   853d6:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   853da:	930a      	str	r3, [sp, #40]	; 0x28
   853dc:	f7ff b895 	b.w	8450a <_svfprintf_r+0x24a>
   853e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   853e2:	461a      	mov	r2, r3
   853e4:	9312      	str	r3, [sp, #72]	; 0x48
   853e6:	3303      	adds	r3, #3
   853e8:	db04      	blt.n	853f4 <_svfprintf_r+0x1134>
   853ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   853ec:	4619      	mov	r1, r3
   853ee:	4291      	cmp	r1, r2
   853f0:	f6bf af5e 	bge.w	852b0 <_svfprintf_r+0xff0>
   853f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   853f6:	3b02      	subs	r3, #2
   853f8:	9311      	str	r3, [sp, #68]	; 0x44
   853fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
   853fc:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   85400:	3b01      	subs	r3, #1
   85402:	2b00      	cmp	r3, #0
   85404:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   85408:	bfb4      	ite	lt
   8540a:	222d      	movlt	r2, #45	; 0x2d
   8540c:	222b      	movge	r2, #43	; 0x2b
   8540e:	931f      	str	r3, [sp, #124]	; 0x7c
   85410:	bfb8      	it	lt
   85412:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   85414:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   85418:	bfb8      	it	lt
   8541a:	f1c3 0301 	rsblt	r3, r3, #1
   8541e:	2b09      	cmp	r3, #9
   85420:	f340 811f 	ble.w	85662 <_svfprintf_r+0x13a2>
   85424:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   85428:	4601      	mov	r1, r0
   8542a:	4c68      	ldr	r4, [pc, #416]	; (855cc <_svfprintf_r+0x130c>)
   8542c:	e000      	b.n	85430 <_svfprintf_r+0x1170>
   8542e:	4611      	mov	r1, r2
   85430:	fb84 5203 	smull	r5, r2, r4, r3
   85434:	17dd      	asrs	r5, r3, #31
   85436:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   8543a:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   8543e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   85442:	3230      	adds	r2, #48	; 0x30
   85444:	2d09      	cmp	r5, #9
   85446:	f801 2c01 	strb.w	r2, [r1, #-1]
   8544a:	462b      	mov	r3, r5
   8544c:	f101 32ff 	add.w	r2, r1, #4294967295
   85450:	dced      	bgt.n	8542e <_svfprintf_r+0x116e>
   85452:	3330      	adds	r3, #48	; 0x30
   85454:	3902      	subs	r1, #2
   85456:	b2dc      	uxtb	r4, r3
   85458:	4288      	cmp	r0, r1
   8545a:	f802 4c01 	strb.w	r4, [r2, #-1]
   8545e:	f240 8192 	bls.w	85786 <_svfprintf_r+0x14c6>
   85462:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   85466:	4613      	mov	r3, r2
   85468:	e001      	b.n	8546e <_svfprintf_r+0x11ae>
   8546a:	f813 4b01 	ldrb.w	r4, [r3], #1
   8546e:	4283      	cmp	r3, r0
   85470:	f801 4b01 	strb.w	r4, [r1], #1
   85474:	d1f9      	bne.n	8546a <_svfprintf_r+0x11aa>
   85476:	3301      	adds	r3, #1
   85478:	1a9b      	subs	r3, r3, r2
   8547a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   8547e:	4413      	add	r3, r2
   85480:	aa21      	add	r2, sp, #132	; 0x84
   85482:	1a9b      	subs	r3, r3, r2
   85484:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   85486:	931b      	str	r3, [sp, #108]	; 0x6c
   85488:	2a01      	cmp	r2, #1
   8548a:	4413      	add	r3, r2
   8548c:	930e      	str	r3, [sp, #56]	; 0x38
   8548e:	f340 8148 	ble.w	85722 <_svfprintf_r+0x1462>
   85492:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85494:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85496:	4413      	add	r3, r2
   85498:	930e      	str	r3, [sp, #56]	; 0x38
   8549a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8549e:	9308      	str	r3, [sp, #32]
   854a0:	2300      	movs	r3, #0
   854a2:	9312      	str	r3, [sp, #72]	; 0x48
   854a4:	e714      	b.n	852d0 <_svfprintf_r+0x1010>
   854a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   854a8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   854aa:	f7ff b876 	b.w	8459a <_svfprintf_r+0x2da>
   854ae:	aa25      	add	r2, sp, #148	; 0x94
   854b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   854b2:	980c      	ldr	r0, [sp, #48]	; 0x30
   854b4:	f002 f808 	bl	874c8 <__ssprint_r>
   854b8:	2800      	cmp	r0, #0
   854ba:	f47e afde 	bne.w	8447a <_svfprintf_r+0x1ba>
   854be:	46c8      	mov	r8, r9
   854c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   854c2:	e4fb      	b.n	84ebc <_svfprintf_r+0xbfc>
   854c4:	4623      	mov	r3, r4
   854c6:	e6e3      	b.n	85290 <_svfprintf_r+0xfd0>
   854c8:	aa25      	add	r2, sp, #148	; 0x94
   854ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
   854cc:	980c      	ldr	r0, [sp, #48]	; 0x30
   854ce:	f001 fffb 	bl	874c8 <__ssprint_r>
   854d2:	2800      	cmp	r0, #0
   854d4:	f47e afd1 	bne.w	8447a <_svfprintf_r+0x1ba>
   854d8:	46c8      	mov	r8, r9
   854da:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   854dc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   854de:	e5d3      	b.n	85088 <_svfprintf_r+0xdc8>
   854e0:	aa25      	add	r2, sp, #148	; 0x94
   854e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   854e4:	980c      	ldr	r0, [sp, #48]	; 0x30
   854e6:	f001 ffef 	bl	874c8 <__ssprint_r>
   854ea:	2800      	cmp	r0, #0
   854ec:	f47e afc5 	bne.w	8447a <_svfprintf_r+0x1ba>
   854f0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   854f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   854f4:	46c8      	mov	r8, r9
   854f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   854f8:	1a9a      	subs	r2, r3, r2
   854fa:	e5dd      	b.n	850b8 <_svfprintf_r+0xdf8>
   854fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   854fe:	f7ff b8fe 	b.w	846fe <_svfprintf_r+0x43e>
   85502:	aa25      	add	r2, sp, #148	; 0x94
   85504:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85506:	980c      	ldr	r0, [sp, #48]	; 0x30
   85508:	f001 ffde 	bl	874c8 <__ssprint_r>
   8550c:	2800      	cmp	r0, #0
   8550e:	f47e afb4 	bne.w	8447a <_svfprintf_r+0x1ba>
   85512:	46c8      	mov	r8, r9
   85514:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85516:	e5b0      	b.n	8507a <_svfprintf_r+0xdba>
   85518:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8551a:	4637      	mov	r7, r6
   8551c:	2b06      	cmp	r3, #6
   8551e:	bf28      	it	cs
   85520:	2306      	movcs	r3, #6
   85522:	960a      	str	r6, [sp, #40]	; 0x28
   85524:	9612      	str	r6, [sp, #72]	; 0x48
   85526:	9308      	str	r3, [sp, #32]
   85528:	940f      	str	r4, [sp, #60]	; 0x3c
   8552a:	f8cd b01c 	str.w	fp, [sp, #28]
   8552e:	930e      	str	r3, [sp, #56]	; 0x38
   85530:	4e27      	ldr	r6, [pc, #156]	; (855d0 <_svfprintf_r+0x1310>)
   85532:	f7fe bfe9 	b.w	84508 <_svfprintf_r+0x248>
   85536:	2306      	movs	r3, #6
   85538:	930a      	str	r3, [sp, #40]	; 0x28
   8553a:	e663      	b.n	85204 <_svfprintf_r+0xf44>
   8553c:	232d      	movs	r3, #45	; 0x2d
   8553e:	461f      	mov	r7, r3
   85540:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   85544:	f7ff ba28 	b.w	84998 <_svfprintf_r+0x6d8>
   85548:	2003      	movs	r0, #3
   8554a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8554c:	a923      	add	r1, sp, #140	; 0x8c
   8554e:	e88d 0011 	stmia.w	sp, {r0, r4}
   85552:	9104      	str	r1, [sp, #16]
   85554:	a820      	add	r0, sp, #128	; 0x80
   85556:	a91f      	add	r1, sp, #124	; 0x7c
   85558:	9003      	str	r0, [sp, #12]
   8555a:	9a08      	ldr	r2, [sp, #32]
   8555c:	463b      	mov	r3, r7
   8555e:	9102      	str	r1, [sp, #8]
   85560:	980c      	ldr	r0, [sp, #48]	; 0x30
   85562:	f000 f9d1 	bl	85908 <_dtoa_r>
   85566:	4625      	mov	r5, r4
   85568:	4606      	mov	r6, r0
   8556a:	1904      	adds	r4, r0, r4
   8556c:	e719      	b.n	853a2 <_svfprintf_r+0x10e2>
   8556e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85570:	4d15      	ldr	r5, [pc, #84]	; (855c8 <_svfprintf_r+0x1308>)
   85572:	f7ff bb7e 	b.w	84c72 <_svfprintf_r+0x9b2>
   85576:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85578:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8557a:	4413      	add	r3, r2
   8557c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8557e:	930e      	str	r3, [sp, #56]	; 0x38
   85580:	2a00      	cmp	r2, #0
   85582:	f340 80c7 	ble.w	85714 <_svfprintf_r+0x1454>
   85586:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8558a:	9308      	str	r3, [sp, #32]
   8558c:	2367      	movs	r3, #103	; 0x67
   8558e:	9311      	str	r3, [sp, #68]	; 0x44
   85590:	e69e      	b.n	852d0 <_svfprintf_r+0x1010>
   85592:	2b00      	cmp	r3, #0
   85594:	f340 80e1 	ble.w	8575a <_svfprintf_r+0x149a>
   85598:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8559a:	2a00      	cmp	r2, #0
   8559c:	f040 80b0 	bne.w	85700 <_svfprintf_r+0x1440>
   855a0:	f01b 0f01 	tst.w	fp, #1
   855a4:	f040 80ac 	bne.w	85700 <_svfprintf_r+0x1440>
   855a8:	9308      	str	r3, [sp, #32]
   855aa:	930e      	str	r3, [sp, #56]	; 0x38
   855ac:	e690      	b.n	852d0 <_svfprintf_r+0x1010>
   855ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   855b0:	940f      	str	r4, [sp, #60]	; 0x3c
   855b2:	9308      	str	r3, [sp, #32]
   855b4:	930e      	str	r3, [sp, #56]	; 0x38
   855b6:	900a      	str	r0, [sp, #40]	; 0x28
   855b8:	f8cd b01c 	str.w	fp, [sp, #28]
   855bc:	9012      	str	r0, [sp, #72]	; 0x48
   855be:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   855c2:	f7fe bfa1 	b.w	84508 <_svfprintf_r+0x248>
   855c6:	bf00      	nop
   855c8:	000898d0 	.word	0x000898d0
   855cc:	66666667 	.word	0x66666667
   855d0:	000898b4 	.word	0x000898b4
   855d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   855d6:	2b47      	cmp	r3, #71	; 0x47
   855d8:	f47f ae46 	bne.w	85268 <_svfprintf_r+0xfa8>
   855dc:	f01b 0f01 	tst.w	fp, #1
   855e0:	f47f aeda 	bne.w	85398 <_svfprintf_r+0x10d8>
   855e4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   855e6:	1b9b      	subs	r3, r3, r6
   855e8:	9313      	str	r3, [sp, #76]	; 0x4c
   855ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   855ec:	2b47      	cmp	r3, #71	; 0x47
   855ee:	f43f aef7 	beq.w	853e0 <_svfprintf_r+0x1120>
   855f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   855f4:	9312      	str	r3, [sp, #72]	; 0x48
   855f6:	e700      	b.n	853fa <_svfprintf_r+0x113a>
   855f8:	2000      	movs	r0, #0
   855fa:	900a      	str	r0, [sp, #40]	; 0x28
   855fc:	f7fe bebc 	b.w	84378 <_svfprintf_r+0xb8>
   85600:	424f      	negs	r7, r1
   85602:	3110      	adds	r1, #16
   85604:	da35      	bge.n	85672 <_svfprintf_r+0x13b2>
   85606:	2410      	movs	r4, #16
   85608:	4d6a      	ldr	r5, [pc, #424]	; (857b4 <_svfprintf_r+0x14f4>)
   8560a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   8560e:	e004      	b.n	8561a <_svfprintf_r+0x135a>
   85610:	f108 0808 	add.w	r8, r8, #8
   85614:	3f10      	subs	r7, #16
   85616:	2f10      	cmp	r7, #16
   85618:	dd2c      	ble.n	85674 <_svfprintf_r+0x13b4>
   8561a:	3301      	adds	r3, #1
   8561c:	3210      	adds	r2, #16
   8561e:	2b07      	cmp	r3, #7
   85620:	9227      	str	r2, [sp, #156]	; 0x9c
   85622:	9326      	str	r3, [sp, #152]	; 0x98
   85624:	f8c8 5000 	str.w	r5, [r8]
   85628:	f8c8 4004 	str.w	r4, [r8, #4]
   8562c:	ddf0      	ble.n	85610 <_svfprintf_r+0x1350>
   8562e:	aa25      	add	r2, sp, #148	; 0x94
   85630:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85632:	4658      	mov	r0, fp
   85634:	f001 ff48 	bl	874c8 <__ssprint_r>
   85638:	2800      	cmp	r0, #0
   8563a:	f47e af1e 	bne.w	8447a <_svfprintf_r+0x1ba>
   8563e:	46c8      	mov	r8, r9
   85640:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   85642:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85644:	e7e6      	b.n	85614 <_svfprintf_r+0x1354>
   85646:	aa25      	add	r2, sp, #148	; 0x94
   85648:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8564a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8564c:	f001 ff3c 	bl	874c8 <__ssprint_r>
   85650:	2800      	cmp	r0, #0
   85652:	f47e af12 	bne.w	8447a <_svfprintf_r+0x1ba>
   85656:	46c8      	mov	r8, r9
   85658:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8565a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8565c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8565e:	f7ff bbc3 	b.w	84de8 <_svfprintf_r+0xb28>
   85662:	2230      	movs	r2, #48	; 0x30
   85664:	4413      	add	r3, r2
   85666:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   8566a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   8566e:	ab22      	add	r3, sp, #136	; 0x88
   85670:	e706      	b.n	85480 <_svfprintf_r+0x11c0>
   85672:	4d50      	ldr	r5, [pc, #320]	; (857b4 <_svfprintf_r+0x14f4>)
   85674:	3301      	adds	r3, #1
   85676:	443a      	add	r2, r7
   85678:	2b07      	cmp	r3, #7
   8567a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8567e:	9227      	str	r2, [sp, #156]	; 0x9c
   85680:	9326      	str	r3, [sp, #152]	; 0x98
   85682:	f108 0808 	add.w	r8, r8, #8
   85686:	f77f abb2 	ble.w	84dee <_svfprintf_r+0xb2e>
   8568a:	aa25      	add	r2, sp, #148	; 0x94
   8568c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8568e:	980c      	ldr	r0, [sp, #48]	; 0x30
   85690:	f001 ff1a 	bl	874c8 <__ssprint_r>
   85694:	2800      	cmp	r0, #0
   85696:	f47e aef0 	bne.w	8447a <_svfprintf_r+0x1ba>
   8569a:	46c8      	mov	r8, r9
   8569c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8569e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   856a0:	f7ff bba5 	b.w	84dee <_svfprintf_r+0xb2e>
   856a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   856a6:	9a19      	ldr	r2, [sp, #100]	; 0x64
   856a8:	4413      	add	r3, r2
   856aa:	930e      	str	r3, [sp, #56]	; 0x38
   856ac:	e76b      	b.n	85586 <_svfprintf_r+0x12c6>
   856ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   856b0:	e5ee      	b.n	85290 <_svfprintf_r+0xfd0>
   856b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   856b4:	4d3f      	ldr	r5, [pc, #252]	; (857b4 <_svfprintf_r+0x14f4>)
   856b6:	e4bb      	b.n	85030 <_svfprintf_r+0xd70>
   856b8:	9a16      	ldr	r2, [sp, #88]	; 0x58
   856ba:	9808      	ldr	r0, [sp, #32]
   856bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   856be:	4639      	mov	r1, r7
   856c0:	f002 ff8e 	bl	885e0 <__aeabi_dcmpeq>
   856c4:	2800      	cmp	r0, #0
   856c6:	f47f ae70 	bne.w	853aa <_svfprintf_r+0x10ea>
   856ca:	f1c5 0501 	rsb	r5, r5, #1
   856ce:	951f      	str	r5, [sp, #124]	; 0x7c
   856d0:	442c      	add	r4, r5
   856d2:	e5ca      	b.n	8526a <_svfprintf_r+0xfaa>
   856d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   856d6:	4e38      	ldr	r6, [pc, #224]	; (857b8 <_svfprintf_r+0x14f8>)
   856d8:	2b00      	cmp	r3, #0
   856da:	bfbe      	ittt	lt
   856dc:	232d      	movlt	r3, #45	; 0x2d
   856de:	461f      	movlt	r7, r3
   856e0:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   856e4:	f04f 0303 	mov.w	r3, #3
   856e8:	461a      	mov	r2, r3
   856ea:	9308      	str	r3, [sp, #32]
   856ec:	f04f 0300 	mov.w	r3, #0
   856f0:	bfa8      	it	ge
   856f2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   856f6:	4619      	mov	r1, r3
   856f8:	930a      	str	r3, [sp, #40]	; 0x28
   856fa:	4b30      	ldr	r3, [pc, #192]	; (857bc <_svfprintf_r+0x14fc>)
   856fc:	f7ff b954 	b.w	849a8 <_svfprintf_r+0x6e8>
   85700:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85702:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85704:	4413      	add	r3, r2
   85706:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85708:	441a      	add	r2, r3
   8570a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   8570e:	920e      	str	r2, [sp, #56]	; 0x38
   85710:	9308      	str	r3, [sp, #32]
   85712:	e5dd      	b.n	852d0 <_svfprintf_r+0x1010>
   85714:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85716:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   85718:	f1c3 0301 	rsb	r3, r3, #1
   8571c:	441a      	add	r2, r3
   8571e:	4613      	mov	r3, r2
   85720:	e7c3      	b.n	856aa <_svfprintf_r+0x13ea>
   85722:	f01b 0301 	ands.w	r3, fp, #1
   85726:	9312      	str	r3, [sp, #72]	; 0x48
   85728:	f47f aeb3 	bne.w	85492 <_svfprintf_r+0x11d2>
   8572c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8572e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85732:	9308      	str	r3, [sp, #32]
   85734:	e5cc      	b.n	852d0 <_svfprintf_r+0x1010>
   85736:	4d1f      	ldr	r5, [pc, #124]	; (857b4 <_svfprintf_r+0x14f4>)
   85738:	e43c      	b.n	84fb4 <_svfprintf_r+0xcf4>
   8573a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8573c:	4d1d      	ldr	r5, [pc, #116]	; (857b4 <_svfprintf_r+0x14f4>)
   8573e:	e491      	b.n	85064 <_svfprintf_r+0xda4>
   85740:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   85742:	f89a 3001 	ldrb.w	r3, [sl, #1]
   85746:	6828      	ldr	r0, [r5, #0]
   85748:	46a2      	mov	sl, r4
   8574a:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   8574e:	900a      	str	r0, [sp, #40]	; 0x28
   85750:	4628      	mov	r0, r5
   85752:	3004      	adds	r0, #4
   85754:	900f      	str	r0, [sp, #60]	; 0x3c
   85756:	f7fe be0d 	b.w	84374 <_svfprintf_r+0xb4>
   8575a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8575c:	b913      	cbnz	r3, 85764 <_svfprintf_r+0x14a4>
   8575e:	f01b 0f01 	tst.w	fp, #1
   85762:	d002      	beq.n	8576a <_svfprintf_r+0x14aa>
   85764:	9b19      	ldr	r3, [sp, #100]	; 0x64
   85766:	3301      	adds	r3, #1
   85768:	e7cd      	b.n	85706 <_svfprintf_r+0x1446>
   8576a:	2301      	movs	r3, #1
   8576c:	e71c      	b.n	855a8 <_svfprintf_r+0x12e8>
   8576e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85772:	f7ff b980 	b.w	84a76 <_svfprintf_r+0x7b6>
   85776:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8577a:	f7ff b93a 	b.w	849f2 <_svfprintf_r+0x732>
   8577e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85782:	f7ff b84f 	b.w	84824 <_svfprintf_r+0x564>
   85786:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   8578a:	e679      	b.n	85480 <_svfprintf_r+0x11c0>
   8578c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85790:	f7ff b9b2 	b.w	84af8 <_svfprintf_r+0x838>
   85794:	f04f 32ff 	mov.w	r2, #4294967295
   85798:	230c      	movs	r3, #12
   8579a:	9209      	str	r2, [sp, #36]	; 0x24
   8579c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8579e:	6013      	str	r3, [r2, #0]
   857a0:	f7fe be74 	b.w	8448c <_svfprintf_r+0x1cc>
   857a4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   857a8:	f7ff b8c4 	b.w	84934 <_svfprintf_r+0x674>
   857ac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   857b0:	f7ff b878 	b.w	848a4 <_svfprintf_r+0x5e4>
   857b4:	000898d0 	.word	0x000898d0
   857b8:	00089888 	.word	0x00089888
   857bc:	00089884 	.word	0x00089884

000857c0 <register_fini>:
   857c0:	4b02      	ldr	r3, [pc, #8]	; (857cc <register_fini+0xc>)
   857c2:	b113      	cbz	r3, 857ca <register_fini+0xa>
   857c4:	4802      	ldr	r0, [pc, #8]	; (857d0 <register_fini+0x10>)
   857c6:	f000 b805 	b.w	857d4 <atexit>
   857ca:	4770      	bx	lr
   857cc:	00000000 	.word	0x00000000
   857d0:	0008674d 	.word	0x0008674d

000857d4 <atexit>:
   857d4:	2300      	movs	r3, #0
   857d6:	4601      	mov	r1, r0
   857d8:	461a      	mov	r2, r3
   857da:	4618      	mov	r0, r3
   857dc:	f001 befe 	b.w	875dc <__register_exitproc>

000857e0 <quorem>:
   857e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   857e4:	6903      	ldr	r3, [r0, #16]
   857e6:	690f      	ldr	r7, [r1, #16]
   857e8:	b083      	sub	sp, #12
   857ea:	429f      	cmp	r7, r3
   857ec:	f300 8088 	bgt.w	85900 <quorem+0x120>
   857f0:	3f01      	subs	r7, #1
   857f2:	f101 0614 	add.w	r6, r1, #20
   857f6:	f100 0a14 	add.w	sl, r0, #20
   857fa:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   857fe:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   85802:	3301      	adds	r3, #1
   85804:	fbb2 f8f3 	udiv	r8, r2, r3
   85808:	00bb      	lsls	r3, r7, #2
   8580a:	9300      	str	r3, [sp, #0]
   8580c:	eb06 0903 	add.w	r9, r6, r3
   85810:	4453      	add	r3, sl
   85812:	9301      	str	r3, [sp, #4]
   85814:	f1b8 0f00 	cmp.w	r8, #0
   85818:	d03b      	beq.n	85892 <quorem+0xb2>
   8581a:	2300      	movs	r3, #0
   8581c:	46b4      	mov	ip, r6
   8581e:	461c      	mov	r4, r3
   85820:	46d6      	mov	lr, sl
   85822:	f85c 2b04 	ldr.w	r2, [ip], #4
   85826:	f8de 5000 	ldr.w	r5, [lr]
   8582a:	fa1f fb82 	uxth.w	fp, r2
   8582e:	fb08 330b 	mla	r3, r8, fp, r3
   85832:	0c12      	lsrs	r2, r2, #16
   85834:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   85838:	fb08 bb02 	mla	fp, r8, r2, fp
   8583c:	b29a      	uxth	r2, r3
   8583e:	1aa2      	subs	r2, r4, r2
   85840:	b2ab      	uxth	r3, r5
   85842:	fa1f f48b 	uxth.w	r4, fp
   85846:	441a      	add	r2, r3
   85848:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   8584c:	eb04 4422 	add.w	r4, r4, r2, asr #16
   85850:	b292      	uxth	r2, r2
   85852:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   85856:	45e1      	cmp	r9, ip
   85858:	f84e 2b04 	str.w	r2, [lr], #4
   8585c:	ea4f 4424 	mov.w	r4, r4, asr #16
   85860:	ea4f 431b 	mov.w	r3, fp, lsr #16
   85864:	d2dd      	bcs.n	85822 <quorem+0x42>
   85866:	9b00      	ldr	r3, [sp, #0]
   85868:	f85a 3003 	ldr.w	r3, [sl, r3]
   8586c:	b98b      	cbnz	r3, 85892 <quorem+0xb2>
   8586e:	9c01      	ldr	r4, [sp, #4]
   85870:	1f23      	subs	r3, r4, #4
   85872:	459a      	cmp	sl, r3
   85874:	d20c      	bcs.n	85890 <quorem+0xb0>
   85876:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8587a:	b94b      	cbnz	r3, 85890 <quorem+0xb0>
   8587c:	f1a4 0308 	sub.w	r3, r4, #8
   85880:	e002      	b.n	85888 <quorem+0xa8>
   85882:	681a      	ldr	r2, [r3, #0]
   85884:	3b04      	subs	r3, #4
   85886:	b91a      	cbnz	r2, 85890 <quorem+0xb0>
   85888:	459a      	cmp	sl, r3
   8588a:	f107 37ff 	add.w	r7, r7, #4294967295
   8588e:	d3f8      	bcc.n	85882 <quorem+0xa2>
   85890:	6107      	str	r7, [r0, #16]
   85892:	4604      	mov	r4, r0
   85894:	f001 fd08 	bl	872a8 <__mcmp>
   85898:	2800      	cmp	r0, #0
   8589a:	db2d      	blt.n	858f8 <quorem+0x118>
   8589c:	4655      	mov	r5, sl
   8589e:	2300      	movs	r3, #0
   858a0:	f108 0801 	add.w	r8, r8, #1
   858a4:	f856 1b04 	ldr.w	r1, [r6], #4
   858a8:	6828      	ldr	r0, [r5, #0]
   858aa:	b28a      	uxth	r2, r1
   858ac:	1a9a      	subs	r2, r3, r2
   858ae:	0c0b      	lsrs	r3, r1, #16
   858b0:	b281      	uxth	r1, r0
   858b2:	440a      	add	r2, r1
   858b4:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   858b8:	eb03 4322 	add.w	r3, r3, r2, asr #16
   858bc:	b292      	uxth	r2, r2
   858be:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   858c2:	45b1      	cmp	r9, r6
   858c4:	f845 2b04 	str.w	r2, [r5], #4
   858c8:	ea4f 4323 	mov.w	r3, r3, asr #16
   858cc:	d2ea      	bcs.n	858a4 <quorem+0xc4>
   858ce:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   858d2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   858d6:	b97a      	cbnz	r2, 858f8 <quorem+0x118>
   858d8:	1f1a      	subs	r2, r3, #4
   858da:	4592      	cmp	sl, r2
   858dc:	d20b      	bcs.n	858f6 <quorem+0x116>
   858de:	f853 2c04 	ldr.w	r2, [r3, #-4]
   858e2:	b942      	cbnz	r2, 858f6 <quorem+0x116>
   858e4:	3b08      	subs	r3, #8
   858e6:	e002      	b.n	858ee <quorem+0x10e>
   858e8:	681a      	ldr	r2, [r3, #0]
   858ea:	3b04      	subs	r3, #4
   858ec:	b91a      	cbnz	r2, 858f6 <quorem+0x116>
   858ee:	459a      	cmp	sl, r3
   858f0:	f107 37ff 	add.w	r7, r7, #4294967295
   858f4:	d3f8      	bcc.n	858e8 <quorem+0x108>
   858f6:	6127      	str	r7, [r4, #16]
   858f8:	4640      	mov	r0, r8
   858fa:	b003      	add	sp, #12
   858fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85900:	2000      	movs	r0, #0
   85902:	b003      	add	sp, #12
   85904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00085908 <_dtoa_r>:
   85908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8590c:	6c05      	ldr	r5, [r0, #64]	; 0x40
   8590e:	b09b      	sub	sp, #108	; 0x6c
   85910:	4604      	mov	r4, r0
   85912:	4692      	mov	sl, r2
   85914:	469b      	mov	fp, r3
   85916:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   85918:	b14d      	cbz	r5, 8592e <_dtoa_r+0x26>
   8591a:	2301      	movs	r3, #1
   8591c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   8591e:	4629      	mov	r1, r5
   85920:	4093      	lsls	r3, r2
   85922:	60ab      	str	r3, [r5, #8]
   85924:	606a      	str	r2, [r5, #4]
   85926:	f001 fae7 	bl	86ef8 <_Bfree>
   8592a:	2300      	movs	r3, #0
   8592c:	6423      	str	r3, [r4, #64]	; 0x40
   8592e:	f1bb 0f00 	cmp.w	fp, #0
   85932:	465d      	mov	r5, fp
   85934:	db35      	blt.n	859a2 <_dtoa_r+0x9a>
   85936:	2300      	movs	r3, #0
   85938:	6033      	str	r3, [r6, #0]
   8593a:	4b9d      	ldr	r3, [pc, #628]	; (85bb0 <_dtoa_r+0x2a8>)
   8593c:	43ab      	bics	r3, r5
   8593e:	d015      	beq.n	8596c <_dtoa_r+0x64>
   85940:	2200      	movs	r2, #0
   85942:	2300      	movs	r3, #0
   85944:	4650      	mov	r0, sl
   85946:	4659      	mov	r1, fp
   85948:	f002 fe4a 	bl	885e0 <__aeabi_dcmpeq>
   8594c:	4680      	mov	r8, r0
   8594e:	2800      	cmp	r0, #0
   85950:	d02d      	beq.n	859ae <_dtoa_r+0xa6>
   85952:	2301      	movs	r3, #1
   85954:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85956:	6013      	str	r3, [r2, #0]
   85958:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8595a:	2b00      	cmp	r3, #0
   8595c:	f000 80bd 	beq.w	85ada <_dtoa_r+0x1d2>
   85960:	4894      	ldr	r0, [pc, #592]	; (85bb4 <_dtoa_r+0x2ac>)
   85962:	6018      	str	r0, [r3, #0]
   85964:	3801      	subs	r0, #1
   85966:	b01b      	add	sp, #108	; 0x6c
   85968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8596c:	f242 730f 	movw	r3, #9999	; 0x270f
   85970:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85972:	6013      	str	r3, [r2, #0]
   85974:	f1ba 0f00 	cmp.w	sl, #0
   85978:	d10d      	bne.n	85996 <_dtoa_r+0x8e>
   8597a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   8597e:	b955      	cbnz	r5, 85996 <_dtoa_r+0x8e>
   85980:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85982:	488d      	ldr	r0, [pc, #564]	; (85bb8 <_dtoa_r+0x2b0>)
   85984:	2b00      	cmp	r3, #0
   85986:	d0ee      	beq.n	85966 <_dtoa_r+0x5e>
   85988:	f100 0308 	add.w	r3, r0, #8
   8598c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   8598e:	6013      	str	r3, [r2, #0]
   85990:	b01b      	add	sp, #108	; 0x6c
   85992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85996:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85998:	4888      	ldr	r0, [pc, #544]	; (85bbc <_dtoa_r+0x2b4>)
   8599a:	2b00      	cmp	r3, #0
   8599c:	d0e3      	beq.n	85966 <_dtoa_r+0x5e>
   8599e:	1cc3      	adds	r3, r0, #3
   859a0:	e7f4      	b.n	8598c <_dtoa_r+0x84>
   859a2:	2301      	movs	r3, #1
   859a4:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   859a8:	6033      	str	r3, [r6, #0]
   859aa:	46ab      	mov	fp, r5
   859ac:	e7c5      	b.n	8593a <_dtoa_r+0x32>
   859ae:	aa18      	add	r2, sp, #96	; 0x60
   859b0:	ab19      	add	r3, sp, #100	; 0x64
   859b2:	9201      	str	r2, [sp, #4]
   859b4:	9300      	str	r3, [sp, #0]
   859b6:	4652      	mov	r2, sl
   859b8:	465b      	mov	r3, fp
   859ba:	4620      	mov	r0, r4
   859bc:	f001 fd1e 	bl	873fc <__d2b>
   859c0:	0d2b      	lsrs	r3, r5, #20
   859c2:	4681      	mov	r9, r0
   859c4:	d071      	beq.n	85aaa <_dtoa_r+0x1a2>
   859c6:	4650      	mov	r0, sl
   859c8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   859cc:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   859d0:	9f18      	ldr	r7, [sp, #96]	; 0x60
   859d2:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   859d6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   859da:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   859de:	2200      	movs	r2, #0
   859e0:	4b77      	ldr	r3, [pc, #476]	; (85bc0 <_dtoa_r+0x2b8>)
   859e2:	f002 f9e1 	bl	87da8 <__aeabi_dsub>
   859e6:	a36c      	add	r3, pc, #432	; (adr r3, 85b98 <_dtoa_r+0x290>)
   859e8:	e9d3 2300 	ldrd	r2, r3, [r3]
   859ec:	f002 fb90 	bl	88110 <__aeabi_dmul>
   859f0:	a36b      	add	r3, pc, #428	; (adr r3, 85ba0 <_dtoa_r+0x298>)
   859f2:	e9d3 2300 	ldrd	r2, r3, [r3]
   859f6:	f002 f9d9 	bl	87dac <__adddf3>
   859fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
   859fe:	4630      	mov	r0, r6
   85a00:	f002 fb20 	bl	88044 <__aeabi_i2d>
   85a04:	a368      	add	r3, pc, #416	; (adr r3, 85ba8 <_dtoa_r+0x2a0>)
   85a06:	e9d3 2300 	ldrd	r2, r3, [r3]
   85a0a:	f002 fb81 	bl	88110 <__aeabi_dmul>
   85a0e:	4602      	mov	r2, r0
   85a10:	460b      	mov	r3, r1
   85a12:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   85a16:	f002 f9c9 	bl	87dac <__adddf3>
   85a1a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   85a1e:	f002 fe27 	bl	88670 <__aeabi_d2iz>
   85a22:	2200      	movs	r2, #0
   85a24:	9002      	str	r0, [sp, #8]
   85a26:	2300      	movs	r3, #0
   85a28:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   85a2c:	f002 fde2 	bl	885f4 <__aeabi_dcmplt>
   85a30:	2800      	cmp	r0, #0
   85a32:	f040 816d 	bne.w	85d10 <_dtoa_r+0x408>
   85a36:	9d02      	ldr	r5, [sp, #8]
   85a38:	2d16      	cmp	r5, #22
   85a3a:	f200 8157 	bhi.w	85cec <_dtoa_r+0x3e4>
   85a3e:	4961      	ldr	r1, [pc, #388]	; (85bc4 <_dtoa_r+0x2bc>)
   85a40:	4652      	mov	r2, sl
   85a42:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   85a46:	465b      	mov	r3, fp
   85a48:	e9d1 0100 	ldrd	r0, r1, [r1]
   85a4c:	f002 fdf0 	bl	88630 <__aeabi_dcmpgt>
   85a50:	2800      	cmp	r0, #0
   85a52:	f000 81be 	beq.w	85dd2 <_dtoa_r+0x4ca>
   85a56:	1e6b      	subs	r3, r5, #1
   85a58:	9302      	str	r3, [sp, #8]
   85a5a:	2300      	movs	r3, #0
   85a5c:	930e      	str	r3, [sp, #56]	; 0x38
   85a5e:	1bbf      	subs	r7, r7, r6
   85a60:	1e7b      	subs	r3, r7, #1
   85a62:	9308      	str	r3, [sp, #32]
   85a64:	f100 814e 	bmi.w	85d04 <_dtoa_r+0x3fc>
   85a68:	2300      	movs	r3, #0
   85a6a:	930a      	str	r3, [sp, #40]	; 0x28
   85a6c:	9b02      	ldr	r3, [sp, #8]
   85a6e:	2b00      	cmp	r3, #0
   85a70:	f2c0 813f 	blt.w	85cf2 <_dtoa_r+0x3ea>
   85a74:	9a08      	ldr	r2, [sp, #32]
   85a76:	930d      	str	r3, [sp, #52]	; 0x34
   85a78:	4611      	mov	r1, r2
   85a7a:	4419      	add	r1, r3
   85a7c:	2300      	movs	r3, #0
   85a7e:	9108      	str	r1, [sp, #32]
   85a80:	930c      	str	r3, [sp, #48]	; 0x30
   85a82:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85a84:	2b09      	cmp	r3, #9
   85a86:	d82a      	bhi.n	85ade <_dtoa_r+0x1d6>
   85a88:	2b05      	cmp	r3, #5
   85a8a:	f340 8658 	ble.w	8673e <_dtoa_r+0xe36>
   85a8e:	2500      	movs	r5, #0
   85a90:	3b04      	subs	r3, #4
   85a92:	9324      	str	r3, [sp, #144]	; 0x90
   85a94:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85a96:	3b02      	subs	r3, #2
   85a98:	2b03      	cmp	r3, #3
   85a9a:	f200 863f 	bhi.w	8671c <_dtoa_r+0xe14>
   85a9e:	e8df f013 	tbh	[pc, r3, lsl #1]
   85aa2:	03ce      	.short	0x03ce
   85aa4:	03d902c3 	.word	0x03d902c3
   85aa8:	045b      	.short	0x045b
   85aaa:	9f18      	ldr	r7, [sp, #96]	; 0x60
   85aac:	9e19      	ldr	r6, [sp, #100]	; 0x64
   85aae:	443e      	add	r6, r7
   85ab0:	f206 4332 	addw	r3, r6, #1074	; 0x432
   85ab4:	2b20      	cmp	r3, #32
   85ab6:	f340 8187 	ble.w	85dc8 <_dtoa_r+0x4c0>
   85aba:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   85abe:	f206 4012 	addw	r0, r6, #1042	; 0x412
   85ac2:	409d      	lsls	r5, r3
   85ac4:	fa2a f000 	lsr.w	r0, sl, r0
   85ac8:	4328      	orrs	r0, r5
   85aca:	f002 faab 	bl	88024 <__aeabi_ui2d>
   85ace:	2301      	movs	r3, #1
   85ad0:	3e01      	subs	r6, #1
   85ad2:	9314      	str	r3, [sp, #80]	; 0x50
   85ad4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   85ad8:	e781      	b.n	859de <_dtoa_r+0xd6>
   85ada:	483b      	ldr	r0, [pc, #236]	; (85bc8 <_dtoa_r+0x2c0>)
   85adc:	e743      	b.n	85966 <_dtoa_r+0x5e>
   85ade:	2100      	movs	r1, #0
   85ae0:	4620      	mov	r0, r4
   85ae2:	6461      	str	r1, [r4, #68]	; 0x44
   85ae4:	9125      	str	r1, [sp, #148]	; 0x94
   85ae6:	f001 f9e1 	bl	86eac <_Balloc>
   85aea:	f04f 33ff 	mov.w	r3, #4294967295
   85aee:	9307      	str	r3, [sp, #28]
   85af0:	930f      	str	r3, [sp, #60]	; 0x3c
   85af2:	2301      	movs	r3, #1
   85af4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   85af6:	9004      	str	r0, [sp, #16]
   85af8:	6420      	str	r0, [r4, #64]	; 0x40
   85afa:	9224      	str	r2, [sp, #144]	; 0x90
   85afc:	930b      	str	r3, [sp, #44]	; 0x2c
   85afe:	9b19      	ldr	r3, [sp, #100]	; 0x64
   85b00:	2b00      	cmp	r3, #0
   85b02:	f2c0 80d3 	blt.w	85cac <_dtoa_r+0x3a4>
   85b06:	9a02      	ldr	r2, [sp, #8]
   85b08:	2a0e      	cmp	r2, #14
   85b0a:	f300 80cf 	bgt.w	85cac <_dtoa_r+0x3a4>
   85b0e:	4b2d      	ldr	r3, [pc, #180]	; (85bc4 <_dtoa_r+0x2bc>)
   85b10:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   85b14:	e9d3 2300 	ldrd	r2, r3, [r3]
   85b18:	e9cd 2308 	strd	r2, r3, [sp, #32]
   85b1c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   85b1e:	2b00      	cmp	r3, #0
   85b20:	f2c0 83b4 	blt.w	8628c <_dtoa_r+0x984>
   85b24:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   85b28:	4650      	mov	r0, sl
   85b2a:	462a      	mov	r2, r5
   85b2c:	4633      	mov	r3, r6
   85b2e:	4659      	mov	r1, fp
   85b30:	f002 fc18 	bl	88364 <__aeabi_ddiv>
   85b34:	f002 fd9c 	bl	88670 <__aeabi_d2iz>
   85b38:	4680      	mov	r8, r0
   85b3a:	f002 fa83 	bl	88044 <__aeabi_i2d>
   85b3e:	462a      	mov	r2, r5
   85b40:	4633      	mov	r3, r6
   85b42:	f002 fae5 	bl	88110 <__aeabi_dmul>
   85b46:	4602      	mov	r2, r0
   85b48:	460b      	mov	r3, r1
   85b4a:	4650      	mov	r0, sl
   85b4c:	4659      	mov	r1, fp
   85b4e:	f002 f92b 	bl	87da8 <__aeabi_dsub>
   85b52:	9e07      	ldr	r6, [sp, #28]
   85b54:	9f04      	ldr	r7, [sp, #16]
   85b56:	f108 0530 	add.w	r5, r8, #48	; 0x30
   85b5a:	2e01      	cmp	r6, #1
   85b5c:	703d      	strb	r5, [r7, #0]
   85b5e:	4602      	mov	r2, r0
   85b60:	460b      	mov	r3, r1
   85b62:	f107 0501 	add.w	r5, r7, #1
   85b66:	d064      	beq.n	85c32 <_dtoa_r+0x32a>
   85b68:	2200      	movs	r2, #0
   85b6a:	4b18      	ldr	r3, [pc, #96]	; (85bcc <_dtoa_r+0x2c4>)
   85b6c:	f002 fad0 	bl	88110 <__aeabi_dmul>
   85b70:	2200      	movs	r2, #0
   85b72:	2300      	movs	r3, #0
   85b74:	4606      	mov	r6, r0
   85b76:	460f      	mov	r7, r1
   85b78:	f002 fd32 	bl	885e0 <__aeabi_dcmpeq>
   85b7c:	2800      	cmp	r0, #0
   85b7e:	f040 8082 	bne.w	85c86 <_dtoa_r+0x37e>
   85b82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   85b86:	f04f 0a00 	mov.w	sl, #0
   85b8a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   85b8e:	f04f 0b00 	mov.w	fp, #0
   85b92:	940b      	str	r4, [sp, #44]	; 0x2c
   85b94:	e029      	b.n	85bea <_dtoa_r+0x2e2>
   85b96:	bf00      	nop
   85b98:	636f4361 	.word	0x636f4361
   85b9c:	3fd287a7 	.word	0x3fd287a7
   85ba0:	8b60c8b3 	.word	0x8b60c8b3
   85ba4:	3fc68a28 	.word	0x3fc68a28
   85ba8:	509f79fb 	.word	0x509f79fb
   85bac:	3fd34413 	.word	0x3fd34413
   85bb0:	7ff00000 	.word	0x7ff00000
   85bb4:	000898bd 	.word	0x000898bd
   85bb8:	000898e0 	.word	0x000898e0
   85bbc:	000898ec 	.word	0x000898ec
   85bc0:	3ff80000 	.word	0x3ff80000
   85bc4:	00089928 	.word	0x00089928
   85bc8:	000898bc 	.word	0x000898bc
   85bcc:	40240000 	.word	0x40240000
   85bd0:	2200      	movs	r2, #0
   85bd2:	4b81      	ldr	r3, [pc, #516]	; (85dd8 <_dtoa_r+0x4d0>)
   85bd4:	f002 fa9c 	bl	88110 <__aeabi_dmul>
   85bd8:	4652      	mov	r2, sl
   85bda:	465b      	mov	r3, fp
   85bdc:	4606      	mov	r6, r0
   85bde:	460f      	mov	r7, r1
   85be0:	f002 fcfe 	bl	885e0 <__aeabi_dcmpeq>
   85be4:	2800      	cmp	r0, #0
   85be6:	f040 83ba 	bne.w	8635e <_dtoa_r+0xa56>
   85bea:	4642      	mov	r2, r8
   85bec:	464b      	mov	r3, r9
   85bee:	4630      	mov	r0, r6
   85bf0:	4639      	mov	r1, r7
   85bf2:	f002 fbb7 	bl	88364 <__aeabi_ddiv>
   85bf6:	f002 fd3b 	bl	88670 <__aeabi_d2iz>
   85bfa:	4604      	mov	r4, r0
   85bfc:	f002 fa22 	bl	88044 <__aeabi_i2d>
   85c00:	4642      	mov	r2, r8
   85c02:	464b      	mov	r3, r9
   85c04:	f002 fa84 	bl	88110 <__aeabi_dmul>
   85c08:	4602      	mov	r2, r0
   85c0a:	460b      	mov	r3, r1
   85c0c:	4630      	mov	r0, r6
   85c0e:	4639      	mov	r1, r7
   85c10:	f002 f8ca 	bl	87da8 <__aeabi_dsub>
   85c14:	f104 0630 	add.w	r6, r4, #48	; 0x30
   85c18:	f805 6b01 	strb.w	r6, [r5], #1
   85c1c:	9e04      	ldr	r6, [sp, #16]
   85c1e:	9f07      	ldr	r7, [sp, #28]
   85c20:	1bae      	subs	r6, r5, r6
   85c22:	42be      	cmp	r6, r7
   85c24:	4602      	mov	r2, r0
   85c26:	460b      	mov	r3, r1
   85c28:	d1d2      	bne.n	85bd0 <_dtoa_r+0x2c8>
   85c2a:	46a0      	mov	r8, r4
   85c2c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   85c30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   85c32:	4610      	mov	r0, r2
   85c34:	4619      	mov	r1, r3
   85c36:	f002 f8b9 	bl	87dac <__adddf3>
   85c3a:	4606      	mov	r6, r0
   85c3c:	460f      	mov	r7, r1
   85c3e:	4602      	mov	r2, r0
   85c40:	460b      	mov	r3, r1
   85c42:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   85c46:	f002 fcd5 	bl	885f4 <__aeabi_dcmplt>
   85c4a:	b948      	cbnz	r0, 85c60 <_dtoa_r+0x358>
   85c4c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   85c50:	4632      	mov	r2, r6
   85c52:	463b      	mov	r3, r7
   85c54:	f002 fcc4 	bl	885e0 <__aeabi_dcmpeq>
   85c58:	b1a8      	cbz	r0, 85c86 <_dtoa_r+0x37e>
   85c5a:	f018 0f01 	tst.w	r8, #1
   85c5e:	d012      	beq.n	85c86 <_dtoa_r+0x37e>
   85c60:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   85c64:	1e6b      	subs	r3, r5, #1
   85c66:	9a04      	ldr	r2, [sp, #16]
   85c68:	e004      	b.n	85c74 <_dtoa_r+0x36c>
   85c6a:	429a      	cmp	r2, r3
   85c6c:	f000 8402 	beq.w	86474 <_dtoa_r+0xb6c>
   85c70:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   85c74:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   85c78:	f103 0501 	add.w	r5, r3, #1
   85c7c:	d0f5      	beq.n	85c6a <_dtoa_r+0x362>
   85c7e:	f108 0801 	add.w	r8, r8, #1
   85c82:	f883 8000 	strb.w	r8, [r3]
   85c86:	4649      	mov	r1, r9
   85c88:	4620      	mov	r0, r4
   85c8a:	f001 f935 	bl	86ef8 <_Bfree>
   85c8e:	2200      	movs	r2, #0
   85c90:	9b02      	ldr	r3, [sp, #8]
   85c92:	702a      	strb	r2, [r5, #0]
   85c94:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85c96:	3301      	adds	r3, #1
   85c98:	6013      	str	r3, [r2, #0]
   85c9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   85c9c:	2b00      	cmp	r3, #0
   85c9e:	f000 839f 	beq.w	863e0 <_dtoa_r+0xad8>
   85ca2:	9804      	ldr	r0, [sp, #16]
   85ca4:	601d      	str	r5, [r3, #0]
   85ca6:	b01b      	add	sp, #108	; 0x6c
   85ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85cac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85cae:	2a00      	cmp	r2, #0
   85cb0:	d03e      	beq.n	85d30 <_dtoa_r+0x428>
   85cb2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   85cb4:	2a01      	cmp	r2, #1
   85cb6:	f340 8311 	ble.w	862dc <_dtoa_r+0x9d4>
   85cba:	9b07      	ldr	r3, [sp, #28]
   85cbc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85cbe:	1e5f      	subs	r7, r3, #1
   85cc0:	42ba      	cmp	r2, r7
   85cc2:	f2c0 8390 	blt.w	863e6 <_dtoa_r+0xade>
   85cc6:	1bd7      	subs	r7, r2, r7
   85cc8:	9b07      	ldr	r3, [sp, #28]
   85cca:	2b00      	cmp	r3, #0
   85ccc:	f2c0 848c 	blt.w	865e8 <_dtoa_r+0xce0>
   85cd0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   85cd2:	9b07      	ldr	r3, [sp, #28]
   85cd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85cd6:	2101      	movs	r1, #1
   85cd8:	441a      	add	r2, r3
   85cda:	920a      	str	r2, [sp, #40]	; 0x28
   85cdc:	9a08      	ldr	r2, [sp, #32]
   85cde:	4620      	mov	r0, r4
   85ce0:	441a      	add	r2, r3
   85ce2:	9208      	str	r2, [sp, #32]
   85ce4:	f001 f9a4 	bl	87030 <__i2b>
   85ce8:	4606      	mov	r6, r0
   85cea:	e023      	b.n	85d34 <_dtoa_r+0x42c>
   85cec:	2301      	movs	r3, #1
   85cee:	930e      	str	r3, [sp, #56]	; 0x38
   85cf0:	e6b5      	b.n	85a5e <_dtoa_r+0x156>
   85cf2:	2300      	movs	r3, #0
   85cf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85cf6:	930d      	str	r3, [sp, #52]	; 0x34
   85cf8:	9b02      	ldr	r3, [sp, #8]
   85cfa:	1ad2      	subs	r2, r2, r3
   85cfc:	425b      	negs	r3, r3
   85cfe:	920a      	str	r2, [sp, #40]	; 0x28
   85d00:	930c      	str	r3, [sp, #48]	; 0x30
   85d02:	e6be      	b.n	85a82 <_dtoa_r+0x17a>
   85d04:	f1c7 0301 	rsb	r3, r7, #1
   85d08:	930a      	str	r3, [sp, #40]	; 0x28
   85d0a:	2300      	movs	r3, #0
   85d0c:	9308      	str	r3, [sp, #32]
   85d0e:	e6ad      	b.n	85a6c <_dtoa_r+0x164>
   85d10:	9d02      	ldr	r5, [sp, #8]
   85d12:	4628      	mov	r0, r5
   85d14:	f002 f996 	bl	88044 <__aeabi_i2d>
   85d18:	4602      	mov	r2, r0
   85d1a:	460b      	mov	r3, r1
   85d1c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   85d20:	f002 fc5e 	bl	885e0 <__aeabi_dcmpeq>
   85d24:	2800      	cmp	r0, #0
   85d26:	f47f ae86 	bne.w	85a36 <_dtoa_r+0x12e>
   85d2a:	1e6b      	subs	r3, r5, #1
   85d2c:	9302      	str	r3, [sp, #8]
   85d2e:	e682      	b.n	85a36 <_dtoa_r+0x12e>
   85d30:	ad0a      	add	r5, sp, #40	; 0x28
   85d32:	cde0      	ldmia	r5, {r5, r6, r7}
   85d34:	2d00      	cmp	r5, #0
   85d36:	dd0c      	ble.n	85d52 <_dtoa_r+0x44a>
   85d38:	9908      	ldr	r1, [sp, #32]
   85d3a:	2900      	cmp	r1, #0
   85d3c:	460b      	mov	r3, r1
   85d3e:	dd08      	ble.n	85d52 <_dtoa_r+0x44a>
   85d40:	42a9      	cmp	r1, r5
   85d42:	bfa8      	it	ge
   85d44:	462b      	movge	r3, r5
   85d46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85d48:	1aed      	subs	r5, r5, r3
   85d4a:	1ad2      	subs	r2, r2, r3
   85d4c:	1acb      	subs	r3, r1, r3
   85d4e:	920a      	str	r2, [sp, #40]	; 0x28
   85d50:	9308      	str	r3, [sp, #32]
   85d52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85d54:	b1d3      	cbz	r3, 85d8c <_dtoa_r+0x484>
   85d56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85d58:	2b00      	cmp	r3, #0
   85d5a:	f000 82b8 	beq.w	862ce <_dtoa_r+0x9c6>
   85d5e:	2f00      	cmp	r7, #0
   85d60:	dd10      	ble.n	85d84 <_dtoa_r+0x47c>
   85d62:	4631      	mov	r1, r6
   85d64:	463a      	mov	r2, r7
   85d66:	4620      	mov	r0, r4
   85d68:	f001 f9fe 	bl	87168 <__pow5mult>
   85d6c:	464a      	mov	r2, r9
   85d6e:	4601      	mov	r1, r0
   85d70:	4606      	mov	r6, r0
   85d72:	4620      	mov	r0, r4
   85d74:	f001 f966 	bl	87044 <__multiply>
   85d78:	4603      	mov	r3, r0
   85d7a:	4649      	mov	r1, r9
   85d7c:	4620      	mov	r0, r4
   85d7e:	4699      	mov	r9, r3
   85d80:	f001 f8ba 	bl	86ef8 <_Bfree>
   85d84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85d86:	1bda      	subs	r2, r3, r7
   85d88:	f040 82a2 	bne.w	862d0 <_dtoa_r+0x9c8>
   85d8c:	2101      	movs	r1, #1
   85d8e:	4620      	mov	r0, r4
   85d90:	f001 f94e 	bl	87030 <__i2b>
   85d94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85d96:	4680      	mov	r8, r0
   85d98:	2b00      	cmp	r3, #0
   85d9a:	dd1f      	ble.n	85ddc <_dtoa_r+0x4d4>
   85d9c:	4601      	mov	r1, r0
   85d9e:	461a      	mov	r2, r3
   85da0:	4620      	mov	r0, r4
   85da2:	f001 f9e1 	bl	87168 <__pow5mult>
   85da6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85da8:	4680      	mov	r8, r0
   85daa:	2b01      	cmp	r3, #1
   85dac:	f340 8255 	ble.w	8625a <_dtoa_r+0x952>
   85db0:	2300      	movs	r3, #0
   85db2:	930c      	str	r3, [sp, #48]	; 0x30
   85db4:	f8d8 3010 	ldr.w	r3, [r8, #16]
   85db8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   85dbc:	6918      	ldr	r0, [r3, #16]
   85dbe:	f001 f8e7 	bl	86f90 <__hi0bits>
   85dc2:	f1c0 0020 	rsb	r0, r0, #32
   85dc6:	e013      	b.n	85df0 <_dtoa_r+0x4e8>
   85dc8:	f1c3 0520 	rsb	r5, r3, #32
   85dcc:	fa0a f005 	lsl.w	r0, sl, r5
   85dd0:	e67b      	b.n	85aca <_dtoa_r+0x1c2>
   85dd2:	900e      	str	r0, [sp, #56]	; 0x38
   85dd4:	e643      	b.n	85a5e <_dtoa_r+0x156>
   85dd6:	bf00      	nop
   85dd8:	40240000 	.word	0x40240000
   85ddc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85dde:	2b01      	cmp	r3, #1
   85de0:	f340 8285 	ble.w	862ee <_dtoa_r+0x9e6>
   85de4:	2300      	movs	r3, #0
   85de6:	930c      	str	r3, [sp, #48]	; 0x30
   85de8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85dea:	2001      	movs	r0, #1
   85dec:	2b00      	cmp	r3, #0
   85dee:	d1e1      	bne.n	85db4 <_dtoa_r+0x4ac>
   85df0:	9a08      	ldr	r2, [sp, #32]
   85df2:	4410      	add	r0, r2
   85df4:	f010 001f 	ands.w	r0, r0, #31
   85df8:	f000 80a1 	beq.w	85f3e <_dtoa_r+0x636>
   85dfc:	f1c0 0320 	rsb	r3, r0, #32
   85e00:	2b04      	cmp	r3, #4
   85e02:	f340 8486 	ble.w	86712 <_dtoa_r+0xe0a>
   85e06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85e08:	f1c0 001c 	rsb	r0, r0, #28
   85e0c:	4403      	add	r3, r0
   85e0e:	930a      	str	r3, [sp, #40]	; 0x28
   85e10:	4613      	mov	r3, r2
   85e12:	4403      	add	r3, r0
   85e14:	4405      	add	r5, r0
   85e16:	9308      	str	r3, [sp, #32]
   85e18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85e1a:	2b00      	cmp	r3, #0
   85e1c:	dd05      	ble.n	85e2a <_dtoa_r+0x522>
   85e1e:	4649      	mov	r1, r9
   85e20:	461a      	mov	r2, r3
   85e22:	4620      	mov	r0, r4
   85e24:	f001 f9f0 	bl	87208 <__lshift>
   85e28:	4681      	mov	r9, r0
   85e2a:	9b08      	ldr	r3, [sp, #32]
   85e2c:	2b00      	cmp	r3, #0
   85e2e:	dd05      	ble.n	85e3c <_dtoa_r+0x534>
   85e30:	4641      	mov	r1, r8
   85e32:	461a      	mov	r2, r3
   85e34:	4620      	mov	r0, r4
   85e36:	f001 f9e7 	bl	87208 <__lshift>
   85e3a:	4680      	mov	r8, r0
   85e3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85e3e:	2b00      	cmp	r3, #0
   85e40:	f040 8086 	bne.w	85f50 <_dtoa_r+0x648>
   85e44:	9b07      	ldr	r3, [sp, #28]
   85e46:	2b00      	cmp	r3, #0
   85e48:	f340 8264 	ble.w	86314 <_dtoa_r+0xa0c>
   85e4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85e4e:	2b00      	cmp	r3, #0
   85e50:	f000 8098 	beq.w	85f84 <_dtoa_r+0x67c>
   85e54:	2d00      	cmp	r5, #0
   85e56:	dd05      	ble.n	85e64 <_dtoa_r+0x55c>
   85e58:	4631      	mov	r1, r6
   85e5a:	462a      	mov	r2, r5
   85e5c:	4620      	mov	r0, r4
   85e5e:	f001 f9d3 	bl	87208 <__lshift>
   85e62:	4606      	mov	r6, r0
   85e64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85e66:	2b00      	cmp	r3, #0
   85e68:	f040 8336 	bne.w	864d8 <_dtoa_r+0xbd0>
   85e6c:	9608      	str	r6, [sp, #32]
   85e6e:	9b07      	ldr	r3, [sp, #28]
   85e70:	9a04      	ldr	r2, [sp, #16]
   85e72:	3b01      	subs	r3, #1
   85e74:	18d3      	adds	r3, r2, r3
   85e76:	930b      	str	r3, [sp, #44]	; 0x2c
   85e78:	4617      	mov	r7, r2
   85e7a:	f00a 0301 	and.w	r3, sl, #1
   85e7e:	46c2      	mov	sl, r8
   85e80:	f8dd b020 	ldr.w	fp, [sp, #32]
   85e84:	930c      	str	r3, [sp, #48]	; 0x30
   85e86:	4651      	mov	r1, sl
   85e88:	4648      	mov	r0, r9
   85e8a:	f7ff fca9 	bl	857e0 <quorem>
   85e8e:	4631      	mov	r1, r6
   85e90:	4605      	mov	r5, r0
   85e92:	4648      	mov	r0, r9
   85e94:	f001 fa08 	bl	872a8 <__mcmp>
   85e98:	465a      	mov	r2, fp
   85e9a:	9007      	str	r0, [sp, #28]
   85e9c:	4651      	mov	r1, sl
   85e9e:	4620      	mov	r0, r4
   85ea0:	f001 fa1e 	bl	872e0 <__mdiff>
   85ea4:	68c2      	ldr	r2, [r0, #12]
   85ea6:	4680      	mov	r8, r0
   85ea8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   85eac:	2a00      	cmp	r2, #0
   85eae:	f040 8229 	bne.w	86304 <_dtoa_r+0x9fc>
   85eb2:	4601      	mov	r1, r0
   85eb4:	4648      	mov	r0, r9
   85eb6:	930a      	str	r3, [sp, #40]	; 0x28
   85eb8:	f001 f9f6 	bl	872a8 <__mcmp>
   85ebc:	4641      	mov	r1, r8
   85ebe:	9008      	str	r0, [sp, #32]
   85ec0:	4620      	mov	r0, r4
   85ec2:	f001 f819 	bl	86ef8 <_Bfree>
   85ec6:	9a08      	ldr	r2, [sp, #32]
   85ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85eca:	b932      	cbnz	r2, 85eda <_dtoa_r+0x5d2>
   85ecc:	9924      	ldr	r1, [sp, #144]	; 0x90
   85ece:	b921      	cbnz	r1, 85eda <_dtoa_r+0x5d2>
   85ed0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85ed2:	2a00      	cmp	r2, #0
   85ed4:	f000 83ee 	beq.w	866b4 <_dtoa_r+0xdac>
   85ed8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   85eda:	9907      	ldr	r1, [sp, #28]
   85edc:	2900      	cmp	r1, #0
   85ede:	f2c0 829f 	blt.w	86420 <_dtoa_r+0xb18>
   85ee2:	d105      	bne.n	85ef0 <_dtoa_r+0x5e8>
   85ee4:	9924      	ldr	r1, [sp, #144]	; 0x90
   85ee6:	b919      	cbnz	r1, 85ef0 <_dtoa_r+0x5e8>
   85ee8:	990c      	ldr	r1, [sp, #48]	; 0x30
   85eea:	2900      	cmp	r1, #0
   85eec:	f000 8298 	beq.w	86420 <_dtoa_r+0xb18>
   85ef0:	2a00      	cmp	r2, #0
   85ef2:	f300 8305 	bgt.w	86500 <_dtoa_r+0xbf8>
   85ef6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85ef8:	f107 0801 	add.w	r8, r7, #1
   85efc:	4297      	cmp	r7, r2
   85efe:	703b      	strb	r3, [r7, #0]
   85f00:	4645      	mov	r5, r8
   85f02:	f000 830b 	beq.w	8651c <_dtoa_r+0xc14>
   85f06:	4649      	mov	r1, r9
   85f08:	2300      	movs	r3, #0
   85f0a:	220a      	movs	r2, #10
   85f0c:	4620      	mov	r0, r4
   85f0e:	f000 fffd 	bl	86f0c <__multadd>
   85f12:	455e      	cmp	r6, fp
   85f14:	4681      	mov	r9, r0
   85f16:	4631      	mov	r1, r6
   85f18:	f04f 0300 	mov.w	r3, #0
   85f1c:	f04f 020a 	mov.w	r2, #10
   85f20:	4620      	mov	r0, r4
   85f22:	f000 81e9 	beq.w	862f8 <_dtoa_r+0x9f0>
   85f26:	f000 fff1 	bl	86f0c <__multadd>
   85f2a:	4659      	mov	r1, fp
   85f2c:	4606      	mov	r6, r0
   85f2e:	2300      	movs	r3, #0
   85f30:	220a      	movs	r2, #10
   85f32:	4620      	mov	r0, r4
   85f34:	f000 ffea 	bl	86f0c <__multadd>
   85f38:	4647      	mov	r7, r8
   85f3a:	4683      	mov	fp, r0
   85f3c:	e7a3      	b.n	85e86 <_dtoa_r+0x57e>
   85f3e:	201c      	movs	r0, #28
   85f40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85f42:	4405      	add	r5, r0
   85f44:	4403      	add	r3, r0
   85f46:	930a      	str	r3, [sp, #40]	; 0x28
   85f48:	9b08      	ldr	r3, [sp, #32]
   85f4a:	4403      	add	r3, r0
   85f4c:	9308      	str	r3, [sp, #32]
   85f4e:	e763      	b.n	85e18 <_dtoa_r+0x510>
   85f50:	4641      	mov	r1, r8
   85f52:	4648      	mov	r0, r9
   85f54:	f001 f9a8 	bl	872a8 <__mcmp>
   85f58:	2800      	cmp	r0, #0
   85f5a:	f6bf af73 	bge.w	85e44 <_dtoa_r+0x53c>
   85f5e:	9f02      	ldr	r7, [sp, #8]
   85f60:	4649      	mov	r1, r9
   85f62:	2300      	movs	r3, #0
   85f64:	220a      	movs	r2, #10
   85f66:	4620      	mov	r0, r4
   85f68:	3f01      	subs	r7, #1
   85f6a:	9702      	str	r7, [sp, #8]
   85f6c:	f000 ffce 	bl	86f0c <__multadd>
   85f70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85f72:	4681      	mov	r9, r0
   85f74:	2b00      	cmp	r3, #0
   85f76:	f040 83b5 	bne.w	866e4 <_dtoa_r+0xddc>
   85f7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85f7c:	2b00      	cmp	r3, #0
   85f7e:	f340 83be 	ble.w	866fe <_dtoa_r+0xdf6>
   85f82:	9307      	str	r3, [sp, #28]
   85f84:	f8dd a010 	ldr.w	sl, [sp, #16]
   85f88:	9f07      	ldr	r7, [sp, #28]
   85f8a:	4655      	mov	r5, sl
   85f8c:	e006      	b.n	85f9c <_dtoa_r+0x694>
   85f8e:	4649      	mov	r1, r9
   85f90:	2300      	movs	r3, #0
   85f92:	220a      	movs	r2, #10
   85f94:	4620      	mov	r0, r4
   85f96:	f000 ffb9 	bl	86f0c <__multadd>
   85f9a:	4681      	mov	r9, r0
   85f9c:	4641      	mov	r1, r8
   85f9e:	4648      	mov	r0, r9
   85fa0:	f7ff fc1e 	bl	857e0 <quorem>
   85fa4:	3030      	adds	r0, #48	; 0x30
   85fa6:	f805 0b01 	strb.w	r0, [r5], #1
   85faa:	eba5 030a 	sub.w	r3, r5, sl
   85fae:	42bb      	cmp	r3, r7
   85fb0:	dbed      	blt.n	85f8e <_dtoa_r+0x686>
   85fb2:	9b04      	ldr	r3, [sp, #16]
   85fb4:	9a07      	ldr	r2, [sp, #28]
   85fb6:	4682      	mov	sl, r0
   85fb8:	2a01      	cmp	r2, #1
   85fba:	bfac      	ite	ge
   85fbc:	189b      	addge	r3, r3, r2
   85fbe:	3301      	addlt	r3, #1
   85fc0:	f04f 0b00 	mov.w	fp, #0
   85fc4:	461d      	mov	r5, r3
   85fc6:	4649      	mov	r1, r9
   85fc8:	2201      	movs	r2, #1
   85fca:	4620      	mov	r0, r4
   85fcc:	f001 f91c 	bl	87208 <__lshift>
   85fd0:	4641      	mov	r1, r8
   85fd2:	4681      	mov	r9, r0
   85fd4:	f001 f968 	bl	872a8 <__mcmp>
   85fd8:	2800      	cmp	r0, #0
   85fda:	f340 823f 	ble.w	8645c <_dtoa_r+0xb54>
   85fde:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   85fe2:	1e6b      	subs	r3, r5, #1
   85fe4:	9904      	ldr	r1, [sp, #16]
   85fe6:	e004      	b.n	85ff2 <_dtoa_r+0x6ea>
   85fe8:	428b      	cmp	r3, r1
   85fea:	f000 81ae 	beq.w	8634a <_dtoa_r+0xa42>
   85fee:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   85ff2:	2a39      	cmp	r2, #57	; 0x39
   85ff4:	f103 0501 	add.w	r5, r3, #1
   85ff8:	d0f6      	beq.n	85fe8 <_dtoa_r+0x6e0>
   85ffa:	3201      	adds	r2, #1
   85ffc:	701a      	strb	r2, [r3, #0]
   85ffe:	4641      	mov	r1, r8
   86000:	4620      	mov	r0, r4
   86002:	f000 ff79 	bl	86ef8 <_Bfree>
   86006:	2e00      	cmp	r6, #0
   86008:	f43f ae3d 	beq.w	85c86 <_dtoa_r+0x37e>
   8600c:	f1bb 0f00 	cmp.w	fp, #0
   86010:	d005      	beq.n	8601e <_dtoa_r+0x716>
   86012:	45b3      	cmp	fp, r6
   86014:	d003      	beq.n	8601e <_dtoa_r+0x716>
   86016:	4659      	mov	r1, fp
   86018:	4620      	mov	r0, r4
   8601a:	f000 ff6d 	bl	86ef8 <_Bfree>
   8601e:	4631      	mov	r1, r6
   86020:	4620      	mov	r0, r4
   86022:	f000 ff69 	bl	86ef8 <_Bfree>
   86026:	e62e      	b.n	85c86 <_dtoa_r+0x37e>
   86028:	2300      	movs	r3, #0
   8602a:	930b      	str	r3, [sp, #44]	; 0x2c
   8602c:	9b02      	ldr	r3, [sp, #8]
   8602e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   86030:	4413      	add	r3, r2
   86032:	930f      	str	r3, [sp, #60]	; 0x3c
   86034:	3301      	adds	r3, #1
   86036:	2b01      	cmp	r3, #1
   86038:	461f      	mov	r7, r3
   8603a:	461e      	mov	r6, r3
   8603c:	bfb8      	it	lt
   8603e:	2701      	movlt	r7, #1
   86040:	9307      	str	r3, [sp, #28]
   86042:	2100      	movs	r1, #0
   86044:	2f17      	cmp	r7, #23
   86046:	6461      	str	r1, [r4, #68]	; 0x44
   86048:	d90a      	bls.n	86060 <_dtoa_r+0x758>
   8604a:	2201      	movs	r2, #1
   8604c:	2304      	movs	r3, #4
   8604e:	005b      	lsls	r3, r3, #1
   86050:	f103 0014 	add.w	r0, r3, #20
   86054:	4287      	cmp	r7, r0
   86056:	4611      	mov	r1, r2
   86058:	f102 0201 	add.w	r2, r2, #1
   8605c:	d2f7      	bcs.n	8604e <_dtoa_r+0x746>
   8605e:	6461      	str	r1, [r4, #68]	; 0x44
   86060:	4620      	mov	r0, r4
   86062:	f000 ff23 	bl	86eac <_Balloc>
   86066:	2e0e      	cmp	r6, #14
   86068:	9004      	str	r0, [sp, #16]
   8606a:	6420      	str	r0, [r4, #64]	; 0x40
   8606c:	f63f ad47 	bhi.w	85afe <_dtoa_r+0x1f6>
   86070:	2d00      	cmp	r5, #0
   86072:	f43f ad44 	beq.w	85afe <_dtoa_r+0x1f6>
   86076:	9902      	ldr	r1, [sp, #8]
   86078:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   8607c:	2900      	cmp	r1, #0
   8607e:	f340 8203 	ble.w	86488 <_dtoa_r+0xb80>
   86082:	4bb9      	ldr	r3, [pc, #740]	; (86368 <_dtoa_r+0xa60>)
   86084:	f001 020f 	and.w	r2, r1, #15
   86088:	110d      	asrs	r5, r1, #4
   8608a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8608e:	06e9      	lsls	r1, r5, #27
   86090:	e9d3 6700 	ldrd	r6, r7, [r3]
   86094:	f140 81af 	bpl.w	863f6 <_dtoa_r+0xaee>
   86098:	4bb4      	ldr	r3, [pc, #720]	; (8636c <_dtoa_r+0xa64>)
   8609a:	4650      	mov	r0, sl
   8609c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   860a0:	4659      	mov	r1, fp
   860a2:	f002 f95f 	bl	88364 <__aeabi_ddiv>
   860a6:	f04f 0a03 	mov.w	sl, #3
   860aa:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   860ae:	f005 050f 	and.w	r5, r5, #15
   860b2:	b18d      	cbz	r5, 860d8 <_dtoa_r+0x7d0>
   860b4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8636c <_dtoa_r+0xa64>
   860b8:	07ea      	lsls	r2, r5, #31
   860ba:	d509      	bpl.n	860d0 <_dtoa_r+0x7c8>
   860bc:	e9d8 2300 	ldrd	r2, r3, [r8]
   860c0:	4630      	mov	r0, r6
   860c2:	4639      	mov	r1, r7
   860c4:	f002 f824 	bl	88110 <__aeabi_dmul>
   860c8:	4606      	mov	r6, r0
   860ca:	460f      	mov	r7, r1
   860cc:	f10a 0a01 	add.w	sl, sl, #1
   860d0:	106d      	asrs	r5, r5, #1
   860d2:	f108 0808 	add.w	r8, r8, #8
   860d6:	d1ef      	bne.n	860b8 <_dtoa_r+0x7b0>
   860d8:	463b      	mov	r3, r7
   860da:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   860de:	4632      	mov	r2, r6
   860e0:	f002 f940 	bl	88364 <__aeabi_ddiv>
   860e4:	4607      	mov	r7, r0
   860e6:	4688      	mov	r8, r1
   860e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   860ea:	b143      	cbz	r3, 860fe <_dtoa_r+0x7f6>
   860ec:	2200      	movs	r2, #0
   860ee:	4ba0      	ldr	r3, [pc, #640]	; (86370 <_dtoa_r+0xa68>)
   860f0:	4638      	mov	r0, r7
   860f2:	4641      	mov	r1, r8
   860f4:	f002 fa7e 	bl	885f4 <__aeabi_dcmplt>
   860f8:	2800      	cmp	r0, #0
   860fa:	f040 8287 	bne.w	8660c <_dtoa_r+0xd04>
   860fe:	4650      	mov	r0, sl
   86100:	f001 ffa0 	bl	88044 <__aeabi_i2d>
   86104:	463a      	mov	r2, r7
   86106:	4643      	mov	r3, r8
   86108:	f002 f802 	bl	88110 <__aeabi_dmul>
   8610c:	4b99      	ldr	r3, [pc, #612]	; (86374 <_dtoa_r+0xa6c>)
   8610e:	2200      	movs	r2, #0
   86110:	f001 fe4c 	bl	87dac <__adddf3>
   86114:	9b07      	ldr	r3, [sp, #28]
   86116:	4605      	mov	r5, r0
   86118:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8611c:	2b00      	cmp	r3, #0
   8611e:	f000 813f 	beq.w	863a0 <_dtoa_r+0xa98>
   86122:	9b02      	ldr	r3, [sp, #8]
   86124:	9315      	str	r3, [sp, #84]	; 0x54
   86126:	9b07      	ldr	r3, [sp, #28]
   86128:	9312      	str	r3, [sp, #72]	; 0x48
   8612a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8612c:	2b00      	cmp	r3, #0
   8612e:	f000 81fb 	beq.w	86528 <_dtoa_r+0xc20>
   86132:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86134:	4b8c      	ldr	r3, [pc, #560]	; (86368 <_dtoa_r+0xa60>)
   86136:	2000      	movs	r0, #0
   86138:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8613c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   86140:	498d      	ldr	r1, [pc, #564]	; (86378 <_dtoa_r+0xa70>)
   86142:	f002 f90f 	bl	88364 <__aeabi_ddiv>
   86146:	462a      	mov	r2, r5
   86148:	4633      	mov	r3, r6
   8614a:	f001 fe2d 	bl	87da8 <__aeabi_dsub>
   8614e:	4682      	mov	sl, r0
   86150:	468b      	mov	fp, r1
   86152:	4638      	mov	r0, r7
   86154:	4641      	mov	r1, r8
   86156:	f002 fa8b 	bl	88670 <__aeabi_d2iz>
   8615a:	4605      	mov	r5, r0
   8615c:	f001 ff72 	bl	88044 <__aeabi_i2d>
   86160:	4602      	mov	r2, r0
   86162:	460b      	mov	r3, r1
   86164:	4638      	mov	r0, r7
   86166:	4641      	mov	r1, r8
   86168:	f001 fe1e 	bl	87da8 <__aeabi_dsub>
   8616c:	3530      	adds	r5, #48	; 0x30
   8616e:	fa5f f885 	uxtb.w	r8, r5
   86172:	9d04      	ldr	r5, [sp, #16]
   86174:	4606      	mov	r6, r0
   86176:	460f      	mov	r7, r1
   86178:	f885 8000 	strb.w	r8, [r5]
   8617c:	4602      	mov	r2, r0
   8617e:	460b      	mov	r3, r1
   86180:	4650      	mov	r0, sl
   86182:	4659      	mov	r1, fp
   86184:	3501      	adds	r5, #1
   86186:	f002 fa53 	bl	88630 <__aeabi_dcmpgt>
   8618a:	2800      	cmp	r0, #0
   8618c:	d154      	bne.n	86238 <_dtoa_r+0x930>
   8618e:	4632      	mov	r2, r6
   86190:	463b      	mov	r3, r7
   86192:	2000      	movs	r0, #0
   86194:	4976      	ldr	r1, [pc, #472]	; (86370 <_dtoa_r+0xa68>)
   86196:	f001 fe07 	bl	87da8 <__aeabi_dsub>
   8619a:	4602      	mov	r2, r0
   8619c:	460b      	mov	r3, r1
   8619e:	4650      	mov	r0, sl
   861a0:	4659      	mov	r1, fp
   861a2:	f002 fa45 	bl	88630 <__aeabi_dcmpgt>
   861a6:	2800      	cmp	r0, #0
   861a8:	f040 8270 	bne.w	8668c <_dtoa_r+0xd84>
   861ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
   861ae:	2a01      	cmp	r2, #1
   861b0:	f000 8112 	beq.w	863d8 <_dtoa_r+0xad0>
   861b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   861b6:	9a04      	ldr	r2, [sp, #16]
   861b8:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   861bc:	4413      	add	r3, r2
   861be:	4699      	mov	r9, r3
   861c0:	e00f      	b.n	861e2 <_dtoa_r+0x8da>
   861c2:	4632      	mov	r2, r6
   861c4:	463b      	mov	r3, r7
   861c6:	2000      	movs	r0, #0
   861c8:	4969      	ldr	r1, [pc, #420]	; (86370 <_dtoa_r+0xa68>)
   861ca:	f001 fded 	bl	87da8 <__aeabi_dsub>
   861ce:	4652      	mov	r2, sl
   861d0:	465b      	mov	r3, fp
   861d2:	f002 fa0f 	bl	885f4 <__aeabi_dcmplt>
   861d6:	2800      	cmp	r0, #0
   861d8:	f040 8256 	bne.w	86688 <_dtoa_r+0xd80>
   861dc:	454d      	cmp	r5, r9
   861de:	f000 80f9 	beq.w	863d4 <_dtoa_r+0xacc>
   861e2:	4650      	mov	r0, sl
   861e4:	4659      	mov	r1, fp
   861e6:	2200      	movs	r2, #0
   861e8:	4b64      	ldr	r3, [pc, #400]	; (8637c <_dtoa_r+0xa74>)
   861ea:	f001 ff91 	bl	88110 <__aeabi_dmul>
   861ee:	2200      	movs	r2, #0
   861f0:	4b62      	ldr	r3, [pc, #392]	; (8637c <_dtoa_r+0xa74>)
   861f2:	4682      	mov	sl, r0
   861f4:	468b      	mov	fp, r1
   861f6:	4630      	mov	r0, r6
   861f8:	4639      	mov	r1, r7
   861fa:	f001 ff89 	bl	88110 <__aeabi_dmul>
   861fe:	460f      	mov	r7, r1
   86200:	4606      	mov	r6, r0
   86202:	f002 fa35 	bl	88670 <__aeabi_d2iz>
   86206:	4680      	mov	r8, r0
   86208:	f001 ff1c 	bl	88044 <__aeabi_i2d>
   8620c:	4602      	mov	r2, r0
   8620e:	460b      	mov	r3, r1
   86210:	4630      	mov	r0, r6
   86212:	4639      	mov	r1, r7
   86214:	f001 fdc8 	bl	87da8 <__aeabi_dsub>
   86218:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8621c:	fa5f f888 	uxtb.w	r8, r8
   86220:	f805 8b01 	strb.w	r8, [r5], #1
   86224:	4652      	mov	r2, sl
   86226:	465b      	mov	r3, fp
   86228:	4606      	mov	r6, r0
   8622a:	460f      	mov	r7, r1
   8622c:	f002 f9e2 	bl	885f4 <__aeabi_dcmplt>
   86230:	2800      	cmp	r0, #0
   86232:	d0c6      	beq.n	861c2 <_dtoa_r+0x8ba>
   86234:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86238:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8623a:	9302      	str	r3, [sp, #8]
   8623c:	e523      	b.n	85c86 <_dtoa_r+0x37e>
   8623e:	2300      	movs	r3, #0
   86240:	930b      	str	r3, [sp, #44]	; 0x2c
   86242:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86244:	2b00      	cmp	r3, #0
   86246:	f340 80dd 	ble.w	86404 <_dtoa_r+0xafc>
   8624a:	461f      	mov	r7, r3
   8624c:	461e      	mov	r6, r3
   8624e:	930f      	str	r3, [sp, #60]	; 0x3c
   86250:	9307      	str	r3, [sp, #28]
   86252:	e6f6      	b.n	86042 <_dtoa_r+0x73a>
   86254:	2301      	movs	r3, #1
   86256:	930b      	str	r3, [sp, #44]	; 0x2c
   86258:	e7f3      	b.n	86242 <_dtoa_r+0x93a>
   8625a:	f1ba 0f00 	cmp.w	sl, #0
   8625e:	f47f ada7 	bne.w	85db0 <_dtoa_r+0x4a8>
   86262:	f3cb 0313 	ubfx	r3, fp, #0, #20
   86266:	2b00      	cmp	r3, #0
   86268:	f47f adbc 	bne.w	85de4 <_dtoa_r+0x4dc>
   8626c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   86270:	0d3f      	lsrs	r7, r7, #20
   86272:	053f      	lsls	r7, r7, #20
   86274:	2f00      	cmp	r7, #0
   86276:	f000 820d 	beq.w	86694 <_dtoa_r+0xd8c>
   8627a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8627c:	3301      	adds	r3, #1
   8627e:	930a      	str	r3, [sp, #40]	; 0x28
   86280:	9b08      	ldr	r3, [sp, #32]
   86282:	3301      	adds	r3, #1
   86284:	9308      	str	r3, [sp, #32]
   86286:	2301      	movs	r3, #1
   86288:	930c      	str	r3, [sp, #48]	; 0x30
   8628a:	e5ad      	b.n	85de8 <_dtoa_r+0x4e0>
   8628c:	9b07      	ldr	r3, [sp, #28]
   8628e:	2b00      	cmp	r3, #0
   86290:	f73f ac48 	bgt.w	85b24 <_dtoa_r+0x21c>
   86294:	f040 8222 	bne.w	866dc <_dtoa_r+0xdd4>
   86298:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   8629c:	2200      	movs	r2, #0
   8629e:	4b38      	ldr	r3, [pc, #224]	; (86380 <_dtoa_r+0xa78>)
   862a0:	f001 ff36 	bl	88110 <__aeabi_dmul>
   862a4:	4652      	mov	r2, sl
   862a6:	465b      	mov	r3, fp
   862a8:	f002 f9b8 	bl	8861c <__aeabi_dcmpge>
   862ac:	f8dd 801c 	ldr.w	r8, [sp, #28]
   862b0:	4646      	mov	r6, r8
   862b2:	2800      	cmp	r0, #0
   862b4:	d041      	beq.n	8633a <_dtoa_r+0xa32>
   862b6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   862b8:	9d04      	ldr	r5, [sp, #16]
   862ba:	43db      	mvns	r3, r3
   862bc:	9302      	str	r3, [sp, #8]
   862be:	4641      	mov	r1, r8
   862c0:	4620      	mov	r0, r4
   862c2:	f000 fe19 	bl	86ef8 <_Bfree>
   862c6:	2e00      	cmp	r6, #0
   862c8:	f43f acdd 	beq.w	85c86 <_dtoa_r+0x37e>
   862cc:	e6a7      	b.n	8601e <_dtoa_r+0x716>
   862ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   862d0:	4649      	mov	r1, r9
   862d2:	4620      	mov	r0, r4
   862d4:	f000 ff48 	bl	87168 <__pow5mult>
   862d8:	4681      	mov	r9, r0
   862da:	e557      	b.n	85d8c <_dtoa_r+0x484>
   862dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
   862de:	2a00      	cmp	r2, #0
   862e0:	f000 8188 	beq.w	865f4 <_dtoa_r+0xcec>
   862e4:	f203 4333 	addw	r3, r3, #1075	; 0x433
   862e8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   862ea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   862ec:	e4f2      	b.n	85cd4 <_dtoa_r+0x3cc>
   862ee:	f1ba 0f00 	cmp.w	sl, #0
   862f2:	f47f ad77 	bne.w	85de4 <_dtoa_r+0x4dc>
   862f6:	e7b4      	b.n	86262 <_dtoa_r+0x95a>
   862f8:	f000 fe08 	bl	86f0c <__multadd>
   862fc:	4647      	mov	r7, r8
   862fe:	4606      	mov	r6, r0
   86300:	4683      	mov	fp, r0
   86302:	e5c0      	b.n	85e86 <_dtoa_r+0x57e>
   86304:	4601      	mov	r1, r0
   86306:	4620      	mov	r0, r4
   86308:	9308      	str	r3, [sp, #32]
   8630a:	f000 fdf5 	bl	86ef8 <_Bfree>
   8630e:	2201      	movs	r2, #1
   86310:	9b08      	ldr	r3, [sp, #32]
   86312:	e5e2      	b.n	85eda <_dtoa_r+0x5d2>
   86314:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86316:	2b02      	cmp	r3, #2
   86318:	f77f ad98 	ble.w	85e4c <_dtoa_r+0x544>
   8631c:	9b07      	ldr	r3, [sp, #28]
   8631e:	2b00      	cmp	r3, #0
   86320:	d1c9      	bne.n	862b6 <_dtoa_r+0x9ae>
   86322:	4641      	mov	r1, r8
   86324:	2205      	movs	r2, #5
   86326:	4620      	mov	r0, r4
   86328:	f000 fdf0 	bl	86f0c <__multadd>
   8632c:	4601      	mov	r1, r0
   8632e:	4680      	mov	r8, r0
   86330:	4648      	mov	r0, r9
   86332:	f000 ffb9 	bl	872a8 <__mcmp>
   86336:	2800      	cmp	r0, #0
   86338:	ddbd      	ble.n	862b6 <_dtoa_r+0x9ae>
   8633a:	2331      	movs	r3, #49	; 0x31
   8633c:	9a02      	ldr	r2, [sp, #8]
   8633e:	9904      	ldr	r1, [sp, #16]
   86340:	3201      	adds	r2, #1
   86342:	9202      	str	r2, [sp, #8]
   86344:	700b      	strb	r3, [r1, #0]
   86346:	1c4d      	adds	r5, r1, #1
   86348:	e7b9      	b.n	862be <_dtoa_r+0x9b6>
   8634a:	2331      	movs	r3, #49	; 0x31
   8634c:	9a02      	ldr	r2, [sp, #8]
   8634e:	3201      	adds	r2, #1
   86350:	9202      	str	r2, [sp, #8]
   86352:	9a04      	ldr	r2, [sp, #16]
   86354:	7013      	strb	r3, [r2, #0]
   86356:	e652      	b.n	85ffe <_dtoa_r+0x6f6>
   86358:	2301      	movs	r3, #1
   8635a:	930b      	str	r3, [sp, #44]	; 0x2c
   8635c:	e666      	b.n	8602c <_dtoa_r+0x724>
   8635e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   86362:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   86364:	e48f      	b.n	85c86 <_dtoa_r+0x37e>
   86366:	bf00      	nop
   86368:	00089928 	.word	0x00089928
   8636c:	00089900 	.word	0x00089900
   86370:	3ff00000 	.word	0x3ff00000
   86374:	401c0000 	.word	0x401c0000
   86378:	3fe00000 	.word	0x3fe00000
   8637c:	40240000 	.word	0x40240000
   86380:	40140000 	.word	0x40140000
   86384:	4650      	mov	r0, sl
   86386:	f001 fe5d 	bl	88044 <__aeabi_i2d>
   8638a:	463a      	mov	r2, r7
   8638c:	4643      	mov	r3, r8
   8638e:	f001 febf 	bl	88110 <__aeabi_dmul>
   86392:	2200      	movs	r2, #0
   86394:	4bc1      	ldr	r3, [pc, #772]	; (8669c <_dtoa_r+0xd94>)
   86396:	f001 fd09 	bl	87dac <__adddf3>
   8639a:	4605      	mov	r5, r0
   8639c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   863a0:	4641      	mov	r1, r8
   863a2:	2200      	movs	r2, #0
   863a4:	4bbe      	ldr	r3, [pc, #760]	; (866a0 <_dtoa_r+0xd98>)
   863a6:	4638      	mov	r0, r7
   863a8:	f001 fcfe 	bl	87da8 <__aeabi_dsub>
   863ac:	462a      	mov	r2, r5
   863ae:	4633      	mov	r3, r6
   863b0:	4682      	mov	sl, r0
   863b2:	468b      	mov	fp, r1
   863b4:	f002 f93c 	bl	88630 <__aeabi_dcmpgt>
   863b8:	4680      	mov	r8, r0
   863ba:	2800      	cmp	r0, #0
   863bc:	f040 8110 	bne.w	865e0 <_dtoa_r+0xcd8>
   863c0:	462a      	mov	r2, r5
   863c2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   863c6:	4650      	mov	r0, sl
   863c8:	4659      	mov	r1, fp
   863ca:	f002 f913 	bl	885f4 <__aeabi_dcmplt>
   863ce:	b118      	cbz	r0, 863d8 <_dtoa_r+0xad0>
   863d0:	4646      	mov	r6, r8
   863d2:	e770      	b.n	862b6 <_dtoa_r+0x9ae>
   863d4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   863d8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   863dc:	f7ff bb8f 	b.w	85afe <_dtoa_r+0x1f6>
   863e0:	9804      	ldr	r0, [sp, #16]
   863e2:	f7ff bac0 	b.w	85966 <_dtoa_r+0x5e>
   863e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   863e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   863ea:	1afb      	subs	r3, r7, r3
   863ec:	441a      	add	r2, r3
   863ee:	970c      	str	r7, [sp, #48]	; 0x30
   863f0:	920d      	str	r2, [sp, #52]	; 0x34
   863f2:	2700      	movs	r7, #0
   863f4:	e468      	b.n	85cc8 <_dtoa_r+0x3c0>
   863f6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   863fa:	f04f 0a02 	mov.w	sl, #2
   863fe:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   86402:	e656      	b.n	860b2 <_dtoa_r+0x7aa>
   86404:	2100      	movs	r1, #0
   86406:	2301      	movs	r3, #1
   86408:	4620      	mov	r0, r4
   8640a:	6461      	str	r1, [r4, #68]	; 0x44
   8640c:	9325      	str	r3, [sp, #148]	; 0x94
   8640e:	f000 fd4d 	bl	86eac <_Balloc>
   86412:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86414:	9004      	str	r0, [sp, #16]
   86416:	9307      	str	r3, [sp, #28]
   86418:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8641a:	6420      	str	r0, [r4, #64]	; 0x40
   8641c:	930f      	str	r3, [sp, #60]	; 0x3c
   8641e:	e627      	b.n	86070 <_dtoa_r+0x768>
   86420:	2a00      	cmp	r2, #0
   86422:	46d0      	mov	r8, sl
   86424:	f8cd b020 	str.w	fp, [sp, #32]
   86428:	469a      	mov	sl, r3
   8642a:	dd11      	ble.n	86450 <_dtoa_r+0xb48>
   8642c:	4649      	mov	r1, r9
   8642e:	2201      	movs	r2, #1
   86430:	4620      	mov	r0, r4
   86432:	f000 fee9 	bl	87208 <__lshift>
   86436:	4641      	mov	r1, r8
   86438:	4681      	mov	r9, r0
   8643a:	f000 ff35 	bl	872a8 <__mcmp>
   8643e:	2800      	cmp	r0, #0
   86440:	f340 8145 	ble.w	866ce <_dtoa_r+0xdc6>
   86444:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   86448:	f000 8105 	beq.w	86656 <_dtoa_r+0xd4e>
   8644c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   86450:	46b3      	mov	fp, r6
   86452:	f887 a000 	strb.w	sl, [r7]
   86456:	1c7d      	adds	r5, r7, #1
   86458:	9e08      	ldr	r6, [sp, #32]
   8645a:	e5d0      	b.n	85ffe <_dtoa_r+0x6f6>
   8645c:	d104      	bne.n	86468 <_dtoa_r+0xb60>
   8645e:	f01a 0f01 	tst.w	sl, #1
   86462:	d001      	beq.n	86468 <_dtoa_r+0xb60>
   86464:	e5bb      	b.n	85fde <_dtoa_r+0x6d6>
   86466:	4615      	mov	r5, r2
   86468:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   8646c:	1e6a      	subs	r2, r5, #1
   8646e:	2b30      	cmp	r3, #48	; 0x30
   86470:	d0f9      	beq.n	86466 <_dtoa_r+0xb5e>
   86472:	e5c4      	b.n	85ffe <_dtoa_r+0x6f6>
   86474:	2230      	movs	r2, #48	; 0x30
   86476:	9904      	ldr	r1, [sp, #16]
   86478:	700a      	strb	r2, [r1, #0]
   8647a:	9a02      	ldr	r2, [sp, #8]
   8647c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   86480:	3201      	adds	r2, #1
   86482:	9202      	str	r2, [sp, #8]
   86484:	f7ff bbfb 	b.w	85c7e <_dtoa_r+0x376>
   86488:	f000 80bb 	beq.w	86602 <_dtoa_r+0xcfa>
   8648c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86490:	9b02      	ldr	r3, [sp, #8]
   86492:	f04f 0a02 	mov.w	sl, #2
   86496:	425d      	negs	r5, r3
   86498:	4b82      	ldr	r3, [pc, #520]	; (866a4 <_dtoa_r+0xd9c>)
   8649a:	f005 020f 	and.w	r2, r5, #15
   8649e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   864a2:	e9d3 2300 	ldrd	r2, r3, [r3]
   864a6:	f001 fe33 	bl	88110 <__aeabi_dmul>
   864aa:	112d      	asrs	r5, r5, #4
   864ac:	4607      	mov	r7, r0
   864ae:	4688      	mov	r8, r1
   864b0:	f43f ae1a 	beq.w	860e8 <_dtoa_r+0x7e0>
   864b4:	4e7c      	ldr	r6, [pc, #496]	; (866a8 <_dtoa_r+0xda0>)
   864b6:	07eb      	lsls	r3, r5, #31
   864b8:	d509      	bpl.n	864ce <_dtoa_r+0xbc6>
   864ba:	e9d6 2300 	ldrd	r2, r3, [r6]
   864be:	4638      	mov	r0, r7
   864c0:	4641      	mov	r1, r8
   864c2:	f001 fe25 	bl	88110 <__aeabi_dmul>
   864c6:	4607      	mov	r7, r0
   864c8:	4688      	mov	r8, r1
   864ca:	f10a 0a01 	add.w	sl, sl, #1
   864ce:	106d      	asrs	r5, r5, #1
   864d0:	f106 0608 	add.w	r6, r6, #8
   864d4:	d1ef      	bne.n	864b6 <_dtoa_r+0xbae>
   864d6:	e607      	b.n	860e8 <_dtoa_r+0x7e0>
   864d8:	6871      	ldr	r1, [r6, #4]
   864da:	4620      	mov	r0, r4
   864dc:	f000 fce6 	bl	86eac <_Balloc>
   864e0:	4605      	mov	r5, r0
   864e2:	6933      	ldr	r3, [r6, #16]
   864e4:	f106 010c 	add.w	r1, r6, #12
   864e8:	3302      	adds	r3, #2
   864ea:	009a      	lsls	r2, r3, #2
   864ec:	300c      	adds	r0, #12
   864ee:	f000 fc5b 	bl	86da8 <memcpy>
   864f2:	4629      	mov	r1, r5
   864f4:	2201      	movs	r2, #1
   864f6:	4620      	mov	r0, r4
   864f8:	f000 fe86 	bl	87208 <__lshift>
   864fc:	9008      	str	r0, [sp, #32]
   864fe:	e4b6      	b.n	85e6e <_dtoa_r+0x566>
   86500:	2b39      	cmp	r3, #57	; 0x39
   86502:	f8cd b020 	str.w	fp, [sp, #32]
   86506:	46d0      	mov	r8, sl
   86508:	f000 80a5 	beq.w	86656 <_dtoa_r+0xd4e>
   8650c:	f103 0a01 	add.w	sl, r3, #1
   86510:	46b3      	mov	fp, r6
   86512:	f887 a000 	strb.w	sl, [r7]
   86516:	1c7d      	adds	r5, r7, #1
   86518:	9e08      	ldr	r6, [sp, #32]
   8651a:	e570      	b.n	85ffe <_dtoa_r+0x6f6>
   8651c:	465a      	mov	r2, fp
   8651e:	46d0      	mov	r8, sl
   86520:	46b3      	mov	fp, r6
   86522:	469a      	mov	sl, r3
   86524:	4616      	mov	r6, r2
   86526:	e54e      	b.n	85fc6 <_dtoa_r+0x6be>
   86528:	9812      	ldr	r0, [sp, #72]	; 0x48
   8652a:	495e      	ldr	r1, [pc, #376]	; (866a4 <_dtoa_r+0xd9c>)
   8652c:	462a      	mov	r2, r5
   8652e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   86532:	4633      	mov	r3, r6
   86534:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   86538:	f001 fdea 	bl	88110 <__aeabi_dmul>
   8653c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   86540:	4638      	mov	r0, r7
   86542:	4641      	mov	r1, r8
   86544:	f002 f894 	bl	88670 <__aeabi_d2iz>
   86548:	4605      	mov	r5, r0
   8654a:	f001 fd7b 	bl	88044 <__aeabi_i2d>
   8654e:	4602      	mov	r2, r0
   86550:	460b      	mov	r3, r1
   86552:	4638      	mov	r0, r7
   86554:	4641      	mov	r1, r8
   86556:	f001 fc27 	bl	87da8 <__aeabi_dsub>
   8655a:	4606      	mov	r6, r0
   8655c:	9812      	ldr	r0, [sp, #72]	; 0x48
   8655e:	9a04      	ldr	r2, [sp, #16]
   86560:	3530      	adds	r5, #48	; 0x30
   86562:	2801      	cmp	r0, #1
   86564:	7015      	strb	r5, [r2, #0]
   86566:	460f      	mov	r7, r1
   86568:	f102 0501 	add.w	r5, r2, #1
   8656c:	d026      	beq.n	865bc <_dtoa_r+0xcb4>
   8656e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86570:	9a04      	ldr	r2, [sp, #16]
   86572:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   86576:	4413      	add	r3, r2
   86578:	f04f 0a00 	mov.w	sl, #0
   8657c:	4699      	mov	r9, r3
   8657e:	f8df b130 	ldr.w	fp, [pc, #304]	; 866b0 <_dtoa_r+0xda8>
   86582:	4652      	mov	r2, sl
   86584:	465b      	mov	r3, fp
   86586:	4630      	mov	r0, r6
   86588:	4639      	mov	r1, r7
   8658a:	f001 fdc1 	bl	88110 <__aeabi_dmul>
   8658e:	460f      	mov	r7, r1
   86590:	4606      	mov	r6, r0
   86592:	f002 f86d 	bl	88670 <__aeabi_d2iz>
   86596:	4680      	mov	r8, r0
   86598:	f001 fd54 	bl	88044 <__aeabi_i2d>
   8659c:	4602      	mov	r2, r0
   8659e:	460b      	mov	r3, r1
   865a0:	4630      	mov	r0, r6
   865a2:	4639      	mov	r1, r7
   865a4:	f001 fc00 	bl	87da8 <__aeabi_dsub>
   865a8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   865ac:	f805 8b01 	strb.w	r8, [r5], #1
   865b0:	454d      	cmp	r5, r9
   865b2:	4606      	mov	r6, r0
   865b4:	460f      	mov	r7, r1
   865b6:	d1e4      	bne.n	86582 <_dtoa_r+0xc7a>
   865b8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   865bc:	2200      	movs	r2, #0
   865be:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   865c2:	4b3a      	ldr	r3, [pc, #232]	; (866ac <_dtoa_r+0xda4>)
   865c4:	f001 fbf2 	bl	87dac <__adddf3>
   865c8:	4632      	mov	r2, r6
   865ca:	463b      	mov	r3, r7
   865cc:	f002 f812 	bl	885f4 <__aeabi_dcmplt>
   865d0:	2800      	cmp	r0, #0
   865d2:	d046      	beq.n	86662 <_dtoa_r+0xd5a>
   865d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   865d6:	9302      	str	r3, [sp, #8]
   865d8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   865dc:	f7ff bb42 	b.w	85c64 <_dtoa_r+0x35c>
   865e0:	f04f 0800 	mov.w	r8, #0
   865e4:	4646      	mov	r6, r8
   865e6:	e6a8      	b.n	8633a <_dtoa_r+0xa32>
   865e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   865ea:	9a07      	ldr	r2, [sp, #28]
   865ec:	1a9d      	subs	r5, r3, r2
   865ee:	2300      	movs	r3, #0
   865f0:	f7ff bb70 	b.w	85cd4 <_dtoa_r+0x3cc>
   865f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   865f6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   865f8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   865fc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   865fe:	f7ff bb69 	b.w	85cd4 <_dtoa_r+0x3cc>
   86602:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   86606:	f04f 0a02 	mov.w	sl, #2
   8660a:	e56d      	b.n	860e8 <_dtoa_r+0x7e0>
   8660c:	9b07      	ldr	r3, [sp, #28]
   8660e:	2b00      	cmp	r3, #0
   86610:	f43f aeb8 	beq.w	86384 <_dtoa_r+0xa7c>
   86614:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86616:	2b00      	cmp	r3, #0
   86618:	f77f aede 	ble.w	863d8 <_dtoa_r+0xad0>
   8661c:	2200      	movs	r2, #0
   8661e:	4b24      	ldr	r3, [pc, #144]	; (866b0 <_dtoa_r+0xda8>)
   86620:	4638      	mov	r0, r7
   86622:	4641      	mov	r1, r8
   86624:	f001 fd74 	bl	88110 <__aeabi_dmul>
   86628:	4607      	mov	r7, r0
   8662a:	4688      	mov	r8, r1
   8662c:	f10a 0001 	add.w	r0, sl, #1
   86630:	f001 fd08 	bl	88044 <__aeabi_i2d>
   86634:	463a      	mov	r2, r7
   86636:	4643      	mov	r3, r8
   86638:	f001 fd6a 	bl	88110 <__aeabi_dmul>
   8663c:	2200      	movs	r2, #0
   8663e:	4b17      	ldr	r3, [pc, #92]	; (8669c <_dtoa_r+0xd94>)
   86640:	f001 fbb4 	bl	87dac <__adddf3>
   86644:	9a02      	ldr	r2, [sp, #8]
   86646:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86648:	3a01      	subs	r2, #1
   8664a:	4605      	mov	r5, r0
   8664c:	9215      	str	r2, [sp, #84]	; 0x54
   8664e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   86652:	9312      	str	r3, [sp, #72]	; 0x48
   86654:	e569      	b.n	8612a <_dtoa_r+0x822>
   86656:	2239      	movs	r2, #57	; 0x39
   86658:	46b3      	mov	fp, r6
   8665a:	703a      	strb	r2, [r7, #0]
   8665c:	9e08      	ldr	r6, [sp, #32]
   8665e:	1c7d      	adds	r5, r7, #1
   86660:	e4bf      	b.n	85fe2 <_dtoa_r+0x6da>
   86662:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   86666:	2000      	movs	r0, #0
   86668:	4910      	ldr	r1, [pc, #64]	; (866ac <_dtoa_r+0xda4>)
   8666a:	f001 fb9d 	bl	87da8 <__aeabi_dsub>
   8666e:	4632      	mov	r2, r6
   86670:	463b      	mov	r3, r7
   86672:	f001 ffdd 	bl	88630 <__aeabi_dcmpgt>
   86676:	b908      	cbnz	r0, 8667c <_dtoa_r+0xd74>
   86678:	e6ae      	b.n	863d8 <_dtoa_r+0xad0>
   8667a:	4615      	mov	r5, r2
   8667c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   86680:	1e6a      	subs	r2, r5, #1
   86682:	2b30      	cmp	r3, #48	; 0x30
   86684:	d0f9      	beq.n	8667a <_dtoa_r+0xd72>
   86686:	e5d7      	b.n	86238 <_dtoa_r+0x930>
   86688:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   8668c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8668e:	9302      	str	r3, [sp, #8]
   86690:	f7ff bae8 	b.w	85c64 <_dtoa_r+0x35c>
   86694:	970c      	str	r7, [sp, #48]	; 0x30
   86696:	f7ff bba7 	b.w	85de8 <_dtoa_r+0x4e0>
   8669a:	bf00      	nop
   8669c:	401c0000 	.word	0x401c0000
   866a0:	40140000 	.word	0x40140000
   866a4:	00089928 	.word	0x00089928
   866a8:	00089900 	.word	0x00089900
   866ac:	3fe00000 	.word	0x3fe00000
   866b0:	40240000 	.word	0x40240000
   866b4:	2b39      	cmp	r3, #57	; 0x39
   866b6:	f8cd b020 	str.w	fp, [sp, #32]
   866ba:	46d0      	mov	r8, sl
   866bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
   866c0:	469a      	mov	sl, r3
   866c2:	d0c8      	beq.n	86656 <_dtoa_r+0xd4e>
   866c4:	f1bb 0f00 	cmp.w	fp, #0
   866c8:	f73f aec0 	bgt.w	8644c <_dtoa_r+0xb44>
   866cc:	e6c0      	b.n	86450 <_dtoa_r+0xb48>
   866ce:	f47f aebf 	bne.w	86450 <_dtoa_r+0xb48>
   866d2:	f01a 0f01 	tst.w	sl, #1
   866d6:	f43f aebb 	beq.w	86450 <_dtoa_r+0xb48>
   866da:	e6b3      	b.n	86444 <_dtoa_r+0xb3c>
   866dc:	f04f 0800 	mov.w	r8, #0
   866e0:	4646      	mov	r6, r8
   866e2:	e5e8      	b.n	862b6 <_dtoa_r+0x9ae>
   866e4:	4631      	mov	r1, r6
   866e6:	2300      	movs	r3, #0
   866e8:	220a      	movs	r2, #10
   866ea:	4620      	mov	r0, r4
   866ec:	f000 fc0e 	bl	86f0c <__multadd>
   866f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   866f2:	4606      	mov	r6, r0
   866f4:	2b00      	cmp	r3, #0
   866f6:	dd07      	ble.n	86708 <_dtoa_r+0xe00>
   866f8:	9307      	str	r3, [sp, #28]
   866fa:	f7ff bbab 	b.w	85e54 <_dtoa_r+0x54c>
   866fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86700:	2b02      	cmp	r3, #2
   86702:	dc1f      	bgt.n	86744 <_dtoa_r+0xe3c>
   86704:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86706:	e43c      	b.n	85f82 <_dtoa_r+0x67a>
   86708:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8670a:	2b02      	cmp	r3, #2
   8670c:	dc1a      	bgt.n	86744 <_dtoa_r+0xe3c>
   8670e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86710:	e7f2      	b.n	866f8 <_dtoa_r+0xdf0>
   86712:	f43f ab81 	beq.w	85e18 <_dtoa_r+0x510>
   86716:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   8671a:	e411      	b.n	85f40 <_dtoa_r+0x638>
   8671c:	2500      	movs	r5, #0
   8671e:	4620      	mov	r0, r4
   86720:	6465      	str	r5, [r4, #68]	; 0x44
   86722:	4629      	mov	r1, r5
   86724:	f000 fbc2 	bl	86eac <_Balloc>
   86728:	f04f 33ff 	mov.w	r3, #4294967295
   8672c:	9307      	str	r3, [sp, #28]
   8672e:	930f      	str	r3, [sp, #60]	; 0x3c
   86730:	2301      	movs	r3, #1
   86732:	9004      	str	r0, [sp, #16]
   86734:	9525      	str	r5, [sp, #148]	; 0x94
   86736:	6420      	str	r0, [r4, #64]	; 0x40
   86738:	930b      	str	r3, [sp, #44]	; 0x2c
   8673a:	f7ff b9e0 	b.w	85afe <_dtoa_r+0x1f6>
   8673e:	2501      	movs	r5, #1
   86740:	f7ff b9a8 	b.w	85a94 <_dtoa_r+0x18c>
   86744:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86746:	9307      	str	r3, [sp, #28]
   86748:	e5e8      	b.n	8631c <_dtoa_r+0xa14>
   8674a:	bf00      	nop

0008674c <__libc_fini_array>:
   8674c:	b538      	push	{r3, r4, r5, lr}
   8674e:	4c0a      	ldr	r4, [pc, #40]	; (86778 <__libc_fini_array+0x2c>)
   86750:	4d0a      	ldr	r5, [pc, #40]	; (8677c <__libc_fini_array+0x30>)
   86752:	1b64      	subs	r4, r4, r5
   86754:	10a4      	asrs	r4, r4, #2
   86756:	d00a      	beq.n	8676e <__libc_fini_array+0x22>
   86758:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8675c:	3b01      	subs	r3, #1
   8675e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   86762:	3c01      	subs	r4, #1
   86764:	f855 3904 	ldr.w	r3, [r5], #-4
   86768:	4798      	blx	r3
   8676a:	2c00      	cmp	r4, #0
   8676c:	d1f9      	bne.n	86762 <__libc_fini_array+0x16>
   8676e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   86772:	f003 b9cf 	b.w	89b14 <_fini>
   86776:	bf00      	nop
   86778:	00089b24 	.word	0x00089b24
   8677c:	00089b20 	.word	0x00089b20

00086780 <__locale_ctype_ptr_l>:
   86780:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   86784:	4770      	bx	lr
   86786:	bf00      	nop

00086788 <_localeconv_r>:
   86788:	4a04      	ldr	r2, [pc, #16]	; (8679c <_localeconv_r+0x14>)
   8678a:	4b05      	ldr	r3, [pc, #20]	; (867a0 <_localeconv_r+0x18>)
   8678c:	6812      	ldr	r2, [r2, #0]
   8678e:	6b50      	ldr	r0, [r2, #52]	; 0x34
   86790:	2800      	cmp	r0, #0
   86792:	bf08      	it	eq
   86794:	4618      	moveq	r0, r3
   86796:	30f0      	adds	r0, #240	; 0xf0
   86798:	4770      	bx	lr
   8679a:	bf00      	nop
   8679c:	2000062c 	.word	0x2000062c
   867a0:	20000a5c 	.word	0x20000a5c

000867a4 <__retarget_lock_acquire_recursive>:
   867a4:	4770      	bx	lr
   867a6:	bf00      	nop

000867a8 <__retarget_lock_release_recursive>:
   867a8:	4770      	bx	lr
   867aa:	bf00      	nop

000867ac <_malloc_r>:
   867ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   867b0:	f101 060b 	add.w	r6, r1, #11
   867b4:	2e16      	cmp	r6, #22
   867b6:	b083      	sub	sp, #12
   867b8:	4605      	mov	r5, r0
   867ba:	f240 809e 	bls.w	868fa <_malloc_r+0x14e>
   867be:	f036 0607 	bics.w	r6, r6, #7
   867c2:	f100 80bd 	bmi.w	86940 <_malloc_r+0x194>
   867c6:	42b1      	cmp	r1, r6
   867c8:	f200 80ba 	bhi.w	86940 <_malloc_r+0x194>
   867cc:	f000 fb62 	bl	86e94 <__malloc_lock>
   867d0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   867d4:	f0c0 8285 	bcc.w	86ce2 <_malloc_r+0x536>
   867d8:	0a73      	lsrs	r3, r6, #9
   867da:	f000 80b8 	beq.w	8694e <_malloc_r+0x1a2>
   867de:	2b04      	cmp	r3, #4
   867e0:	f200 816c 	bhi.w	86abc <_malloc_r+0x310>
   867e4:	09b3      	lsrs	r3, r6, #6
   867e6:	f103 0039 	add.w	r0, r3, #57	; 0x39
   867ea:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   867ee:	00c1      	lsls	r1, r0, #3
   867f0:	4fb8      	ldr	r7, [pc, #736]	; (86ad4 <_malloc_r+0x328>)
   867f2:	4439      	add	r1, r7
   867f4:	684c      	ldr	r4, [r1, #4]
   867f6:	3908      	subs	r1, #8
   867f8:	42a1      	cmp	r1, r4
   867fa:	d106      	bne.n	8680a <_malloc_r+0x5e>
   867fc:	e00c      	b.n	86818 <_malloc_r+0x6c>
   867fe:	2a00      	cmp	r2, #0
   86800:	f280 80ab 	bge.w	8695a <_malloc_r+0x1ae>
   86804:	68e4      	ldr	r4, [r4, #12]
   86806:	42a1      	cmp	r1, r4
   86808:	d006      	beq.n	86818 <_malloc_r+0x6c>
   8680a:	6863      	ldr	r3, [r4, #4]
   8680c:	f023 0303 	bic.w	r3, r3, #3
   86810:	1b9a      	subs	r2, r3, r6
   86812:	2a0f      	cmp	r2, #15
   86814:	ddf3      	ble.n	867fe <_malloc_r+0x52>
   86816:	4670      	mov	r0, lr
   86818:	693c      	ldr	r4, [r7, #16]
   8681a:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 86ae8 <_malloc_r+0x33c>
   8681e:	4574      	cmp	r4, lr
   86820:	f000 819e 	beq.w	86b60 <_malloc_r+0x3b4>
   86824:	6863      	ldr	r3, [r4, #4]
   86826:	f023 0303 	bic.w	r3, r3, #3
   8682a:	1b9a      	subs	r2, r3, r6
   8682c:	2a0f      	cmp	r2, #15
   8682e:	f300 8183 	bgt.w	86b38 <_malloc_r+0x38c>
   86832:	2a00      	cmp	r2, #0
   86834:	f8c7 e014 	str.w	lr, [r7, #20]
   86838:	f8c7 e010 	str.w	lr, [r7, #16]
   8683c:	f280 8091 	bge.w	86962 <_malloc_r+0x1b6>
   86840:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   86844:	f080 8154 	bcs.w	86af0 <_malloc_r+0x344>
   86848:	2201      	movs	r2, #1
   8684a:	08db      	lsrs	r3, r3, #3
   8684c:	6879      	ldr	r1, [r7, #4]
   8684e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   86852:	4413      	add	r3, r2
   86854:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   86858:	fa02 f20c 	lsl.w	r2, r2, ip
   8685c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   86860:	430a      	orrs	r2, r1
   86862:	f1ac 0108 	sub.w	r1, ip, #8
   86866:	60e1      	str	r1, [r4, #12]
   86868:	f8c4 8008 	str.w	r8, [r4, #8]
   8686c:	607a      	str	r2, [r7, #4]
   8686e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   86872:	f8c8 400c 	str.w	r4, [r8, #12]
   86876:	2401      	movs	r4, #1
   86878:	1083      	asrs	r3, r0, #2
   8687a:	409c      	lsls	r4, r3
   8687c:	4294      	cmp	r4, r2
   8687e:	d87d      	bhi.n	8697c <_malloc_r+0x1d0>
   86880:	4214      	tst	r4, r2
   86882:	d106      	bne.n	86892 <_malloc_r+0xe6>
   86884:	f020 0003 	bic.w	r0, r0, #3
   86888:	0064      	lsls	r4, r4, #1
   8688a:	4214      	tst	r4, r2
   8688c:	f100 0004 	add.w	r0, r0, #4
   86890:	d0fa      	beq.n	86888 <_malloc_r+0xdc>
   86892:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   86896:	46cc      	mov	ip, r9
   86898:	4680      	mov	r8, r0
   8689a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8689e:	459c      	cmp	ip, r3
   868a0:	d107      	bne.n	868b2 <_malloc_r+0x106>
   868a2:	e15f      	b.n	86b64 <_malloc_r+0x3b8>
   868a4:	2a00      	cmp	r2, #0
   868a6:	f280 816d 	bge.w	86b84 <_malloc_r+0x3d8>
   868aa:	68db      	ldr	r3, [r3, #12]
   868ac:	459c      	cmp	ip, r3
   868ae:	f000 8159 	beq.w	86b64 <_malloc_r+0x3b8>
   868b2:	6859      	ldr	r1, [r3, #4]
   868b4:	f021 0103 	bic.w	r1, r1, #3
   868b8:	1b8a      	subs	r2, r1, r6
   868ba:	2a0f      	cmp	r2, #15
   868bc:	ddf2      	ble.n	868a4 <_malloc_r+0xf8>
   868be:	68dc      	ldr	r4, [r3, #12]
   868c0:	f8d3 c008 	ldr.w	ip, [r3, #8]
   868c4:	f046 0801 	orr.w	r8, r6, #1
   868c8:	4628      	mov	r0, r5
   868ca:	441e      	add	r6, r3
   868cc:	f042 0501 	orr.w	r5, r2, #1
   868d0:	f8c3 8004 	str.w	r8, [r3, #4]
   868d4:	f8cc 400c 	str.w	r4, [ip, #12]
   868d8:	f8c4 c008 	str.w	ip, [r4, #8]
   868dc:	617e      	str	r6, [r7, #20]
   868de:	613e      	str	r6, [r7, #16]
   868e0:	f8c6 e00c 	str.w	lr, [r6, #12]
   868e4:	f8c6 e008 	str.w	lr, [r6, #8]
   868e8:	6075      	str	r5, [r6, #4]
   868ea:	505a      	str	r2, [r3, r1]
   868ec:	9300      	str	r3, [sp, #0]
   868ee:	f000 fad7 	bl	86ea0 <__malloc_unlock>
   868f2:	9b00      	ldr	r3, [sp, #0]
   868f4:	f103 0408 	add.w	r4, r3, #8
   868f8:	e01e      	b.n	86938 <_malloc_r+0x18c>
   868fa:	2910      	cmp	r1, #16
   868fc:	d820      	bhi.n	86940 <_malloc_r+0x194>
   868fe:	f000 fac9 	bl	86e94 <__malloc_lock>
   86902:	2610      	movs	r6, #16
   86904:	2318      	movs	r3, #24
   86906:	2002      	movs	r0, #2
   86908:	4f72      	ldr	r7, [pc, #456]	; (86ad4 <_malloc_r+0x328>)
   8690a:	443b      	add	r3, r7
   8690c:	685c      	ldr	r4, [r3, #4]
   8690e:	f1a3 0208 	sub.w	r2, r3, #8
   86912:	4294      	cmp	r4, r2
   86914:	f000 812f 	beq.w	86b76 <_malloc_r+0x3ca>
   86918:	6863      	ldr	r3, [r4, #4]
   8691a:	68e1      	ldr	r1, [r4, #12]
   8691c:	f023 0303 	bic.w	r3, r3, #3
   86920:	4423      	add	r3, r4
   86922:	685a      	ldr	r2, [r3, #4]
   86924:	68a6      	ldr	r6, [r4, #8]
   86926:	f042 0201 	orr.w	r2, r2, #1
   8692a:	60f1      	str	r1, [r6, #12]
   8692c:	4628      	mov	r0, r5
   8692e:	608e      	str	r6, [r1, #8]
   86930:	605a      	str	r2, [r3, #4]
   86932:	f000 fab5 	bl	86ea0 <__malloc_unlock>
   86936:	3408      	adds	r4, #8
   86938:	4620      	mov	r0, r4
   8693a:	b003      	add	sp, #12
   8693c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86940:	2400      	movs	r4, #0
   86942:	230c      	movs	r3, #12
   86944:	4620      	mov	r0, r4
   86946:	602b      	str	r3, [r5, #0]
   86948:	b003      	add	sp, #12
   8694a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8694e:	2040      	movs	r0, #64	; 0x40
   86950:	f44f 7100 	mov.w	r1, #512	; 0x200
   86954:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   86958:	e74a      	b.n	867f0 <_malloc_r+0x44>
   8695a:	4423      	add	r3, r4
   8695c:	685a      	ldr	r2, [r3, #4]
   8695e:	68e1      	ldr	r1, [r4, #12]
   86960:	e7e0      	b.n	86924 <_malloc_r+0x178>
   86962:	4423      	add	r3, r4
   86964:	685a      	ldr	r2, [r3, #4]
   86966:	4628      	mov	r0, r5
   86968:	f042 0201 	orr.w	r2, r2, #1
   8696c:	605a      	str	r2, [r3, #4]
   8696e:	3408      	adds	r4, #8
   86970:	f000 fa96 	bl	86ea0 <__malloc_unlock>
   86974:	4620      	mov	r0, r4
   86976:	b003      	add	sp, #12
   86978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8697c:	68bc      	ldr	r4, [r7, #8]
   8697e:	6863      	ldr	r3, [r4, #4]
   86980:	f023 0803 	bic.w	r8, r3, #3
   86984:	45b0      	cmp	r8, r6
   86986:	d304      	bcc.n	86992 <_malloc_r+0x1e6>
   86988:	eba8 0306 	sub.w	r3, r8, r6
   8698c:	2b0f      	cmp	r3, #15
   8698e:	f300 8085 	bgt.w	86a9c <_malloc_r+0x2f0>
   86992:	f8df 9158 	ldr.w	r9, [pc, #344]	; 86aec <_malloc_r+0x340>
   86996:	4b50      	ldr	r3, [pc, #320]	; (86ad8 <_malloc_r+0x32c>)
   86998:	f8d9 2000 	ldr.w	r2, [r9]
   8699c:	681b      	ldr	r3, [r3, #0]
   8699e:	3201      	adds	r2, #1
   869a0:	4433      	add	r3, r6
   869a2:	eb04 0a08 	add.w	sl, r4, r8
   869a6:	f000 8154 	beq.w	86c52 <_malloc_r+0x4a6>
   869aa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   869ae:	330f      	adds	r3, #15
   869b0:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   869b4:	f02b 0b0f 	bic.w	fp, fp, #15
   869b8:	4659      	mov	r1, fp
   869ba:	4628      	mov	r0, r5
   869bc:	f000 fd72 	bl	874a4 <_sbrk_r>
   869c0:	1c41      	adds	r1, r0, #1
   869c2:	4602      	mov	r2, r0
   869c4:	f000 80fb 	beq.w	86bbe <_malloc_r+0x412>
   869c8:	4582      	cmp	sl, r0
   869ca:	f200 80f6 	bhi.w	86bba <_malloc_r+0x40e>
   869ce:	4b43      	ldr	r3, [pc, #268]	; (86adc <_malloc_r+0x330>)
   869d0:	6819      	ldr	r1, [r3, #0]
   869d2:	4459      	add	r1, fp
   869d4:	6019      	str	r1, [r3, #0]
   869d6:	f000 814c 	beq.w	86c72 <_malloc_r+0x4c6>
   869da:	f8d9 0000 	ldr.w	r0, [r9]
   869de:	3001      	adds	r0, #1
   869e0:	bf1b      	ittet	ne
   869e2:	eba2 0a0a 	subne.w	sl, r2, sl
   869e6:	4451      	addne	r1, sl
   869e8:	f8c9 2000 	streq.w	r2, [r9]
   869ec:	6019      	strne	r1, [r3, #0]
   869ee:	f012 0107 	ands.w	r1, r2, #7
   869f2:	f000 8114 	beq.w	86c1e <_malloc_r+0x472>
   869f6:	f1c1 0008 	rsb	r0, r1, #8
   869fa:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   869fe:	4402      	add	r2, r0
   86a00:	3108      	adds	r1, #8
   86a02:	eb02 090b 	add.w	r9, r2, fp
   86a06:	f3c9 090b 	ubfx	r9, r9, #0, #12
   86a0a:	eba1 0909 	sub.w	r9, r1, r9
   86a0e:	4649      	mov	r1, r9
   86a10:	4628      	mov	r0, r5
   86a12:	9301      	str	r3, [sp, #4]
   86a14:	9200      	str	r2, [sp, #0]
   86a16:	f000 fd45 	bl	874a4 <_sbrk_r>
   86a1a:	1c43      	adds	r3, r0, #1
   86a1c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   86a20:	f000 8142 	beq.w	86ca8 <_malloc_r+0x4fc>
   86a24:	1a80      	subs	r0, r0, r2
   86a26:	4448      	add	r0, r9
   86a28:	f040 0001 	orr.w	r0, r0, #1
   86a2c:	6819      	ldr	r1, [r3, #0]
   86a2e:	42bc      	cmp	r4, r7
   86a30:	4449      	add	r1, r9
   86a32:	60ba      	str	r2, [r7, #8]
   86a34:	6019      	str	r1, [r3, #0]
   86a36:	6050      	str	r0, [r2, #4]
   86a38:	d017      	beq.n	86a6a <_malloc_r+0x2be>
   86a3a:	f1b8 0f0f 	cmp.w	r8, #15
   86a3e:	f240 80fa 	bls.w	86c36 <_malloc_r+0x48a>
   86a42:	f04f 0c05 	mov.w	ip, #5
   86a46:	6862      	ldr	r2, [r4, #4]
   86a48:	f1a8 000c 	sub.w	r0, r8, #12
   86a4c:	f020 0007 	bic.w	r0, r0, #7
   86a50:	f002 0201 	and.w	r2, r2, #1
   86a54:	eb04 0e00 	add.w	lr, r4, r0
   86a58:	4302      	orrs	r2, r0
   86a5a:	280f      	cmp	r0, #15
   86a5c:	6062      	str	r2, [r4, #4]
   86a5e:	f8ce c004 	str.w	ip, [lr, #4]
   86a62:	f8ce c008 	str.w	ip, [lr, #8]
   86a66:	f200 8116 	bhi.w	86c96 <_malloc_r+0x4ea>
   86a6a:	4b1d      	ldr	r3, [pc, #116]	; (86ae0 <_malloc_r+0x334>)
   86a6c:	68bc      	ldr	r4, [r7, #8]
   86a6e:	681a      	ldr	r2, [r3, #0]
   86a70:	4291      	cmp	r1, r2
   86a72:	bf88      	it	hi
   86a74:	6019      	strhi	r1, [r3, #0]
   86a76:	4b1b      	ldr	r3, [pc, #108]	; (86ae4 <_malloc_r+0x338>)
   86a78:	681a      	ldr	r2, [r3, #0]
   86a7a:	4291      	cmp	r1, r2
   86a7c:	6862      	ldr	r2, [r4, #4]
   86a7e:	bf88      	it	hi
   86a80:	6019      	strhi	r1, [r3, #0]
   86a82:	f022 0203 	bic.w	r2, r2, #3
   86a86:	4296      	cmp	r6, r2
   86a88:	eba2 0306 	sub.w	r3, r2, r6
   86a8c:	d801      	bhi.n	86a92 <_malloc_r+0x2e6>
   86a8e:	2b0f      	cmp	r3, #15
   86a90:	dc04      	bgt.n	86a9c <_malloc_r+0x2f0>
   86a92:	4628      	mov	r0, r5
   86a94:	f000 fa04 	bl	86ea0 <__malloc_unlock>
   86a98:	2400      	movs	r4, #0
   86a9a:	e74d      	b.n	86938 <_malloc_r+0x18c>
   86a9c:	f046 0201 	orr.w	r2, r6, #1
   86aa0:	f043 0301 	orr.w	r3, r3, #1
   86aa4:	4426      	add	r6, r4
   86aa6:	6062      	str	r2, [r4, #4]
   86aa8:	4628      	mov	r0, r5
   86aaa:	60be      	str	r6, [r7, #8]
   86aac:	3408      	adds	r4, #8
   86aae:	6073      	str	r3, [r6, #4]
   86ab0:	f000 f9f6 	bl	86ea0 <__malloc_unlock>
   86ab4:	4620      	mov	r0, r4
   86ab6:	b003      	add	sp, #12
   86ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86abc:	2b14      	cmp	r3, #20
   86abe:	d970      	bls.n	86ba2 <_malloc_r+0x3f6>
   86ac0:	2b54      	cmp	r3, #84	; 0x54
   86ac2:	f200 80a2 	bhi.w	86c0a <_malloc_r+0x45e>
   86ac6:	0b33      	lsrs	r3, r6, #12
   86ac8:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   86acc:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   86ad0:	00c1      	lsls	r1, r0, #3
   86ad2:	e68d      	b.n	867f0 <_malloc_r+0x44>
   86ad4:	20000bc8 	.word	0x20000bc8
   86ad8:	200010b0 	.word	0x200010b0
   86adc:	20001080 	.word	0x20001080
   86ae0:	200010a8 	.word	0x200010a8
   86ae4:	200010ac 	.word	0x200010ac
   86ae8:	20000bd0 	.word	0x20000bd0
   86aec:	20000fd0 	.word	0x20000fd0
   86af0:	0a5a      	lsrs	r2, r3, #9
   86af2:	2a04      	cmp	r2, #4
   86af4:	d95b      	bls.n	86bae <_malloc_r+0x402>
   86af6:	2a14      	cmp	r2, #20
   86af8:	f200 80ae 	bhi.w	86c58 <_malloc_r+0x4ac>
   86afc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   86b00:	00c9      	lsls	r1, r1, #3
   86b02:	325b      	adds	r2, #91	; 0x5b
   86b04:	eb07 0c01 	add.w	ip, r7, r1
   86b08:	5879      	ldr	r1, [r7, r1]
   86b0a:	f1ac 0c08 	sub.w	ip, ip, #8
   86b0e:	458c      	cmp	ip, r1
   86b10:	f000 8088 	beq.w	86c24 <_malloc_r+0x478>
   86b14:	684a      	ldr	r2, [r1, #4]
   86b16:	f022 0203 	bic.w	r2, r2, #3
   86b1a:	4293      	cmp	r3, r2
   86b1c:	d273      	bcs.n	86c06 <_malloc_r+0x45a>
   86b1e:	6889      	ldr	r1, [r1, #8]
   86b20:	458c      	cmp	ip, r1
   86b22:	d1f7      	bne.n	86b14 <_malloc_r+0x368>
   86b24:	f8dc 300c 	ldr.w	r3, [ip, #12]
   86b28:	687a      	ldr	r2, [r7, #4]
   86b2a:	60e3      	str	r3, [r4, #12]
   86b2c:	f8c4 c008 	str.w	ip, [r4, #8]
   86b30:	609c      	str	r4, [r3, #8]
   86b32:	f8cc 400c 	str.w	r4, [ip, #12]
   86b36:	e69e      	b.n	86876 <_malloc_r+0xca>
   86b38:	f046 0c01 	orr.w	ip, r6, #1
   86b3c:	f042 0101 	orr.w	r1, r2, #1
   86b40:	4426      	add	r6, r4
   86b42:	f8c4 c004 	str.w	ip, [r4, #4]
   86b46:	4628      	mov	r0, r5
   86b48:	617e      	str	r6, [r7, #20]
   86b4a:	613e      	str	r6, [r7, #16]
   86b4c:	f8c6 e00c 	str.w	lr, [r6, #12]
   86b50:	f8c6 e008 	str.w	lr, [r6, #8]
   86b54:	6071      	str	r1, [r6, #4]
   86b56:	50e2      	str	r2, [r4, r3]
   86b58:	f000 f9a2 	bl	86ea0 <__malloc_unlock>
   86b5c:	3408      	adds	r4, #8
   86b5e:	e6eb      	b.n	86938 <_malloc_r+0x18c>
   86b60:	687a      	ldr	r2, [r7, #4]
   86b62:	e688      	b.n	86876 <_malloc_r+0xca>
   86b64:	f108 0801 	add.w	r8, r8, #1
   86b68:	f018 0f03 	tst.w	r8, #3
   86b6c:	f10c 0c08 	add.w	ip, ip, #8
   86b70:	f47f ae93 	bne.w	8689a <_malloc_r+0xee>
   86b74:	e02d      	b.n	86bd2 <_malloc_r+0x426>
   86b76:	68dc      	ldr	r4, [r3, #12]
   86b78:	42a3      	cmp	r3, r4
   86b7a:	bf08      	it	eq
   86b7c:	3002      	addeq	r0, #2
   86b7e:	f43f ae4b 	beq.w	86818 <_malloc_r+0x6c>
   86b82:	e6c9      	b.n	86918 <_malloc_r+0x16c>
   86b84:	461c      	mov	r4, r3
   86b86:	4419      	add	r1, r3
   86b88:	684a      	ldr	r2, [r1, #4]
   86b8a:	68db      	ldr	r3, [r3, #12]
   86b8c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   86b90:	f042 0201 	orr.w	r2, r2, #1
   86b94:	604a      	str	r2, [r1, #4]
   86b96:	4628      	mov	r0, r5
   86b98:	60f3      	str	r3, [r6, #12]
   86b9a:	609e      	str	r6, [r3, #8]
   86b9c:	f000 f980 	bl	86ea0 <__malloc_unlock>
   86ba0:	e6ca      	b.n	86938 <_malloc_r+0x18c>
   86ba2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   86ba6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   86baa:	00c1      	lsls	r1, r0, #3
   86bac:	e620      	b.n	867f0 <_malloc_r+0x44>
   86bae:	099a      	lsrs	r2, r3, #6
   86bb0:	f102 0139 	add.w	r1, r2, #57	; 0x39
   86bb4:	00c9      	lsls	r1, r1, #3
   86bb6:	3238      	adds	r2, #56	; 0x38
   86bb8:	e7a4      	b.n	86b04 <_malloc_r+0x358>
   86bba:	42bc      	cmp	r4, r7
   86bbc:	d054      	beq.n	86c68 <_malloc_r+0x4bc>
   86bbe:	68bc      	ldr	r4, [r7, #8]
   86bc0:	6862      	ldr	r2, [r4, #4]
   86bc2:	f022 0203 	bic.w	r2, r2, #3
   86bc6:	e75e      	b.n	86a86 <_malloc_r+0x2da>
   86bc8:	f859 3908 	ldr.w	r3, [r9], #-8
   86bcc:	4599      	cmp	r9, r3
   86bce:	f040 8086 	bne.w	86cde <_malloc_r+0x532>
   86bd2:	f010 0f03 	tst.w	r0, #3
   86bd6:	f100 30ff 	add.w	r0, r0, #4294967295
   86bda:	d1f5      	bne.n	86bc8 <_malloc_r+0x41c>
   86bdc:	687b      	ldr	r3, [r7, #4]
   86bde:	ea23 0304 	bic.w	r3, r3, r4
   86be2:	607b      	str	r3, [r7, #4]
   86be4:	0064      	lsls	r4, r4, #1
   86be6:	429c      	cmp	r4, r3
   86be8:	f63f aec8 	bhi.w	8697c <_malloc_r+0x1d0>
   86bec:	2c00      	cmp	r4, #0
   86bee:	f43f aec5 	beq.w	8697c <_malloc_r+0x1d0>
   86bf2:	421c      	tst	r4, r3
   86bf4:	4640      	mov	r0, r8
   86bf6:	f47f ae4c 	bne.w	86892 <_malloc_r+0xe6>
   86bfa:	0064      	lsls	r4, r4, #1
   86bfc:	421c      	tst	r4, r3
   86bfe:	f100 0004 	add.w	r0, r0, #4
   86c02:	d0fa      	beq.n	86bfa <_malloc_r+0x44e>
   86c04:	e645      	b.n	86892 <_malloc_r+0xe6>
   86c06:	468c      	mov	ip, r1
   86c08:	e78c      	b.n	86b24 <_malloc_r+0x378>
   86c0a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   86c0e:	d815      	bhi.n	86c3c <_malloc_r+0x490>
   86c10:	0bf3      	lsrs	r3, r6, #15
   86c12:	f103 0078 	add.w	r0, r3, #120	; 0x78
   86c16:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   86c1a:	00c1      	lsls	r1, r0, #3
   86c1c:	e5e8      	b.n	867f0 <_malloc_r+0x44>
   86c1e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   86c22:	e6ee      	b.n	86a02 <_malloc_r+0x256>
   86c24:	2101      	movs	r1, #1
   86c26:	687b      	ldr	r3, [r7, #4]
   86c28:	1092      	asrs	r2, r2, #2
   86c2a:	fa01 f202 	lsl.w	r2, r1, r2
   86c2e:	431a      	orrs	r2, r3
   86c30:	607a      	str	r2, [r7, #4]
   86c32:	4663      	mov	r3, ip
   86c34:	e779      	b.n	86b2a <_malloc_r+0x37e>
   86c36:	2301      	movs	r3, #1
   86c38:	6053      	str	r3, [r2, #4]
   86c3a:	e72a      	b.n	86a92 <_malloc_r+0x2e6>
   86c3c:	f240 5254 	movw	r2, #1364	; 0x554
   86c40:	4293      	cmp	r3, r2
   86c42:	d822      	bhi.n	86c8a <_malloc_r+0x4de>
   86c44:	0cb3      	lsrs	r3, r6, #18
   86c46:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   86c4a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   86c4e:	00c1      	lsls	r1, r0, #3
   86c50:	e5ce      	b.n	867f0 <_malloc_r+0x44>
   86c52:	f103 0b10 	add.w	fp, r3, #16
   86c56:	e6af      	b.n	869b8 <_malloc_r+0x20c>
   86c58:	2a54      	cmp	r2, #84	; 0x54
   86c5a:	d829      	bhi.n	86cb0 <_malloc_r+0x504>
   86c5c:	0b1a      	lsrs	r2, r3, #12
   86c5e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   86c62:	00c9      	lsls	r1, r1, #3
   86c64:	326e      	adds	r2, #110	; 0x6e
   86c66:	e74d      	b.n	86b04 <_malloc_r+0x358>
   86c68:	4b20      	ldr	r3, [pc, #128]	; (86cec <_malloc_r+0x540>)
   86c6a:	6819      	ldr	r1, [r3, #0]
   86c6c:	4459      	add	r1, fp
   86c6e:	6019      	str	r1, [r3, #0]
   86c70:	e6b3      	b.n	869da <_malloc_r+0x22e>
   86c72:	f3ca 000b 	ubfx	r0, sl, #0, #12
   86c76:	2800      	cmp	r0, #0
   86c78:	f47f aeaf 	bne.w	869da <_malloc_r+0x22e>
   86c7c:	eb08 030b 	add.w	r3, r8, fp
   86c80:	68ba      	ldr	r2, [r7, #8]
   86c82:	f043 0301 	orr.w	r3, r3, #1
   86c86:	6053      	str	r3, [r2, #4]
   86c88:	e6ef      	b.n	86a6a <_malloc_r+0x2be>
   86c8a:	207f      	movs	r0, #127	; 0x7f
   86c8c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   86c90:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   86c94:	e5ac      	b.n	867f0 <_malloc_r+0x44>
   86c96:	f104 0108 	add.w	r1, r4, #8
   86c9a:	4628      	mov	r0, r5
   86c9c:	9300      	str	r3, [sp, #0]
   86c9e:	f000 fd7f 	bl	877a0 <_free_r>
   86ca2:	9b00      	ldr	r3, [sp, #0]
   86ca4:	6819      	ldr	r1, [r3, #0]
   86ca6:	e6e0      	b.n	86a6a <_malloc_r+0x2be>
   86ca8:	2001      	movs	r0, #1
   86caa:	f04f 0900 	mov.w	r9, #0
   86cae:	e6bd      	b.n	86a2c <_malloc_r+0x280>
   86cb0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   86cb4:	d805      	bhi.n	86cc2 <_malloc_r+0x516>
   86cb6:	0bda      	lsrs	r2, r3, #15
   86cb8:	f102 0178 	add.w	r1, r2, #120	; 0x78
   86cbc:	00c9      	lsls	r1, r1, #3
   86cbe:	3277      	adds	r2, #119	; 0x77
   86cc0:	e720      	b.n	86b04 <_malloc_r+0x358>
   86cc2:	f240 5154 	movw	r1, #1364	; 0x554
   86cc6:	428a      	cmp	r2, r1
   86cc8:	d805      	bhi.n	86cd6 <_malloc_r+0x52a>
   86cca:	0c9a      	lsrs	r2, r3, #18
   86ccc:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   86cd0:	00c9      	lsls	r1, r1, #3
   86cd2:	327c      	adds	r2, #124	; 0x7c
   86cd4:	e716      	b.n	86b04 <_malloc_r+0x358>
   86cd6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   86cda:	227e      	movs	r2, #126	; 0x7e
   86cdc:	e712      	b.n	86b04 <_malloc_r+0x358>
   86cde:	687b      	ldr	r3, [r7, #4]
   86ce0:	e780      	b.n	86be4 <_malloc_r+0x438>
   86ce2:	08f0      	lsrs	r0, r6, #3
   86ce4:	f106 0308 	add.w	r3, r6, #8
   86ce8:	e60e      	b.n	86908 <_malloc_r+0x15c>
   86cea:	bf00      	nop
   86cec:	20001080 	.word	0x20001080

00086cf0 <__ascii_mbtowc>:
   86cf0:	b082      	sub	sp, #8
   86cf2:	b149      	cbz	r1, 86d08 <__ascii_mbtowc+0x18>
   86cf4:	b15a      	cbz	r2, 86d0e <__ascii_mbtowc+0x1e>
   86cf6:	b16b      	cbz	r3, 86d14 <__ascii_mbtowc+0x24>
   86cf8:	7813      	ldrb	r3, [r2, #0]
   86cfa:	600b      	str	r3, [r1, #0]
   86cfc:	7812      	ldrb	r2, [r2, #0]
   86cfe:	1c10      	adds	r0, r2, #0
   86d00:	bf18      	it	ne
   86d02:	2001      	movne	r0, #1
   86d04:	b002      	add	sp, #8
   86d06:	4770      	bx	lr
   86d08:	a901      	add	r1, sp, #4
   86d0a:	2a00      	cmp	r2, #0
   86d0c:	d1f3      	bne.n	86cf6 <__ascii_mbtowc+0x6>
   86d0e:	4610      	mov	r0, r2
   86d10:	b002      	add	sp, #8
   86d12:	4770      	bx	lr
   86d14:	f06f 0001 	mvn.w	r0, #1
   86d18:	e7f4      	b.n	86d04 <__ascii_mbtowc+0x14>
   86d1a:	bf00      	nop

00086d1c <memchr>:
   86d1c:	0783      	lsls	r3, r0, #30
   86d1e:	b470      	push	{r4, r5, r6}
   86d20:	b2cd      	uxtb	r5, r1
   86d22:	d03d      	beq.n	86da0 <memchr+0x84>
   86d24:	1e54      	subs	r4, r2, #1
   86d26:	b30a      	cbz	r2, 86d6c <memchr+0x50>
   86d28:	7803      	ldrb	r3, [r0, #0]
   86d2a:	42ab      	cmp	r3, r5
   86d2c:	d01f      	beq.n	86d6e <memchr+0x52>
   86d2e:	1c43      	adds	r3, r0, #1
   86d30:	e005      	b.n	86d3e <memchr+0x22>
   86d32:	f114 34ff 	adds.w	r4, r4, #4294967295
   86d36:	d319      	bcc.n	86d6c <memchr+0x50>
   86d38:	7802      	ldrb	r2, [r0, #0]
   86d3a:	42aa      	cmp	r2, r5
   86d3c:	d017      	beq.n	86d6e <memchr+0x52>
   86d3e:	f013 0f03 	tst.w	r3, #3
   86d42:	4618      	mov	r0, r3
   86d44:	f103 0301 	add.w	r3, r3, #1
   86d48:	d1f3      	bne.n	86d32 <memchr+0x16>
   86d4a:	2c03      	cmp	r4, #3
   86d4c:	d811      	bhi.n	86d72 <memchr+0x56>
   86d4e:	b34c      	cbz	r4, 86da4 <memchr+0x88>
   86d50:	7803      	ldrb	r3, [r0, #0]
   86d52:	42ab      	cmp	r3, r5
   86d54:	d00b      	beq.n	86d6e <memchr+0x52>
   86d56:	4404      	add	r4, r0
   86d58:	1c43      	adds	r3, r0, #1
   86d5a:	e002      	b.n	86d62 <memchr+0x46>
   86d5c:	7802      	ldrb	r2, [r0, #0]
   86d5e:	42aa      	cmp	r2, r5
   86d60:	d005      	beq.n	86d6e <memchr+0x52>
   86d62:	429c      	cmp	r4, r3
   86d64:	4618      	mov	r0, r3
   86d66:	f103 0301 	add.w	r3, r3, #1
   86d6a:	d1f7      	bne.n	86d5c <memchr+0x40>
   86d6c:	2000      	movs	r0, #0
   86d6e:	bc70      	pop	{r4, r5, r6}
   86d70:	4770      	bx	lr
   86d72:	0209      	lsls	r1, r1, #8
   86d74:	b289      	uxth	r1, r1
   86d76:	4329      	orrs	r1, r5
   86d78:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   86d7c:	6803      	ldr	r3, [r0, #0]
   86d7e:	4606      	mov	r6, r0
   86d80:	404b      	eors	r3, r1
   86d82:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   86d86:	ea22 0303 	bic.w	r3, r2, r3
   86d8a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   86d8e:	f100 0004 	add.w	r0, r0, #4
   86d92:	d103      	bne.n	86d9c <memchr+0x80>
   86d94:	3c04      	subs	r4, #4
   86d96:	2c03      	cmp	r4, #3
   86d98:	d8f0      	bhi.n	86d7c <memchr+0x60>
   86d9a:	e7d8      	b.n	86d4e <memchr+0x32>
   86d9c:	4630      	mov	r0, r6
   86d9e:	e7d7      	b.n	86d50 <memchr+0x34>
   86da0:	4614      	mov	r4, r2
   86da2:	e7d2      	b.n	86d4a <memchr+0x2e>
   86da4:	4620      	mov	r0, r4
   86da6:	e7e2      	b.n	86d6e <memchr+0x52>

00086da8 <memcpy>:
   86da8:	4684      	mov	ip, r0
   86daa:	ea41 0300 	orr.w	r3, r1, r0
   86dae:	f013 0303 	ands.w	r3, r3, #3
   86db2:	d149      	bne.n	86e48 <memcpy+0xa0>
   86db4:	3a40      	subs	r2, #64	; 0x40
   86db6:	d323      	bcc.n	86e00 <memcpy+0x58>
   86db8:	680b      	ldr	r3, [r1, #0]
   86dba:	6003      	str	r3, [r0, #0]
   86dbc:	684b      	ldr	r3, [r1, #4]
   86dbe:	6043      	str	r3, [r0, #4]
   86dc0:	688b      	ldr	r3, [r1, #8]
   86dc2:	6083      	str	r3, [r0, #8]
   86dc4:	68cb      	ldr	r3, [r1, #12]
   86dc6:	60c3      	str	r3, [r0, #12]
   86dc8:	690b      	ldr	r3, [r1, #16]
   86dca:	6103      	str	r3, [r0, #16]
   86dcc:	694b      	ldr	r3, [r1, #20]
   86dce:	6143      	str	r3, [r0, #20]
   86dd0:	698b      	ldr	r3, [r1, #24]
   86dd2:	6183      	str	r3, [r0, #24]
   86dd4:	69cb      	ldr	r3, [r1, #28]
   86dd6:	61c3      	str	r3, [r0, #28]
   86dd8:	6a0b      	ldr	r3, [r1, #32]
   86dda:	6203      	str	r3, [r0, #32]
   86ddc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86dde:	6243      	str	r3, [r0, #36]	; 0x24
   86de0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   86de2:	6283      	str	r3, [r0, #40]	; 0x28
   86de4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   86de6:	62c3      	str	r3, [r0, #44]	; 0x2c
   86de8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   86dea:	6303      	str	r3, [r0, #48]	; 0x30
   86dec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   86dee:	6343      	str	r3, [r0, #52]	; 0x34
   86df0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   86df2:	6383      	str	r3, [r0, #56]	; 0x38
   86df4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   86df6:	63c3      	str	r3, [r0, #60]	; 0x3c
   86df8:	3040      	adds	r0, #64	; 0x40
   86dfa:	3140      	adds	r1, #64	; 0x40
   86dfc:	3a40      	subs	r2, #64	; 0x40
   86dfe:	d2db      	bcs.n	86db8 <memcpy+0x10>
   86e00:	3230      	adds	r2, #48	; 0x30
   86e02:	d30b      	bcc.n	86e1c <memcpy+0x74>
   86e04:	680b      	ldr	r3, [r1, #0]
   86e06:	6003      	str	r3, [r0, #0]
   86e08:	684b      	ldr	r3, [r1, #4]
   86e0a:	6043      	str	r3, [r0, #4]
   86e0c:	688b      	ldr	r3, [r1, #8]
   86e0e:	6083      	str	r3, [r0, #8]
   86e10:	68cb      	ldr	r3, [r1, #12]
   86e12:	60c3      	str	r3, [r0, #12]
   86e14:	3010      	adds	r0, #16
   86e16:	3110      	adds	r1, #16
   86e18:	3a10      	subs	r2, #16
   86e1a:	d2f3      	bcs.n	86e04 <memcpy+0x5c>
   86e1c:	320c      	adds	r2, #12
   86e1e:	d305      	bcc.n	86e2c <memcpy+0x84>
   86e20:	f851 3b04 	ldr.w	r3, [r1], #4
   86e24:	f840 3b04 	str.w	r3, [r0], #4
   86e28:	3a04      	subs	r2, #4
   86e2a:	d2f9      	bcs.n	86e20 <memcpy+0x78>
   86e2c:	3204      	adds	r2, #4
   86e2e:	d008      	beq.n	86e42 <memcpy+0x9a>
   86e30:	07d2      	lsls	r2, r2, #31
   86e32:	bf1c      	itt	ne
   86e34:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86e38:	f800 3b01 	strbne.w	r3, [r0], #1
   86e3c:	d301      	bcc.n	86e42 <memcpy+0x9a>
   86e3e:	880b      	ldrh	r3, [r1, #0]
   86e40:	8003      	strh	r3, [r0, #0]
   86e42:	4660      	mov	r0, ip
   86e44:	4770      	bx	lr
   86e46:	bf00      	nop
   86e48:	2a08      	cmp	r2, #8
   86e4a:	d313      	bcc.n	86e74 <memcpy+0xcc>
   86e4c:	078b      	lsls	r3, r1, #30
   86e4e:	d0b1      	beq.n	86db4 <memcpy+0xc>
   86e50:	f010 0303 	ands.w	r3, r0, #3
   86e54:	d0ae      	beq.n	86db4 <memcpy+0xc>
   86e56:	f1c3 0304 	rsb	r3, r3, #4
   86e5a:	1ad2      	subs	r2, r2, r3
   86e5c:	07db      	lsls	r3, r3, #31
   86e5e:	bf1c      	itt	ne
   86e60:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86e64:	f800 3b01 	strbne.w	r3, [r0], #1
   86e68:	d3a4      	bcc.n	86db4 <memcpy+0xc>
   86e6a:	f831 3b02 	ldrh.w	r3, [r1], #2
   86e6e:	f820 3b02 	strh.w	r3, [r0], #2
   86e72:	e79f      	b.n	86db4 <memcpy+0xc>
   86e74:	3a04      	subs	r2, #4
   86e76:	d3d9      	bcc.n	86e2c <memcpy+0x84>
   86e78:	3a01      	subs	r2, #1
   86e7a:	f811 3b01 	ldrb.w	r3, [r1], #1
   86e7e:	f800 3b01 	strb.w	r3, [r0], #1
   86e82:	d2f9      	bcs.n	86e78 <memcpy+0xd0>
   86e84:	780b      	ldrb	r3, [r1, #0]
   86e86:	7003      	strb	r3, [r0, #0]
   86e88:	784b      	ldrb	r3, [r1, #1]
   86e8a:	7043      	strb	r3, [r0, #1]
   86e8c:	788b      	ldrb	r3, [r1, #2]
   86e8e:	7083      	strb	r3, [r0, #2]
   86e90:	4660      	mov	r0, ip
   86e92:	4770      	bx	lr

00086e94 <__malloc_lock>:
   86e94:	4801      	ldr	r0, [pc, #4]	; (86e9c <__malloc_lock+0x8>)
   86e96:	f7ff bc85 	b.w	867a4 <__retarget_lock_acquire_recursive>
   86e9a:	bf00      	nop
   86e9c:	200018b4 	.word	0x200018b4

00086ea0 <__malloc_unlock>:
   86ea0:	4801      	ldr	r0, [pc, #4]	; (86ea8 <__malloc_unlock+0x8>)
   86ea2:	f7ff bc81 	b.w	867a8 <__retarget_lock_release_recursive>
   86ea6:	bf00      	nop
   86ea8:	200018b4 	.word	0x200018b4

00086eac <_Balloc>:
   86eac:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86eae:	b570      	push	{r4, r5, r6, lr}
   86eb0:	4605      	mov	r5, r0
   86eb2:	460c      	mov	r4, r1
   86eb4:	b14b      	cbz	r3, 86eca <_Balloc+0x1e>
   86eb6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   86eba:	b180      	cbz	r0, 86ede <_Balloc+0x32>
   86ebc:	6802      	ldr	r2, [r0, #0]
   86ebe:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   86ec2:	2300      	movs	r3, #0
   86ec4:	6103      	str	r3, [r0, #16]
   86ec6:	60c3      	str	r3, [r0, #12]
   86ec8:	bd70      	pop	{r4, r5, r6, pc}
   86eca:	2221      	movs	r2, #33	; 0x21
   86ecc:	2104      	movs	r1, #4
   86ece:	f000 fbe7 	bl	876a0 <_calloc_r>
   86ed2:	64e8      	str	r0, [r5, #76]	; 0x4c
   86ed4:	4603      	mov	r3, r0
   86ed6:	2800      	cmp	r0, #0
   86ed8:	d1ed      	bne.n	86eb6 <_Balloc+0xa>
   86eda:	2000      	movs	r0, #0
   86edc:	bd70      	pop	{r4, r5, r6, pc}
   86ede:	2101      	movs	r1, #1
   86ee0:	fa01 f604 	lsl.w	r6, r1, r4
   86ee4:	1d72      	adds	r2, r6, #5
   86ee6:	4628      	mov	r0, r5
   86ee8:	0092      	lsls	r2, r2, #2
   86eea:	f000 fbd9 	bl	876a0 <_calloc_r>
   86eee:	2800      	cmp	r0, #0
   86ef0:	d0f3      	beq.n	86eda <_Balloc+0x2e>
   86ef2:	6044      	str	r4, [r0, #4]
   86ef4:	6086      	str	r6, [r0, #8]
   86ef6:	e7e4      	b.n	86ec2 <_Balloc+0x16>

00086ef8 <_Bfree>:
   86ef8:	b131      	cbz	r1, 86f08 <_Bfree+0x10>
   86efa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86efc:	684a      	ldr	r2, [r1, #4]
   86efe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   86f02:	6008      	str	r0, [r1, #0]
   86f04:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   86f08:	4770      	bx	lr
   86f0a:	bf00      	nop

00086f0c <__multadd>:
   86f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
   86f0e:	460c      	mov	r4, r1
   86f10:	4605      	mov	r5, r0
   86f12:	f04f 0e00 	mov.w	lr, #0
   86f16:	690e      	ldr	r6, [r1, #16]
   86f18:	b083      	sub	sp, #12
   86f1a:	f101 0714 	add.w	r7, r1, #20
   86f1e:	6838      	ldr	r0, [r7, #0]
   86f20:	f10e 0e01 	add.w	lr, lr, #1
   86f24:	b281      	uxth	r1, r0
   86f26:	fb02 3301 	mla	r3, r2, r1, r3
   86f2a:	0c01      	lsrs	r1, r0, #16
   86f2c:	0c18      	lsrs	r0, r3, #16
   86f2e:	fb02 0101 	mla	r1, r2, r1, r0
   86f32:	b29b      	uxth	r3, r3
   86f34:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   86f38:	4576      	cmp	r6, lr
   86f3a:	f847 3b04 	str.w	r3, [r7], #4
   86f3e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   86f42:	dcec      	bgt.n	86f1e <__multadd+0x12>
   86f44:	b13b      	cbz	r3, 86f56 <__multadd+0x4a>
   86f46:	68a2      	ldr	r2, [r4, #8]
   86f48:	4296      	cmp	r6, r2
   86f4a:	da07      	bge.n	86f5c <__multadd+0x50>
   86f4c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   86f50:	3601      	adds	r6, #1
   86f52:	6153      	str	r3, [r2, #20]
   86f54:	6126      	str	r6, [r4, #16]
   86f56:	4620      	mov	r0, r4
   86f58:	b003      	add	sp, #12
   86f5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86f5c:	6861      	ldr	r1, [r4, #4]
   86f5e:	4628      	mov	r0, r5
   86f60:	3101      	adds	r1, #1
   86f62:	9301      	str	r3, [sp, #4]
   86f64:	f7ff ffa2 	bl	86eac <_Balloc>
   86f68:	4607      	mov	r7, r0
   86f6a:	6922      	ldr	r2, [r4, #16]
   86f6c:	f104 010c 	add.w	r1, r4, #12
   86f70:	3202      	adds	r2, #2
   86f72:	0092      	lsls	r2, r2, #2
   86f74:	300c      	adds	r0, #12
   86f76:	f7ff ff17 	bl	86da8 <memcpy>
   86f7a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   86f7c:	6861      	ldr	r1, [r4, #4]
   86f7e:	9b01      	ldr	r3, [sp, #4]
   86f80:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   86f84:	6020      	str	r0, [r4, #0]
   86f86:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   86f8a:	463c      	mov	r4, r7
   86f8c:	e7de      	b.n	86f4c <__multadd+0x40>
   86f8e:	bf00      	nop

00086f90 <__hi0bits>:
   86f90:	0c02      	lsrs	r2, r0, #16
   86f92:	0412      	lsls	r2, r2, #16
   86f94:	4603      	mov	r3, r0
   86f96:	b9b2      	cbnz	r2, 86fc6 <__hi0bits+0x36>
   86f98:	0403      	lsls	r3, r0, #16
   86f9a:	2010      	movs	r0, #16
   86f9c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   86fa0:	bf04      	itt	eq
   86fa2:	021b      	lsleq	r3, r3, #8
   86fa4:	3008      	addeq	r0, #8
   86fa6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   86faa:	bf04      	itt	eq
   86fac:	011b      	lsleq	r3, r3, #4
   86fae:	3004      	addeq	r0, #4
   86fb0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   86fb4:	bf04      	itt	eq
   86fb6:	009b      	lsleq	r3, r3, #2
   86fb8:	3002      	addeq	r0, #2
   86fba:	2b00      	cmp	r3, #0
   86fbc:	db02      	blt.n	86fc4 <__hi0bits+0x34>
   86fbe:	005b      	lsls	r3, r3, #1
   86fc0:	d403      	bmi.n	86fca <__hi0bits+0x3a>
   86fc2:	2020      	movs	r0, #32
   86fc4:	4770      	bx	lr
   86fc6:	2000      	movs	r0, #0
   86fc8:	e7e8      	b.n	86f9c <__hi0bits+0xc>
   86fca:	3001      	adds	r0, #1
   86fcc:	4770      	bx	lr
   86fce:	bf00      	nop

00086fd0 <__lo0bits>:
   86fd0:	6803      	ldr	r3, [r0, #0]
   86fd2:	4601      	mov	r1, r0
   86fd4:	f013 0207 	ands.w	r2, r3, #7
   86fd8:	d007      	beq.n	86fea <__lo0bits+0x1a>
   86fda:	07da      	lsls	r2, r3, #31
   86fdc:	d421      	bmi.n	87022 <__lo0bits+0x52>
   86fde:	0798      	lsls	r0, r3, #30
   86fe0:	d421      	bmi.n	87026 <__lo0bits+0x56>
   86fe2:	089b      	lsrs	r3, r3, #2
   86fe4:	600b      	str	r3, [r1, #0]
   86fe6:	2002      	movs	r0, #2
   86fe8:	4770      	bx	lr
   86fea:	b298      	uxth	r0, r3
   86fec:	b198      	cbz	r0, 87016 <__lo0bits+0x46>
   86fee:	4610      	mov	r0, r2
   86ff0:	f013 0fff 	tst.w	r3, #255	; 0xff
   86ff4:	bf04      	itt	eq
   86ff6:	0a1b      	lsreq	r3, r3, #8
   86ff8:	3008      	addeq	r0, #8
   86ffa:	071a      	lsls	r2, r3, #28
   86ffc:	bf04      	itt	eq
   86ffe:	091b      	lsreq	r3, r3, #4
   87000:	3004      	addeq	r0, #4
   87002:	079a      	lsls	r2, r3, #30
   87004:	bf04      	itt	eq
   87006:	089b      	lsreq	r3, r3, #2
   87008:	3002      	addeq	r0, #2
   8700a:	07da      	lsls	r2, r3, #31
   8700c:	d407      	bmi.n	8701e <__lo0bits+0x4e>
   8700e:	085b      	lsrs	r3, r3, #1
   87010:	d104      	bne.n	8701c <__lo0bits+0x4c>
   87012:	2020      	movs	r0, #32
   87014:	4770      	bx	lr
   87016:	0c1b      	lsrs	r3, r3, #16
   87018:	2010      	movs	r0, #16
   8701a:	e7e9      	b.n	86ff0 <__lo0bits+0x20>
   8701c:	3001      	adds	r0, #1
   8701e:	600b      	str	r3, [r1, #0]
   87020:	4770      	bx	lr
   87022:	2000      	movs	r0, #0
   87024:	4770      	bx	lr
   87026:	085b      	lsrs	r3, r3, #1
   87028:	600b      	str	r3, [r1, #0]
   8702a:	2001      	movs	r0, #1
   8702c:	4770      	bx	lr
   8702e:	bf00      	nop

00087030 <__i2b>:
   87030:	b510      	push	{r4, lr}
   87032:	460c      	mov	r4, r1
   87034:	2101      	movs	r1, #1
   87036:	f7ff ff39 	bl	86eac <_Balloc>
   8703a:	2201      	movs	r2, #1
   8703c:	6144      	str	r4, [r0, #20]
   8703e:	6102      	str	r2, [r0, #16]
   87040:	bd10      	pop	{r4, pc}
   87042:	bf00      	nop

00087044 <__multiply>:
   87044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87048:	690c      	ldr	r4, [r1, #16]
   8704a:	6915      	ldr	r5, [r2, #16]
   8704c:	b083      	sub	sp, #12
   8704e:	42ac      	cmp	r4, r5
   87050:	468b      	mov	fp, r1
   87052:	4616      	mov	r6, r2
   87054:	da04      	bge.n	87060 <__multiply+0x1c>
   87056:	4622      	mov	r2, r4
   87058:	46b3      	mov	fp, r6
   8705a:	462c      	mov	r4, r5
   8705c:	460e      	mov	r6, r1
   8705e:	4615      	mov	r5, r2
   87060:	f8db 3008 	ldr.w	r3, [fp, #8]
   87064:	eb04 0805 	add.w	r8, r4, r5
   87068:	f8db 1004 	ldr.w	r1, [fp, #4]
   8706c:	4598      	cmp	r8, r3
   8706e:	bfc8      	it	gt
   87070:	3101      	addgt	r1, #1
   87072:	f7ff ff1b 	bl	86eac <_Balloc>
   87076:	f100 0914 	add.w	r9, r0, #20
   8707a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   8707e:	45d1      	cmp	r9, sl
   87080:	9000      	str	r0, [sp, #0]
   87082:	d205      	bcs.n	87090 <__multiply+0x4c>
   87084:	464b      	mov	r3, r9
   87086:	2100      	movs	r1, #0
   87088:	f843 1b04 	str.w	r1, [r3], #4
   8708c:	459a      	cmp	sl, r3
   8708e:	d8fb      	bhi.n	87088 <__multiply+0x44>
   87090:	f106 0c14 	add.w	ip, r6, #20
   87094:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   87098:	f10b 0b14 	add.w	fp, fp, #20
   8709c:	459c      	cmp	ip, r3
   8709e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   870a2:	d24b      	bcs.n	8713c <__multiply+0xf8>
   870a4:	f8cd a004 	str.w	sl, [sp, #4]
   870a8:	469a      	mov	sl, r3
   870aa:	f8dc 5000 	ldr.w	r5, [ip]
   870ae:	b2af      	uxth	r7, r5
   870b0:	b1e7      	cbz	r7, 870ec <__multiply+0xa8>
   870b2:	464d      	mov	r5, r9
   870b4:	465e      	mov	r6, fp
   870b6:	2100      	movs	r1, #0
   870b8:	f856 2b04 	ldr.w	r2, [r6], #4
   870bc:	6828      	ldr	r0, [r5, #0]
   870be:	b293      	uxth	r3, r2
   870c0:	b284      	uxth	r4, r0
   870c2:	0c12      	lsrs	r2, r2, #16
   870c4:	fb07 4303 	mla	r3, r7, r3, r4
   870c8:	0c00      	lsrs	r0, r0, #16
   870ca:	fb07 0202 	mla	r2, r7, r2, r0
   870ce:	440b      	add	r3, r1
   870d0:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   870d4:	b29b      	uxth	r3, r3
   870d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   870da:	45b6      	cmp	lr, r6
   870dc:	f845 3b04 	str.w	r3, [r5], #4
   870e0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   870e4:	d8e8      	bhi.n	870b8 <__multiply+0x74>
   870e6:	6029      	str	r1, [r5, #0]
   870e8:	f8dc 5000 	ldr.w	r5, [ip]
   870ec:	0c2d      	lsrs	r5, r5, #16
   870ee:	d01d      	beq.n	8712c <__multiply+0xe8>
   870f0:	f8d9 3000 	ldr.w	r3, [r9]
   870f4:	4648      	mov	r0, r9
   870f6:	461c      	mov	r4, r3
   870f8:	4659      	mov	r1, fp
   870fa:	2200      	movs	r2, #0
   870fc:	880e      	ldrh	r6, [r1, #0]
   870fe:	0c24      	lsrs	r4, r4, #16
   87100:	fb05 4406 	mla	r4, r5, r6, r4
   87104:	b29b      	uxth	r3, r3
   87106:	4422      	add	r2, r4
   87108:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8710c:	f840 3b04 	str.w	r3, [r0], #4
   87110:	f851 3b04 	ldr.w	r3, [r1], #4
   87114:	6804      	ldr	r4, [r0, #0]
   87116:	0c1b      	lsrs	r3, r3, #16
   87118:	b2a6      	uxth	r6, r4
   8711a:	fb05 6303 	mla	r3, r5, r3, r6
   8711e:	458e      	cmp	lr, r1
   87120:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   87124:	ea4f 4213 	mov.w	r2, r3, lsr #16
   87128:	d8e8      	bhi.n	870fc <__multiply+0xb8>
   8712a:	6003      	str	r3, [r0, #0]
   8712c:	f10c 0c04 	add.w	ip, ip, #4
   87130:	45e2      	cmp	sl, ip
   87132:	f109 0904 	add.w	r9, r9, #4
   87136:	d8b8      	bhi.n	870aa <__multiply+0x66>
   87138:	f8dd a004 	ldr.w	sl, [sp, #4]
   8713c:	f1b8 0f00 	cmp.w	r8, #0
   87140:	dd0b      	ble.n	8715a <__multiply+0x116>
   87142:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   87146:	f1aa 0a04 	sub.w	sl, sl, #4
   8714a:	b11b      	cbz	r3, 87154 <__multiply+0x110>
   8714c:	e005      	b.n	8715a <__multiply+0x116>
   8714e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   87152:	b913      	cbnz	r3, 8715a <__multiply+0x116>
   87154:	f1b8 0801 	subs.w	r8, r8, #1
   87158:	d1f9      	bne.n	8714e <__multiply+0x10a>
   8715a:	9800      	ldr	r0, [sp, #0]
   8715c:	f8c0 8010 	str.w	r8, [r0, #16]
   87160:	b003      	add	sp, #12
   87162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87166:	bf00      	nop

00087168 <__pow5mult>:
   87168:	f012 0303 	ands.w	r3, r2, #3
   8716c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   87170:	4614      	mov	r4, r2
   87172:	4607      	mov	r7, r0
   87174:	d12e      	bne.n	871d4 <__pow5mult+0x6c>
   87176:	460d      	mov	r5, r1
   87178:	10a4      	asrs	r4, r4, #2
   8717a:	d01c      	beq.n	871b6 <__pow5mult+0x4e>
   8717c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   8717e:	b396      	cbz	r6, 871e6 <__pow5mult+0x7e>
   87180:	07e3      	lsls	r3, r4, #31
   87182:	f04f 0800 	mov.w	r8, #0
   87186:	d406      	bmi.n	87196 <__pow5mult+0x2e>
   87188:	1064      	asrs	r4, r4, #1
   8718a:	d014      	beq.n	871b6 <__pow5mult+0x4e>
   8718c:	6830      	ldr	r0, [r6, #0]
   8718e:	b1a8      	cbz	r0, 871bc <__pow5mult+0x54>
   87190:	4606      	mov	r6, r0
   87192:	07e3      	lsls	r3, r4, #31
   87194:	d5f8      	bpl.n	87188 <__pow5mult+0x20>
   87196:	4632      	mov	r2, r6
   87198:	4629      	mov	r1, r5
   8719a:	4638      	mov	r0, r7
   8719c:	f7ff ff52 	bl	87044 <__multiply>
   871a0:	b1b5      	cbz	r5, 871d0 <__pow5mult+0x68>
   871a2:	686a      	ldr	r2, [r5, #4]
   871a4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   871a6:	1064      	asrs	r4, r4, #1
   871a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   871ac:	6029      	str	r1, [r5, #0]
   871ae:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   871b2:	4605      	mov	r5, r0
   871b4:	d1ea      	bne.n	8718c <__pow5mult+0x24>
   871b6:	4628      	mov	r0, r5
   871b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   871bc:	4632      	mov	r2, r6
   871be:	4631      	mov	r1, r6
   871c0:	4638      	mov	r0, r7
   871c2:	f7ff ff3f 	bl	87044 <__multiply>
   871c6:	6030      	str	r0, [r6, #0]
   871c8:	f8c0 8000 	str.w	r8, [r0]
   871cc:	4606      	mov	r6, r0
   871ce:	e7e0      	b.n	87192 <__pow5mult+0x2a>
   871d0:	4605      	mov	r5, r0
   871d2:	e7d9      	b.n	87188 <__pow5mult+0x20>
   871d4:	4a0b      	ldr	r2, [pc, #44]	; (87204 <__pow5mult+0x9c>)
   871d6:	3b01      	subs	r3, #1
   871d8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   871dc:	2300      	movs	r3, #0
   871de:	f7ff fe95 	bl	86f0c <__multadd>
   871e2:	4605      	mov	r5, r0
   871e4:	e7c8      	b.n	87178 <__pow5mult+0x10>
   871e6:	2101      	movs	r1, #1
   871e8:	4638      	mov	r0, r7
   871ea:	f7ff fe5f 	bl	86eac <_Balloc>
   871ee:	f240 2171 	movw	r1, #625	; 0x271
   871f2:	2201      	movs	r2, #1
   871f4:	2300      	movs	r3, #0
   871f6:	6141      	str	r1, [r0, #20]
   871f8:	6102      	str	r2, [r0, #16]
   871fa:	4606      	mov	r6, r0
   871fc:	64b8      	str	r0, [r7, #72]	; 0x48
   871fe:	6003      	str	r3, [r0, #0]
   87200:	e7be      	b.n	87180 <__pow5mult+0x18>
   87202:	bf00      	nop
   87204:	000899f0 	.word	0x000899f0

00087208 <__lshift>:
   87208:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8720c:	690b      	ldr	r3, [r1, #16]
   8720e:	1154      	asrs	r4, r2, #5
   87210:	eb04 0803 	add.w	r8, r4, r3
   87214:	688b      	ldr	r3, [r1, #8]
   87216:	f108 0501 	add.w	r5, r8, #1
   8721a:	429d      	cmp	r5, r3
   8721c:	460e      	mov	r6, r1
   8721e:	4691      	mov	r9, r2
   87220:	4607      	mov	r7, r0
   87222:	6849      	ldr	r1, [r1, #4]
   87224:	dd04      	ble.n	87230 <__lshift+0x28>
   87226:	005b      	lsls	r3, r3, #1
   87228:	429d      	cmp	r5, r3
   8722a:	f101 0101 	add.w	r1, r1, #1
   8722e:	dcfa      	bgt.n	87226 <__lshift+0x1e>
   87230:	4638      	mov	r0, r7
   87232:	f7ff fe3b 	bl	86eac <_Balloc>
   87236:	2c00      	cmp	r4, #0
   87238:	f100 0314 	add.w	r3, r0, #20
   8723c:	dd06      	ble.n	8724c <__lshift+0x44>
   8723e:	2100      	movs	r1, #0
   87240:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   87244:	f843 1b04 	str.w	r1, [r3], #4
   87248:	429a      	cmp	r2, r3
   8724a:	d1fb      	bne.n	87244 <__lshift+0x3c>
   8724c:	6934      	ldr	r4, [r6, #16]
   8724e:	f106 0114 	add.w	r1, r6, #20
   87252:	f019 091f 	ands.w	r9, r9, #31
   87256:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   8725a:	d01d      	beq.n	87298 <__lshift+0x90>
   8725c:	2200      	movs	r2, #0
   8725e:	f1c9 0c20 	rsb	ip, r9, #32
   87262:	680c      	ldr	r4, [r1, #0]
   87264:	fa04 f409 	lsl.w	r4, r4, r9
   87268:	4314      	orrs	r4, r2
   8726a:	f843 4b04 	str.w	r4, [r3], #4
   8726e:	f851 2b04 	ldr.w	r2, [r1], #4
   87272:	458e      	cmp	lr, r1
   87274:	fa22 f20c 	lsr.w	r2, r2, ip
   87278:	d8f3      	bhi.n	87262 <__lshift+0x5a>
   8727a:	601a      	str	r2, [r3, #0]
   8727c:	b10a      	cbz	r2, 87282 <__lshift+0x7a>
   8727e:	f108 0502 	add.w	r5, r8, #2
   87282:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   87284:	6872      	ldr	r2, [r6, #4]
   87286:	3d01      	subs	r5, #1
   87288:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8728c:	6105      	str	r5, [r0, #16]
   8728e:	6031      	str	r1, [r6, #0]
   87290:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   87294:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   87298:	3b04      	subs	r3, #4
   8729a:	f851 2b04 	ldr.w	r2, [r1], #4
   8729e:	458e      	cmp	lr, r1
   872a0:	f843 2f04 	str.w	r2, [r3, #4]!
   872a4:	d8f9      	bhi.n	8729a <__lshift+0x92>
   872a6:	e7ec      	b.n	87282 <__lshift+0x7a>

000872a8 <__mcmp>:
   872a8:	b430      	push	{r4, r5}
   872aa:	690b      	ldr	r3, [r1, #16]
   872ac:	4605      	mov	r5, r0
   872ae:	6900      	ldr	r0, [r0, #16]
   872b0:	1ac0      	subs	r0, r0, r3
   872b2:	d10f      	bne.n	872d4 <__mcmp+0x2c>
   872b4:	009b      	lsls	r3, r3, #2
   872b6:	3514      	adds	r5, #20
   872b8:	3114      	adds	r1, #20
   872ba:	4419      	add	r1, r3
   872bc:	442b      	add	r3, r5
   872be:	e001      	b.n	872c4 <__mcmp+0x1c>
   872c0:	429d      	cmp	r5, r3
   872c2:	d207      	bcs.n	872d4 <__mcmp+0x2c>
   872c4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   872c8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   872cc:	4294      	cmp	r4, r2
   872ce:	d0f7      	beq.n	872c0 <__mcmp+0x18>
   872d0:	d302      	bcc.n	872d8 <__mcmp+0x30>
   872d2:	2001      	movs	r0, #1
   872d4:	bc30      	pop	{r4, r5}
   872d6:	4770      	bx	lr
   872d8:	f04f 30ff 	mov.w	r0, #4294967295
   872dc:	e7fa      	b.n	872d4 <__mcmp+0x2c>
   872de:	bf00      	nop

000872e0 <__mdiff>:
   872e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   872e4:	690c      	ldr	r4, [r1, #16]
   872e6:	4689      	mov	r9, r1
   872e8:	6911      	ldr	r1, [r2, #16]
   872ea:	4692      	mov	sl, r2
   872ec:	1a64      	subs	r4, r4, r1
   872ee:	2c00      	cmp	r4, #0
   872f0:	d117      	bne.n	87322 <__mdiff+0x42>
   872f2:	0089      	lsls	r1, r1, #2
   872f4:	f109 0714 	add.w	r7, r9, #20
   872f8:	f102 0614 	add.w	r6, r2, #20
   872fc:	187b      	adds	r3, r7, r1
   872fe:	4431      	add	r1, r6
   87300:	e001      	b.n	87306 <__mdiff+0x26>
   87302:	429f      	cmp	r7, r3
   87304:	d265      	bcs.n	873d2 <__mdiff+0xf2>
   87306:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   8730a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   8730e:	4295      	cmp	r5, r2
   87310:	d0f7      	beq.n	87302 <__mdiff+0x22>
   87312:	d267      	bcs.n	873e4 <__mdiff+0x104>
   87314:	464b      	mov	r3, r9
   87316:	46bb      	mov	fp, r7
   87318:	46d1      	mov	r9, sl
   8731a:	4637      	mov	r7, r6
   8731c:	469a      	mov	sl, r3
   8731e:	2401      	movs	r4, #1
   87320:	e005      	b.n	8732e <__mdiff+0x4e>
   87322:	db61      	blt.n	873e8 <__mdiff+0x108>
   87324:	2400      	movs	r4, #0
   87326:	f109 0714 	add.w	r7, r9, #20
   8732a:	f10a 0b14 	add.w	fp, sl, #20
   8732e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   87332:	f7ff fdbb 	bl	86eac <_Balloc>
   87336:	465d      	mov	r5, fp
   87338:	f04f 0800 	mov.w	r8, #0
   8733c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   87340:	f8da 3010 	ldr.w	r3, [sl, #16]
   87344:	463e      	mov	r6, r7
   87346:	60c4      	str	r4, [r0, #12]
   87348:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   8734c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   87350:	f100 0414 	add.w	r4, r0, #20
   87354:	f856 9b04 	ldr.w	r9, [r6], #4
   87358:	f855 2b04 	ldr.w	r2, [r5], #4
   8735c:	fa1f f389 	uxth.w	r3, r9
   87360:	4443      	add	r3, r8
   87362:	fa1f f882 	uxth.w	r8, r2
   87366:	0c12      	lsrs	r2, r2, #16
   87368:	eba3 0308 	sub.w	r3, r3, r8
   8736c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   87370:	eb02 4223 	add.w	r2, r2, r3, asr #16
   87374:	b29b      	uxth	r3, r3
   87376:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8737a:	45ac      	cmp	ip, r5
   8737c:	f844 3b04 	str.w	r3, [r4], #4
   87380:	ea4f 4822 	mov.w	r8, r2, asr #16
   87384:	d8e6      	bhi.n	87354 <__mdiff+0x74>
   87386:	42b7      	cmp	r7, r6
   87388:	d917      	bls.n	873ba <__mdiff+0xda>
   8738a:	46a4      	mov	ip, r4
   8738c:	4635      	mov	r5, r6
   8738e:	f855 3b04 	ldr.w	r3, [r5], #4
   87392:	b299      	uxth	r1, r3
   87394:	4441      	add	r1, r8
   87396:	140a      	asrs	r2, r1, #16
   87398:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   8739c:	b289      	uxth	r1, r1
   8739e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   873a2:	42af      	cmp	r7, r5
   873a4:	f84c 3b04 	str.w	r3, [ip], #4
   873a8:	ea4f 4822 	mov.w	r8, r2, asr #16
   873ac:	d8ef      	bhi.n	8738e <__mdiff+0xae>
   873ae:	43f6      	mvns	r6, r6
   873b0:	4437      	add	r7, r6
   873b2:	f027 0703 	bic.w	r7, r7, #3
   873b6:	3704      	adds	r7, #4
   873b8:	443c      	add	r4, r7
   873ba:	3c04      	subs	r4, #4
   873bc:	b92b      	cbnz	r3, 873ca <__mdiff+0xea>
   873be:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   873c2:	f10e 3eff 	add.w	lr, lr, #4294967295
   873c6:	2b00      	cmp	r3, #0
   873c8:	d0f9      	beq.n	873be <__mdiff+0xde>
   873ca:	f8c0 e010 	str.w	lr, [r0, #16]
   873ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   873d2:	2100      	movs	r1, #0
   873d4:	f7ff fd6a 	bl	86eac <_Balloc>
   873d8:	2201      	movs	r2, #1
   873da:	2300      	movs	r3, #0
   873dc:	6102      	str	r2, [r0, #16]
   873de:	6143      	str	r3, [r0, #20]
   873e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   873e4:	46b3      	mov	fp, r6
   873e6:	e7a2      	b.n	8732e <__mdiff+0x4e>
   873e8:	464b      	mov	r3, r9
   873ea:	f109 0b14 	add.w	fp, r9, #20
   873ee:	f102 0714 	add.w	r7, r2, #20
   873f2:	4691      	mov	r9, r2
   873f4:	2401      	movs	r4, #1
   873f6:	469a      	mov	sl, r3
   873f8:	e799      	b.n	8732e <__mdiff+0x4e>
   873fa:	bf00      	nop

000873fc <__d2b>:
   873fc:	b5f0      	push	{r4, r5, r6, r7, lr}
   873fe:	2101      	movs	r1, #1
   87400:	b083      	sub	sp, #12
   87402:	461c      	mov	r4, r3
   87404:	f3c3 550a 	ubfx	r5, r3, #20, #11
   87408:	4616      	mov	r6, r2
   8740a:	f7ff fd4f 	bl	86eac <_Balloc>
   8740e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   87412:	4607      	mov	r7, r0
   87414:	b10d      	cbz	r5, 8741a <__d2b+0x1e>
   87416:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   8741a:	9401      	str	r4, [sp, #4]
   8741c:	b306      	cbz	r6, 87460 <__d2b+0x64>
   8741e:	a802      	add	r0, sp, #8
   87420:	f840 6d08 	str.w	r6, [r0, #-8]!
   87424:	f7ff fdd4 	bl	86fd0 <__lo0bits>
   87428:	2800      	cmp	r0, #0
   8742a:	d130      	bne.n	8748e <__d2b+0x92>
   8742c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   87430:	617a      	str	r2, [r7, #20]
   87432:	2b00      	cmp	r3, #0
   87434:	bf0c      	ite	eq
   87436:	2101      	moveq	r1, #1
   87438:	2102      	movne	r1, #2
   8743a:	61bb      	str	r3, [r7, #24]
   8743c:	6139      	str	r1, [r7, #16]
   8743e:	b9d5      	cbnz	r5, 87476 <__d2b+0x7a>
   87440:	9a08      	ldr	r2, [sp, #32]
   87442:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   87446:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   8744a:	6010      	str	r0, [r2, #0]
   8744c:	6918      	ldr	r0, [r3, #16]
   8744e:	f7ff fd9f 	bl	86f90 <__hi0bits>
   87452:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87454:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   87458:	6018      	str	r0, [r3, #0]
   8745a:	4638      	mov	r0, r7
   8745c:	b003      	add	sp, #12
   8745e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87460:	a801      	add	r0, sp, #4
   87462:	f7ff fdb5 	bl	86fd0 <__lo0bits>
   87466:	2201      	movs	r2, #1
   87468:	9b01      	ldr	r3, [sp, #4]
   8746a:	4611      	mov	r1, r2
   8746c:	3020      	adds	r0, #32
   8746e:	613a      	str	r2, [r7, #16]
   87470:	617b      	str	r3, [r7, #20]
   87472:	2d00      	cmp	r5, #0
   87474:	d0e4      	beq.n	87440 <__d2b+0x44>
   87476:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   8747a:	9a08      	ldr	r2, [sp, #32]
   8747c:	4403      	add	r3, r0
   8747e:	6013      	str	r3, [r2, #0]
   87480:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87482:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   87486:	6018      	str	r0, [r3, #0]
   87488:	4638      	mov	r0, r7
   8748a:	b003      	add	sp, #12
   8748c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8748e:	9b01      	ldr	r3, [sp, #4]
   87490:	f1c0 0220 	rsb	r2, r0, #32
   87494:	9900      	ldr	r1, [sp, #0]
   87496:	fa03 f202 	lsl.w	r2, r3, r2
   8749a:	430a      	orrs	r2, r1
   8749c:	40c3      	lsrs	r3, r0
   8749e:	9301      	str	r3, [sp, #4]
   874a0:	617a      	str	r2, [r7, #20]
   874a2:	e7c6      	b.n	87432 <__d2b+0x36>

000874a4 <_sbrk_r>:
   874a4:	b538      	push	{r3, r4, r5, lr}
   874a6:	2300      	movs	r3, #0
   874a8:	4c06      	ldr	r4, [pc, #24]	; (874c4 <_sbrk_r+0x20>)
   874aa:	4605      	mov	r5, r0
   874ac:	4608      	mov	r0, r1
   874ae:	6023      	str	r3, [r4, #0]
   874b0:	f7f9 fe88 	bl	811c4 <_sbrk>
   874b4:	1c43      	adds	r3, r0, #1
   874b6:	d000      	beq.n	874ba <_sbrk_r+0x16>
   874b8:	bd38      	pop	{r3, r4, r5, pc}
   874ba:	6823      	ldr	r3, [r4, #0]
   874bc:	2b00      	cmp	r3, #0
   874be:	d0fb      	beq.n	874b8 <_sbrk_r+0x14>
   874c0:	602b      	str	r3, [r5, #0]
   874c2:	bd38      	pop	{r3, r4, r5, pc}
   874c4:	200018c8 	.word	0x200018c8

000874c8 <__ssprint_r>:
   874c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   874cc:	6893      	ldr	r3, [r2, #8]
   874ce:	b083      	sub	sp, #12
   874d0:	4690      	mov	r8, r2
   874d2:	2b00      	cmp	r3, #0
   874d4:	d070      	beq.n	875b8 <__ssprint_r+0xf0>
   874d6:	4682      	mov	sl, r0
   874d8:	460c      	mov	r4, r1
   874da:	6817      	ldr	r7, [r2, #0]
   874dc:	688d      	ldr	r5, [r1, #8]
   874de:	6808      	ldr	r0, [r1, #0]
   874e0:	e042      	b.n	87568 <__ssprint_r+0xa0>
   874e2:	89a3      	ldrh	r3, [r4, #12]
   874e4:	f413 6f90 	tst.w	r3, #1152	; 0x480
   874e8:	d02e      	beq.n	87548 <__ssprint_r+0x80>
   874ea:	6965      	ldr	r5, [r4, #20]
   874ec:	6921      	ldr	r1, [r4, #16]
   874ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   874f2:	eba0 0b01 	sub.w	fp, r0, r1
   874f6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   874fa:	f10b 0001 	add.w	r0, fp, #1
   874fe:	106d      	asrs	r5, r5, #1
   87500:	4430      	add	r0, r6
   87502:	42a8      	cmp	r0, r5
   87504:	462a      	mov	r2, r5
   87506:	bf84      	itt	hi
   87508:	4605      	movhi	r5, r0
   8750a:	462a      	movhi	r2, r5
   8750c:	055b      	lsls	r3, r3, #21
   8750e:	d538      	bpl.n	87582 <__ssprint_r+0xba>
   87510:	4611      	mov	r1, r2
   87512:	4650      	mov	r0, sl
   87514:	f7ff f94a 	bl	867ac <_malloc_r>
   87518:	2800      	cmp	r0, #0
   8751a:	d03c      	beq.n	87596 <__ssprint_r+0xce>
   8751c:	465a      	mov	r2, fp
   8751e:	6921      	ldr	r1, [r4, #16]
   87520:	9001      	str	r0, [sp, #4]
   87522:	f7ff fc41 	bl	86da8 <memcpy>
   87526:	89a2      	ldrh	r2, [r4, #12]
   87528:	9b01      	ldr	r3, [sp, #4]
   8752a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8752e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   87532:	81a2      	strh	r2, [r4, #12]
   87534:	eba5 020b 	sub.w	r2, r5, fp
   87538:	eb03 000b 	add.w	r0, r3, fp
   8753c:	6165      	str	r5, [r4, #20]
   8753e:	46b3      	mov	fp, r6
   87540:	4635      	mov	r5, r6
   87542:	6123      	str	r3, [r4, #16]
   87544:	6020      	str	r0, [r4, #0]
   87546:	60a2      	str	r2, [r4, #8]
   87548:	465a      	mov	r2, fp
   8754a:	4649      	mov	r1, r9
   8754c:	f000 fa0e 	bl	8796c <memmove>
   87550:	f8d8 3008 	ldr.w	r3, [r8, #8]
   87554:	68a2      	ldr	r2, [r4, #8]
   87556:	6820      	ldr	r0, [r4, #0]
   87558:	1b55      	subs	r5, r2, r5
   8755a:	4458      	add	r0, fp
   8755c:	1b9e      	subs	r6, r3, r6
   8755e:	60a5      	str	r5, [r4, #8]
   87560:	6020      	str	r0, [r4, #0]
   87562:	f8c8 6008 	str.w	r6, [r8, #8]
   87566:	b33e      	cbz	r6, 875b8 <__ssprint_r+0xf0>
   87568:	687e      	ldr	r6, [r7, #4]
   8756a:	463b      	mov	r3, r7
   8756c:	3708      	adds	r7, #8
   8756e:	2e00      	cmp	r6, #0
   87570:	d0fa      	beq.n	87568 <__ssprint_r+0xa0>
   87572:	42ae      	cmp	r6, r5
   87574:	f8d3 9000 	ldr.w	r9, [r3]
   87578:	46ab      	mov	fp, r5
   8757a:	d2b2      	bcs.n	874e2 <__ssprint_r+0x1a>
   8757c:	4635      	mov	r5, r6
   8757e:	46b3      	mov	fp, r6
   87580:	e7e2      	b.n	87548 <__ssprint_r+0x80>
   87582:	4650      	mov	r0, sl
   87584:	f000 fa56 	bl	87a34 <_realloc_r>
   87588:	4603      	mov	r3, r0
   8758a:	2800      	cmp	r0, #0
   8758c:	d1d2      	bne.n	87534 <__ssprint_r+0x6c>
   8758e:	6921      	ldr	r1, [r4, #16]
   87590:	4650      	mov	r0, sl
   87592:	f000 f905 	bl	877a0 <_free_r>
   87596:	230c      	movs	r3, #12
   87598:	2200      	movs	r2, #0
   8759a:	f04f 30ff 	mov.w	r0, #4294967295
   8759e:	f8ca 3000 	str.w	r3, [sl]
   875a2:	89a3      	ldrh	r3, [r4, #12]
   875a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   875a8:	81a3      	strh	r3, [r4, #12]
   875aa:	f8c8 2008 	str.w	r2, [r8, #8]
   875ae:	f8c8 2004 	str.w	r2, [r8, #4]
   875b2:	b003      	add	sp, #12
   875b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   875b8:	2000      	movs	r0, #0
   875ba:	f8c8 0004 	str.w	r0, [r8, #4]
   875be:	b003      	add	sp, #12
   875c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000875c4 <__ascii_wctomb>:
   875c4:	b119      	cbz	r1, 875ce <__ascii_wctomb+0xa>
   875c6:	2aff      	cmp	r2, #255	; 0xff
   875c8:	d803      	bhi.n	875d2 <__ascii_wctomb+0xe>
   875ca:	700a      	strb	r2, [r1, #0]
   875cc:	2101      	movs	r1, #1
   875ce:	4608      	mov	r0, r1
   875d0:	4770      	bx	lr
   875d2:	238a      	movs	r3, #138	; 0x8a
   875d4:	f04f 31ff 	mov.w	r1, #4294967295
   875d8:	6003      	str	r3, [r0, #0]
   875da:	e7f8      	b.n	875ce <__ascii_wctomb+0xa>

000875dc <__register_exitproc>:
   875dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   875e0:	4d2c      	ldr	r5, [pc, #176]	; (87694 <__register_exitproc+0xb8>)
   875e2:	4606      	mov	r6, r0
   875e4:	6828      	ldr	r0, [r5, #0]
   875e6:	4698      	mov	r8, r3
   875e8:	460f      	mov	r7, r1
   875ea:	4691      	mov	r9, r2
   875ec:	f7ff f8da 	bl	867a4 <__retarget_lock_acquire_recursive>
   875f0:	4b29      	ldr	r3, [pc, #164]	; (87698 <__register_exitproc+0xbc>)
   875f2:	681c      	ldr	r4, [r3, #0]
   875f4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   875f8:	2b00      	cmp	r3, #0
   875fa:	d03e      	beq.n	8767a <__register_exitproc+0x9e>
   875fc:	685a      	ldr	r2, [r3, #4]
   875fe:	2a1f      	cmp	r2, #31
   87600:	dc1c      	bgt.n	8763c <__register_exitproc+0x60>
   87602:	f102 0e01 	add.w	lr, r2, #1
   87606:	b176      	cbz	r6, 87626 <__register_exitproc+0x4a>
   87608:	2101      	movs	r1, #1
   8760a:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8760e:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   87612:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   87616:	4091      	lsls	r1, r2
   87618:	4308      	orrs	r0, r1
   8761a:	2e02      	cmp	r6, #2
   8761c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   87620:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   87624:	d023      	beq.n	8766e <__register_exitproc+0x92>
   87626:	3202      	adds	r2, #2
   87628:	f8c3 e004 	str.w	lr, [r3, #4]
   8762c:	6828      	ldr	r0, [r5, #0]
   8762e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   87632:	f7ff f8b9 	bl	867a8 <__retarget_lock_release_recursive>
   87636:	2000      	movs	r0, #0
   87638:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8763c:	4b17      	ldr	r3, [pc, #92]	; (8769c <__register_exitproc+0xc0>)
   8763e:	b30b      	cbz	r3, 87684 <__register_exitproc+0xa8>
   87640:	f44f 70c8 	mov.w	r0, #400	; 0x190
   87644:	f3af 8000 	nop.w
   87648:	4603      	mov	r3, r0
   8764a:	b1d8      	cbz	r0, 87684 <__register_exitproc+0xa8>
   8764c:	2000      	movs	r0, #0
   8764e:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   87652:	f04f 0e01 	mov.w	lr, #1
   87656:	6058      	str	r0, [r3, #4]
   87658:	6019      	str	r1, [r3, #0]
   8765a:	4602      	mov	r2, r0
   8765c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   87660:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   87664:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   87668:	2e00      	cmp	r6, #0
   8766a:	d0dc      	beq.n	87626 <__register_exitproc+0x4a>
   8766c:	e7cc      	b.n	87608 <__register_exitproc+0x2c>
   8766e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   87672:	4301      	orrs	r1, r0
   87674:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   87678:	e7d5      	b.n	87626 <__register_exitproc+0x4a>
   8767a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8767e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   87682:	e7bb      	b.n	875fc <__register_exitproc+0x20>
   87684:	6828      	ldr	r0, [r5, #0]
   87686:	f7ff f88f 	bl	867a8 <__retarget_lock_release_recursive>
   8768a:	f04f 30ff 	mov.w	r0, #4294967295
   8768e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   87692:	bf00      	nop
   87694:	20000a58 	.word	0x20000a58
   87698:	00089878 	.word	0x00089878
   8769c:	00000000 	.word	0x00000000

000876a0 <_calloc_r>:
   876a0:	b510      	push	{r4, lr}
   876a2:	fb02 f101 	mul.w	r1, r2, r1
   876a6:	f7ff f881 	bl	867ac <_malloc_r>
   876aa:	4604      	mov	r4, r0
   876ac:	b1d8      	cbz	r0, 876e6 <_calloc_r+0x46>
   876ae:	f850 2c04 	ldr.w	r2, [r0, #-4]
   876b2:	f022 0203 	bic.w	r2, r2, #3
   876b6:	3a04      	subs	r2, #4
   876b8:	2a24      	cmp	r2, #36	; 0x24
   876ba:	d818      	bhi.n	876ee <_calloc_r+0x4e>
   876bc:	2a13      	cmp	r2, #19
   876be:	d914      	bls.n	876ea <_calloc_r+0x4a>
   876c0:	2300      	movs	r3, #0
   876c2:	2a1b      	cmp	r2, #27
   876c4:	6003      	str	r3, [r0, #0]
   876c6:	6043      	str	r3, [r0, #4]
   876c8:	d916      	bls.n	876f8 <_calloc_r+0x58>
   876ca:	2a24      	cmp	r2, #36	; 0x24
   876cc:	6083      	str	r3, [r0, #8]
   876ce:	60c3      	str	r3, [r0, #12]
   876d0:	bf11      	iteee	ne
   876d2:	f100 0210 	addne.w	r2, r0, #16
   876d6:	6103      	streq	r3, [r0, #16]
   876d8:	6143      	streq	r3, [r0, #20]
   876da:	f100 0218 	addeq.w	r2, r0, #24
   876de:	2300      	movs	r3, #0
   876e0:	6013      	str	r3, [r2, #0]
   876e2:	6053      	str	r3, [r2, #4]
   876e4:	6093      	str	r3, [r2, #8]
   876e6:	4620      	mov	r0, r4
   876e8:	bd10      	pop	{r4, pc}
   876ea:	4602      	mov	r2, r0
   876ec:	e7f7      	b.n	876de <_calloc_r+0x3e>
   876ee:	2100      	movs	r1, #0
   876f0:	f7fc fc02 	bl	83ef8 <memset>
   876f4:	4620      	mov	r0, r4
   876f6:	bd10      	pop	{r4, pc}
   876f8:	f100 0208 	add.w	r2, r0, #8
   876fc:	e7ef      	b.n	876de <_calloc_r+0x3e>
   876fe:	bf00      	nop

00087700 <_malloc_trim_r>:
   87700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87702:	460c      	mov	r4, r1
   87704:	4f23      	ldr	r7, [pc, #140]	; (87794 <_malloc_trim_r+0x94>)
   87706:	4606      	mov	r6, r0
   87708:	f7ff fbc4 	bl	86e94 <__malloc_lock>
   8770c:	68bb      	ldr	r3, [r7, #8]
   8770e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   87712:	685d      	ldr	r5, [r3, #4]
   87714:	310f      	adds	r1, #15
   87716:	f025 0503 	bic.w	r5, r5, #3
   8771a:	4429      	add	r1, r5
   8771c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   87720:	f021 010f 	bic.w	r1, r1, #15
   87724:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   87728:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   8772c:	db07      	blt.n	8773e <_malloc_trim_r+0x3e>
   8772e:	2100      	movs	r1, #0
   87730:	4630      	mov	r0, r6
   87732:	f7ff feb7 	bl	874a4 <_sbrk_r>
   87736:	68bb      	ldr	r3, [r7, #8]
   87738:	442b      	add	r3, r5
   8773a:	4298      	cmp	r0, r3
   8773c:	d004      	beq.n	87748 <_malloc_trim_r+0x48>
   8773e:	4630      	mov	r0, r6
   87740:	f7ff fbae 	bl	86ea0 <__malloc_unlock>
   87744:	2000      	movs	r0, #0
   87746:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87748:	4261      	negs	r1, r4
   8774a:	4630      	mov	r0, r6
   8774c:	f7ff feaa 	bl	874a4 <_sbrk_r>
   87750:	3001      	adds	r0, #1
   87752:	d00d      	beq.n	87770 <_malloc_trim_r+0x70>
   87754:	4b10      	ldr	r3, [pc, #64]	; (87798 <_malloc_trim_r+0x98>)
   87756:	68ba      	ldr	r2, [r7, #8]
   87758:	6819      	ldr	r1, [r3, #0]
   8775a:	1b2d      	subs	r5, r5, r4
   8775c:	f045 0501 	orr.w	r5, r5, #1
   87760:	4630      	mov	r0, r6
   87762:	1b09      	subs	r1, r1, r4
   87764:	6055      	str	r5, [r2, #4]
   87766:	6019      	str	r1, [r3, #0]
   87768:	f7ff fb9a 	bl	86ea0 <__malloc_unlock>
   8776c:	2001      	movs	r0, #1
   8776e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87770:	2100      	movs	r1, #0
   87772:	4630      	mov	r0, r6
   87774:	f7ff fe96 	bl	874a4 <_sbrk_r>
   87778:	68ba      	ldr	r2, [r7, #8]
   8777a:	1a83      	subs	r3, r0, r2
   8777c:	2b0f      	cmp	r3, #15
   8777e:	ddde      	ble.n	8773e <_malloc_trim_r+0x3e>
   87780:	4c06      	ldr	r4, [pc, #24]	; (8779c <_malloc_trim_r+0x9c>)
   87782:	4905      	ldr	r1, [pc, #20]	; (87798 <_malloc_trim_r+0x98>)
   87784:	6824      	ldr	r4, [r4, #0]
   87786:	f043 0301 	orr.w	r3, r3, #1
   8778a:	1b00      	subs	r0, r0, r4
   8778c:	6053      	str	r3, [r2, #4]
   8778e:	6008      	str	r0, [r1, #0]
   87790:	e7d5      	b.n	8773e <_malloc_trim_r+0x3e>
   87792:	bf00      	nop
   87794:	20000bc8 	.word	0x20000bc8
   87798:	20001080 	.word	0x20001080
   8779c:	20000fd0 	.word	0x20000fd0

000877a0 <_free_r>:
   877a0:	2900      	cmp	r1, #0
   877a2:	d044      	beq.n	8782e <_free_r+0x8e>
   877a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   877a8:	460d      	mov	r5, r1
   877aa:	4680      	mov	r8, r0
   877ac:	f7ff fb72 	bl	86e94 <__malloc_lock>
   877b0:	f855 7c04 	ldr.w	r7, [r5, #-4]
   877b4:	4969      	ldr	r1, [pc, #420]	; (8795c <_free_r+0x1bc>)
   877b6:	f1a5 0408 	sub.w	r4, r5, #8
   877ba:	f027 0301 	bic.w	r3, r7, #1
   877be:	18e2      	adds	r2, r4, r3
   877c0:	688e      	ldr	r6, [r1, #8]
   877c2:	6850      	ldr	r0, [r2, #4]
   877c4:	42b2      	cmp	r2, r6
   877c6:	f020 0003 	bic.w	r0, r0, #3
   877ca:	d05e      	beq.n	8788a <_free_r+0xea>
   877cc:	07fe      	lsls	r6, r7, #31
   877ce:	6050      	str	r0, [r2, #4]
   877d0:	d40b      	bmi.n	877ea <_free_r+0x4a>
   877d2:	f855 7c08 	ldr.w	r7, [r5, #-8]
   877d6:	f101 0e08 	add.w	lr, r1, #8
   877da:	1be4      	subs	r4, r4, r7
   877dc:	68a5      	ldr	r5, [r4, #8]
   877de:	443b      	add	r3, r7
   877e0:	4575      	cmp	r5, lr
   877e2:	d06d      	beq.n	878c0 <_free_r+0x120>
   877e4:	68e7      	ldr	r7, [r4, #12]
   877e6:	60ef      	str	r7, [r5, #12]
   877e8:	60bd      	str	r5, [r7, #8]
   877ea:	1815      	adds	r5, r2, r0
   877ec:	686d      	ldr	r5, [r5, #4]
   877ee:	07ed      	lsls	r5, r5, #31
   877f0:	d53e      	bpl.n	87870 <_free_r+0xd0>
   877f2:	f043 0201 	orr.w	r2, r3, #1
   877f6:	6062      	str	r2, [r4, #4]
   877f8:	50e3      	str	r3, [r4, r3]
   877fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   877fe:	d217      	bcs.n	87830 <_free_r+0x90>
   87800:	2201      	movs	r2, #1
   87802:	08db      	lsrs	r3, r3, #3
   87804:	1098      	asrs	r0, r3, #2
   87806:	684d      	ldr	r5, [r1, #4]
   87808:	4413      	add	r3, r2
   8780a:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   8780e:	4082      	lsls	r2, r0
   87810:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   87814:	432a      	orrs	r2, r5
   87816:	3808      	subs	r0, #8
   87818:	60e0      	str	r0, [r4, #12]
   8781a:	60a7      	str	r7, [r4, #8]
   8781c:	604a      	str	r2, [r1, #4]
   8781e:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   87822:	60fc      	str	r4, [r7, #12]
   87824:	4640      	mov	r0, r8
   87826:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8782a:	f7ff bb39 	b.w	86ea0 <__malloc_unlock>
   8782e:	4770      	bx	lr
   87830:	0a5a      	lsrs	r2, r3, #9
   87832:	2a04      	cmp	r2, #4
   87834:	d852      	bhi.n	878dc <_free_r+0x13c>
   87836:	099a      	lsrs	r2, r3, #6
   87838:	f102 0739 	add.w	r7, r2, #57	; 0x39
   8783c:	00ff      	lsls	r7, r7, #3
   8783e:	f102 0538 	add.w	r5, r2, #56	; 0x38
   87842:	19c8      	adds	r0, r1, r7
   87844:	59ca      	ldr	r2, [r1, r7]
   87846:	3808      	subs	r0, #8
   87848:	4290      	cmp	r0, r2
   8784a:	d04f      	beq.n	878ec <_free_r+0x14c>
   8784c:	6851      	ldr	r1, [r2, #4]
   8784e:	f021 0103 	bic.w	r1, r1, #3
   87852:	428b      	cmp	r3, r1
   87854:	d232      	bcs.n	878bc <_free_r+0x11c>
   87856:	6892      	ldr	r2, [r2, #8]
   87858:	4290      	cmp	r0, r2
   8785a:	d1f7      	bne.n	8784c <_free_r+0xac>
   8785c:	68c3      	ldr	r3, [r0, #12]
   8785e:	60a0      	str	r0, [r4, #8]
   87860:	60e3      	str	r3, [r4, #12]
   87862:	609c      	str	r4, [r3, #8]
   87864:	60c4      	str	r4, [r0, #12]
   87866:	4640      	mov	r0, r8
   87868:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8786c:	f7ff bb18 	b.w	86ea0 <__malloc_unlock>
   87870:	6895      	ldr	r5, [r2, #8]
   87872:	4f3b      	ldr	r7, [pc, #236]	; (87960 <_free_r+0x1c0>)
   87874:	4403      	add	r3, r0
   87876:	42bd      	cmp	r5, r7
   87878:	d040      	beq.n	878fc <_free_r+0x15c>
   8787a:	68d0      	ldr	r0, [r2, #12]
   8787c:	f043 0201 	orr.w	r2, r3, #1
   87880:	60e8      	str	r0, [r5, #12]
   87882:	6085      	str	r5, [r0, #8]
   87884:	6062      	str	r2, [r4, #4]
   87886:	50e3      	str	r3, [r4, r3]
   87888:	e7b7      	b.n	877fa <_free_r+0x5a>
   8788a:	07ff      	lsls	r7, r7, #31
   8788c:	4403      	add	r3, r0
   8788e:	d407      	bmi.n	878a0 <_free_r+0x100>
   87890:	f855 5c08 	ldr.w	r5, [r5, #-8]
   87894:	1b64      	subs	r4, r4, r5
   87896:	68e2      	ldr	r2, [r4, #12]
   87898:	68a0      	ldr	r0, [r4, #8]
   8789a:	442b      	add	r3, r5
   8789c:	60c2      	str	r2, [r0, #12]
   8789e:	6090      	str	r0, [r2, #8]
   878a0:	4a30      	ldr	r2, [pc, #192]	; (87964 <_free_r+0x1c4>)
   878a2:	f043 0001 	orr.w	r0, r3, #1
   878a6:	6812      	ldr	r2, [r2, #0]
   878a8:	6060      	str	r0, [r4, #4]
   878aa:	4293      	cmp	r3, r2
   878ac:	608c      	str	r4, [r1, #8]
   878ae:	d3b9      	bcc.n	87824 <_free_r+0x84>
   878b0:	4b2d      	ldr	r3, [pc, #180]	; (87968 <_free_r+0x1c8>)
   878b2:	4640      	mov	r0, r8
   878b4:	6819      	ldr	r1, [r3, #0]
   878b6:	f7ff ff23 	bl	87700 <_malloc_trim_r>
   878ba:	e7b3      	b.n	87824 <_free_r+0x84>
   878bc:	4610      	mov	r0, r2
   878be:	e7cd      	b.n	8785c <_free_r+0xbc>
   878c0:	1811      	adds	r1, r2, r0
   878c2:	6849      	ldr	r1, [r1, #4]
   878c4:	07c9      	lsls	r1, r1, #31
   878c6:	d444      	bmi.n	87952 <_free_r+0x1b2>
   878c8:	6891      	ldr	r1, [r2, #8]
   878ca:	4403      	add	r3, r0
   878cc:	68d2      	ldr	r2, [r2, #12]
   878ce:	f043 0001 	orr.w	r0, r3, #1
   878d2:	60ca      	str	r2, [r1, #12]
   878d4:	6091      	str	r1, [r2, #8]
   878d6:	6060      	str	r0, [r4, #4]
   878d8:	50e3      	str	r3, [r4, r3]
   878da:	e7a3      	b.n	87824 <_free_r+0x84>
   878dc:	2a14      	cmp	r2, #20
   878de:	d816      	bhi.n	8790e <_free_r+0x16e>
   878e0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   878e4:	00ff      	lsls	r7, r7, #3
   878e6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   878ea:	e7aa      	b.n	87842 <_free_r+0xa2>
   878ec:	2301      	movs	r3, #1
   878ee:	10aa      	asrs	r2, r5, #2
   878f0:	684d      	ldr	r5, [r1, #4]
   878f2:	4093      	lsls	r3, r2
   878f4:	432b      	orrs	r3, r5
   878f6:	604b      	str	r3, [r1, #4]
   878f8:	4603      	mov	r3, r0
   878fa:	e7b0      	b.n	8785e <_free_r+0xbe>
   878fc:	f043 0201 	orr.w	r2, r3, #1
   87900:	614c      	str	r4, [r1, #20]
   87902:	610c      	str	r4, [r1, #16]
   87904:	60e5      	str	r5, [r4, #12]
   87906:	60a5      	str	r5, [r4, #8]
   87908:	6062      	str	r2, [r4, #4]
   8790a:	50e3      	str	r3, [r4, r3]
   8790c:	e78a      	b.n	87824 <_free_r+0x84>
   8790e:	2a54      	cmp	r2, #84	; 0x54
   87910:	d806      	bhi.n	87920 <_free_r+0x180>
   87912:	0b1a      	lsrs	r2, r3, #12
   87914:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   87918:	00ff      	lsls	r7, r7, #3
   8791a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   8791e:	e790      	b.n	87842 <_free_r+0xa2>
   87920:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   87924:	d806      	bhi.n	87934 <_free_r+0x194>
   87926:	0bda      	lsrs	r2, r3, #15
   87928:	f102 0778 	add.w	r7, r2, #120	; 0x78
   8792c:	00ff      	lsls	r7, r7, #3
   8792e:	f102 0577 	add.w	r5, r2, #119	; 0x77
   87932:	e786      	b.n	87842 <_free_r+0xa2>
   87934:	f240 5054 	movw	r0, #1364	; 0x554
   87938:	4282      	cmp	r2, r0
   8793a:	d806      	bhi.n	8794a <_free_r+0x1aa>
   8793c:	0c9a      	lsrs	r2, r3, #18
   8793e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   87942:	00ff      	lsls	r7, r7, #3
   87944:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   87948:	e77b      	b.n	87842 <_free_r+0xa2>
   8794a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   8794e:	257e      	movs	r5, #126	; 0x7e
   87950:	e777      	b.n	87842 <_free_r+0xa2>
   87952:	f043 0101 	orr.w	r1, r3, #1
   87956:	6061      	str	r1, [r4, #4]
   87958:	6013      	str	r3, [r2, #0]
   8795a:	e763      	b.n	87824 <_free_r+0x84>
   8795c:	20000bc8 	.word	0x20000bc8
   87960:	20000bd0 	.word	0x20000bd0
   87964:	20000fd4 	.word	0x20000fd4
   87968:	200010b0 	.word	0x200010b0

0008796c <memmove>:
   8796c:	4288      	cmp	r0, r1
   8796e:	b5f0      	push	{r4, r5, r6, r7, lr}
   87970:	d90d      	bls.n	8798e <memmove+0x22>
   87972:	188b      	adds	r3, r1, r2
   87974:	4298      	cmp	r0, r3
   87976:	d20a      	bcs.n	8798e <memmove+0x22>
   87978:	1884      	adds	r4, r0, r2
   8797a:	2a00      	cmp	r2, #0
   8797c:	d051      	beq.n	87a22 <memmove+0xb6>
   8797e:	4622      	mov	r2, r4
   87980:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   87984:	4299      	cmp	r1, r3
   87986:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8798a:	d1f9      	bne.n	87980 <memmove+0x14>
   8798c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8798e:	2a0f      	cmp	r2, #15
   87990:	d948      	bls.n	87a24 <memmove+0xb8>
   87992:	ea41 0300 	orr.w	r3, r1, r0
   87996:	079b      	lsls	r3, r3, #30
   87998:	d146      	bne.n	87a28 <memmove+0xbc>
   8799a:	4615      	mov	r5, r2
   8799c:	f100 0410 	add.w	r4, r0, #16
   879a0:	f101 0310 	add.w	r3, r1, #16
   879a4:	f853 6c10 	ldr.w	r6, [r3, #-16]
   879a8:	3d10      	subs	r5, #16
   879aa:	f844 6c10 	str.w	r6, [r4, #-16]
   879ae:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   879b2:	2d0f      	cmp	r5, #15
   879b4:	f844 6c0c 	str.w	r6, [r4, #-12]
   879b8:	f853 6c08 	ldr.w	r6, [r3, #-8]
   879bc:	f104 0410 	add.w	r4, r4, #16
   879c0:	f844 6c18 	str.w	r6, [r4, #-24]
   879c4:	f853 6c04 	ldr.w	r6, [r3, #-4]
   879c8:	f103 0310 	add.w	r3, r3, #16
   879cc:	f844 6c14 	str.w	r6, [r4, #-20]
   879d0:	d8e8      	bhi.n	879a4 <memmove+0x38>
   879d2:	f1a2 0310 	sub.w	r3, r2, #16
   879d6:	f023 030f 	bic.w	r3, r3, #15
   879da:	f002 0e0f 	and.w	lr, r2, #15
   879de:	3310      	adds	r3, #16
   879e0:	f1be 0f03 	cmp.w	lr, #3
   879e4:	4419      	add	r1, r3
   879e6:	4403      	add	r3, r0
   879e8:	d921      	bls.n	87a2e <memmove+0xc2>
   879ea:	460e      	mov	r6, r1
   879ec:	4674      	mov	r4, lr
   879ee:	1f1d      	subs	r5, r3, #4
   879f0:	f856 7b04 	ldr.w	r7, [r6], #4
   879f4:	3c04      	subs	r4, #4
   879f6:	2c03      	cmp	r4, #3
   879f8:	f845 7f04 	str.w	r7, [r5, #4]!
   879fc:	d8f8      	bhi.n	879f0 <memmove+0x84>
   879fe:	f1ae 0404 	sub.w	r4, lr, #4
   87a02:	f024 0403 	bic.w	r4, r4, #3
   87a06:	3404      	adds	r4, #4
   87a08:	4421      	add	r1, r4
   87a0a:	4423      	add	r3, r4
   87a0c:	f002 0203 	and.w	r2, r2, #3
   87a10:	b162      	cbz	r2, 87a2c <memmove+0xc0>
   87a12:	3b01      	subs	r3, #1
   87a14:	440a      	add	r2, r1
   87a16:	f811 4b01 	ldrb.w	r4, [r1], #1
   87a1a:	428a      	cmp	r2, r1
   87a1c:	f803 4f01 	strb.w	r4, [r3, #1]!
   87a20:	d1f9      	bne.n	87a16 <memmove+0xaa>
   87a22:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87a24:	4603      	mov	r3, r0
   87a26:	e7f3      	b.n	87a10 <memmove+0xa4>
   87a28:	4603      	mov	r3, r0
   87a2a:	e7f2      	b.n	87a12 <memmove+0xa6>
   87a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87a2e:	4672      	mov	r2, lr
   87a30:	e7ee      	b.n	87a10 <memmove+0xa4>
   87a32:	bf00      	nop

00087a34 <_realloc_r>:
   87a34:	2900      	cmp	r1, #0
   87a36:	f000 8094 	beq.w	87b62 <_realloc_r+0x12e>
   87a3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87a3e:	460c      	mov	r4, r1
   87a40:	4615      	mov	r5, r2
   87a42:	b083      	sub	sp, #12
   87a44:	4680      	mov	r8, r0
   87a46:	f105 060b 	add.w	r6, r5, #11
   87a4a:	f7ff fa23 	bl	86e94 <__malloc_lock>
   87a4e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   87a52:	2e16      	cmp	r6, #22
   87a54:	f02e 0703 	bic.w	r7, lr, #3
   87a58:	f1a4 0908 	sub.w	r9, r4, #8
   87a5c:	d83c      	bhi.n	87ad8 <_realloc_r+0xa4>
   87a5e:	2210      	movs	r2, #16
   87a60:	4616      	mov	r6, r2
   87a62:	42b5      	cmp	r5, r6
   87a64:	d83d      	bhi.n	87ae2 <_realloc_r+0xae>
   87a66:	4297      	cmp	r7, r2
   87a68:	da43      	bge.n	87af2 <_realloc_r+0xbe>
   87a6a:	4bc6      	ldr	r3, [pc, #792]	; (87d84 <_realloc_r+0x350>)
   87a6c:	eb09 0007 	add.w	r0, r9, r7
   87a70:	6899      	ldr	r1, [r3, #8]
   87a72:	4288      	cmp	r0, r1
   87a74:	f000 80c3 	beq.w	87bfe <_realloc_r+0x1ca>
   87a78:	6843      	ldr	r3, [r0, #4]
   87a7a:	f023 0101 	bic.w	r1, r3, #1
   87a7e:	4401      	add	r1, r0
   87a80:	6849      	ldr	r1, [r1, #4]
   87a82:	07c9      	lsls	r1, r1, #31
   87a84:	d54d      	bpl.n	87b22 <_realloc_r+0xee>
   87a86:	f01e 0f01 	tst.w	lr, #1
   87a8a:	f000 809b 	beq.w	87bc4 <_realloc_r+0x190>
   87a8e:	4629      	mov	r1, r5
   87a90:	4640      	mov	r0, r8
   87a92:	f7fe fe8b 	bl	867ac <_malloc_r>
   87a96:	4605      	mov	r5, r0
   87a98:	2800      	cmp	r0, #0
   87a9a:	d03b      	beq.n	87b14 <_realloc_r+0xe0>
   87a9c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87aa0:	f1a0 0208 	sub.w	r2, r0, #8
   87aa4:	f023 0301 	bic.w	r3, r3, #1
   87aa8:	444b      	add	r3, r9
   87aaa:	429a      	cmp	r2, r3
   87aac:	f000 812b 	beq.w	87d06 <_realloc_r+0x2d2>
   87ab0:	1f3a      	subs	r2, r7, #4
   87ab2:	2a24      	cmp	r2, #36	; 0x24
   87ab4:	f200 8118 	bhi.w	87ce8 <_realloc_r+0x2b4>
   87ab8:	2a13      	cmp	r2, #19
   87aba:	f200 80eb 	bhi.w	87c94 <_realloc_r+0x260>
   87abe:	4603      	mov	r3, r0
   87ac0:	4622      	mov	r2, r4
   87ac2:	6811      	ldr	r1, [r2, #0]
   87ac4:	6019      	str	r1, [r3, #0]
   87ac6:	6851      	ldr	r1, [r2, #4]
   87ac8:	6059      	str	r1, [r3, #4]
   87aca:	6892      	ldr	r2, [r2, #8]
   87acc:	609a      	str	r2, [r3, #8]
   87ace:	4621      	mov	r1, r4
   87ad0:	4640      	mov	r0, r8
   87ad2:	f7ff fe65 	bl	877a0 <_free_r>
   87ad6:	e01d      	b.n	87b14 <_realloc_r+0xe0>
   87ad8:	f026 0607 	bic.w	r6, r6, #7
   87adc:	2e00      	cmp	r6, #0
   87ade:	4632      	mov	r2, r6
   87ae0:	dabf      	bge.n	87a62 <_realloc_r+0x2e>
   87ae2:	2500      	movs	r5, #0
   87ae4:	230c      	movs	r3, #12
   87ae6:	4628      	mov	r0, r5
   87ae8:	f8c8 3000 	str.w	r3, [r8]
   87aec:	b003      	add	sp, #12
   87aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87af2:	4625      	mov	r5, r4
   87af4:	1bbb      	subs	r3, r7, r6
   87af6:	2b0f      	cmp	r3, #15
   87af8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   87afc:	d81d      	bhi.n	87b3a <_realloc_r+0x106>
   87afe:	f002 0201 	and.w	r2, r2, #1
   87b02:	433a      	orrs	r2, r7
   87b04:	eb09 0107 	add.w	r1, r9, r7
   87b08:	f8c9 2004 	str.w	r2, [r9, #4]
   87b0c:	684b      	ldr	r3, [r1, #4]
   87b0e:	f043 0301 	orr.w	r3, r3, #1
   87b12:	604b      	str	r3, [r1, #4]
   87b14:	4640      	mov	r0, r8
   87b16:	f7ff f9c3 	bl	86ea0 <__malloc_unlock>
   87b1a:	4628      	mov	r0, r5
   87b1c:	b003      	add	sp, #12
   87b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87b22:	f023 0303 	bic.w	r3, r3, #3
   87b26:	18f9      	adds	r1, r7, r3
   87b28:	4291      	cmp	r1, r2
   87b2a:	db1d      	blt.n	87b68 <_realloc_r+0x134>
   87b2c:	68c3      	ldr	r3, [r0, #12]
   87b2e:	6882      	ldr	r2, [r0, #8]
   87b30:	4625      	mov	r5, r4
   87b32:	60d3      	str	r3, [r2, #12]
   87b34:	460f      	mov	r7, r1
   87b36:	609a      	str	r2, [r3, #8]
   87b38:	e7dc      	b.n	87af4 <_realloc_r+0xc0>
   87b3a:	f002 0201 	and.w	r2, r2, #1
   87b3e:	eb09 0106 	add.w	r1, r9, r6
   87b42:	f043 0301 	orr.w	r3, r3, #1
   87b46:	4332      	orrs	r2, r6
   87b48:	f8c9 2004 	str.w	r2, [r9, #4]
   87b4c:	444f      	add	r7, r9
   87b4e:	604b      	str	r3, [r1, #4]
   87b50:	687b      	ldr	r3, [r7, #4]
   87b52:	3108      	adds	r1, #8
   87b54:	f043 0301 	orr.w	r3, r3, #1
   87b58:	607b      	str	r3, [r7, #4]
   87b5a:	4640      	mov	r0, r8
   87b5c:	f7ff fe20 	bl	877a0 <_free_r>
   87b60:	e7d8      	b.n	87b14 <_realloc_r+0xe0>
   87b62:	4611      	mov	r1, r2
   87b64:	f7fe be22 	b.w	867ac <_malloc_r>
   87b68:	f01e 0f01 	tst.w	lr, #1
   87b6c:	d18f      	bne.n	87a8e <_realloc_r+0x5a>
   87b6e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   87b72:	eba9 0a01 	sub.w	sl, r9, r1
   87b76:	f8da 1004 	ldr.w	r1, [sl, #4]
   87b7a:	f021 0103 	bic.w	r1, r1, #3
   87b7e:	440b      	add	r3, r1
   87b80:	443b      	add	r3, r7
   87b82:	4293      	cmp	r3, r2
   87b84:	db26      	blt.n	87bd4 <_realloc_r+0x1a0>
   87b86:	4655      	mov	r5, sl
   87b88:	68c1      	ldr	r1, [r0, #12]
   87b8a:	6880      	ldr	r0, [r0, #8]
   87b8c:	1f3a      	subs	r2, r7, #4
   87b8e:	60c1      	str	r1, [r0, #12]
   87b90:	6088      	str	r0, [r1, #8]
   87b92:	f855 0f08 	ldr.w	r0, [r5, #8]!
   87b96:	f8da 100c 	ldr.w	r1, [sl, #12]
   87b9a:	2a24      	cmp	r2, #36	; 0x24
   87b9c:	60c1      	str	r1, [r0, #12]
   87b9e:	6088      	str	r0, [r1, #8]
   87ba0:	d826      	bhi.n	87bf0 <_realloc_r+0x1bc>
   87ba2:	2a13      	cmp	r2, #19
   87ba4:	f240 8081 	bls.w	87caa <_realloc_r+0x276>
   87ba8:	6821      	ldr	r1, [r4, #0]
   87baa:	2a1b      	cmp	r2, #27
   87bac:	f8ca 1008 	str.w	r1, [sl, #8]
   87bb0:	6861      	ldr	r1, [r4, #4]
   87bb2:	f8ca 100c 	str.w	r1, [sl, #12]
   87bb6:	f200 80ad 	bhi.w	87d14 <_realloc_r+0x2e0>
   87bba:	f104 0008 	add.w	r0, r4, #8
   87bbe:	f10a 0210 	add.w	r2, sl, #16
   87bc2:	e074      	b.n	87cae <_realloc_r+0x27a>
   87bc4:	f854 3c08 	ldr.w	r3, [r4, #-8]
   87bc8:	eba9 0a03 	sub.w	sl, r9, r3
   87bcc:	f8da 1004 	ldr.w	r1, [sl, #4]
   87bd0:	f021 0103 	bic.w	r1, r1, #3
   87bd4:	187b      	adds	r3, r7, r1
   87bd6:	4293      	cmp	r3, r2
   87bd8:	f6ff af59 	blt.w	87a8e <_realloc_r+0x5a>
   87bdc:	4655      	mov	r5, sl
   87bde:	f8da 100c 	ldr.w	r1, [sl, #12]
   87be2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   87be6:	1f3a      	subs	r2, r7, #4
   87be8:	2a24      	cmp	r2, #36	; 0x24
   87bea:	60c1      	str	r1, [r0, #12]
   87bec:	6088      	str	r0, [r1, #8]
   87bee:	d9d8      	bls.n	87ba2 <_realloc_r+0x16e>
   87bf0:	4621      	mov	r1, r4
   87bf2:	4628      	mov	r0, r5
   87bf4:	461f      	mov	r7, r3
   87bf6:	46d1      	mov	r9, sl
   87bf8:	f7ff feb8 	bl	8796c <memmove>
   87bfc:	e77a      	b.n	87af4 <_realloc_r+0xc0>
   87bfe:	6841      	ldr	r1, [r0, #4]
   87c00:	f106 0010 	add.w	r0, r6, #16
   87c04:	f021 0b03 	bic.w	fp, r1, #3
   87c08:	44bb      	add	fp, r7
   87c0a:	4583      	cmp	fp, r0
   87c0c:	da58      	bge.n	87cc0 <_realloc_r+0x28c>
   87c0e:	f01e 0f01 	tst.w	lr, #1
   87c12:	f47f af3c 	bne.w	87a8e <_realloc_r+0x5a>
   87c16:	f854 1c08 	ldr.w	r1, [r4, #-8]
   87c1a:	eba9 0a01 	sub.w	sl, r9, r1
   87c1e:	f8da 1004 	ldr.w	r1, [sl, #4]
   87c22:	f021 0103 	bic.w	r1, r1, #3
   87c26:	448b      	add	fp, r1
   87c28:	4558      	cmp	r0, fp
   87c2a:	dcd3      	bgt.n	87bd4 <_realloc_r+0x1a0>
   87c2c:	4655      	mov	r5, sl
   87c2e:	f8da 100c 	ldr.w	r1, [sl, #12]
   87c32:	f855 0f08 	ldr.w	r0, [r5, #8]!
   87c36:	1f3a      	subs	r2, r7, #4
   87c38:	2a24      	cmp	r2, #36	; 0x24
   87c3a:	60c1      	str	r1, [r0, #12]
   87c3c:	6088      	str	r0, [r1, #8]
   87c3e:	f200 808d 	bhi.w	87d5c <_realloc_r+0x328>
   87c42:	2a13      	cmp	r2, #19
   87c44:	f240 8087 	bls.w	87d56 <_realloc_r+0x322>
   87c48:	6821      	ldr	r1, [r4, #0]
   87c4a:	2a1b      	cmp	r2, #27
   87c4c:	f8ca 1008 	str.w	r1, [sl, #8]
   87c50:	6861      	ldr	r1, [r4, #4]
   87c52:	f8ca 100c 	str.w	r1, [sl, #12]
   87c56:	f200 8088 	bhi.w	87d6a <_realloc_r+0x336>
   87c5a:	f104 0108 	add.w	r1, r4, #8
   87c5e:	f10a 0210 	add.w	r2, sl, #16
   87c62:	6808      	ldr	r0, [r1, #0]
   87c64:	6010      	str	r0, [r2, #0]
   87c66:	6848      	ldr	r0, [r1, #4]
   87c68:	6050      	str	r0, [r2, #4]
   87c6a:	6889      	ldr	r1, [r1, #8]
   87c6c:	6091      	str	r1, [r2, #8]
   87c6e:	ebab 0206 	sub.w	r2, fp, r6
   87c72:	eb0a 0106 	add.w	r1, sl, r6
   87c76:	f042 0201 	orr.w	r2, r2, #1
   87c7a:	6099      	str	r1, [r3, #8]
   87c7c:	604a      	str	r2, [r1, #4]
   87c7e:	f8da 3004 	ldr.w	r3, [sl, #4]
   87c82:	4640      	mov	r0, r8
   87c84:	f003 0301 	and.w	r3, r3, #1
   87c88:	431e      	orrs	r6, r3
   87c8a:	f8ca 6004 	str.w	r6, [sl, #4]
   87c8e:	f7ff f907 	bl	86ea0 <__malloc_unlock>
   87c92:	e742      	b.n	87b1a <_realloc_r+0xe6>
   87c94:	6823      	ldr	r3, [r4, #0]
   87c96:	2a1b      	cmp	r2, #27
   87c98:	6003      	str	r3, [r0, #0]
   87c9a:	6863      	ldr	r3, [r4, #4]
   87c9c:	6043      	str	r3, [r0, #4]
   87c9e:	d827      	bhi.n	87cf0 <_realloc_r+0x2bc>
   87ca0:	f100 0308 	add.w	r3, r0, #8
   87ca4:	f104 0208 	add.w	r2, r4, #8
   87ca8:	e70b      	b.n	87ac2 <_realloc_r+0x8e>
   87caa:	4620      	mov	r0, r4
   87cac:	462a      	mov	r2, r5
   87cae:	6801      	ldr	r1, [r0, #0]
   87cb0:	461f      	mov	r7, r3
   87cb2:	6011      	str	r1, [r2, #0]
   87cb4:	6841      	ldr	r1, [r0, #4]
   87cb6:	46d1      	mov	r9, sl
   87cb8:	6051      	str	r1, [r2, #4]
   87cba:	6883      	ldr	r3, [r0, #8]
   87cbc:	6093      	str	r3, [r2, #8]
   87cbe:	e719      	b.n	87af4 <_realloc_r+0xc0>
   87cc0:	ebab 0b06 	sub.w	fp, fp, r6
   87cc4:	eb09 0106 	add.w	r1, r9, r6
   87cc8:	f04b 0201 	orr.w	r2, fp, #1
   87ccc:	6099      	str	r1, [r3, #8]
   87cce:	604a      	str	r2, [r1, #4]
   87cd0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   87cd4:	4640      	mov	r0, r8
   87cd6:	f003 0301 	and.w	r3, r3, #1
   87cda:	431e      	orrs	r6, r3
   87cdc:	f844 6c04 	str.w	r6, [r4, #-4]
   87ce0:	f7ff f8de 	bl	86ea0 <__malloc_unlock>
   87ce4:	4625      	mov	r5, r4
   87ce6:	e718      	b.n	87b1a <_realloc_r+0xe6>
   87ce8:	4621      	mov	r1, r4
   87cea:	f7ff fe3f 	bl	8796c <memmove>
   87cee:	e6ee      	b.n	87ace <_realloc_r+0x9a>
   87cf0:	68a3      	ldr	r3, [r4, #8]
   87cf2:	2a24      	cmp	r2, #36	; 0x24
   87cf4:	6083      	str	r3, [r0, #8]
   87cf6:	68e3      	ldr	r3, [r4, #12]
   87cf8:	60c3      	str	r3, [r0, #12]
   87cfa:	d018      	beq.n	87d2e <_realloc_r+0x2fa>
   87cfc:	f100 0310 	add.w	r3, r0, #16
   87d00:	f104 0210 	add.w	r2, r4, #16
   87d04:	e6dd      	b.n	87ac2 <_realloc_r+0x8e>
   87d06:	f850 3c04 	ldr.w	r3, [r0, #-4]
   87d0a:	4625      	mov	r5, r4
   87d0c:	f023 0303 	bic.w	r3, r3, #3
   87d10:	441f      	add	r7, r3
   87d12:	e6ef      	b.n	87af4 <_realloc_r+0xc0>
   87d14:	68a1      	ldr	r1, [r4, #8]
   87d16:	2a24      	cmp	r2, #36	; 0x24
   87d18:	f8ca 1010 	str.w	r1, [sl, #16]
   87d1c:	68e1      	ldr	r1, [r4, #12]
   87d1e:	f8ca 1014 	str.w	r1, [sl, #20]
   87d22:	d00d      	beq.n	87d40 <_realloc_r+0x30c>
   87d24:	f104 0010 	add.w	r0, r4, #16
   87d28:	f10a 0218 	add.w	r2, sl, #24
   87d2c:	e7bf      	b.n	87cae <_realloc_r+0x27a>
   87d2e:	6922      	ldr	r2, [r4, #16]
   87d30:	f100 0318 	add.w	r3, r0, #24
   87d34:	6102      	str	r2, [r0, #16]
   87d36:	6961      	ldr	r1, [r4, #20]
   87d38:	f104 0218 	add.w	r2, r4, #24
   87d3c:	6141      	str	r1, [r0, #20]
   87d3e:	e6c0      	b.n	87ac2 <_realloc_r+0x8e>
   87d40:	6922      	ldr	r2, [r4, #16]
   87d42:	f104 0018 	add.w	r0, r4, #24
   87d46:	f8ca 2018 	str.w	r2, [sl, #24]
   87d4a:	6961      	ldr	r1, [r4, #20]
   87d4c:	f10a 0220 	add.w	r2, sl, #32
   87d50:	f8ca 101c 	str.w	r1, [sl, #28]
   87d54:	e7ab      	b.n	87cae <_realloc_r+0x27a>
   87d56:	4621      	mov	r1, r4
   87d58:	462a      	mov	r2, r5
   87d5a:	e782      	b.n	87c62 <_realloc_r+0x22e>
   87d5c:	4621      	mov	r1, r4
   87d5e:	4628      	mov	r0, r5
   87d60:	9301      	str	r3, [sp, #4]
   87d62:	f7ff fe03 	bl	8796c <memmove>
   87d66:	9b01      	ldr	r3, [sp, #4]
   87d68:	e781      	b.n	87c6e <_realloc_r+0x23a>
   87d6a:	68a1      	ldr	r1, [r4, #8]
   87d6c:	2a24      	cmp	r2, #36	; 0x24
   87d6e:	f8ca 1010 	str.w	r1, [sl, #16]
   87d72:	68e1      	ldr	r1, [r4, #12]
   87d74:	f8ca 1014 	str.w	r1, [sl, #20]
   87d78:	d006      	beq.n	87d88 <_realloc_r+0x354>
   87d7a:	f104 0110 	add.w	r1, r4, #16
   87d7e:	f10a 0218 	add.w	r2, sl, #24
   87d82:	e76e      	b.n	87c62 <_realloc_r+0x22e>
   87d84:	20000bc8 	.word	0x20000bc8
   87d88:	6922      	ldr	r2, [r4, #16]
   87d8a:	f104 0118 	add.w	r1, r4, #24
   87d8e:	f8ca 2018 	str.w	r2, [sl, #24]
   87d92:	6960      	ldr	r0, [r4, #20]
   87d94:	f10a 0220 	add.w	r2, sl, #32
   87d98:	f8ca 001c 	str.w	r0, [sl, #28]
   87d9c:	e761      	b.n	87c62 <_realloc_r+0x22e>
   87d9e:	bf00      	nop

00087da0 <__aeabi_drsub>:
   87da0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   87da4:	e002      	b.n	87dac <__adddf3>
   87da6:	bf00      	nop

00087da8 <__aeabi_dsub>:
   87da8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00087dac <__adddf3>:
   87dac:	b530      	push	{r4, r5, lr}
   87dae:	ea4f 0441 	mov.w	r4, r1, lsl #1
   87db2:	ea4f 0543 	mov.w	r5, r3, lsl #1
   87db6:	ea94 0f05 	teq	r4, r5
   87dba:	bf08      	it	eq
   87dbc:	ea90 0f02 	teqeq	r0, r2
   87dc0:	bf1f      	itttt	ne
   87dc2:	ea54 0c00 	orrsne.w	ip, r4, r0
   87dc6:	ea55 0c02 	orrsne.w	ip, r5, r2
   87dca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   87dce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87dd2:	f000 80e2 	beq.w	87f9a <__adddf3+0x1ee>
   87dd6:	ea4f 5454 	mov.w	r4, r4, lsr #21
   87dda:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   87dde:	bfb8      	it	lt
   87de0:	426d      	neglt	r5, r5
   87de2:	dd0c      	ble.n	87dfe <__adddf3+0x52>
   87de4:	442c      	add	r4, r5
   87de6:	ea80 0202 	eor.w	r2, r0, r2
   87dea:	ea81 0303 	eor.w	r3, r1, r3
   87dee:	ea82 0000 	eor.w	r0, r2, r0
   87df2:	ea83 0101 	eor.w	r1, r3, r1
   87df6:	ea80 0202 	eor.w	r2, r0, r2
   87dfa:	ea81 0303 	eor.w	r3, r1, r3
   87dfe:	2d36      	cmp	r5, #54	; 0x36
   87e00:	bf88      	it	hi
   87e02:	bd30      	pophi	{r4, r5, pc}
   87e04:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   87e08:	ea4f 3101 	mov.w	r1, r1, lsl #12
   87e0c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   87e10:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   87e14:	d002      	beq.n	87e1c <__adddf3+0x70>
   87e16:	4240      	negs	r0, r0
   87e18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87e1c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   87e20:	ea4f 3303 	mov.w	r3, r3, lsl #12
   87e24:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   87e28:	d002      	beq.n	87e30 <__adddf3+0x84>
   87e2a:	4252      	negs	r2, r2
   87e2c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   87e30:	ea94 0f05 	teq	r4, r5
   87e34:	f000 80a7 	beq.w	87f86 <__adddf3+0x1da>
   87e38:	f1a4 0401 	sub.w	r4, r4, #1
   87e3c:	f1d5 0e20 	rsbs	lr, r5, #32
   87e40:	db0d      	blt.n	87e5e <__adddf3+0xb2>
   87e42:	fa02 fc0e 	lsl.w	ip, r2, lr
   87e46:	fa22 f205 	lsr.w	r2, r2, r5
   87e4a:	1880      	adds	r0, r0, r2
   87e4c:	f141 0100 	adc.w	r1, r1, #0
   87e50:	fa03 f20e 	lsl.w	r2, r3, lr
   87e54:	1880      	adds	r0, r0, r2
   87e56:	fa43 f305 	asr.w	r3, r3, r5
   87e5a:	4159      	adcs	r1, r3
   87e5c:	e00e      	b.n	87e7c <__adddf3+0xd0>
   87e5e:	f1a5 0520 	sub.w	r5, r5, #32
   87e62:	f10e 0e20 	add.w	lr, lr, #32
   87e66:	2a01      	cmp	r2, #1
   87e68:	fa03 fc0e 	lsl.w	ip, r3, lr
   87e6c:	bf28      	it	cs
   87e6e:	f04c 0c02 	orrcs.w	ip, ip, #2
   87e72:	fa43 f305 	asr.w	r3, r3, r5
   87e76:	18c0      	adds	r0, r0, r3
   87e78:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   87e7c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87e80:	d507      	bpl.n	87e92 <__adddf3+0xe6>
   87e82:	f04f 0e00 	mov.w	lr, #0
   87e86:	f1dc 0c00 	rsbs	ip, ip, #0
   87e8a:	eb7e 0000 	sbcs.w	r0, lr, r0
   87e8e:	eb6e 0101 	sbc.w	r1, lr, r1
   87e92:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   87e96:	d31b      	bcc.n	87ed0 <__adddf3+0x124>
   87e98:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   87e9c:	d30c      	bcc.n	87eb8 <__adddf3+0x10c>
   87e9e:	0849      	lsrs	r1, r1, #1
   87ea0:	ea5f 0030 	movs.w	r0, r0, rrx
   87ea4:	ea4f 0c3c 	mov.w	ip, ip, rrx
   87ea8:	f104 0401 	add.w	r4, r4, #1
   87eac:	ea4f 5244 	mov.w	r2, r4, lsl #21
   87eb0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   87eb4:	f080 809a 	bcs.w	87fec <__adddf3+0x240>
   87eb8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   87ebc:	bf08      	it	eq
   87ebe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   87ec2:	f150 0000 	adcs.w	r0, r0, #0
   87ec6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87eca:	ea41 0105 	orr.w	r1, r1, r5
   87ece:	bd30      	pop	{r4, r5, pc}
   87ed0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   87ed4:	4140      	adcs	r0, r0
   87ed6:	eb41 0101 	adc.w	r1, r1, r1
   87eda:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87ede:	f1a4 0401 	sub.w	r4, r4, #1
   87ee2:	d1e9      	bne.n	87eb8 <__adddf3+0x10c>
   87ee4:	f091 0f00 	teq	r1, #0
   87ee8:	bf04      	itt	eq
   87eea:	4601      	moveq	r1, r0
   87eec:	2000      	moveq	r0, #0
   87eee:	fab1 f381 	clz	r3, r1
   87ef2:	bf08      	it	eq
   87ef4:	3320      	addeq	r3, #32
   87ef6:	f1a3 030b 	sub.w	r3, r3, #11
   87efa:	f1b3 0220 	subs.w	r2, r3, #32
   87efe:	da0c      	bge.n	87f1a <__adddf3+0x16e>
   87f00:	320c      	adds	r2, #12
   87f02:	dd08      	ble.n	87f16 <__adddf3+0x16a>
   87f04:	f102 0c14 	add.w	ip, r2, #20
   87f08:	f1c2 020c 	rsb	r2, r2, #12
   87f0c:	fa01 f00c 	lsl.w	r0, r1, ip
   87f10:	fa21 f102 	lsr.w	r1, r1, r2
   87f14:	e00c      	b.n	87f30 <__adddf3+0x184>
   87f16:	f102 0214 	add.w	r2, r2, #20
   87f1a:	bfd8      	it	le
   87f1c:	f1c2 0c20 	rsble	ip, r2, #32
   87f20:	fa01 f102 	lsl.w	r1, r1, r2
   87f24:	fa20 fc0c 	lsr.w	ip, r0, ip
   87f28:	bfdc      	itt	le
   87f2a:	ea41 010c 	orrle.w	r1, r1, ip
   87f2e:	4090      	lslle	r0, r2
   87f30:	1ae4      	subs	r4, r4, r3
   87f32:	bfa2      	ittt	ge
   87f34:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   87f38:	4329      	orrge	r1, r5
   87f3a:	bd30      	popge	{r4, r5, pc}
   87f3c:	ea6f 0404 	mvn.w	r4, r4
   87f40:	3c1f      	subs	r4, #31
   87f42:	da1c      	bge.n	87f7e <__adddf3+0x1d2>
   87f44:	340c      	adds	r4, #12
   87f46:	dc0e      	bgt.n	87f66 <__adddf3+0x1ba>
   87f48:	f104 0414 	add.w	r4, r4, #20
   87f4c:	f1c4 0220 	rsb	r2, r4, #32
   87f50:	fa20 f004 	lsr.w	r0, r0, r4
   87f54:	fa01 f302 	lsl.w	r3, r1, r2
   87f58:	ea40 0003 	orr.w	r0, r0, r3
   87f5c:	fa21 f304 	lsr.w	r3, r1, r4
   87f60:	ea45 0103 	orr.w	r1, r5, r3
   87f64:	bd30      	pop	{r4, r5, pc}
   87f66:	f1c4 040c 	rsb	r4, r4, #12
   87f6a:	f1c4 0220 	rsb	r2, r4, #32
   87f6e:	fa20 f002 	lsr.w	r0, r0, r2
   87f72:	fa01 f304 	lsl.w	r3, r1, r4
   87f76:	ea40 0003 	orr.w	r0, r0, r3
   87f7a:	4629      	mov	r1, r5
   87f7c:	bd30      	pop	{r4, r5, pc}
   87f7e:	fa21 f004 	lsr.w	r0, r1, r4
   87f82:	4629      	mov	r1, r5
   87f84:	bd30      	pop	{r4, r5, pc}
   87f86:	f094 0f00 	teq	r4, #0
   87f8a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   87f8e:	bf06      	itte	eq
   87f90:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   87f94:	3401      	addeq	r4, #1
   87f96:	3d01      	subne	r5, #1
   87f98:	e74e      	b.n	87e38 <__adddf3+0x8c>
   87f9a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   87f9e:	bf18      	it	ne
   87fa0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   87fa4:	d029      	beq.n	87ffa <__adddf3+0x24e>
   87fa6:	ea94 0f05 	teq	r4, r5
   87faa:	bf08      	it	eq
   87fac:	ea90 0f02 	teqeq	r0, r2
   87fb0:	d005      	beq.n	87fbe <__adddf3+0x212>
   87fb2:	ea54 0c00 	orrs.w	ip, r4, r0
   87fb6:	bf04      	itt	eq
   87fb8:	4619      	moveq	r1, r3
   87fba:	4610      	moveq	r0, r2
   87fbc:	bd30      	pop	{r4, r5, pc}
   87fbe:	ea91 0f03 	teq	r1, r3
   87fc2:	bf1e      	ittt	ne
   87fc4:	2100      	movne	r1, #0
   87fc6:	2000      	movne	r0, #0
   87fc8:	bd30      	popne	{r4, r5, pc}
   87fca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   87fce:	d105      	bne.n	87fdc <__adddf3+0x230>
   87fd0:	0040      	lsls	r0, r0, #1
   87fd2:	4149      	adcs	r1, r1
   87fd4:	bf28      	it	cs
   87fd6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   87fda:	bd30      	pop	{r4, r5, pc}
   87fdc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   87fe0:	bf3c      	itt	cc
   87fe2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   87fe6:	bd30      	popcc	{r4, r5, pc}
   87fe8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87fec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   87ff0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   87ff4:	f04f 0000 	mov.w	r0, #0
   87ff8:	bd30      	pop	{r4, r5, pc}
   87ffa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   87ffe:	bf1a      	itte	ne
   88000:	4619      	movne	r1, r3
   88002:	4610      	movne	r0, r2
   88004:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   88008:	bf1c      	itt	ne
   8800a:	460b      	movne	r3, r1
   8800c:	4602      	movne	r2, r0
   8800e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   88012:	bf06      	itte	eq
   88014:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   88018:	ea91 0f03 	teqeq	r1, r3
   8801c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   88020:	bd30      	pop	{r4, r5, pc}
   88022:	bf00      	nop

00088024 <__aeabi_ui2d>:
   88024:	f090 0f00 	teq	r0, #0
   88028:	bf04      	itt	eq
   8802a:	2100      	moveq	r1, #0
   8802c:	4770      	bxeq	lr
   8802e:	b530      	push	{r4, r5, lr}
   88030:	f44f 6480 	mov.w	r4, #1024	; 0x400
   88034:	f104 0432 	add.w	r4, r4, #50	; 0x32
   88038:	f04f 0500 	mov.w	r5, #0
   8803c:	f04f 0100 	mov.w	r1, #0
   88040:	e750      	b.n	87ee4 <__adddf3+0x138>
   88042:	bf00      	nop

00088044 <__aeabi_i2d>:
   88044:	f090 0f00 	teq	r0, #0
   88048:	bf04      	itt	eq
   8804a:	2100      	moveq	r1, #0
   8804c:	4770      	bxeq	lr
   8804e:	b530      	push	{r4, r5, lr}
   88050:	f44f 6480 	mov.w	r4, #1024	; 0x400
   88054:	f104 0432 	add.w	r4, r4, #50	; 0x32
   88058:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   8805c:	bf48      	it	mi
   8805e:	4240      	negmi	r0, r0
   88060:	f04f 0100 	mov.w	r1, #0
   88064:	e73e      	b.n	87ee4 <__adddf3+0x138>
   88066:	bf00      	nop

00088068 <__aeabi_f2d>:
   88068:	0042      	lsls	r2, r0, #1
   8806a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8806e:	ea4f 0131 	mov.w	r1, r1, rrx
   88072:	ea4f 7002 	mov.w	r0, r2, lsl #28
   88076:	bf1f      	itttt	ne
   88078:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   8807c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   88080:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   88084:	4770      	bxne	lr
   88086:	f092 0f00 	teq	r2, #0
   8808a:	bf14      	ite	ne
   8808c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   88090:	4770      	bxeq	lr
   88092:	b530      	push	{r4, r5, lr}
   88094:	f44f 7460 	mov.w	r4, #896	; 0x380
   88098:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8809c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   880a0:	e720      	b.n	87ee4 <__adddf3+0x138>
   880a2:	bf00      	nop

000880a4 <__aeabi_ul2d>:
   880a4:	ea50 0201 	orrs.w	r2, r0, r1
   880a8:	bf08      	it	eq
   880aa:	4770      	bxeq	lr
   880ac:	b530      	push	{r4, r5, lr}
   880ae:	f04f 0500 	mov.w	r5, #0
   880b2:	e00a      	b.n	880ca <__aeabi_l2d+0x16>

000880b4 <__aeabi_l2d>:
   880b4:	ea50 0201 	orrs.w	r2, r0, r1
   880b8:	bf08      	it	eq
   880ba:	4770      	bxeq	lr
   880bc:	b530      	push	{r4, r5, lr}
   880be:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   880c2:	d502      	bpl.n	880ca <__aeabi_l2d+0x16>
   880c4:	4240      	negs	r0, r0
   880c6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   880ca:	f44f 6480 	mov.w	r4, #1024	; 0x400
   880ce:	f104 0432 	add.w	r4, r4, #50	; 0x32
   880d2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   880d6:	f43f aedc 	beq.w	87e92 <__adddf3+0xe6>
   880da:	f04f 0203 	mov.w	r2, #3
   880de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   880e2:	bf18      	it	ne
   880e4:	3203      	addne	r2, #3
   880e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   880ea:	bf18      	it	ne
   880ec:	3203      	addne	r2, #3
   880ee:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   880f2:	f1c2 0320 	rsb	r3, r2, #32
   880f6:	fa00 fc03 	lsl.w	ip, r0, r3
   880fa:	fa20 f002 	lsr.w	r0, r0, r2
   880fe:	fa01 fe03 	lsl.w	lr, r1, r3
   88102:	ea40 000e 	orr.w	r0, r0, lr
   88106:	fa21 f102 	lsr.w	r1, r1, r2
   8810a:	4414      	add	r4, r2
   8810c:	e6c1      	b.n	87e92 <__adddf3+0xe6>
   8810e:	bf00      	nop

00088110 <__aeabi_dmul>:
   88110:	b570      	push	{r4, r5, r6, lr}
   88112:	f04f 0cff 	mov.w	ip, #255	; 0xff
   88116:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8811a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8811e:	bf1d      	ittte	ne
   88120:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   88124:	ea94 0f0c 	teqne	r4, ip
   88128:	ea95 0f0c 	teqne	r5, ip
   8812c:	f000 f8de 	bleq	882ec <__aeabi_dmul+0x1dc>
   88130:	442c      	add	r4, r5
   88132:	ea81 0603 	eor.w	r6, r1, r3
   88136:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   8813a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8813e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   88142:	bf18      	it	ne
   88144:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   88148:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8814c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   88150:	d038      	beq.n	881c4 <__aeabi_dmul+0xb4>
   88152:	fba0 ce02 	umull	ip, lr, r0, r2
   88156:	f04f 0500 	mov.w	r5, #0
   8815a:	fbe1 e502 	umlal	lr, r5, r1, r2
   8815e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   88162:	fbe0 e503 	umlal	lr, r5, r0, r3
   88166:	f04f 0600 	mov.w	r6, #0
   8816a:	fbe1 5603 	umlal	r5, r6, r1, r3
   8816e:	f09c 0f00 	teq	ip, #0
   88172:	bf18      	it	ne
   88174:	f04e 0e01 	orrne.w	lr, lr, #1
   88178:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   8817c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   88180:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   88184:	d204      	bcs.n	88190 <__aeabi_dmul+0x80>
   88186:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   8818a:	416d      	adcs	r5, r5
   8818c:	eb46 0606 	adc.w	r6, r6, r6
   88190:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   88194:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   88198:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   8819c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   881a0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   881a4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   881a8:	bf88      	it	hi
   881aa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   881ae:	d81e      	bhi.n	881ee <__aeabi_dmul+0xde>
   881b0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   881b4:	bf08      	it	eq
   881b6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   881ba:	f150 0000 	adcs.w	r0, r0, #0
   881be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   881c2:	bd70      	pop	{r4, r5, r6, pc}
   881c4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   881c8:	ea46 0101 	orr.w	r1, r6, r1
   881cc:	ea40 0002 	orr.w	r0, r0, r2
   881d0:	ea81 0103 	eor.w	r1, r1, r3
   881d4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   881d8:	bfc2      	ittt	gt
   881da:	ebd4 050c 	rsbsgt	r5, r4, ip
   881de:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   881e2:	bd70      	popgt	{r4, r5, r6, pc}
   881e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   881e8:	f04f 0e00 	mov.w	lr, #0
   881ec:	3c01      	subs	r4, #1
   881ee:	f300 80ab 	bgt.w	88348 <__aeabi_dmul+0x238>
   881f2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   881f6:	bfde      	ittt	le
   881f8:	2000      	movle	r0, #0
   881fa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   881fe:	bd70      	pople	{r4, r5, r6, pc}
   88200:	f1c4 0400 	rsb	r4, r4, #0
   88204:	3c20      	subs	r4, #32
   88206:	da35      	bge.n	88274 <__aeabi_dmul+0x164>
   88208:	340c      	adds	r4, #12
   8820a:	dc1b      	bgt.n	88244 <__aeabi_dmul+0x134>
   8820c:	f104 0414 	add.w	r4, r4, #20
   88210:	f1c4 0520 	rsb	r5, r4, #32
   88214:	fa00 f305 	lsl.w	r3, r0, r5
   88218:	fa20 f004 	lsr.w	r0, r0, r4
   8821c:	fa01 f205 	lsl.w	r2, r1, r5
   88220:	ea40 0002 	orr.w	r0, r0, r2
   88224:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   88228:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   8822c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   88230:	fa21 f604 	lsr.w	r6, r1, r4
   88234:	eb42 0106 	adc.w	r1, r2, r6
   88238:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8823c:	bf08      	it	eq
   8823e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   88242:	bd70      	pop	{r4, r5, r6, pc}
   88244:	f1c4 040c 	rsb	r4, r4, #12
   88248:	f1c4 0520 	rsb	r5, r4, #32
   8824c:	fa00 f304 	lsl.w	r3, r0, r4
   88250:	fa20 f005 	lsr.w	r0, r0, r5
   88254:	fa01 f204 	lsl.w	r2, r1, r4
   88258:	ea40 0002 	orr.w	r0, r0, r2
   8825c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   88260:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   88264:	f141 0100 	adc.w	r1, r1, #0
   88268:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8826c:	bf08      	it	eq
   8826e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   88272:	bd70      	pop	{r4, r5, r6, pc}
   88274:	f1c4 0520 	rsb	r5, r4, #32
   88278:	fa00 f205 	lsl.w	r2, r0, r5
   8827c:	ea4e 0e02 	orr.w	lr, lr, r2
   88280:	fa20 f304 	lsr.w	r3, r0, r4
   88284:	fa01 f205 	lsl.w	r2, r1, r5
   88288:	ea43 0302 	orr.w	r3, r3, r2
   8828c:	fa21 f004 	lsr.w	r0, r1, r4
   88290:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   88294:	fa21 f204 	lsr.w	r2, r1, r4
   88298:	ea20 0002 	bic.w	r0, r0, r2
   8829c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   882a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   882a4:	bf08      	it	eq
   882a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   882aa:	bd70      	pop	{r4, r5, r6, pc}
   882ac:	f094 0f00 	teq	r4, #0
   882b0:	d10f      	bne.n	882d2 <__aeabi_dmul+0x1c2>
   882b2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   882b6:	0040      	lsls	r0, r0, #1
   882b8:	eb41 0101 	adc.w	r1, r1, r1
   882bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   882c0:	bf08      	it	eq
   882c2:	3c01      	subeq	r4, #1
   882c4:	d0f7      	beq.n	882b6 <__aeabi_dmul+0x1a6>
   882c6:	ea41 0106 	orr.w	r1, r1, r6
   882ca:	f095 0f00 	teq	r5, #0
   882ce:	bf18      	it	ne
   882d0:	4770      	bxne	lr
   882d2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   882d6:	0052      	lsls	r2, r2, #1
   882d8:	eb43 0303 	adc.w	r3, r3, r3
   882dc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   882e0:	bf08      	it	eq
   882e2:	3d01      	subeq	r5, #1
   882e4:	d0f7      	beq.n	882d6 <__aeabi_dmul+0x1c6>
   882e6:	ea43 0306 	orr.w	r3, r3, r6
   882ea:	4770      	bx	lr
   882ec:	ea94 0f0c 	teq	r4, ip
   882f0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   882f4:	bf18      	it	ne
   882f6:	ea95 0f0c 	teqne	r5, ip
   882fa:	d00c      	beq.n	88316 <__aeabi_dmul+0x206>
   882fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   88300:	bf18      	it	ne
   88302:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   88306:	d1d1      	bne.n	882ac <__aeabi_dmul+0x19c>
   88308:	ea81 0103 	eor.w	r1, r1, r3
   8830c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   88310:	f04f 0000 	mov.w	r0, #0
   88314:	bd70      	pop	{r4, r5, r6, pc}
   88316:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8831a:	bf06      	itte	eq
   8831c:	4610      	moveq	r0, r2
   8831e:	4619      	moveq	r1, r3
   88320:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   88324:	d019      	beq.n	8835a <__aeabi_dmul+0x24a>
   88326:	ea94 0f0c 	teq	r4, ip
   8832a:	d102      	bne.n	88332 <__aeabi_dmul+0x222>
   8832c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   88330:	d113      	bne.n	8835a <__aeabi_dmul+0x24a>
   88332:	ea95 0f0c 	teq	r5, ip
   88336:	d105      	bne.n	88344 <__aeabi_dmul+0x234>
   88338:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   8833c:	bf1c      	itt	ne
   8833e:	4610      	movne	r0, r2
   88340:	4619      	movne	r1, r3
   88342:	d10a      	bne.n	8835a <__aeabi_dmul+0x24a>
   88344:	ea81 0103 	eor.w	r1, r1, r3
   88348:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8834c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   88350:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   88354:	f04f 0000 	mov.w	r0, #0
   88358:	bd70      	pop	{r4, r5, r6, pc}
   8835a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8835e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   88362:	bd70      	pop	{r4, r5, r6, pc}

00088364 <__aeabi_ddiv>:
   88364:	b570      	push	{r4, r5, r6, lr}
   88366:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8836a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8836e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   88372:	bf1d      	ittte	ne
   88374:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   88378:	ea94 0f0c 	teqne	r4, ip
   8837c:	ea95 0f0c 	teqne	r5, ip
   88380:	f000 f8a7 	bleq	884d2 <__aeabi_ddiv+0x16e>
   88384:	eba4 0405 	sub.w	r4, r4, r5
   88388:	ea81 0e03 	eor.w	lr, r1, r3
   8838c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   88390:	ea4f 3101 	mov.w	r1, r1, lsl #12
   88394:	f000 8088 	beq.w	884a8 <__aeabi_ddiv+0x144>
   88398:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8839c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   883a0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   883a4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   883a8:	ea4f 2202 	mov.w	r2, r2, lsl #8
   883ac:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   883b0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   883b4:	ea4f 2600 	mov.w	r6, r0, lsl #8
   883b8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   883bc:	429d      	cmp	r5, r3
   883be:	bf08      	it	eq
   883c0:	4296      	cmpeq	r6, r2
   883c2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   883c6:	f504 7440 	add.w	r4, r4, #768	; 0x300
   883ca:	d202      	bcs.n	883d2 <__aeabi_ddiv+0x6e>
   883cc:	085b      	lsrs	r3, r3, #1
   883ce:	ea4f 0232 	mov.w	r2, r2, rrx
   883d2:	1ab6      	subs	r6, r6, r2
   883d4:	eb65 0503 	sbc.w	r5, r5, r3
   883d8:	085b      	lsrs	r3, r3, #1
   883da:	ea4f 0232 	mov.w	r2, r2, rrx
   883de:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   883e2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   883e6:	ebb6 0e02 	subs.w	lr, r6, r2
   883ea:	eb75 0e03 	sbcs.w	lr, r5, r3
   883ee:	bf22      	ittt	cs
   883f0:	1ab6      	subcs	r6, r6, r2
   883f2:	4675      	movcs	r5, lr
   883f4:	ea40 000c 	orrcs.w	r0, r0, ip
   883f8:	085b      	lsrs	r3, r3, #1
   883fa:	ea4f 0232 	mov.w	r2, r2, rrx
   883fe:	ebb6 0e02 	subs.w	lr, r6, r2
   88402:	eb75 0e03 	sbcs.w	lr, r5, r3
   88406:	bf22      	ittt	cs
   88408:	1ab6      	subcs	r6, r6, r2
   8840a:	4675      	movcs	r5, lr
   8840c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   88410:	085b      	lsrs	r3, r3, #1
   88412:	ea4f 0232 	mov.w	r2, r2, rrx
   88416:	ebb6 0e02 	subs.w	lr, r6, r2
   8841a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8841e:	bf22      	ittt	cs
   88420:	1ab6      	subcs	r6, r6, r2
   88422:	4675      	movcs	r5, lr
   88424:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   88428:	085b      	lsrs	r3, r3, #1
   8842a:	ea4f 0232 	mov.w	r2, r2, rrx
   8842e:	ebb6 0e02 	subs.w	lr, r6, r2
   88432:	eb75 0e03 	sbcs.w	lr, r5, r3
   88436:	bf22      	ittt	cs
   88438:	1ab6      	subcs	r6, r6, r2
   8843a:	4675      	movcs	r5, lr
   8843c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   88440:	ea55 0e06 	orrs.w	lr, r5, r6
   88444:	d018      	beq.n	88478 <__aeabi_ddiv+0x114>
   88446:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8844a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8844e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   88452:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   88456:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8845a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8845e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   88462:	d1c0      	bne.n	883e6 <__aeabi_ddiv+0x82>
   88464:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   88468:	d10b      	bne.n	88482 <__aeabi_ddiv+0x11e>
   8846a:	ea41 0100 	orr.w	r1, r1, r0
   8846e:	f04f 0000 	mov.w	r0, #0
   88472:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   88476:	e7b6      	b.n	883e6 <__aeabi_ddiv+0x82>
   88478:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8847c:	bf04      	itt	eq
   8847e:	4301      	orreq	r1, r0
   88480:	2000      	moveq	r0, #0
   88482:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   88486:	bf88      	it	hi
   88488:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8848c:	f63f aeaf 	bhi.w	881ee <__aeabi_dmul+0xde>
   88490:	ebb5 0c03 	subs.w	ip, r5, r3
   88494:	bf04      	itt	eq
   88496:	ebb6 0c02 	subseq.w	ip, r6, r2
   8849a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8849e:	f150 0000 	adcs.w	r0, r0, #0
   884a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   884a6:	bd70      	pop	{r4, r5, r6, pc}
   884a8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   884ac:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   884b0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   884b4:	bfc2      	ittt	gt
   884b6:	ebd4 050c 	rsbsgt	r5, r4, ip
   884ba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   884be:	bd70      	popgt	{r4, r5, r6, pc}
   884c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   884c4:	f04f 0e00 	mov.w	lr, #0
   884c8:	3c01      	subs	r4, #1
   884ca:	e690      	b.n	881ee <__aeabi_dmul+0xde>
   884cc:	ea45 0e06 	orr.w	lr, r5, r6
   884d0:	e68d      	b.n	881ee <__aeabi_dmul+0xde>
   884d2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   884d6:	ea94 0f0c 	teq	r4, ip
   884da:	bf08      	it	eq
   884dc:	ea95 0f0c 	teqeq	r5, ip
   884e0:	f43f af3b 	beq.w	8835a <__aeabi_dmul+0x24a>
   884e4:	ea94 0f0c 	teq	r4, ip
   884e8:	d10a      	bne.n	88500 <__aeabi_ddiv+0x19c>
   884ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   884ee:	f47f af34 	bne.w	8835a <__aeabi_dmul+0x24a>
   884f2:	ea95 0f0c 	teq	r5, ip
   884f6:	f47f af25 	bne.w	88344 <__aeabi_dmul+0x234>
   884fa:	4610      	mov	r0, r2
   884fc:	4619      	mov	r1, r3
   884fe:	e72c      	b.n	8835a <__aeabi_dmul+0x24a>
   88500:	ea95 0f0c 	teq	r5, ip
   88504:	d106      	bne.n	88514 <__aeabi_ddiv+0x1b0>
   88506:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8850a:	f43f aefd 	beq.w	88308 <__aeabi_dmul+0x1f8>
   8850e:	4610      	mov	r0, r2
   88510:	4619      	mov	r1, r3
   88512:	e722      	b.n	8835a <__aeabi_dmul+0x24a>
   88514:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   88518:	bf18      	it	ne
   8851a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8851e:	f47f aec5 	bne.w	882ac <__aeabi_dmul+0x19c>
   88522:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   88526:	f47f af0d 	bne.w	88344 <__aeabi_dmul+0x234>
   8852a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8852e:	f47f aeeb 	bne.w	88308 <__aeabi_dmul+0x1f8>
   88532:	e712      	b.n	8835a <__aeabi_dmul+0x24a>

00088534 <__gedf2>:
   88534:	f04f 3cff 	mov.w	ip, #4294967295
   88538:	e006      	b.n	88548 <__cmpdf2+0x4>
   8853a:	bf00      	nop

0008853c <__ledf2>:
   8853c:	f04f 0c01 	mov.w	ip, #1
   88540:	e002      	b.n	88548 <__cmpdf2+0x4>
   88542:	bf00      	nop

00088544 <__cmpdf2>:
   88544:	f04f 0c01 	mov.w	ip, #1
   88548:	f84d cd04 	str.w	ip, [sp, #-4]!
   8854c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   88550:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   88554:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   88558:	bf18      	it	ne
   8855a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8855e:	d01b      	beq.n	88598 <__cmpdf2+0x54>
   88560:	b001      	add	sp, #4
   88562:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   88566:	bf0c      	ite	eq
   88568:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8856c:	ea91 0f03 	teqne	r1, r3
   88570:	bf02      	ittt	eq
   88572:	ea90 0f02 	teqeq	r0, r2
   88576:	2000      	moveq	r0, #0
   88578:	4770      	bxeq	lr
   8857a:	f110 0f00 	cmn.w	r0, #0
   8857e:	ea91 0f03 	teq	r1, r3
   88582:	bf58      	it	pl
   88584:	4299      	cmppl	r1, r3
   88586:	bf08      	it	eq
   88588:	4290      	cmpeq	r0, r2
   8858a:	bf2c      	ite	cs
   8858c:	17d8      	asrcs	r0, r3, #31
   8858e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   88592:	f040 0001 	orr.w	r0, r0, #1
   88596:	4770      	bx	lr
   88598:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8859c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   885a0:	d102      	bne.n	885a8 <__cmpdf2+0x64>
   885a2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   885a6:	d107      	bne.n	885b8 <__cmpdf2+0x74>
   885a8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   885ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   885b0:	d1d6      	bne.n	88560 <__cmpdf2+0x1c>
   885b2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   885b6:	d0d3      	beq.n	88560 <__cmpdf2+0x1c>
   885b8:	f85d 0b04 	ldr.w	r0, [sp], #4
   885bc:	4770      	bx	lr
   885be:	bf00      	nop

000885c0 <__aeabi_cdrcmple>:
   885c0:	4684      	mov	ip, r0
   885c2:	4610      	mov	r0, r2
   885c4:	4662      	mov	r2, ip
   885c6:	468c      	mov	ip, r1
   885c8:	4619      	mov	r1, r3
   885ca:	4663      	mov	r3, ip
   885cc:	e000      	b.n	885d0 <__aeabi_cdcmpeq>
   885ce:	bf00      	nop

000885d0 <__aeabi_cdcmpeq>:
   885d0:	b501      	push	{r0, lr}
   885d2:	f7ff ffb7 	bl	88544 <__cmpdf2>
   885d6:	2800      	cmp	r0, #0
   885d8:	bf48      	it	mi
   885da:	f110 0f00 	cmnmi.w	r0, #0
   885de:	bd01      	pop	{r0, pc}

000885e0 <__aeabi_dcmpeq>:
   885e0:	f84d ed08 	str.w	lr, [sp, #-8]!
   885e4:	f7ff fff4 	bl	885d0 <__aeabi_cdcmpeq>
   885e8:	bf0c      	ite	eq
   885ea:	2001      	moveq	r0, #1
   885ec:	2000      	movne	r0, #0
   885ee:	f85d fb08 	ldr.w	pc, [sp], #8
   885f2:	bf00      	nop

000885f4 <__aeabi_dcmplt>:
   885f4:	f84d ed08 	str.w	lr, [sp, #-8]!
   885f8:	f7ff ffea 	bl	885d0 <__aeabi_cdcmpeq>
   885fc:	bf34      	ite	cc
   885fe:	2001      	movcc	r0, #1
   88600:	2000      	movcs	r0, #0
   88602:	f85d fb08 	ldr.w	pc, [sp], #8
   88606:	bf00      	nop

00088608 <__aeabi_dcmple>:
   88608:	f84d ed08 	str.w	lr, [sp, #-8]!
   8860c:	f7ff ffe0 	bl	885d0 <__aeabi_cdcmpeq>
   88610:	bf94      	ite	ls
   88612:	2001      	movls	r0, #1
   88614:	2000      	movhi	r0, #0
   88616:	f85d fb08 	ldr.w	pc, [sp], #8
   8861a:	bf00      	nop

0008861c <__aeabi_dcmpge>:
   8861c:	f84d ed08 	str.w	lr, [sp, #-8]!
   88620:	f7ff ffce 	bl	885c0 <__aeabi_cdrcmple>
   88624:	bf94      	ite	ls
   88626:	2001      	movls	r0, #1
   88628:	2000      	movhi	r0, #0
   8862a:	f85d fb08 	ldr.w	pc, [sp], #8
   8862e:	bf00      	nop

00088630 <__aeabi_dcmpgt>:
   88630:	f84d ed08 	str.w	lr, [sp, #-8]!
   88634:	f7ff ffc4 	bl	885c0 <__aeabi_cdrcmple>
   88638:	bf34      	ite	cc
   8863a:	2001      	movcc	r0, #1
   8863c:	2000      	movcs	r0, #0
   8863e:	f85d fb08 	ldr.w	pc, [sp], #8
   88642:	bf00      	nop

00088644 <__aeabi_dcmpun>:
   88644:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   88648:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8864c:	d102      	bne.n	88654 <__aeabi_dcmpun+0x10>
   8864e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   88652:	d10a      	bne.n	8866a <__aeabi_dcmpun+0x26>
   88654:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   88658:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8865c:	d102      	bne.n	88664 <__aeabi_dcmpun+0x20>
   8865e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   88662:	d102      	bne.n	8866a <__aeabi_dcmpun+0x26>
   88664:	f04f 0000 	mov.w	r0, #0
   88668:	4770      	bx	lr
   8866a:	f04f 0001 	mov.w	r0, #1
   8866e:	4770      	bx	lr

00088670 <__aeabi_d2iz>:
   88670:	ea4f 0241 	mov.w	r2, r1, lsl #1
   88674:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   88678:	d215      	bcs.n	886a6 <__aeabi_d2iz+0x36>
   8867a:	d511      	bpl.n	886a0 <__aeabi_d2iz+0x30>
   8867c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   88680:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   88684:	d912      	bls.n	886ac <__aeabi_d2iz+0x3c>
   88686:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8868a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8868e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   88692:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   88696:	fa23 f002 	lsr.w	r0, r3, r2
   8869a:	bf18      	it	ne
   8869c:	4240      	negne	r0, r0
   8869e:	4770      	bx	lr
   886a0:	f04f 0000 	mov.w	r0, #0
   886a4:	4770      	bx	lr
   886a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   886aa:	d105      	bne.n	886b8 <__aeabi_d2iz+0x48>
   886ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   886b0:	bf08      	it	eq
   886b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   886b6:	4770      	bx	lr
   886b8:	f04f 0000 	mov.w	r0, #0
   886bc:	4770      	bx	lr
   886be:	bf00      	nop

000886c0 <__aeabi_uldivmod>:
   886c0:	b953      	cbnz	r3, 886d8 <__aeabi_uldivmod+0x18>
   886c2:	b94a      	cbnz	r2, 886d8 <__aeabi_uldivmod+0x18>
   886c4:	2900      	cmp	r1, #0
   886c6:	bf08      	it	eq
   886c8:	2800      	cmpeq	r0, #0
   886ca:	bf1c      	itt	ne
   886cc:	f04f 31ff 	movne.w	r1, #4294967295
   886d0:	f04f 30ff 	movne.w	r0, #4294967295
   886d4:	f000 b97a 	b.w	889cc <__aeabi_idiv0>
   886d8:	f1ad 0c08 	sub.w	ip, sp, #8
   886dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   886e0:	f000 f806 	bl	886f0 <__udivmoddi4>
   886e4:	f8dd e004 	ldr.w	lr, [sp, #4]
   886e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   886ec:	b004      	add	sp, #16
   886ee:	4770      	bx	lr

000886f0 <__udivmoddi4>:
   886f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   886f4:	468c      	mov	ip, r1
   886f6:	460e      	mov	r6, r1
   886f8:	4604      	mov	r4, r0
   886fa:	9d08      	ldr	r5, [sp, #32]
   886fc:	2b00      	cmp	r3, #0
   886fe:	d150      	bne.n	887a2 <__udivmoddi4+0xb2>
   88700:	428a      	cmp	r2, r1
   88702:	4617      	mov	r7, r2
   88704:	d96c      	bls.n	887e0 <__udivmoddi4+0xf0>
   88706:	fab2 fe82 	clz	lr, r2
   8870a:	f1be 0f00 	cmp.w	lr, #0
   8870e:	d00b      	beq.n	88728 <__udivmoddi4+0x38>
   88710:	f1ce 0c20 	rsb	ip, lr, #32
   88714:	fa01 f60e 	lsl.w	r6, r1, lr
   88718:	fa20 fc0c 	lsr.w	ip, r0, ip
   8871c:	fa02 f70e 	lsl.w	r7, r2, lr
   88720:	ea4c 0c06 	orr.w	ip, ip, r6
   88724:	fa00 f40e 	lsl.w	r4, r0, lr
   88728:	0c3a      	lsrs	r2, r7, #16
   8872a:	fbbc f9f2 	udiv	r9, ip, r2
   8872e:	b2bb      	uxth	r3, r7
   88730:	fb02 cc19 	mls	ip, r2, r9, ip
   88734:	fb09 fa03 	mul.w	sl, r9, r3
   88738:	ea4f 4814 	mov.w	r8, r4, lsr #16
   8873c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   88740:	45b2      	cmp	sl, r6
   88742:	d90a      	bls.n	8875a <__udivmoddi4+0x6a>
   88744:	19f6      	adds	r6, r6, r7
   88746:	f109 31ff 	add.w	r1, r9, #4294967295
   8874a:	f080 8125 	bcs.w	88998 <__udivmoddi4+0x2a8>
   8874e:	45b2      	cmp	sl, r6
   88750:	f240 8122 	bls.w	88998 <__udivmoddi4+0x2a8>
   88754:	f1a9 0902 	sub.w	r9, r9, #2
   88758:	443e      	add	r6, r7
   8875a:	eba6 060a 	sub.w	r6, r6, sl
   8875e:	fbb6 f0f2 	udiv	r0, r6, r2
   88762:	fb02 6610 	mls	r6, r2, r0, r6
   88766:	fb00 f303 	mul.w	r3, r0, r3
   8876a:	b2a4      	uxth	r4, r4
   8876c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   88770:	42a3      	cmp	r3, r4
   88772:	d909      	bls.n	88788 <__udivmoddi4+0x98>
   88774:	19e4      	adds	r4, r4, r7
   88776:	f100 32ff 	add.w	r2, r0, #4294967295
   8877a:	f080 810b 	bcs.w	88994 <__udivmoddi4+0x2a4>
   8877e:	42a3      	cmp	r3, r4
   88780:	f240 8108 	bls.w	88994 <__udivmoddi4+0x2a4>
   88784:	3802      	subs	r0, #2
   88786:	443c      	add	r4, r7
   88788:	2100      	movs	r1, #0
   8878a:	1ae4      	subs	r4, r4, r3
   8878c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   88790:	2d00      	cmp	r5, #0
   88792:	d062      	beq.n	8885a <__udivmoddi4+0x16a>
   88794:	2300      	movs	r3, #0
   88796:	fa24 f40e 	lsr.w	r4, r4, lr
   8879a:	602c      	str	r4, [r5, #0]
   8879c:	606b      	str	r3, [r5, #4]
   8879e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   887a2:	428b      	cmp	r3, r1
   887a4:	d907      	bls.n	887b6 <__udivmoddi4+0xc6>
   887a6:	2d00      	cmp	r5, #0
   887a8:	d055      	beq.n	88856 <__udivmoddi4+0x166>
   887aa:	2100      	movs	r1, #0
   887ac:	e885 0041 	stmia.w	r5, {r0, r6}
   887b0:	4608      	mov	r0, r1
   887b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   887b6:	fab3 f183 	clz	r1, r3
   887ba:	2900      	cmp	r1, #0
   887bc:	f040 808f 	bne.w	888de <__udivmoddi4+0x1ee>
   887c0:	42b3      	cmp	r3, r6
   887c2:	d302      	bcc.n	887ca <__udivmoddi4+0xda>
   887c4:	4282      	cmp	r2, r0
   887c6:	f200 80fc 	bhi.w	889c2 <__udivmoddi4+0x2d2>
   887ca:	1a84      	subs	r4, r0, r2
   887cc:	eb66 0603 	sbc.w	r6, r6, r3
   887d0:	2001      	movs	r0, #1
   887d2:	46b4      	mov	ip, r6
   887d4:	2d00      	cmp	r5, #0
   887d6:	d040      	beq.n	8885a <__udivmoddi4+0x16a>
   887d8:	e885 1010 	stmia.w	r5, {r4, ip}
   887dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   887e0:	b912      	cbnz	r2, 887e8 <__udivmoddi4+0xf8>
   887e2:	2701      	movs	r7, #1
   887e4:	fbb7 f7f2 	udiv	r7, r7, r2
   887e8:	fab7 fe87 	clz	lr, r7
   887ec:	f1be 0f00 	cmp.w	lr, #0
   887f0:	d135      	bne.n	8885e <__udivmoddi4+0x16e>
   887f2:	2101      	movs	r1, #1
   887f4:	1bf6      	subs	r6, r6, r7
   887f6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   887fa:	fa1f f887 	uxth.w	r8, r7
   887fe:	fbb6 f2fc 	udiv	r2, r6, ip
   88802:	fb0c 6612 	mls	r6, ip, r2, r6
   88806:	fb08 f002 	mul.w	r0, r8, r2
   8880a:	0c23      	lsrs	r3, r4, #16
   8880c:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   88810:	42b0      	cmp	r0, r6
   88812:	d907      	bls.n	88824 <__udivmoddi4+0x134>
   88814:	19f6      	adds	r6, r6, r7
   88816:	f102 33ff 	add.w	r3, r2, #4294967295
   8881a:	d202      	bcs.n	88822 <__udivmoddi4+0x132>
   8881c:	42b0      	cmp	r0, r6
   8881e:	f200 80d2 	bhi.w	889c6 <__udivmoddi4+0x2d6>
   88822:	461a      	mov	r2, r3
   88824:	1a36      	subs	r6, r6, r0
   88826:	fbb6 f0fc 	udiv	r0, r6, ip
   8882a:	fb0c 6610 	mls	r6, ip, r0, r6
   8882e:	fb08 f800 	mul.w	r8, r8, r0
   88832:	b2a3      	uxth	r3, r4
   88834:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   88838:	45a0      	cmp	r8, r4
   8883a:	d907      	bls.n	8884c <__udivmoddi4+0x15c>
   8883c:	19e4      	adds	r4, r4, r7
   8883e:	f100 33ff 	add.w	r3, r0, #4294967295
   88842:	d202      	bcs.n	8884a <__udivmoddi4+0x15a>
   88844:	45a0      	cmp	r8, r4
   88846:	f200 80b9 	bhi.w	889bc <__udivmoddi4+0x2cc>
   8884a:	4618      	mov	r0, r3
   8884c:	eba4 0408 	sub.w	r4, r4, r8
   88850:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   88854:	e79c      	b.n	88790 <__udivmoddi4+0xa0>
   88856:	4629      	mov	r1, r5
   88858:	4628      	mov	r0, r5
   8885a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8885e:	fa07 f70e 	lsl.w	r7, r7, lr
   88862:	f1ce 0320 	rsb	r3, lr, #32
   88866:	fa26 f203 	lsr.w	r2, r6, r3
   8886a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8886e:	fbb2 f1fc 	udiv	r1, r2, ip
   88872:	fa1f f887 	uxth.w	r8, r7
   88876:	fb0c 2211 	mls	r2, ip, r1, r2
   8887a:	fa06 f60e 	lsl.w	r6, r6, lr
   8887e:	fa20 f303 	lsr.w	r3, r0, r3
   88882:	fb01 f908 	mul.w	r9, r1, r8
   88886:	4333      	orrs	r3, r6
   88888:	0c1e      	lsrs	r6, r3, #16
   8888a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8888e:	45b1      	cmp	r9, r6
   88890:	fa00 f40e 	lsl.w	r4, r0, lr
   88894:	d909      	bls.n	888aa <__udivmoddi4+0x1ba>
   88896:	19f6      	adds	r6, r6, r7
   88898:	f101 32ff 	add.w	r2, r1, #4294967295
   8889c:	f080 808c 	bcs.w	889b8 <__udivmoddi4+0x2c8>
   888a0:	45b1      	cmp	r9, r6
   888a2:	f240 8089 	bls.w	889b8 <__udivmoddi4+0x2c8>
   888a6:	3902      	subs	r1, #2
   888a8:	443e      	add	r6, r7
   888aa:	eba6 0609 	sub.w	r6, r6, r9
   888ae:	fbb6 f0fc 	udiv	r0, r6, ip
   888b2:	fb0c 6210 	mls	r2, ip, r0, r6
   888b6:	fb00 f908 	mul.w	r9, r0, r8
   888ba:	b29e      	uxth	r6, r3
   888bc:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   888c0:	45b1      	cmp	r9, r6
   888c2:	d907      	bls.n	888d4 <__udivmoddi4+0x1e4>
   888c4:	19f6      	adds	r6, r6, r7
   888c6:	f100 33ff 	add.w	r3, r0, #4294967295
   888ca:	d271      	bcs.n	889b0 <__udivmoddi4+0x2c0>
   888cc:	45b1      	cmp	r9, r6
   888ce:	d96f      	bls.n	889b0 <__udivmoddi4+0x2c0>
   888d0:	3802      	subs	r0, #2
   888d2:	443e      	add	r6, r7
   888d4:	eba6 0609 	sub.w	r6, r6, r9
   888d8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   888dc:	e78f      	b.n	887fe <__udivmoddi4+0x10e>
   888de:	f1c1 0720 	rsb	r7, r1, #32
   888e2:	fa22 f807 	lsr.w	r8, r2, r7
   888e6:	408b      	lsls	r3, r1
   888e8:	ea48 0303 	orr.w	r3, r8, r3
   888ec:	fa26 f407 	lsr.w	r4, r6, r7
   888f0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   888f4:	fbb4 f9fe 	udiv	r9, r4, lr
   888f8:	fa1f fc83 	uxth.w	ip, r3
   888fc:	fb0e 4419 	mls	r4, lr, r9, r4
   88900:	408e      	lsls	r6, r1
   88902:	fa20 f807 	lsr.w	r8, r0, r7
   88906:	fb09 fa0c 	mul.w	sl, r9, ip
   8890a:	ea48 0806 	orr.w	r8, r8, r6
   8890e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   88912:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   88916:	45a2      	cmp	sl, r4
   88918:	fa02 f201 	lsl.w	r2, r2, r1
   8891c:	fa00 f601 	lsl.w	r6, r0, r1
   88920:	d908      	bls.n	88934 <__udivmoddi4+0x244>
   88922:	18e4      	adds	r4, r4, r3
   88924:	f109 30ff 	add.w	r0, r9, #4294967295
   88928:	d244      	bcs.n	889b4 <__udivmoddi4+0x2c4>
   8892a:	45a2      	cmp	sl, r4
   8892c:	d942      	bls.n	889b4 <__udivmoddi4+0x2c4>
   8892e:	f1a9 0902 	sub.w	r9, r9, #2
   88932:	441c      	add	r4, r3
   88934:	eba4 040a 	sub.w	r4, r4, sl
   88938:	fbb4 f0fe 	udiv	r0, r4, lr
   8893c:	fb0e 4410 	mls	r4, lr, r0, r4
   88940:	fb00 fc0c 	mul.w	ip, r0, ip
   88944:	fa1f f888 	uxth.w	r8, r8
   88948:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   8894c:	45a4      	cmp	ip, r4
   8894e:	d907      	bls.n	88960 <__udivmoddi4+0x270>
   88950:	18e4      	adds	r4, r4, r3
   88952:	f100 3eff 	add.w	lr, r0, #4294967295
   88956:	d229      	bcs.n	889ac <__udivmoddi4+0x2bc>
   88958:	45a4      	cmp	ip, r4
   8895a:	d927      	bls.n	889ac <__udivmoddi4+0x2bc>
   8895c:	3802      	subs	r0, #2
   8895e:	441c      	add	r4, r3
   88960:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   88964:	fba0 8902 	umull	r8, r9, r0, r2
   88968:	eba4 0c0c 	sub.w	ip, r4, ip
   8896c:	45cc      	cmp	ip, r9
   8896e:	46c2      	mov	sl, r8
   88970:	46ce      	mov	lr, r9
   88972:	d315      	bcc.n	889a0 <__udivmoddi4+0x2b0>
   88974:	d012      	beq.n	8899c <__udivmoddi4+0x2ac>
   88976:	b155      	cbz	r5, 8898e <__udivmoddi4+0x29e>
   88978:	ebb6 030a 	subs.w	r3, r6, sl
   8897c:	eb6c 060e 	sbc.w	r6, ip, lr
   88980:	fa06 f707 	lsl.w	r7, r6, r7
   88984:	40cb      	lsrs	r3, r1
   88986:	431f      	orrs	r7, r3
   88988:	40ce      	lsrs	r6, r1
   8898a:	602f      	str	r7, [r5, #0]
   8898c:	606e      	str	r6, [r5, #4]
   8898e:	2100      	movs	r1, #0
   88990:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88994:	4610      	mov	r0, r2
   88996:	e6f7      	b.n	88788 <__udivmoddi4+0x98>
   88998:	4689      	mov	r9, r1
   8899a:	e6de      	b.n	8875a <__udivmoddi4+0x6a>
   8899c:	4546      	cmp	r6, r8
   8899e:	d2ea      	bcs.n	88976 <__udivmoddi4+0x286>
   889a0:	ebb8 0a02 	subs.w	sl, r8, r2
   889a4:	eb69 0e03 	sbc.w	lr, r9, r3
   889a8:	3801      	subs	r0, #1
   889aa:	e7e4      	b.n	88976 <__udivmoddi4+0x286>
   889ac:	4670      	mov	r0, lr
   889ae:	e7d7      	b.n	88960 <__udivmoddi4+0x270>
   889b0:	4618      	mov	r0, r3
   889b2:	e78f      	b.n	888d4 <__udivmoddi4+0x1e4>
   889b4:	4681      	mov	r9, r0
   889b6:	e7bd      	b.n	88934 <__udivmoddi4+0x244>
   889b8:	4611      	mov	r1, r2
   889ba:	e776      	b.n	888aa <__udivmoddi4+0x1ba>
   889bc:	3802      	subs	r0, #2
   889be:	443c      	add	r4, r7
   889c0:	e744      	b.n	8884c <__udivmoddi4+0x15c>
   889c2:	4608      	mov	r0, r1
   889c4:	e706      	b.n	887d4 <__udivmoddi4+0xe4>
   889c6:	3a02      	subs	r2, #2
   889c8:	443e      	add	r6, r7
   889ca:	e72b      	b.n	88824 <__udivmoddi4+0x134>

000889cc <__aeabi_idiv0>:
   889cc:	4770      	bx	lr
   889ce:	bf00      	nop
   889d0:	090a0a0d 	.word	0x090a0a0d
   889d4:	5f5f5f2a 	.word	0x5f5f5f2a
   889d8:	5f5f5f5f 	.word	0x5f5f5f5f
   889dc:	5f5f5f5f 	.word	0x5f5f5f5f
   889e0:	205f5f5f 	.word	0x205f5f5f
   889e4:	2e555043 	.word	0x2e555043
   889e8:	2d584341 	.word	0x2d584341
   889ec:	41535441 	.word	0x41535441
   889f0:	3455334d 	.word	0x3455334d
   889f4:	412d4143 	.word	0x412d4143
   889f8:	5f5f2055 	.word	0x5f5f2055
   889fc:	5f5f5f5f 	.word	0x5f5f5f5f
   88a00:	5f5f5f5f 	.word	0x5f5f5f5f
   88a04:	5f5f5f5f 	.word	0x5f5f5f5f
   88a08:	0a0a0d2a 	.word	0x0a0a0d2a
   88a0c:	00000000 	.word	0x00000000
   88a10:	2e555043 	.word	0x2e555043
   88a14:	20584341 	.word	0x20584341
   88a18:	53544120 	.word	0x53544120
   88a1c:	55334d41 	.word	0x55334d41
   88a20:	00004334 	.word	0x00004334
   88a24:	2e777777 	.word	0x2e777777
   88a28:	2d322d61 	.word	0x2d322d61
   88a2c:	656e2e73 	.word	0x656e2e73
   88a30:	00000074 	.word	0x00000074
   88a34:	554e454d 	.word	0x554e454d
   88a38:	57454e5f 	.word	0x57454e5f
   88a3c:	0000000d 	.word	0x0000000d
   88a40:	6974704f 	.word	0x6974704f
   88a44:	70206e6f 	.word	0x70206e6f
   88a48:	6574726f 	.word	0x6574726f
   88a4c:	00000073 	.word	0x00000073
   88a50:	6974704f 	.word	0x6974704f
   88a54:	73206e6f 	.word	0x73206e6f
   88a58:	00007361 	.word	0x00007361
   88a5c:	6d726546 	.word	0x6d726546
   88a60:	70207265 	.word	0x70207265
   88a64:	6574726f 	.word	0x6574726f
   88a68:	00312073 	.word	0x00312073
   88a6c:	6d726546 	.word	0x6d726546
   88a70:	70207265 	.word	0x70207265
   88a74:	6574726f 	.word	0x6574726f
   88a78:	00322073 	.word	0x00322073
   88a7c:	554e454d 	.word	0x554e454d
   88a80:	57454e20 	.word	0x57454e20
   88a84:	4e494620 	.word	0x4e494620
   88a88:	45485349 	.word	0x45485349
   88a8c:	0a0d2044 	.word	0x0a0d2044
   88a90:	00000000 	.word	0x00000000
   88a94:	20202020 	.word	0x20202020
   88a98:	20202020 	.word	0x20202020
   88a9c:	20202020 	.word	0x20202020
   88aa0:	20202020 	.word	0x20202020
   88aa4:	00202020 	.word	0x00202020
   88aa8:	0a0d6425 	.word	0x0a0d6425
   88aac:	00000000 	.word	0x00000000
   88ab0:	65646e49 	.word	0x65646e49
   88ab4:	25203a78 	.word	0x25203a78
   88ab8:	000a0d64 	.word	0x000a0d64
   88abc:	0d207325 	.word	0x0d207325
   88ac0:	0000000a 	.word	0x0000000a
   88ac4:	6d726546 	.word	0x6d726546
   88ac8:	72757465 	.word	0x72757465
   88acc:	41532065 	.word	0x41532065
   88ad0:	00000053 	.word	0x00000053
   88ad4:	6d726546 	.word	0x6d726546
   88ad8:	72757465 	.word	0x72757465
   88adc:	6f502065 	.word	0x6f502065
   88ae0:	20657472 	.word	0x20657472
   88ae4:	00000031 	.word	0x00000031
   88ae8:	6d726546 	.word	0x6d726546
   88aec:	72757465 	.word	0x72757465
   88af0:	6f502065 	.word	0x6f502065
   88af4:	20657472 	.word	0x20657472
   88af8:	00000032 	.word	0x00000032
   88afc:	00000001 	.word	0x00000001
   88b00:	00000002 	.word	0x00000002
   88b04:	00000004 	.word	0x00000004
   88b08:	00000008 	.word	0x00000008
   88b0c:	00000010 	.word	0x00000010
   88b10:	00000020 	.word	0x00000020
   88b14:	00000040 	.word	0x00000040
   88b18:	00000080 	.word	0x00000080
   88b1c:	00000100 	.word	0x00000100
   88b20:	00000200 	.word	0x00000200
   88b24:	00000400 	.word	0x00000400
   88b28:	000186a0 	.word	0x000186a0
   88b2c:	000186a0 	.word	0x000186a0
   88b30:	00b71b00 	.word	0x00b71b00
   88b34:	65540a0d 	.word	0x65540a0d
   88b38:	73207473 	.word	0x73207473
   88b3c:	74726174 	.word	0x74726174
   88b40:	2e2e6465 	.word	0x2e2e6465
   88b44:	000a0d2e 	.word	0x000a0d2e
   88b48:	48500a0d 	.word	0x48500a0d
   88b4c:	2d64253a 	.word	0x2d64253a
   88b50:	0d64252d 	.word	0x0d64252d
   88b54:	0000000a 	.word	0x0000000a
   88b58:	454e4550 	.word	0x454e4550
   88b5c:	56554f20 	.word	0x56554f20
   88b60:	00545245 	.word	0x00545245
   88b64:	00203a09 	.word	0x00203a09
   88b68:	00004e4f 	.word	0x00004e4f
   88b6c:	0046464f 	.word	0x0046464f
   88b70:	454e4550 	.word	0x454e4550
   88b74:	52454620 	.word	0x52454620
   88b78:	0000454d 	.word	0x0000454d
   88b7c:	00534c49 	.word	0x00534c49
   88b80:	203a0909 	.word	0x203a0909
   88b84:	00000000 	.word	0x00000000
   88b88:	00005653 	.word	0x00005653
   88b8c:	41444152 	.word	0x41444152
   88b90:	00000052 	.word	0x00000052
   88b94:	00555644 	.word	0x00555644
   88b98:	4d455250 	.word	0x4d455250
   88b9c:	45524549 	.word	0x45524549
   88ba0:	544e4520 	.word	0x544e4520
   88ba4:	00454552 	.word	0x00454552
   88ba8:	20555644 	.word	0x20555644
   88bac:	454e4547 	.word	0x454e4547
   88bb0:	004c4152 	.word	0x004c4152
   88bb4:	52544e45 	.word	0x52544e45
   88bb8:	4c204545 	.word	0x4c204545
   88bbc:	45524249 	.word	0x45524249
   88bc0:	00000000 	.word	0x00000000
   88bc4:	52544e45 	.word	0x52544e45
   88bc8:	4f204545 	.word	0x4f204545
   88bcc:	4f495450 	.word	0x4f495450
   88bd0:	0000004e 	.word	0x0000004e
   88bd4:	65540a0d 	.word	0x65540a0d
   88bd8:	74207473 	.word	0x74207473
   88bdc:	696d7265 	.word	0x696d7265
   88be0:	6574616e 	.word	0x6574616e
   88be4:	2e2e2e64 	.word	0x2e2e2e64
   88be8:	00000a0d 	.word	0x00000a0d

00088bec <commands>:
   88bec:	0000624f 000815f9 0000ae76 00081555     Ob......v...U...
	...
   88c04:	624e0a0d 74736554 6425203a 00000a0d     ..NbTest: %d....
   88c14:	75420a0d 72657a7a 206e6f20 20726f66     ..Buzzer on for 
   88c24:	00000000 6d206425 2e2e2e73 00000a0d     ....%d ms.......
   88c34:	75420a0d 72657a7a 66666f20 0d2e2e2e     ..Buzzer off....
   88c44:	0000000a 000a0d20 25207325 73252064     .... ...%s %d %s
   88c54:	64342520 00000000                        %4d....

00088c5c <nbDaysInMonth>:
   88c5c:	1e1f1c1f 1f1f1e1f 1f1e1f1e 756e614a     ............Janu
   88c6c:	00797261 72626546 79726175 00000000     ary.February....
   88c7c:	6372614d 00000068 69727041 0000006c     March...April...
   88c8c:	0079614d 656e754a 00000000 796c754a     May.June....July
   88c9c:	00000000 75677541 00007473 74706553     ....August..Sept
   88cac:	65626d65 00000072 6f74634f 00726562     ember...October.
   88cbc:	65766f4e 7265626d 00000000 65636544     November....Dece
   88ccc:	7265626d 00000000 646e7553 00007961     mber....Sunday..
   88cdc:	646e6f4d 00007961 73657554 00796164     Monday..Tuesday.
   88cec:	6e646557 61647365 00000079 72756854     Wednesday...Thur
   88cfc:	79616473 00000000 64697246 00007961     sday....Friday..
   88d0c:	75746153 79616472 00000000              Saturday....

00088d18 <line2addr>:
   88d18:	54144000 3230250d 30253a64 253a6432     .@.T.%02d:%02d:%
   88d28:	00643230 64323025 3230253a 30253a64     02d.%02d:%02d:%0
   88d38:	00006432 64323025 3230252f 30252f64     2d..%02d/%02d/%0
   88d48:	00006434 003e0a0d 00445b1b 00435b1b     4d....>..[D..[C.
   88d58:	3e2f0a0d 00000000 6b6e7509 6e776f6e     ../>.....unknown
   88d68:	646d6320 3025203a 0a0d5834 00000000      cmd: %04X......
   88d78:	2a090a0d 2a2a2a2a 73616320 535f2065     ...***** case _S
   88d88:	4c4c4548 48424b5f 203a5449 20444142     HELL_KBHIT: BAD 
   88d98:	65736163 2a2a2021 2a2a2a2a 00000a0d     case! ******....
   88da8:	20200a0d 43534520 5145535f 0000203a     ..   ESC_SEQ: ..
   88db8:	30253c20 0d3e5834 0000000a 4b325b1b      <%04X>......[2K
   88dc8:	0000000d 3b315b1b 00004335              .....[1;5C..

00088dd4 <heartBeatRhythm>:
   88dd4:	00000028 000000fe 00000028 00000548     (.......(...H...
   88de4:	00000000                                ....

00088de8 <hexDigits>:
   88de8:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   88df8:	00000000                                ....

00088dfc <separators>:
   88dfc:	3a3b2e20 0d095c2f 0000000a 4a325b1b      .;:/\.......[2J
   88e0c:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   88e1c:	3d3d3d3d 43203d3d 20504948 4e454449     ====== CHIP IDEN
   88e2c:	49464954 49205245 534f464e 3d3d3d20     TIFIER INFOS ===
   88e3c:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88e4c:	52455609 4e4f4953 6325203a 00000a0d     .VERSION: %c....
   88e5c:	45202009 434f5250 0000203a 564e2009     .  EPROC: ... NV
   88e6c:	5a495350 0000203a 50564e09 325a4953     PSIZ: ...NVPSIZ2
   88e7c:	0000203a 41525309 5a49534d 0000203a     : ...SRAMSIZ: ..
   88e8c:	20202009 48435241 0000203a 2d2d2d20     .   ARCH: .. ---
   88e9c:	00000020 564e2009 50595450 0000203a      .... NVPTYP: ..
   88eac:	20202009 44495845 3025203a 0a0d5838     .   EXID: %08X..
   88ebc:	00000000 3d090a0d 3d3d3d3d 3d3d3d3d     .......=========
   88ecc:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88edc:	3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d     ================
   88eec:	3d3d3d3d 3d3d3d3d 3d3d3d3d 000a0a0d     ============....
   88efc:	7379530d 206d6574 6c6c6977 73657220     .System will res
   88f0c:	74726174 206e6920 73206925 6e6f6365     tart in %i secon
   88f1c:	2e2e2e64 00000000 2f2e3a20 00000a0d     d....... :./....
   88f2c:	4b325b1b 00000000 646d6320 61747320     .[2K.... cmd sta
   88f3c:	3a207472 00000020                       rt : ...

00088f44 <arch>:
   88f44:	00000019 00089210 0008921c 00000029     ............)...
   88f54:	00089230 00089240 00000034 00089254     0...@...4...T...
   88f64:	0008925c 00000037 0008926c 00089274     \...7...l...t...
   88f74:	00000039 00089280 00089288 0000003b     9...........;...
   88f84:	00089294 0008929c 00000040 000892ac     ........@.......
   88f94:	000892b4 00000042 000892c4 000892cc     ....B...........
   88fa4:	00000055 000892dc 000892e4 00000060     U...........`...
   88fb4:	000892f4 00089300 00000061 00089314     ........a.......
   88fc4:	00089324 00000063 00089338 00089340     $...c...8...@...
   88fd4:	00000070 00089350 0008935c 00000071     p...P...\...q...
   88fe4:	00089370 00089380 00000072 00089394     p.......r.......
   88ff4:	000893a4 00000073 000893b8 000893c4     ....s...........
   89004:	00000075 000893d8 000893e4 00000076     u...........v...
   89014:	000893f8 00089408 00000080 0008941c     ................
   89024:	00089424 00000081 00089448 00089450     $.......H...P...
   89034:	00000083 00089474 00089484 00000084     ....t...........
   89044:	000894b0 000894c0 00000085 000894ec     ................
   89054:	000894fc 00000086 00089528 00089538     ........(...8...
   89064:	00000088 00089568 00089578 00000089     ....h...x.......
   89074:	000895a0 000895b0 0000008a 000895d8     ................
   89084:	000895e8 00000092 00089614 0008961c     ................
   89094:	00000093 0008962c 00089634 00000094     ....,...4.......
   890a4:	00089654 0008965c 00000095 0008967c     T...\.......|...
   890b4:	00089684 00000099 000896a8 000896b4     ................
   890c4:	0000009a 000896d8 000896e4 000000a5     ................
   890d4:	00089708 00089708 000000f0 00089710     ................
   890e4:	00089718 00000000 00089728 00000000     ........(.......

000890f4 <cmdEntries>:
   890f4:	0000624f 0008302d 00006cab 0008305d     Ob..-0...l..]0..
   89104:	00003bed 00083049 0000aaf6 00082fad     .;..I0......./..
   89114:	0000b326 00082fed 0000902b 00083259     &..../..+...Y2..
   89124:	0000b344 00083259 0000ebe8 0008328d     D...Y2.......2..
   89134:	000010e1 00083175 00000000 00000000     ....u1..........
   89144:	204d4f52 202d2d2d 004d4f52 4c4d4f52     ROM --- ROM.ROML
   89154:	20535345 202d2d2d 6c4d4f52 20737365     ESS --- ROMless 
   89164:	6f20726f 68632d6e 46207069 6873616c     or on-chip Flash
   89174:	00000000 53414c46 2d2d2048 6d45202d     ....FLASH --- Em
   89184:	64646562 46206465 6873616c 6d654d20     bedded Flash Mem
   89194:	0079726f 5f4d4f52 53414c46 2d2d2048     ory.ROM_FLASH --
   891a4:	4f52202d 6e61204d 6d452064 64646562     - ROM and Embedd
   891b4:	46206465 6873616c 6d654d20 2079726f     ed Flash Memory 
   891c4:	50564e5b 205a4953 52207369 73204d4f     [NVPSIZ is ROM s
   891d4:	20657a69 564e202f 5a495350 73692032     ize / NVPSIZ2 is
   891e4:	616c4620 73206873 5d657a69 00000000      Flash size]....
   891f4:	4d415253 2d2d2d20 41525320 6d65204d     SRAM --- SRAM em
   89204:	74616c75 20676e69 004d4f52 31395441     ulating ROM.AT91
   89214:	394d4153 00007878 31395441 394d4153     SAM9xx..AT91SAM9
   89224:	53207878 65697265 00000073 31395441     xx Series...AT91
   89234:	394d4153 78784558 00000000 31395441     SAM9XExx....AT91
   89244:	394d4153 78784558 72655320 00736569     SAM9XExx Series.
   89254:	31395441 00343378 31395441 20343378     AT91x34.AT91x34 
   89264:	69726553 00007365 37504143 00000000     Series..CAP7....
   89274:	37504143 72655320 00736569 39504143     CAP7 Series.CAP9
   89284:	00000000 39504143 72655320 00736569     ....CAP9 Series.
   89294:	31504143 00000031 31504143 65532031     CAP11...CAP11 Se
   892a4:	73656972 00000000 31395441 00303478     ries....AT91x40.
   892b4:	31395441 20303478 69726553 00007365     AT91x40 Series..
   892c4:	31395441 00323478 31395441 20323478     AT91x42.AT91x42 
   892d4:	69726553 00007365 31395441 00353578     Series..AT91x55.
   892e4:	31395441 20353578 69726553 00007365     AT91x55 Series..
   892f4:	31395441 374d4153 00787841 31395441     AT91SAM7Axx.AT91
   89304:	374d4153 20787841 69726553 00007365     SAM7Axx Series..
   89314:	31395441 374d4153 78785141 00000000     AT91SAM7AQxx....
   89324:	31395441 374d4153 78785141 72655320     AT91SAM7AQxx Ser
   89334:	00736569 31395441 00333678 31395441     ies.AT91x63.AT91
   89344:	20333678 69726553 00007365 31395441     x63 Series..AT91
   89354:	374d4153 00787853 31395441 374d4153     SAM7Sxx.AT91SAM7
   89364:	20787853 69726553 00007365 31395441     Sxx Series..AT91
   89374:	374d4153 78784358 00000000 31395441     SAM7XCxx....AT91
   89384:	374d4153 78784358 72655320 00736569     SAM7XCxx Series.
   89394:	31395441 374d4153 78784553 00000000     AT91SAM7SExx....
   893a4:	31395441 374d4153 78784553 72655320     AT91SAM7SExx Ser
   893b4:	00736569 31395441 374d4153 0078784c     ies.AT91SAM7Lxx.
   893c4:	31395441 374d4153 2078784c 69726553     AT91SAM7Lxx Seri
   893d4:	00007365 31395441 374d4153 00787858     es..AT91SAM7Xxx.
   893e4:	31395441 374d4153 20787858 69726553     AT91SAM7Xxx Seri
   893f4:	00007365 31395441 374d4153 78784c53     es..AT91SAM7SLxx
   89404:	00000000 31395441 374d4153 78784c53     ....AT91SAM7SLxx
   89414:	72655320 00736569 334d4153 00437855      Series.SAM3UxC.
   89424:	334d4153 20437855 69726553 28207365     SAM3UxC Series (
   89434:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   89444:	00000000 334d4153 00457855 334d4153     ....SAM3UxE.SAM3
   89454:	20457855 69726553 28207365 2d343431     UxE Series (144-
   89464:	206e6970 73726576 296e6f69 00000000     pin version)....
   89474:	334d4153 2f437841 334d4153 00437841     SAM3AxC/SAM3AxC.
   89484:	334d4153 2f437841 344d4153 20437841     SAM3AxC/SAM4AxC 
   89494:	69726553 28207365 2d303031 206e6970     Series (100-pin 
   894a4:	73726576 296e6f69 00000000 334d4153     version)....SAM3
   894b4:	2f437858 344d4153 00437858 334d4153     XxC/SAM4XxC.SAM3
   894c4:	2f437858 344d4153 20437858 69726553     XxC/SAM4XxC Seri
   894d4:	28207365 2d303031 206e6970 73726576     es (100-pin vers
   894e4:	296e6f69 00000000 334d4153 2f457858     ion)....SAM3XxE/
   894f4:	344d4153 00457858 334d4153 2f457858     SAM4XxE.SAM3XxE/
   89504:	344d4153 20457858 69726553 28207365     SAM4XxE Series (
   89514:	2d343431 206e6970 73726576 296e6f69     144-pin version)
   89524:	00000000 334d4153 2f477858 344d4153     ....SAM3XxG/SAM4
   89534:	00477858 334d4153 2f477858 344d4153     XxG.SAM3XxG/SAM4
   89544:	20477858 69726553 28207365 2f383032     XxG Series (208/
   89554:	2d373132 206e6970 73726576 296e6f69     217-pin version)
   89564:	00000000 334d4153 2f417853 344d4153     ....SAM3SxA/SAM4
   89574:	00417853 334d4153 2f417853 344d4153     SxA.SAM3SxA/SAM4
   89584:	20417853 69726553 28207365 702d3834     SxA Series (48-p
   89594:	76206e69 69737265 00296e6f 334d4153     in version).SAM3
   895a4:	2f427853 344d4153 00427853 334d4153     SxB/SAM4SxB.SAM3
   895b4:	2f427853 344d4153 20427853 69726553     SxB/SAM4SxB Seri
   895c4:	28207365 702d3436 76206e69 69737265     es (64-pin versi
   895d4:	00296e6f 334d4153 2f437853 344d4153     on).SAM3SxC/SAM4
   895e4:	00437853 334d4153 2f437853 344d4153     SxC.SAM3SxC/SAM4
   895f4:	20437853 69726553 28207365 2d303031     SxC Series (100-
   89604:	206e6970 73726576 296e6f69 00000000     pin version)....
   89614:	31395441 00323978 31395441 20323978     AT91x92.AT91x92 
   89624:	69726553 00007365 334d4153 0041784e     Series..SAM3NxA.
   89634:	334d4153 2041784e 69726553 28207365     SAM3NxA Series (
   89644:	702d3834 76206e69 69737265 00296e6f     48-pin version).
   89654:	334d4153 0042784e 334d4153 2042784e     SAM3NxB.SAM3NxB 
   89664:	69726553 28207365 702d3436 76206e69     Series (64-pin v
   89674:	69737265 00296e6f 334d4153 0043784e     ersion).SAM3NxC.
   89684:	334d4153 2043784e 69726553 28207365     SAM3NxC Series (
   89694:	2d303031 206e6970 73726576 296e6f69     100-pin version)
   896a4:	00000000 334d4153 42784453 00000000     ....SAM3SDxB....
   896b4:	334d4153 42784453 72655320 20736569     SAM3SDxB Series 
   896c4:	2d343628 206e6970 73726576 296e6f69     (64-pin version)
   896d4:	00000000 334d4153 43784453 00000000     ....SAM3SDxC....
   896e4:	334d4153 43784453 72655320 20736569     SAM3SDxC Series 
   896f4:	30303128 6e69702d 72657620 6e6f6973     (100-pin version
   89704:	00000029 354d4153 00000041 35375441     )...SAM5A...AT75
   89714:	00787843 35375441 20787843 69726553     Cxx.AT75Cxx Seri
   89724:	00007365 41204f4e 21484352 00000000     es..NO ARCH!....
   89734:	204b3834 65747962 00000073 62204b31     48K bytes...1K b
   89744:	73657479 00000000 62204b32 73657479     ytes....2K bytes
   89754:	00000000 62204b36 73657479 00000000     ....6K bytes....
   89764:	204b3432 65747962 00000073 62204b34     24K bytes...4K b
   89774:	73657479 00000000 204b3038 65747962     ytes....80K byte
   89784:	00000073 4b303631 74796220 00007365     s...160K bytes..
   89794:	62204b38 73657479 00000000 204b3631     8K bytes....16K 
   897a4:	65747962 00000073 204b3233 65747962     bytes...32K byte
   897b4:	00000073 204b3436 65747962 00000073     s...64K bytes...
   897c4:	4b383231 74796220 00007365 4b363532     128K bytes..256K
   897d4:	74796220 00007365 204b3639 65747962      bytes..96K byte
   897e4:	00000073 4b323135 74796220 00007365     s...512K bytes..
   897f4:	454e4f4e 00000000 34323031 7962204b     NONE....1024K by
   89804:	00736574 38343032 7962204b 00736574     tes.2048K bytes.
   89814:	45444e55 454e4946 00002144 394d5241     UNDEFINED!..ARM9
   89824:	00533634 374d5241 494d4454 00000000     46S.ARM7TDMI....
   89834:	74726f43 4d2d7865 00000033 394d5241     Cortex-M3...ARM9
   89844:	00543032 394d5241 4a453632 00000053     20T.ARM926EJS...
   89854:	74726f43 412d7865 00000035 74726f43     Cortex-A5...Cort
   89864:	4d2d7865 00000034                       ex-M4...

0008986c <uart_opt>:
   8986c:	05b8d800 0001c200 00000800              ............

00089878 <_global_impure_ptr>:
   89878:	20000630 00464e49 00666e69 004e414e     0.. INF.inf.NAN.
   89888:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   89898:	46454443 00000000 33323130 37363534     CDEF....01234567
   898a8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   898b8:	0000296c 00000030                       l)..0...

000898c0 <blanks.7223>:
   898c0:	20202020 20202020 20202020 20202020                     

000898d0 <zeroes.7224>:
   898d0:	30303030 30303030 30303030 30303030     0000000000000000
   898e0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   898f0:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00089900 <__mprec_bigtens>:
   89900:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   89910:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   89920:	7f73bf3c 75154fdd                       <.s..O.u

00089928 <__mprec_tens>:
   89928:	00000000 3ff00000 00000000 40240000     .......?......$@
   89938:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   89948:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   89958:	00000000 412e8480 00000000 416312d0     .......A......cA
   89968:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   89978:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   89988:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   89998:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   899a8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   899b8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   899c8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   899d8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   899e8:	79d99db4 44ea7843                       ...yCx.D

000899f0 <p05.6055>:
   899f0:	00000005 00000019 0000007d              ........}...

000899fc <_ctype_>:
   899fc:	20202000 20202020 28282020 20282828     .         ((((( 
   89a0c:	20202020 20202020 20202020 20202020                     
   89a1c:	10108820 10101010 10101010 10101010      ...............
   89a2c:	04040410 04040404 10040404 10101010     ................
   89a3c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   89a4c:	01010101 01010101 01010101 10101010     ................
   89a5c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   89a6c:	02020202 02020202 02020202 10101010     ................
   89a7c:	00000020 00000000 00000000 00000000      ...............
	...

00089b00 <_init>:
   89b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89b02:	bf00      	nop
   89b04:	bcf8      	pop	{r3, r4, r5, r6, r7}
   89b06:	bc08      	pop	{r3}
   89b08:	469e      	mov	lr, r3
   89b0a:	4770      	bx	lr

00089b0c <__init_array_start>:
   89b0c:	000857c1 	.word	0x000857c1

00089b10 <__frame_dummy_init_array_entry>:
   89b10:	000800e1                                ....

00089b14 <_fini>:
   89b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89b16:	bf00      	nop
   89b18:	bcf8      	pop	{r3, r4, r5, r6, r7}
   89b1a:	bc08      	pop	{r3}
   89b1c:	469e      	mov	lr, r3
   89b1e:	4770      	bx	lr

00089b20 <__fini_array_start>:
   89b20:	000800bd 	.word	0x000800bd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemInit>:
2000000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20000010:	4a21      	ldr	r2, [pc, #132]	; (20000098 <SystemInit+0x8c>)
20000012:	6013      	str	r3, [r2, #0]
20000014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20000018:	6013      	str	r3, [r2, #0]
2000001a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
2000001e:	f503 2360 	add.w	r3, r3, #917504	; 0xe0000
20000022:	6a1b      	ldr	r3, [r3, #32]
20000024:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000028:	d107      	bne.n	2000003a <SystemInit+0x2e>
2000002a:	4a1c      	ldr	r2, [pc, #112]	; (2000009c <SystemInit+0x90>)
2000002c:	4b1c      	ldr	r3, [pc, #112]	; (200000a0 <SystemInit+0x94>)
2000002e:	621a      	str	r2, [r3, #32]
20000030:	461a      	mov	r2, r3
20000032:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000034:	f013 0f01 	tst.w	r3, #1
20000038:	d0fb      	beq.n	20000032 <SystemInit+0x26>
2000003a:	4a1a      	ldr	r2, [pc, #104]	; (200000a4 <SystemInit+0x98>)
2000003c:	4b18      	ldr	r3, [pc, #96]	; (200000a0 <SystemInit+0x94>)
2000003e:	621a      	str	r2, [r3, #32]
20000040:	461a      	mov	r2, r3
20000042:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000044:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000048:	d0fb      	beq.n	20000042 <SystemInit+0x36>
2000004a:	4a15      	ldr	r2, [pc, #84]	; (200000a0 <SystemInit+0x94>)
2000004c:	6b13      	ldr	r3, [r2, #48]	; 0x30
2000004e:	f023 0303 	bic.w	r3, r3, #3
20000052:	f043 0301 	orr.w	r3, r3, #1
20000056:	6313      	str	r3, [r2, #48]	; 0x30
20000058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000005a:	f013 0f08 	tst.w	r3, #8
2000005e:	d0fb      	beq.n	20000058 <SystemInit+0x4c>
20000060:	4a11      	ldr	r2, [pc, #68]	; (200000a8 <SystemInit+0x9c>)
20000062:	4b0f      	ldr	r3, [pc, #60]	; (200000a0 <SystemInit+0x94>)
20000064:	629a      	str	r2, [r3, #40]	; 0x28
20000066:	461a      	mov	r2, r3
20000068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000006a:	f013 0f02 	tst.w	r3, #2
2000006e:	d0fb      	beq.n	20000068 <SystemInit+0x5c>
20000070:	2211      	movs	r2, #17
20000072:	4b0b      	ldr	r3, [pc, #44]	; (200000a0 <SystemInit+0x94>)
20000074:	631a      	str	r2, [r3, #48]	; 0x30
20000076:	461a      	mov	r2, r3
20000078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000007a:	f013 0f08 	tst.w	r3, #8
2000007e:	d0fb      	beq.n	20000078 <SystemInit+0x6c>
20000080:	2212      	movs	r2, #18
20000082:	4b07      	ldr	r3, [pc, #28]	; (200000a0 <SystemInit+0x94>)
20000084:	631a      	str	r2, [r3, #48]	; 0x30
20000086:	461a      	mov	r2, r3
20000088:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000008a:	f013 0f08 	tst.w	r3, #8
2000008e:	d0fb      	beq.n	20000088 <SystemInit+0x7c>
20000090:	4a06      	ldr	r2, [pc, #24]	; (200000ac <SystemInit+0xa0>)
20000092:	4b07      	ldr	r3, [pc, #28]	; (200000b0 <SystemInit+0xa4>)
20000094:	601a      	str	r2, [r3, #0]
20000096:	4770      	bx	lr
20000098:	400e0800 	.word	0x400e0800
2000009c:	00370809 	.word	0x00370809
200000a0:	400e0400 	.word	0x400e0400
200000a4:	01370809 	.word	0x01370809
200000a8:	200f3f01 	.word	0x200f3f01
200000ac:	05b8d800 	.word	0x05b8d800
200000b0:	20000128 	.word	0x20000128

200000b4 <system_init_flash>:
200000b4:	4b16      	ldr	r3, [pc, #88]	; (20000110 <system_init_flash+0x5c>)
200000b6:	4298      	cmp	r0, r3
200000b8:	d912      	bls.n	200000e0 <system_init_flash+0x2c>
200000ba:	4b16      	ldr	r3, [pc, #88]	; (20000114 <system_init_flash+0x60>)
200000bc:	4298      	cmp	r0, r3
200000be:	d916      	bls.n	200000ee <system_init_flash+0x3a>
200000c0:	4b15      	ldr	r3, [pc, #84]	; (20000118 <system_init_flash+0x64>)
200000c2:	4298      	cmp	r0, r3
200000c4:	d91b      	bls.n	200000fe <system_init_flash+0x4a>
200000c6:	4b15      	ldr	r3, [pc, #84]	; (2000011c <system_init_flash+0x68>)
200000c8:	4298      	cmp	r0, r3
200000ca:	bf94      	ite	ls
200000cc:	f44f 7340 	movls.w	r3, #768	; 0x300
200000d0:	f44f 6380 	movhi.w	r3, #1024	; 0x400
200000d4:	4a12      	ldr	r2, [pc, #72]	; (20000120 <system_init_flash+0x6c>)
200000d6:	6013      	str	r3, [r2, #0]
200000d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000dc:	6013      	str	r3, [r2, #0]
200000de:	4770      	bx	lr
200000e0:	2300      	movs	r3, #0
200000e2:	4a0f      	ldr	r2, [pc, #60]	; (20000120 <system_init_flash+0x6c>)
200000e4:	6013      	str	r3, [r2, #0]
200000e6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000ea:	6013      	str	r3, [r2, #0]
200000ec:	4770      	bx	lr
200000ee:	f44f 7380 	mov.w	r3, #256	; 0x100
200000f2:	4a0b      	ldr	r2, [pc, #44]	; (20000120 <system_init_flash+0x6c>)
200000f4:	6013      	str	r3, [r2, #0]
200000f6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200000fa:	6013      	str	r3, [r2, #0]
200000fc:	4770      	bx	lr
200000fe:	f44f 7300 	mov.w	r3, #512	; 0x200
20000102:	4a07      	ldr	r2, [pc, #28]	; (20000120 <system_init_flash+0x6c>)
20000104:	6013      	str	r3, [r2, #0]
20000106:	f502 7200 	add.w	r2, r2, #512	; 0x200
2000010a:	6013      	str	r3, [r2, #0]
2000010c:	4770      	bx	lr
2000010e:	bf00      	nop
20000110:	016e35ff 	.word	0x016e35ff
20000114:	026259ff 	.word	0x026259ff
20000118:	044aa1ff 	.word	0x044aa1ff
2000011c:	0501bcff 	.word	0x0501bcff
20000120:	400e0800 	.word	0x400e0800

20000124 <g_interrupt_enabled>:
20000124:	00000001                                ....

20000128 <SystemCoreClock>:
20000128:	003d0900                                ..=.

2000012c <wCRCTable>:
2000012c:	00000000 0000c0c1 0000c181 00000140     ............@...
2000013c:	0000c301 000003c0 00000280 0000c241     ............A...
2000014c:	0000c601 000006c0 00000780 0000c741     ............A...
2000015c:	00000500 0000c5c1 0000c481 00000440     ............@...
2000016c:	0000cc01 00000cc0 00000d80 0000cd41     ............A...
2000017c:	00000f00 0000cfc1 0000ce81 00000e40     ............@...
2000018c:	00000a00 0000cac1 0000cb81 00000b40     ............@...
2000019c:	0000c901 000009c0 00000880 0000c841     ............A...
200001ac:	0000d801 000018c0 00001980 0000d941     ............A...
200001bc:	00001b00 0000dbc1 0000da81 00001a40     ............@...
200001cc:	00001e00 0000dec1 0000df81 00001f40     ............@...
200001dc:	0000dd01 00001dc0 00001c80 0000dc41     ............A...
200001ec:	00001400 0000d4c1 0000d581 00001540     ............@...
200001fc:	0000d701 000017c0 00001680 0000d641     ............A...
2000020c:	0000d201 000012c0 00001380 0000d341     ............A...
2000021c:	00001100 0000d1c1 0000d081 00001040     ............@...
2000022c:	0000f001 000030c0 00003180 0000f141     .....0...1..A...
2000023c:	00003300 0000f3c1 0000f281 00003240     .3..........@2..
2000024c:	00003600 0000f6c1 0000f781 00003740     .6..........@7..
2000025c:	0000f501 000035c0 00003480 0000f441     .....5...4..A...
2000026c:	00003c00 0000fcc1 0000fd81 00003d40     .<..........@=..
2000027c:	0000ff01 00003fc0 00003e80 0000fe41     .....?...>..A...
2000028c:	0000fa01 00003ac0 00003b80 0000fb41     .....:...;..A...
2000029c:	00003900 0000f9c1 0000f881 00003840     .9..........@8..
200002ac:	00002800 0000e8c1 0000e981 00002940     .(..........@)..
200002bc:	0000eb01 00002bc0 00002a80 0000ea41     .....+...*..A...
200002cc:	0000ee01 00002ec0 00002f80 0000ef41     ........./..A...
200002dc:	00002d00 0000edc1 0000ec81 00002c40     .-..........@,..
200002ec:	0000e401 000024c0 00002580 0000e541     .....$...%..A...
200002fc:	00002700 0000e7c1 0000e681 00002640     .'..........@&..
2000030c:	00002200 0000e2c1 0000e381 00002340     ."..........@#..
2000031c:	0000e101 000021c0 00002080 0000e041     .....!... ..A...
2000032c:	0000a001 000060c0 00006180 0000a141     .....`...a..A...
2000033c:	00006300 0000a3c1 0000a281 00006240     .c..........@b..
2000034c:	00006600 0000a6c1 0000a781 00006740     .f..........@g..
2000035c:	0000a501 000065c0 00006480 0000a441     .....e...d..A...
2000036c:	00006c00 0000acc1 0000ad81 00006d40     .l..........@m..
2000037c:	0000af01 00006fc0 00006e80 0000ae41     .....o...n..A...
2000038c:	0000aa01 00006ac0 00006b80 0000ab41     .....j...k..A...
2000039c:	00006900 0000a9c1 0000a881 00006840     .i..........@h..
200003ac:	00007800 0000b8c1 0000b981 00007940     .x..........@y..
200003bc:	0000bb01 00007bc0 00007a80 0000ba41     .....{...z..A...
200003cc:	0000be01 00007ec0 00007f80 0000bf41     .....~......A...
200003dc:	00007d00 0000bdc1 0000bc81 00007c40     .}..........@|..
200003ec:	0000b401 000074c0 00007580 0000b541     .....t...u..A...
200003fc:	00007700 0000b7c1 0000b681 00007640     .w..........@v..
2000040c:	00007200 0000b2c1 0000b381 00007340     .r..........@s..
2000041c:	0000b101 000071c0 00007080 0000b041     .....q...p..A...
2000042c:	00005000 000090c1 00009181 00005140     .P..........@Q..
2000043c:	00009301 000053c0 00005280 00009241     .....S...R..A...
2000044c:	00009601 000056c0 00005780 00009741     .....V...W..A...
2000045c:	00005500 000095c1 00009481 00005440     .U..........@T..
2000046c:	00009c01 00005cc0 00005d80 00009d41     .....\...]..A...
2000047c:	00005f00 00009fc1 00009e81 00005e40     ._..........@^..
2000048c:	00005a00 00009ac1 00009b81 00005b40     .Z..........@[..
2000049c:	00009901 000059c0 00005880 00009841     .....Y...X..A...
200004ac:	00008801 000048c0 00004980 00008941     .....H...I..A...
200004bc:	00004b00 00008bc1 00008a81 00004a40     .K..........@J..
200004cc:	00004e00 00008ec1 00008f81 00004f40     .N..........@O..
200004dc:	00008d01 00004dc0 00004c80 00008c41     .....M...L..A...
200004ec:	00004400 000084c1 00008581 00004540     .D..........@E..
200004fc:	00008701 000047c0 00004680 00008641     .....G...F..A...
2000050c:	00008201 000042c0 00004380 00008341     .....B...C..A...
2000051c:	00004100 000081c1 00008081 00004040     .A..........@@..

2000052c <daysOfWeek>:
2000052c:	00088cd4 00088cdc 00088ce4 00088cec     ................
2000053c:	00088cf8 00088d04 00088d0c              ............

20000548 <months>:
20000548:	00088c68 00088c70 00088c7c 00088c84     h...p...|.......
20000558:	00088c8c 00088c90 00088c98 00088ca0     ................
20000568:	00088ca8 00088cb4 00088cbc 00088cc8     ................

20000578 <eprocs>:
20000578:	00089814 00089820 00089828 00089834     .... ...(...4...
20000588:	00089840 00089848 00089854 00089860     @...H...T...`...

20000598 <nvpsiz>:
20000598:	000897f4 00089794 000897a0 000897ac     ................
200005a8:	00000000 000897b8 00000000 000897c4     ................
200005b8:	00000000 000897d0 000897e8 00000000     ................
200005c8:	000897fc 00000000 00089808 00000000     ................

200005d8 <nvptyp>:
200005d8:	00089144 00089150 00089178 00089198     D...P...x.......
200005e8:	000891f4                                ....

200005ec <sramsiz>:
200005ec:	00089734 00089740 0008974c 00089758     4...@...L...X...
200005fc:	00089764 00089770 0008977c 00089788     d...p...|.......
2000060c:	00089794 000897a0 000897ac 000897b8     ................
2000061c:	000897c4 000897d0 000897dc 000897e8     ................

2000062c <_impure_ptr>:
2000062c:	20000630                                0.. 

20000630 <impure_data>:
20000630:	00000000 2000091c 20000984 200009ec     ....... ... ... 
	...
200006d8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200006e8:	0005deec 0000000b 00000000 00000000     ................
	...

20000a58 <__atexit_recursive_mutex>:
20000a58:	200018a4                                ... 

20000a5c <__global_locale>:
20000a5c:	00000043 00000000 00000000 00000000     C...............
	...
20000a7c:	00000043 00000000 00000000 00000000     C...............
	...
20000a9c:	00000043 00000000 00000000 00000000     C...............
	...
20000abc:	00000043 00000000 00000000 00000000     C...............
	...
20000adc:	00000043 00000000 00000000 00000000     C...............
	...
20000afc:	00000043 00000000 00000000 00000000     C...............
	...
20000b1c:	00000043 00000000 00000000 00000000     C...............
	...
20000b3c:	000875c5 00086cf1 00000000 000899fc     .u...l..........
20000b4c:	000898fc 00088a0c 00088a0c 00088a0c     ................
20000b5c:	00088a0c 00088a0c 00088a0c 00088a0c     ................
20000b6c:	00088a0c 00088a0c ffffffff ffffffff     ................
20000b7c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000ba4:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000bc8 <__malloc_av_>:
	...
20000bd0:	20000bc8 20000bc8 20000bd0 20000bd0     ... ... ... ... 
20000be0:	20000bd8 20000bd8 20000be0 20000be0     ... ... ... ... 
20000bf0:	20000be8 20000be8 20000bf0 20000bf0     ... ... ... ... 
20000c00:	20000bf8 20000bf8 20000c00 20000c00     ... ... ... ... 
20000c10:	20000c08 20000c08 20000c10 20000c10     ... ... ... ... 
20000c20:	20000c18 20000c18 20000c20 20000c20     ... ...  ..  .. 
20000c30:	20000c28 20000c28 20000c30 20000c30     (.. (.. 0.. 0.. 
20000c40:	20000c38 20000c38 20000c40 20000c40     8.. 8.. @.. @.. 
20000c50:	20000c48 20000c48 20000c50 20000c50     H.. H.. P.. P.. 
20000c60:	20000c58 20000c58 20000c60 20000c60     X.. X.. `.. `.. 
20000c70:	20000c68 20000c68 20000c70 20000c70     h.. h.. p.. p.. 
20000c80:	20000c78 20000c78 20000c80 20000c80     x.. x.. ... ... 
20000c90:	20000c88 20000c88 20000c90 20000c90     ... ... ... ... 
20000ca0:	20000c98 20000c98 20000ca0 20000ca0     ... ... ... ... 
20000cb0:	20000ca8 20000ca8 20000cb0 20000cb0     ... ... ... ... 
20000cc0:	20000cb8 20000cb8 20000cc0 20000cc0     ... ... ... ... 
20000cd0:	20000cc8 20000cc8 20000cd0 20000cd0     ... ... ... ... 
20000ce0:	20000cd8 20000cd8 20000ce0 20000ce0     ... ... ... ... 
20000cf0:	20000ce8 20000ce8 20000cf0 20000cf0     ... ... ... ... 
20000d00:	20000cf8 20000cf8 20000d00 20000d00     ... ... ... ... 
20000d10:	20000d08 20000d08 20000d10 20000d10     ... ... ... ... 
20000d20:	20000d18 20000d18 20000d20 20000d20     ... ...  ..  .. 
20000d30:	20000d28 20000d28 20000d30 20000d30     (.. (.. 0.. 0.. 
20000d40:	20000d38 20000d38 20000d40 20000d40     8.. 8.. @.. @.. 
20000d50:	20000d48 20000d48 20000d50 20000d50     H.. H.. P.. P.. 
20000d60:	20000d58 20000d58 20000d60 20000d60     X.. X.. `.. `.. 
20000d70:	20000d68 20000d68 20000d70 20000d70     h.. h.. p.. p.. 
20000d80:	20000d78 20000d78 20000d80 20000d80     x.. x.. ... ... 
20000d90:	20000d88 20000d88 20000d90 20000d90     ... ... ... ... 
20000da0:	20000d98 20000d98 20000da0 20000da0     ... ... ... ... 
20000db0:	20000da8 20000da8 20000db0 20000db0     ... ... ... ... 
20000dc0:	20000db8 20000db8 20000dc0 20000dc0     ... ... ... ... 
20000dd0:	20000dc8 20000dc8 20000dd0 20000dd0     ... ... ... ... 
20000de0:	20000dd8 20000dd8 20000de0 20000de0     ... ... ... ... 
20000df0:	20000de8 20000de8 20000df0 20000df0     ... ... ... ... 
20000e00:	20000df8 20000df8 20000e00 20000e00     ... ... ... ... 
20000e10:	20000e08 20000e08 20000e10 20000e10     ... ... ... ... 
20000e20:	20000e18 20000e18 20000e20 20000e20     ... ...  ..  .. 
20000e30:	20000e28 20000e28 20000e30 20000e30     (.. (.. 0.. 0.. 
20000e40:	20000e38 20000e38 20000e40 20000e40     8.. 8.. @.. @.. 
20000e50:	20000e48 20000e48 20000e50 20000e50     H.. H.. P.. P.. 
20000e60:	20000e58 20000e58 20000e60 20000e60     X.. X.. `.. `.. 
20000e70:	20000e68 20000e68 20000e70 20000e70     h.. h.. p.. p.. 
20000e80:	20000e78 20000e78 20000e80 20000e80     x.. x.. ... ... 
20000e90:	20000e88 20000e88 20000e90 20000e90     ... ... ... ... 
20000ea0:	20000e98 20000e98 20000ea0 20000ea0     ... ... ... ... 
20000eb0:	20000ea8 20000ea8 20000eb0 20000eb0     ... ... ... ... 
20000ec0:	20000eb8 20000eb8 20000ec0 20000ec0     ... ... ... ... 
20000ed0:	20000ec8 20000ec8 20000ed0 20000ed0     ... ... ... ... 
20000ee0:	20000ed8 20000ed8 20000ee0 20000ee0     ... ... ... ... 
20000ef0:	20000ee8 20000ee8 20000ef0 20000ef0     ... ... ... ... 
20000f00:	20000ef8 20000ef8 20000f00 20000f00     ... ... ... ... 
20000f10:	20000f08 20000f08 20000f10 20000f10     ... ... ... ... 
20000f20:	20000f18 20000f18 20000f20 20000f20     ... ...  ..  .. 
20000f30:	20000f28 20000f28 20000f30 20000f30     (.. (.. 0.. 0.. 
20000f40:	20000f38 20000f38 20000f40 20000f40     8.. 8.. @.. @.. 
20000f50:	20000f48 20000f48 20000f50 20000f50     H.. H.. P.. P.. 
20000f60:	20000f58 20000f58 20000f60 20000f60     X.. X.. `.. `.. 
20000f70:	20000f68 20000f68 20000f70 20000f70     h.. h.. p.. p.. 
20000f80:	20000f78 20000f78 20000f80 20000f80     x.. x.. ... ... 
20000f90:	20000f88 20000f88 20000f90 20000f90     ... ... ... ... 
20000fa0:	20000f98 20000f98 20000fa0 20000fa0     ... ... ... ... 
20000fb0:	20000fa8 20000fa8 20000fb0 20000fb0     ... ... ... ... 
20000fc0:	20000fb8 20000fb8 20000fc0 20000fc0     ... ... ... ... 

20000fd0 <__malloc_sbrk_base>:
20000fd0:	ffffffff                                ....

20000fd4 <__malloc_trim_threshold>:
20000fd4:	00020000                                ....
